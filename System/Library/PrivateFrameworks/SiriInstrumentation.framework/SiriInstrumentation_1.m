uint64_t CDASchemaCDAElectionTimerEndedReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setState:v23];
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CDASchemaCDAParticipantReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_50;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_53:
        [a1 setGoodnessScore:v23];
        goto LABEL_64;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_58:
        [a1 setDeviceClass:v31];
        goto LABEL_64;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_63:
        [a1 setProductType:v38];
        goto LABEL_64;
      case 4u:
        v39 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v39, a2) & 1) == 0) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setElectionParticipantId:", v39, 0, 0);
        goto LABEL_48;
      case 5u:
        v39 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v39, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRotatedElectionParticipantId:", v39, 0, 0);
LABEL_48:

LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_66:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_64;
    }
  }
}

uint64_t CDASchemaCDAScoreBoostersReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_85;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_88:
          [a1 setDeviceBoost:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_93:
          [a1 setRecentUnlockBoost:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_98:
          [a1 setRecentRaiseToWakeBoost:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_103:
          [a1 setRecentSiriRequestBoost:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_108:
          [a1 setRecentMotionBoost:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_113:
          [a1 setRecentPlaybackBoost:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v62 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v62 = 0;
          }
LABEL_117:
          [a1 setIsTrump:v62 != 0];
          continue;
        case 8u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          while (2)
          {
            uint64_t v69 = *v3;
            unint64_t v70 = *(void *)(a2 + v69);
            if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
              *(void *)(a2 + v69) = v70 + 1;
              v68 |= (unint64_t)(v71 & 0x7F) << v66;
              if (v71 < 0)
              {
                v66 += 7;
                BOOL v14 = v67++ >= 9;
                if (v14)
                {
                  uint64_t v72 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v72 = 0;
          }
          else {
            uint64_t v72 = v68;
          }
LABEL_122:
          [a1 setTrumpReason:v72];
          continue;
        case 9u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v75 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v76 = *v3;
        unint64_t v77 = *(void *)(a2 + v76);
        if (v77 == -1 || v77 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
        *(void *)(a2 + v76) = v77 + 1;
        v75 |= (unint64_t)(v78 & 0x7F) << v73;
        if ((v78 & 0x80) == 0) {
          goto LABEL_124;
        }
        v73 += 7;
        BOOL v14 = v74++ >= 9;
        if (v14)
        {
          uint64_t v79 = 0;
          goto LABEL_127;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_124:
      uint64_t v79 = *(unsigned char *)(a2 + *v5) ? 0 : v75;
LABEL_127:
      [a1 setRecentAlarmBoost:v79];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CLPInstSchemaCLPCDMReplaySampleContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 101)
      {
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCDMReplaySampleEnded);
          if (!PBReaderPlaceMark() || (CLPInstSchemaCLPCDMReplaySampleEndedReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEnded:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 103)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCDMReplaySampleFailed);
          if (!PBReaderPlaceMark() || (CLPInstSchemaCLPCDMReplaySampleFailedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(SISchemaUUID);
          if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContextId:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCDMReplaySampleStarted);
          if (!PBReaderPlaceMark() || (CLPInstSchemaCLPCDMReplaySampleStartedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCDMReplaySampleEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v23 = objc_alloc_init(CLPInstSchemaServiceNodeComparatorResult);
        if (!PBReaderPlaceMark()
          || !CLPInstSchemaServiceNodeComparatorResultReadFrom(v23, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v23) {
          objc_msgSend(a1, "addComparatorResults:", v23, 0, 0);
        }
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_35;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_37:
        [a1 setIsReplaySuccessful:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCDMReplaySampleFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCDMReplaySampleStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalRequestId:", v17, 0, 0);
        goto LABEL_42;
      case 2u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setResultCandidateId:v17];
        goto LABEL_42;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_47:
        [a1 setUtteranceRepetitionsInCalendarWeek:v25];
        goto LABEL_52;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_51:
        [a1 setWasHabitualUserDuringCalendarWeek:v28 != 0];
        goto LABEL_52;
      case 5u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrpId:", v17, 0, 0);
LABEL_42:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_54:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_52;
    }
  }
}

BOOL CLPInstSchemaCLPCDMReplayTaskContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 102) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        char v17 = objc_alloc_init(CLPInstSchemaCLPCDMReplayTaskStarted);
        if (!PBReaderPlaceMark() || (CLPInstSchemaCLPCDMReplayTaskStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(CLPInstSchemaCLPCDMReplayTaskEnded);
    if (!PBReaderPlaceMark() || (CLPInstSchemaCLPCDMReplayTaskEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCDMReplayTaskEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReplayedSampleCount:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCDMReplayTaskStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaAsset);
        if (!PBReaderPlaceMark() || (SISchemaAssetReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPluginTaskAsset:", v17, 0, 0);
        goto LABEL_39;
      case 2u:
        char v17 = objc_alloc_init(SISchemaAsset);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !SISchemaAssetReadFrom(v17, a2)) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAvailableSiriAssets:", v17, 0, 0);
        }
        goto LABEL_39;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_44:
        objc_msgSend(a1, "setReplayType:", v25, v26, v27);
        goto LABEL_45;
      case 4u:
        char v17 = objc_alloc_init(CLPInstSchemaHabitualUsageByCalendarWeekInformation);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (PBReaderPlaceMark()
          && CLPInstSchemaHabitualUsageByCalendarWeekInformationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addHabitualUsage:", v17, 0, 0);
          }
LABEL_39:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

BOOL CLPInstSchemaCLPClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        char v17 = objc_alloc_init(CLPInstSchemaCLPNLv4SampleEvaluationContext);
        if (!PBReaderPlaceMark() || !CLPInstSchemaCLPNLv4SampleEvaluationContextReadFrom(v17, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNlv4SampleEvaluationContext:", v17, 0, 0);
        goto LABEL_41;
      case 'f':
        char v17 = objc_alloc_init(CLPInstSchemaCLPNLv4TaskEvaluationContext);
        if (!PBReaderPlaceMark() || !CLPInstSchemaCLPNLv4TaskEvaluationContextReadFrom(v17, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNlv4TaskEvaluationContext:", v17, 0, 0);
        goto LABEL_41;
      case 'g':
        char v17 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentSampleClassificationContext);
        if (!PBReaderPlaceMark()
          || !CLPInstSchemaCLPCurareAppIntentSampleClassificationContextReadFrom(v17, a2))
        {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurareAppIntentSampleClassificationContext:", v17, 0, 0);
        goto LABEL_41;
      case 'h':
        char v17 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentTaskClassificationContext);
        if (!PBReaderPlaceMark()
          || !CLPInstSchemaCLPCurareAppIntentTaskClassificationContextReadFrom(v17, a2))
        {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurareAppIntentTaskClassificationContext:", v17, 0, 0);
        goto LABEL_41;
      case 'i':
        char v17 = objc_alloc_init(CLPInstSchemaCLPCDMReplaySampleContext);
        if (!PBReaderPlaceMark() || !CLPInstSchemaCLPCDMReplaySampleContextReadFrom(v17, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCdmReplaySampleContext:", v17, 0, 0);
        goto LABEL_41;
      case 'j':
        char v17 = objc_alloc_init(CLPInstSchemaCLPCDMReplayTaskContext);
        if (!PBReaderPlaceMark() || !CLPInstSchemaCLPCDMReplayTaskContextReadFrom(v17, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCdmReplayTaskContext:", v17, 0, 0);
        goto LABEL_41;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v17 = objc_alloc_init(CLPInstSchemaCLPClientEventMetadata);
        if PBReaderPlaceMark() && (CLPInstSchemaCLPClientEventMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_41:

          goto LABEL_42;
        }
LABEL_48:

        return 0;
    }
  }
}

uint64_t CLPInstSchemaCLPClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setClpId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CLPInstSchemaCLPCurareAppIntentSampleClassificationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 101)
      {
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentSampleClassificationEnded);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPCurareAppIntentSampleClassificationEndedReadFrom(v18, a2, v19) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEnded:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 103)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentSampleClassificationFailed);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPCurareAppIntentSampleClassificationFailedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(SISchemaUUID);
          if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContextId:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentSampleClassificationStarted);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPCurareAppIntentSampleClassificationStartedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCurareAppIntentSampleClassificationEndedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setProbability:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t CLPInstSchemaCLPCurareAppIntentSampleClassificationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCurareAppIntentSampleClassificationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalRequestId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CLPInstSchemaCLPCurareAppIntentTaskClassificationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 102) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        char v17 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentTaskClassificationStarted);
        if (!PBReaderPlaceMark()
          || (CLPInstSchemaCLPCurareAppIntentTaskClassificationStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(CLPInstSchemaCLPCurareAppIntentTaskClassificationEnded);
    if (!PBReaderPlaceMark()
      || (CLPInstSchemaCLPCurareAppIntentTaskClassificationEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCurareAppIntentTaskClassificationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setSampleCount:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setClassifiedSampleCount:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setPositiveCount:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPCurareAppIntentTaskClassificationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_39;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_42:
        [a1 setClassifierModelType:v23];
        goto LABEL_43;
      case 2u:
        char v25 = objc_alloc_init(SISchemaAsset);
        if (!PBReaderPlaceMark() || (SISchemaAssetReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setClassifierModelAsset:", v25, 0, 0);
        goto LABEL_37;
      case 3u:
        char v25 = objc_alloc_init(SISchemaAsset);
        if (!PBReaderPlaceMark() || (SISchemaAssetReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNlv4AssetVersion:", v25, 0, 0);
        goto LABEL_37;
      case 4u:
        char v25 = objc_alloc_init(SISchemaAsset);
        if PBReaderPlaceMark() && (SISchemaAssetReadFrom(v25, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNlv4AssetVersionOverride:", v25, 0, 0);
LABEL_37:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

BOOL CLPInstSchemaCLPNLv4SampleEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 101)
      {
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPNLv4SampleEvaluationEnded);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPNLv4SampleEvaluationEndedReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEnded:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 103)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPNLv4SampleEvaluationFailed);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPNLv4SampleEvaluationFailedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(SISchemaUUID);
          if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContextId:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(CLPInstSchemaCLPNLv4SampleEvaluationStarted);
          if (!PBReaderPlaceMark()
            || (CLPInstSchemaCLPNLv4SampleEvaluationStartedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPNLv4SampleEvaluationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_64;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_66;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_66:
          [a1 setEvaluated:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_70:
          [a1 setEvaluationResultOnTheFirstUserParse:v26 != 0];
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
LABEL_74:
          [a1 setUserStatedTaskOnTheFirstUserParse:v32 != 0];
          continue;
        case 4u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  uint64_t v42 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v38;
          }
LABEL_79:
          [a1 setMatchedIndex:v42];
          continue;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
LABEL_83:
          [a1 setEvaluationResult:v45 != 0];
          continue;
        case 6u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v52 = *v3;
        unint64_t v53 = *(void *)(a2 + v52);
        if (v53 == -1 || v53 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
        *(void *)(a2 + v52) = v53 + 1;
        v51 |= (unint64_t)(v54 & 0x7F) << v49;
        if ((v54 & 0x80) == 0) {
          goto LABEL_85;
        }
        v49 += 7;
        BOOL v14 = v50++ >= 9;
        if (v14)
        {
          uint64_t v51 = 0;
          goto LABEL_87;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v51 = 0;
      }
LABEL_87:
      [a1 setUserProfileSandboxRequested:v51 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPNLv4SampleEvaluationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_49;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v26 = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_51:
        [a1 setUserProfileSandboxFailure:v26 != 0];
      }
      else if (v17 == 2)
      {
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (1)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
          *(void *)(a2 + v33) = v34 + 1;
          v32 |= (unint64_t)(v35 & 0x7F) << v30;
          if ((v35 & 0x80) == 0) {
            goto LABEL_53;
          }
          v30 += 7;
          BOOL v14 = v31++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_55;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_55:
        [a1 setXpcClientDisconnected:v32 != 0];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_47:
        [a1 setXpcClientNLURequestTimeout:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPNLv4SampleEvaluationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_46;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_49:
        [a1 setBatchNumChunks:v31];
      }
      else if (v17 == 3)
      {
        uint64_t v32 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v32, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSyntheticRequestId:", v32, 0, 0);
      }
      else if (v17 == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_41;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_44:
        [a1 setBatchChunkId:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CLPInstSchemaCLPNLv4TaskEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 102) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        unint64_t v17 = objc_alloc_init(CLPInstSchemaCLPNLv4TaskEvaluationStarted);
        if (!PBReaderPlaceMark() || (CLPInstSchemaCLPNLv4TaskEvaluationStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(CLPInstSchemaCLPNLv4TaskEvaluationEnded);
    if (!PBReaderPlaceMark() || (CLPInstSchemaCLPNLv4TaskEvaluationEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPNLv4TaskEvaluationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
        {
          double v30 = *(double *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v30 = 0.0;
        }
        [a1 setAccuracyOnTheFirstUserParseCount:v30];
      }
      else if (v19 == 2)
      {
        uint64_t v31 = *v3;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
        {
          double v33 = *(double *)(*(void *)(a2 + *v7) + v32);
          *(void *)(a2 + v31) = v32 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v33 = 0.0;
        }
        [a1 setAccuracyOnAnyUserParse:v33];
      }
      else if (v19 == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_37;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v27 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v27 = *(unsigned char *)(a2 + *v5) ? 0 : v22;
LABEL_40:
        [a1 setEvaluationCount:v27];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaCLPNLv4TaskEvaluationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_74;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_74:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_77:
        [a1 setEvaluationType:v23];
        goto LABEL_102;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_82:
        [a1 setEvaluationEnvironment:v31];
        goto LABEL_102;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_87:
        [a1 setExperimentType:v38];
        goto LABEL_102;
      case 4u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v41;
        }
LABEL_92:
        [a1 setRecipeType:v45];
        goto LABEL_102;
      case 5u:
        uint64_t v46 = objc_alloc_init(SISchemaAsset);
        if (!PBReaderPlaceMark() || (SISchemaAssetReadFrom(v46, a2) & 1) == 0) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNlv4AssetVersion:", v46, 0, 0);
        goto LABEL_72;
      case 6u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (v14)
              {
                uint64_t v53 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v53 = 0;
        }
        else {
          uint64_t v53 = v49;
        }
LABEL_97:
        [a1 setSampleCount:v53];
        goto LABEL_102;
      case 7u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (2)
        {
          uint64_t v57 = *v3;
          unint64_t v58 = *(void *)(a2 + v57);
          if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
            *(void *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v14 = v55++ >= 9;
              if (v14)
              {
                uint64_t v56 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
LABEL_101:
        [a1 setIsDebugTask:v56 != 0];
        goto LABEL_102;
      case 8u:
        uint64_t v46 = objc_alloc_init(SISchemaAsset);
        if (!PBReaderPlaceMark() || (SISchemaAssetReadFrom(v46, a2) & 1) == 0) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSyntheticDatasetVersion:", v46, 0, 0);
        goto LABEL_72;
      case 9u:
        uint64_t v46 = objc_alloc_init(SISchemaAsset);
        if PBReaderPlaceMark() && (SISchemaAssetReadFrom(v46, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNlv4AssetVersionOverride:", v46, 0, 0);
LABEL_72:

LABEL_102:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_104:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_102;
    }
  }
}

uint64_t CLPInstSchemaHabitualUsageByCalendarWeekInformationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v29 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        uint64_t v29 = *(unsigned char *)(a2 + *v5) ? 0 : v25;
LABEL_44:
        [a1 setCalendarWeekNumber:v29];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        [a1 setWasHabitualUserDuringCalendarWeek:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CLPInstSchemaServiceNodeComparatorResultReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_57;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_60:
          [a1 setComparatorName:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_64;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_64:
          [a1 setIsValidOriginalItem:v27 != 0];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_68:
          [a1 setIsValidReplayedItem:v33 != 0];
          continue;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_72:
          [a1 setIsMatched:v39 != 0];
          continue;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v46 = *v3;
        unint64_t v47 = *(void *)(a2 + v46);
        if (v47 == -1 || v47 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
        *(void *)(a2 + v46) = v47 + 1;
        v45 |= (unint64_t)(v48 & 0x7F) << v43;
        if ((v48 & 0x80) == 0) {
          goto LABEL_74;
        }
        v43 += 7;
        BOOL v14 = v44++ >= 9;
        if (v14)
        {
          uint64_t v49 = 0;
          goto LABEL_77;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_74:
      uint64_t v49 = *(unsigned char *)(a2 + *v5) ? 0 : v45;
LABEL_77:
      [a1 addMismatchedFields:v49];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVActionCandidateReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionCandidateId:", v17, 0, 0);
        goto LABEL_47;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_52:
        [a1 setPlugin:v25];
        goto LABEL_58;
      case 3u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParseHypothesisId:", v17, 0, 0);
        goto LABEL_47;
      case 4u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPommesId:", v17, 0, 0);
        goto LABEL_47;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_57:
        [a1 setAffinityScore:v32];
        goto LABEL_58;
      case 6u:
        char v17 = objc_alloc_init(CNVSchemaCNVLinkMetadata);
        if PBReaderPlaceMark() && (CNVSchemaCNVLinkMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLinkMetadata:", v17, 0, 0);
LABEL_47:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_60:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

uint64_t CNVSchemaCNVActionCandidatesCollatedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(CNVSchemaCollatedActionCandidate);
        if (!PBReaderPlaceMark() || !CNVSchemaCollatedActionCandidateReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addCollatedActionCandidates:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVActionCandidatesGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(CNVSchemaCNVActionCandidate);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVActionCandidateReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addActionCandidates:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVActionCandidatesGeneratedTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(CNVSchemaCNVLinkMetadataTier1);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVLinkMetadataTier1ReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addMetadataTier1:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(CNVSchemaCNVClientEventMetadata);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVClientEventMetadataReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
        goto LABEL_78;
      case 2u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentReformationContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVIntentReformationContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentReformationContext:", v17, 0, 0);
        goto LABEL_78;
      case 3u:
        char v17 = objc_alloc_init(CNVSchemaCNVUsoGraphTier1);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVUsoGraphTier1ReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCnvUsoGraphTier1:", v17, 0, 0);
        goto LABEL_78;
      case 4u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentEagerExecutionContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVIntentEagerExecutionContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentEagerExecutionContext:", v17, 0, 0);
        goto LABEL_78;
      case 5u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentFinalExecutionContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVIntentFinalExecutionContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentFinalExecutionContext:", v17, 0, 0);
        goto LABEL_78;
      case 6u:
        char v17 = objc_alloc_init(CNVSchemaCNVActionCandidatesGenerated);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVActionCandidatesGeneratedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionCandidatesGenerated:", v17, 0, 0);
        goto LABEL_78;
      case 7u:
        char v17 = objc_alloc_init(CNVSchemaCNVActionCandidatesGeneratedTier1);
        if (!PBReaderPlaceMark()
          || (CNVSchemaCNVActionCandidatesGeneratedTier1ReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionCandidatesGeneratedTier1:", v17, 0, 0);
        goto LABEL_78;
      case 8u:
        char v17 = objc_alloc_init(CNVSchemaCNVActionCandidatesCollated);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVActionCandidatesCollatedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionCandidatesCollated:", v17, 0, 0);
        goto LABEL_78;
      case 9u:
        char v17 = objc_alloc_init(CNVSchemaCNVDisambiguationContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVDisambiguationContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDisambiguationContext:", v17, 0, 0);
        goto LABEL_78;
      case 0xAu:
        char v17 = objc_alloc_init(CNVSchemaCNVExecutionOverridesEvaluated);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVExecutionOverridesEvaluatedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExecutionOverridesEvaluated:", v17, 0, 0);
        goto LABEL_78;
      case 0xBu:
        char v17 = objc_alloc_init(CNVSchemaCNVExecutionPrepareContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVExecutionPrepareContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExecutionPrepareContext:", v17, 0, 0);
        goto LABEL_78;
      case 0xCu:
        char v17 = objc_alloc_init(CNVSchemaCNVFlowPluginLoadContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVFlowPluginLoadContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowPluginLoadContext:", v17, 0, 0);
        goto LABEL_78;
      case 0xDu:
        char v17 = objc_alloc_init(CNVSchemaCNVFindFlowContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVFindFlowContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFindFlowContext:", v17, 0, 0);
        goto LABEL_78;
      case 0xEu:
        char v17 = objc_alloc_init(CNVSchemaCNVFlowPluginInputContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVFlowPluginInputContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowPluginInputContext:", v17, 0, 0);
        goto LABEL_78;
      case 0xFu:
        char v17 = objc_alloc_init(CNVSchemaCNVFlowPluginExecutionContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVFlowPluginExecutionContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowPluginExecutionContext:", v17, 0, 0);
        goto LABEL_78;
      case 0x10u:
        char v17 = objc_alloc_init(CNVSchemaCNVPreFlowPrepareContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVPreFlowPrepareContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPreFlowPrepareContext:", v17, 0, 0);
        goto LABEL_78;
      case 0x11u:
        char v17 = objc_alloc_init(CNVSchemaCNVPostFlowPrepareContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVPostFlowPrepareContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPostFlowPrepareContext:", v17, 0, 0);
        goto LABEL_78;
      case 0x12u:
        char v17 = objc_alloc_init(CNVSchemaCNVExecutionCommitContext);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVExecutionCommitContextReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExecutionCommitContext:", v17, 0, 0);
        goto LABEL_78;
      case 0x13u:
        char v17 = objc_alloc_init(CNVSchemaCNVDecisionEngineResponseReported);
        if PBReaderPlaceMark() && (CNVSchemaCNVDecisionEngineResponseReportedReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDecisionEngineResponseReported:", v17, 0, 0);
LABEL_78:

LABEL_79:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_79;
    }
  }
}

BOOL CNVSchemaCNVClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCnvId:", v17, 0, 0);
        goto LABEL_34;
      case 2u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setResultCandidateId:v17];
        goto LABEL_34;
      case 3u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestId:", v17, 0, 0);
        goto LABEL_34;
      case 4u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrpId:", v17, 0, 0);
        goto LABEL_34;
      case 5u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSubRequestId:", v17, 0, 0);
LABEL_34:

LABEL_35:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_38:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
    }
  }
}

BOOL CNVSchemaCNVDisambiguationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(CNVSchemaCNVDisambiguationFailed);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVDisambiguationFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(CNVSchemaCNVDisambiguationDialogGenerated);
        if (!PBReaderPlaceMark() || !CNVSchemaCNVDisambiguationDialogGeneratedReadFrom(v18, a2)) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(CNVSchemaCNVDisambiguationFollowupHandled);
    if (!PBReaderPlaceMark() || (CNVSchemaCNVDisambiguationFollowupHandledReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVDisambiguationDialogGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || !SISchemaUUIDReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addActionCandidateIds:", v17, 0, 0);
        }
        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setDialogType:v17];
LABEL_25:

    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVDisambiguationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVDisambiguationFollowupHandledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionCandidateId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVExecutionOverridesEvaluatedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setExecutionOverrideDecision:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentEagerExecutionCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setCancellationReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVIntentEagerExecutionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentEagerExecutionStarted);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentEagerExecutionStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentEagerExecutionEnded);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentEagerExecutionEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentEagerExecutionFailed);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentEagerExecutionFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentEagerExecutionCancelled);
        if PBReaderPlaceMark() && (CNVSchemaCNVIntentEagerExecutionCancelledReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCancelled:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t CNVSchemaCNVIntentEagerExecutionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentEagerExecutionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentEagerExecutionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setPlugin:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentFinalExecutionCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setCancellationReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVIntentFinalExecutionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentFinalExecutionStarted);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentFinalExecutionStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_36;
      case 2u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentFinalExecutionEnded);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentFinalExecutionEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_36;
      case 3u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentFinalExecutionFailed);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentFinalExecutionFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_36;
      case 4u:
        char v17 = objc_alloc_init(CNVSchemaCNVIntentFinalExecutionCancelled);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentFinalExecutionCancelledReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCancelled:", v17, 0, 0);
        goto LABEL_36;
      case 5u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setHypothesisId:", v17, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t CNVSchemaCNVIntentFinalExecutionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setEagerStatus:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setBypassReason:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setMaxRss:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentFinalExecutionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentFinalExecutionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setPlugin:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setStackDepth:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVIntentReformationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(CNVSchemaCNVIntentReformationFailed);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentReformationFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(CNVSchemaCNVIntentReformationStarted);
        if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentReformationStartedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(CNVSchemaCNVIntentReformationEnded);
    if (!PBReaderPlaceMark() || (CNVSchemaCNVIntentReformationEndedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentReformationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(USOSchemaUSOGraph);
        if (!PBReaderPlaceMark() || !USOSchemaUSOGraphReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setReformedIntent:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentReformationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVIntentReformationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setTransformer:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setTargetPlugin:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVLinkMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        unsigned int v25 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_36;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_39:
            [a1 setSystemProtocol:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        PBReaderReadString();
        unsigned int v25 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setLinkActionId:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t SCSchemaSCUndoCheckedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SCSchemaSCCheckUndoResponse);
        if (!PBReaderPlaceMark() || (SCSchemaSCCheckUndoResponseReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCheckUndoResponse:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCNVLinkMetadataTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setAppBundleId:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t CNVSchemaCNVUsoGraphTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(USOSchemaUSOGraphTier1);
        if (!PBReaderPlaceMark() || !USOSchemaUSOGraphTier1ReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUsoGraphTier1:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL CNVSchemaCollatedActionCandidateReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPrimaryActionCandidateId:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || !SISchemaUUIDReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addAlternativeActionCandidateIds:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DHTSchemaDHTDeleteTriggerReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setId:", v17, 0, 0);
        goto LABEL_30;
      case 2u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechId:", v17, 0, 0);
        goto LABEL_30;
      case 3u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSiriDeviceId:", v17, 0, 0);
LABEL_30:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_49:
        [a1 setDeleteTimestampMs:v25];
        goto LABEL_55;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_54:
        [a1 setDeletionTriggerEvent:v32];
        goto LABEL_55;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

uint64_t DHTSchemaDHTServerEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        unint64_t v17 = objc_alloc_init(DHTSchemaDHTDeleteTrigger);
        if (!PBReaderPlaceMark() || (DHTSchemaDHTDeleteTriggerReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDeleteTrigger:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DIMSchemaDIMClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMDeviceFixedContext);
        if (!PBReaderPlaceMark() || (DIMSchemaDIMDeviceFixedContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDeviceFixedContext:", v17, 0, 0);
        goto LABEL_42;
      case 'f':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMSiriAccountInformation);
        if (!PBReaderPlaceMark() || !DIMSchemaDIMSiriAccountInformationReadFrom(v17, a2)) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriAccountInformation:", v17, 0, 0);
        goto LABEL_42;
      case 'g':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMLocaleNotRecognized);
        if (!PBReaderPlaceMark() || (DIMSchemaDIMLocaleNotRecognizedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocaleNotRecognized:", v17, 0, 0);
        goto LABEL_42;
      case 'h':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMOnDeviceDigest);
        if (!PBReaderPlaceMark() || (DIMSchemaDIMOnDeviceDigestReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOnDeviceDigest:", v17, 0, 0);
        goto LABEL_42;
      case 'i':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMEphemeralIdentifiers);
        if (!PBReaderPlaceMark() || (DIMSchemaDIMEphemeralIdentifiersReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEphemeralIdentifiers:", v17, 0, 0);
        goto LABEL_42;
      case 'j':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMEphemeralToAggregationIdentifierMap);
        if (!PBReaderPlaceMark()
          || (DIMSchemaDIMEphemeralToAggregationIdentifierMapReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEphemeralToAggregationIdentifierMap:", v17, 0, 0);
        goto LABEL_42;
      case 'k':
        unint64_t v17 = objc_alloc_init(DIMSchemaDIMExperimentContext);
        if PBReaderPlaceMark() && (DIMSchemaDIMExperimentContextReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setExperimentContext:", v17, 0, 0);
LABEL_42:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_43;
    }
  }
}

uint64_t DIMSchemaDIMDeviceFixedContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_124;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_127;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_124:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_127:
        [a1 setSystemLocale:v26];
        goto LABEL_105;
      case 2u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_132:
        [a1 setSiriInputLocale:v35];
        goto LABEL_105;
      case 3u:
        unsigned int v27 = objc_alloc_init(SISchemaVoiceSettings);
        if (!PBReaderPlaceMark() || (SISchemaVoiceSettingsReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriVoiceSettings:", v27, 0, 0);
        goto LABEL_104;
      case 4u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v38;
        }
LABEL_137:
        [a1 setDataSharingOptInState:v43];
        goto LABEL_105;
      case 5u:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        [a1 setTimezoneOffset:v27];
        goto LABEL_104;
      case 6u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
        else {
          uint64_t v51 = v46;
        }
LABEL_142:
        [a1 setCountryCode:v51];
        goto LABEL_105;
      case 7u:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        [a1 setDeviceType:v27];
        goto LABEL_104;
      case 8u:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        [a1 setSystemBuild:v27];
        goto LABEL_104;
      case 9u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          uint64_t v56 = *(void *)(a2 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v15 = v53++ >= 9;
              if (v15)
              {
                uint64_t v54 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v54 = 0;
        }
LABEL_146:
        [a1 setIsStoreDemoMode:v54 != 0];
        goto LABEL_105;
      case 0xAu:
        uint64_t v59 = *v3;
        unint64_t v60 = *(void *)(a2 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFF7 && v60 + 8 <= *(void *)(a2 + *v4))
        {
          double v61 = *(double *)(*(void *)(a2 + *v7) + v60);
          *(void *)(a2 + v59) = v60 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v61 = 0.0;
        }
        [a1 setTimeIntervalSince1970:v61];
        goto LABEL_105;
      case 0xBu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        while (2)
        {
          uint64_t v65 = *v3;
          uint64_t v66 = *(void *)(a2 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v15 = v63++ >= 9;
              if (v15)
              {
                uint64_t v64 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
LABEL_150:
        [a1 setIsLowPowerModeEnabled:v64 != 0];
        goto LABEL_105;
      case 0xCu:
        unsigned int v27 = objc_alloc_init(SISchemaISOLocale);
        if (!PBReaderPlaceMark() || (SISchemaISOLocaleReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSystemLocaleV2:", v27, 0, 0);
        goto LABEL_104;
      case 0xDu:
        unsigned int v27 = objc_alloc_init(SISchemaISOLocale);
        if (!PBReaderPlaceMark() || (SISchemaISOLocaleReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriInputLocaleV2:", v27, 0, 0);
        goto LABEL_104;
      case 0xEu:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        while (2)
        {
          uint64_t v72 = *v3;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
            *(void *)(a2 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v15 = v70++ >= 9;
              if (v15)
              {
                uint64_t v76 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v76 = 0;
        }
        else {
          uint64_t v76 = v71;
        }
LABEL_155:
        [a1 setProgramCode:v76];
        goto LABEL_105;
      case 0xFu:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        [a1 setDataCollectionId:v27];
        goto LABEL_104;
      case 0x10u:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        [a1 setEffectiveSystemLanguage:v27];
        goto LABEL_104;
      case 0x11u:
        PBReaderReadString();
        unsigned int v27 = (SISchemaVoiceSettings *)objc_claimAutoreleasedReturnValue();
        if (v27) {
          [a1 addPreferredLanguages:v27];
        }
        goto LABEL_104;
      case 0x12u:
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        while (2)
        {
          uint64_t v80 = *v3;
          uint64_t v81 = *(void *)(a2 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v81);
            *(void *)(a2 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v15 = v78++ >= 9;
              if (v15)
              {
                uint64_t v84 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v84 = 0;
        }
        else {
          uint64_t v84 = v79;
        }
LABEL_160:
        [a1 setHomeKitConfiguration:v84];
        goto LABEL_105;
      case 0x13u:
        unsigned int v27 = objc_alloc_init(DIMSchemaEntitySyncSettings);
        if (!PBReaderPlaceMark() || (DIMSchemaEntitySyncSettingsReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntitySyncSettings:", v27, 0, 0);
        goto LABEL_104;
      case 0x14u:
        unsigned int v27 = objc_alloc_init(DIMSchemaDIMDataSharingSettings);
        if (!PBReaderPlaceMark() || (DIMSchemaDIMDataSharingSettingsReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_174;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDataSharingSettings:", v27, 0, 0);
        goto LABEL_104;
      case 0x15u:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        while (2)
        {
          uint64_t v88 = *v3;
          uint64_t v89 = *(void *)(a2 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
            *(void *)(a2 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v15 = v86++ >= 9;
              if (v15)
              {
                uint64_t v92 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v92 = 0;
        }
        else {
          uint64_t v92 = v87;
        }
LABEL_165:
        [a1 setAvailableDictationKeyboards:v92];
        goto LABEL_105;
      case 0x16u:
        char v93 = 0;
        unsigned int v94 = 0;
        uint64_t v95 = 0;
        while (2)
        {
          uint64_t v96 = *v3;
          uint64_t v97 = *(void *)(a2 + v96);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(a2 + *v7) + v97);
            *(void *)(a2 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              BOOL v15 = v94++ >= 9;
              if (v15)
              {
                uint64_t v100 = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v100 = 0;
        }
        else {
          uint64_t v100 = v95;
        }
LABEL_170:
        [a1 setSearchDataOptOutState:v100];
        goto LABEL_105;
      default:
        if ((v10 >> 3) != 100)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_105:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unsigned int v27 = objc_alloc_init(DIMSchemaDIMWatchDeviceAttributes);
        if PBReaderPlaceMark() && (DIMSchemaDIMWatchDeviceAttributesReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setWatchDeviceAttributes:", v27, 0, 0);
LABEL_104:

          goto LABEL_105;
        }
LABEL_174:

        return 0;
    }
  }
}

uint64_t DIMSchemaDIMLocaleNotRecognizedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = PBReaderReadString();
        [a1 setUnknownLocale:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DIMSchemaDIMSiriAccountInformationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        char v18 = PBReaderReadString();
        [a1 setSiriSpeechId:v18];
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setSiriDeviceId:v18];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = PBReaderReadString();
    [a1 setSiriUserId:v18];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DIMSchemaDIMWatchDeviceAttributesReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v26 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_44:
        [a1 setIsSatellitePaired:v26 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setWatchArmOrientation:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DODMLASRSchemaDODMLASRAudioFileResultReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0)
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v18, 0, 0);
        goto LABEL_31;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrId:", v18, 0, 0);
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(DODMLASRSchemaDODMLASRDecodingResult);
    if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRDecodingResultReadFrom(v18, a2)) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addDecodingResults:", v18, 0, 0);
    }
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRAudioFileResultTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(ASRSchemaASRRecognitionResultTier1);
        if (!PBReaderPlaceMark() || !ASRSchemaASRRecognitionResultTier1ReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRecognitionResult:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRChoiceInfoReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        uint64_t v23 = *v4;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v24 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setAcousticCost:", a3, v28, v29);
      }
      else if (v20 == 2)
      {
        uint64_t v25 = *v4;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setGraphCost:", a3, v28, v29);
      }
      else if (v20 == 1)
      {
        unint64_t v21 = objc_alloc_init(DODMLASRSchemaDODMLASRTokenInfo);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRTokenInfoReadFrom(v21, a2, v22))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v21) {
          objc_msgSend(a1, "addTokens:", v21, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t DODMLASRSchemaDODMLASRConfusionPairReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = objc_alloc_init(SISchemaUUID);
          if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setAsrId:", v17, 0, 0);

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_53;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_56;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_56:
          [a1 setErrorCode:v25];
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v28;
          }
LABEL_61:
          [a1 setEditMethod:v32];
          continue;
        case 4u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
          else {
            uint64_t v39 = v35;
          }
LABEL_66:
          [a1 setEditReason:v39];
          continue;
        case 5u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 == -1 || v44 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
        *(void *)(a2 + v43) = v44 + 1;
        v42 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0) {
          goto LABEL_68;
        }
        v40 += 7;
        BOOL v14 = v41++ >= 9;
        if (v14)
        {
          uint64_t v46 = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_68:
      uint64_t v46 = *(unsigned char *)(a2 + *v5) ? 0 : v42;
LABEL_71:
      [a1 setRecognizedTextStartIndex:v46];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DODMLASRSchemaDODMLASRConfusionPairTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          if (v17) {
            [a1 addRecognizedTokens:v17];
          }
          goto LABEL_27;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          if (v17) {
            [a1 addCorrectedTokens:v17];
          }
          goto LABEL_27;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          [a1 setLeftContextToken:v17];
          goto LABEL_27;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          [a1 setRightContextToken:v17];
LABEL_27:

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_28:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRDecodingMetricsReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setWallRealTimeFactor:", a3, v43, v44);
        goto LABEL_68;
      case 2u:
        unint64_t v23 = objc_alloc_init(ASRSchemaASRInterpolationWeightBundle);
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        if (!PBReaderPlaceMark()
          || !ASRSchemaASRInterpolationWeightBundleReadFrom(v23, a2, v24))
        {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        if (v23) {
          objc_msgSend(a1, "addLanguageModelInterpolationWeights:", v23, 0, 0);
        }
        goto LABEL_53;
      case 3u:
        uint64_t v25 = *v4;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setAverageActiveTokensPerFrame:", a3, v43, v44);
        goto LABEL_68;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v4;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v16 = v28++ >= 9;
              if (v16)
              {
                uint64_t v34 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v29;
        }
LABEL_58:
        objc_msgSend(a1, "setJitQueryDurationInMs:", v34, v43, v44);
        goto LABEL_68;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v4;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v8) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v16 = v36++ >= 9;
              if (v16)
              {
                uint64_t v42 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v42 = 0;
        }
        else {
          uint64_t v42 = v37;
        }
LABEL_63:
        objc_msgSend(a1, "setJitLanguageModelEnrollmentDurationInMs:", v42, v43, v44);
        goto LABEL_68;
      case 6u:
        unint64_t v23 = objc_alloc_init(DODMLASRSchemaDODMLASREntityCategoryCount);
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASREntityCategoryCountReadFrom(v23, a2))
        {
          goto LABEL_70;
        }
        PBReaderRecallMark();
        if (v23) {
          objc_msgSend(a1, "addPreprocessingEntityCategoryCounts:", v23, 0, 0);
        }
        goto LABEL_53;
      case 7u:
        unint64_t v23 = objc_alloc_init(DODMLASRSchemaDODMLASREntityCategoryCount);
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        if (PBReaderPlaceMark()
          && DODMLASRSchemaDODMLASREntityCategoryCountReadFrom(v23, a2))
        {
          PBReaderRecallMark();
          if (v23) {
            objc_msgSend(a1, "addPostprocessingEntityCategoryCounts:", v23, 0, 0);
          }
LABEL_53:

LABEL_68:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_70:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_68;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRDecodingResultReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v17 = (ASRSchemaASRToken *)objc_claimAutoreleasedReturnValue();
        [a1 setConfigName:v17];
        goto LABEL_44;
      case 2u:
        uint64_t v17 = objc_alloc_init(ASRSchemaASRToken);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (!PBReaderPlaceMark() || !ASRSchemaASRTokenReadFrom(v17, a2)) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addTokens:", v17, 0, 0);
        }
        goto LABEL_44;
      case 3u:
        uint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUtteranceInfo);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRUtteranceInfoReadFrom(v17, a2)) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addUtterances:", v17, 0, 0);
        }
        goto LABEL_44;
      case 4u:
        uint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRDecodingMetrics);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (!PBReaderPlaceMark()
          || (DODMLASRSchemaDODMLASRDecodingMetricsReadFrom(v17, a2, v19) & 1) == 0)
        {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        [a1 setDecodingMetrics:v17];
        goto LABEL_44;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v22;
        }
LABEL_51:
        objc_msgSend(a1, "setDecodeDurationInNs:", v26, v27, v28);
        goto LABEL_45;
      case 6u:
        uint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRAlignmentInfo);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (PBReaderPlaceMark() && DODMLASRSchemaDODMLASRAlignmentInfoReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addAlignments:", v17, 0, 0);
          }
LABEL_44:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_53:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASREntityCategoryCountReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v24 = PBReaderReadString();
        [a1 setEntityCategory:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setCount:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASREvaluationMetricsReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setBestWeight:", a3, v36, v37);
        goto LABEL_55;
      case 2u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (2)
        {
          uint64_t v26 = *v4;
          uint64_t v27 = *(void *)(a2 + v26);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
            *(void *)(a2 + v26) = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if (v29 < 0)
            {
              v23 += 7;
              BOOL v16 = v24++ >= 9;
              if (v16)
              {
                uint64_t v30 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v30 = 0;
        }
        else {
          uint64_t v30 = v25;
        }
LABEL_52:
        objc_msgSend(a1, "setTotalDurationInMs:", v30, v36, v37);
        goto LABEL_55;
      case 3u:
        uint64_t v31 = objc_alloc_init(DODMLASRSchemaDODMLASRLanguageModelMetrics);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASRLanguageModelMetricsReadFrom(v31, a2, v32))
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        if (v31) {
          objc_msgSend(a1, "addTrain:", v31, 0, 0);
        }
        goto LABEL_47;
      case 4u:
        uint64_t v31 = objc_alloc_init(DODMLASRSchemaDODMLASRLanguageModelMetrics);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASRLanguageModelMetricsReadFrom(v31, a2, v33))
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        if (v31) {
          objc_msgSend(a1, "addDev:", v31, 0, 0);
        }
        goto LABEL_47;
      case 5u:
        uint64_t v31 = objc_alloc_init(DODMLASRSchemaDODMLASRLanguageModelMetrics);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASRLanguageModelMetricsReadFrom(v31, a2, v34))
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        if (v31) {
          objc_msgSend(a1, "addTest:", v31, 0, 0);
        }
        goto LABEL_47;
      case 6u:
        uint64_t v31 = objc_alloc_init(DODMLASRSchemaDODMLASRLanguageModelMetrics);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (PBReaderPlaceMark()
          && DODMLASRSchemaDODMLASRLanguageModelMetricsReadFrom(v31, a2, v35))
        {
          PBReaderRecallMark();
          if (v31) {
            objc_msgSend(a1, "addExternal:", v31, 0, 0);
          }
LABEL_47:

LABEL_55:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRLanguageModelMetricsReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setLinearInterpolationWeight:", a3, v76, v77);
        goto LABEL_113;
      case 2u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (2)
        {
          uint64_t v26 = *v4;
          uint64_t v27 = *(void *)(a2 + v26);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
            *(void *)(a2 + v26) = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if (v29 < 0)
            {
              v23 += 7;
              BOOL v16 = v24++ >= 9;
              if (v16)
              {
                uint64_t v30 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v30 = 0;
        }
        else {
          uint64_t v30 = v25;
        }
LABEL_81:
        objc_msgSend(a1, "setTotalDurationInMs:", v30, v76, v77);
        goto LABEL_113;
      case 3u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v4;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
            *(void *)(a2 + v34) = v36;
            v33 |= (unint64_t)(v37 & 0x7F) << v31;
            if (v37 < 0)
            {
              v31 += 7;
              BOOL v16 = v32++ >= 9;
              if (v16)
              {
                uint64_t v38 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v33;
        }
LABEL_86:
        objc_msgSend(a1, "setNumUtterances:", v38, v76, v77);
        goto LABEL_113;
      case 4u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v4;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v8) + v43);
            *(void *)(a2 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v16 = v40++ >= 9;
              if (v16)
              {
                uint64_t v46 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v41;
        }
LABEL_91:
        objc_msgSend(a1, "setNumWords:", v46, v76, v77);
        goto LABEL_113;
      case 5u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v4;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v16 = v48++ >= 9;
              if (v16)
              {
                uint64_t v54 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v49;
        }
LABEL_96:
        objc_msgSend(a1, "setNumOutOfVocabularyWords:", v54, v76, v77);
        goto LABEL_113;
      case 6u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        while (2)
        {
          uint64_t v58 = *v4;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v8) + v59);
            *(void *)(a2 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v16 = v56++ >= 9;
              if (v16)
              {
                uint64_t v62 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = v57;
        }
LABEL_101:
        objc_msgSend(a1, "setNumInvalidTokens:", v62, v76, v77);
        goto LABEL_113;
      case 7u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        while (2)
        {
          uint64_t v66 = *v4;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v8) + v67);
            *(void *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v16 = v64++ >= 9;
              if (v16)
              {
                uint64_t v70 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v65;
        }
LABEL_106:
        objc_msgSend(a1, "setNumInvalidUtterances:", v70, v76, v77);
        goto LABEL_113;
      case 8u:
        uint64_t v71 = *v4;
        unint64_t v72 = *(void *)(a2 + v71);
        if (v72 <= 0xFFFFFFFFFFFFFFFBLL && v72 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v72);
          *(void *)(a2 + v71) = v72 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setPerplexity:", a3, v76, v77);
        goto LABEL_113;
      case 9u:
        uint64_t v73 = *v4;
        unint64_t v74 = *(void *)(a2 + v73);
        if (v74 <= 0xFFFFFFFFFFFFFFFBLL && v74 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v74);
          *(void *)(a2 + v73) = v74 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setPerplexityOne:", a3, v76, v77);
        goto LABEL_113;
      case 0xAu:
        char v75 = objc_alloc_init(DODMLASRSchemaDODMLASRNgramHits);
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        if (PBReaderPlaceMark() && DODMLASRSchemaDODMLASRNgramHitsReadFrom(v75, a2))
        {
          PBReaderRecallMark();
          if (v75) {
            objc_msgSend(a1, "addNgramHits:", v75, 0, 0);
          }

LABEL_113:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_113;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRModelMetricsReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = PBReaderReadString();
          [a1 setConfigName:v20];

          continue;
        case 2u:
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (2)
          {
            uint64_t v25 = *v4;
            uint64_t v26 = *(void *)(a2 + v25);
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v8) + v26);
              *(void *)(a2 + v25) = v27;
              v24 |= (unint64_t)(v28 & 0x7F) << v22;
              if (v28 < 0)
              {
                v22 += 7;
                BOOL v16 = v23++ >= 9;
                if (v16)
                {
                  uint64_t v29 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v29 = 0;
          }
          else {
            uint64_t v29 = v24;
          }
LABEL_85:
          [a1 setTrainingDurationInMs:v29];
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v4;
            uint64_t v34 = *(void *)(a2 + v33);
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
              *(void *)(a2 + v33) = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if (v36 < 0)
              {
                v30 += 7;
                BOOL v16 = v31++ >= 9;
                if (v16)
                {
                  uint64_t v37 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v32;
          }
LABEL_90:
          [a1 setConversionDurationInMs:v37];
          continue;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v4;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v8) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v16 = v39++ >= 9;
                if (v16)
                {
                  uint64_t v45 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v40;
          }
LABEL_95:
          [a1 setOptimizationDurationInMs:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v4;
            uint64_t v50 = *(void *)(a2 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v8) + v50);
              *(void *)(a2 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                BOOL v16 = v47++ >= 9;
                if (v16)
                {
                  uint64_t v53 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v53 = 0;
          }
          else {
            uint64_t v53 = v48;
          }
LABEL_100:
          [a1 setTotalDurationInMs:v53];
          continue;
        case 6u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          while (2)
          {
            uint64_t v57 = *v4;
            uint64_t v58 = *(void *)(a2 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v60 = *(unsigned char *)(*(void *)(a2 + *v8) + v58);
              *(void *)(a2 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v16 = v55++ >= 9;
                if (v16)
                {
                  uint64_t v61 = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v61 = 0;
          }
          else {
            uint64_t v61 = v56;
          }
LABEL_105:
          [a1 setNgramOrder:v61];
          continue;
        case 7u:
          uint64_t v62 = *v4;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v63);
            *(void *)(a2 + v62) = v63 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setResidualAdaptationWeight:a3];
          continue;
        case 8u:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          while (2)
          {
            uint64_t v67 = *v4;
            uint64_t v68 = *(void *)(a2 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v70 = *(unsigned char *)(*(void *)(a2 + *v8) + v68);
              *(void *)(a2 + v67) = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                BOOL v16 = v65++ >= 9;
                if (v16)
                {
                  uint64_t v71 = 0;
                  goto LABEL_110;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v71 = 0;
          }
          else {
            uint64_t v71 = v66;
          }
LABEL_110:
          [a1 setModelTrainingStatusCode:v71];
          continue;
        case 9u:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          while (2)
          {
            uint64_t v75 = *v4;
            uint64_t v76 = *(void *)(a2 + v75);
            unint64_t v77 = v76 + 1;
            if (v76 == -1 || v77 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v8) + v76);
              *(void *)(a2 + v75) = v77;
              v74 |= (unint64_t)(v78 & 0x7F) << v72;
              if (v78 < 0)
              {
                v72 += 7;
                BOOL v16 = v73++ >= 9;
                if (v16)
                {
                  uint64_t v79 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v79 = 0;
          }
          else {
            uint64_t v79 = v74;
          }
LABEL_115:
          [a1 setNumFiniteStateTransducerArcs:v79];
          continue;
        case 0xAu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v83 = *v4;
        uint64_t v84 = *(void *)(a2 + v83);
        unint64_t v85 = v84 + 1;
        if (v84 == -1 || v85 > *(void *)(a2 + *v5)) {
          break;
        }
        char v86 = *(unsigned char *)(*(void *)(a2 + *v8) + v84);
        *(void *)(a2 + v83) = v85;
        v82 |= (unint64_t)(v86 & 0x7F) << v80;
        if ((v86 & 0x80) == 0) {
          goto LABEL_117;
        }
        v80 += 7;
        BOOL v16 = v81++ >= 9;
        if (v16)
        {
          uint64_t v87 = 0;
          goto LABEL_120;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_117:
      uint64_t v87 = *(unsigned char *)(a2 + *v6) ? 0 : v82;
LABEL_120:
      [a1 setNumFiniteStateTransducerStates:v87];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t DODMLASRSchemaDODMLASRNgramHitsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 addHits:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DODMLASRSchemaDODMLASRPersonalizationExperimentContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRPersonalizationExperimentStarted);
        if (!PBReaderPlaceMark()
          || (DODMLASRSchemaDODMLASRPersonalizationExperimentStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRPersonalizationExperimentEnded);
    if (!PBReaderPlaceMark()
      || (DODMLASRSchemaDODMLASRPersonalizationExperimentEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRPersonalizationExperimentEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (DODMLASRSchemaDODMLASRAudioFileResult *)objc_claimAutoreleasedReturnValue();
        [a1 setDatapackVersion:v17];
        goto LABEL_50;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_76:
        objc_msgSend(a1, "setNumAudioFilesAvailable:", v25, v61, v62);
        goto LABEL_102;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_81:
        objc_msgSend(a1, "setNumAudioFilesSelected:", v32, v61, v62);
        goto LABEL_102;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_86:
        objc_msgSend(a1, "setExperimentStatusCode:", v39, v61, v62);
        goto LABEL_102;
      case 5u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRAudioFileResult);
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRAudioFileResultReadFrom(v17, a2)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAudioFileResults:", v17, 0, 0);
        }
        goto LABEL_50;
      case 6u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRPersonalizedLanguageModelMetrics);
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        if (PBReaderPlaceMark()
          && (DODMLASRSchemaDODMLASRPersonalizedLanguageModelMetricsReadFrom(v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          [a1 setPersonalizedLanguageModelMetrics:v17];
LABEL_50:

LABEL_102:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_104:

        return 0;
      case 7u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_91:
        objc_msgSend(a1, "setTextFetchDurationInNs:", v46, v61, v62);
        goto LABEL_102;
      case 8u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (v14)
              {
                uint64_t v53 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v53 = 0;
        }
        else {
          uint64_t v53 = v49;
        }
LABEL_96:
        objc_msgSend(a1, "setTextProcessingDurationInNs:", v53, v61, v62);
        goto LABEL_102;
      case 9u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (2)
        {
          uint64_t v57 = *v3;
          unint64_t v58 = *(void *)(a2 + v57);
          if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
            *(void *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v14 = v55++ >= 9;
              if (v14)
              {
                uint64_t v60 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v60 = 0;
        }
        else {
          uint64_t v60 = v56;
        }
LABEL_101:
        objc_msgSend(a1, "setDeviceThermalState:", v60, v61, v62);
        goto LABEL_102;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_102;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRPersonalizationExperimentStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v26 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_44:
        [a1 setExists:v26 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setDeviceThermalState:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRPersonalizedLanguageModelMetricsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_39;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_42:
        [a1 setUserLocale:v23];
        goto LABEL_43;
      case 2u:
        unsigned int v25 = objc_alloc_init(DODMLASRSchemaDODMLASRTranscriptionMetrics);
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRTranscriptionMetricsReadFrom(v25, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTranscriptionMetrics:", v25, 0, 0);
        goto LABEL_37;
      case 3u:
        unsigned int v25 = objc_alloc_init(DODMLASRSchemaDODMLASRModelMetrics);
        if (!PBReaderPlaceMark() || (DODMLASRSchemaDODMLASRModelMetricsReadFrom(v25, a2, v26) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setModelMetrics:", v25, 0, 0);
        goto LABEL_37;
      case 4u:
        unsigned int v25 = objc_alloc_init(DODMLASRSchemaDODMLASREvaluationMetrics);
        if (PBReaderPlaceMark()
          && (DODMLASRSchemaDODMLASREvaluationMetricsReadFrom(v25, a2, v27) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEvaluationMetrics:", v25, 0, 0);
LABEL_37:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRResultInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        char v24 = (DODMLASRSchemaDODMLASRChoiceInfo *)objc_claimAutoreleasedReturnValue();
        [a1 setStageName:v24];
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_37;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_39;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_39:
            [a1 setIsAligned:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v24 = objc_alloc_init(DODMLASRSchemaDODMLASRChoiceInfo);
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRChoiceInfoReadFrom(v24, a2, v25))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addChoices:", v24, 0, 0);
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRTokenInfoReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = objc_alloc_init(ASRSchemaASRToken);
          if PBReaderPlaceMark() && (ASRSchemaASRTokenReadFrom(v20, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setToken:", v20, 0, 0);

            continue;
          }

          return 0;
        case 2u:
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
            *(void *)(a2 + v22) = v23 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setAcousticCost:a3];
          continue;
        case 3u:
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v25);
            *(void *)(a2 + v24) = v25 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSilenceAcousticCost:a3];
          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          break;
        case 5u:
          uint64_t v34 = *v4;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v35);
            *(void *)(a2 + v34) = v35 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 addLanguageModelCosts:a3];
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)(a2 + v29);
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)(a2 + *v5)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(a2 + *v8) + v30);
        *(void *)(a2 + v29) = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0) {
          goto LABEL_41;
        }
        v26 += 7;
        BOOL v16 = v27++ >= 9;
        if (v16)
        {
          uint64_t v33 = 0;
          goto LABEL_44;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_41:
      uint64_t v33 = *(unsigned char *)(a2 + *v6) ? 0 : v28;
LABEL_44:
      [a1 addNumBackoffs:v33];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t DODMLASRSchemaDODMLASRTranscriptMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_120;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_123;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_120:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_123:
          [a1 setNumDocumentsRejected:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_128:
          [a1 setNumSentencesRejected:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_133;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_133:
          [a1 setNumDocumentsAccepted:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_138:
          [a1 setNumSentencesAccepted:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_143:
          [a1 setNumTokensAccepted:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_148:
          [a1 setNumTokensOutOfVocabularyAccepted:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
          else {
            uint64_t v66 = v62;
          }
LABEL_153:
          [a1 setNumDocumentsDictated:v66];
          continue;
        case 8u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  uint64_t v73 = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v73 = 0;
          }
          else {
            uint64_t v73 = v69;
          }
LABEL_158:
          [a1 setNumDocumentsTyped:v73];
          continue;
        case 9u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          while (2)
          {
            uint64_t v77 = *v3;
            unint64_t v78 = *(void *)(a2 + v77);
            if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v78 + 1;
              v76 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                BOOL v14 = v75++ >= 9;
                if (v14)
                {
                  uint64_t v80 = 0;
                  goto LABEL_163;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v80 = 0;
          }
          else {
            uint64_t v80 = v76;
          }
LABEL_163:
          [a1 setNumTokensDictated:v80];
          continue;
        case 0xAu:
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          while (2)
          {
            uint64_t v84 = *v3;
            unint64_t v85 = *(void *)(a2 + v84);
            if (v85 == -1 || v85 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
              *(void *)(a2 + v84) = v85 + 1;
              v83 |= (unint64_t)(v86 & 0x7F) << v81;
              if (v86 < 0)
              {
                v81 += 7;
                BOOL v14 = v82++ >= 9;
                if (v14)
                {
                  uint64_t v87 = 0;
                  goto LABEL_168;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v87 = 0;
          }
          else {
            uint64_t v87 = v83;
          }
LABEL_168:
          [a1 setNumTokensTyped:v87];
          continue;
        case 0xBu:
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v90 = 0;
          while (2)
          {
            uint64_t v91 = *v3;
            unint64_t v92 = *(void *)(a2 + v91);
            if (v92 == -1 || v92 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
              *(void *)(a2 + v91) = v92 + 1;
              v90 |= (unint64_t)(v93 & 0x7F) << v88;
              if (v93 < 0)
              {
                v88 += 7;
                BOOL v14 = v89++ >= 9;
                if (v14)
                {
                  uint64_t v94 = 0;
                  goto LABEL_173;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v94 = 0;
          }
          else {
            uint64_t v94 = v90;
          }
LABEL_173:
          [a1 setNumSentencesMungeRejected:v94];
          continue;
        case 0xCu:
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v97 = 0;
          while (2)
          {
            uint64_t v98 = *v3;
            unint64_t v99 = *(void *)(a2 + v98);
            if (v99 == -1 || v99 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
              *(void *)(a2 + v98) = v99 + 1;
              v97 |= (unint64_t)(v100 & 0x7F) << v95;
              if (v100 < 0)
              {
                v95 += 7;
                BOOL v14 = v96++ >= 9;
                if (v14)
                {
                  uint64_t v101 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v101 = 0;
          }
          else {
            uint64_t v101 = v97;
          }
LABEL_178:
          [a1 setNumSentencesMungeChanged:v101];
          continue;
        case 0xDu:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          while (2)
          {
            uint64_t v105 = *v3;
            unint64_t v106 = *(void *)(a2 + v105);
            if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
              *(void *)(a2 + v105) = v106 + 1;
              v104 |= (unint64_t)(v107 & 0x7F) << v102;
              if (v107 < 0)
              {
                v102 += 7;
                BOOL v14 = v103++ >= 9;
                if (v14)
                {
                  uint64_t v108 = 0;
                  goto LABEL_183;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v108 = 0;
          }
          else {
            uint64_t v108 = v104;
          }
LABEL_183:
          [a1 setNumTokensEstimatedRejected:v108];
          continue;
        case 0xEu:
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v111 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v112 = *v3;
        unint64_t v113 = *(void *)(a2 + v112);
        if (v113 == -1 || v113 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
        *(void *)(a2 + v112) = v113 + 1;
        v111 |= (unint64_t)(v114 & 0x7F) << v109;
        if ((v114 & 0x80) == 0) {
          goto LABEL_185;
        }
        v109 += 7;
        BOOL v14 = v110++ >= 9;
        if (v14)
        {
          uint64_t v115 = 0;
          goto LABEL_188;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_185:
      uint64_t v115 = *(unsigned char *)(a2 + *v5) ? 0 : v111;
LABEL_188:
      [a1 setNumTokensEstimatedExamined:v115];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DODMLASRSchemaDODMLASRTranscriptionMetricsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRTranscriptMetadata);
        if (!PBReaderPlaceMark() || (DODMLASRSchemaDODMLASRTranscriptMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrain:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRTranscriptMetadata);
        if (!PBReaderPlaceMark() || (DODMLASRSchemaDODMLASRTranscriptMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDev:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRTranscriptMetadata);
        if (!PBReaderPlaceMark() || (DODMLASRSchemaDODMLASRTranscriptMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTest:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRTranscriptMetadata);
        if PBReaderPlaceMark() && (DODMLASRSchemaDODMLASRTranscriptMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setExternal:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

BOOL DODMLASRSchemaDODMLASRUserEditExperimentContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUserEditExperimentStarted);
        if (!PBReaderPlaceMark()
          || (DODMLASRSchemaDODMLASRUserEditExperimentStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUserEditExperimentEnded);
    if (!PBReaderPlaceMark() || (DODMLASRSchemaDODMLASRUserEditExperimentEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRUserEditExperimentEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUserEditExperimentRedecodingResults);
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASRUserEditExperimentRedecodingResultsReadFrom(v17, a2))
        {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addRedecodingResults:", v17, 0, 0);
        }
        goto LABEL_28;
      case 2u:
        char v17 = objc_alloc_init(SISchemaUUID);
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          [a1 setLinkId:v17];
LABEL_28:

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_54:
        objc_msgSend(a1, "setNumAudioFilesAvailable:", v25, v40, v41);
        goto LABEL_65;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_59:
        objc_msgSend(a1, "setNumAudioFilesSelected:", v32, v40, v41);
        goto LABEL_65;
      case 5u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_64:
        objc_msgSend(a1, "setErrorCode:", v39, v40, v41);
        goto LABEL_65;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_65;
    }
  }
}

BOOL DODMLASRSchemaDODMLASRUserEditExperimentEndedTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRConfusionPairTier1);
    if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRConfusionPairTier1ReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addConfusionPairs:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRUserEditExperimentRedecodingResultsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (DODMLASRSchemaDODMLASRConfusionPair *)objc_claimAutoreleasedReturnValue();
        [a1 setDatapackVersion:v17];
        goto LABEL_39;
      case 2u:
        char v17 = objc_alloc_init(DODMLASRSchemaDODMLASRConfusionPair);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRConfusionPairReadFrom(v17, a2)) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addConfusionPairs:", v17, 0, 0);
        }
        goto LABEL_39;
      case 3u:
        char v17 = objc_alloc_init(SISchemaUUID);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        [a1 setAsrId:v17];
        goto LABEL_39;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_44:
        objc_msgSend(a1, "setErrorCode:", v25, v26, v27);
        goto LABEL_45;
      case 5u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLinkId:", v17, 0, 0);
LABEL_39:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t DODMLASRSchemaDODMLASRUserEditExperimentStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DODMLASRSchemaDODMLASRUtteranceInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(DODMLASRSchemaDODMLASRResultInfo);
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRResultInfoReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v25) {
          objc_msgSend(a1, "addResults:", v25, 0, 0);
        }
      }
      else if (v17 == 2)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0) {
            goto LABEL_48;
          }
          v26 += 7;
          BOOL v14 = v27++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_51:
        objc_msgSend(a1, "setStartTimeInNs:", v32, v34, v35);
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_43;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
        else {
          uint64_t v24 = v20;
        }
LABEL_46:
        objc_msgSend(a1, "setEndTimeInNs:", v24, v34, v35);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DODMLSchemaDODMLClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(DODMLSchemaDODMLClientEventMetadata);
        if (!PBReaderPlaceMark() || (DODMLSchemaDODMLClientEventMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
        goto LABEL_36;
      case 2u:
        unint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRPersonalizationExperimentContext);
        if (!PBReaderPlaceMark()
          || !DODMLASRSchemaDODMLASRPersonalizationExperimentContextReadFrom(v17, a2))
        {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPersonalizationExperimentContext:", v17, 0, 0);
        goto LABEL_36;
      case 3u:
        unint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUserEditExperimentContext);
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRUserEditExperimentContextReadFrom(v17, a2)) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserEditExperimentContext:", v17, 0, 0);
        goto LABEL_36;
      case 4u:
        unint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRUserEditExperimentEndedTier1);
        if (!PBReaderPlaceMark() || !DODMLASRSchemaDODMLASRUserEditExperimentEndedTier1ReadFrom(v17, a2)) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserEditExperimentEndedTier1:", v17, 0, 0);
        goto LABEL_36;
      case 5u:
        unint64_t v17 = objc_alloc_init(DODMLASRSchemaDODMLASRAudioFileResultTier1);
        if PBReaderPlaceMark() && (DODMLASRSchemaDODMLASRAudioFileResultTier1ReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setAudioFileResultTier1:", v17, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t DODMLSchemaDODMLClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDodMlId:", v17, 0, 0);
        goto LABEL_29;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setExperimentName:v17];
        goto LABEL_29;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setTrialExperimentId:v17];
        goto LABEL_29;
      case 4u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrialTreatmentId:", v17, 0, 0);
LABEL_29:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 5u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_41:
        [a1 setTrialDeploymentId:v25];
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t DUSchemaDUContentReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadData();
        [a1 setDataPayload:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL DUSchemaDUEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 100)
      {
        if (v17 == 101)
        {
          char v18 = objc_alloc_init(DUSchemaDUSpeechAudioRecord);
          if (!PBReaderPlaceMark() || (DUSchemaDUSpeechAudioRecordReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setSpeechAudioRecord:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 102)
        {
          char v18 = objc_alloc_init(DUSchemaDUSearchSessionRecord);
          if (!PBReaderPlaceMark() || (DUSchemaDUSearchSessionRecordReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setSearchSessionRecord:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          char v18 = objc_alloc_init(DUSchemaDUEventMetadata);
          if (!PBReaderPlaceMark() || (DUSchemaDUEventMetadataReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setMetadata:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 2)
        {
          char v18 = objc_alloc_init(DUSchemaDUContent);
          if (!PBReaderPlaceMark() || (DUSchemaDUContentReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContent:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DUSchemaDUEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssetIdentifier:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DUSchemaDUResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssetIdentifier:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setStatus:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DUSchemaDUSearchSessionRecordReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionId:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setSessionStartTimestampMs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t DUSchemaDUSpeechAudioRecordReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setLanguage:v17];
        goto LABEL_30;
      case 2u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setCodec:v17];
        goto LABEL_30;
      case 3u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInteractionId:", v17, 0, 0);
        goto LABEL_30;
      case 4u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSpeechId:", v17, 0, 0);
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      case 5u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setSpeechIdString:v17];
        goto LABEL_30;
      case 6u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_44:
        [a1 setAudioCreatedTimestampMs:v25];
        goto LABEL_31;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_31;
    }
  }
}

uint64_t EXPSchemaEXPTrialExperimentReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setExperimentNamespace:v17];
        goto LABEL_26;
      case 2u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setExperimentId:v17];
        goto LABEL_26;
      case 3u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTreatmentId:", v17, 0, 0);
LABEL_26:

LABEL_75:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_59:
        [a1 setDeploymentId:v25];
        goto LABEL_75;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_64:
        [a1 setAllocationStatus:v32];
        goto LABEL_75;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_69:
        [a1 setLastUpdatedAtInMs:v39];
        goto LABEL_75;
      case 7u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_74:
        [a1 setCompatibilityVersion:v46];
        goto LABEL_75;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_75;
    }
  }
}

uint64_t EXPSearchSchemaEXPSearchClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        char v17 = objc_alloc_init(EXPSearchSchemaEXPSearchSessionExperiments);
        if (!PBReaderPlaceMark() || !EXPSearchSchemaEXPSearchSessionExperimentsReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionExperiments:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL EXPSearchSchemaEXPSearchSessionExperimentsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchSessionId:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
    if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addActiveExperiments:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t EXPSiriSchemaEXPAllocationChangelogSnapshotReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAllocations:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t EXPSiriSchemaEXPAllocationSnapshotReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAllocations:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL EXPSiriSchemaEXPClientExperimentTriggeredTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v17, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addAllocation:", v17, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setCodepathId:", v17, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL EXPSiriSchemaEXPClientSiriRequestExperimentTriggeredTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0)
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestId:", v18, 0, 0);
        goto LABEL_31;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addAllocation:", v18, 0, 0);
        }
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setCodepathId:", v18, 0, 0);
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t EXPSiriSchemaEXPServerCounterfactualTriggeredTier1ReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        unsigned int v20 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v20, a2)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addAllocation:", v20, 0, 0);
        }
        goto LABEL_65;
      case 2u:
        unsigned int v20 = objc_alloc_init(SISchemaUUID);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        [a1 setCodepathId:v20];
        goto LABEL_65;
      case 3u:
        unsigned int v20 = objc_alloc_init(SISchemaUUID);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        [a1 setPegasusId:v20];
        goto LABEL_65;
      case 4u:
        unsigned int v20 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v20, a2)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addCounterfactualAllocation:", v20, 0, 0);
        }
        goto LABEL_65;
      case 5u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (2)
        {
          uint64_t v24 = *v4;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v8) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v16 = v22++ >= 9;
              if (v16)
              {
                uint64_t v23 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v23 = 0;
        }
LABEL_71:
        [a1 setIsCounterfactualDifferent:v23 != 0];
        goto LABEL_66;
      case 6u:
        uint64_t v28 = *v4;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v29);
          *(void *)(a2 + v28) = v29 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setCompareRankingAtK:", a3, v49, v50);
        goto LABEL_66;
      case 7u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v4;
          uint64_t v34 = *(void *)(a2 + v33);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v35;
            v32 |= (unint64_t)(v36 & 0x7F) << v30;
            if (v36 < 0)
            {
              v30 += 7;
              BOOL v16 = v31++ >= 9;
              if (v16)
              {
                uint64_t v37 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v37 = 0;
        }
        else {
          uint64_t v37 = v32;
        }
LABEL_76:
        objc_msgSend(a1, "setKValue:", v37, v49, v50);
        goto LABEL_66;
      case 8u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)(a2 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v8) + v42);
            *(void *)(a2 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v16 = v39++ >= 9;
              if (v16)
              {
                uint64_t v45 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v40;
        }
LABEL_81:
        objc_msgSend(a1, "setDiffOutcome:", v45, v49, v50);
        goto LABEL_66;
      case 0xAu:
        unsigned int v20 = objc_alloc_init(EXPSiriSchemaEXPSiriPegasusResponseSummary);
        if (!PBReaderPlaceMark()
          || (EXPSiriSchemaEXPSiriPegasusResponseSummaryReadFrom(v20, a2, v47) & 1) == 0)
        {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTreatmentSummary:", v20, 0, 0);
        goto LABEL_65;
      case 0xBu:
        unsigned int v20 = objc_alloc_init(EXPSiriSchemaEXPSiriPegasusResponseSummary);
        if (PBReaderPlaceMark()
          && (EXPSiriSchemaEXPSiriPegasusResponseSummaryReadFrom(v20, a2, v48) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCounterfactualSummary:", v20, 0, 0);
LABEL_65:

LABEL_66:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_85:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_66;
    }
  }
}

BOOL EXPSiriSchemaEXPServerExperimentTriggeredTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0)
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPegasusId:", v18, 0, 0);
        goto LABEL_31;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        int v18 = objc_alloc_init(EXPSchemaEXPTrialExperiment);
        if (!PBReaderPlaceMark() || !EXPSchemaEXPTrialExperimentReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addAllocation:", v18, 0, 0);
        }
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setCodepathId:", v18, 0, 0);
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL EXPSiriSchemaEXPSiriClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPAllocationSnapshot);
        if (!PBReaderPlaceMark() || (EXPSiriSchemaEXPAllocationSnapshotReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAllocationSnapshot:", v17, 0, 0);
        goto LABEL_36;
      case 'f':
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPAllocationChangelogSnapshot);
        if (!PBReaderPlaceMark()
          || (EXPSiriSchemaEXPAllocationChangelogSnapshotReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAllocationChangelogSnapshot:", v17, 0, 0);
        goto LABEL_36;
      case 'g':
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPClientExperimentTriggeredTier1);
        if (!PBReaderPlaceMark() || !EXPSiriSchemaEXPClientExperimentTriggeredTier1ReadFrom(v17, a2)) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExperimentTriggered:", v17, 0, 0);
        goto LABEL_36;
      case 'h':
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPClientSiriRequestExperimentTriggeredTier1);
        if (!PBReaderPlaceMark()
          || !EXPSiriSchemaEXPClientSiriRequestExperimentTriggeredTier1ReadFrom(v17, a2))
        {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriRequestExperimentTriggered:", v17, 0, 0);
        goto LABEL_36;
      case 'i':
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPRolloutChangeSnapshot);
        if PBReaderPlaceMark() && (EXPSiriSchemaEXPRolloutChangeSnapshotReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRolloutChangeSnapshot:", v17, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

BOOL EXPSiriSchemaEXPSiriServerEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 102) {
        break;
      }
      if ((v10 >> 3) == 101)
      {
        unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPServerExperimentTriggeredTier1);
        if (!PBReaderPlaceMark() || !EXPSiriSchemaEXPServerExperimentTriggeredTier1ReadFrom(v17, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExperimentTriggered:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(EXPSiriSchemaEXPServerCounterfactualTriggeredTier1);
    if (!PBReaderPlaceMark()
      || (EXPSiriSchemaEXPServerCounterfactualTriggeredTier1ReadFrom(v17, a2, v18) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setCounterfactualTriggered:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_43;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setActionIdentifierName:v17];
        goto LABEL_43;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_48:
        objc_msgSend(a1, "setSystemProtocol:", v25, v33, v34);
        goto LABEL_54;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_53:
        objc_msgSend(a1, "setPresentationStyle:", v32, v33, v34);
        goto LABEL_54;
      case 5u:
        unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameter);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (PBReaderPlaceMark() && FLOWLINKSchemaFLOWLINKActionParameterReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addParameters:", v17, 0, 0);
          }
LABEL_43:

LABEL_54:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_56:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_54;
    }
  }
}

BOOL FLOWLINKSchemaFLOWLINKActionConfirmationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConfirmationStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionConfirmationStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConfirmationEnded);
    if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionConfirmationEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionConfirmationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setIsCorrectAction:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionConfirmationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLinkActionStarted);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLinkActionStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLinkActionEnded);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLinkActionEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLinkActionFailed);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLinkActionFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLinkActionCancelled);
        if PBReaderPlaceMark() && (FLOWLINKSchemaFLOWLinkActionCancelledReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCancelled:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

BOOL FLOWLINKSchemaFLOWLINKActionConversionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConversionFailed);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionConversionFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConversionStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionConversionStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConversionEnded);
    if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionConversionEndedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionConversionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKAction);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAction:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionConversionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionConversionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParseHypothesisId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionExecutionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionExecutionStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionExecutionStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionExecutionEnded);
    if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionExecutionEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionExecutionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setHasOutputToPresent:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionExecutionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParameterReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = PBReaderReadString();
        [a1 setName:v25];
      }
      else if (v17 == 2)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0) {
            goto LABEL_44;
          }
          v26 += 7;
          BOOL v14 = v27++ >= 9;
          if (v14)
          {
            uint64_t v28 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_46:
        [a1 setIsArray:v28 != 0];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_39;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_42:
        [a1 setType:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionParameterConfirmationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterConfirmationStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionParameterConfirmationStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterConfirmationEnded);
    if (!PBReaderPlaceMark()
      || (FLOWLINKSchemaFLOWLINKActionParameterConfirmationEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParameterConfirmationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setIsCorrectParameter:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParameterConfirmationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameter);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionParameterReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParameter:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionParameterDisambiguationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterDisambiguationStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionParameterDisambiguationStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterDisambiguationEnded);
    if (!PBReaderPlaceMark()
      || (FLOWLINKSchemaFLOWLINKActionParameterDisambiguationEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParameterDisambiguationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParameterDisambiguationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameter);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionParameterReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParameter:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionParametersUpdatedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameter);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionParameterReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addParameters:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionPromptForValueContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionPromptForValueStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionPromptForValueStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionPromptForValueEnded);
    if (!PBReaderPlaceMark()
      || (FLOWLINKSchemaFLOWLINKActionPromptForValueEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionPromptForValueEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKActionPromptForValueStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameter);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionParameterReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParameter:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKActionTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setAppBundleId:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKAutoShortcutTemplateUsedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = PBReaderReadString();
        [a1 setAutoshortcutTemplate:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWLINKSchemaFLOWLINKClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'd':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkActionContext:", v17, 0, 0);
        goto LABEL_62;
      case 'e':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKEntityDisambiguationContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKEntityDisambiguationContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityDisambiguationContext:", v17, 0, 0);
        goto LABEL_62;
      case 'f':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConversionContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionConversionContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionConversionContext:", v17, 0, 0);
        goto LABEL_62;
      case 'g':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionExecutionContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionExecutionContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionExecutionContext:", v17, 0, 0);
        goto LABEL_62;
      case 'h':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionPromptForValueContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionPromptForValueContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionPromptForValueContext:", v17, 0, 0);
        goto LABEL_62;
      case 'i':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterDisambiguationContext);
        if (!PBReaderPlaceMark()
          || !FLOWLINKSchemaFLOWLINKActionParameterDisambiguationContextReadFrom(v17, a2))
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionParameterDisambiguationContext:", v17, 0, 0);
        goto LABEL_62;
      case 'j':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParameterConfirmationContext);
        if (!PBReaderPlaceMark()
          || !FLOWLINKSchemaFLOWLINKActionParameterConfirmationContextReadFrom(v17, a2))
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionParameterConfirmationContext:", v17, 0, 0);
        goto LABEL_62;
      case 'k':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionConfirmationContext);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionConfirmationContextReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionConfirmationContext:", v17, 0, 0);
        goto LABEL_62;
      case 'l':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKAutoShortcutTemplateUsed);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKAutoShortcutTemplateUsedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAutoShortcutTemplateUsed:", v17, 0, 0);
        goto LABEL_62;
      case 'm':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionTier1);
        if (!PBReaderPlaceMark() || !FLOWLINKSchemaFLOWLINKActionTier1ReadFrom(v17, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkActionTier1:", v17, 0, 0);
        goto LABEL_62;
      case 'n':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKActionParametersUpdated);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKActionParametersUpdatedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionParameterUpdated:", v17, 0, 0);
        goto LABEL_62;
      case 'o':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKAppShortcutFirstRunConfirmationContext);
        if (!PBReaderPlaceMark()
          || !FLOWLINKSchemaFLOWLINKAppShortcutFirstRunConfirmationContextReadFrom(v17, a2))
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppShortcutFirstRunConfirmationContext:", v17, 0, 0);
        goto LABEL_62;
      case 'p':
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKAppShortcutGeneralizedExecutionUsed);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKAppShortcutGeneralizedExecutionUsedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppShortcutGeneralizedExecutionUsed:", v17, 0, 0);
        goto LABEL_62;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v17 = objc_alloc_init(FLOWSchemaFLOWEventMetadata);
        if (PBReaderPlaceMark() && FLOWSchemaFLOWEventMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_62:

          goto LABEL_63;
        }
LABEL_68:

        return 0;
    }
  }
}

BOOL FLOWLINKSchemaFLOWLINKEntityDisambiguationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKEntityDisambiguationFailed);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKEntityDisambiguationFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKEntityDisambiguationStarted);
        if (!PBReaderPlaceMark()
          || (FLOWLINKSchemaFLOWLINKEntityDisambiguationStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(FLOWLINKSchemaFLOWLINKEntityDisambiguationEnded);
    if (!PBReaderPlaceMark()
      || (FLOWLINKSchemaFLOWLINKEntityDisambiguationEndedReadFrom(v18, a2) & 1) == 0)
    {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKEntityDisambiguationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKEntityDisambiguationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLINKEntityDisambiguationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLinkActionCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setCancellationInitiator:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLinkActionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLinkActionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWLINKSchemaFLOWLinkActionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWLINKSchemaFLOWLINKAction);
        if (!PBReaderPlaceMark() || (FLOWLINKSchemaFLOWLINKActionReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCurrentAction:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWAppContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = PBReaderReadString();
          [a1 setBundleId:v17];
          goto LABEL_23;
        case 2u:
          char v17 = PBReaderReadString();
          [a1 setAppVersion:v17];
LABEL_23:

          continue;
        case 3u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v21 = 0;
                  goto LABEL_48;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_48:
          [a1 setIsSmartEnoughAppSelectionUsed:v21 != 0];
          continue;
        case 4u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_53:
          [a1 setAppResolutionType:v31];
          continue;
        case 5u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
        *(void *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0) {
          goto LABEL_55;
        }
        v32 += 7;
        BOOL v14 = v33++ >= 9;
        if (v14)
        {
          uint64_t v38 = 0;
          goto LABEL_58;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
      uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
      [a1 setProtectedAppType:v38];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWAppleMusicVoicePreviewOfferNotShownReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWBriefingContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 addEnabledFeatures:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setBriefingAttribute:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        char v17 = objc_alloc_init(FLOWSchemaFLOWStep);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWStepReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowStep:", v17, 0, 0);
        goto LABEL_50;
      case 'f':
        char v17 = objc_alloc_init(FLOWSchemaFLOWEntityContextTier1);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWEntityContextTier1ReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowEntityContextTier1:", v17, 0, 0);
        goto LABEL_50;
      case 'g':
        char v17 = objc_alloc_init(FLOWSchemaFLOWSmsAttachmentMetadataTier1);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWSmsAttachmentMetadataTier1ReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSmsAttachmentMetadataTier1:", v17, 0, 0);
        goto LABEL_50;
      case 'h':
        char v17 = objc_alloc_init(FLOWSchemaFLOWAppleMusicVoicePreviewOfferNotShown);
        if (!PBReaderPlaceMark()
          || (FLOWSchemaFLOWAppleMusicVoicePreviewOfferNotShownReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppleMusicVoicePreviewOfferNotShown:", v17, 0, 0);
        goto LABEL_50;
      case 'i':
        char v17 = objc_alloc_init(FLOWSchemaFLOWPegasusContextTier1);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWPegasusContextTier1ReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPegasusContextTier1:", v17, 0, 0);
        goto LABEL_50;
      case 'j':
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerPlaybackContextTier1);
        if (!PBReaderPlaceMark()
          || (FLOWSchemaFLOWMediaPlayerPlaybackContextTier1ReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaPlayerPlaybackContextTier1:", v17, 0, 0);
        goto LABEL_50;
      case 'k':
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerRadioStationContextTier1);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWMediaPlayerRadioStationContextTier1ReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaPlayerRadioStationContextTier1:", v17, 0, 0);
        goto LABEL_50;
      case 'l':
        char v17 = objc_alloc_init(FLOWSchemaFLOWDomainExecutionContext);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWDomainExecutionContextReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowDomainExecutionContext:", v17, 0, 0);
        goto LABEL_50;
      case 'm':
        char v17 = objc_alloc_init(FLOWSchemaFLOWLocationAccessPermissionPromptContext);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWLocationAccessPermissionPromptContextReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocationAccessPermissionPromptContext:", v17, 0, 0);
        goto LABEL_50;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v17 = objc_alloc_init(FLOWSchemaFLOWEventMetadata);
        if (PBReaderPlaceMark() && FLOWSchemaFLOWEventMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_50:

          goto LABEL_51;
        }
LABEL_57:

        return 0;
    }
  }
}

BOOL FLOWSchemaFLOWCrossIntentRankerResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        if (v17) {
          [a1 addCrossDomainRankerScoreKeeper:v17];
        }
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = PBReaderReadString();
    if (v17) {
      [a1 addCrossIntentRankerScoreKeeper:v17];
    }
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWDomainContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWVoiceShortcutContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWVoiceShortcutContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceShortcutContext:", v17, 0, 0);
        goto LABEL_57;
      case 2u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWHomeAutomationContext);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWHomeAutomationContextReadFrom(v17, a2)) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeAutomationContext:", v17, 0, 0);
        goto LABEL_57;
      case 3u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWPhoneCallContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWPhoneCallContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPhoneCallContext:", v17, 0, 0);
        goto LABEL_57;
      case 4u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWSmsContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSmsContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSmsContext:", v17, 0, 0);
        goto LABEL_57;
      case 5u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWMediaPlayerContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaPlayerContext:", v17, 0, 0);
        goto LABEL_57;
      case 6u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWIdentityContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWIdentityContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIdentityContext:", v17, 0, 0);
        goto LABEL_57;
      case 7u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWBriefingContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWBriefingContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBriefingContext:", v17, 0, 0);
        goto LABEL_57;
      case 8u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWPegasusContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWPegasusContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPegasusContext:", v17, 0, 0);
        goto LABEL_57;
      case 9u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWInformationPluginContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWInformationPluginContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInformationPluginContext:", v17, 0, 0);
        goto LABEL_57;
      case 0xAu:
        char v17 = objc_alloc_init(FLOWSchemaFLOWHomeCommunicationContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWHomeCommunicationContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeCommunicationContext:", v17, 0, 0);
        goto LABEL_57;
      case 0xBu:
        char v17 = objc_alloc_init(FLOWSchemaFLOWNotificationContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWNotificationContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_61;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNotificationContext:", v17, 0, 0);
        goto LABEL_57;
      case 0xCu:
        char v17 = objc_alloc_init(FLOWSchemaFLOWPhotosContext);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWPhotosContextReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotosContext:", v17, 0, 0);
LABEL_57:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_61:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_58;
    }
  }
}

uint64_t FLOWSchemaFLOWEntityContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setNumberOfEntitiesShown:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWEntityContextTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(FLOWSchemaFLOWEntityTier1);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWEntityTier1ReadFrom(v18, a2) & 1) == 0)
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntitySelected:", v18, 0, 0);
        goto LABEL_31;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v18, 0, 0);
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(FLOWSchemaFLOWEntityTier1);
    if (!PBReaderPlaceMark() || !FLOWSchemaFLOWEntityTier1ReadFrom(v18, a2)) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addEntitiesPresented:", v18, 0, 0);
    }
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWEntityTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadString();
        [a1 setEntityId:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTaskId:", v17, 0, 0);
        goto LABEL_40;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setResultCandidateId:v17];
        goto LABEL_40;
      case 3u:
        unint64_t v17 = objc_alloc_init(SISchemaVersion);
        if (!PBReaderPlaceMark() || (SISchemaVersionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVersion:", v17, 0, 0);
        goto LABEL_40;
      case 4u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowId:", v17, 0, 0);
        goto LABEL_40;
      case 5u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestId:", v17, 0, 0);
        goto LABEL_40;
      case 6u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrpId:", v17, 0, 0);
        goto LABEL_40;
      case 7u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSubRequestId:", v17, 0, 0);
LABEL_40:

LABEL_41:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_41;
    }
  }
}

uint64_t FLOWSchemaFLOWHomeAutomationCommandReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommandId:", v17, 0, 0);
        goto LABEL_56;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_61:
        objc_msgSend(a1, "setCommandType:", v25, v47, v48);
        goto LABEL_77;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_66:
        objc_msgSend(a1, "setCommandOutcome:", v32, v47, v48);
        goto LABEL_77;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_71:
        objc_msgSend(a1, "setCommandErrorReason:", v39, v47, v48);
        goto LABEL_77;
      case 5u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_76:
        objc_msgSend(a1, "setCommandDuration:", v46, v47, v48);
        goto LABEL_77;
      case 6u:
        unint64_t v17 = objc_alloc_init(FLOWSchemaFLOWHomeAutomationRequest);
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        if (PBReaderPlaceMark() && FLOWSchemaFLOWHomeAutomationRequestReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addHomeAutomationRequests:", v17, 0, 0);
          }
LABEL_56:

LABEL_77:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_79:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_77;
    }
  }
}

BOOL FLOWSchemaFLOWHomeAutomationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 4)
      {
        unsigned int v18 = objc_alloc_init(FLOWSchemaFLOWHomeAutomationCommand);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWHomeAutomationCommandReadFrom(v18, a2) & 1) == 0)
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeAutomationCommand:", v18, 0, 0);
        goto LABEL_31;
      }
      if (v17 == 3) {
        break;
      }
      if (v17 == 2)
      {
        unsigned int v18 = objc_alloc_init(FLOWSchemaFLOWHomeKitServiceResponse);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWHomeKitServiceResponseReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addHomeKitServiceResponse:", v18, 0, 0);
        }
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(FLOWSchemaFLOWHomeContext);
    if (!PBReaderPlaceMark() || (FLOWSchemaFLOWHomeContextReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setHomeContext:", v18, 0, 0);
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWHomeAutomationRequestReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeAutomationRequestId:", v17, 0, 0);
        goto LABEL_50;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_55:
        [a1 setHomeAutomationRequestType:v25];
        goto LABEL_66;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_60:
        [a1 setHomeAutomationRequestOutcome:v32];
        goto LABEL_66;
      case 4u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addHomeAutomationRequestErrorReason:v17];
        }
        goto LABEL_50;
      case 5u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_65:
        [a1 setHomeAutomationRequestDuration:v39];
        goto LABEL_66;
      case 6u:
        unint64_t v17 = objc_alloc_init(FLOWSchemaFLOWHomeAutomationRequestMetadata);
        if (PBReaderPlaceMark()
          && (FLOWSchemaFLOWHomeAutomationRequestMetadataReadFrom(v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setHomeAutomationRequestMetadata:", v17, 0, 0);
LABEL_50:

LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_66;
    }
  }
}

uint64_t FLOWSchemaFLOWHomeAutomationRequestMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_75;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_77;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_75:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_77:
          [a1 setIsHomeAutomationRequestAsynchronous:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v30 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
          else {
            uint64_t v30 = v26;
          }
LABEL_82:
          [a1 setTargetedEntityCount:v30];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v33;
          }
LABEL_87:
          [a1 setFulfilledEntityCount:v37];
          continue;
        case 4u:
          char v38 = PBReaderReadString();
          if (v38) {
            [a1 addTargetedEntityTypes:v38];
          }
          goto LABEL_52;
        case 5u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_92:
          [a1 setSmallestTargetedContainer:v45];
          continue;
        case 6u:
          char v38 = PBReaderReadString();
          [a1 setTargetAttribute:v38];
LABEL_52:

          continue;
        case 7u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_97:
          [a1 setConditionType:v52];
          continue;
        case 8u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v55 = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v55 = 0;
          }
LABEL_101:
          [a1 setIsRecurring:v55 != 0];
          continue;
        case 9u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v62 = *v3;
        unint64_t v63 = *(void *)(a2 + v62);
        if (v63 == -1 || v63 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
        *(void *)(a2 + v62) = v63 + 1;
        v61 |= (unint64_t)(v64 & 0x7F) << v59;
        if ((v64 & 0x80) == 0) {
          goto LABEL_103;
        }
        v59 += 7;
        BOOL v14 = v60++ >= 9;
        if (v14)
        {
          uint64_t v61 = 0;
          goto LABEL_105;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_103:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v61 = 0;
      }
LABEL_105:
      [a1 setIsIntentSelectionCacheHit:v61 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWHomeCommunicationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        unsigned int v25 = objc_alloc_init(FLOWSchemaFLOWHomeContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWHomeContextReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeContext:", v25, 0, 0);
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setTaskType:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        unsigned int v25 = objc_alloc_init(FLOWSchemaFLOWHomeCommunicationSendOrReply);
        if (!PBReaderPlaceMark()
          || (FLOWSchemaFLOWHomeCommunicationSendOrReplyReadFrom(v25, a2) & 1) == 0)
        {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSendOrReplyContext:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWHomeCommunicationSendOrReplyReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 addTargetType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWHomeContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_50;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_53:
          [a1 setHomeCount:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_58:
          [a1 setHomePodCount:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_63:
          [a1 setAppleTvCount:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0) {
          goto LABEL_65;
        }
        v39 += 7;
        BOOL v14 = v40++ >= 9;
        if (v14)
        {
          uint64_t v41 = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v41 = 0;
      }
LABEL_67:
      [a1 setHasCurrentHome:v41 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWHomeKitServiceResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setHomeKitServiceType:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setNumServicesCompleted:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setNumServicesFailed:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWIdentityContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(FLOWSchemaFLOWProfileSwitchContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWProfileSwitchContextReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProfileSwitchContext:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWInformationPluginContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setExecutedPegasusDomain:v24];
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setEventType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWKGQAExecutionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_47;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_50;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_50:
          [a1 setKgQAUsecase:v23];
          continue;
        case 2u:
          char v25 = PBReaderReadString();
          if (v25) {
            [a1 addAttributes:v25];
          }
          goto LABEL_38;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v28 = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_54:
          [a1 setIsDisputedResponse:v28 != 0];
          continue;
        case 4u:
          char v25 = PBReaderReadString();
          [a1 setNlgKey:v25];
LABEL_38:

          continue;
        case 5u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v3;
        unint64_t v36 = *(void *)(a2 + v35);
        if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
        *(void *)(a2 + v35) = v36 + 1;
        v34 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0) {
          goto LABEL_56;
        }
        v32 += 7;
        BOOL v14 = v33++ >= 9;
        if (v14)
        {
          uint64_t v34 = 0;
          goto LABEL_58;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_56:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v34 = 0;
      }
LABEL_58:
      [a1 setIsWebExtractedFact:v34 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWKGQAExecutionTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        unsigned int v18 = PBReaderReadString();
        if (v18) {
          [a1 addSecondaryEntities:v18];
        }
        goto LABEL_26;
      }
      if (v17 == 1)
      {
        unsigned int v18 = PBReaderReadString();
        if (v18) {
          [a1 addPrimaryEntities:v18];
        }
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = PBReaderReadString();
    [a1 setAnswerId:v18];
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWKeyboardUsageMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_50;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_53:
          [a1 setNumCharsAdded:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_58:
          [a1 setNumCharsDeleted:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_63:
          [a1 setLevenshteinEditDistance:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0) {
          goto LABEL_65;
        }
        v39 += 7;
        BOOL v14 = v40++ >= 9;
        if (v14)
        {
          uint64_t v41 = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v41 = 0;
      }
LABEL_67:
      [a1 setIsEmojiUsed:v41 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWLanguageConfidenceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setLanguageCode:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setConfidenceScore:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWLanguageConfidenceArrayReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWLanguageConfidence);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWLanguageConfidenceReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addLanguageConfidences:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWLanguageConfidenceMatrixReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWLanguageConfidenceArray);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWLanguageConfidenceArrayReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addLanguageConfidenceArrays:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWMediaPlayerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_120;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_123;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_120:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_123:
        [a1 setTaskType:v23];
        goto LABEL_180;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_128:
        [a1 setMediaType:v31];
        goto LABEL_180;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_132:
        [a1 setIsWholeHouseAudio:v34 != 0];
        goto LABEL_180;
      case 5u:
        uint64_t v38 = objc_alloc_init(FLOWSchemaFLOWholeHouseAudioDestinationContext);
        if (!PBReaderPlaceMark()
          || (FLOWSchemaFLOWholeHouseAudioDestinationContextReadFrom(v38, a2) & 1) == 0)
        {
          goto LABEL_182;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWholeHouseAudioDestinationContext:", v38, 0, 0);
        goto LABEL_83;
      case 6u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v41 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v41 = 0;
        }
LABEL_136:
        [a1 setIsMusicSubscriber:v41 != 0];
        goto LABEL_180;
      case 7u:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        while (2)
        {
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v14 = v46++ >= 9;
              if (v14)
              {
                uint64_t v51 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
        else {
          uint64_t v51 = v47;
        }
LABEL_141:
        [a1 addActiveSubscriptions:v51];
        goto LABEL_180;
      case 8u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
        else {
          uint64_t v58 = v54;
        }
LABEL_146:
        [a1 setAppleMusicVoiceUserSubscriptionState:v58];
        goto LABEL_180;
      case 9u:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v14 = v60++ >= 9;
              if (v14)
              {
                uint64_t v65 = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
        else {
          uint64_t v65 = v61;
        }
LABEL_151:
        [a1 setAppleMusicVoicePreviewOfferNotShown:v65];
        goto LABEL_180;
      case 0xAu:
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        while (2)
        {
          uint64_t v69 = *v3;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
            *(void *)(a2 + v69) = v70 + 1;
            v68 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v14 = v67++ >= 9;
              if (v14)
              {
                uint64_t v68 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v68 = 0;
        }
LABEL_155:
        [a1 setIsAppleMusicVoiceEligible:v68 != 0];
        goto LABEL_180;
      case 0xBu:
        uint64_t v38 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerPlaybackContext);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWMediaPlayerPlaybackContextReadFrom(v38, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMediaPlayerPlaybackContext:", v38, 0, 0);
LABEL_83:

LABEL_180:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_182:

        return 0;
      case 0xCu:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        while (2)
        {
          uint64_t v75 = *v3;
          unint64_t v76 = *(void *)(a2 + v75);
          if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v76 + 1;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v14 = v73++ >= 9;
              if (v14)
              {
                uint64_t v74 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v74 = 0;
        }
LABEL_159:
        [a1 setIsSiriForAirPlayRequest:v74 != 0];
        goto LABEL_180;
      case 0xDu:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v3;
          unint64_t v82 = *(void *)(a2 + v81);
          if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
            *(void *)(a2 + v81) = v82 + 1;
            v80 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v14 = v79++ >= 9;
              if (v14)
              {
                uint64_t v84 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v84 = 0;
        }
        else {
          uint64_t v84 = v80;
        }
LABEL_164:
        [a1 setAirPlayTargetedDevicesCount:v84];
        goto LABEL_180;
      case 0xEu:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        while (2)
        {
          uint64_t v88 = *v3;
          unint64_t v89 = *(void *)(a2 + v88);
          if (v89 == -1 || v89 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
            *(void *)(a2 + v88) = v89 + 1;
            v87 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v14 = v86++ >= 9;
              if (v14)
              {
                uint64_t v91 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v91 = 0;
        }
        else {
          uint64_t v91 = v87;
        }
LABEL_169:
        [a1 setAirPlaySuccessfullyPlayingDevicesCount:v91];
        goto LABEL_180;
      case 0xFu:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v94 = 0;
        while (2)
        {
          uint64_t v95 = *v3;
          unint64_t v96 = *(void *)(a2 + v95);
          if (v96 == -1 || v96 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(a2 + *v7) + v96);
            *(void *)(a2 + v95) = v96 + 1;
            v94 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              BOOL v14 = v93++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
        else {
          uint64_t v98 = v94;
        }
LABEL_174:
        [a1 setAirPlayRouteSettingStatus:v98];
        goto LABEL_180;
      case 0x10u:
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v101 = 0;
        while (2)
        {
          uint64_t v102 = *v3;
          unint64_t v103 = *(void *)(a2 + v102);
          if (v103 == -1 || v103 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(a2 + *v7) + v103);
            *(void *)(a2 + v102) = v103 + 1;
            v101 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              BOOL v14 = v100++ >= 9;
              if (v14)
              {
                uint64_t v105 = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v105 = 0;
        }
        else {
          uint64_t v105 = v101;
        }
LABEL_179:
        [a1 setUserPersona:v105];
        goto LABEL_180;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_180;
    }
  }
}

uint64_t FLOWSchemaFLOWMediaPlayerPlaybackContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_51;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_56:
        [a1 setExecutionSource:v25];
        goto LABEL_67;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_61:
        [a1 setEndpoint:v32];
        goto LABEL_67;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_66:
        [a1 setContentSource:v39];
        goto LABEL_67;
      case 5u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerRadioStationContext);
        if (!PBReaderPlaceMark()
          || (FLOWSchemaFLOWMediaPlayerRadioStationContextReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRadioStationContext:", v17, 0, 0);
        goto LABEL_51;
      case 6u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerPlaylistContext);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWMediaPlayerPlaylistContextReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPlaylistContext:", v17, 0, 0);
LABEL_51:

LABEL_67:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_69:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_67;
    }
  }
}

uint64_t FLOWSchemaFLOWMediaPlayerPlaybackContextTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_43;
      case 2u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setContentTitle:v17];
        goto LABEL_43;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_64:
        objc_msgSend(a1, "setAdamId:", v25, v38, v39);
        goto LABEL_44;
      case 4u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setAdamIdString:v17];
        goto LABEL_43;
      case 5u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMediaPlayerMediaItem);
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWMediaPlayerMediaItemReadFrom(v17, a2)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addSearchResults:", v17, 0, 0);
        }
        goto LABEL_43;
      case 6u:
        char v17 = objc_alloc_init(USOSchemaUSOGraph);
        if (!PBReaderPlaceMark() || !USOSchemaUSOGraphReadFrom(v17, a2)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setU2UsoGraph:", v17, 0, 0);
        goto LABEL_43;
      case 7u:
        char v17 = objc_alloc_init(USOSchemaUSOGraphTier1);
        if (PBReaderPlaceMark() && USOSchemaUSOGraphTier1ReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setU2UsoGraphTier1:", v17, 0, 0);
LABEL_43:

LABEL_44:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_74:

        return 0;
      case 8u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_68:
        [a1 setIsNlsResult:v28 != 0];
        goto LABEL_44;
      case 9u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_72:
        [a1 setIsNlsContainerResult:v34 != 0];
        goto LABEL_44;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
    }
  }
}

uint64_t FLOWSchemaFLOWMediaPlayerPlaylistContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setPlaylistSubtype:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWMediaPlayerRadioStationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setRadioStationSubtype:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWMediaPlayerRadioStationContextTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setStationSeedName:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWPegasusContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_70;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_77:
        [a1 setProductArea:v25];
        goto LABEL_71;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_82:
        [a1 setPrimaryProvider:v32];
        goto LABEL_71;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_87:
        [a1 addOtherProviders:v39];
        goto LABEL_71;
      case 5u:
        char v17 = objc_alloc_init(PEGASUSSchemaPEGASUSIntent);
        if (!PBReaderPlaceMark() || (PEGASUSSchemaPEGASUSIntentReadFrom(v17, a2, v40) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntent:", v17, 0, 0);
        goto LABEL_70;
      case 6u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v14 = v42++ >= 9;
              if (v14)
              {
                uint64_t v43 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_91:
        [a1 setIsHandOffExecution:v43 != 0];
        goto LABEL_71;
      case 7u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWKGQAExecution);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWKGQAExecutionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setKgQAExecution:", v17, 0, 0);
        goto LABEL_70;
      case 8u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWWebAnswerExecution);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWWebAnswerExecutionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWebAnswerExecution:", v17, 0, 0);
        goto LABEL_70;
      case 9u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWSPORTSExecution);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSPORTSExecutionReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSportsExecution:", v17, 0, 0);
        goto LABEL_70;
      case 0xAu:
        char v17 = objc_alloc_init(FLOWSchemaFLOWCrossIntentRankerResponse);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWCrossIntentRankerResponseReadFrom(v17, a2)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCrossIntentRankerResponse:", v17, 0, 0);
        goto LABEL_70;
      case 0xBu:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMapsExecution);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWMapsExecutionReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMapsExecution:", v17, 0, 0);
LABEL_70:

LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_93:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_71;
    }
  }
}

BOOL FLOWSchemaFLOWPegasusContextTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_39;
      case 2u:
        char v17 = objc_alloc_init(PEGASUSSchemaPEGASUSIntentTier1);
        if (!PBReaderPlaceMark() || !PEGASUSSchemaPEGASUSIntentTier1ReadFrom(v17, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIntentTier1:", v17, 0, 0);
        goto LABEL_39;
      case 3u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWKGQAExecutionTier1);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWKGQAExecutionTier1ReadFrom(v17, a2)) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setKgQAExecutionTier1:", v17, 0, 0);
        goto LABEL_39;
      case 4u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWWebAnswerExecutionTier1);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWWebAnswerExecutionTier1ReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWebAnswerExecutionTier1:", v17, 0, 0);
        goto LABEL_39;
      case 5u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWSportsExecutionTier1);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSportsExecutionTier1ReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSportsExecutionTier1:", v17, 0, 0);
        goto LABEL_39;
      case 6u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWMapsExecutionTier1);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWMapsExecutionTier1ReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMapsExecutionTier1:", v17, 0, 0);
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
    }
  }
}

uint64_t FLOWSchemaFLOWPhoneCallContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_74;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_74:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_77:
        [a1 setPhoneCallType:v23];
        goto LABEL_107;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_82:
        [a1 addRecipientType:v31];
        goto LABEL_107;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_87:
        [a1 setPhoneCallAppType:v38];
        goto LABEL_107;
      case 5u:
        uint64_t v39 = objc_alloc_init(FLOWSchemaFLOWPhoneCallEmergencyContext);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWPhoneCallEmergencyContextReadFrom(v39, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEmergencyContext:", v39, 0, 0);

LABEL_107:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_92:
        [a1 addPersonType:v46];
        goto LABEL_107;
      case 7u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v14 = v48++ >= 9;
              if (v14)
              {
                uint64_t v49 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v49 = 0;
        }
LABEL_96:
        [a1 setIsThirdPartyFaceTime:v49 != 0];
        goto LABEL_107;
      case 8u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                uint64_t v59 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = v55;
        }
LABEL_101:
        [a1 setSearchCallHistoryIntent:v59];
        goto LABEL_107;
      case 9u:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        while (2)
        {
          uint64_t v63 = *v3;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v14 = v61++ >= 9;
              if (v14)
              {
                uint64_t v66 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v66 = 0;
        }
        else {
          uint64_t v66 = v62;
        }
LABEL_106:
        [a1 setUserPersona:v66];
        goto LABEL_107;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_107;
    }
  }
}

uint64_t FLOWSchemaFLOWPhoneCallEmergencyContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setEmergencyCallType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWPlatformContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWEntityContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWEntityContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityContext:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWSchemaFLOWEntityContext);
    if (!PBReaderPlaceMark() || (FLOWSchemaFLOWEntityContextReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEntityContextValue:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWProfileSwitchContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_57;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_60:
          [a1 setProfileSwitchMethod:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_65:
          [a1 setProfileSwitchByNameType:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_70:
          [a1 setProfileSwitchOutcome:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_75:
          [a1 setProfileSwitchFailureReason:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v49 = *v3;
        unint64_t v50 = *(void *)(a2 + v49);
        if (v50 == -1 || v50 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
        *(void *)(a2 + v49) = v50 + 1;
        v48 |= (unint64_t)(v51 & 0x7F) << v46;
        if ((v51 & 0x80) == 0) {
          goto LABEL_77;
        }
        v46 += 7;
        BOOL v14 = v47++ >= 9;
        if (v14)
        {
          uint64_t v52 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      uint64_t v52 = *(unsigned char *)(a2 + *v5) ? 0 : v48;
LABEL_80:
      [a1 setProfileSwitchDurationInMs:v52];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWSPORTSExecutionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_64;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_67;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_67:
          [a1 setSportsUsecase:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_71:
          [a1 setIsSportsWatchFaceRequest:v27 != 0];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_75:
          [a1 setIsSnippetNextCardRequest:v33 != 0];
          continue;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_79:
          [a1 setIsMachineUtterance:v39 != 0];
          continue;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
LABEL_83:
          [a1 setIsDisambiguation:v45 != 0];
          continue;
        case 6u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v52 = *v3;
        unint64_t v53 = *(void *)(a2 + v52);
        if (v53 == -1 || v53 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
        *(void *)(a2 + v52) = v53 + 1;
        v51 |= (unint64_t)(v54 & 0x7F) << v49;
        if ((v54 & 0x80) == 0) {
          goto LABEL_85;
        }
        v49 += 7;
        BOOL v14 = v50++ >= 9;
        if (v14)
        {
          uint64_t v51 = 0;
          goto LABEL_87;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v51 = 0;
      }
LABEL_87:
      [a1 setIsLiveScoreRequest:v51 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWServerEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 101) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWEventMetadata);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWEventMetadataReadFrom(v17, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWSchemaFLOWStep);
    if (!PBReaderPlaceMark() || (FLOWSchemaFLOWStepReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setFlowStep:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWSmsAttachmentMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setSmsAttachmentType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWSmsAttachmentMetadataTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setForegroundAppBundleId:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWSmsAudioContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setMessageDurationMs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWSmsContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_180;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_183;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_180:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_183:
        [a1 setMessageType:v23];
        goto LABEL_149;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_187:
        [a1 setEmojiUsed:v27 != 0];
        goto LABEL_149;
      case 4u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_191:
        [a1 setKeyboardUsed:v33 != 0];
        goto LABEL_149;
      case 5u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v43 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v39;
        }
LABEL_196:
        [a1 addRecipientType:v43];
        goto LABEL_149;
      case 6u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          unint64_t v48 = *(void *)(a2 + v47);
          if (v48 == -1 || v48 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                uint64_t v50 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
        else {
          uint64_t v50 = v46;
        }
LABEL_201:
        [a1 setMessageDurationMs:v50];
        goto LABEL_149;
      case 7u:
        uint64_t v51 = objc_alloc_init(FLOWSchemaFLOWTextMessageLength);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWTextMessageLengthReadFrom(v51, a2) & 1) == 0) {
          goto LABEL_269;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTextMessageLength:", v51, 0, 0);
        goto LABEL_148;
      case 8u:
        uint64_t v51 = objc_alloc_init(FLOWSchemaFLOWSmsTextContext);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWSmsTextContextReadFrom(v51, a2)) {
          goto LABEL_269;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTextContext:", v51, 0, 0);
        goto LABEL_148;
      case 9u:
        uint64_t v51 = objc_alloc_init(FLOWSchemaFLOWSmsAudioContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSmsAudioContextReadFrom(v51, a2) & 1) == 0) {
          goto LABEL_269;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioContext:", v51, 0, 0);
        goto LABEL_148;
      case 0xAu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
        else {
          uint64_t v58 = v54;
        }
LABEL_206:
        [a1 addPersonType:v58];
        goto LABEL_149;
      case 0xBu:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v14 = v60++ >= 9;
              if (v14)
              {
                uint64_t v65 = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
        else {
          uint64_t v65 = v61;
        }
LABEL_211:
        [a1 addReadMessageType:v65];
        goto LABEL_149;
      case 0xCu:
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        while (2)
        {
          uint64_t v69 = *v3;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
            *(void *)(a2 + v69) = v70 + 1;
            v68 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v14 = v67++ >= 9;
              if (v14)
              {
                uint64_t v68 = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v68 = 0;
        }
LABEL_215:
        [a1 addIsMultiLingual:v68 != 0];
        goto LABEL_149;
      case 0xDu:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        while (2)
        {
          uint64_t v75 = *v3;
          unint64_t v76 = *(void *)(a2 + v75);
          if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
            *(void *)(a2 + v75) = v76 + 1;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v14 = v73++ >= 9;
              if (v14)
              {
                uint64_t v74 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v74 = 0;
        }
LABEL_219:
        [a1 addIsReadable:v74 != 0];
        goto LABEL_149;
      case 0xEu:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v3;
          unint64_t v82 = *(void *)(a2 + v81);
          if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
            *(void *)(a2 + v81) = v82 + 1;
            v80 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v14 = v79++ >= 9;
              if (v14)
              {
                uint64_t v80 = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v80 = 0;
        }
LABEL_223:
        [a1 addIsGroupMessage:v80 != 0];
        goto LABEL_149;
      case 0xFu:
        uint64_t v51 = objc_alloc_init(FLOWSchemaFLOWLanguageConfidenceMatrix);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWLanguageConfidenceMatrixReadFrom(v51, a2) & 1) == 0) {
          goto LABEL_269;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLanguageConfidenceMatrix:", v51, 0, 0);
        goto LABEL_148;
      case 0x10u:
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        while (2)
        {
          uint64_t v87 = *v3;
          unint64_t v88 = *(void *)(a2 + v87);
          if (v88 == -1 || v88 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(a2 + *v7) + v88);
            *(void *)(a2 + v87) = v88 + 1;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v14 = v85++ >= 9;
              if (v14)
              {
                uint64_t v86 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v86 = 0;
        }
LABEL_227:
        [a1 setIsSenderShortCode:v86 != 0];
        goto LABEL_149;
      case 0x11u:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        while (2)
        {
          uint64_t v93 = *v3;
          unint64_t v94 = *(void *)(a2 + v93);
          if (v94 == -1 || v94 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + *v7) + v94);
            *(void *)(a2 + v93) = v94 + 1;
            v92 |= (unint64_t)(v95 & 0x7F) << v90;
            if (v95 < 0)
            {
              v90 += 7;
              BOOL v14 = v91++ >= 9;
              if (v14)
              {
                uint64_t v92 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v92 = 0;
        }
LABEL_231:
        [a1 setIsLongMessage:v92 != 0];
        goto LABEL_149;
      case 0x12u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        while (2)
        {
          uint64_t v99 = *v3;
          unint64_t v100 = *(void *)(a2 + v99);
          if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v100);
            *(void *)(a2 + v99) = v100 + 1;
            v98 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v14 = v97++ >= 9;
              if (v14)
              {
                uint64_t v98 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v98 = 0;
        }
LABEL_235:
        [a1 setIsReply:v98 != 0];
        goto LABEL_149;
      case 0x13u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        while (2)
        {
          uint64_t v105 = *v3;
          unint64_t v106 = *(void *)(a2 + v105);
          if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                uint64_t v108 = 0;
                goto LABEL_240;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v108 = 0;
        }
        else {
          uint64_t v108 = v104;
        }
LABEL_240:
        [a1 setAppendingActionReadMessagesCount:v108];
        goto LABEL_149;
      case 0x14u:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        while (2)
        {
          uint64_t v112 = *v3;
          unint64_t v113 = *(void *)(a2 + v112);
          if (v113 == -1 || v113 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v113 + 1;
            v111 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v14 = v110++ >= 9;
              if (v14)
              {
                uint64_t v111 = 0;
                goto LABEL_244;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v111 = 0;
        }
LABEL_244:
        [a1 addIsSenderShortCodeList:v111 != 0];
        goto LABEL_149;
      case 0x15u:
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v117 = 0;
        while (2)
        {
          uint64_t v118 = *v3;
          unint64_t v119 = *(void *)(a2 + v118);
          if (v119 == -1 || v119 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
            *(void *)(a2 + v118) = v119 + 1;
            v117 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v14 = v116++ >= 9;
              if (v14)
              {
                uint64_t v117 = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v117 = 0;
        }
LABEL_248:
        [a1 addIsLongMessageList:v117 != 0];
        goto LABEL_149;
      case 0x16u:
        uint64_t v51 = objc_alloc_init(FLOWSchemaFLOWRichAttachmentIntelligenceFeatureUsage);
        if (PBReaderPlaceMark()
          && (FLOWSchemaFLOWRichAttachmentIntelligenceFeatureUsageReadFrom(v51, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRichAttachmentIntelligenceFeatureUsage:", v51, 0, 0);
LABEL_148:

LABEL_149:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_269:

        return 0;
      case 0x17u:
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v123 = 0;
        while (2)
        {
          uint64_t v124 = *v3;
          unint64_t v125 = *(void *)(a2 + v124);
          if (v125 == -1 || v125 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v126 = *(unsigned char *)(*(void *)(a2 + *v7) + v125);
            *(void *)(a2 + v124) = v125 + 1;
            v123 |= (unint64_t)(v126 & 0x7F) << v121;
            if (v126 < 0)
            {
              v121 += 7;
              BOOL v14 = v122++ >= 9;
              if (v14)
              {
                uint64_t v127 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v127 = 0;
        }
        else {
          uint64_t v127 = v123;
        }
LABEL_253:
        [a1 addMessageDurationsInSeconds:v127];
        goto LABEL_149;
      case 0x18u:
        char v128 = 0;
        unsigned int v129 = 0;
        uint64_t v130 = 0;
        while (2)
        {
          uint64_t v131 = *v3;
          unint64_t v132 = *(void *)(a2 + v131);
          if (v132 == -1 || v132 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
            *(void *)(a2 + v131) = v132 + 1;
            v130 |= (unint64_t)(v133 & 0x7F) << v128;
            if (v133 < 0)
            {
              v128 += 7;
              BOOL v14 = v129++ >= 9;
              if (v14)
              {
                uint64_t v134 = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v134 = 0;
        }
        else {
          uint64_t v134 = v130;
        }
LABEL_258:
        [a1 setUserPersona:v134];
        goto LABEL_149;
      case 0x19u:
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v137 = 0;
        while (2)
        {
          uint64_t v138 = *v3;
          unint64_t v139 = *(void *)(a2 + v138);
          if (v139 == -1 || v139 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v140 = *(unsigned char *)(*(void *)(a2 + *v7) + v139);
            *(void *)(a2 + v138) = v139 + 1;
            v137 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              BOOL v14 = v136++ >= 9;
              if (v14)
              {
                uint64_t v137 = 0;
                goto LABEL_262;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v137 = 0;
        }
LABEL_262:
        [a1 setIsSummarized:v137 != 0];
        goto LABEL_149;
      case 0x1Au:
        char v141 = 0;
        unsigned int v142 = 0;
        uint64_t v143 = 0;
        while (2)
        {
          uint64_t v144 = *v3;
          unint64_t v145 = *(void *)(a2 + v144);
          if (v145 == -1 || v145 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v146 = *(unsigned char *)(*(void *)(a2 + *v7) + v145);
            *(void *)(a2 + v144) = v145 + 1;
            v143 |= (unint64_t)(v146 & 0x7F) << v141;
            if (v146 < 0)
            {
              v141 += 7;
              BOOL v14 = v142++ >= 9;
              if (v14)
              {
                uint64_t v147 = 0;
                goto LABEL_267;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v147 = 0;
        }
        else {
          uint64_t v147 = v143;
        }
LABEL_267:
        [a1 setSummarySourceType:v147];
        goto LABEL_149;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_149;
    }
  }
}

uint64_t FLOWSchemaFLOWSmsTextContentMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_53;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_56:
        [a1 setMessageCharLength:v23];
        goto LABEL_70;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_61:
        [a1 setMessageWordLength:v31];
        goto LABEL_70;
      case 3u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWKeyboardUsageMetadata);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWKeyboardUsageMetadataReadFrom(v32, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFlowKeyboardUsageMetadata:", v32, 0, 0);

LABEL_70:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v35 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_65:
        [a1 setIsPunctuationUsed:v35 != 0];
        goto LABEL_70;
      case 5u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v41 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v41 = 0;
        }
LABEL_69:
        [a1 setIsPayloadMultilingual:v41 != 0];
        goto LABEL_70;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_70;
    }
  }
}

BOOL FLOWSchemaFLOWSmsTextContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWSmsTextContentMetadata);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSmsTextContentMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSmsTextContentMetadata:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(FLOWSchemaFLOWSmsAttachmentMetadata);
    if (!PBReaderPlaceMark() || (FLOWSchemaFLOWSmsAttachmentMetadataReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSmsAttachmentMetadata:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWSportsExecutionTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v15) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = (v10 & 7) == 4;
        }
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v17 = 0;
              unsigned int v18 = 0;
              uint64_t v19 = 0;
              break;
            case 2u:
              char v25 = PBReaderReadString();
              if (v25) {
                [a1 addLeague:v25];
              }
              goto LABEL_36;
            case 3u:
              char v25 = PBReaderReadString();
              if (v25) {
                [a1 addAthleteEntities:v25];
              }
              goto LABEL_36;
            case 4u:
              char v25 = PBReaderReadString();
              if (v25) {
                [a1 addTeamEntities:v25];
              }
              goto LABEL_36;
            case 5u:
              char v25 = PBReaderReadString();
              if (v25) {
                [a1 addEventEntities:v25];
              }
LABEL_36:

              goto LABEL_42;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_42:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_38;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_41:
          [a1 addSportName:v23];
          goto LABEL_42;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWStateReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (FLOWSchemaFLOWStateReason *)objc_claimAutoreleasedReturnValue();
        [a1 setCurrentTaskName:v17];
        goto LABEL_35;
      case 2u:
        PBReaderReadString();
        char v17 = (FLOWSchemaFLOWStateReason *)objc_claimAutoreleasedReturnValue();
        [a1 setCurrentTaskType:v17];
        goto LABEL_35;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_42:
        [a1 setFlowStateType:v25];
        goto LABEL_36;
      case 4u:
        char v17 = objc_alloc_init(FLOWSchemaFLOWStateReason);
        if PBReaderPlaceMark() && (FLOWSchemaFLOWStateReasonReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFlowStateReason:", v17, 0, 0);
LABEL_35:

LABEL_36:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        PBReaderReadString();
        char v17 = (FLOWSchemaFLOWStateReason *)objc_claimAutoreleasedReturnValue();
        [a1 setResolvedSlotName:v17];
        goto LABEL_35;
      case 6u:
        PBReaderReadString();
        char v17 = (FLOWSchemaFLOWStateReason *)objc_claimAutoreleasedReturnValue();
        [a1 setFlowStateReasonDescription:v17];
        goto LABEL_35;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_36;
    }
  }
}

uint64_t FLOWSchemaFLOWStateReasonReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setStatusReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWStepReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_56;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_59;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_56:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_59:
        objc_msgSend(a1, "setSequenceNum:", v23, v33, v34);
        goto LABEL_53;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_64:
        objc_msgSend(a1, "setTimestampMs:", v31, v33, v34);
        goto LABEL_53;
      case 3u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWState);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWStateReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlowState:", v32, 0, 0);
        goto LABEL_52;
      case 4u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWAppContext);
        if (!PBReaderPlaceMark() || (FLOWSchemaFLOWAppContextReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppContext:", v32, 0, 0);
        goto LABEL_52;
      case 5u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWDomainContext);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWDomainContextReadFrom(v32, a2)) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        if (v32) {
          objc_msgSend(a1, "addDomainContext:", v32, 0, 0);
        }
        goto LABEL_52;
      case 6u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWPlatformContext);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWPlatformContextReadFrom(v32, a2)) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        if (v32) {
          objc_msgSend(a1, "addPlatformContext:", v32, 0, 0);
        }
        goto LABEL_52;
      case 7u:
        unsigned int v32 = objc_alloc_init(FLOWSchemaFLOWPlatformContext);
        if (PBReaderPlaceMark() && FLOWSchemaFLOWPlatformContextReadFrom(v32, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPlatformRelatedContext:", v32, 0, 0);
LABEL_52:

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_66:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

uint64_t FLOWSchemaFLOWTextMessageLengthReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setMessageCharLength:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setMessageWordLength:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL FLOWSchemaFLOWVoiceShortcutActionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = PBReaderReadString();
          [a1 setAppId:v17];
          goto LABEL_25;
        case 2u:
          char v17 = PBReaderReadString();
          [a1 setIntentCategory:v17];
          goto LABEL_25;
        case 3u:
          char v17 = PBReaderReadString();
          [a1 setIntentName:v17];
          goto LABEL_25;
        case 4u:
          char v17 = PBReaderReadString();
          [a1 setIntentNLDomain:v17];
LABEL_25:

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_26:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWVoiceShortcutContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(FLOWSchemaFLOWVoiceShortcutAction);
        if (!PBReaderPlaceMark() || !FLOWSchemaFLOWVoiceShortcutActionReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addVoiceShortcutAction:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWWebAnswerExecutionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_64;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_67;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_67:
          [a1 setAnswerType:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_72:
          [a1 setAllowListType:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_77:
          [a1 setFuzzyMatchType:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_82:
          [a1 setSubDomain:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_87:
          [a1 setQuality:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v56 = *v3;
        unint64_t v57 = *(void *)(a2 + v56);
        if (v57 == -1 || v57 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
        *(void *)(a2 + v56) = v57 + 1;
        v55 |= (unint64_t)(v58 & 0x7F) << v53;
        if ((v58 & 0x80) == 0) {
          goto LABEL_89;
        }
        v53 += 7;
        BOOL v14 = v54++ >= 9;
        if (v14)
        {
          uint64_t v59 = 0;
          goto LABEL_92;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_89:
      uint64_t v59 = *(unsigned char *)(a2 + *v5) ? 0 : v55;
LABEL_92:
      [a1 setAnswerClass:v59];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWWebAnswerExecutionTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setAnswerId:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t FLOWSchemaFLOWholeHouseAudioDestinationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setEligibleDeviceCount:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setDeviceSuccessCount:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GRRSchemaGRRClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 101)
      {
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(GRRSchemaGRRHypothesisRankingContext);
          if (!PBReaderPlaceMark() || !GRRSchemaGRRHypothesisRankingContextReadFrom(v18, a2))
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setHypothesisRankingContext:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 103)
        {
          unsigned int v18 = objc_alloc_init(GRRSchemaGRRSystemErrorOccurred);
          if (!PBReaderPlaceMark() || (GRRSchemaGRRSystemErrorOccurredReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setSystemErrorOccurred:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(GRRSchemaGRRClientEventMetadata);
          if (!PBReaderPlaceMark() || !GRRSchemaGRRClientEventMetadataReadFrom(v18, a2)) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(GRRSchemaGRRFeatureExtractionContext);
          if (!PBReaderPlaceMark() || !GRRSchemaGRRFeatureExtractionContextReadFrom(v18, a2)) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFeatureExtractionContext:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GRRSchemaGRRClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGrrId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setResultCandidateId:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRFeatureReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v19 = objc_alloc_init(GRRSchemaGRRStringList);
        if (!PBReaderPlaceMark() || (GRRSchemaGRRStringListReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_450;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setApplicationsInForeground:", v19, 0, 0);
        goto LABEL_292;
      case 2u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
        else {
          uint64_t v28 = v23;
        }
LABEL_299:
        [a1 setAsrRank:v28];
        goto LABEL_293;
      case 3u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_303:
        [a1 setCanResolveContactByRelationship:v31 != 0];
        goto LABEL_293;
      case 4u:
        PBReaderReadString();
        uint64_t v19 = (GRRSchemaGRRStringList *)objc_claimAutoreleasedReturnValue();
        [a1 setConfiguredSiriLanguage:v19];
        goto LABEL_292;
      case 5u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_307;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_307:
        [a1 setContactHasRequestedAddressDetail:v38 != 0];
        goto LABEL_293;
      case 6u:
        uint64_t v43 = *v3;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(a2 + *v4))
        {
          double v45 = *(double *)(*(void *)(a2 + *v7) + v44);
          *(void *)(a2 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v45 = 0.0;
        }
        [a1 setContactMatchConfidence:v45];
        goto LABEL_293;
      case 7u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          uint64_t v50 = *(void *)(a2 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v15 = v47++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_311;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
LABEL_311:
        [a1 setDeviceIsPlayingAudio:v48 != 0];
        goto LABEL_293;
      case 8u:
        PBReaderReadString();
        uint64_t v19 = (GRRSchemaGRRStringList *)objc_claimAutoreleasedReturnValue();
        [a1 setInputOrigin:v19];
        goto LABEL_292;
      case 9u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v15 = v54++ >= 9;
              if (v15)
              {
                uint64_t v55 = 0;
                goto LABEL_315;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
LABEL_315:
        [a1 setIsActiveAlarmPresent:v55 != 0];
        goto LABEL_293;
      case 0xAu:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        while (2)
        {
          uint64_t v63 = *v3;
          uint64_t v64 = *(void *)(a2 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v15 = v61++ >= 9;
              if (v15)
              {
                uint64_t v62 = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v62 = 0;
        }
LABEL_319:
        [a1 setIsActiveAppointmentPresent:v62 != 0];
        goto LABEL_293;
      case 0xBu:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        while (2)
        {
          uint64_t v70 = *v3;
          uint64_t v71 = *(void *)(a2 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v15 = v68++ >= 9;
              if (v15)
              {
                uint64_t v69 = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v69 = 0;
        }
LABEL_323:
        [a1 setIsAnnounceEnabled:v69 != 0];
        goto LABEL_293;
      case 0xCu:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        while (2)
        {
          uint64_t v77 = *v3;
          uint64_t v78 = *(void *)(a2 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v15 = v75++ >= 9;
              if (v15)
              {
                uint64_t v76 = 0;
                goto LABEL_327;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v76 = 0;
        }
LABEL_327:
        [a1 setIsAudioPlaying:v76 != 0];
        goto LABEL_293;
      case 0xDu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        while (2)
        {
          uint64_t v84 = *v3;
          uint64_t v85 = *(void *)(a2 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v15 = v82++ >= 9;
              if (v15)
              {
                uint64_t v83 = 0;
                goto LABEL_331;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v83 = 0;
        }
LABEL_331:
        [a1 setIsAppInstalled:v83 != 0];
        goto LABEL_293;
      case 0xEu:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_335;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_335:
        [a1 setIsAppMatchPresent:v90 != 0];
        goto LABEL_293;
      case 0xFu:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        while (2)
        {
          uint64_t v98 = *v3;
          uint64_t v99 = *(void *)(a2 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v15 = v96++ >= 9;
              if (v15)
              {
                uint64_t v97 = 0;
                goto LABEL_339;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v97 = 0;
        }
LABEL_339:
        [a1 setIsAppRunning:v97 != 0];
        goto LABEL_293;
      case 0x10u:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        while (2)
        {
          uint64_t v105 = *v3;
          uint64_t v106 = *(void *)(a2 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v107;
            v104 |= (unint64_t)(v108 & 0x7F) << v102;
            if (v108 < 0)
            {
              v102 += 7;
              BOOL v15 = v103++ >= 9;
              if (v15)
              {
                uint64_t v104 = 0;
                goto LABEL_343;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v104 = 0;
        }
LABEL_343:
        [a1 setIsArtistPresent:v104 != 0];
        goto LABEL_293;
      case 0x11u:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        while (2)
        {
          uint64_t v112 = *v3;
          uint64_t v113 = *(void *)(a2 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v15 = v110++ >= 9;
              if (v15)
              {
                uint64_t v111 = 0;
                goto LABEL_347;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v111 = 0;
        }
LABEL_347:
        [a1 setIsContactNameResolved:v111 != 0];
        goto LABEL_293;
      case 0x12u:
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        while (2)
        {
          uint64_t v119 = *v3;
          uint64_t v120 = *(void *)(a2 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(a2 + *v7) + v120);
            *(void *)(a2 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v15 = v117++ >= 9;
              if (v15)
              {
                uint64_t v118 = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v118 = 0;
        }
LABEL_351:
        [a1 setIsEmailAvailable:v118 != 0];
        goto LABEL_293;
      case 0x13u:
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v125 = 0;
        while (2)
        {
          uint64_t v126 = *v3;
          uint64_t v127 = *(void *)(a2 + v126);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(a2 + *v7) + v127);
            *(void *)(a2 + v126) = v128;
            v125 |= (unint64_t)(v129 & 0x7F) << v123;
            if (v129 < 0)
            {
              v123 += 7;
              BOOL v15 = v124++ >= 9;
              if (v15)
              {
                uint64_t v125 = 0;
                goto LABEL_355;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v125 = 0;
        }
LABEL_355:
        [a1 setIsFollowUp:v125 != 0];
        goto LABEL_293;
      case 0x14u:
        char v130 = 0;
        unsigned int v131 = 0;
        uint64_t v132 = 0;
        while (2)
        {
          uint64_t v133 = *v3;
          uint64_t v134 = *(void *)(a2 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
            *(void *)(a2 + v133) = v135;
            v132 |= (unint64_t)(v136 & 0x7F) << v130;
            if (v136 < 0)
            {
              v130 += 7;
              BOOL v15 = v131++ >= 9;
              if (v15)
              {
                uint64_t v132 = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v132 = 0;
        }
LABEL_359:
        [a1 setIsMediaItemEntityPresent:v132 != 0];
        goto LABEL_293;
      case 0x15u:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v139 = 0;
        while (2)
        {
          uint64_t v140 = *v3;
          uint64_t v141 = *(void *)(a2 + v140);
          unint64_t v142 = v141 + 1;
          if (v141 == -1 || v142 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v141);
            *(void *)(a2 + v140) = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if (v143 < 0)
            {
              v137 += 7;
              BOOL v15 = v138++ >= 9;
              if (v15)
              {
                uint64_t v139 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v139 = 0;
        }
LABEL_363:
        [a1 setIsMessagingPossible:v139 != 0];
        goto LABEL_293;
      case 0x16u:
        char v144 = 0;
        unsigned int v145 = 0;
        uint64_t v146 = 0;
        while (2)
        {
          uint64_t v147 = *v3;
          uint64_t v148 = *(void *)(a2 + v147);
          unint64_t v149 = v148 + 1;
          if (v148 == -1 || v149 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v150 = *(unsigned char *)(*(void *)(a2 + *v7) + v148);
            *(void *)(a2 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              BOOL v15 = v145++ >= 9;
              if (v15)
              {
                uint64_t v146 = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v146 = 0;
        }
LABEL_367:
        [a1 setIsMessagingPossibleForSendMessageIntent:v146 != 0];
        goto LABEL_293;
      case 0x17u:
        char v151 = 0;
        unsigned int v152 = 0;
        uint64_t v153 = 0;
        while (2)
        {
          uint64_t v154 = *v3;
          uint64_t v155 = *(void *)(a2 + v154);
          unint64_t v156 = v155 + 1;
          if (v155 == -1 || v156 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v157 = *(unsigned char *)(*(void *)(a2 + *v7) + v155);
            *(void *)(a2 + v154) = v156;
            v153 |= (unint64_t)(v157 & 0x7F) << v151;
            if (v157 < 0)
            {
              v151 += 7;
              BOOL v15 = v152++ >= 9;
              if (v15)
              {
                uint64_t v153 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v153 = 0;
        }
LABEL_371:
        [a1 setIsPhoneCallPossible:v153 != 0];
        goto LABEL_293;
      case 0x18u:
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v160 = 0;
        while (2)
        {
          uint64_t v161 = *v3;
          uint64_t v162 = *(void *)(a2 + v161);
          unint64_t v163 = v162 + 1;
          if (v162 == -1 || v163 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v162);
            *(void *)(a2 + v161) = v163;
            v160 |= (unint64_t)(v164 & 0x7F) << v158;
            if (v164 < 0)
            {
              v158 += 7;
              BOOL v15 = v159++ >= 9;
              if (v15)
              {
                uint64_t v160 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v160 = 0;
        }
LABEL_375:
        [a1 setIsPhoneCallPossibleForPhoneCallIntent:v160 != 0];
        goto LABEL_293;
      case 0x19u:
        char v165 = 0;
        unsigned int v166 = 0;
        uint64_t v167 = 0;
        while (2)
        {
          uint64_t v168 = *v3;
          uint64_t v169 = *(void *)(a2 + v168);
          unint64_t v170 = v169 + 1;
          if (v169 == -1 || v170 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v171 = *(unsigned char *)(*(void *)(a2 + *v7) + v169);
            *(void *)(a2 + v168) = v170;
            v167 |= (unint64_t)(v171 & 0x7F) << v165;
            if (v171 < 0)
            {
              v165 += 7;
              BOOL v15 = v166++ >= 9;
              if (v15)
              {
                uint64_t v167 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v167 = 0;
        }
LABEL_379:
        [a1 setIsPhoneNumberAvailable:v167 != 0];
        goto LABEL_293;
      case 0x1Au:
        char v172 = 0;
        unsigned int v173 = 0;
        uint64_t v174 = 0;
        while (2)
        {
          uint64_t v175 = *v3;
          uint64_t v176 = *(void *)(a2 + v175);
          unint64_t v177 = v176 + 1;
          if (v176 == -1 || v177 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v178 = *(unsigned char *)(*(void *)(a2 + *v7) + v176);
            *(void *)(a2 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if (v178 < 0)
            {
              v172 += 7;
              BOOL v15 = v173++ >= 9;
              if (v15)
              {
                uint64_t v174 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v174 = 0;
        }
LABEL_383:
        [a1 setIsPhoneNumberContactResolvable:v174 != 0];
        goto LABEL_293;
      case 0x1Bu:
        char v179 = 0;
        unsigned int v180 = 0;
        uint64_t v181 = 0;
        while (2)
        {
          uint64_t v182 = *v3;
          uint64_t v183 = *(void *)(a2 + v182);
          unint64_t v184 = v183 + 1;
          if (v183 == -1 || v184 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v185 = *(unsigned char *)(*(void *)(a2 + *v7) + v183);
            *(void *)(a2 + v182) = v184;
            v181 |= (unint64_t)(v185 & 0x7F) << v179;
            if (v185 < 0)
            {
              v179 += 7;
              BOOL v15 = v180++ >= 9;
              if (v15)
              {
                uint64_t v181 = 0;
                goto LABEL_387;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v181 = 0;
        }
LABEL_387:
        [a1 setIsPreviousTurnSendEmptyMessage:v181 != 0];
        goto LABEL_293;
      case 0x1Cu:
        char v186 = 0;
        unsigned int v187 = 0;
        uint64_t v188 = 0;
        while (2)
        {
          uint64_t v189 = *v3;
          uint64_t v190 = *(void *)(a2 + v189);
          unint64_t v191 = v190 + 1;
          if (v190 == -1 || v191 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v192 = *(unsigned char *)(*(void *)(a2 + *v7) + v190);
            *(void *)(a2 + v189) = v191;
            v188 |= (unint64_t)(v192 & 0x7F) << v186;
            if (v192 < 0)
            {
              v186 += 7;
              BOOL v15 = v187++ >= 9;
              if (v15)
              {
                uint64_t v188 = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v188 = 0;
        }
LABEL_391:
        [a1 setIsSettingOn:v188 != 0];
        goto LABEL_293;
      case 0x1Du:
        char v193 = 0;
        unsigned int v194 = 0;
        uint64_t v195 = 0;
        while (2)
        {
          uint64_t v196 = *v3;
          uint64_t v197 = *(void *)(a2 + v196);
          unint64_t v198 = v197 + 1;
          if (v197 == -1 || v198 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v199 = *(unsigned char *)(*(void *)(a2 + *v7) + v197);
            *(void *)(a2 + v196) = v198;
            v195 |= (unint64_t)(v199 & 0x7F) << v193;
            if (v199 < 0)
            {
              v193 += 7;
              BOOL v15 = v194++ >= 9;
              if (v15)
              {
                uint64_t v195 = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v195 = 0;
        }
LABEL_395:
        [a1 setIsTimerActive:v195 != 0];
        goto LABEL_293;
      case 0x1Eu:
        char v200 = 0;
        unsigned int v201 = 0;
        uint64_t v202 = 0;
        while (2)
        {
          uint64_t v203 = *v3;
          uint64_t v204 = *(void *)(a2 + v203);
          unint64_t v205 = v204 + 1;
          if (v204 == -1 || v205 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v206 = *(unsigned char *)(*(void *)(a2 + *v7) + v204);
            *(void *)(a2 + v203) = v205;
            v202 |= (unint64_t)(v206 & 0x7F) << v200;
            if (v206 < 0)
            {
              v200 += 7;
              BOOL v15 = v201++ >= 9;
              if (v15)
              {
                uint64_t v202 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v202 = 0;
        }
LABEL_399:
        [a1 setIsVideoPlaying:v202 != 0];
        goto LABEL_293;
      case 0x1Fu:
        char v207 = 0;
        unsigned int v208 = 0;
        uint64_t v209 = 0;
        while (2)
        {
          uint64_t v210 = *v3;
          uint64_t v211 = *(void *)(a2 + v210);
          unint64_t v212 = v211 + 1;
          if (v211 == -1 || v212 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v213 = *(unsigned char *)(*(void *)(a2 + *v7) + v211);
            *(void *)(a2 + v210) = v212;
            v209 |= (unint64_t)(v213 & 0x7F) << v207;
            if (v213 < 0)
            {
              v207 += 7;
              BOOL v15 = v208++ >= 9;
              if (v15)
              {
                uint64_t v214 = 0;
                goto LABEL_404;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v214 = 0;
        }
        else {
          uint64_t v214 = v209;
        }
LABEL_404:
        [a1 setNumberOfContactsResolved:v214];
        goto LABEL_293;
      case 0x20u:
        PBReaderReadString();
        uint64_t v19 = (GRRSchemaGRRStringList *)objc_claimAutoreleasedReturnValue();
        [a1 setPreviousFlowDomain:v19];
        goto LABEL_292;
      case 0x21u:
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v217 = 0;
        while (2)
        {
          uint64_t v218 = *v3;
          uint64_t v219 = *(void *)(a2 + v218);
          unint64_t v220 = v219 + 1;
          if (v219 == -1 || v220 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v221 = *(unsigned char *)(*(void *)(a2 + *v7) + v219);
            *(void *)(a2 + v218) = v220;
            v217 |= (unint64_t)(v221 & 0x7F) << v215;
            if (v221 < 0)
            {
              v215 += 7;
              BOOL v15 = v216++ >= 9;
              if (v15)
              {
                uint64_t v222 = 0;
                goto LABEL_409;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v222 = 0;
        }
        else {
          uint64_t v222 = v217;
        }
LABEL_409:
        [a1 setRequestTimeBeginMs:v222];
        goto LABEL_293;
      case 0x22u:
        char v223 = 0;
        unsigned int v224 = 0;
        uint64_t v225 = 0;
        while (2)
        {
          uint64_t v226 = *v3;
          uint64_t v227 = *(void *)(a2 + v226);
          unint64_t v228 = v227 + 1;
          if (v227 == -1 || v228 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v229 = *(unsigned char *)(*(void *)(a2 + *v7) + v227);
            *(void *)(a2 + v226) = v228;
            v225 |= (unint64_t)(v229 & 0x7F) << v223;
            if (v229 < 0)
            {
              v223 += 7;
              BOOL v15 = v224++ >= 9;
              if (v15)
              {
                uint64_t v225 = 0;
                goto LABEL_413;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v225 = 0;
        }
LABEL_413:
        [a1 setSharingAppActive:v225 != 0];
        goto LABEL_293;
      case 0x23u:
        char v230 = 0;
        unsigned int v231 = 0;
        uint64_t v232 = 0;
        while (2)
        {
          uint64_t v233 = *v3;
          uint64_t v234 = *(void *)(a2 + v233);
          unint64_t v235 = v234 + 1;
          if (v234 == -1 || v235 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v236 = *(unsigned char *)(*(void *)(a2 + *v7) + v234);
            *(void *)(a2 + v233) = v235;
            v232 |= (unint64_t)(v236 & 0x7F) << v230;
            if (v236 < 0)
            {
              v230 += 7;
              BOOL v15 = v231++ >= 9;
              if (v15)
              {
                uint64_t v232 = 0;
                goto LABEL_417;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v232 = 0;
        }
LABEL_417:
        [a1 setSharingEntityPresent:v232 != 0];
        goto LABEL_293;
      case 0x24u:
        char v237 = 0;
        unsigned int v238 = 0;
        uint64_t v239 = 0;
        while (2)
        {
          uint64_t v240 = *v3;
          uint64_t v241 = *(void *)(a2 + v240);
          unint64_t v242 = v241 + 1;
          if (v241 == -1 || v242 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v243 = *(unsigned char *)(*(void *)(a2 + *v7) + v241);
            *(void *)(a2 + v240) = v242;
            v239 |= (unint64_t)(v243 & 0x7F) << v237;
            if (v243 < 0)
            {
              v237 += 7;
              BOOL v15 = v238++ >= 9;
              if (v15)
              {
                uint64_t v239 = 0;
                goto LABEL_421;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v239 = 0;
        }
LABEL_421:
        [a1 setSharingRecipientPresent:v239 != 0];
        goto LABEL_293;
      case 0x25u:
        char v244 = 0;
        unsigned int v245 = 0;
        uint64_t v246 = 0;
        while (2)
        {
          uint64_t v247 = *v3;
          uint64_t v248 = *(void *)(a2 + v247);
          unint64_t v249 = v248 + 1;
          if (v248 == -1 || v249 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v250 = *(unsigned char *)(*(void *)(a2 + *v7) + v248);
            *(void *)(a2 + v247) = v249;
            v246 |= (unint64_t)(v250 & 0x7F) << v244;
            if (v250 < 0)
            {
              v244 += 7;
              BOOL v15 = v245++ >= 9;
              if (v15)
              {
                uint64_t v246 = 0;
                goto LABEL_425;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v246 = 0;
        }
LABEL_425:
        [a1 setSmsAttachmentExists:v246 != 0];
        goto LABEL_293;
      case 0x26u:
        char v251 = 0;
        unsigned int v252 = 0;
        uint64_t v253 = 0;
        while (2)
        {
          uint64_t v254 = *v3;
          uint64_t v255 = *(void *)(a2 + v254);
          unint64_t v256 = v255 + 1;
          if (v255 == -1 || v256 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v257 = *(unsigned char *)(*(void *)(a2 + *v7) + v255);
            *(void *)(a2 + v254) = v256;
            v253 |= (unint64_t)(v257 & 0x7F) << v251;
            if (v257 < 0)
            {
              v251 += 7;
              BOOL v15 = v252++ >= 9;
              if (v15)
              {
                uint64_t v253 = 0;
                goto LABEL_429;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v253 = 0;
        }
LABEL_429:
        [a1 setSmsAttributeRecipientExists:v253 != 0];
        goto LABEL_293;
      case 0x27u:
        char v258 = 0;
        unsigned int v259 = 0;
        uint64_t v260 = 0;
        while (2)
        {
          uint64_t v261 = *v3;
          uint64_t v262 = *(void *)(a2 + v261);
          unint64_t v263 = v262 + 1;
          if (v262 == -1 || v263 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v264 = *(unsigned char *)(*(void *)(a2 + *v7) + v262);
            *(void *)(a2 + v261) = v263;
            v260 |= (unint64_t)(v264 & 0x7F) << v258;
            if (v264 < 0)
            {
              v258 += 7;
              BOOL v15 = v259++ >= 9;
              if (v15)
              {
                uint64_t v260 = 0;
                goto LABEL_433;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v260 = 0;
        }
LABEL_433:
        [a1 setSmsAttributeSenderExists:v260 != 0];
        goto LABEL_293;
      case 0x28u:
        char v265 = 0;
        unsigned int v266 = 0;
        uint64_t v267 = 0;
        while (2)
        {
          uint64_t v268 = *v3;
          uint64_t v269 = *(void *)(a2 + v268);
          unint64_t v270 = v269 + 1;
          if (v269 == -1 || v270 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)(a2 + *v7) + v269);
            *(void *)(a2 + v268) = v270;
            v267 |= (unint64_t)(v271 & 0x7F) << v265;
            if (v271 < 0)
            {
              v265 += 7;
              BOOL v15 = v266++ >= 9;
              if (v15)
              {
                uint64_t v267 = 0;
                goto LABEL_437;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v267 = 0;
        }
LABEL_437:
        [a1 setSmsPhoneNumberMentioned:v267 != 0];
        goto LABEL_293;
      case 0x29u:
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v274 = 0;
        while (2)
        {
          uint64_t v275 = *v3;
          uint64_t v276 = *(void *)(a2 + v275);
          unint64_t v277 = v276 + 1;
          if (v276 == -1 || v277 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v278 = *(unsigned char *)(*(void *)(a2 + *v7) + v276);
            *(void *)(a2 + v275) = v277;
            v274 |= (unint64_t)(v278 & 0x7F) << v272;
            if (v278 < 0)
            {
              v272 += 7;
              BOOL v15 = v273++ >= 9;
              if (v15)
              {
                uint64_t v274 = 0;
                goto LABEL_441;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v274 = 0;
        }
LABEL_441:
        [a1 setSmsTextPayloadExists:v274 != 0];
        goto LABEL_293;
      case 0x2Au:
        char v279 = 0;
        unsigned int v280 = 0;
        uint64_t v281 = 0;
        while (2)
        {
          uint64_t v282 = *v3;
          uint64_t v283 = *(void *)(a2 + v282);
          unint64_t v284 = v283 + 1;
          if (v283 == -1 || v284 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v285 = *(unsigned char *)(*(void *)(a2 + *v7) + v283);
            *(void *)(a2 + v282) = v284;
            v281 |= (unint64_t)(v285 & 0x7F) << v279;
            if (v285 < 0)
            {
              v279 += 7;
              BOOL v15 = v280++ >= 9;
              if (v15)
              {
                uint64_t v286 = 0;
                goto LABEL_446;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v286 = 0;
        }
        else {
          uint64_t v286 = v281;
        }
LABEL_446:
        [a1 setTimeSinceLastValidRequestMs:v286];
        goto LABEL_293;
      case 0x2Bu:
        uint64_t v19 = objc_alloc_init(GRRSchemaGRRStringList);
        if PBReaderPlaceMark() && (GRRSchemaGRRStringListReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTopTopics:", v19, 0, 0);
LABEL_292:

LABEL_293:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_450:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_293;
    }
  }
}

BOOL GRRSchemaGRRFeatureExtractedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(GRRSchemaGRRFeature);
        if (!PBReaderPlaceMark() || !GRRSchemaGRRFeatureReadFrom(v18, a2))
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addFeatures:", v18, 0, 0);
        }
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(GRRSchemaGRRSource);
        if (!PBReaderPlaceMark() || (GRRSchemaGRRSourceReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSource:", v18, 0, 0);
        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v18 = (GRRSchemaGRRFeature *)objc_claimAutoreleasedReturnValue();
    if (v18) {
      [a1 addFeatureNames:v18];
    }
LABEL_30:

    goto LABEL_32;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GRRSchemaGRRFeatureExtractionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 101)
      {
        unsigned int v18 = objc_alloc_init(GRRSchemaGRRFeatureExtracted);
        if (!PBReaderPlaceMark() || !GRRSchemaGRRFeatureExtractedReadFrom(v18, a2))
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 100) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextId:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(GRRSchemaGRRFeatureExtractionStarted);
    if (!PBReaderPlaceMark() || (GRRSchemaGRRFeatureExtractionStartedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRFeatureExtractionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(GRRSchemaGRRSource);
        if (!PBReaderPlaceMark() || (GRRSchemaGRRSourceReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSource:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRFeatureFlagReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v23 = PBReaderReadString();
        [a1 setFeatureFlagKey:v23];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_33:
        [a1 setIsEnabled:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRHypothesisRankedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(GRRSchemaGRRRanking);
        if (!PBReaderPlaceMark() || !GRRSchemaGRRRankingReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addRankings:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GRRSchemaGRRHypothesisRankingContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 101)
      {
        unsigned int v18 = objc_alloc_init(GRRSchemaGRRHypothesisRanked);
        if (!PBReaderPlaceMark() || (GRRSchemaGRRHypothesisRankedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 100) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextId:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(GRRSchemaGRRHypothesisRankingStarted);
    if (!PBReaderPlaceMark() || !GRRSchemaGRRHypothesisRankingStartedReadFrom(v18, a2)) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GRRSchemaGRRHypothesisRankingStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        unint64_t v17 = (GRRSchemaGRRFeatureFlag *)objc_claimAutoreleasedReturnValue();
        [a1 setAssetVersion:v17];
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(GRRSchemaGRRFeatureFlag);
    if (!PBReaderPlaceMark() || !GRRSchemaGRRFeatureFlagReadFrom(v17, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addFeatureFlags:", v17, 0, 0);
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRRankingReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v28 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v28, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setParseId:", v28, 0, 0);
      }
      else if (v19 == 3)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
        {
          double v31 = *(double *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v31 = 0.0;
        }
        [a1 setScore:v31];
      }
      else if (v19 == 2)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_37;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v27 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_40:
        [a1 setParseType:v27];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRSourceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSourceId:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setSourceType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRStringListReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        if (v17) {
          [a1 addStringName:v17];
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GRRSchemaGRRSystemErrorOccurredReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setErrorMessage:v24];
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALAlarmContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setTimeSinceAlarmFiredInSeconds:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL HALSchemaHALClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(HALSchemaHALClientEventMetadata);
        if (!PBReaderPlaceMark() || !HALSchemaHALClientEventMetadataReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
        goto LABEL_45;
      case 2u:
        char v17 = objc_alloc_init(HALSchemaHALCrossDeviceCommandExecutionContext);
        if (!PBReaderPlaceMark() || !HALSchemaHALCrossDeviceCommandExecutionContextReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCrossDeviceCommandContext:", v17, 0, 0);
        goto LABEL_45;
      case 3u:
        char v17 = objc_alloc_init(HALSchemaHALLocalFetchContext);
        if (!PBReaderPlaceMark() || !HALSchemaHALLocalFetchContextReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalFetchContext:", v17, 0, 0);
        goto LABEL_45;
      case 4u:
        char v17 = objc_alloc_init(HALSchemaHALContextCollectorFetchContext);
        if (!PBReaderPlaceMark() || !HALSchemaHALContextCollectorFetchContextReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextCollectorFetchContext:", v17, 0, 0);
        goto LABEL_45;
      case 5u:
        char v17 = objc_alloc_init(HALSchemaHALForceFetchContext);
        if (!PBReaderPlaceMark() || !HALSchemaHALForceFetchContextReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setForceFetchContext:", v17, 0, 0);
        goto LABEL_45;
      case 6u:
        char v17 = objc_alloc_init(HALSchemaHALCompanionDeviceDiscoveryContext);
        if (!PBReaderPlaceMark()
          || (HALSchemaHALCompanionDeviceDiscoveryContextReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompanionDeviceDiscoveryContext:", v17, 0, 0);
        goto LABEL_45;
      case 7u:
        char v17 = objc_alloc_init(HALSchemaHALCompanionDeviceCommunicationContext);
        if (!PBReaderPlaceMark()
          || (HALSchemaHALCompanionDeviceCommunicationContextReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompanionDeviceCommunicationContext:", v17, 0, 0);
        goto LABEL_45;
      case 8u:
        char v17 = objc_alloc_init(HALSchemaHALNearbyPersonalDevicesReported);
        if PBReaderPlaceMark() && (HALSchemaHALNearbyPersonalDevicesReportedReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNearbyPersonalDevicesReported:", v17, 0, 0);
LABEL_45:

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_46;
    }
  }
}

BOOL HALSchemaHALClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHalId:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setRequestId:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL HALSchemaHALContextCollectorFetchContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextId:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(HALSchemaHALContextCollectorFetchStarted);
        if (!PBReaderPlaceMark() || (HALSchemaHALContextCollectorFetchStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(HALSchemaHALContextCollectorFetchEnded);
        if (!PBReaderPlaceMark() || (HALSchemaHALContextCollectorFetchEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        char v17 = objc_alloc_init(HALSchemaHALContextCollectorFetchFailed);
        if PBReaderPlaceMark() && (HALSchemaHALContextCollectorFetchFailedReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t HALSchemaHALContextCollectorFetchEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setNumDeviceContextsFetched:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALContextCollectorFetchFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setFailureReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALContextCollectorFetchStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setIsContextCollectorLocal:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL HALSchemaHALCrossDeviceCommandExecutionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(HALSchemaHALCrossDeviceCommandExecutionFailed);
        if (!PBReaderPlaceMark()
          || (HALSchemaHALCrossDeviceCommandExecutionFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(HALSchemaHALCrossDeviceCommandExecutionStarted);
        if (!PBReaderPlaceMark()
          || (HALSchemaHALCrossDeviceCommandExecutionStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(HALSchemaHALCrossDeviceCommandExecutionEnded);
    if (!PBReaderPlaceMark() || (HALSchemaHALCrossDeviceCommandExecutionEndedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALCrossDeviceCommandExecutionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = objc_alloc_init(HALSchemaHALDevice);
          uint64_t v40 = 0;
          uint64_t v41 = 0;
          if (PBReaderPlaceMark() && HALSchemaHALDeviceReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            if (v17) {
              objc_msgSend(a1, "addSelected:", v17, 0, 0);
            }

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_48;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_51;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_51:
          objc_msgSend(a1, "setAction:", v25, v40, v41);
          continue;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v28;
          }
LABEL_56:
          objc_msgSend(a1, "setActionResult:", v32, v40, v41);
          continue;
        case 4u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v36 = *v3;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 == -1 || v37 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
        *(void *)(a2 + v36) = v37 + 1;
        v35 |= (unint64_t)(v38 & 0x7F) << v33;
        if ((v38 & 0x80) == 0) {
          goto LABEL_58;
        }
        v33 += 7;
        BOOL v14 = v34++ >= 9;
        if (v14)
        {
          uint64_t v39 = 0;
          goto LABEL_61;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_58:
      uint64_t v39 = *(unsigned char *)(a2 + *v5) ? 0 : v35;
LABEL_61:
      objc_msgSend(a1, "setHomeKitTarget:", v39, v40, v41);
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALCrossDeviceCommandExecutionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setReason:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setAction:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALCrossDeviceCommandExecutionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALDeviceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_66;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_66:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_69:
        [a1 setDeviceProximity:v23];
        goto LABEL_56;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_74:
        [a1 setDeviceFamily:v31];
        goto LABEL_56;
      case 3u:
        PBReaderReadString();
        uint64_t v32 = (HALSchemaHALMediaPlayerContext *)objc_claimAutoreleasedReturnValue();
        [a1 setSystemBuild:v32];
        goto LABEL_55;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_79:
        [a1 setSiriInputLocale:v39];
        goto LABEL_56;
      case 5u:
        uint64_t v32 = objc_alloc_init(HALSchemaHALMediaPlayerContext);
        if (!PBReaderPlaceMark() || (HALSchemaHALMediaPlayerContextReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaPlayerContext:", v32, 0, 0);
        goto LABEL_55;
      case 6u:
        uint64_t v32 = objc_alloc_init(HALSchemaHALAlarmContext);
        if (!PBReaderPlaceMark() || (HALSchemaHALAlarmContextReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAlarmContext:", v32, 0, 0);
        goto LABEL_55;
      case 7u:
        uint64_t v32 = objc_alloc_init(HALSchemaHALTimerContext);
        if (!PBReaderPlaceMark() || (HALSchemaHALTimerContextReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTimerContext:", v32, 0, 0);
        goto LABEL_55;
      case 8u:
        uint64_t v32 = objc_alloc_init(HALSchemaHALVoiceTriggerContext);
        if PBReaderPlaceMark() && (HALSchemaHALVoiceTriggerContextReadFrom(v32, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setVoiceTriggerContext:", v32, 0, 0);
LABEL_55:

LABEL_56:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_86:

        return 0;
      case 9u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_84:
        [a1 setPowerState:v46];
        goto LABEL_56;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_56;
    }
  }
}

BOOL HALSchemaHALForceFetchContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextId:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        char v17 = objc_alloc_init(HALSchemaHALForceFetchStarted);
        if (!PBReaderPlaceMark() || (HALSchemaHALForceFetchStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        char v17 = objc_alloc_init(HALSchemaHALForceFetchEnded);
        if (!PBReaderPlaceMark() || (HALSchemaHALForceFetchEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        char v17 = objc_alloc_init(HALSchemaHALForceFetchFailed);
        if PBReaderPlaceMark() && (HALSchemaHALForceFetchFailedReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t HALSchemaHALForceFetchEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setNumDeviceContextsFetched:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALForceFetchFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setFailureReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALForceFetchStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL HALSchemaHALLocalFetchContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(HALSchemaHALLocalFetchFailed);
        if (!PBReaderPlaceMark() || (HALSchemaHALLocalFetchFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(HALSchemaHALLocalFetchStarted);
        if (!PBReaderPlaceMark() || (HALSchemaHALLocalFetchStartedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(HALSchemaHALLocalFetchEnded);
    if (!PBReaderPlaceMark() || (HALSchemaHALLocalFetchEndedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALLocalFetchEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALLocalFetchFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setFailureReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALLocalFetchStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALMediaPlayerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setState:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setType:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setTimeSinceLastMediaPlaybackInSeconds:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALTimerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setTimeSinceTimerFiredInSeconds:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HALSchemaHALVoiceTriggerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setTimeSinceVoiceTriggerHeardInSeconds:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HOMESchemaHOMEAssistantDeviceBirthdayReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setYear:v30];
      }
      else if ((v10 >> 3) == 3)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setMonth:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HOMESchemaHOMEAssistantInfoReportedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHashedHomeId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL HOMESchemaHOMEClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 102)
      {
        unsigned int v18 = objc_alloc_init(HOMESchemaHOMEAssistantDeviceBirthday);
        if (!PBReaderPlaceMark() || (HOMESchemaHOMEAssistantDeviceBirthdayReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDeviceBirthday:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 101) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(HOMESchemaHOMEClientEventMetadata);
        if (!PBReaderPlaceMark() || (HOMESchemaHOMEClientEventMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(HOMESchemaHOMEAssistantInfoReported);
    if (!PBReaderPlaceMark() || (HOMESchemaHOMEAssistantInfoReportedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setAssistantInfoReported:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t HOMESchemaHOMEClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHomeComponentId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL IHSchemaIHClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(IHSchemaIHClientEventMetadata);
        if (!PBReaderPlaceMark() || (IHSchemaIHClientEventMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(IHSchemaIHModelEvaluationContext);
    if (!PBReaderPlaceMark() || !IHSchemaIHModelEvaluationContextReadFrom(v17, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setModelEvaluationContext:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t IHSchemaIHClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIhId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL IHSchemaIHModelEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 100)
      {
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(IHSchemaIHModelEvaluationEnded);
          if (!PBReaderPlaceMark() || (IHSchemaIHModelEvaluationEndedReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEnded:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(IHSchemaIHModelEvaluationFailed);
          if (!PBReaderPlaceMark() || (IHSchemaIHModelEvaluationFailedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(SISchemaUUID);
          if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContextId:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 100)
        {
          unsigned int v18 = objc_alloc_init(IHSchemaIHModelEvaluationStarted);
          if (!PBReaderPlaceMark() || (IHSchemaIHModelEvaluationStartedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t IHSchemaIHModelEvaluationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(IHSchemaIHScore);
        if (!PBReaderPlaceMark() || (IHSchemaIHScoreReadFrom(v17, a2, v18) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setScore:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t IHSchemaIHModelEvaluationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t IHSchemaIHModelEvaluationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setModelId:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t IHSchemaIHScoreReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        uint64_t v23 = *v4;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v24 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setLowerBoundary:a3];
      }
      else if (v20 == 2)
      {
        uint64_t v25 = *v4;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setUpperBoundary:a3];
      }
      else if (v20 == 1)
      {
        uint64_t v21 = *v4;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setScore:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t INFERENCESchemaINFERENCEBackgroundContactHandleSignalSetReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setPeopleSuggesterScore:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t INFERENCESchemaINFERENCEBackgroundContactSignalSetReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        unint64_t v28 = objc_alloc_init(INFERENCESchemaINFERENCEBackgroundContactHandleSignalSet);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEBackgroundContactHandleSignalSetReadFrom(v28, a2, v29))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v28) {
          objc_msgSend(a1, "addHandlesWithBgPrivacySignals:", v28, 0, 0);
        }
      }
      else if (v20 == 2)
      {
        uint64_t v30 = *v4;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v31);
          *(void *)(a2 + v30) = v31 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setPeopleSuggesterScoreSumForContact:", a3, v33, v34);
      }
      else if (v20 == 1)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (1)
        {
          uint64_t v24 = *v4;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v5)) {
            break;
          }
          char v27 = *(unsigned char *)(*(void *)(a2 + *v8) + v25);
          *(void *)(a2 + v24) = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0) {
            goto LABEL_39;
          }
          v21 += 7;
          BOOL v16 = v22++ >= 9;
          if (v16)
          {
            uint64_t v23 = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v23 = 0;
        }
LABEL_41:
        [a1 setIsMatchWithRelationName:v23 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t INFERENCESchemaINFERENCECRRTrainingSampleCollectedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v17 = (INFERENCESchemaINFERENCEContactResolverConfig *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentTypeName:v17];
        goto LABEL_93;
      case 2u:
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEContactResolverConfig);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEContactResolverConfigReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverConfig:", v17, 0, 0);
        goto LABEL_93;
      case 3u:
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCETrialEnrollment);
        if (!PBReaderPlaceMark() || (INFERENCESchemaINFERENCETrialEnrollmentReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrialEnrollment:", v17, 0, 0);
        goto LABEL_93;
      case 4u:
        PBReaderReadString();
        uint64_t v17 = (INFERENCESchemaINFERENCEContactResolverConfig *)objc_claimAutoreleasedReturnValue();
        [a1 setModelVersion:v17];
        goto LABEL_93;
      case 5u:
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEContactMatch);
        uint64_t v65 = 0;
        uint64_t v66 = 0;
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEContactMatchReadFrom(v17, a2, v19))
        {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addMatches:", v17, 0, 0);
        }
        goto LABEL_93;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v22;
        }
LABEL_100:
        objc_msgSend(a1, "setResolutionState:", v26, v65, v66);
        goto LABEL_94;
      case 7u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v29;
        }
LABEL_105:
        objc_msgSend(a1, "setResolutionType:", v33, v65, v66);
        goto LABEL_94;
      case 8u:
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEPromptContext);
        if (!PBReaderPlaceMark() || (INFERENCESchemaINFERENCEPromptContextReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setForcePrompt:", v17, 0, 0);
        goto LABEL_93;
      case 9u:
        PBReaderReadString();
        uint64_t v17 = (INFERENCESchemaINFERENCEContactResolverConfig *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addAnonymizedContactIdentifiers:v17];
        }
        goto LABEL_93;
      case 0xAu:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v38 + 1;
            v36 |= (unint64_t)(v39 & 0x7F) << v34;
            if (v39 < 0)
            {
              v34 += 7;
              BOOL v14 = v35++ >= 9;
              if (v14)
              {
                uint64_t v36 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_109:
        [a1 setIsInteractionExecuted:v36 != 0];
        goto LABEL_94;
      case 0xBu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v42 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_113:
        [a1 setIsInteractionSuccess:v42 != 0];
        goto LABEL_94;
      case 0xCu:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v52 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v52 = 0;
        }
        else {
          uint64_t v52 = v48;
        }
LABEL_118:
        objc_msgSend(a1, "setInteractionDurationInSecBucket:", v52, v65, v66);
        goto LABEL_94;
      case 0xDu:
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEPotentialRetryContactInteractionContext);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEPotentialRetryContactInteractionContextReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInteractionContext:", v17, 0, 0);
        goto LABEL_93;
      case 0xEu:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                uint64_t v55 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
LABEL_122:
        [a1 setIsPlusContactSuggesterEnabled:v55 != 0];
        goto LABEL_94;
      case 0xFu:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v14 = v60++ >= 9;
              if (v14)
              {
                uint64_t v61 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v61 = 0;
        }
LABEL_126:
        [a1 setIsEntityCandidateRetrievalEnabled:v61 != 0];
        goto LABEL_94;
      case 0x10u:
        uint64_t v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCrrCommsAppSelectionJointId:", v17, 0, 0);
LABEL_93:

LABEL_94:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_128:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_94;
    }
  }
}

uint64_t INFERENCESchemaINFERENCECandidateInfoReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_54;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_57;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_54:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_57:
          [a1 setSearchProvider:v27];
          continue;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (2)
          {
            uint64_t v32 = *v4;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v16 = v30++ >= 9;
                if (v16)
                {
                  uint64_t v36 = 0;
                  goto LABEL_62;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v36 = 0;
          }
          else {
            uint64_t v36 = v31;
          }
LABEL_62:
          [a1 setRank:v36];
          continue;
        case 3u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setScore:a3];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v4;
            uint64_t v43 = *(void *)(a2 + v42);
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v8) + v43);
              *(void *)(a2 + v42) = v44;
              v41 |= (unint64_t)(v45 & 0x7F) << v39;
              if (v45 < 0)
              {
                v39 += 7;
                BOOL v16 = v40++ >= 9;
                if (v16)
                {
                  uint64_t v41 = 0;
                  goto LABEL_66;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v41 = 0;
          }
LABEL_66:
          [a1 setIsShownToUser:v41 != 0];
          continue;
        case 5u:
          char v46 = PBReaderReadString();
          [a1 setAnonymizedEntityIdentifier:v46];

          continue;
        case 6u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v50 = *v4;
        uint64_t v51 = *(void *)(a2 + v50);
        unint64_t v52 = v51 + 1;
        if (v51 == -1 || v52 > *(void *)(a2 + *v5)) {
          break;
        }
        char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
        *(void *)(a2 + v50) = v52;
        v49 |= (unint64_t)(v53 & 0x7F) << v47;
        if ((v53 & 0x80) == 0) {
          goto LABEL_68;
        }
        v47 += 7;
        BOOL v16 = v48++ >= 9;
        if (v16)
        {
          uint64_t v54 = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_68:
      uint64_t v54 = *(unsigned char *)(a2 + *v6) ? 0 : v49;
LABEL_71:
      [a1 setCandidateType:v54];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL INFERENCESchemaINFERENCEClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEMusicAppSelectionGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEMusicAppSelectionGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMusicAppSelectionGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'f':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVideoPlayOnThirdPartyAppGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'g':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationSignalsGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationSignalsGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVideoSmartAppSelectionDisambiguation:", v17, 0, 0);
        goto LABEL_74;
      case 'h':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEResolutionRequestContext);
        if (!PBReaderPlaceMark() || !INFERENCESchemaINFERENCEResolutionRequestContextReadFrom(v17, a2)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolutionRequestContext:", v17, 0, 0);
        goto LABEL_74;
      case 'i':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCESimpleTaskInfoGenerated);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCESimpleTaskInfoGeneratedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSimpleTaskInfoGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'j':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEResolutionQueryInfoGenerated);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEResolutionQueryInfoGeneratedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolutionQueryInfoGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'k':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEQueryUserPromptSelectedInfoGenerated);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEQueryUserPromptSelectedInfoGeneratedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserPromptSelectedInfoGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'l':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEContactCandidatesInfoGenerated);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEContactCandidatesInfoGeneratedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactCandidatesInfoGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'm':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCECRRTrainingSampleCollected);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCECRRTrainingSampleCollectedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCrrTrainingSampleCollected:", v17, 0, 0);
        goto LABEL_74;
      case 'n':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEABModelEvaluated);
        if (!PBReaderPlaceMark() || (INFERENCESchemaINFERENCEABModelEvaluatedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAbModelEvaluated:", v17, 0, 0);
        goto LABEL_74;
      case 'o':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEABModelResultTriggered);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEABModelResultTriggeredReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAbModelResultTriggered:", v17, 0, 0);
        goto LABEL_74;
      case 'p':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEWorkoutsAppSelectionGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEWorkoutsAppSelectionGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWorkoutsAppSelectionGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'q':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCENotebookAppSelectionGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCENotebookAppSelectionGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNotebookAppSelectionGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 'r':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCECommsAppSelectionGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCECommsAppSelectionGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommsAppSelectionGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 's':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEPervasiveEntityResolutionGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEPervasiveEntityResolutionGroundTruthGeneratedReadFrom(v17, a2))
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPervasiveEntityResolutionGroundTruthGenerated:", v17, 0, 0);
        goto LABEL_74;
      case 't':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCESmartEnoughAppSelectionExecutionPathReported);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCESmartEnoughAppSelectionExecutionPathReportedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSeasExecutionPathReported:", v17, 0, 0);
        goto LABEL_74;
      case 'u':
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEAsrEuclidEmbedding);
        if (!PBReaderPlaceMark() || !INFERENCESchemaINFERENCEAsrEuclidEmbeddingReadFrom(v17, a2)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrEuclidEmbedding:", v17, 0, 0);
        goto LABEL_74;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_75:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        uint64_t v17 = objc_alloc_init(INFERENCESchemaINFERENCEClientEventMetadata);
        if (PBReaderPlaceMark()
          && (INFERENCESchemaINFERENCEClientEventMetadataReadFrom(v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_74:

          goto LABEL_75;
        }
LABEL_81:

        return 0;
    }
  }
}

uint64_t INFERENCESchemaINFERENCEClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInferenceId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEConfirmationPromptContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setAnonymizedEntityPresented:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setResolution:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INFERENCESchemaINFERENCEContactReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setAnonymizedContactIdentifier:v17];
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = PBReaderReadString();
    if (v17) {
      [a1 addAnonymizedHandleValues:v17];
    }
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEContactCandidatesInfoGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalResolutionContextId:", v17, 0, 0);
        goto LABEL_41;
      case 2u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setQueryId:", v17, 0, 0);
        goto LABEL_41;
      case 3u:
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCEContactQueryMetadata);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEContactQueryMetadataReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactQueryMetadata:", v17, 0, 0);
        goto LABEL_41;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_53:
        objc_msgSend(a1, "setOntologySource:", v25, v33, v34);
        goto LABEL_58;
      case 5u:
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCECandidateInfo);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        if (PBReaderPlaceMark()
          && INFERENCESchemaINFERENCECandidateInfoReadFrom(v17, a2, v26))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addCandidates:", v17, 0, 0);
          }
LABEL_41:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_60:

        return 0;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                uint64_t v29 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_57:
        [a1 setIsEntityCandidateRetrievalEnabled:v29 != 0];
        goto LABEL_58;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

uint64_t INFERENCESchemaINFERENCEContactFeatureSetReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v6))
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = *v4;
          uint64_t v13 = *(void *)(a2 + v12);
          unint64_t v14 = v13 + 1;
          if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
          *(void *)(a2 + v12) = v14;
          v11 |= (unint64_t)(v15 & 0x7F) << v9;
          if ((v15 & 0x80) == 0) {
            goto LABEL_12;
          }
          v9 += 7;
          if (v10++ >= 9)
          {
            unint64_t v11 = 0;
            uint64_t v17 = *v6;
            int v18 = *(unsigned __int8 *)(a2 + v17);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        if (*(unsigned char *)(a2 + v17)) {
          unint64_t v11 = 0;
        }
LABEL_14:
        if (v18) {
          BOOL v19 = 1;
        }
        else {
          BOOL v19 = (v11 & 7) == 4;
        }
        if (!v19)
        {
          switch((v11 >> 3))
          {
            case 1u:
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)(a2 + v20);
              if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
                *(void *)(a2 + v20) = v21 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsRecent:a3];
              goto LABEL_251;
            case 2u:
              uint64_t v22 = *v4;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
                *(void *)(a2 + v22) = v23 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsRecentInSameDomain:a3];
              goto LABEL_251;
            case 3u:
              uint64_t v24 = *v4;
              unint64_t v25 = *(void *)(a2 + v24);
              if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v25);
                *(void *)(a2 + v24) = v25 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsRecentInSiriRequest:a3];
              goto LABEL_251;
            case 4u:
              uint64_t v26 = *v4;
              unint64_t v27 = *(void *)(a2 + v26);
              if (v27 <= 0xFFFFFFFFFFFFFFFBLL && v27 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v27);
                *(void *)(a2 + v26) = v27 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsRecentlyCorrected:a3];
              goto LABEL_251;
            case 5u:
              uint64_t v28 = *v4;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v29);
                *(void *)(a2 + v28) = v29 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setRecencyRank:a3];
              goto LABEL_251;
            case 6u:
              uint64_t v30 = *v4;
              unint64_t v31 = *(void *)(a2 + v30);
              if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v31);
                *(void *)(a2 + v30) = v31 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setRecencyRankInSameDomain:a3];
              goto LABEL_251;
            case 7u:
              uint64_t v32 = *v4;
              unint64_t v33 = *(void *)(a2 + v32);
              if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v33);
                *(void *)(a2 + v32) = v33 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setRecencyRankInSiriRequest:a3];
              goto LABEL_251;
            case 8u:
              uint64_t v34 = *v4;
              unint64_t v35 = *(void *)(a2 + v34);
              if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v35);
                *(void *)(a2 + v34) = v35 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsHighQualityRequestMatch:a3];
              goto LABEL_251;
            case 9u:
              uint64_t v36 = *v4;
              unint64_t v37 = *(void *)(a2 + v36);
              if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v37);
                *(void *)(a2 + v36) = v37 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsFavorite:a3];
              goto LABEL_251;
            case 0xAu:
              uint64_t v38 = *v4;
              unint64_t v39 = *(void *)(a2 + v38);
              if (v39 <= 0xFFFFFFFFFFFFFFFBLL && v39 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v39);
                *(void *)(a2 + v38) = v39 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsMeCardRelation:a3];
              goto LABEL_251;
            case 0xBu:
              uint64_t v40 = *v4;
              unint64_t v41 = *(void *)(a2 + v40);
              if (v41 <= 0xFFFFFFFFFFFFFFFBLL && v41 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v41);
                *(void *)(a2 + v40) = v41 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsWeakOrganizationMatch:a3];
              goto LABEL_251;
            case 0xCu:
              uint64_t v42 = *v4;
              unint64_t v43 = *(void *)(a2 + v42);
              if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v43);
                *(void *)(a2 + v42) = v43 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setSpeechAlternativeRanksGivenNameRank:a3];
              goto LABEL_251;
            case 0xDu:
              uint64_t v44 = *v4;
              unint64_t v45 = *(void *)(a2 + v44);
              if (v45 <= 0xFFFFFFFFFFFFFFFBLL && v45 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v45);
                *(void *)(a2 + v44) = v45 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setSpeechAlternativeRanksMiddleNameRank:a3];
              goto LABEL_251;
            case 0xEu:
              uint64_t v46 = *v4;
              unint64_t v47 = *(void *)(a2 + v46);
              if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v47);
                *(void *)(a2 + v46) = v47 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setSpeechAlternativeRanksFamilyNameRank:a3];
              goto LABEL_251;
            case 0xFu:
              uint64_t v48 = *v4;
              unint64_t v49 = *(void *)(a2 + v48);
              if (v49 <= 0xFFFFFFFFFFFFFFFBLL && v49 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v49);
                *(void *)(a2 + v48) = v49 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup0MinTo2Min:a3];
              goto LABEL_251;
            case 0x10u:
              uint64_t v50 = *v4;
              unint64_t v51 = *(void *)(a2 + v50);
              if (v51 <= 0xFFFFFFFFFFFFFFFBLL && v51 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v51);
                *(void *)(a2 + v50) = v51 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup2MinTo10Min:a3];
              goto LABEL_251;
            case 0x11u:
              uint64_t v52 = *v4;
              unint64_t v53 = *(void *)(a2 + v52);
              if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v53);
                *(void *)(a2 + v52) = v53 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup10MinTo1Hr:a3];
              goto LABEL_251;
            case 0x12u:
              uint64_t v54 = *v4;
              unint64_t v55 = *(void *)(a2 + v54);
              if (v55 <= 0xFFFFFFFFFFFFFFFBLL && v55 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v55);
                *(void *)(a2 + v54) = v55 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup1HrTo6Hr:a3];
              goto LABEL_251;
            case 0x13u:
              uint64_t v56 = *v4;
              unint64_t v57 = *(void *)(a2 + v56);
              if (v57 <= 0xFFFFFFFFFFFFFFFBLL && v57 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v57);
                *(void *)(a2 + v56) = v57 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup6HrTo1Day:a3];
              goto LABEL_251;
            case 0x14u:
              uint64_t v58 = *v4;
              unint64_t v59 = *(void *)(a2 + v58);
              if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v59);
                *(void *)(a2 + v58) = v59 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup1DayTo7Day:a3];
              goto LABEL_251;
            case 0x15u:
              uint64_t v60 = *v4;
              unint64_t v61 = *(void *)(a2 + v60);
              if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v61);
                *(void *)(a2 + v60) = v61 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup7DayTo28Day:a3];
              goto LABEL_251;
            case 0x16u:
              uint64_t v62 = *v4;
              unint64_t v63 = *(void *)(a2 + v62);
              if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v63);
                *(void *)(a2 + v62) = v63 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqAnyGroup28DayToInf:a3];
              goto LABEL_251;
            case 0x17u:
              uint64_t v64 = *v4;
              unint64_t v65 = *(void *)(a2 + v64);
              if (v65 <= 0xFFFFFFFFFFFFFFFBLL && v65 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v65);
                *(void *)(a2 + v64) = v65 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup0MinTo2Min:a3];
              goto LABEL_251;
            case 0x18u:
              uint64_t v66 = *v4;
              unint64_t v67 = *(void *)(a2 + v66);
              if (v67 <= 0xFFFFFFFFFFFFFFFBLL && v67 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v67);
                *(void *)(a2 + v66) = v67 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup2MinTo10Min:a3];
              goto LABEL_251;
            case 0x19u:
              uint64_t v68 = *v4;
              unint64_t v69 = *(void *)(a2 + v68);
              if (v69 <= 0xFFFFFFFFFFFFFFFBLL && v69 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v69);
                *(void *)(a2 + v68) = v69 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup10MinTo1Hr:a3];
              goto LABEL_251;
            case 0x1Au:
              uint64_t v70 = *v4;
              unint64_t v71 = *(void *)(a2 + v70);
              if (v71 <= 0xFFFFFFFFFFFFFFFBLL && v71 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v71);
                *(void *)(a2 + v70) = v71 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup1HrTo6Hr:a3];
              goto LABEL_251;
            case 0x1Bu:
              uint64_t v111 = *v4;
              unint64_t v112 = *(void *)(a2 + v111);
              if (v112 <= 0xFFFFFFFFFFFFFFFBLL && v112 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v112);
                *(void *)(a2 + v111) = v112 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup6HrTo1Day:a3];
              goto LABEL_251;
            case 0x1Cu:
              uint64_t v72 = *v4;
              unint64_t v73 = *(void *)(a2 + v72);
              if (v73 <= 0xFFFFFFFFFFFFFFFBLL && v73 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v73);
                *(void *)(a2 + v72) = v73 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup1DayTo7Day:a3];
              goto LABEL_251;
            case 0x1Du:
              uint64_t v74 = *v4;
              unint64_t v75 = *(void *)(a2 + v74);
              if (v75 <= 0xFFFFFFFFFFFFFFFBLL && v75 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v75);
                *(void *)(a2 + v74) = v75 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup7DayTo28Day:a3];
              goto LABEL_251;
            case 0x1Eu:
              uint64_t v76 = *v4;
              unint64_t v77 = *(void *)(a2 + v76);
              if (v77 <= 0xFFFFFFFFFFFFFFFBLL && v77 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v77);
                *(void *)(a2 + v76) = v77 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setFreqSameGroup28DayToInf:a3];
              goto LABEL_251;
            case 0x1Fu:
              uint64_t v78 = *v4;
              unint64_t v79 = *(void *)(a2 + v78);
              if (v79 <= 0xFFFFFFFFFFFFFFFBLL && v79 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v79);
                *(void *)(a2 + v78) = v79 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsSuggested:a3];
              goto LABEL_251;
            case 0x20u:
              uint64_t v80 = *v4;
              unint64_t v81 = *(void *)(a2 + v80);
              if (v81 <= 0xFFFFFFFFFFFFFFFBLL && v81 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v81);
                *(void *)(a2 + v80) = v81 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsHypocorism:a3];
              goto LABEL_251;
            case 0x21u:
              uint64_t v82 = *v4;
              unint64_t v83 = *(void *)(a2 + v82);
              if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v83);
                *(void *)(a2 + v82) = v83 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setHasSuggestedProperties:a3];
              goto LABEL_251;
            case 0x22u:
              uint64_t v84 = *v4;
              unint64_t v85 = *(void *)(a2 + v84);
              if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v85);
                *(void *)(a2 + v84) = v85 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsPartialNameMatch:a3];
              goto LABEL_251;
            case 0x23u:
              uint64_t v86 = *v4;
              unint64_t v87 = *(void *)(a2 + v86);
              if (v87 <= 0xFFFFFFFFFFFFFFFBLL && v87 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v87);
                *(void *)(a2 + v86) = v87 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setNumPrimaryTokens:a3];
              goto LABEL_251;
            case 0x24u:
              uint64_t v88 = *v4;
              unint64_t v89 = *(void *)(a2 + v88);
              if (v89 <= 0xFFFFFFFFFFFFFFFBLL && v89 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v89);
                *(void *)(a2 + v88) = v89 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setAllQueryMatched:a3];
              goto LABEL_251;
            case 0x25u:
              uint64_t v90 = *v4;
              unint64_t v91 = *(void *)(a2 + v90);
              if (v91 <= 0xFFFFFFFFFFFFFFFBLL && v91 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v91);
                *(void *)(a2 + v90) = v91 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setAllPrimaryNameTokensAreInQuery:a3];
              goto LABEL_251;
            case 0x26u:
              uint64_t v92 = *v4;
              unint64_t v93 = *(void *)(a2 + v92);
              if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v93);
                *(void *)(a2 + v92) = v93 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsGivenNameMatch:a3];
              goto LABEL_251;
            case 0x27u:
              uint64_t v94 = *v4;
              unint64_t v95 = *(void *)(a2 + v94);
              if (v95 <= 0xFFFFFFFFFFFFFFFBLL && v95 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v95);
                *(void *)(a2 + v94) = v95 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsMiddleNameMatch:a3];
              goto LABEL_251;
            case 0x28u:
              uint64_t v96 = *v4;
              unint64_t v97 = *(void *)(a2 + v96);
              if (v97 <= 0xFFFFFFFFFFFFFFFBLL && v97 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v97);
                *(void *)(a2 + v96) = v97 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsFamilyNameMatch:a3];
              goto LABEL_251;
            case 0x29u:
              uint64_t v98 = *v4;
              unint64_t v99 = *(void *)(a2 + v98);
              if (v99 <= 0xFFFFFFFFFFFFFFFBLL && v99 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v99);
                *(void *)(a2 + v98) = v99 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsOrganizationNameMatch:a3];
              goto LABEL_251;
            case 0x2Au:
              uint64_t v100 = *v4;
              unint64_t v101 = *(void *)(a2 + v100);
              if (v101 <= 0xFFFFFFFFFFFFFFFBLL && v101 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v101);
                *(void *)(a2 + v100) = v101 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsNicknameMatch:a3];
              goto LABEL_251;
            case 0x2Bu:
              uint64_t v102 = *v4;
              unint64_t v103 = *(void *)(a2 + v102);
              if (v103 <= 0xFFFFFFFFFFFFFFFBLL && v103 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v103);
                *(void *)(a2 + v102) = v103 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsNamePrefixMatch:a3];
              goto LABEL_251;
            case 0x2Cu:
              uint64_t v104 = *v4;
              unint64_t v105 = *(void *)(a2 + v104);
              if (v105 <= 0xFFFFFFFFFFFFFFFBLL && v105 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v105);
                *(void *)(a2 + v104) = v105 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsNameSuffixMatch:a3];
              goto LABEL_251;
            case 0x2Du:
              uint64_t v106 = *v4;
              unint64_t v107 = *(void *)(a2 + v106);
              if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v107);
                *(void *)(a2 + v106) = v107 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setAllHandlesMatched:a3];
              goto LABEL_251;
            case 0x2Eu:
              uint64_t v108 = *v4;
              unint64_t v109 = *(void *)(a2 + v108);
              if (v109 <= 0xFFFFFFFFFFFFFFFBLL && v109 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v109);
                *(void *)(a2 + v108) = v109 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setIsRelationAlias:a3];
              goto LABEL_251;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_251:
              if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
                return *(unsigned char *)(a2 + *v6) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL SCSchemaSCClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(SCSchemaSCClientEventMetadata);
        if (!PBReaderPlaceMark() || !SCSchemaSCClientEventMetadataReadFrom(v17, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        uint64_t v17 = objc_alloc_init(SCSchemaSCUndoChecked);
        if (!PBReaderPlaceMark() || (SCSchemaSCUndoCheckedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUndoChecked:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        uint64_t v17 = objc_alloc_init(SCSchemaSCCorrectionChecked);
        if (!PBReaderPlaceMark() || (SCSchemaSCCorrectionCheckedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCorrectionChecked:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        uint64_t v17 = objc_alloc_init(SCSchemaSCUndoSet);
        if PBReaderPlaceMark() && (SCSchemaSCUndoSetReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUndoSet:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t INFERENCESchemaINFERENCEContactHandleSignalSetReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_102;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_104;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_102:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_104:
        [a1 setIsSuggestedHandle:v19 != 0];
        goto LABEL_145;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (2)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_108:
        [a1 setIsFavorite:v26 != 0];
        goto LABEL_145;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
LABEL_112:
        [a1 setIsQueryExactMatch:v32 != 0];
        goto LABEL_145;
      case 4u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_116:
        [a1 setIsQueryMatch:v38 != 0];
        goto LABEL_145;
      case 5u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_120:
        [a1 setIsPartialQueryValueMatch:v44 != 0];
        goto LABEL_145;
      case 6u:
        uint64_t v48 = objc_alloc_init(INFERENCESchemaINFERENCEPrivatizedHistoryStats);
        if (PBReaderPlaceMark()
          && (INFERENCESchemaINFERENCEPrivatizedHistoryStatsReadFrom(v48, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setHistoryStats:", v48, 0, 0);

LABEL_145:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 7u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v14 = v50++ >= 9;
              if (v14)
              {
                uint64_t v51 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_124:
        [a1 setIsRecentInAnyGroup:v51 != 0];
        goto LABEL_145;
      case 8u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        while (2)
        {
          uint64_t v58 = *v3;
          unint64_t v59 = *(void *)(a2 + v58);
          if (v59 == -1 || v59 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
            *(void *)(a2 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v14 = v56++ >= 9;
              if (v14)
              {
                uint64_t v57 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v57 = 0;
        }
LABEL_128:
        [a1 setIsRecentInSameGroup:v57 != 0];
        goto LABEL_145;
      case 9u:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        while (2)
        {
          uint64_t v64 = *v3;
          unint64_t v65 = *(void *)(a2 + v64);
          if (v65 == -1 || v65 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v65 + 1;
            v63 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v14 = v62++ >= 9;
              if (v14)
              {
                uint64_t v63 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
LABEL_132:
        [a1 setIsPreferredType:v63 != 0];
        goto LABEL_145;
      case 0xAu:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        while (2)
        {
          uint64_t v70 = *v3;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v71 + 1;
            v69 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v14 = v68++ >= 9;
              if (v14)
              {
                uint64_t v69 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v69 = 0;
        }
LABEL_136:
        [a1 setIsAllowedType:v69 != 0];
        goto LABEL_145;
      case 0xBu:
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        while (2)
        {
          uint64_t v76 = *v3;
          unint64_t v77 = *(void *)(a2 + v76);
          if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
            *(void *)(a2 + v76) = v77 + 1;
            v75 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v14 = v74++ >= 9;
              if (v14)
              {
                uint64_t v75 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v75 = 0;
        }
LABEL_140:
        [a1 setIsFaceTimeable:v75 != 0];
        goto LABEL_145;
      case 0xCu:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        while (2)
        {
          uint64_t v82 = *v3;
          unint64_t v83 = *(void *)(a2 + v82);
          if (v83 == -1 || v83 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
            *(void *)(a2 + v82) = v83 + 1;
            v81 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v14 = v80++ >= 9;
              if (v14)
              {
                uint64_t v81 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v81 = 0;
        }
LABEL_144:
        [a1 setIsNotFaceTimeable:v81 != 0];
        goto LABEL_145;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_145;
    }
  }
}

uint64_t INFERENCESchemaINFERENCEContactMatchReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEContact);
        if (!PBReaderPlaceMark() || !INFERENCESchemaINFERENCEContactReadFrom(v20, a2)) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactValue:", v20, 0, 0);
        goto LABEL_33;
      case 2u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEContactSignalSet);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEContactSignalSetReadFrom(v20, a2, v22) & 1) == 0)
        {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactSignalSet:", v20, 0, 0);
        goto LABEL_33;
      case 3u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEBackgroundContactSignalSet);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEBackgroundContactSignalSetReadFrom(v20, a2, v23) & 1) == 0)
        {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundSignalSet:", v20, 0, 0);
        goto LABEL_33;
      case 4u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEContactFeatureSet);
        if (PBReaderPlaceMark()
          && (INFERENCESchemaINFERENCEContactFeatureSetReadFrom(v20, a2, v24) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFeatureSet:", v20, 0, 0);
LABEL_33:

LABEL_50:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_52:

        return 0;
      case 5u:
        uint64_t v25 = *v4;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setScore:a3];
        goto LABEL_50;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v4;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v16 = v28++ >= 9;
              if (v16)
              {
                uint64_t v29 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v29 = 0;
        }
LABEL_47:
        [a1 setIsShownToUser:v29 != 0];
        goto LABEL_50;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_50;
    }
  }
}

uint64_t INFERENCESchemaINFERENCEContactQueryMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_71;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_73;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_71:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_73:
          [a1 setHasName:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_77:
          [a1 setHasRelationship:v26 != 0];
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
LABEL_81:
          [a1 setHasHandleLabel:v32 != 0];
          continue;
        case 4u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_85:
          [a1 setHasHandleValue:v38 != 0];
          continue;
        case 5u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  uint64_t v44 = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v44 = 0;
          }
LABEL_89:
          [a1 setHasMeReference:v44 != 0];
          continue;
        case 6u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (2)
          {
            uint64_t v51 = *v3;
            unint64_t v52 = *(void *)(a2 + v51);
            if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v52 + 1;
              v50 |= (unint64_t)(v53 & 0x7F) << v48;
              if (v53 < 0)
              {
                v48 += 7;
                BOOL v14 = v49++ >= 9;
                if (v14)
                {
                  uint64_t v50 = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
LABEL_93:
          [a1 setHasContactId:v50 != 0];
          continue;
        case 7u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v57 = *v3;
        unint64_t v58 = *(void *)(a2 + v57);
        if (v58 == -1 || v58 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
        *(void *)(a2 + v57) = v58 + 1;
        v56 |= (unint64_t)(v59 & 0x7F) << v54;
        if ((v59 & 0x80) == 0) {
          goto LABEL_95;
        }
        v54 += 7;
        BOOL v14 = v55++ >= 9;
        if (v14)
        {
          uint64_t v56 = 0;
          goto LABEL_97;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_95:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v56 = 0;
      }
LABEL_97:
      [a1 setIsEmergencyQuery:v56 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEContactResolverConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_53;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_55:
          [a1 setIsSearchingFirstPartyContacts:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v30 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
          else {
            uint64_t v30 = v26;
          }
LABEL_60:
          [a1 setContactSearchSuggestedType:v30];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v33;
          }
LABEL_65:
          [a1 setDomainsToSearchForHistory:v37];
          continue;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          break;
        case 5u:
          uint64_t v45 = PBReaderReadString();
          if (v45) {
            [a1 addAppBundleIds:v45];
          }

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)(a2 + v41);
        if (v42 == -1 || v42 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
        *(void *)(a2 + v41) = v42 + 1;
        v40 |= (unint64_t)(v43 & 0x7F) << v38;
        if ((v43 & 0x80) == 0) {
          goto LABEL_67;
        }
        v38 += 7;
        BOOL v14 = v39++ >= 9;
        if (v14)
        {
          uint64_t v44 = 0;
          goto LABEL_70;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      uint64_t v44 = *(unsigned char *)(a2 + *v5) ? 0 : v40;
LABEL_70:
      [a1 setActionType:v44];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEContactSignalSetReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCESpeechAlternativeRanks);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCESpeechAlternativeRanksReadFrom(v20, a2) & 1) == 0)
        {
          goto LABEL_470;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechAlternativeRanks:", v20, 0, 0);
        goto LABEL_274;
      case 2u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v4;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v8) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v16 = v23++ >= 9;
              if (v16)
              {
                uint64_t v24 = 0;
                goto LABEL_315;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v24 = 0;
        }
LABEL_315:
        [a1 setIsQueryStrippedOfTitles:v24 != 0];
        goto LABEL_275;
      case 3u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v4;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v16 = v30++ >= 9;
              if (v16)
              {
                uint64_t v31 = 0;
                goto LABEL_319;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v31 = 0;
        }
LABEL_319:
        [a1 setIsSuggestedContact:v31 != 0];
        goto LABEL_275;
      case 4u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v4;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v8) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v16 = v37++ >= 9;
              if (v16)
              {
                uint64_t v38 = 0;
                goto LABEL_323;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v38 = 0;
        }
LABEL_323:
        [a1 setAreAllQueryTokensInContact:v38 != 0];
        goto LABEL_275;
      case 5u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v4;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v8) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v16 = v44++ >= 9;
              if (v16)
              {
                uint64_t v45 = 0;
                goto LABEL_327;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v45 = 0;
        }
LABEL_327:
        [a1 setAreAllPrimaryContactTokensInQuery:v45 != 0];
        goto LABEL_275;
      case 6u:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        while (2)
        {
          uint64_t v53 = *v4;
          uint64_t v54 = *(void *)(a2 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v8) + v54);
            *(void *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v16 = v51++ >= 9;
              if (v16)
              {
                uint64_t v52 = 0;
                goto LABEL_331;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v52 = 0;
        }
LABEL_331:
        [a1 setIsHypocorism:v52 != 0];
        goto LABEL_275;
      case 7u:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        while (2)
        {
          uint64_t v60 = *v4;
          uint64_t v61 = *(void *)(a2 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v8) + v61);
            *(void *)(a2 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v16 = v58++ >= 9;
              if (v16)
              {
                uint64_t v59 = 0;
                goto LABEL_335;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v59 = 0;
        }
LABEL_335:
        [a1 setHasSuggestedProperties:v59 != 0];
        goto LABEL_275;
      case 8u:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        while (2)
        {
          uint64_t v67 = *v4;
          uint64_t v68 = *(void *)(a2 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(a2 + *v8) + v68);
            *(void *)(a2 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v16 = v65++ >= 9;
              if (v16)
              {
                uint64_t v66 = 0;
                goto LABEL_339;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v66 = 0;
        }
LABEL_339:
        [a1 setIsPartialNameMatch:v66 != 0];
        goto LABEL_275;
      case 9u:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v4;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
            *(void *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v16 = v72++ >= 9;
              if (v16)
              {
                uint64_t v73 = 0;
                goto LABEL_343;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v73 = 0;
        }
LABEL_343:
        [a1 setIsFromStandardSearch:v73 != 0];
        goto LABEL_275;
      case 0xAu:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v4;
          uint64_t v82 = *(void *)(a2 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v8) + v82);
            *(void *)(a2 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v16 = v79++ >= 9;
              if (v16)
              {
                uint64_t v80 = 0;
                goto LABEL_347;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v80 = 0;
        }
LABEL_347:
        [a1 setIsFromNLXSearch:v80 != 0];
        goto LABEL_275;
      case 0xBu:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        while (2)
        {
          uint64_t v88 = *v4;
          uint64_t v89 = *(void *)(a2 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v8) + v89);
            *(void *)(a2 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v16 = v86++ >= 9;
              if (v16)
              {
                uint64_t v87 = 0;
                goto LABEL_351;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v87 = 0;
        }
LABEL_351:
        [a1 setIsFromSRRSearch:v87 != 0];
        goto LABEL_275;
      case 0xCu:
        uint64_t v92 = *v4;
        unint64_t v93 = *(void *)(a2 + v92);
        if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v93);
          *(void *)(a2 + v92) = v93 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setNlxScore:", a3, v290, v291);
        goto LABEL_275;
      case 0xDu:
        uint64_t v94 = *v4;
        unint64_t v95 = *(void *)(a2 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFFBLL && v95 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v95);
          *(void *)(a2 + v94) = v95 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setSrrScore:", a3, v290, v291);
        goto LABEL_275;
      case 0xEu:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        while (2)
        {
          uint64_t v99 = *v4;
          uint64_t v100 = *(void *)(a2 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(a2 + *v8) + v100);
            *(void *)(a2 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v16 = v97++ >= 9;
              if (v16)
              {
                uint64_t v98 = 0;
                goto LABEL_355;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v98 = 0;
        }
LABEL_355:
        [a1 setIsRecent:v98 != 0];
        goto LABEL_275;
      case 0xFu:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        while (2)
        {
          uint64_t v106 = *v4;
          uint64_t v107 = *(void *)(a2 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(a2 + *v8) + v107);
            *(void *)(a2 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v16 = v104++ >= 9;
              if (v16)
              {
                uint64_t v105 = 0;
                goto LABEL_359;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v105 = 0;
        }
LABEL_359:
        [a1 setIsRecentInSameDomain:v105 != 0];
        goto LABEL_275;
      case 0x10u:
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        while (2)
        {
          uint64_t v113 = *v4;
          uint64_t v114 = *(void *)(a2 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(a2 + *v8) + v114);
            *(void *)(a2 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v16 = v111++ >= 9;
              if (v16)
              {
                uint64_t v112 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v112 = 0;
        }
LABEL_363:
        [a1 setIsRecentInSiriRequest:v112 != 0];
        goto LABEL_275;
      case 0x11u:
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        while (2)
        {
          uint64_t v120 = *v4;
          uint64_t v121 = *(void *)(a2 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(a2 + *v8) + v121);
            *(void *)(a2 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v16 = v118++ >= 9;
              if (v16)
              {
                uint64_t v119 = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v119 = 0;
        }
LABEL_367:
        [a1 setIsRecentlyCorrected:v119 != 0];
        goto LABEL_275;
      case 0x12u:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v126 = 0;
        while (2)
        {
          uint64_t v127 = *v4;
          uint64_t v128 = *(void *)(a2 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v8) + v128);
            *(void *)(a2 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              BOOL v16 = v125++ >= 9;
              if (v16)
              {
                uint64_t v131 = 0;
                goto LABEL_372;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v131 = 0;
        }
        else {
          uint64_t v131 = v126;
        }
LABEL_372:
        objc_msgSend(a1, "setRecencyRank:", v131, v290, v291);
        goto LABEL_275;
      case 0x13u:
        char v132 = 0;
        unsigned int v133 = 0;
        uint64_t v134 = 0;
        while (2)
        {
          uint64_t v135 = *v4;
          uint64_t v136 = *(void *)(a2 + v135);
          unint64_t v137 = v136 + 1;
          if (v136 == -1 || v137 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v138 = *(unsigned char *)(*(void *)(a2 + *v8) + v136);
            *(void *)(a2 + v135) = v137;
            v134 |= (unint64_t)(v138 & 0x7F) << v132;
            if (v138 < 0)
            {
              v132 += 7;
              BOOL v16 = v133++ >= 9;
              if (v16)
              {
                uint64_t v139 = 0;
                goto LABEL_377;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v139 = 0;
        }
        else {
          uint64_t v139 = v134;
        }
LABEL_377:
        objc_msgSend(a1, "setRecencyRankInSameDomain:", v139, v290, v291);
        goto LABEL_275;
      case 0x14u:
        char v140 = 0;
        unsigned int v141 = 0;
        uint64_t v142 = 0;
        while (2)
        {
          uint64_t v143 = *v4;
          uint64_t v144 = *(void *)(a2 + v143);
          unint64_t v145 = v144 + 1;
          if (v144 == -1 || v145 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v146 = *(unsigned char *)(*(void *)(a2 + *v8) + v144);
            *(void *)(a2 + v143) = v145;
            v142 |= (unint64_t)(v146 & 0x7F) << v140;
            if (v146 < 0)
            {
              v140 += 7;
              BOOL v16 = v141++ >= 9;
              if (v16)
              {
                uint64_t v147 = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v147 = 0;
        }
        else {
          uint64_t v147 = v142;
        }
LABEL_382:
        objc_msgSend(a1, "setRecencyRankInSiriRequest:", v147, v290, v291);
        goto LABEL_275;
      case 0x15u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEPrivatizedHistoryStats);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEPrivatizedHistoryStatsReadFrom(v20, a2) & 1) == 0)
        {
          goto LABEL_470;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHistoryStats:", v20, 0, 0);
        goto LABEL_274;
      case 0x16u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEPrivatizedHistoryStats);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEPrivatizedHistoryStatsReadFrom(v20, a2) & 1) == 0)
        {
          goto LABEL_470;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHistoryStatsInSameDomain:", v20, 0, 0);
        goto LABEL_274;
      case 0x17u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEPrivatizedHistoryStats);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEPrivatizedHistoryStatsReadFrom(v20, a2) & 1) == 0)
        {
          goto LABEL_470;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHistoryStatsInSiriRequests:", v20, 0, 0);
        goto LABEL_274;
      case 0x18u:
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v150 = 0;
        while (2)
        {
          uint64_t v151 = *v4;
          uint64_t v152 = *(void *)(a2 + v151);
          unint64_t v153 = v152 + 1;
          if (v152 == -1 || v153 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v154 = *(unsigned char *)(*(void *)(a2 + *v8) + v152);
            *(void *)(a2 + v151) = v153;
            v150 |= (unint64_t)(v154 & 0x7F) << v148;
            if (v154 < 0)
            {
              v148 += 7;
              BOOL v16 = v149++ >= 9;
              if (v16)
              {
                uint64_t v150 = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v150 = 0;
        }
LABEL_386:
        [a1 setIsMeCard:v150 != 0];
        goto LABEL_275;
      case 0x19u:
        char v155 = 0;
        unsigned int v156 = 0;
        uint64_t v157 = 0;
        while (2)
        {
          uint64_t v158 = *v4;
          uint64_t v159 = *(void *)(a2 + v158);
          unint64_t v160 = v159 + 1;
          if (v159 == -1 || v160 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v161 = *(unsigned char *)(*(void *)(a2 + *v8) + v159);
            *(void *)(a2 + v158) = v160;
            v157 |= (unint64_t)(v161 & 0x7F) << v155;
            if (v161 < 0)
            {
              v155 += 7;
              BOOL v16 = v156++ >= 9;
              if (v16)
              {
                uint64_t v157 = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v157 = 0;
        }
LABEL_390:
        [a1 setIsMeCardRelation:v157 != 0];
        goto LABEL_275;
      case 0x1Au:
        char v162 = 0;
        unsigned int v163 = 0;
        uint64_t v164 = 0;
        while (2)
        {
          uint64_t v165 = *v4;
          uint64_t v166 = *(void *)(a2 + v165);
          unint64_t v167 = v166 + 1;
          if (v166 == -1 || v167 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v168 = *(unsigned char *)(*(void *)(a2 + *v8) + v166);
            *(void *)(a2 + v165) = v167;
            v164 |= (unint64_t)(v168 & 0x7F) << v162;
            if (v168 < 0)
            {
              v162 += 7;
              BOOL v16 = v163++ >= 9;
              if (v16)
              {
                uint64_t v164 = 0;
                goto LABEL_394;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v164 = 0;
        }
LABEL_394:
        [a1 setIsMeCardRelationExactMatch:v164 != 0];
        goto LABEL_275;
      case 0x1Bu:
        char v169 = 0;
        unsigned int v170 = 0;
        uint64_t v171 = 0;
        while (2)
        {
          uint64_t v172 = *v4;
          uint64_t v173 = *(void *)(a2 + v172);
          unint64_t v174 = v173 + 1;
          if (v173 == -1 || v174 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v175 = *(unsigned char *)(*(void *)(a2 + *v8) + v173);
            *(void *)(a2 + v172) = v174;
            v171 |= (unint64_t)(v175 & 0x7F) << v169;
            if (v175 < 0)
            {
              v169 += 7;
              BOOL v16 = v170++ >= 9;
              if (v16)
              {
                uint64_t v171 = 0;
                goto LABEL_398;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v171 = 0;
        }
LABEL_398:
        [a1 setIsRelationAlias:v171 != 0];
        goto LABEL_275;
      case 0x1Cu:
        char v176 = 0;
        unsigned int v177 = 0;
        uint64_t v178 = 0;
        while (2)
        {
          uint64_t v179 = *v4;
          uint64_t v180 = *(void *)(a2 + v179);
          unint64_t v181 = v180 + 1;
          if (v180 == -1 || v181 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v182 = *(unsigned char *)(*(void *)(a2 + *v8) + v180);
            *(void *)(a2 + v179) = v181;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              BOOL v16 = v177++ >= 9;
              if (v16)
              {
                uint64_t v178 = 0;
                goto LABEL_402;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v178 = 0;
        }
LABEL_402:
        [a1 setAreQueryDiacriticsRemoved:v178 != 0];
        goto LABEL_275;
      case 0x1Du:
        char v183 = 0;
        unsigned int v184 = 0;
        uint64_t v185 = 0;
        while (2)
        {
          uint64_t v186 = *v4;
          uint64_t v187 = *(void *)(a2 + v186);
          unint64_t v188 = v187 + 1;
          if (v187 == -1 || v188 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v189 = *(unsigned char *)(*(void *)(a2 + *v8) + v187);
            *(void *)(a2 + v186) = v188;
            v185 |= (unint64_t)(v189 & 0x7F) << v183;
            if (v189 < 0)
            {
              v183 += 7;
              BOOL v16 = v184++ >= 9;
              if (v16)
              {
                uint64_t v185 = 0;
                goto LABEL_406;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v185 = 0;
        }
LABEL_406:
        [a1 setIsQueryNameDerivedFromRelationshipLabel:v185 != 0];
        goto LABEL_275;
      case 0x1Eu:
        char v190 = 0;
        unsigned int v191 = 0;
        uint64_t v192 = 0;
        while (2)
        {
          uint64_t v193 = *v4;
          uint64_t v194 = *(void *)(a2 + v193);
          unint64_t v195 = v194 + 1;
          if (v194 == -1 || v195 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v196 = *(unsigned char *)(*(void *)(a2 + *v8) + v194);
            *(void *)(a2 + v193) = v195;
            v192 |= (unint64_t)(v196 & 0x7F) << v190;
            if (v196 < 0)
            {
              v190 += 7;
              BOOL v16 = v191++ >= 9;
              if (v16)
              {
                uint64_t v192 = 0;
                goto LABEL_410;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v192 = 0;
        }
LABEL_410:
        [a1 setIsQueryRelationshipLabelDerivedFromName:v192 != 0];
        goto LABEL_275;
      case 0x1Fu:
        char v197 = 0;
        unsigned int v198 = 0;
        uint64_t v199 = 0;
        while (2)
        {
          uint64_t v200 = *v4;
          uint64_t v201 = *(void *)(a2 + v200);
          unint64_t v202 = v201 + 1;
          if (v201 == -1 || v202 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v203 = *(unsigned char *)(*(void *)(a2 + *v8) + v201);
            *(void *)(a2 + v200) = v202;
            v199 |= (unint64_t)(v203 & 0x7F) << v197;
            if (v203 < 0)
            {
              v197 += 7;
              BOOL v16 = v198++ >= 9;
              if (v16)
              {
                uint64_t v199 = 0;
                goto LABEL_414;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v199 = 0;
        }
LABEL_414:
        [a1 setIsThirdPartyMatch:v199 != 0];
        goto LABEL_275;
      case 0x20u:
        char v204 = 0;
        unsigned int v205 = 0;
        uint64_t v206 = 0;
        while (2)
        {
          uint64_t v207 = *v4;
          uint64_t v208 = *(void *)(a2 + v207);
          unint64_t v209 = v208 + 1;
          if (v208 == -1 || v209 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v210 = *(unsigned char *)(*(void *)(a2 + *v8) + v208);
            *(void *)(a2 + v207) = v209;
            v206 |= (unint64_t)(v210 & 0x7F) << v204;
            if (v210 < 0)
            {
              v204 += 7;
              BOOL v16 = v205++ >= 9;
              if (v16)
              {
                uint64_t v206 = 0;
                goto LABEL_418;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v206 = 0;
        }
LABEL_418:
        [a1 setIsFavorite:v206 != 0];
        goto LABEL_275;
      case 0x21u:
        char v211 = 0;
        unsigned int v212 = 0;
        uint64_t v213 = 0;
        while (2)
        {
          uint64_t v214 = *v4;
          uint64_t v215 = *(void *)(a2 + v214);
          unint64_t v216 = v215 + 1;
          if (v215 == -1 || v216 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v217 = *(unsigned char *)(*(void *)(a2 + *v8) + v215);
            *(void *)(a2 + v214) = v216;
            v213 |= (unint64_t)(v217 & 0x7F) << v211;
            if (v217 < 0)
            {
              v211 += 7;
              BOOL v16 = v212++ >= 9;
              if (v16)
              {
                uint64_t v213 = 0;
                goto LABEL_422;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v213 = 0;
        }
LABEL_422:
        [a1 setIsTransliterated:v213 != 0];
        goto LABEL_275;
      case 0x22u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCERequestMatchSignalSet);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCERequestMatchSignalSetReadFrom(v20, a2) & 1) == 0)
        {
          goto LABEL_470;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestMatchSignalSet:", v20, 0, 0);
        goto LABEL_274;
      case 0x23u:
        uint64_t v20 = objc_alloc_init(INFERENCESchemaINFERENCEContactHandleSignalSet);
        uint64_t v290 = 0;
        uint64_t v291 = 0;
        if (PBReaderPlaceMark()
          && INFERENCESchemaINFERENCEContactHandleSignalSetReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addHandlesWithPrivacySignalSets:", v20, 0, 0);
          }
LABEL_274:

LABEL_275:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_470:

        return 0;
      case 0x24u:
        char v218 = 0;
        unsigned int v219 = 0;
        uint64_t v220 = 0;
        while (2)
        {
          uint64_t v221 = *v4;
          uint64_t v222 = *(void *)(a2 + v221);
          unint64_t v223 = v222 + 1;
          if (v222 == -1 || v223 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v224 = *(unsigned char *)(*(void *)(a2 + *v8) + v222);
            *(void *)(a2 + v221) = v223;
            v220 |= (unint64_t)(v224 & 0x7F) << v218;
            if (v224 < 0)
            {
              v218 += 7;
              BOOL v16 = v219++ >= 9;
              if (v16)
              {
                uint64_t v220 = 0;
                goto LABEL_426;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v220 = 0;
        }
LABEL_426:
        [a1 setHasHandleWithPreferredType:v220 != 0];
        goto LABEL_275;
      case 0x25u:
        char v225 = 0;
        unsigned int v226 = 0;
        uint64_t v227 = 0;
        while (2)
        {
          uint64_t v228 = *v4;
          uint64_t v229 = *(void *)(a2 + v228);
          unint64_t v230 = v229 + 1;
          if (v229 == -1 || v230 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v231 = *(unsigned char *)(*(void *)(a2 + *v8) + v229);
            *(void *)(a2 + v228) = v230;
            v227 |= (unint64_t)(v231 & 0x7F) << v225;
            if (v231 < 0)
            {
              v225 += 7;
              BOOL v16 = v226++ >= 9;
              if (v16)
              {
                uint64_t v227 = 0;
                goto LABEL_430;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v227 = 0;
        }
LABEL_430:
        [a1 setHasHandleWithAllowedType:v227 != 0];
        goto LABEL_275;
      case 0x26u:
        char v232 = 0;
        unsigned int v233 = 0;
        uint64_t v234 = 0;
        while (2)
        {
          uint64_t v235 = *v4;
          uint64_t v236 = *(void *)(a2 + v235);
          unint64_t v237 = v236 + 1;
          if (v236 == -1 || v237 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v238 = *(unsigned char *)(*(void *)(a2 + *v8) + v236);
            *(void *)(a2 + v235) = v237;
            v234 |= (unint64_t)(v238 & 0x7F) << v232;
            if (v238 < 0)
            {
              v232 += 7;
              BOOL v16 = v233++ >= 9;
              if (v16)
              {
                uint64_t v234 = 0;
                goto LABEL_434;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v234 = 0;
        }
LABEL_434:
        [a1 setIsCommunalRequest:v234 != 0];
        goto LABEL_275;
      case 0x27u:
        uint64_t v239 = *v4;
        unint64_t v240 = *(void *)(a2 + v239);
        if (v240 <= 0xFFFFFFFFFFFFFFFBLL && v240 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v240);
          *(void *)(a2 + v239) = v240 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setFractionOfCommunalDevicesMatchingCandidate:", a3, v290, v291);
        goto LABEL_275;
      case 0x28u:
        char v241 = 0;
        unsigned int v242 = 0;
        uint64_t v243 = 0;
        while (2)
        {
          uint64_t v244 = *v4;
          uint64_t v245 = *(void *)(a2 + v244);
          unint64_t v246 = v245 + 1;
          if (v245 == -1 || v246 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v247 = *(unsigned char *)(*(void *)(a2 + *v8) + v245);
            *(void *)(a2 + v244) = v246;
            v243 |= (unint64_t)(v247 & 0x7F) << v241;
            if (v247 < 0)
            {
              v241 += 7;
              BOOL v16 = v242++ >= 9;
              if (v16)
              {
                uint64_t v243 = 0;
                goto LABEL_438;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v243 = 0;
        }
LABEL_438:
        [a1 setIsPlusSignal:v243 != 0];
        goto LABEL_275;
      case 0x29u:
        char v248 = 0;
        unsigned int v249 = 0;
        uint64_t v250 = 0;
        while (2)
        {
          uint64_t v251 = *v4;
          uint64_t v252 = *(void *)(a2 + v251);
          unint64_t v253 = v252 + 1;
          if (v252 == -1 || v253 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v254 = *(unsigned char *)(*(void *)(a2 + *v8) + v252);
            *(void *)(a2 + v251) = v253;
            v250 |= (unint64_t)(v254 & 0x7F) << v248;
            if (v254 < 0)
            {
              v248 += 7;
              BOOL v16 = v249++ >= 9;
              if (v16)
              {
                uint64_t v250 = 0;
                goto LABEL_442;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v250 = 0;
        }
LABEL_442:
        [a1 setIsOnlyCandidate:v250 != 0];
        goto LABEL_275;
      case 0x2Au:
        PBReaderReadString();
        uint64_t v20 = (INFERENCESchemaINFERENCESpeechAlternativeRanks *)objc_claimAutoreleasedReturnValue();
        [a1 setThirdPartyAppBundleId:v20];
        goto LABEL_274;
      case 0x2Bu:
        char v255 = 0;
        unsigned int v256 = 0;
        uint64_t v257 = 0;
        while (2)
        {
          uint64_t v258 = *v4;
          uint64_t v259 = *(void *)(a2 + v258);
          unint64_t v260 = v259 + 1;
          if (v259 == -1 || v260 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v261 = *(unsigned char *)(*(void *)(a2 + *v8) + v259);
            *(void *)(a2 + v258) = v260;
            v257 |= (unint64_t)(v261 & 0x7F) << v255;
            if (v261 < 0)
            {
              v255 += 7;
              BOOL v16 = v256++ >= 9;
              if (v16)
              {
                uint64_t v257 = 0;
                goto LABEL_446;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v257 = 0;
        }
LABEL_446:
        [a1 setIsQueryNormalized:v257 != 0];
        goto LABEL_275;
      case 0x2Cu:
        char v262 = 0;
        unsigned int v263 = 0;
        uint64_t v264 = 0;
        while (2)
        {
          uint64_t v265 = *v4;
          uint64_t v266 = *(void *)(a2 + v265);
          unint64_t v267 = v266 + 1;
          if (v266 == -1 || v267 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v268 = *(unsigned char *)(*(void *)(a2 + *v8) + v266);
            *(void *)(a2 + v265) = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if (v268 < 0)
            {
              v262 += 7;
              BOOL v16 = v263++ >= 9;
              if (v16)
              {
                uint64_t v264 = 0;
                goto LABEL_450;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v264 = 0;
        }
LABEL_450:
        [a1 setIsQueryStrippedOfPunctuation:v264 != 0];
        goto LABEL_275;
      case 0x2Du:
        char v269 = 0;
        unsigned int v270 = 0;
        uint64_t v271 = 0;
        while (2)
        {
          uint64_t v272 = *v4;
          uint64_t v273 = *(void *)(a2 + v272);
          unint64_t v274 = v273 + 1;
          if (v273 == -1 || v274 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v275 = *(unsigned char *)(*(void *)(a2 + *v8) + v273);
            *(void *)(a2 + v272) = v274;
            v271 |= (unint64_t)(v275 & 0x7F) << v269;
            if (v275 < 0)
            {
              v269 += 7;
              BOOL v16 = v270++ >= 9;
              if (v16)
              {
                uint64_t v271 = 0;
                goto LABEL_454;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v271 = 0;
        }
LABEL_454:
        [a1 setIsQueryStrippedOfWhitespace:v271 != 0];
        goto LABEL_275;
      case 0x2Eu:
        char v276 = 0;
        unsigned int v277 = 0;
        uint64_t v278 = 0;
        while (2)
        {
          uint64_t v279 = *v4;
          uint64_t v280 = *(void *)(a2 + v279);
          unint64_t v281 = v280 + 1;
          if (v280 == -1 || v281 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v282 = *(unsigned char *)(*(void *)(a2 + *v8) + v280);
            *(void *)(a2 + v279) = v281;
            v278 |= (unint64_t)(v282 & 0x7F) << v276;
            if (v282 < 0)
            {
              v276 += 7;
              BOOL v16 = v277++ >= 9;
              if (v16)
              {
                uint64_t v278 = 0;
                goto LABEL_458;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v278 = 0;
        }
LABEL_458:
        [a1 setIsQueryStrippedOfSymbols:v278 != 0];
        goto LABEL_275;
      case 0x2Fu:
        char v283 = 0;
        unsigned int v284 = 0;
        uint64_t v285 = 0;
        while (2)
        {
          uint64_t v286 = *v4;
          uint64_t v287 = *(void *)(a2 + v286);
          unint64_t v288 = v287 + 1;
          if (v287 == -1 || v288 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v289 = *(unsigned char *)(*(void *)(a2 + *v8) + v287);
            *(void *)(a2 + v286) = v288;
            v285 |= (unint64_t)(v289 & 0x7F) << v283;
            if (v289 < 0)
            {
              v283 += 7;
              BOOL v16 = v284++ >= 9;
              if (v16)
              {
                uint64_t v285 = 0;
                goto LABEL_462;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v285 = 0;
        }
LABEL_462:
        [a1 setIsAsrE3Signal:v285 != 0];
        goto LABEL_275;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_275;
    }
  }
}

BOOL INFERENCESchemaINFERENCEDisambiguationPromptContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        if (v17) {
          [a1 addAnonymizedEntitiesPresented:v17];
        }
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    [a1 setAnonymizedEntitySelected:v17];
LABEL_23:

    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCELongRunningTaskInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setDurationInMs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INFERENCESchemaINFERENCEMusicAppSelectionGroundTruthGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCEMusicTrainingIndependentSignals);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEMusicTrainingIndependentSignalsReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInferenceMusicTrainingIndependentSignals:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(INFERENCESchemaINFERENCEMusicTrainingDependentSignals);
    if (!PBReaderPlaceMark()
      || !INFERENCESchemaINFERENCEMusicTrainingDependentSignalsReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addInferenceMusicTrainingDependentSignals:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEMusicTrainingDependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_453;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_455;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_453:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_455:
          [a1 setIsClientForegroundActiveBundle:v21 != 0];
          continue;
        case 2u:
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
          {
            double v28 = *(double *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v28 = 0.0;
          }
          [a1 setCompoundActiveBundleScore:v28];
          continue;
        case 3u:
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
          {
            double v31 = *(double *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v31 = 0.0;
          }
          [a1 setCompoundMediaTypeBundleScore:v31];
          continue;
        case 4u:
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + *v4))
          {
            double v34 = *(double *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v34 = 0.0;
          }
          [a1 setEntitySearchBundleRecencyS:v34];
          continue;
        case 5u:
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(void *)(a2 + *v4))
          {
            double v37 = *(double *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v37 = 0.0;
          }
          [a1 setEntitySearchBundleScore:v37];
          continue;
        case 6u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v3;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v15 = v39++ >= 9;
                if (v15)
                {
                  uint64_t v40 = 0;
                  goto LABEL_459;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v40 = 0;
          }
LABEL_459:
          [a1 setIsForegroundBundle:v40 != 0];
          continue;
        case 8u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            uint64_t v50 = *(void *)(a2 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                BOOL v15 = v47++ >= 9;
                if (v15)
                {
                  uint64_t v48 = 0;
                  goto LABEL_463;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v48 = 0;
          }
LABEL_463:
          [a1 setIsNowPlayingBundle:v48 != 0];
          continue;
        case 9u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            uint64_t v57 = *(void *)(a2 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v58;
              v55 |= (unint64_t)(v59 & 0x7F) << v53;
              if (v59 < 0)
              {
                v53 += 7;
                BOOL v15 = v54++ >= 9;
                if (v15)
                {
                  uint64_t v60 = 0;
                  goto LABEL_468;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v60 = 0;
          }
          else {
            uint64_t v60 = v55;
          }
LABEL_468:
          [a1 setNowPlayingBundleCount:v60];
          continue;
        case 0xAu:
          uint64_t v61 = *v3;
          unint64_t v62 = *(void *)(a2 + v61);
          if (v62 <= 0xFFFFFFFFFFFFFFF7 && v62 + 8 <= *(void *)(a2 + *v4))
          {
            double v63 = *(double *)(*(void *)(a2 + *v7) + v62);
            *(void *)(a2 + v61) = v62 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v63 = 0.0;
          }
          [a1 setNowPlayingBundleRecencyS:v63];
          continue;
        case 0xBu:
          uint64_t v64 = *v3;
          unint64_t v65 = *(void *)(a2 + v64);
          if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(void *)(a2 + *v4))
          {
            double v66 = *(double *)(*(void *)(a2 + *v7) + v65);
            *(void *)(a2 + v64) = v65 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v66 = 0.0;
          }
          [a1 setNowPlayingBundleScore:v66];
          continue;
        case 0xCu:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            uint64_t v71 = *(void *)(a2 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v72;
              v69 |= (unint64_t)(v73 & 0x7F) << v67;
              if (v73 < 0)
              {
                v67 += 7;
                BOOL v15 = v68++ >= 9;
                if (v15)
                {
                  uint64_t v69 = 0;
                  goto LABEL_472;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v69 = 0;
          }
LABEL_472:
          [a1 setIsNowPlayingLastBundle:v69 != 0];
          continue;
        case 0xDu:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          while (2)
          {
            uint64_t v77 = *v3;
            uint64_t v78 = *(void *)(a2 + v77);
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v79;
              v76 |= (unint64_t)(v80 & 0x7F) << v74;
              if (v80 < 0)
              {
                v74 += 7;
                BOOL v15 = v75++ >= 9;
                if (v15)
                {
                  uint64_t v81 = 0;
                  goto LABEL_477;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v81 = 0;
          }
          else {
            uint64_t v81 = v76;
          }
LABEL_477:
          [a1 setNowPlayingUsage1Day:v81];
          continue;
        case 0xEu:
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v84 = 0;
          while (2)
          {
            uint64_t v85 = *v3;
            uint64_t v86 = *(void *)(a2 + v85);
            unint64_t v87 = v86 + 1;
            if (v86 == -1 || v87 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v86);
              *(void *)(a2 + v85) = v87;
              v84 |= (unint64_t)(v88 & 0x7F) << v82;
              if (v88 < 0)
              {
                v82 += 7;
                BOOL v15 = v83++ >= 9;
                if (v15)
                {
                  uint64_t v89 = 0;
                  goto LABEL_482;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v89 = 0;
          }
          else {
            uint64_t v89 = v84;
          }
LABEL_482:
          [a1 setNowPlayingUsage7Days:v89];
          continue;
        case 0xFu:
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          while (2)
          {
            uint64_t v93 = *v3;
            uint64_t v94 = *(void *)(a2 + v93);
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v94);
              *(void *)(a2 + v93) = v95;
              v92 |= (unint64_t)(v96 & 0x7F) << v90;
              if (v96 < 0)
              {
                v90 += 7;
                BOOL v15 = v91++ >= 9;
                if (v15)
                {
                  uint64_t v97 = 0;
                  goto LABEL_487;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v97 = 0;
          }
          else {
            uint64_t v97 = v92;
          }
LABEL_487:
          [a1 setNowPlayingUsage14Days:v97];
          continue;
        case 0x10u:
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v100 = 0;
          while (2)
          {
            uint64_t v101 = *v3;
            uint64_t v102 = *(void *)(a2 + v101);
            unint64_t v103 = v102 + 1;
            if (v102 == -1 || v103 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v104 = *(unsigned char *)(*(void *)(a2 + *v7) + v102);
              *(void *)(a2 + v101) = v103;
              v100 |= (unint64_t)(v104 & 0x7F) << v98;
              if (v104 < 0)
              {
                v98 += 7;
                BOOL v15 = v99++ >= 9;
                if (v15)
                {
                  uint64_t v100 = 0;
                  goto LABEL_491;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v100 = 0;
          }
LABEL_491:
          [a1 setIsRawLastNowPlayingCoreDuet:v100 != 0];
          continue;
        case 0x11u:
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v107 = 0;
          while (2)
          {
            uint64_t v108 = *v3;
            uint64_t v109 = *(void *)(a2 + v108);
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v111 = *(unsigned char *)(*(void *)(a2 + *v7) + v109);
              *(void *)(a2 + v108) = v110;
              v107 |= (unint64_t)(v111 & 0x7F) << v105;
              if (v111 < 0)
              {
                v105 += 7;
                BOOL v15 = v106++ >= 9;
                if (v15)
                {
                  uint64_t v107 = 0;
                  goto LABEL_495;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v107 = 0;
          }
LABEL_495:
          [a1 setIsRawMediaCategoryAudiobookSignal:v107 != 0];
          continue;
        case 0x12u:
          char v112 = 0;
          unsigned int v113 = 0;
          uint64_t v114 = 0;
          while (2)
          {
            uint64_t v115 = *v3;
            uint64_t v116 = *(void *)(a2 + v115);
            unint64_t v117 = v116 + 1;
            if (v116 == -1 || v117 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v116);
              *(void *)(a2 + v115) = v117;
              v114 |= (unint64_t)(v118 & 0x7F) << v112;
              if (v118 < 0)
              {
                v112 += 7;
                BOOL v15 = v113++ >= 9;
                if (v15)
                {
                  uint64_t v114 = 0;
                  goto LABEL_499;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v114 = 0;
          }
LABEL_499:
          [a1 setIsRawMediaCategoryMusicSignal:v114 != 0];
          continue;
        case 0x13u:
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v121 = 0;
          while (2)
          {
            uint64_t v122 = *v3;
            uint64_t v123 = *(void *)(a2 + v122);
            unint64_t v124 = v123 + 1;
            if (v123 == -1 || v124 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v125 = *(unsigned char *)(*(void *)(a2 + *v7) + v123);
              *(void *)(a2 + v122) = v124;
              v121 |= (unint64_t)(v125 & 0x7F) << v119;
              if (v125 < 0)
              {
                v119 += 7;
                BOOL v15 = v120++ >= 9;
                if (v15)
                {
                  uint64_t v121 = 0;
                  goto LABEL_503;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v121 = 0;
          }
LABEL_503:
          [a1 setIsRawMediaCategoryPodcastSignal:v121 != 0];
          continue;
        case 0x14u:
          char v126 = 0;
          unsigned int v127 = 0;
          uint64_t v128 = 0;
          while (2)
          {
            uint64_t v129 = *v3;
            uint64_t v130 = *(void *)(a2 + v129);
            unint64_t v131 = v130 + 1;
            if (v130 == -1 || v131 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v132 = *(unsigned char *)(*(void *)(a2 + *v7) + v130);
              *(void *)(a2 + v129) = v131;
              v128 |= (unint64_t)(v132 & 0x7F) << v126;
              if (v132 < 0)
              {
                v126 += 7;
                BOOL v15 = v127++ >= 9;
                if (v15)
                {
                  uint64_t v128 = 0;
                  goto LABEL_507;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v128 = 0;
          }
LABEL_507:
          [a1 setIsRawMediaCategoryRadioSignal:v128 != 0];
          continue;
        case 0x15u:
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v135 = 0;
          while (2)
          {
            uint64_t v136 = *v3;
            uint64_t v137 = *(void *)(a2 + v136);
            unint64_t v138 = v137 + 1;
            if (v137 == -1 || v138 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v139 = *(unsigned char *)(*(void *)(a2 + *v7) + v137);
              *(void *)(a2 + v136) = v138;
              v135 |= (unint64_t)(v139 & 0x7F) << v133;
              if (v139 < 0)
              {
                v133 += 7;
                BOOL v15 = v134++ >= 9;
                if (v15)
                {
                  uint64_t v135 = 0;
                  goto LABEL_511;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v135 = 0;
          }
LABEL_511:
          [a1 setIsRawMediaCategoryVideoSignal:v135 != 0];
          continue;
        case 0x16u:
          char v140 = 0;
          unsigned int v141 = 0;
          uint64_t v142 = 0;
          while (2)
          {
            uint64_t v143 = *v3;
            uint64_t v144 = *(void *)(a2 + v143);
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v146 = *(unsigned char *)(*(void *)(a2 + *v7) + v144);
              *(void *)(a2 + v143) = v145;
              v142 |= (unint64_t)(v146 & 0x7F) << v140;
              if (v146 < 0)
              {
                v140 += 7;
                BOOL v15 = v141++ >= 9;
                if (v15)
                {
                  uint64_t v147 = 0;
                  goto LABEL_516;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v147 = 0;
          }
          else {
            uint64_t v147 = v142;
          }
LABEL_516:
          [a1 setRawMediaTypeUsageSignalBook:v147];
          continue;
        case 0x17u:
          char v148 = 0;
          unsigned int v149 = 0;
          uint64_t v150 = 0;
          while (2)
          {
            uint64_t v151 = *v3;
            uint64_t v152 = *(void *)(a2 + v151);
            unint64_t v153 = v152 + 1;
            if (v152 == -1 || v153 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v154 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
              *(void *)(a2 + v151) = v153;
              v150 |= (unint64_t)(v154 & 0x7F) << v148;
              if (v154 < 0)
              {
                v148 += 7;
                BOOL v15 = v149++ >= 9;
                if (v15)
                {
                  uint64_t v155 = 0;
                  goto LABEL_521;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v155 = 0;
          }
          else {
            uint64_t v155 = v150;
          }
LABEL_521:
          [a1 setRawMediaTypeUsageSignalMusic:v155];
          continue;
        case 0x18u:
          char v156 = 0;
          unsigned int v157 = 0;
          uint64_t v158 = 0;
          while (2)
          {
            uint64_t v159 = *v3;
            uint64_t v160 = *(void *)(a2 + v159);
            unint64_t v161 = v160 + 1;
            if (v160 == -1 || v161 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v162 = *(unsigned char *)(*(void *)(a2 + *v7) + v160);
              *(void *)(a2 + v159) = v161;
              v158 |= (unint64_t)(v162 & 0x7F) << v156;
              if (v162 < 0)
              {
                v156 += 7;
                BOOL v15 = v157++ >= 9;
                if (v15)
                {
                  uint64_t v163 = 0;
                  goto LABEL_526;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v163 = 0;
          }
          else {
            uint64_t v163 = v158;
          }
LABEL_526:
          [a1 setRawMediaTypeUsageSignalPodcast:v163];
          continue;
        case 0x19u:
          char v164 = 0;
          unsigned int v165 = 0;
          uint64_t v166 = 0;
          while (2)
          {
            uint64_t v167 = *v3;
            uint64_t v168 = *(void *)(a2 + v167);
            unint64_t v169 = v168 + 1;
            if (v168 == -1 || v169 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v170 = *(unsigned char *)(*(void *)(a2 + *v7) + v168);
              *(void *)(a2 + v167) = v169;
              v166 |= (unint64_t)(v170 & 0x7F) << v164;
              if (v170 < 0)
              {
                v164 += 7;
                BOOL v15 = v165++ >= 9;
                if (v15)
                {
                  uint64_t v171 = 0;
                  goto LABEL_531;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v171 = 0;
          }
          else {
            uint64_t v171 = v166;
          }
LABEL_531:
          [a1 setRawMediaTypeUsageSignalVideo:v171];
          continue;
        case 0x1Bu:
          char v172 = 0;
          unsigned int v173 = 0;
          uint64_t v174 = 0;
          while (2)
          {
            uint64_t v175 = *v3;
            uint64_t v176 = *(void *)(a2 + v175);
            unint64_t v177 = v176 + 1;
            if (v176 == -1 || v177 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v178 = *(unsigned char *)(*(void *)(a2 + *v7) + v176);
              *(void *)(a2 + v175) = v177;
              v174 |= (unint64_t)(v178 & 0x7F) << v172;
              if (v178 < 0)
              {
                v172 += 7;
                BOOL v15 = v173++ >= 9;
                if (v15)
                {
                  uint64_t v179 = 0;
                  goto LABEL_536;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v179 = 0;
          }
          else {
            uint64_t v179 = v174;
          }
LABEL_536:
          [a1 setRawNowPlayingCountCoreDuet10Min:v179];
          continue;
        case 0x1Cu:
          char v180 = 0;
          unsigned int v181 = 0;
          uint64_t v182 = 0;
          while (2)
          {
            uint64_t v183 = *v3;
            uint64_t v184 = *(void *)(a2 + v183);
            unint64_t v185 = v184 + 1;
            if (v184 == -1 || v185 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v186 = *(unsigned char *)(*(void *)(a2 + *v7) + v184);
              *(void *)(a2 + v183) = v185;
              v182 |= (unint64_t)(v186 & 0x7F) << v180;
              if (v186 < 0)
              {
                v180 += 7;
                BOOL v15 = v181++ >= 9;
                if (v15)
                {
                  uint64_t v187 = 0;
                  goto LABEL_541;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v187 = 0;
          }
          else {
            uint64_t v187 = v182;
          }
LABEL_541:
          [a1 setRawNowPlayingCountCoreDuet1Day:v187];
          continue;
        case 0x1Du:
          char v188 = 0;
          unsigned int v189 = 0;
          uint64_t v190 = 0;
          while (2)
          {
            uint64_t v191 = *v3;
            uint64_t v192 = *(void *)(a2 + v191);
            unint64_t v193 = v192 + 1;
            if (v192 == -1 || v193 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v194 = *(unsigned char *)(*(void *)(a2 + *v7) + v192);
              *(void *)(a2 + v191) = v193;
              v190 |= (unint64_t)(v194 & 0x7F) << v188;
              if (v194 < 0)
              {
                v188 += 7;
                BOOL v15 = v189++ >= 9;
                if (v15)
                {
                  uint64_t v195 = 0;
                  goto LABEL_546;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v195 = 0;
          }
          else {
            uint64_t v195 = v190;
          }
LABEL_546:
          [a1 setRawNowPlayingCountCoreDuet1Hr:v195];
          continue;
        case 0x1Eu:
          char v196 = 0;
          unsigned int v197 = 0;
          uint64_t v198 = 0;
          while (2)
          {
            uint64_t v199 = *v3;
            uint64_t v200 = *(void *)(a2 + v199);
            unint64_t v201 = v200 + 1;
            if (v200 == -1 || v201 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v202 = *(unsigned char *)(*(void *)(a2 + *v7) + v200);
              *(void *)(a2 + v199) = v201;
              v198 |= (unint64_t)(v202 & 0x7F) << v196;
              if (v202 < 0)
              {
                v196 += 7;
                BOOL v15 = v197++ >= 9;
                if (v15)
                {
                  uint64_t v203 = 0;
                  goto LABEL_551;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v203 = 0;
          }
          else {
            uint64_t v203 = v198;
          }
LABEL_551:
          [a1 setRawNowPlayingCountCoreDuet28Day:v203];
          continue;
        case 0x1Fu:
          char v204 = 0;
          unsigned int v205 = 0;
          uint64_t v206 = 0;
          while (2)
          {
            uint64_t v207 = *v3;
            uint64_t v208 = *(void *)(a2 + v207);
            unint64_t v209 = v208 + 1;
            if (v208 == -1 || v209 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v210 = *(unsigned char *)(*(void *)(a2 + *v7) + v208);
              *(void *)(a2 + v207) = v209;
              v206 |= (unint64_t)(v210 & 0x7F) << v204;
              if (v210 < 0)
              {
                v204 += 7;
                BOOL v15 = v205++ >= 9;
                if (v15)
                {
                  uint64_t v211 = 0;
                  goto LABEL_556;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v211 = 0;
          }
          else {
            uint64_t v211 = v206;
          }
LABEL_556:
          [a1 setRawNowPlayingCountCoreDuet2Min:v211];
          continue;
        case 0x20u:
          char v212 = 0;
          unsigned int v213 = 0;
          uint64_t v214 = 0;
          while (2)
          {
            uint64_t v215 = *v3;
            uint64_t v216 = *(void *)(a2 + v215);
            unint64_t v217 = v216 + 1;
            if (v216 == -1 || v217 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v218 = *(unsigned char *)(*(void *)(a2 + *v7) + v216);
              *(void *)(a2 + v215) = v217;
              v214 |= (unint64_t)(v218 & 0x7F) << v212;
              if (v218 < 0)
              {
                v212 += 7;
                BOOL v15 = v213++ >= 9;
                if (v15)
                {
                  uint64_t v219 = 0;
                  goto LABEL_561;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v219 = 0;
          }
          else {
            uint64_t v219 = v214;
          }
LABEL_561:
          [a1 setRawNowPlayingCountCoreDuet6Hr:v219];
          continue;
        case 0x21u:
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v222 = 0;
          while (2)
          {
            uint64_t v223 = *v3;
            uint64_t v224 = *(void *)(a2 + v223);
            unint64_t v225 = v224 + 1;
            if (v224 == -1 || v225 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v226 = *(unsigned char *)(*(void *)(a2 + *v7) + v224);
              *(void *)(a2 + v223) = v225;
              v222 |= (unint64_t)(v226 & 0x7F) << v220;
              if (v226 < 0)
              {
                v220 += 7;
                BOOL v15 = v221++ >= 9;
                if (v15)
                {
                  uint64_t v227 = 0;
                  goto LABEL_566;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v227 = 0;
          }
          else {
            uint64_t v227 = v222;
          }
LABEL_566:
          [a1 setRawNowPlayingCountCoreDuet7Day:v227];
          continue;
        case 0x22u:
          char v228 = 0;
          unsigned int v229 = 0;
          uint64_t v230 = 0;
          while (2)
          {
            uint64_t v231 = *v3;
            uint64_t v232 = *(void *)(a2 + v231);
            unint64_t v233 = v232 + 1;
            if (v232 == -1 || v233 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v234 = *(unsigned char *)(*(void *)(a2 + *v7) + v232);
              *(void *)(a2 + v231) = v233;
              v230 |= (unint64_t)(v234 & 0x7F) << v228;
              if (v234 < 0)
              {
                v228 += 7;
                BOOL v15 = v229++ >= 9;
                if (v15)
                {
                  uint64_t v235 = 0;
                  goto LABEL_571;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v235 = 0;
          }
          else {
            uint64_t v235 = v230;
          }
LABEL_571:
          [a1 setRawNowPlayingRecencyCD:v235];
          continue;
        case 0x23u:
          char v236 = 0;
          unsigned int v237 = 0;
          uint64_t v238 = 0;
          while (2)
          {
            uint64_t v239 = *v3;
            uint64_t v240 = *(void *)(a2 + v239);
            unint64_t v241 = v240 + 1;
            if (v240 == -1 || v241 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v242 = *(unsigned char *)(*(void *)(a2 + *v7) + v240);
              *(void *)(a2 + v239) = v241;
              v238 |= (unint64_t)(v242 & 0x7F) << v236;
              if (v242 < 0)
              {
                v236 += 7;
                BOOL v15 = v237++ >= 9;
                if (v15)
                {
                  uint64_t v243 = 0;
                  goto LABEL_576;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v243 = 0;
          }
          else {
            uint64_t v243 = v238;
          }
LABEL_576:
          [a1 setRawEntitySearchRecency:v243];
          continue;
        case 0x24u:
          uint64_t v244 = *v3;
          unint64_t v245 = *(void *)(a2 + v244);
          if (v245 <= 0xFFFFFFFFFFFFFFF7 && v245 + 8 <= *(void *)(a2 + *v4))
          {
            double v246 = *(double *)(*(void *)(a2 + *v7) + v245);
            *(void *)(a2 + v244) = v245 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v246 = 0.0;
          }
          [a1 setUsageScoreBooks:v246];
          continue;
        case 0x25u:
          uint64_t v247 = *v3;
          unint64_t v248 = *(void *)(a2 + v247);
          if (v248 <= 0xFFFFFFFFFFFFFFF7 && v248 + 8 <= *(void *)(a2 + *v4))
          {
            double v249 = *(double *)(*(void *)(a2 + *v7) + v248);
            *(void *)(a2 + v247) = v248 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v249 = 0.0;
          }
          [a1 setUsageScoreMusic:v249];
          continue;
        case 0x26u:
          uint64_t v250 = *v3;
          unint64_t v251 = *(void *)(a2 + v250);
          if (v251 <= 0xFFFFFFFFFFFFFFF7 && v251 + 8 <= *(void *)(a2 + *v4))
          {
            double v252 = *(double *)(*(void *)(a2 + *v7) + v251);
            *(void *)(a2 + v250) = v251 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v252 = 0.0;
          }
          [a1 setUsageScorePodcasts:v252];
          continue;
        case 0x27u:
          char v253 = 0;
          unsigned int v254 = 0;
          uint64_t v255 = 0;
          while (2)
          {
            uint64_t v256 = *v3;
            uint64_t v257 = *(void *)(a2 + v256);
            unint64_t v258 = v257 + 1;
            if (v257 == -1 || v258 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v259 = *(unsigned char *)(*(void *)(a2 + *v7) + v257);
              *(void *)(a2 + v256) = v258;
              v255 |= (unint64_t)(v259 & 0x7F) << v253;
              if (v259 < 0)
              {
                v253 += 7;
                BOOL v15 = v254++ >= 9;
                if (v15)
                {
                  uint64_t v255 = 0;
                  goto LABEL_580;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v255 = 0;
          }
LABEL_580:
          [a1 setIsAppFirstParty:v255 != 0];
          continue;
        case 0x28u:
          char v260 = 0;
          unsigned int v261 = 0;
          uint64_t v262 = 0;
          while (2)
          {
            uint64_t v263 = *v3;
            uint64_t v264 = *(void *)(a2 + v263);
            unint64_t v265 = v264 + 1;
            if (v264 == -1 || v265 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v266 = *(unsigned char *)(*(void *)(a2 + *v7) + v264);
              *(void *)(a2 + v263) = v265;
              v262 |= (unint64_t)(v266 & 0x7F) << v260;
              if (v266 < 0)
              {
                v260 += 7;
                BOOL v15 = v261++ >= 9;
                if (v15)
                {
                  uint64_t v262 = 0;
                  goto LABEL_584;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v262 = 0;
          }
LABEL_584:
          [a1 setIsRequestedApp:v262 != 0];
          continue;
        case 0x29u:
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v269 = 0;
          while (2)
          {
            uint64_t v270 = *v3;
            uint64_t v271 = *(void *)(a2 + v270);
            unint64_t v272 = v271 + 1;
            if (v271 == -1 || v272 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v273 = *(unsigned char *)(*(void *)(a2 + *v7) + v271);
              *(void *)(a2 + v270) = v272;
              v269 |= (unint64_t)(v273 & 0x7F) << v267;
              if (v273 < 0)
              {
                v267 += 7;
                BOOL v15 = v268++ >= 9;
                if (v15)
                {
                  uint64_t v269 = 0;
                  goto LABEL_588;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v269 = 0;
          }
LABEL_588:
          [a1 setIsNowPlayingBundlePSE1:v269 != 0];
          continue;
        case 0x2Au:
          char v274 = 0;
          unsigned int v275 = 0;
          uint64_t v276 = 0;
          while (2)
          {
            uint64_t v277 = *v3;
            uint64_t v278 = *(void *)(a2 + v277);
            unint64_t v279 = v278 + 1;
            if (v278 == -1 || v279 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v280 = *(unsigned char *)(*(void *)(a2 + *v7) + v278);
              *(void *)(a2 + v277) = v279;
              v276 |= (unint64_t)(v280 & 0x7F) << v274;
              if (v280 < 0)
              {
                v274 += 7;
                BOOL v15 = v275++ >= 9;
                if (v15)
                {
                  uint64_t v276 = 0;
                  goto LABEL_592;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v276 = 0;
          }
LABEL_592:
          [a1 setIsNowPlayingBundlePSE2:v276 != 0];
          continue;
        case 0x2Bu:
          uint64_t v281 = *v3;
          unint64_t v282 = *(void *)(a2 + v281);
          if (v282 <= 0xFFFFFFFFFFFFFFF7 && v282 + 8 <= *(void *)(a2 + *v4))
          {
            double v283 = *(double *)(*(void *)(a2 + *v7) + v282);
            *(void *)(a2 + v281) = v282 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v283 = 0.0;
          }
          [a1 setVq21Score:v283];
          continue;
        case 0x2Cu:
          char v284 = 0;
          unsigned int v285 = 0;
          uint64_t v286 = 0;
          while (2)
          {
            uint64_t v287 = *v3;
            uint64_t v288 = *(void *)(a2 + v287);
            unint64_t v289 = v288 + 1;
            if (v288 == -1 || v289 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v290 = *(unsigned char *)(*(void *)(a2 + *v7) + v288);
              *(void *)(a2 + v287) = v289;
              v286 |= (unint64_t)(v290 & 0x7F) << v284;
              if (v290 < 0)
              {
                v284 += 7;
                BOOL v15 = v285++ >= 9;
                if (v15)
                {
                  uint64_t v286 = 0;
                  goto LABEL_596;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v286 = 0;
          }
LABEL_596:
          [a1 setIsSupportedFlag:v286 != 0];
          continue;
        case 0x2Du:
          char v291 = 0;
          unsigned int v292 = 0;
          uint64_t v293 = 0;
          while (2)
          {
            uint64_t v294 = *v3;
            uint64_t v295 = *(void *)(a2 + v294);
            unint64_t v296 = v295 + 1;
            if (v295 == -1 || v296 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v297 = *(unsigned char *)(*(void *)(a2 + *v7) + v295);
              *(void *)(a2 + v294) = v296;
              v293 |= (unint64_t)(v297 & 0x7F) << v291;
              if (v297 < 0)
              {
                v291 += 7;
                BOOL v15 = v292++ >= 9;
                if (v15)
                {
                  uint64_t v293 = 0;
                  goto LABEL_600;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v293 = 0;
          }
LABEL_600:
          [a1 setIsUnicornFlag:v293 != 0];
          continue;
        case 0x2Eu:
          char v298 = 0;
          unsigned int v299 = 0;
          uint64_t v300 = 0;
          while (2)
          {
            uint64_t v301 = *v3;
            uint64_t v302 = *(void *)(a2 + v301);
            unint64_t v303 = v302 + 1;
            if (v302 == -1 || v303 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v304 = *(unsigned char *)(*(void *)(a2 + *v7) + v302);
              *(void *)(a2 + v301) = v303;
              v300 |= (unint64_t)(v304 & 0x7F) << v298;
              if (v304 < 0)
              {
                v298 += 7;
                BOOL v15 = v299++ >= 9;
                if (v15)
                {
                  uint64_t v300 = 0;
                  goto LABEL_604;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v300 = 0;
          }
LABEL_604:
          [a1 setIsSupportedUnicornMatchFlag:v300 != 0];
          continue;
        case 0x2Fu:
          char v305 = 0;
          unsigned int v306 = 0;
          uint64_t v307 = 0;
          while (2)
          {
            uint64_t v308 = *v3;
            uint64_t v309 = *(void *)(a2 + v308);
            unint64_t v310 = v309 + 1;
            if (v309 == -1 || v310 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v311 = *(unsigned char *)(*(void *)(a2 + *v7) + v309);
              *(void *)(a2 + v308) = v310;
              v307 |= (unint64_t)(v311 & 0x7F) << v305;
              if (v311 < 0)
              {
                v305 += 7;
                BOOL v15 = v306++ >= 9;
                if (v15)
                {
                  uint64_t v307 = 0;
                  goto LABEL_608;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v307 = 0;
          }
LABEL_608:
          [a1 setIsDisambiguationSelectedApp:v307 != 0];
          continue;
        case 0x30u:
          char v312 = 0;
          unsigned int v313 = 0;
          uint64_t v314 = 0;
          while (2)
          {
            uint64_t v315 = *v3;
            uint64_t v316 = *(void *)(a2 + v315);
            unint64_t v317 = v316 + 1;
            if (v316 == -1 || v317 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v318 = *(unsigned char *)(*(void *)(a2 + *v7) + v316);
              *(void *)(a2 + v315) = v317;
              v314 |= (unint64_t)(v318 & 0x7F) << v312;
              if (v318 < 0)
              {
                v312 += 7;
                BOOL v15 = v313++ >= 9;
                if (v15)
                {
                  uint64_t v314 = 0;
                  goto LABEL_612;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v314 = 0;
          }
LABEL_612:
          [a1 setIsModelPredictedApp:v314 != 0];
          continue;
        case 0x31u:
          uint64_t v319 = *v3;
          unint64_t v320 = *(void *)(a2 + v319);
          if (v320 <= 0xFFFFFFFFFFFFFFF7 && v320 + 8 <= *(void *)(a2 + *v4))
          {
            double v321 = *(double *)(*(void *)(a2 + *v7) + v320);
            *(void *)(a2 + v319) = v320 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v321 = 0.0;
          }
          [a1 setUsageScoreRadio:v321];
          continue;
        case 0x32u:
          uint64_t v322 = *v3;
          unint64_t v323 = *(void *)(a2 + v322);
          if (v323 <= 0xFFFFFFFFFFFFFFF7 && v323 + 8 <= *(void *)(a2 + *v4))
          {
            double v324 = *(double *)(*(void *)(a2 + *v7) + v323);
            *(void *)(a2 + v322) = v323 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v324 = 0.0;
          }
          [a1 setUsageScoreMusicWithoutRadio:v324];
          continue;
        case 0x33u:
          char v325 = 0;
          unsigned int v326 = 0;
          uint64_t v327 = 0;
          while (2)
          {
            uint64_t v328 = *v3;
            uint64_t v329 = *(void *)(a2 + v328);
            unint64_t v330 = v329 + 1;
            if (v329 == -1 || v330 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v331 = *(unsigned char *)(*(void *)(a2 + *v7) + v329);
              *(void *)(a2 + v328) = v330;
              v327 |= (unint64_t)(v331 & 0x7F) << v325;
              if (v331 < 0)
              {
                v325 += 7;
                BOOL v15 = v326++ >= 9;
                if (v15)
                {
                  uint64_t v332 = 0;
                  goto LABEL_617;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v332 = 0;
          }
          else {
            uint64_t v332 = v327;
          }
LABEL_617:
          [a1 setRawMediaTypeUsageSignalRadio:v332];
          continue;
        case 0x34u:
          char v333 = 0;
          unsigned int v334 = 0;
          uint64_t v335 = 0;
          while (2)
          {
            uint64_t v336 = *v3;
            uint64_t v337 = *(void *)(a2 + v336);
            unint64_t v338 = v337 + 1;
            if (v337 == -1 || v338 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v339 = *(unsigned char *)(*(void *)(a2 + *v7) + v337);
              *(void *)(a2 + v336) = v338;
              v335 |= (unint64_t)(v339 & 0x7F) << v333;
              if (v339 < 0)
              {
                v333 += 7;
                BOOL v15 = v334++ >= 9;
                if (v15)
                {
                  uint64_t v340 = 0;
                  goto LABEL_622;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v340 = 0;
          }
          else {
            uint64_t v340 = v335;
          }
LABEL_622:
          [a1 setRawMediaTypeUsageSignalMusicWithoutRadio:v340];
          continue;
        case 0x35u:
          char v341 = 0;
          unsigned int v342 = 0;
          uint64_t v343 = 0;
          while (2)
          {
            uint64_t v344 = *v3;
            uint64_t v345 = *(void *)(a2 + v344);
            unint64_t v346 = v345 + 1;
            if (v345 == -1 || v346 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v347 = *(unsigned char *)(*(void *)(a2 + *v7) + v345);
              *(void *)(a2 + v344) = v346;
              v343 |= (unint64_t)(v347 & 0x7F) << v341;
              if (v347 < 0)
              {
                v341 += 7;
                BOOL v15 = v342++ >= 9;
                if (v15)
                {
                  uint64_t v348 = 0;
                  goto LABEL_627;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v348 = 0;
          }
          else {
            uint64_t v348 = v343;
          }
LABEL_627:
          [a1 setSubscriptionStatus:v348];
          continue;
        case 0x36u:
          char v349 = 0;
          unsigned int v350 = 0;
          uint64_t v351 = 0;
          while (2)
          {
            uint64_t v352 = *v3;
            uint64_t v353 = *(void *)(a2 + v352);
            unint64_t v354 = v353 + 1;
            if (v353 == -1 || v354 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v355 = *(unsigned char *)(*(void *)(a2 + *v7) + v353);
              *(void *)(a2 + v352) = v354;
              v351 |= (unint64_t)(v355 & 0x7F) << v349;
              if (v355 < 0)
              {
                v349 += 7;
                BOOL v15 = v350++ >= 9;
                if (v15)
                {
                  uint64_t v351 = 0;
                  goto LABEL_631;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v351 = 0;
          }
LABEL_631:
          [a1 setIsRawNowPlayingBundle:v351 != 0];
          continue;
        case 0x37u:
          char v356 = 0;
          unsigned int v357 = 0;
          uint64_t v358 = 0;
          while (2)
          {
            uint64_t v359 = *v3;
            uint64_t v360 = *(void *)(a2 + v359);
            unint64_t v361 = v360 + 1;
            if (v360 == -1 || v361 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v362 = *(unsigned char *)(*(void *)(a2 + *v7) + v360);
              *(void *)(a2 + v359) = v361;
              v358 |= (unint64_t)(v362 & 0x7F) << v356;
              if (v362 < 0)
              {
                v356 += 7;
                BOOL v15 = v357++ >= 9;
                if (v15)
                {
                  uint64_t v363 = 0;
                  goto LABEL_636;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v363 = 0;
          }
          else {
            uint64_t v363 = v358;
          }
LABEL_636:
          [a1 setRawNowPlayingTotal:v363];
          continue;
        case 0x38u:
          uint64_t v364 = *v3;
          unint64_t v365 = *(void *)(a2 + v364);
          if (v365 <= 0xFFFFFFFFFFFFFFF7 && v365 + 8 <= *(void *)(a2 + *v4))
          {
            double v366 = *(double *)(*(void *)(a2 + *v7) + v365);
            *(void *)(a2 + v364) = v365 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v366 = 0.0;
          }
          [a1 setRawNowPlayingBundleScore:v366];
          continue;
        case 0x39u:
          uint64_t v367 = *v3;
          unint64_t v368 = *(void *)(a2 + v367);
          if (v368 <= 0xFFFFFFFFFFFFFFF7 && v368 + 8 <= *(void *)(a2 + *v4))
          {
            double v369 = *(double *)(*(void *)(a2 + *v7) + v368);
            *(void *)(a2 + v367) = v368 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v369 = 0.0;
          }
          [a1 setIsRawLastNowPlaying:v369];
          continue;
        case 0x3Au:
          char v370 = 0;
          unsigned int v371 = 0;
          uint64_t v372 = 0;
          while (2)
          {
            uint64_t v373 = *v3;
            uint64_t v374 = *(void *)(a2 + v373);
            unint64_t v375 = v374 + 1;
            if (v374 == -1 || v375 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v376 = *(unsigned char *)(*(void *)(a2 + *v7) + v374);
              *(void *)(a2 + v373) = v375;
              v372 |= (unint64_t)(v376 & 0x7F) << v370;
              if (v376 < 0)
              {
                v370 += 7;
                BOOL v15 = v371++ >= 9;
                if (v15)
                {
                  uint64_t v377 = 0;
                  goto LABEL_641;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v377 = 0;
          }
          else {
            uint64_t v377 = v372;
          }
LABEL_641:
          [a1 setRawNowPlaying2Minutes:v377];
          continue;
        case 0x3Bu:
          char v378 = 0;
          unsigned int v379 = 0;
          uint64_t v380 = 0;
          while (2)
          {
            uint64_t v381 = *v3;
            uint64_t v382 = *(void *)(a2 + v381);
            unint64_t v383 = v382 + 1;
            if (v382 == -1 || v383 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v384 = *(unsigned char *)(*(void *)(a2 + *v7) + v382);
              *(void *)(a2 + v381) = v383;
              v380 |= (unint64_t)(v384 & 0x7F) << v378;
              if (v384 < 0)
              {
                v378 += 7;
                BOOL v15 = v379++ >= 9;
                if (v15)
                {
                  uint64_t v385 = 0;
                  goto LABEL_646;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v385 = 0;
          }
          else {
            uint64_t v385 = v380;
          }
LABEL_646:
          [a1 setRawNowPlaying10Minutes:v385];
          continue;
        case 0x3Cu:
          char v386 = 0;
          unsigned int v387 = 0;
          uint64_t v388 = 0;
          while (2)
          {
            uint64_t v389 = *v3;
            uint64_t v390 = *(void *)(a2 + v389);
            unint64_t v391 = v390 + 1;
            if (v390 == -1 || v391 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v392 = *(unsigned char *)(*(void *)(a2 + *v7) + v390);
              *(void *)(a2 + v389) = v391;
              v388 |= (unint64_t)(v392 & 0x7F) << v386;
              if (v392 < 0)
              {
                v386 += 7;
                BOOL v15 = v387++ >= 9;
                if (v15)
                {
                  uint64_t v393 = 0;
                  goto LABEL_651;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v393 = 0;
          }
          else {
            uint64_t v393 = v388;
          }
LABEL_651:
          [a1 setRawNowPlaying1Hour:v393];
          continue;
        case 0x3Du:
          char v394 = 0;
          unsigned int v395 = 0;
          uint64_t v396 = 0;
          while (2)
          {
            uint64_t v397 = *v3;
            uint64_t v398 = *(void *)(a2 + v397);
            unint64_t v399 = v398 + 1;
            if (v398 == -1 || v399 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v400 = *(unsigned char *)(*(void *)(a2 + *v7) + v398);
              *(void *)(a2 + v397) = v399;
              v396 |= (unint64_t)(v400 & 0x7F) << v394;
              if (v400 < 0)
              {
                v394 += 7;
                BOOL v15 = v395++ >= 9;
                if (v15)
                {
                  uint64_t v401 = 0;
                  goto LABEL_656;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v401 = 0;
          }
          else {
            uint64_t v401 = v396;
          }
LABEL_656:
          [a1 setRawNowPlaying6Hours:v401];
          continue;
        case 0x3Eu:
          char v402 = 0;
          unsigned int v403 = 0;
          uint64_t v404 = 0;
          while (2)
          {
            uint64_t v405 = *v3;
            uint64_t v406 = *(void *)(a2 + v405);
            unint64_t v407 = v406 + 1;
            if (v406 == -1 || v407 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v408 = *(unsigned char *)(*(void *)(a2 + *v7) + v406);
              *(void *)(a2 + v405) = v407;
              v404 |= (unint64_t)(v408 & 0x7F) << v402;
              if (v408 < 0)
              {
                v402 += 7;
                BOOL v15 = v403++ >= 9;
                if (v15)
                {
                  uint64_t v409 = 0;
                  goto LABEL_661;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v409 = 0;
          }
          else {
            uint64_t v409 = v404;
          }
LABEL_661:
          [a1 setRawNowPlaying1Day:v409];
          continue;
        case 0x3Fu:
          char v410 = 0;
          unsigned int v411 = 0;
          uint64_t v412 = 0;
          while (2)
          {
            uint64_t v413 = *v3;
            uint64_t v414 = *(void *)(a2 + v413);
            unint64_t v415 = v414 + 1;
            if (v414 == -1 || v415 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v416 = *(unsigned char *)(*(void *)(a2 + *v7) + v414);
              *(void *)(a2 + v413) = v415;
              v412 |= (unint64_t)(v416 & 0x7F) << v410;
              if (v416 < 0)
              {
                v410 += 7;
                BOOL v15 = v411++ >= 9;
                if (v15)
                {
                  uint64_t v417 = 0;
                  goto LABEL_666;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v417 = 0;
          }
          else {
            uint64_t v417 = v412;
          }
LABEL_666:
          [a1 setRawNowPlaying7Days:v417];
          continue;
        case 0x40u:
          char v418 = 0;
          unsigned int v419 = 0;
          uint64_t v420 = 0;
          while (2)
          {
            uint64_t v421 = *v3;
            uint64_t v422 = *(void *)(a2 + v421);
            unint64_t v423 = v422 + 1;
            if (v422 == -1 || v423 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v424 = *(unsigned char *)(*(void *)(a2 + *v7) + v422);
              *(void *)(a2 + v421) = v423;
              v420 |= (unint64_t)(v424 & 0x7F) << v418;
              if (v424 < 0)
              {
                v418 += 7;
                BOOL v15 = v419++ >= 9;
                if (v15)
                {
                  uint64_t v425 = 0;
                  goto LABEL_671;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v425 = 0;
          }
          else {
            uint64_t v425 = v420;
          }
LABEL_671:
          [a1 setRawNowPlaying28Days:v425];
          continue;
        case 0x41u:
          char v426 = 0;
          unsigned int v427 = 0;
          uint64_t v428 = 0;
          while (2)
          {
            uint64_t v429 = *v3;
            uint64_t v430 = *(void *)(a2 + v429);
            unint64_t v431 = v430 + 1;
            if (v430 == -1 || v431 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v432 = *(unsigned char *)(*(void *)(a2 + *v7) + v430);
              *(void *)(a2 + v429) = v431;
              v428 |= (unint64_t)(v432 & 0x7F) << v426;
              if (v432 < 0)
              {
                v426 += 7;
                BOOL v15 = v427++ >= 9;
                if (v15)
                {
                  uint64_t v433 = 0;
                  goto LABEL_676;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v433 = 0;
          }
          else {
            uint64_t v433 = v428;
          }
LABEL_676:
          [a1 setRawLastNowPlayingRecency:v433];
          continue;
        case 0x42u:
          char v434 = 0;
          unsigned int v435 = 0;
          uint64_t v436 = 0;
          while (2)
          {
            uint64_t v437 = *v3;
            uint64_t v438 = *(void *)(a2 + v437);
            unint64_t v439 = v438 + 1;
            if (v438 == -1 || v439 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v440 = *(unsigned char *)(*(void *)(a2 + *v7) + v438);
              *(void *)(a2 + v437) = v439;
              v436 |= (unint64_t)(v440 & 0x7F) << v434;
              if (v440 < 0)
              {
                v434 += 7;
                BOOL v15 = v435++ >= 9;
                if (v15)
                {
                  uint64_t v441 = 0;
                  goto LABEL_681;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v441 = 0;
          }
          else {
            uint64_t v441 = v436;
          }
LABEL_681:
          [a1 setCommonForegroundBundleApp:v441];
          continue;
        case 0x43u:
          char v442 = 0;
          unsigned int v443 = 0;
          uint64_t v444 = 0;
          while (2)
          {
            uint64_t v445 = *v3;
            uint64_t v446 = *(void *)(a2 + v445);
            unint64_t v447 = v446 + 1;
            if (v446 == -1 || v447 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v448 = *(unsigned char *)(*(void *)(a2 + *v7) + v446);
              *(void *)(a2 + v445) = v447;
              v444 |= (unint64_t)(v448 & 0x7F) << v442;
              if (v448 < 0)
              {
                v442 += 7;
                BOOL v15 = v443++ >= 9;
                if (v15)
                {
                  uint64_t v444 = 0;
                  goto LABEL_685;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v444 = 0;
          }
LABEL_685:
          [a1 setIsRawLastNowPlayingBoolean:v444 != 0];
          continue;
        case 0x44u:
          char v449 = 0;
          unsigned int v450 = 0;
          uint64_t v451 = 0;
          while (2)
          {
            uint64_t v452 = *v3;
            uint64_t v453 = *(void *)(a2 + v452);
            unint64_t v454 = v453 + 1;
            if (v453 == -1 || v454 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v455 = *(unsigned char *)(*(void *)(a2 + *v7) + v453);
              *(void *)(a2 + v452) = v454;
              v451 |= (unint64_t)(v455 & 0x7F) << v449;
              if (v455 < 0)
              {
                v449 += 7;
                BOOL v15 = v450++ >= 9;
                if (v15)
                {
                  uint64_t v451 = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v451 = 0;
          }
LABEL_689:
          [a1 setIsCommonForegroundApp:v451 != 0];
          continue;
        case 0x45u:
          char v456 = 0;
          unsigned int v457 = 0;
          uint64_t v458 = 0;
          break;
        case 0x46u:
          uint64_t v463 = *v3;
          unint64_t v464 = *(void *)(a2 + v463);
          if (v464 <= 0xFFFFFFFFFFFFFFF7 && v464 + 8 <= *(void *)(a2 + *v4))
          {
            double v465 = *(double *)(*(void *)(a2 + *v7) + v464);
            *(void *)(a2 + v463) = v464 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v465 = 0.0;
          }
          [a1 setUsageScoreMusicWithoutRadioRemote:v465];
          continue;
        case 0x47u:
          uint64_t v466 = *v3;
          unint64_t v467 = *(void *)(a2 + v466);
          if (v467 <= 0xFFFFFFFFFFFFFFF7 && v467 + 8 <= *(void *)(a2 + *v4))
          {
            double v468 = *(double *)(*(void *)(a2 + *v7) + v467);
            *(void *)(a2 + v466) = v467 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v468 = 0.0;
          }
          [a1 setUsageScoreBooksRemote:v468];
          continue;
        case 0x48u:
          uint64_t v469 = *v3;
          unint64_t v470 = *(void *)(a2 + v469);
          if (v470 <= 0xFFFFFFFFFFFFFFF7 && v470 + 8 <= *(void *)(a2 + *v4))
          {
            double v471 = *(double *)(*(void *)(a2 + *v7) + v470);
            *(void *)(a2 + v469) = v470 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v471 = 0.0;
          }
          [a1 setUsageScoreRadioRemote:v471];
          continue;
        case 0x49u:
          uint64_t v472 = *v3;
          unint64_t v473 = *(void *)(a2 + v472);
          if (v473 <= 0xFFFFFFFFFFFFFFF7 && v473 + 8 <= *(void *)(a2 + *v4))
          {
            double v474 = *(double *)(*(void *)(a2 + *v7) + v473);
            *(void *)(a2 + v472) = v473 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v474 = 0.0;
          }
          [a1 setUsageScorePodcastsRemote:v474];
          continue;
        case 0x4Au:
          uint64_t v475 = *v3;
          unint64_t v476 = *(void *)(a2 + v475);
          if (v476 <= 0xFFFFFFFFFFFFFFF7 && v476 + 8 <= *(void *)(a2 + *v4))
          {
            double v477 = *(double *)(*(void *)(a2 + *v7) + v476);
            *(void *)(a2 + v475) = v476 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v477 = 0.0;
          }
          [a1 setEntitySearchBundleScoreRemote:v477];
          continue;
        case 0x4Bu:
          uint64_t v478 = *v3;
          unint64_t v479 = *(void *)(a2 + v478);
          if (v479 <= 0xFFFFFFFFFFFFFFF7 && v479 + 8 <= *(void *)(a2 + *v4))
          {
            double v480 = *(double *)(*(void *)(a2 + *v7) + v479);
            *(void *)(a2 + v478) = v479 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v480 = 0.0;
          }
          [a1 setUsageScoreMusicRemote:v480];
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v459 = *v3;
        uint64_t v460 = *(void *)(a2 + v459);
        unint64_t v461 = v460 + 1;
        if (v460 == -1 || v461 > *(void *)(a2 + *v4)) {
          break;
        }
        char v462 = *(unsigned char *)(*(void *)(a2 + *v7) + v460);
        *(void *)(a2 + v459) = v461;
        v458 |= (unint64_t)(v462 & 0x7F) << v456;
        if ((v462 & 0x80) == 0) {
          goto LABEL_691;
        }
        v456 += 7;
        BOOL v15 = v457++ >= 9;
        if (v15)
        {
          uint64_t v458 = 0;
          goto LABEL_693;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_691:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v458 = 0;
      }
LABEL_693:
      [a1 setIsBoltEnabled:v458 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEMusicTrainingIndependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_221;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v26 = 0;
              goto LABEL_224;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_221:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_224:
          [a1 setClientDayOfWeek:v26];
          continue;
        case 2u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (2)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (v15)
                {
                  uint64_t v35 = 0;
                  goto LABEL_229;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
          else {
            uint64_t v35 = v30;
          }
LABEL_229:
          [a1 setRawClientHourOfDay:v35];
          continue;
        case 3u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (2)
          {
            uint64_t v39 = *v3;
            uint64_t v40 = *(void *)(a2 + v39);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                BOOL v15 = v37++ >= 9;
                if (v15)
                {
                  uint64_t v38 = 0;
                  goto LABEL_233;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_233:
          [a1 setIsMediaAlbumPresent:v38 != 0];
          continue;
        case 4u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (v15)
                {
                  uint64_t v45 = 0;
                  goto LABEL_237;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
LABEL_237:
          [a1 setIsMediaArtistPresent:v45 != 0];
          continue;
        case 5u:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          while (2)
          {
            uint64_t v53 = *v3;
            uint64_t v54 = *(void *)(a2 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
              *(void *)(a2 + v53) = v55;
              v52 |= (unint64_t)(v56 & 0x7F) << v50;
              if (v56 < 0)
              {
                v50 += 7;
                BOOL v15 = v51++ >= 9;
                if (v15)
                {
                  uint64_t v52 = 0;
                  goto LABEL_241;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
LABEL_241:
          [a1 setIsMediaGenrePresent:v52 != 0];
          continue;
        case 6u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          while (2)
          {
            uint64_t v60 = *v3;
            uint64_t v61 = *(void *)(a2 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
              *(void *)(a2 + v60) = v62;
              v59 |= (unint64_t)(v63 & 0x7F) << v57;
              if (v63 < 0)
              {
                v57 += 7;
                BOOL v15 = v58++ >= 9;
                if (v15)
                {
                  uint64_t v59 = 0;
                  goto LABEL_245;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
LABEL_245:
          [a1 setIsMediaMoodPresent:v59 != 0];
          continue;
        case 7u:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          while (2)
          {
            uint64_t v67 = *v3;
            uint64_t v68 = *(void *)(a2 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
              *(void *)(a2 + v67) = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                BOOL v15 = v65++ >= 9;
                if (v15)
                {
                  uint64_t v66 = 0;
                  goto LABEL_249;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
LABEL_249:
          [a1 setIsMediaNamePresent:v66 != 0];
          continue;
        case 8u:
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          while (2)
          {
            uint64_t v74 = *v3;
            uint64_t v75 = *(void *)(a2 + v74);
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v75);
              *(void *)(a2 + v74) = v76;
              v73 |= (unint64_t)(v77 & 0x7F) << v71;
              if (v77 < 0)
              {
                v71 += 7;
                BOOL v15 = v72++ >= 9;
                if (v15)
                {
                  uint64_t v73 = 0;
                  goto LABEL_253;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v73 = 0;
          }
LABEL_253:
          [a1 setIsMediaReleaseDatePresent:v73 != 0];
          continue;
        case 9u:
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v80 = 0;
          while (2)
          {
            uint64_t v81 = *v3;
            uint64_t v82 = *(void *)(a2 + v81);
            unint64_t v83 = v82 + 1;
            if (v82 == -1 || v83 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
              *(void *)(a2 + v81) = v83;
              v80 |= (unint64_t)(v84 & 0x7F) << v78;
              if (v84 < 0)
              {
                v78 += 7;
                BOOL v15 = v79++ >= 9;
                if (v15)
                {
                  uint64_t v85 = 0;
                  goto LABEL_258;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v85 = 0;
          }
          else {
            uint64_t v85 = v80;
          }
LABEL_258:
          [a1 setNowPlayingLastBundleRecencyS:v85];
          continue;
        case 0xAu:
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v88 = 0;
          while (2)
          {
            uint64_t v89 = *v3;
            uint64_t v90 = *(void *)(a2 + v89);
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
              *(void *)(a2 + v89) = v91;
              v88 |= (unint64_t)(v92 & 0x7F) << v86;
              if (v92 < 0)
              {
                v86 += 7;
                BOOL v15 = v87++ >= 9;
                if (v15)
                {
                  uint64_t v93 = 0;
                  goto LABEL_263;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v93 = 0;
          }
          else {
            uint64_t v93 = v88;
          }
LABEL_263:
          [a1 setRawLanguage:v93];
          continue;
        case 0xBu:
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v96 = 0;
          while (2)
          {
            uint64_t v97 = *v3;
            uint64_t v98 = *(void *)(a2 + v97);
            unint64_t v99 = v98 + 1;
            if (v98 == -1 || v99 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v98);
              *(void *)(a2 + v97) = v99;
              v96 |= (unint64_t)(v100 & 0x7F) << v94;
              if (v100 < 0)
              {
                v94 += 7;
                BOOL v15 = v95++ >= 9;
                if (v15)
                {
                  uint64_t v101 = 0;
                  goto LABEL_268;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v101 = 0;
          }
          else {
            uint64_t v101 = v96;
          }
LABEL_268:
          [a1 setRawLocale:v101];
          continue;
        case 0xCu:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          while (2)
          {
            uint64_t v105 = *v3;
            uint64_t v106 = *(void *)(a2 + v105);
            unint64_t v107 = v106 + 1;
            if (v106 == -1 || v107 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
              *(void *)(a2 + v105) = v107;
              v104 |= (unint64_t)(v108 & 0x7F) << v102;
              if (v108 < 0)
              {
                v102 += 7;
                BOOL v15 = v103++ >= 9;
                if (v15)
                {
                  uint64_t v109 = 0;
                  goto LABEL_273;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v109 = 0;
          }
          else {
            uint64_t v109 = v104;
          }
LABEL_273:
          [a1 setRawRegion:v109];
          continue;
        case 0xDu:
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v112 = 0;
          while (2)
          {
            uint64_t v113 = *v3;
            uint64_t v114 = *(void *)(a2 + v113);
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v116 = *(unsigned char *)(*(void *)(a2 + *v7) + v114);
              *(void *)(a2 + v113) = v115;
              v112 |= (unint64_t)(v116 & 0x7F) << v110;
              if (v116 < 0)
              {
                v110 += 7;
                BOOL v15 = v111++ >= 9;
                if (v15)
                {
                  uint64_t v112 = 0;
                  goto LABEL_277;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v112 = 0;
          }
LABEL_277:
          [a1 setIsClientDaylight:v112 != 0];
          continue;
        case 0xEu:
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v119 = 0;
          while (2)
          {
            uint64_t v120 = *v3;
            uint64_t v121 = *(void *)(a2 + v120);
            unint64_t v122 = v121 + 1;
            if (v121 == -1 || v122 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v121);
              *(void *)(a2 + v120) = v122;
              v119 |= (unint64_t)(v123 & 0x7F) << v117;
              if (v123 < 0)
              {
                v117 += 7;
                BOOL v15 = v118++ >= 9;
                if (v15)
                {
                  uint64_t v119 = 0;
                  goto LABEL_281;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v119 = 0;
          }
LABEL_281:
          [a1 setIsClientNavigating:v119 != 0];
          continue;
        case 0xFu:
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v126 = 0;
          while (2)
          {
            uint64_t v127 = *v3;
            uint64_t v128 = *(void *)(a2 + v127);
            unint64_t v129 = v128 + 1;
            if (v128 == -1 || v129 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v130 = *(unsigned char *)(*(void *)(a2 + *v7) + v128);
              *(void *)(a2 + v127) = v129;
              v126 |= (unint64_t)(v130 & 0x7F) << v124;
              if (v130 < 0)
              {
                v124 += 7;
                BOOL v15 = v125++ >= 9;
                if (v15)
                {
                  uint64_t v126 = 0;
                  goto LABEL_285;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v126 = 0;
          }
LABEL_285:
          [a1 setIsClientWorkout:v126 != 0];
          continue;
        case 0x10u:
          char v131 = 0;
          unsigned int v132 = 0;
          uint64_t v133 = 0;
          while (2)
          {
            uint64_t v134 = *v3;
            uint64_t v135 = *(void *)(a2 + v134);
            unint64_t v136 = v135 + 1;
            if (v135 == -1 || v136 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v137 = *(unsigned char *)(*(void *)(a2 + *v7) + v135);
              *(void *)(a2 + v134) = v136;
              v133 |= (unint64_t)(v137 & 0x7F) << v131;
              if (v137 < 0)
              {
                v131 += 7;
                BOOL v15 = v132++ >= 9;
                if (v15)
                {
                  uint64_t v138 = 0;
                  goto LABEL_290;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v138 = 0;
          }
          else {
            uint64_t v138 = v133;
          }
LABEL_290:
          [a1 setMediaType:v138];
          continue;
        case 0x11u:
          char v139 = 0;
          unsigned int v140 = 0;
          uint64_t v141 = 0;
          while (2)
          {
            uint64_t v142 = *v3;
            uint64_t v143 = *(void *)(a2 + v142);
            unint64_t v144 = v143 + 1;
            if (v143 == -1 || v144 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v145 = *(unsigned char *)(*(void *)(a2 + *v7) + v143);
              *(void *)(a2 + v142) = v144;
              v141 |= (unint64_t)(v145 & 0x7F) << v139;
              if (v145 < 0)
              {
                v139 += 7;
                BOOL v15 = v140++ >= 9;
                if (v15)
                {
                  uint64_t v146 = 0;
                  goto LABEL_295;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v146 = 0;
          }
          else {
            uint64_t v146 = v141;
          }
LABEL_295:
          [a1 setNowPlayingState:v146];
          continue;
        case 0x12u:
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v149 = 0;
          while (2)
          {
            uint64_t v150 = *v3;
            uint64_t v151 = *(void *)(a2 + v150);
            unint64_t v152 = v151 + 1;
            if (v151 == -1 || v152 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v151);
              *(void *)(a2 + v150) = v152;
              v149 |= (unint64_t)(v153 & 0x7F) << v147;
              if (v153 < 0)
              {
                v147 += 7;
                BOOL v15 = v148++ >= 9;
                if (v15)
                {
                  uint64_t v149 = 0;
                  goto LABEL_299;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v149 = 0;
          }
LABEL_299:
          [a1 setIsPireneRequest:v149 != 0];
          continue;
        case 0x13u:
          uint64_t v154 = *v3;
          unint64_t v155 = *(void *)(a2 + v154);
          if (v155 <= 0xFFFFFFFFFFFFFFF7 && v155 + 8 <= *(void *)(a2 + *v4))
          {
            double v156 = *(double *)(*(void *)(a2 + *v7) + v155);
            *(void *)(a2 + v154) = v155 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v156 = 0.0;
          }
          [a1 setForegroundBundleRecencyS:v156];
          continue;
        case 0x14u:
          char v157 = 0;
          unsigned int v158 = 0;
          uint64_t v159 = 0;
          while (2)
          {
            uint64_t v160 = *v3;
            uint64_t v161 = *(void *)(a2 + v160);
            unint64_t v162 = v161 + 1;
            if (v161 == -1 || v162 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v163 = *(unsigned char *)(*(void *)(a2 + *v7) + v161);
              *(void *)(a2 + v160) = v162;
              v159 |= (unint64_t)(v163 & 0x7F) << v157;
              if (v163 < 0)
              {
                v157 += 7;
                BOOL v15 = v158++ >= 9;
                if (v15)
                {
                  uint64_t v164 = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v164 = 0;
          }
          else {
            uint64_t v164 = v159;
          }
LABEL_304:
          [a1 setMediaParsecCategory:v164];
          continue;
        case 0x15u:
          char v165 = 0;
          unsigned int v166 = 0;
          uint64_t v167 = 0;
          while (2)
          {
            uint64_t v168 = *v3;
            uint64_t v169 = *(void *)(a2 + v168);
            unint64_t v170 = v169 + 1;
            if (v169 == -1 || v170 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v171 = *(unsigned char *)(*(void *)(a2 + *v7) + v169);
              *(void *)(a2 + v168) = v170;
              v167 |= (unint64_t)(v171 & 0x7F) << v165;
              if (v171 < 0)
              {
                v165 += 7;
                BOOL v15 = v166++ >= 9;
                if (v15)
                {
                  uint64_t v172 = 0;
                  goto LABEL_309;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v172 = 0;
          }
          else {
            uint64_t v172 = v167;
          }
LABEL_309:
          [a1 setSirikitResponseCode:v172];
          continue;
        case 0x16u:
          char v173 = 0;
          unsigned int v174 = 0;
          uint64_t v175 = 0;
          while (2)
          {
            uint64_t v176 = *v3;
            uint64_t v177 = *(void *)(a2 + v176);
            unint64_t v178 = v177 + 1;
            if (v177 == -1 || v178 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v179 = *(unsigned char *)(*(void *)(a2 + *v7) + v177);
              *(void *)(a2 + v176) = v178;
              v175 |= (unint64_t)(v179 & 0x7F) << v173;
              if (v179 < 0)
              {
                v173 += 7;
                BOOL v15 = v174++ >= 9;
                if (v15)
                {
                  uint64_t v180 = 0;
                  goto LABEL_314;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v180 = 0;
          }
          else {
            uint64_t v180 = v175;
          }
LABEL_314:
          [a1 setAppSelectionUses:v180];
          continue;
        case 0x17u:
          char v181 = 0;
          unsigned int v182 = 0;
          uint64_t v183 = 0;
          while (2)
          {
            uint64_t v184 = *v3;
            uint64_t v185 = *(void *)(a2 + v184);
            unint64_t v186 = v185 + 1;
            if (v185 == -1 || v186 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v187 = *(unsigned char *)(*(void *)(a2 + *v7) + v185);
              *(void *)(a2 + v184) = v186;
              v183 |= (unint64_t)(v187 & 0x7F) << v181;
              if (v187 < 0)
              {
                v181 += 7;
                BOOL v15 = v182++ >= 9;
                if (v15)
                {
                  uint64_t v188 = 0;
                  goto LABEL_319;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v188 = 0;
          }
          else {
            uint64_t v188 = v183;
          }
LABEL_319:
          [a1 setModelVersion:v188];
          continue;
        case 0x18u:
          char v189 = 0;
          unsigned int v190 = 0;
          uint64_t v191 = 0;
          while (2)
          {
            uint64_t v192 = *v3;
            uint64_t v193 = *(void *)(a2 + v192);
            unint64_t v194 = v193 + 1;
            if (v193 == -1 || v194 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v195 = *(unsigned char *)(*(void *)(a2 + *v7) + v193);
              *(void *)(a2 + v192) = v194;
              v191 |= (unint64_t)(v195 & 0x7F) << v189;
              if (v195 < 0)
              {
                v189 += 7;
                BOOL v15 = v190++ >= 9;
                if (v15)
                {
                  uint64_t v196 = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v196 = 0;
          }
          else {
            uint64_t v196 = v191;
          }
LABEL_324:
          [a1 setResolutionType:v196];
          continue;
        case 0x19u:
          char v197 = 0;
          unsigned int v198 = 0;
          uint64_t v199 = 0;
          while (2)
          {
            uint64_t v200 = *v3;
            uint64_t v201 = *(void *)(a2 + v200);
            unint64_t v202 = v201 + 1;
            if (v201 == -1 || v202 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v203 = *(unsigned char *)(*(void *)(a2 + *v7) + v201);
              *(void *)(a2 + v200) = v202;
              v199 |= (unint64_t)(v203 & 0x7F) << v197;
              if (v203 < 0)
              {
                v197 += 7;
                BOOL v15 = v198++ >= 9;
                if (v15)
                {
                  uint64_t v204 = 0;
                  goto LABEL_329;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v204 = 0;
          }
          else {
            uint64_t v204 = v199;
          }
LABEL_329:
          [a1 setRawNowPlayingState:v204];
          continue;
        case 0x1Au:
          char v205 = 0;
          unsigned int v206 = 0;
          uint64_t v207 = 0;
          while (2)
          {
            uint64_t v208 = *v3;
            uint64_t v209 = *(void *)(a2 + v208);
            unint64_t v210 = v209 + 1;
            if (v209 == -1 || v210 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v211 = *(unsigned char *)(*(void *)(a2 + *v7) + v209);
              *(void *)(a2 + v208) = v210;
              v207 |= (unint64_t)(v211 & 0x7F) << v205;
              if (v211 < 0)
              {
                v205 += 7;
                BOOL v15 = v206++ >= 9;
                if (v15)
                {
                  uint64_t v212 = 0;
                  goto LABEL_334;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v212 = 0;
          }
          else {
            uint64_t v212 = v207;
          }
LABEL_334:
          [a1 setCommonForegroundAppRecency:v212];
          continue;
        case 0x1Bu:
          char v213 = 0;
          unsigned int v214 = 0;
          uint64_t v215 = 0;
          while (2)
          {
            uint64_t v216 = *v3;
            uint64_t v217 = *(void *)(a2 + v216);
            unint64_t v218 = v217 + 1;
            if (v217 == -1 || v218 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v219 = *(unsigned char *)(*(void *)(a2 + *v7) + v217);
              *(void *)(a2 + v216) = v218;
              v215 |= (unint64_t)(v219 & 0x7F) << v213;
              if (v219 < 0)
              {
                v213 += 7;
                BOOL v15 = v214++ >= 9;
                if (v15)
                {
                  uint64_t v215 = 0;
                  goto LABEL_338;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v215 = 0;
          }
LABEL_338:
          [a1 setIsContentFree:v215 != 0];
          continue;
        case 0x1Cu:
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v222 = 0;
          while (2)
          {
            uint64_t v223 = *v3;
            uint64_t v224 = *(void *)(a2 + v223);
            unint64_t v225 = v224 + 1;
            if (v224 == -1 || v225 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v226 = *(unsigned char *)(*(void *)(a2 + *v7) + v224);
              *(void *)(a2 + v223) = v225;
              v222 |= (unint64_t)(v226 & 0x7F) << v220;
              if (v226 < 0)
              {
                v220 += 7;
                BOOL v15 = v221++ >= 9;
                if (v15)
                {
                  uint64_t v222 = 0;
                  goto LABEL_342;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v222 = 0;
          }
LABEL_342:
          [a1 setIsUserRecognized:v222 != 0];
          continue;
        case 0x1Du:
          char v227 = 0;
          unsigned int v228 = 0;
          uint64_t v229 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v230 = *v3;
        uint64_t v231 = *(void *)(a2 + v230);
        unint64_t v232 = v231 + 1;
        if (v231 == -1 || v232 > *(void *)(a2 + *v4)) {
          break;
        }
        char v233 = *(unsigned char *)(*(void *)(a2 + *v7) + v231);
        *(void *)(a2 + v230) = v232;
        v229 |= (unint64_t)(v233 & 0x7F) << v227;
        if ((v233 & 0x80) == 0) {
          goto LABEL_344;
        }
        v227 += 7;
        BOOL v15 = v228++ >= 9;
        if (v15)
        {
          uint64_t v234 = 0;
          goto LABEL_347;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_344:
      uint64_t v234 = *(unsigned char *)(a2 + *v5) ? 0 : v229;
LABEL_347:
      [a1 setServerSearchResultsMediaType:v234];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEPotentialRetryContactInteractionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_71;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_73;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_71:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_73:
          [a1 setIsExactMatchPriorSiriContactGivenName:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v26 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
LABEL_77:
          [a1 setIsExactMatchPriorSiriContactFamilyName:v26 != 0];
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
LABEL_81:
          [a1 setIsExactMatchPriorSiriContactDisplayName:v32 != 0];
          continue;
        case 4u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (2)
          {
            uint64_t v39 = *v3;
            unint64_t v40 = *(void *)(a2 + v39);
            if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
              *(void *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
LABEL_85:
          [a1 setIsExactMatchPriorSiriContactId:v38 != 0];
          continue;
        case 5u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          while (2)
          {
            uint64_t v45 = *v3;
            unint64_t v46 = *(void *)(a2 + v45);
            if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
              *(void *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                BOOL v14 = v43++ >= 9;
                if (v14)
                {
                  uint64_t v44 = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v44 = 0;
          }
LABEL_89:
          [a1 setIsExactMatchPriorSiriContactHandleValue:v44 != 0];
          continue;
        case 6u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (2)
          {
            uint64_t v51 = *v3;
            unint64_t v52 = *(void *)(a2 + v51);
            if (v52 == -1 || v52 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v52 + 1;
              v50 |= (unint64_t)(v53 & 0x7F) << v48;
              if (v53 < 0)
              {
                v48 += 7;
                BOOL v14 = v49++ >= 9;
                if (v14)
                {
                  uint64_t v54 = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v54 = 0;
          }
          else {
            uint64_t v54 = v50;
          }
LABEL_94:
          [a1 setInteractionDurationInSecBucket:v54];
          continue;
        case 7u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v58 = *v3;
        unint64_t v59 = *(void *)(a2 + v58);
        if (v59 == -1 || v59 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
        *(void *)(a2 + v58) = v59 + 1;
        v57 |= (unint64_t)(v60 & 0x7F) << v55;
        if ((v60 & 0x80) == 0) {
          goto LABEL_96;
        }
        v55 += 7;
        BOOL v14 = v56++ >= 9;
        if (v14)
        {
          uint64_t v61 = 0;
          goto LABEL_99;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_96:
      uint64_t v61 = *(unsigned char *)(a2 + *v5) ? 0 : v57;
LABEL_99:
      [a1 setPotentialRetryIntervalInSecBucket:v61];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEPrivatizedHistoryStatsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setRecency:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 addFrequencies:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEPromptContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v25 = objc_alloc_init(INFERENCESchemaINFERENCEDisambiguationPromptContext);
        if (!PBReaderPlaceMark() || !INFERENCESchemaINFERENCEDisambiguationPromptContextReadFrom(v25, a2))
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDisambiguationPromptContext:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setTag:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        unsigned int v25 = objc_alloc_init(INFERENCESchemaINFERENCEConfirmationPromptContext);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEConfirmationPromptContextReadFrom(v25, a2) & 1) == 0)
        {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConfirmationPromptContext:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEQueryUserPromptSelectedInfoGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalResolutionContextId:", v17, 0, 0);
        goto LABEL_42;
      case 2u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQueryId:", v17, 0, 0);
LABEL_42:

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_47:
        [a1 setDisambiguationResolution:v25];
        goto LABEL_53;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_52:
        [a1 setConfirmationResolution:v32];
        goto LABEL_53;
      case 5u:
        PBReaderReadString();
        unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setAnonymizedSelectedEntityIdentifier:v17];
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

uint64_t INFERENCESchemaINFERENCERequestMatchSignalSetReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_113;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_116;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_113:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_116:
          [a1 setNumPrimaryTokens:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_120:
          [a1 setAreAllQueryTokensInContact:v27 != 0];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_124:
          [a1 setAreAllPrimaryContactTokensInQuery:v33 != 0];
          continue;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_128;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_128:
          [a1 setIsGivenNameMatch:v39 != 0];
          continue;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            unint64_t v47 = *(void *)(a2 + v46);
            if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v47 + 1;
              v45 |= (unint64_t)(v48 & 0x7F) << v43;
              if (v48 < 0)
              {
                v43 += 7;
                BOOL v14 = v44++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_132;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
LABEL_132:
          [a1 setIsMiddleNameMatch:v45 != 0];
          continue;
        case 6u:
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          while (2)
          {
            uint64_t v52 = *v3;
            unint64_t v53 = *(void *)(a2 + v52);
            if (v53 == -1 || v53 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
              *(void *)(a2 + v52) = v53 + 1;
              v51 |= (unint64_t)(v54 & 0x7F) << v49;
              if (v54 < 0)
              {
                v49 += 7;
                BOOL v14 = v50++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_136;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
LABEL_136:
          [a1 setIsFamilyNameMatch:v51 != 0];
          continue;
        case 7u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          while (2)
          {
            uint64_t v58 = *v3;
            unint64_t v59 = *(void *)(a2 + v58);
            if (v59 == -1 || v59 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v60 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
              *(void *)(a2 + v58) = v59 + 1;
              v57 |= (unint64_t)(v60 & 0x7F) << v55;
              if (v60 < 0)
              {
                v55 += 7;
                BOOL v14 = v56++ >= 9;
                if (v14)
                {
                  uint64_t v57 = 0;
                  goto LABEL_140;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v57 = 0;
          }
LABEL_140:
          [a1 setIsOrganizationNameMatch:v57 != 0];
          continue;
        case 8u:
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          while (2)
          {
            uint64_t v64 = *v3;
            unint64_t v65 = *(void *)(a2 + v64);
            if (v65 == -1 || v65 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
              *(void *)(a2 + v64) = v65 + 1;
              v63 |= (unint64_t)(v66 & 0x7F) << v61;
              if (v66 < 0)
              {
                v61 += 7;
                BOOL v14 = v62++ >= 9;
                if (v14)
                {
                  uint64_t v63 = 0;
                  goto LABEL_144;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v63 = 0;
          }
LABEL_144:
          [a1 setIsWeakOrganizationMatch:v63 != 0];
          continue;
        case 9u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  uint64_t v69 = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v69 = 0;
          }
LABEL_148:
          [a1 setIsNicknameMatch:v69 != 0];
          continue;
        case 0xAu:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v75 = 0;
          while (2)
          {
            uint64_t v76 = *v3;
            unint64_t v77 = *(void *)(a2 + v76);
            if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v77 + 1;
              v75 |= (unint64_t)(v78 & 0x7F) << v73;
              if (v78 < 0)
              {
                v73 += 7;
                BOOL v14 = v74++ >= 9;
                if (v14)
                {
                  uint64_t v75 = 0;
                  goto LABEL_152;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v75 = 0;
          }
LABEL_152:
          [a1 setIsNamePrefixMatch:v75 != 0];
          continue;
        case 0xBu:
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v81 = 0;
          while (2)
          {
            uint64_t v82 = *v3;
            unint64_t v83 = *(void *)(a2 + v82);
            if (v83 == -1 || v83 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
              *(void *)(a2 + v82) = v83 + 1;
              v81 |= (unint64_t)(v84 & 0x7F) << v79;
              if (v84 < 0)
              {
                v79 += 7;
                BOOL v14 = v80++ >= 9;
                if (v14)
                {
                  uint64_t v81 = 0;
                  goto LABEL_156;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v81 = 0;
          }
LABEL_156:
          [a1 setIsNameSuffixMatch:v81 != 0];
          continue;
        case 0xCu:
          char v85 = 0;
          unsigned int v86 = 0;
          uint64_t v87 = 0;
          while (2)
          {
            uint64_t v88 = *v3;
            unint64_t v89 = *(void *)(a2 + v88);
            if (v89 == -1 || v89 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v90 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
              *(void *)(a2 + v88) = v89 + 1;
              v87 |= (unint64_t)(v90 & 0x7F) << v85;
              if (v90 < 0)
              {
                v85 += 7;
                BOOL v14 = v86++ >= 9;
                if (v14)
                {
                  uint64_t v87 = 0;
                  goto LABEL_160;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v87 = 0;
          }
LABEL_160:
          [a1 setIsHandleQueryMatch:v87 != 0];
          continue;
        case 0xDu:
          char v91 = 0;
          unsigned int v92 = 0;
          uint64_t v93 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v94 = *v3;
        unint64_t v95 = *(void *)(a2 + v94);
        if (v95 == -1 || v95 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v95);
        *(void *)(a2 + v94) = v95 + 1;
        v93 |= (unint64_t)(v96 & 0x7F) << v91;
        if ((v96 & 0x80) == 0) {
          goto LABEL_162;
        }
        v91 += 7;
        BOOL v14 = v92++ >= 9;
        if (v14)
        {
          uint64_t v93 = 0;
          goto LABEL_164;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_162:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v93 = 0;
      }
LABEL_164:
      [a1 setIsHandleQueryLabelNameMatch:v93 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEResolutionQueryInfoGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalResolutionContextId:", v17, 0, 0);
        goto LABEL_44;
      case 2u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQueryId:", v17, 0, 0);
LABEL_44:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_49:
        [a1 setResolutionState:v25];
        goto LABEL_55;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_54:
        [a1 setForcePromptType:v32];
        goto LABEL_55;
      case 5u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setRecommenderModelVersion:v17];
        goto LABEL_44;
      case 6u:
        PBReaderReadString();
        char v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addAnonymizedRecommendedEntityIdentifier:v17];
        }
        goto LABEL_44;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

BOOL INFERENCESchemaINFERENCEResolutionRequestContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 100)
      {
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEResolutionRequestEnded);
          if (!PBReaderPlaceMark()
            || (INFERENCESchemaINFERENCEResolutionRequestEndedReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEnded:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEResolutionRequestFailed);
          if (!PBReaderPlaceMark()
            || (INFERENCESchemaINFERENCEResolutionRequestFailedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailed:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(SISchemaUUID);
          if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setContextId:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 100)
        {
          unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEResolutionRequestStarted);
          if (!PBReaderPlaceMark()
            || (INFERENCESchemaINFERENCEResolutionRequestStartedReadFrom(v18, a2) & 1) == 0)
          {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEResolutionRequestEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEResolutionRequestFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEResolutionRequestStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v24 = objc_alloc_init(INFERENCESchemaINFERENCEResolverConfig);
        if (!PBReaderPlaceMark() || (INFERENCESchemaINFERENCEResolverConfigReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverConfig:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setSlotType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEResolverConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCEContactResolverConfig);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEContactResolverConfigReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactConfig:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCESimpleTaskInfoGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOriginalResolutionContextId:", v17, 0, 0);
        goto LABEL_55;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_60:
        [a1 setTaskSuccessType:v25];
        goto LABEL_73;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_64:
        [a1 setIsSuccess:v28 != 0];
        goto LABEL_73;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_68:
        [a1 setIsExecuted:v34 != 0];
        goto LABEL_73;
      case 5u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v40 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v40 = 0;
        }
LABEL_72:
        [a1 setIsSuccessfulDirectExecution:v40 != 0];
        goto LABEL_73;
      case 6u:
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCETaskSpecificInfo);
        if PBReaderPlaceMark() && (INFERENCESchemaINFERENCETaskSpecificInfoReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTaskSpecificInfo:", v17, 0, 0);
LABEL_55:

LABEL_73:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_75:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_73;
    }
  }
}

uint64_t INFERENCESchemaINFERENCESpeechAlternativeRanksReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_64;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_66;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_66:
          [a1 setIsError:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v30 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
          else {
            uint64_t v30 = v26;
          }
LABEL_71:
          [a1 setVersion:v30];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v33;
          }
LABEL_76:
          [a1 setGivenNameRank:v37];
          continue;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  uint64_t v44 = 0;
                  goto LABEL_81;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v44 = 0;
          }
          else {
            uint64_t v44 = v40;
          }
LABEL_81:
          [a1 setMiddleNameRank:v44];
          continue;
        case 5u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v14 = v46++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = v47;
          }
LABEL_86:
          [a1 setFamilyNameRank:v51];
          continue;
        case 6u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v55 = *v3;
        unint64_t v56 = *(void *)(a2 + v55);
        if (v56 == -1 || v56 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
        *(void *)(a2 + v55) = v56 + 1;
        v54 |= (unint64_t)(v57 & 0x7F) << v52;
        if ((v57 & 0x80) == 0) {
          goto LABEL_88;
        }
        v52 += 7;
        BOOL v14 = v53++ >= 9;
        if (v14)
        {
          uint64_t v58 = 0;
          goto LABEL_91;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_88:
      uint64_t v58 = *(unsigned char *)(a2 + *v5) ? 0 : v54;
LABEL_91:
      [a1 setFullNameRank:v58];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCETaskSpecificInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCELongRunningTaskInfo);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCELongRunningTaskInfoReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLongRunningTaskInfo:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCETrialEnrollmentReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = PBReaderReadString();
          [a1 setExperimentId:v17];
          goto LABEL_31;
        case 2u:
          char v17 = PBReaderReadString();
          [a1 setTreatmentId:v17];
          goto LABEL_31;
        case 3u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          break;
        case 4u:
          char v17 = PBReaderReadString();
          [a1 setRolloutId:v17];
LABEL_31:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
        *(void *)(a2 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0) {
          goto LABEL_33;
        }
        v19 += 7;
        BOOL v14 = v20++ >= 9;
        if (v14)
        {
          uint64_t v25 = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_36:
      [a1 setDeploymentId:v25];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppDependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_351;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_354;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_351:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_354:
          [a1 setRelativeAppUsage1Day:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_359;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_359:
          [a1 setRelativeAppUsage7Day:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_364;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_364:
          [a1 setRelativeAppUsage14Day:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_369;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_369:
          [a1 setEntityAbsoluteCount2Min:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_374;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_374:
          [a1 setEntityAbsoluteCount10Min:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_379;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_379:
          [a1 setEntityAbsoluteCount1Hr:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_384;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
          else {
            uint64_t v66 = v62;
          }
LABEL_384:
          [a1 setEntityAbsoluteCount6Hr:v66];
          continue;
        case 8u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  uint64_t v73 = 0;
                  goto LABEL_389;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v73 = 0;
          }
          else {
            uint64_t v73 = v69;
          }
LABEL_389:
          [a1 setEntityAbsoluteCount1Day:v73];
          continue;
        case 9u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          while (2)
          {
            uint64_t v77 = *v3;
            unint64_t v78 = *(void *)(a2 + v77);
            if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
              *(void *)(a2 + v77) = v78 + 1;
              v76 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                BOOL v14 = v75++ >= 9;
                if (v14)
                {
                  uint64_t v80 = 0;
                  goto LABEL_394;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v80 = 0;
          }
          else {
            uint64_t v80 = v76;
          }
LABEL_394:
          [a1 setEntityAbsoluteCount7Day:v80];
          continue;
        case 0xAu:
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          while (2)
          {
            uint64_t v84 = *v3;
            unint64_t v85 = *(void *)(a2 + v84);
            if (v85 == -1 || v85 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
              *(void *)(a2 + v84) = v85 + 1;
              v83 |= (unint64_t)(v86 & 0x7F) << v81;
              if (v86 < 0)
              {
                v81 += 7;
                BOOL v14 = v82++ >= 9;
                if (v14)
                {
                  uint64_t v87 = 0;
                  goto LABEL_399;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v87 = 0;
          }
          else {
            uint64_t v87 = v83;
          }
LABEL_399:
          [a1 setEntityAbsoluteCount14Day:v87];
          continue;
        case 0xBu:
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v90 = 0;
          while (2)
          {
            uint64_t v91 = *v3;
            unint64_t v92 = *(void *)(a2 + v91);
            if (v92 == -1 || v92 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
              *(void *)(a2 + v91) = v92 + 1;
              v90 |= (unint64_t)(v93 & 0x7F) << v88;
              if (v93 < 0)
              {
                v88 += 7;
                BOOL v14 = v89++ >= 9;
                if (v14)
                {
                  uint64_t v94 = 0;
                  goto LABEL_404;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v94 = 0;
          }
          else {
            uint64_t v94 = v90;
          }
LABEL_404:
          [a1 setEntityRecency:v94];
          continue;
        case 0xCu:
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v97 = 0;
          while (2)
          {
            uint64_t v98 = *v3;
            unint64_t v99 = *(void *)(a2 + v98);
            if (v99 == -1 || v99 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
              *(void *)(a2 + v98) = v99 + 1;
              v97 |= (unint64_t)(v100 & 0x7F) << v95;
              if (v100 < 0)
              {
                v95 += 7;
                BOOL v14 = v96++ >= 9;
                if (v14)
                {
                  uint64_t v101 = 0;
                  goto LABEL_409;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v101 = 0;
          }
          else {
            uint64_t v101 = v97;
          }
LABEL_409:
          [a1 setMediaUserContextNumberOfLibraryItems:v101];
          continue;
        case 0xDu:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          while (2)
          {
            uint64_t v105 = *v3;
            unint64_t v106 = *(void *)(a2 + v105);
            if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
              *(void *)(a2 + v105) = v106 + 1;
              v104 |= (unint64_t)(v107 & 0x7F) << v102;
              if (v107 < 0)
              {
                v102 += 7;
                BOOL v14 = v103++ >= 9;
                if (v14)
                {
                  uint64_t v108 = 0;
                  goto LABEL_414;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v108 = 0;
          }
          else {
            uint64_t v108 = v104;
          }
LABEL_414:
          [a1 setMediaUserContextSubscriptionStatus:v108];
          continue;
        case 0xEu:
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v111 = 0;
          while (2)
          {
            uint64_t v112 = *v3;
            unint64_t v113 = *(void *)(a2 + v112);
            if (v113 == -1 || v113 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
              *(void *)(a2 + v112) = v113 + 1;
              v111 |= (unint64_t)(v114 & 0x7F) << v109;
              if (v114 < 0)
              {
                v109 += 7;
                BOOL v14 = v110++ >= 9;
                if (v14)
                {
                  uint64_t v111 = 0;
                  goto LABEL_418;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v111 = 0;
          }
LABEL_418:
          [a1 setIsLastForegroundApp:v111 != 0];
          continue;
        case 0xFu:
          char v115 = 0;
          unsigned int v116 = 0;
          uint64_t v117 = 0;
          while (2)
          {
            uint64_t v118 = *v3;
            unint64_t v119 = *(void *)(a2 + v118);
            if (v119 == -1 || v119 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
              *(void *)(a2 + v118) = v119 + 1;
              v117 |= (unint64_t)(v120 & 0x7F) << v115;
              if (v120 < 0)
              {
                v115 += 7;
                BOOL v14 = v116++ >= 9;
                if (v14)
                {
                  uint64_t v117 = 0;
                  goto LABEL_422;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v117 = 0;
          }
LABEL_422:
          [a1 setIsLastNowPlayingApp:v117 != 0];
          continue;
        case 0x10u:
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v123 = 0;
          while (2)
          {
            uint64_t v124 = *v3;
            unint64_t v125 = *(void *)(a2 + v124);
            if (v125 == -1 || v125 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v126 = *(unsigned char *)(*(void *)(a2 + *v7) + v125);
              *(void *)(a2 + v124) = v125 + 1;
              v123 |= (unint64_t)(v126 & 0x7F) << v121;
              if (v126 < 0)
              {
                v121 += 7;
                BOOL v14 = v122++ >= 9;
                if (v14)
                {
                  uint64_t v127 = 0;
                  goto LABEL_427;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v127 = 0;
          }
          else {
            uint64_t v127 = v123;
          }
LABEL_427:
          [a1 setNowPlayingAbsoluteCount2Min:v127];
          continue;
        case 0x11u:
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v130 = 0;
          while (2)
          {
            uint64_t v131 = *v3;
            unint64_t v132 = *(void *)(a2 + v131);
            if (v132 == -1 || v132 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v133 = *(unsigned char *)(*(void *)(a2 + *v7) + v132);
              *(void *)(a2 + v131) = v132 + 1;
              v130 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                BOOL v14 = v129++ >= 9;
                if (v14)
                {
                  uint64_t v134 = 0;
                  goto LABEL_432;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v134 = 0;
          }
          else {
            uint64_t v134 = v130;
          }
LABEL_432:
          [a1 setNowPlayingAbsoluteCount10Min:v134];
          continue;
        case 0x12u:
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v137 = 0;
          while (2)
          {
            uint64_t v138 = *v3;
            unint64_t v139 = *(void *)(a2 + v138);
            if (v139 == -1 || v139 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v140 = *(unsigned char *)(*(void *)(a2 + *v7) + v139);
              *(void *)(a2 + v138) = v139 + 1;
              v137 |= (unint64_t)(v140 & 0x7F) << v135;
              if (v140 < 0)
              {
                v135 += 7;
                BOOL v14 = v136++ >= 9;
                if (v14)
                {
                  uint64_t v141 = 0;
                  goto LABEL_437;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v141 = 0;
          }
          else {
            uint64_t v141 = v137;
          }
LABEL_437:
          [a1 setNowPlayingAbsoluteCount1Hr:v141];
          continue;
        case 0x13u:
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v144 = 0;
          while (2)
          {
            uint64_t v145 = *v3;
            unint64_t v146 = *(void *)(a2 + v145);
            if (v146 == -1 || v146 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
              *(void *)(a2 + v145) = v146 + 1;
              v144 |= (unint64_t)(v147 & 0x7F) << v142;
              if (v147 < 0)
              {
                v142 += 7;
                BOOL v14 = v143++ >= 9;
                if (v14)
                {
                  uint64_t v148 = 0;
                  goto LABEL_442;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v148 = 0;
          }
          else {
            uint64_t v148 = v144;
          }
LABEL_442:
          [a1 setNowPlayingAbsoluteCount6Hr:v148];
          continue;
        case 0x14u:
          char v149 = 0;
          unsigned int v150 = 0;
          uint64_t v151 = 0;
          while (2)
          {
            uint64_t v152 = *v3;
            unint64_t v153 = *(void *)(a2 + v152);
            if (v153 == -1 || v153 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v154 = *(unsigned char *)(*(void *)(a2 + *v7) + v153);
              *(void *)(a2 + v152) = v153 + 1;
              v151 |= (unint64_t)(v154 & 0x7F) << v149;
              if (v154 < 0)
              {
                v149 += 7;
                BOOL v14 = v150++ >= 9;
                if (v14)
                {
                  uint64_t v155 = 0;
                  goto LABEL_447;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v155 = 0;
          }
          else {
            uint64_t v155 = v151;
          }
LABEL_447:
          [a1 setNowPlayingAbsoluteCount1Day:v155];
          continue;
        case 0x15u:
          char v156 = 0;
          unsigned int v157 = 0;
          uint64_t v158 = 0;
          while (2)
          {
            uint64_t v159 = *v3;
            unint64_t v160 = *(void *)(a2 + v159);
            if (v160 == -1 || v160 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v161 = *(unsigned char *)(*(void *)(a2 + *v7) + v160);
              *(void *)(a2 + v159) = v160 + 1;
              v158 |= (unint64_t)(v161 & 0x7F) << v156;
              if (v161 < 0)
              {
                v156 += 7;
                BOOL v14 = v157++ >= 9;
                if (v14)
                {
                  uint64_t v162 = 0;
                  goto LABEL_452;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v162 = 0;
          }
          else {
            uint64_t v162 = v158;
          }
LABEL_452:
          [a1 setNowPlayingAbsoluteCount7Day:v162];
          continue;
        case 0x16u:
          char v163 = 0;
          unsigned int v164 = 0;
          uint64_t v165 = 0;
          while (2)
          {
            uint64_t v166 = *v3;
            unint64_t v167 = *(void *)(a2 + v166);
            if (v167 == -1 || v167 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v168 = *(unsigned char *)(*(void *)(a2 + *v7) + v167);
              *(void *)(a2 + v166) = v167 + 1;
              v165 |= (unint64_t)(v168 & 0x7F) << v163;
              if (v168 < 0)
              {
                v163 += 7;
                BOOL v14 = v164++ >= 9;
                if (v14)
                {
                  uint64_t v169 = 0;
                  goto LABEL_457;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v169 = 0;
          }
          else {
            uint64_t v169 = v165;
          }
LABEL_457:
          [a1 setNowPlayingAbsoluteCount14Day:v169];
          continue;
        case 0x17u:
          char v170 = 0;
          unsigned int v171 = 0;
          uint64_t v172 = 0;
          while (2)
          {
            uint64_t v173 = *v3;
            unint64_t v174 = *(void *)(a2 + v173);
            if (v174 == -1 || v174 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v175 = *(unsigned char *)(*(void *)(a2 + *v7) + v174);
              *(void *)(a2 + v173) = v174 + 1;
              v172 |= (unint64_t)(v175 & 0x7F) << v170;
              if (v175 < 0)
              {
                v170 += 7;
                BOOL v14 = v171++ >= 9;
                if (v14)
                {
                  uint64_t v172 = 0;
                  goto LABEL_461;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v172 = 0;
          }
LABEL_461:
          [a1 setIsNowPlayingApp:v172 != 0];
          continue;
        case 0x18u:
          char v176 = 0;
          unsigned int v177 = 0;
          uint64_t v178 = 0;
          while (2)
          {
            uint64_t v179 = *v3;
            unint64_t v180 = *(void *)(a2 + v179);
            if (v180 == -1 || v180 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v181 = *(unsigned char *)(*(void *)(a2 + *v7) + v180);
              *(void *)(a2 + v179) = v180 + 1;
              v178 |= (unint64_t)(v181 & 0x7F) << v176;
              if (v181 < 0)
              {
                v176 += 7;
                BOOL v14 = v177++ >= 9;
                if (v14)
                {
                  uint64_t v178 = 0;
                  goto LABEL_465;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v178 = 0;
          }
LABEL_465:
          [a1 setIsSelectedApp:v178 != 0];
          continue;
        case 0x19u:
          char v182 = 0;
          unsigned int v183 = 0;
          uint64_t v184 = 0;
          while (2)
          {
            uint64_t v185 = *v3;
            unint64_t v186 = *(void *)(a2 + v185);
            if (v186 == -1 || v186 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v187 = *(unsigned char *)(*(void *)(a2 + *v7) + v186);
              *(void *)(a2 + v185) = v186 + 1;
              v184 |= (unint64_t)(v187 & 0x7F) << v182;
              if (v187 < 0)
              {
                v182 += 7;
                BOOL v14 = v183++ >= 9;
                if (v14)
                {
                  uint64_t v188 = 0;
                  goto LABEL_470;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v188 = 0;
          }
          else {
            uint64_t v188 = v184;
          }
LABEL_470:
          [a1 setTimeSinceLastForegroundAppStartInSec:v188];
          continue;
        case 0x1Au:
          char v189 = 0;
          unsigned int v190 = 0;
          uint64_t v191 = 0;
          while (2)
          {
            uint64_t v192 = *v3;
            unint64_t v193 = *(void *)(a2 + v192);
            if (v193 == -1 || v193 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v194 = *(unsigned char *)(*(void *)(a2 + *v7) + v193);
              *(void *)(a2 + v192) = v193 + 1;
              v191 |= (unint64_t)(v194 & 0x7F) << v189;
              if (v194 < 0)
              {
                v189 += 7;
                BOOL v14 = v190++ >= 9;
                if (v14)
                {
                  uint64_t v195 = 0;
                  goto LABEL_475;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v195 = 0;
          }
          else {
            uint64_t v195 = v191;
          }
LABEL_475:
          [a1 setTimeSinceLastForegroundAppEndInSec:v195];
          continue;
        case 0x1Bu:
          char v196 = 0;
          unsigned int v197 = 0;
          uint64_t v198 = 0;
          while (2)
          {
            uint64_t v199 = *v3;
            unint64_t v200 = *(void *)(a2 + v199);
            if (v200 == -1 || v200 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v201 = *(unsigned char *)(*(void *)(a2 + *v7) + v200);
              *(void *)(a2 + v199) = v200 + 1;
              v198 |= (unint64_t)(v201 & 0x7F) << v196;
              if (v201 < 0)
              {
                v196 += 7;
                BOOL v14 = v197++ >= 9;
                if (v14)
                {
                  uint64_t v202 = 0;
                  goto LABEL_480;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v202 = 0;
          }
          else {
            uint64_t v202 = v198;
          }
LABEL_480:
          [a1 setTimeSinceLastNowPlayingAppStartInSec:v202];
          continue;
        case 0x1Cu:
          char v203 = 0;
          unsigned int v204 = 0;
          uint64_t v205 = 0;
          while (2)
          {
            uint64_t v206 = *v3;
            unint64_t v207 = *(void *)(a2 + v206);
            if (v207 == -1 || v207 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v208 = *(unsigned char *)(*(void *)(a2 + *v7) + v207);
              *(void *)(a2 + v206) = v207 + 1;
              v205 |= (unint64_t)(v208 & 0x7F) << v203;
              if (v208 < 0)
              {
                v203 += 7;
                BOOL v14 = v204++ >= 9;
                if (v14)
                {
                  uint64_t v209 = 0;
                  goto LABEL_485;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v209 = 0;
          }
          else {
            uint64_t v209 = v205;
          }
LABEL_485:
          [a1 setTimeSinceLastNowPlayingAppEndInSec:v209];
          continue;
        case 0x1Du:
          char v210 = 0;
          unsigned int v211 = 0;
          uint64_t v212 = 0;
          while (2)
          {
            uint64_t v213 = *v3;
            unint64_t v214 = *(void *)(a2 + v213);
            if (v214 == -1 || v214 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v215 = *(unsigned char *)(*(void *)(a2 + *v7) + v214);
              *(void *)(a2 + v213) = v214 + 1;
              v212 |= (unint64_t)(v215 & 0x7F) << v210;
              if (v215 < 0)
              {
                v210 += 7;
                BOOL v14 = v211++ >= 9;
                if (v14)
                {
                  uint64_t v216 = 0;
                  goto LABEL_490;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v216 = 0;
          }
          else {
            uint64_t v216 = v212;
          }
LABEL_490:
          [a1 setSpotlightRelativeCount:v216];
          continue;
        case 0x1Eu:
          char v217 = 0;
          unsigned int v218 = 0;
          uint64_t v219 = 0;
          while (2)
          {
            uint64_t v220 = *v3;
            unint64_t v221 = *(void *)(a2 + v220);
            if (v221 == -1 || v221 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v222 = *(unsigned char *)(*(void *)(a2 + *v7) + v221);
              *(void *)(a2 + v220) = v221 + 1;
              v219 |= (unint64_t)(v222 & 0x7F) << v217;
              if (v222 < 0)
              {
                v217 += 7;
                BOOL v14 = v218++ >= 9;
                if (v14)
                {
                  uint64_t v223 = 0;
                  goto LABEL_495;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v223 = 0;
          }
          else {
            uint64_t v223 = v219;
          }
LABEL_495:
          [a1 setSupportedMediaCategories:v223];
          continue;
        case 0x1Fu:
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v226 = 0;
          while (2)
          {
            uint64_t v227 = *v3;
            unint64_t v228 = *(void *)(a2 + v227);
            if (v228 == -1 || v228 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v229 = *(unsigned char *)(*(void *)(a2 + *v7) + v228);
              *(void *)(a2 + v227) = v228 + 1;
              v226 |= (unint64_t)(v229 & 0x7F) << v224;
              if (v229 < 0)
              {
                v224 += 7;
                BOOL v14 = v225++ >= 9;
                if (v14)
                {
                  uint64_t v226 = 0;
                  goto LABEL_499;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v226 = 0;
          }
LABEL_499:
          [a1 setIsForegroundApp:v226 != 0];
          continue;
        case 0x20u:
          char v230 = 0;
          unsigned int v231 = 0;
          uint64_t v232 = 0;
          while (2)
          {
            uint64_t v233 = *v3;
            unint64_t v234 = *(void *)(a2 + v233);
            if (v234 == -1 || v234 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v235 = *(unsigned char *)(*(void *)(a2 + *v7) + v234);
              *(void *)(a2 + v233) = v234 + 1;
              v232 |= (unint64_t)(v235 & 0x7F) << v230;
              if (v235 < 0)
              {
                v230 += 7;
                BOOL v14 = v231++ >= 9;
                if (v14)
                {
                  uint64_t v236 = 0;
                  goto LABEL_504;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v236 = 0;
          }
          else {
            uint64_t v236 = v232;
          }
LABEL_504:
          [a1 setEntityAbsoluteCount28Day:v236];
          continue;
        case 0x21u:
          char v237 = 0;
          unsigned int v238 = 0;
          uint64_t v239 = 0;
          while (2)
          {
            uint64_t v240 = *v3;
            unint64_t v241 = *(void *)(a2 + v240);
            if (v241 == -1 || v241 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v242 = *(unsigned char *)(*(void *)(a2 + *v7) + v241);
              *(void *)(a2 + v240) = v241 + 1;
              v239 |= (unint64_t)(v242 & 0x7F) << v237;
              if (v242 < 0)
              {
                v237 += 7;
                BOOL v14 = v238++ >= 9;
                if (v14)
                {
                  uint64_t v243 = 0;
                  goto LABEL_509;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v243 = 0;
          }
          else {
            uint64_t v243 = v239;
          }
LABEL_509:
          [a1 setNowPlayingAbsoluteCount28Day:v243];
          continue;
        case 0x22u:
          char v244 = 0;
          unsigned int v245 = 0;
          uint64_t v246 = 0;
          while (2)
          {
            uint64_t v247 = *v3;
            unint64_t v248 = *(void *)(a2 + v247);
            if (v248 == -1 || v248 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v249 = *(unsigned char *)(*(void *)(a2 + *v7) + v248);
              *(void *)(a2 + v247) = v248 + 1;
              v246 |= (unint64_t)(v249 & 0x7F) << v244;
              if (v249 < 0)
              {
                v244 += 7;
                BOOL v14 = v245++ >= 9;
                if (v14)
                {
                  uint64_t v250 = 0;
                  goto LABEL_514;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v250 = 0;
          }
          else {
            uint64_t v250 = v246;
          }
LABEL_514:
          [a1 setEntityPartialSiriCount2Min:v250];
          continue;
        case 0x23u:
          char v251 = 0;
          unsigned int v252 = 0;
          uint64_t v253 = 0;
          while (2)
          {
            uint64_t v254 = *v3;
            unint64_t v255 = *(void *)(a2 + v254);
            if (v255 == -1 || v255 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v256 = *(unsigned char *)(*(void *)(a2 + *v7) + v255);
              *(void *)(a2 + v254) = v255 + 1;
              v253 |= (unint64_t)(v256 & 0x7F) << v251;
              if (v256 < 0)
              {
                v251 += 7;
                BOOL v14 = v252++ >= 9;
                if (v14)
                {
                  uint64_t v257 = 0;
                  goto LABEL_519;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v257 = 0;
          }
          else {
            uint64_t v257 = v253;
          }
LABEL_519:
          [a1 setEntityPartialSiriCount10Min:v257];
          continue;
        case 0x24u:
          char v258 = 0;
          unsigned int v259 = 0;
          uint64_t v260 = 0;
          while (2)
          {
            uint64_t v261 = *v3;
            unint64_t v262 = *(void *)(a2 + v261);
            if (v262 == -1 || v262 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v263 = *(unsigned char *)(*(void *)(a2 + *v7) + v262);
              *(void *)(a2 + v261) = v262 + 1;
              v260 |= (unint64_t)(v263 & 0x7F) << v258;
              if (v263 < 0)
              {
                v258 += 7;
                BOOL v14 = v259++ >= 9;
                if (v14)
                {
                  uint64_t v264 = 0;
                  goto LABEL_524;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v264 = 0;
          }
          else {
            uint64_t v264 = v260;
          }
LABEL_524:
          [a1 setEntityPartialSiriCount1Hr:v264];
          continue;
        case 0x25u:
          char v265 = 0;
          unsigned int v266 = 0;
          uint64_t v267 = 0;
          while (2)
          {
            uint64_t v268 = *v3;
            unint64_t v269 = *(void *)(a2 + v268);
            if (v269 == -1 || v269 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v270 = *(unsigned char *)(*(void *)(a2 + *v7) + v269);
              *(void *)(a2 + v268) = v269 + 1;
              v267 |= (unint64_t)(v270 & 0x7F) << v265;
              if (v270 < 0)
              {
                v265 += 7;
                BOOL v14 = v266++ >= 9;
                if (v14)
                {
                  uint64_t v271 = 0;
                  goto LABEL_529;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v271 = 0;
          }
          else {
            uint64_t v271 = v267;
          }
LABEL_529:
          [a1 setEntityPartialSiriCount6Hr:v271];
          continue;
        case 0x26u:
          char v272 = 0;
          unsigned int v273 = 0;
          uint64_t v274 = 0;
          while (2)
          {
            uint64_t v275 = *v3;
            unint64_t v276 = *(void *)(a2 + v275);
            if (v276 == -1 || v276 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v277 = *(unsigned char *)(*(void *)(a2 + *v7) + v276);
              *(void *)(a2 + v275) = v276 + 1;
              v274 |= (unint64_t)(v277 & 0x7F) << v272;
              if (v277 < 0)
              {
                v272 += 7;
                BOOL v14 = v273++ >= 9;
                if (v14)
                {
                  uint64_t v278 = 0;
                  goto LABEL_534;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v278 = 0;
          }
          else {
            uint64_t v278 = v274;
          }
LABEL_534:
          [a1 setEntityPartialSiriCount1Day:v278];
          continue;
        case 0x27u:
          char v279 = 0;
          unsigned int v280 = 0;
          uint64_t v281 = 0;
          while (2)
          {
            uint64_t v282 = *v3;
            unint64_t v283 = *(void *)(a2 + v282);
            if (v283 == -1 || v283 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v284 = *(unsigned char *)(*(void *)(a2 + *v7) + v283);
              *(void *)(a2 + v282) = v283 + 1;
              v281 |= (unint64_t)(v284 & 0x7F) << v279;
              if (v284 < 0)
              {
                v279 += 7;
                BOOL v14 = v280++ >= 9;
                if (v14)
                {
                  uint64_t v285 = 0;
                  goto LABEL_539;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v285 = 0;
          }
          else {
            uint64_t v285 = v281;
          }
LABEL_539:
          [a1 setEntityPartialSiriCount7Day:v285];
          continue;
        case 0x28u:
          char v286 = 0;
          unsigned int v287 = 0;
          uint64_t v288 = 0;
          while (2)
          {
            uint64_t v289 = *v3;
            unint64_t v290 = *(void *)(a2 + v289);
            if (v290 == -1 || v290 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v291 = *(unsigned char *)(*(void *)(a2 + *v7) + v290);
              *(void *)(a2 + v289) = v290 + 1;
              v288 |= (unint64_t)(v291 & 0x7F) << v286;
              if (v291 < 0)
              {
                v286 += 7;
                BOOL v14 = v287++ >= 9;
                if (v14)
                {
                  uint64_t v292 = 0;
                  goto LABEL_544;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v292 = 0;
          }
          else {
            uint64_t v292 = v288;
          }
LABEL_544:
          [a1 setEntityPartialSiriCount28Day:v292];
          continue;
        case 0x29u:
          char v293 = 0;
          unsigned int v294 = 0;
          uint64_t v295 = 0;
          while (2)
          {
            uint64_t v296 = *v3;
            unint64_t v297 = *(void *)(a2 + v296);
            if (v297 == -1 || v297 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v298 = *(unsigned char *)(*(void *)(a2 + *v7) + v297);
              *(void *)(a2 + v296) = v297 + 1;
              v295 |= (unint64_t)(v298 & 0x7F) << v293;
              if (v298 < 0)
              {
                v293 += 7;
                BOOL v14 = v294++ >= 9;
                if (v14)
                {
                  uint64_t v299 = 0;
                  goto LABEL_549;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v299 = 0;
          }
          else {
            uint64_t v299 = v295;
          }
LABEL_549:
          [a1 setEntityPartialAppCount2Min:v299];
          continue;
        case 0x2Au:
          char v300 = 0;
          unsigned int v301 = 0;
          uint64_t v302 = 0;
          while (2)
          {
            uint64_t v303 = *v3;
            unint64_t v304 = *(void *)(a2 + v303);
            if (v304 == -1 || v304 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v305 = *(unsigned char *)(*(void *)(a2 + *v7) + v304);
              *(void *)(a2 + v303) = v304 + 1;
              v302 |= (unint64_t)(v305 & 0x7F) << v300;
              if (v305 < 0)
              {
                v300 += 7;
                BOOL v14 = v301++ >= 9;
                if (v14)
                {
                  uint64_t v306 = 0;
                  goto LABEL_554;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v306 = 0;
          }
          else {
            uint64_t v306 = v302;
          }
LABEL_554:
          [a1 setEntityPartialAppCount10Min:v306];
          continue;
        case 0x2Bu:
          char v307 = 0;
          unsigned int v308 = 0;
          uint64_t v309 = 0;
          while (2)
          {
            uint64_t v310 = *v3;
            unint64_t v311 = *(void *)(a2 + v310);
            if (v311 == -1 || v311 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v312 = *(unsigned char *)(*(void *)(a2 + *v7) + v311);
              *(void *)(a2 + v310) = v311 + 1;
              v309 |= (unint64_t)(v312 & 0x7F) << v307;
              if (v312 < 0)
              {
                v307 += 7;
                BOOL v14 = v308++ >= 9;
                if (v14)
                {
                  uint64_t v313 = 0;
                  goto LABEL_559;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v313 = 0;
          }
          else {
            uint64_t v313 = v309;
          }
LABEL_559:
          [a1 setEntityPartialAppCount1Hr:v313];
          continue;
        case 0x2Cu:
          char v314 = 0;
          unsigned int v315 = 0;
          uint64_t v316 = 0;
          while (2)
          {
            uint64_t v317 = *v3;
            unint64_t v318 = *(void *)(a2 + v317);
            if (v318 == -1 || v318 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v319 = *(unsigned char *)(*(void *)(a2 + *v7) + v318);
              *(void *)(a2 + v317) = v318 + 1;
              v316 |= (unint64_t)(v319 & 0x7F) << v314;
              if (v319 < 0)
              {
                v314 += 7;
                BOOL v14 = v315++ >= 9;
                if (v14)
                {
                  uint64_t v320 = 0;
                  goto LABEL_564;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v320 = 0;
          }
          else {
            uint64_t v320 = v316;
          }
LABEL_564:
          [a1 setEntityPartialAppCount6Hr:v320];
          continue;
        case 0x2Du:
          char v321 = 0;
          unsigned int v322 = 0;
          uint64_t v323 = 0;
          while (2)
          {
            uint64_t v324 = *v3;
            unint64_t v325 = *(void *)(a2 + v324);
            if (v325 == -1 || v325 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v326 = *(unsigned char *)(*(void *)(a2 + *v7) + v325);
              *(void *)(a2 + v324) = v325 + 1;
              v323 |= (unint64_t)(v326 & 0x7F) << v321;
              if (v326 < 0)
              {
                v321 += 7;
                BOOL v14 = v322++ >= 9;
                if (v14)
                {
                  uint64_t v327 = 0;
                  goto LABEL_569;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v327 = 0;
          }
          else {
            uint64_t v327 = v323;
          }
LABEL_569:
          [a1 setEntityPartialAppCount1Day:v327];
          continue;
        case 0x2Eu:
          char v328 = 0;
          unsigned int v329 = 0;
          uint64_t v330 = 0;
          while (2)
          {
            uint64_t v331 = *v3;
            unint64_t v332 = *(void *)(a2 + v331);
            if (v332 == -1 || v332 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v333 = *(unsigned char *)(*(void *)(a2 + *v7) + v332);
              *(void *)(a2 + v331) = v332 + 1;
              v330 |= (unint64_t)(v333 & 0x7F) << v328;
              if (v333 < 0)
              {
                v328 += 7;
                BOOL v14 = v329++ >= 9;
                if (v14)
                {
                  uint64_t v334 = 0;
                  goto LABEL_574;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v334 = 0;
          }
          else {
            uint64_t v334 = v330;
          }
LABEL_574:
          [a1 setEntityPartialAppCount7Day:v334];
          continue;
        case 0x2Fu:
          char v335 = 0;
          unsigned int v336 = 0;
          uint64_t v337 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v338 = *v3;
        unint64_t v339 = *(void *)(a2 + v338);
        if (v339 == -1 || v339 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v340 = *(unsigned char *)(*(void *)(a2 + *v7) + v339);
        *(void *)(a2 + v338) = v339 + 1;
        v337 |= (unint64_t)(v340 & 0x7F) << v335;
        if ((v340 & 0x80) == 0) {
          goto LABEL_576;
        }
        v335 += 7;
        BOOL v14 = v336++ >= 9;
        if (v14)
        {
          uint64_t v341 = 0;
          goto LABEL_579;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_576:
      uint64_t v341 = *(unsigned char *)(a2 + *v5) ? 0 : v337;
LABEL_579:
      [a1 setEntityPartialAppCount28Day:v341];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppGroundTruthGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppIndependentSignals);
        if (!PBReaderPlaceMark()
          || (INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppIndependentSignalsReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIndependentSignal:", v17, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppDependentSignals);
    if (!PBReaderPlaceMark()
      || !INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppDependentSignalsReadFrom(v17, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addDependentSignals:", v17, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t SCSchemaSCCheckCorrectionResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = objc_alloc_init(SCSchemaSCCheckCorrectionResult);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !SCSchemaSCCheckCorrectionResultReadFrom(v24, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addResults:", v24, 0, 0);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_35;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_38:
        objc_msgSend(a1, "setCandidateCount:", v23, v26, v27);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppIndependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_92;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_94;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_92:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_94:
          [a1 setIsDeviceLockStatus:v19 != 0];
          continue;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  uint64_t v30 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
          else {
            uint64_t v30 = v26;
          }
LABEL_99:
          [a1 setDeviceMotionState:v30];
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v33;
          }
LABEL_104:
          [a1 setIntentType:v37];
          continue;
        case 4u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  uint64_t v44 = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v44 = 0;
          }
          else {
            uint64_t v44 = v40;
          }
LABEL_109:
          [a1 setNowPlayingState:v44];
          continue;
        case 5u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v14 = v46++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_114;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = v47;
          }
LABEL_114:
          [a1 setDeviceClass:v51];
          continue;
        case 6u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (2)
          {
            uint64_t v55 = *v3;
            unint64_t v56 = *(void *)(a2 + v55);
            if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  uint64_t v58 = 0;
                  goto LABEL_119;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v58 = 0;
          }
          else {
            uint64_t v58 = v54;
          }
LABEL_119:
          [a1 setClientHourOfDay:v58];
          continue;
        case 7u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          while (2)
          {
            uint64_t v62 = *v3;
            unint64_t v63 = *(void *)(a2 + v62);
            if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
              *(void *)(a2 + v62) = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if (v64 < 0)
              {
                v59 += 7;
                BOOL v14 = v60++ >= 9;
                if (v14)
                {
                  uint64_t v65 = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v65 = 0;
          }
          else {
            uint64_t v65 = v61;
          }
LABEL_124:
          [a1 setClientLocale:v65];
          continue;
        case 8u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          while (2)
          {
            uint64_t v69 = *v3;
            unint64_t v70 = *(void *)(a2 + v69);
            if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
              *(void *)(a2 + v69) = v70 + 1;
              v68 |= (unint64_t)(v71 & 0x7F) << v66;
              if (v71 < 0)
              {
                v66 += 7;
                BOOL v14 = v67++ >= 9;
                if (v14)
                {
                  uint64_t v72 = 0;
                  goto LABEL_129;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v72 = 0;
          }
          else {
            uint64_t v72 = v68;
          }
LABEL_129:
          [a1 setClientLanguage:v72];
          continue;
        case 9u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v75 = 0;
          while (2)
          {
            uint64_t v76 = *v3;
            unint64_t v77 = *(void *)(a2 + v76);
            if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v77 + 1;
              v75 |= (unint64_t)(v78 & 0x7F) << v73;
              if (v78 < 0)
              {
                v73 += 7;
                BOOL v14 = v74++ >= 9;
                if (v14)
                {
                  uint64_t v79 = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v79 = 0;
          }
          else {
            uint64_t v79 = v75;
          }
LABEL_134:
          [a1 setClientRegion:v79];
          continue;
        case 0xAu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v83 = *v3;
        unint64_t v84 = *(void *)(a2 + v83);
        if (v84 == -1 || v84 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
        *(void *)(a2 + v83) = v84 + 1;
        v82 |= (unint64_t)(v85 & 0x7F) << v80;
        if ((v85 & 0x80) == 0) {
          goto LABEL_136;
        }
        v80 += 7;
        BOOL v14 = v81++ >= 9;
        if (v14)
        {
          uint64_t v86 = 0;
          goto LABEL_139;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_136:
      uint64_t v86 = *(unsigned char *)(a2 + *v5) ? 0 : v82;
LABEL_139:
      [a1 setBucketedDeviceMotionState:v86];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationDependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v27 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_52:
        [a1 setIsDisambiguatedApp:v27 != 0];
      }
      else if (v17 == 2)
      {
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (1)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
          *(void *)(a2 + v34) = v35 + 1;
          v33 |= (unint64_t)(v36 & 0x7F) << v31;
          if ((v36 & 0x80) == 0) {
            goto LABEL_54;
          }
          v31 += 7;
          BOOL v14 = v32++ >= 9;
          if (v14)
          {
            uint64_t v37 = 0;
            goto LABEL_57;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
        uint64_t v37 = *(unsigned char *)(a2 + *v5) ? 0 : v33;
LABEL_57:
        [a1 setModelAppConfidence:v37];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setDisambiguationAppOrdinal:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationIndependentSignalsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_60;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_63;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_60:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_63:
        [a1 setDisambiguationAppsOrder:v23];
        goto LABEL_84;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_68:
        [a1 setDisambiguationReasons:v31];
        goto LABEL_84;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_73:
        [a1 setModelVersion:v38];
        goto LABEL_84;
      case 4u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v41;
        }
LABEL_78:
        [a1 setNumDisambiguationApps:v45];
        goto LABEL_84;
      case 5u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v52 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v52 = 0;
        }
        else {
          uint64_t v52 = v48;
        }
LABEL_83:
        [a1 setTrialDeploymentId:v52];
        goto LABEL_84;
      case 6u:
        unsigned int v53 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v53, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrialTreatmentId:", v53, 0, 0);

LABEL_84:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_84;
    }
  }
}

uint64_t SCSchemaSCCheckUndoResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setUndoType:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationSignalsGeneratedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationDependentSignals);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationDependentSignalsReadFrom(v18, a2))
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addDependentSignals:", v18, 0, 0);
        }
        goto LABEL_31;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppGroundTruthGenerated);
        if (!PBReaderPlaceMark()
          || !INFERENCESchemaINFERENCEVideoPlayOnThirdPartyAppGroundTruthGeneratedReadFrom(v18, a2))
        {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayOnThirdPartyAppSignals:", v18, 0, 0);
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationIndependentSignals);
    if (!PBReaderPlaceMark()
      || (INFERENCESchemaINFERENCEVideoSmartAppSelectionDisambiguationIndependentSignalsReadFrom(v18, a2) & 1) == 0)
    {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setIndependentSignal:", v18, 0, 0);
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LCServiceApplicationConfigurationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v17 = (LCServiceLoggingParameters *)objc_claimAutoreleasedReturnValue();
        [a1 setBundleIdentifier:v17];
        goto LABEL_29;
      case 2u:
        unint64_t v17 = objc_alloc_init(LCServiceLoggingParameters);
        if (!PBReaderPlaceMark() || (LCServiceLoggingParametersReadFrom(v17, a2, v19) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setApplicationParameters:", v17, 0, 0);
        goto LABEL_29;
      case 3u:
        unint64_t v17 = objc_alloc_init(LCServiceCategoryConfiguration);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (PBReaderPlaceMark() && LCServiceCategoryConfigurationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addCategories:", v17, 0, 0);
          }
LABEL_29:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v22;
        }
LABEL_41:
        objc_msgSend(a1, "addBlacklistedCategories:", v26, v27, v28);
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t LCServiceBlackListedFieldReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = PBReaderReadString();
        [a1 setFullyQualifiedPath:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LCServiceBlacklistedFieldsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(LCServiceBlackListedField);
        if (!PBReaderPlaceMark() || !LCServiceBlackListedFieldReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addBlackListedFields:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LCServiceCategoryConfigurationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v25 = objc_alloc_init(LCServiceBlacklistedFields);
        if (!PBReaderPlaceMark() || (LCServiceBlacklistedFieldsReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBlacklist:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setEventType:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = objc_alloc_init(LCServiceLoggingParameters);
        if (!PBReaderPlaceMark() || (LCServiceLoggingParametersReadFrom(v25, a2, v26) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCategoryParameters:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL LCServiceConfigurationRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v10 & 7) == 4;
    }
    if (v15) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t LCServiceConfigurationResponseReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(LCServiceLoggingConfiguration);
        if (!PBReaderPlaceMark() || (LCServiceLoggingConfigurationReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setConfiguration:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LCServiceLoggingConfigurationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(LCServiceLoggingParameters);
        if (!PBReaderPlaceMark() || (LCServiceLoggingParametersReadFrom(v17, a2, v18) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDefaultParameters:", v17, 0, 0);
        goto LABEL_37;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v22;
        }
LABEL_49:
        objc_msgSend(a1, "setConfigurationVersion:", v26, v34, v35);
        goto LABEL_55;
      case 3u:
        unint64_t v17 = objc_alloc_init(LCServiceApplicationConfiguration);
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        if (PBReaderPlaceMark() && LCServiceApplicationConfigurationReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addApplications:", v17, 0, 0);
          }
LABEL_37:

LABEL_55:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 4u:
        PBReaderReadString();
        unint64_t v17 = (LCServiceLoggingParameters *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addBlacklistedBundleIdentifiers:v17];
        }
        goto LABEL_37;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_54;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v29;
        }
LABEL_54:
        objc_msgSend(a1, "addDenyListedCategories:", v33, v34, v35);
        goto LABEL_55;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_55;
    }
  }
}

uint64_t LCServiceLoggingParametersReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_66;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_69;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_66:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_69:
          [a1 setQos:v27];
          continue;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (2)
          {
            uint64_t v32 = *v4;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v16 = v30++ >= 9;
                if (v16)
                {
                  uint64_t v36 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v36 = 0;
          }
          else {
            uint64_t v36 = v31;
          }
LABEL_74:
          [a1 setMessageSizeQuotaInBytes:v36];
          continue;
        case 3u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v4;
            uint64_t v41 = *(void *)(a2 + v40);
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v8) + v41);
              *(void *)(a2 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v16 = v38++ >= 9;
                if (v16)
                {
                  uint64_t v44 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v44 = 0;
          }
          else {
            uint64_t v44 = v39;
          }
LABEL_79:
          [a1 setTotalDiskSizeQuotaInBytes:v44];
          continue;
        case 4u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v4;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v8) + v49);
              *(void *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v16 = v46++ >= 9;
                if (v16)
                {
                  uint64_t v47 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v47 = 0;
          }
LABEL_83:
          [a1 setOptOutOfCompression:v47 != 0];
          continue;
        case 5u:
          uint64_t v52 = *v4;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v53);
            *(void *)(a2 + v52) = v53 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setUploadSamplingRate:a3];
          continue;
        case 6u:
          uint64_t v54 = *v4;
          unint64_t v55 = *(void *)(a2 + v54);
          if (v55 <= 0xFFFFFFFFFFFFFFFBLL && v55 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v55);
            *(void *)(a2 + v54) = v55 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setRealtimeSamplingRate:a3];
          continue;
        case 7u:
          unint64_t v56 = PBReaderReadData();
          [a1 setEntropy:v56];
          goto LABEL_64;
        case 8u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          break;
        case 9u:
          unint64_t v56 = PBReaderReadString();
          [a1 setUploadEndpointURL:v56];
LABEL_64:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v60 = *v4;
        uint64_t v61 = *(void *)(a2 + v60);
        unint64_t v62 = v61 + 1;
        if (v61 == -1 || v62 > *(void *)(a2 + *v5)) {
          break;
        }
        char v63 = *(unsigned char *)(*(void *)(a2 + *v8) + v61);
        *(void *)(a2 + v60) = v62;
        v59 |= (unint64_t)(v63 & 0x7F) << v57;
        if ((v63 & 0x80) == 0) {
          goto LABEL_85;
        }
        v57 += 7;
        BOOL v16 = v58++ >= 9;
        if (v16)
        {
          uint64_t v59 = 0;
          goto LABEL_87;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_85:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v59 = 0;
      }
LABEL_87:
      [a1 setOverrideIntoSamplePopulation:v59 != 0];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t LTSchemaASRSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          [a1 setRequestID:v17];
          goto LABEL_23;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          [a1 setSelectedLocale:v17];
LABEL_23:

          continue;
        case 3u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v25 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_77:
          [a1 setTimeToFirstPartialMs:v25];
          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v28 |= (unint64_t)(v31 & 0x7F) << v26;
              if (v31 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v32 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v28;
          }
LABEL_82:
          [a1 setTimeToFinalResultMs:v32];
          continue;
        case 5u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          while (2)
          {
            uint64_t v36 = *v3;
            unint64_t v37 = *(void *)(a2 + v36);
            if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
              *(void *)(a2 + v36) = v37 + 1;
              v35 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v14 = v34++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
          else {
            uint64_t v39 = v35;
          }
LABEL_87:
          [a1 setLatencyFinalResultMs:v39];
          continue;
        case 6u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          while (2)
          {
            uint64_t v43 = *v3;
            unint64_t v44 = *(void *)(a2 + v43);
            if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                BOOL v14 = v41++ >= 9;
                if (v14)
                {
                  uint64_t v46 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v46 = 0;
          }
          else {
            uint64_t v46 = v42;
          }
LABEL_92:
          [a1 setTimeToSendFirstAudioPacket:v46];
          continue;
        case 7u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          while (2)
          {
            uint64_t v50 = *v3;
            unint64_t v51 = *(void *)(a2 + v50);
            if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
              *(void *)(a2 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  uint64_t v53 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
          else {
            uint64_t v53 = v49;
          }
LABEL_97:
          [a1 setTimeToReceiveFirstAudioPacket:v53];
          continue;
        case 8u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          while (2)
          {
            uint64_t v57 = *v3;
            unint64_t v58 = *(void *)(a2 + v57);
            if (v58 == -1 || v58 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v58);
              *(void *)(a2 + v57) = v58 + 1;
              v56 |= (unint64_t)(v59 & 0x7F) << v54;
              if (v59 < 0)
              {
                v54 += 7;
                BOOL v14 = v55++ >= 9;
                if (v14)
                {
                  uint64_t v60 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v60 = 0;
          }
          else {
            uint64_t v60 = v56;
          }
LABEL_102:
          [a1 setNumAudioPacket:v60];
          continue;
        case 9u:
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v64 = *v3;
        unint64_t v65 = *(void *)(a2 + v64);
        if (v65 == -1 || v65 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
        *(void *)(a2 + v64) = v65 + 1;
        v63 |= (unint64_t)(v66 & 0x7F) << v61;
        if ((v66 & 0x80) == 0) {
          goto LABEL_104;
        }
        v61 += 7;
        BOOL v14 = v62++ >= 9;
        if (v14)
        {
          uint64_t v67 = 0;
          goto LABEL_107;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_104:
      uint64_t v67 = *(unsigned char *)(a2 + *v5) ? 0 : v63;
LABEL_107:
      [a1 setTimeToSendFinishAudio:v67];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LTSchemaBatchTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(LTSchemaTask);
        if (!PBReaderPlaceMark() || !LTSchemaTaskReadFrom(v17, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTask:", v17, 0, 0);
        goto LABEL_58;
      case 2u:
        PBReaderReadString();
        uint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setSessionID:v17];
        goto LABEL_58;
      case 3u:
        PBReaderReadString();
        uint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setRequestID:v17];
        goto LABEL_58;
      case 4u:
        PBReaderReadString();
        uint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setSystemLocale:v17];
        goto LABEL_58;
      case 5u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_65:
        [a1 setBatchSeqNo:v25];
        goto LABEL_59;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_70:
        [a1 setNumberOfParagraphs:v32];
        goto LABEL_59;
      case 7u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_75:
        [a1 setResponseTimeMs:v39];
        goto LABEL_59;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v14 = v41++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v42;
        }
LABEL_80:
        [a1 setNumParagraphFailures:v46];
        goto LABEL_59;
      case 9u:
        uint64_t v17 = objc_alloc_init(LTSchemaError);
        if PBReaderPlaceMark() && (LTSchemaErrorReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setError:", v17, 0, 0);
LABEL_58:

LABEL_59:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_59;
    }
  }
}

BOOL LTSchemaDisambiguationSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        int v18 = PBReaderReadString();
        [a1 setSourceLocale:v18];
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        int v18 = PBReaderReadString();
        [a1 setRequestID:v18];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = PBReaderReadString();
    [a1 setSenseID:v18];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LTSchemaErrorReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = PBReaderReadString();
        [a1 setDomain:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LTSchemaLIDSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v17 = (LTSchemaLocaleConfidence *)objc_claimAutoreleasedReturnValue();
        [a1 setRequestID:v17];
        goto LABEL_29;
      case 2u:
        char v17 = objc_alloc_init(LTSchemaLocaleConfidence);
        if (!PBReaderPlaceMark() || (LTSchemaLocaleConfidenceReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_56;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSelectedLocale:", v17, 0, 0);
        goto LABEL_29;
      case 3u:
        char v17 = objc_alloc_init(LTSchemaLocaleConfidence);
        if PBReaderPlaceMark() && (LTSchemaLocaleConfidenceReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setAlternateLocale:", v17, 0, 0);
LABEL_29:

LABEL_54:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_56:

        return 0;
      case 4u:
        PBReaderReadString();
        char v17 = (LTSchemaLocaleConfidence *)objc_claimAutoreleasedReturnValue();
        [a1 setUserSelectedLocale:v17];
        goto LABEL_29;
      case 5u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_48:
        [a1 setResponseTimeMs:v25];
        goto LABEL_54;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v32 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = v28;
        }
LABEL_53:
        [a1 setSpeechElapsedTime:v32];
        goto LABEL_54;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_54;
    }
  }
}

uint64_t LTSchemaLocaleConfidenceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = PBReaderReadString();
        [a1 setLocale:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setConfidence:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL LTSchemaMTClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        char v17 = objc_alloc_init(LTSchemaSafariFeedbackEvent);
        if (!PBReaderPlaceMark() || !LTSchemaSafariFeedbackEventReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSafariFeedbackEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'f':
        char v17 = objc_alloc_init(LTSchemaBatchTranslationEvent);
        if (!PBReaderPlaceMark() || (LTSchemaBatchTranslationEventReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBatchTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'g':
        char v17 = objc_alloc_init(LTSchemaSpeechTranslationEvent);
        if (!PBReaderPlaceMark() || (LTSchemaSpeechTranslationEventReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'h':
        char v17 = objc_alloc_init(LTSchemaLIDSpeechTranslationEvent);
        if (!PBReaderPlaceMark() || (LTSchemaLIDSpeechTranslationEventReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLidSpeechTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'i':
        char v17 = objc_alloc_init(LTSchemaDisambiguationSpeechTranslationEvent);
        if (!PBReaderPlaceMark() || !LTSchemaDisambiguationSpeechTranslationEventReadFrom(v17, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDisambiguationSpeechTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'j':
        char v17 = objc_alloc_init(LTSchemaASRSpeechTranslationEvent);
        if (!PBReaderPlaceMark() || (LTSchemaASRSpeechTranslationEventReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrSpeechTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'k':
        char v17 = objc_alloc_init(LTSchemaMTSpeechTranslationEvent);
        if (!PBReaderPlaceMark() || (LTSchemaMTSpeechTranslationEventReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMtSpeechTranslationEvent:", v17, 0, 0);
        goto LABEL_45;
      case 'l':
        char v17 = objc_alloc_init(LTSchemaTTSSpeechTranslationEvent);
        if PBReaderPlaceMark() && (LTSchemaTTSSpeechTranslationEventReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTtsspeechTranslationEvent:", v17, 0, 0);
LABEL_45:

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_46;
    }
  }
}

uint64_t LTSchemaMTSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = PBReaderReadString();
        [a1 setRequestID:v25];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_37:
            [a1 setResponseTimeMs:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v25 = PBReaderReadString();
        [a1 setSelectedLocale:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL LTSchemaSafariFeedbackEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = objc_alloc_init(LTSchemaTask);
          if (PBReaderPlaceMark() && LTSchemaTaskReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setTask:", v17, 0, 0);
            goto LABEL_27;
          }

          return 0;
        case 2u:
          PBReaderReadString();
          unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
          [a1 setSessionID:v17];
          goto LABEL_27;
        case 3u:
          PBReaderReadString();
          unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
          [a1 setUserFeedbackContentSource:v17];
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
          [a1 setUserFeedbackContentTarget:v17];
LABEL_27:

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_28:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t LTSchemaSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(LTSchemaTask);
        if (!PBReaderPlaceMark() || !LTSchemaTaskReadFrom(v17, a2)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTask:", v17, 0, 0);
        goto LABEL_51;
      case 2u:
        PBReaderReadString();
        unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setSessionID:v17];
        goto LABEL_51;
      case 3u:
        PBReaderReadString();
        unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setRequestID:v17];
        goto LABEL_51;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_92:
        [a1 setInRestrictedMode:v21 != 0];
        goto LABEL_52;
      case 5u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_96:
        [a1 setIsAutomaticLID:v27 != 0];
        goto LABEL_52;
      case 6u:
        unint64_t v17 = objc_alloc_init(LTSchemaError);
        if PBReaderPlaceMark() && (LTSchemaErrorReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setError:", v17, 0, 0);
LABEL_51:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_128:

        return 0;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
        else {
          uint64_t v37 = v33;
        }
LABEL_101:
        [a1 setUiMode:v37];
        goto LABEL_52;
      case 8u:
        PBReaderReadString();
        unint64_t v17 = (LTSchemaTask *)objc_claimAutoreleasedReturnValue();
        [a1 setMobileAssetConfigVersion:v17];
        goto LABEL_51;
      case 9u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v40;
        }
LABEL_106:
        [a1 setTimeToFirstPartialDisplayed:v44];
        goto LABEL_52;
      case 0xAu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        while (2)
        {
          uint64_t v48 = *v3;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v14 = v46++ >= 9;
              if (v14)
              {
                uint64_t v51 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
        else {
          uint64_t v51 = v47;
        }
LABEL_111:
        [a1 setTimeToRecordingDialogDismissed:v51];
        goto LABEL_52;
      case 0xBu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
        else {
          uint64_t v58 = v54;
        }
LABEL_116:
        [a1 setTimeToShowTranslationCard:v58];
        goto LABEL_52;
      case 0xCu:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        while (2)
        {
          uint64_t v62 = *v3;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v14 = v60++ >= 9;
              if (v14)
              {
                uint64_t v65 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
        else {
          uint64_t v65 = v61;
        }
LABEL_121:
        [a1 setTimeToCancel:v65];
        goto LABEL_52;
      case 0xDu:
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        while (2)
        {
          uint64_t v69 = *v3;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
            *(void *)(a2 + v69) = v70 + 1;
            v68 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v14 = v67++ >= 9;
              if (v14)
              {
                uint64_t v72 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
        else {
          uint64_t v72 = v68;
        }
LABEL_126:
        [a1 setStatus:v72];
        goto LABEL_52;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_52;
    }
  }
}

uint64_t LTSchemaTTSSpeechTranslationEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = PBReaderReadString();
          [a1 setRequestID:v17];
          goto LABEL_23;
        case 2u:
          unint64_t v17 = PBReaderReadString();
          [a1 setSelectedLocale:v17];
LABEL_23:

          continue;
        case 3u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v25 = 0;
                  goto LABEL_42;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_42:
          [a1 setResponseTimeMs:v25];
          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          uint64_t v32 = 0;
          goto LABEL_47;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      uint64_t v32 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_47:
      [a1 setPlaybackBeginTimeMs:v32];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL LTSchemaTaskReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = PBReaderReadString();
          [a1 setTranslationTask:v17];
          goto LABEL_28;
        case 2u:
          unint64_t v17 = PBReaderReadString();
          [a1 setSourceLanguage:v17];
          goto LABEL_28;
        case 3u:
          unint64_t v17 = PBReaderReadString();
          [a1 setTargetLanguage:v17];
          goto LABEL_28;
        case 4u:
          unint64_t v17 = PBReaderReadString();
          [a1 setDeviceOS:v17];
          goto LABEL_28;
        case 5u:
          unint64_t v17 = PBReaderReadString();
          [a1 setDeviceType:v17];
          goto LABEL_28;
        case 6u:
          unint64_t v17 = PBReaderReadString();
          [a1 setOsVersion:v17];
          goto LABEL_28;
        case 7u:
          unint64_t v17 = PBReaderReadString();
          [a1 setBundleIdentifier:v17];
LABEL_28:

          goto LABEL_29;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaFirstPassChannelSelectionScoreReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        uint64_t v21 = *v4;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setFirstPassScore:a3];
      }
      else if ((v11 >> 3) == 1)
      {
        unsigned int v20 = PBReaderReadString();
        [a1 setChannelString:v20];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHASRAudioConfigureStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setAudioCodec:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setAudioSkippedTimeInNs:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setAudioSkippedNumSamples:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAcousticFalseTriggerMitigationEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v18 = objc_alloc_init(MHSchemaMHAcousticFalseTriggerMitigationFailed);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAcousticFalseTriggerMitigationFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        char v18 = objc_alloc_init(MHSchemaMHAcousticFalseTriggerMitigationStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAcousticFalseTriggerMitigationStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(MHSchemaMHAcousticFalseTriggerMitigationScoreGenerated);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAcousticFalseTriggerMitigationScoreGeneratedReadFrom(v18, a2, v19) & 1) == 0)
    {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setScoreGenerated:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAcousticFalseTriggerMitigationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAcousticFalseTriggerMitigationScoreGeneratedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 1)
      {
        uint64_t v29 = *v4;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
          *(void *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setScore:a3];
      }
      else if (v20 == 3)
      {
        uint64_t v31 = *v4;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v32);
          *(void *)(a2 + v31) = v32 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setThreshold:a3];
      }
      else if (v20 == 2)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (1)
        {
          uint64_t v24 = *v4;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v5)) {
            break;
          }
          char v27 = *(unsigned char *)(*(void *)(a2 + *v8) + v25);
          *(void *)(a2 + v24) = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0) {
            goto LABEL_37;
          }
          v21 += 7;
          BOOL v16 = v22++ >= 9;
          if (v16)
          {
            uint64_t v28 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_37:
        uint64_t v28 = *(unsigned char *)(a2 + *v6) ? 0 : v23;
LABEL_40:
        [a1 setAudioDurationInNs:v28];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHAcousticFalseTriggerMitigationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setModelVersion:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setMitigationType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAdMatchingEndedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_40;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_43:
          [a1 setAdBlockerDismissalType:v27];
          continue;
        case 2u:
          uint64_t v29 = PBReaderReadString();
          [a1 setAdName:v29];

          continue;
        case 3u:
          uint64_t v30 = *v4;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v31);
            *(void *)(a2 + v30) = v31 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setShazamScore:a3];
          continue;
        case 4u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v4;
        uint64_t v36 = *(void *)(a2 + v35);
        unint64_t v37 = v36 + 1;
        if (v36 == -1 || v37 > *(void *)(a2 + *v5)) {
          break;
        }
        char v38 = *(unsigned char *)(*(void *)(a2 + *v8) + v36);
        *(void *)(a2 + v35) = v37;
        v34 |= (unint64_t)(v38 & 0x7F) << v32;
        if ((v38 & 0x80) == 0) {
          goto LABEL_45;
        }
        v32 += 7;
        BOOL v16 = v33++ >= 9;
        if (v16)
        {
          uint64_t v39 = 0;
          goto LABEL_48;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_45:
      uint64_t v39 = *(unsigned char *)(a2 + *v6) ? 0 : v34;
LABEL_48:
      [a1 setAdBlockerSource:v39];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHAdMatchingFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAdMatchingStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setModelVersion:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHApplicationPlaybackAttemptedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setAppBundleName:v17];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = PBReaderReadString();
    [a1 setAppBundleVersion:v17];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioBluetoothInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setState:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setBluetoothAudioDeviceCategory:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioConfigureContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioConfigureStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioConfigureStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioConfigureEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioConfigureEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioConfigureEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioConfigureStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioFanInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setFanId:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setCurrentSpeed:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setTargetSpeed:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioFetchRouteContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioFetchRouteStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioFetchRouteStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioFetchRouteEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioFetchRouteEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioFetchRouteEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioFetchRouteStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioInitContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioInitStarted);
        if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioInitStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioInitEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioInitEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioInitEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioInitStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioLateBufferDetectedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setBufferReceiptTimeOffsetInNs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioPrepareContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrepareStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioPrepareStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrepareEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioPrepareEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioPrepareEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioPrepareStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioPrewarmContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrewarmStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioPrewarmStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrewarmEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioPrewarmEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioPrewarmEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioPrewarmStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordinFirstBufferReceiptReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setFirstBufferReceiptTimeOffsetInNs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioRecordingContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAssistantDaemonAudioRecordingEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioRecordingFirstBufferContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingFirstBufferStart);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingFirstBufferStartReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordinFirstBufferReceipt);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioRecordinFirstBufferReceiptReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingFirstBufferStartReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v25 = PBReaderReadString();
        [a1 setAudioInterfaceProductName:v25];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_37:
            [a1 setFirstBufferStartTimeOffsetInNs:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = PBReaderReadString();
        [a1 setAudioInterfaceVendorId:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t SCSchemaSCUndoSetReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SCSchemaSCSetUndoArgs);
        if (!PBReaderPlaceMark() || (SCSchemaSCSetUndoArgsReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSetUndoArgs:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioRecordingInterruptionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingInterruptionStarted);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioRecordingInterruptionStartedReadFrom(v17, a2))
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingInterruptionEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioRecordingInterruptionEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingInterruptionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioRecordingInterruptionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        PBReaderReadString();
        unsigned int v18 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setAvAudioSessionInterruptorName:v18];
        goto LABEL_26;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v18, 0, 0);
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v18 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setAvAudioSessionInterruptionType:v18];
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingInterruptionStartedTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v17 = objc_alloc_init(SISchemaUUID);
          if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v17, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setLinkId:", v17, 0, 0);
            goto LABEL_26;
          }

          return 0;
        case 2u:
          PBReaderReadString();
          unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
          if (v17) {
            [a1 addActiveSessionDisplayIds:v17];
          }
LABEL_26:

          continue;
        case 3u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (v14)
                {
                  uint64_t v25 = 0;
                  goto LABEL_45;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v21;
          }
LABEL_45:
          [a1 setAudioSessionCategory:v25];
          continue;
        case 4u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
        *(void *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_47;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          uint64_t v32 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
      uint64_t v32 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_50:
      [a1 setAudioSessionMode:v32];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioRecordingLastBufferContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingLastBufferStart);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingLastBufferStartReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingLastBufferReceipt);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioRecordingLastBufferReceiptReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingLastBufferReceiptReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setLastAudioRecordBufferReceiptTimeOffsetInNs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingLastBufferStartReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setLastAudioRecordBufferStartTimeOffsetInNs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingMissedBufferDetectedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioRecordingStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_39;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_42:
          [a1 setAudioInputRoute:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          break;
        case 3u:
          uint64_t v32 = PBReaderReadString();
          [a1 setAudioInterfaceVendorId:v32];
          goto LABEL_37;
        case 4u:
          uint64_t v32 = PBReaderReadString();
          [a1 setAudioInterfaceProductId:v32];
LABEL_37:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
        *(void *)(a2 + v28) = v29 + 1;
        v27 |= (unint64_t)(v30 & 0x7F) << v25;
        if ((v30 & 0x80) == 0) {
          goto LABEL_44;
        }
        v25 += 7;
        BOOL v14 = v26++ >= 9;
        if (v14)
        {
          uint64_t v31 = 0;
          goto LABEL_47;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_47:
      [a1 setSource:v31];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioSessionSetActiveContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetActiveStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioSessionSetActiveStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetActiveEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioSessionSetActiveEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioSessionSetActiveEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioSessionSetActiveStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioSessionSetInactiveContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetInactiveStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioSessionSetInactiveStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetInactiveEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioSessionSetInactiveEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioSessionSetInactiveEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioSessionSetInactiveStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioStartRecordingContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStartRecordingStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioStartRecordingStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStartRecordingEnded);
    if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioStartRecordingEndedReadFrom(v17, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioStartRecordingEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        char v17 = (MHSchemaMHAssistantDaemonAudioFanInfo *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addActiveSessionDisplayIds:v17];
        }
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioFanInfo);
    if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioFanInfoReadFrom(v17, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v17) {
      objc_msgSend(a1, "addFanInfo:", v17, 0, 0);
    }
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioStartRecordingStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioStopRecordingContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStopRecordingeStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioStopRecordingeStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStopRecordingEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioStopRecordingEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioStopRecordingEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioFanInfo);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioFanInfoReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addFanInfo:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioStopRecordingeStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setStopReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHAssistantDaemonAudioTwoShotTransitionContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioTwoShotTransitionStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioTwoShotTransitionStartedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioTwoShotTransitionEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHAssistantDaemonAudioTwoShotTransitionEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioTwoShotTransitionEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v25 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_43:
        [a1 setSuppresedAlert:v25 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        [a1 setTimedOut:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHAssistantDaemonAudioTwoShotTransitionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setPromptType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHCarplayLanguageMismatchReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unsigned int v24 = PBReaderReadString();
        [a1 setCarHeadUnitSelectedLocale:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setCarplayTriggerMode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v17 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 0x64u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAcousticFalseTriggerMitigationEvaluationContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAcousticFalseTriggerMitigationEvaluationContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAcousticFalseTriggerMitigationEvaluationContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x65u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHLatticeFalseTriggerMitigationEvaluationContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHLatticeFalseTriggerMitigationEvaluationContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLatticeFalseTriggerMitigationEvaluationContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x66u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHUnintendedResponseSuppressionEvaluationContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHUnintendedResponseSuppressionEvaluationContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnintendedResponseSuppressionExecutionContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x67u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHCoreSpeechPreprocessorCompleted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHCoreSpeechPreprocessorCompletedReadFrom(v18, a2, v19) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoreSpeechPreprocessorCompleted:", v18, 0, 0);
        goto LABEL_210;
      case 0x68u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHASRAudioConfigureStarted);
        if (!PBReaderPlaceMark() || (MHSchemaMHASRAudioConfigureStartedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrAudioConfigureStarted:", v18, 0, 0);
        goto LABEL_210;
      case 0x69u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioInitContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioInitContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioInitContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Au:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioConfigureContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioConfigureContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioConfigureContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Bu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrepareContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioPrepareContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioPrepareContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Cu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioPrewarmContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioPrewarmContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioPrewarmContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Du:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStartRecordingContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioStartRecordingContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioStartRecordingContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Eu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioStopRecordingContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioStopRecordingContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioStopRecordingContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x6Fu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetActiveContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioSessionSetActiveContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioSessionSetActiveContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x70u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioSessionSetInactiveContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioSessionSetInactiveContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioSessionSetInactiveContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x71u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioFetchRouteContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioFetchRouteContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioFetchRouteContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x72u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAssistantDaemonAudioRecordingContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x73u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingMissedBufferDetected);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingMissedBufferDetectedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingMissedBufferDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x74u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioLateBufferDetected);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioLateBufferDetectedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioLateBufferDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x75u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingFirstBufferContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioRecordingFirstBufferContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingFirstBufferContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x76u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingLastBufferContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioRecordingLastBufferContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingLastBufferContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x77u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingInterruptionContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioRecordingInterruptionContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingInterruptionContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x78u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingInterruptionStartedTier1);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingInterruptionStartedTier1ReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingInterruptionStartedTier1:", v18, 0, 0);
        goto LABEL_210;
      case 0x79u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioBluetoothInfo);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioBluetoothInfoReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioBluetoothInfo:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Au:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceTriggerTwoShotDetected);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerTwoShotDetectedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerTwoShotDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Bu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioTwoShotTransitionContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHAssistantDaemonAudioTwoShotTransitionContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioTwoShotTransitionContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Cu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceTriggerContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHVoiceTriggerContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Du:
        unsigned int v18 = objc_alloc_init(MHSchemaMHEndpointDetected);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointDetectedReadFrom(v18, a2, v20) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Eu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHEndpointLatencyInfoReported);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointLatencyInfoReportedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointLatencyInfoReported:", v18, 0, 0);
        goto LABEL_210;
      case 0x7Fu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceAdBlockerContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHVoiceAdBlockerContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAdblockerContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x80u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHOnDeviceEndpointerContext);
        if (!PBReaderPlaceMark() || (MHSchemaMHOnDeviceEndpointerContextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOnDeviceEndpointerContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x81u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHServerEndpointerContext);
        if (!PBReaderPlaceMark() || (MHSchemaMHServerEndpointerContextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setServerEndpointerContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x82u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHEndpointerUsed);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointerUsedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointerUsed:", v18, 0, 0);
        goto LABEL_210;
      case 0x83u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHEndpointDelayContext);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointDelayContextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointDelayContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x84u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHMitigationDecisionRecommended);
        if (!PBReaderPlaceMark() || (MHSchemaMHMitigationDecisionRecommendedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFinalMitigationRecommendation:", v18, 0, 0);
        goto LABEL_210;
      case 0x85u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHApplicationPlaybackAttempted);
        if (!PBReaderPlaceMark() || !MHSchemaMHApplicationPlaybackAttemptedReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setApplicationPlaybackAttempted:", v18, 0, 0);
        goto LABEL_210;
      case 0x86u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSiriLaunchRequestContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHSiriLaunchRequestContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriLaunchRequestContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x87u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHEndpointerAccessibleContext);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointerAccessibleContextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointerAccessibleContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x88u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHCarplayLanguageMismatch);
        if (!PBReaderPlaceMark() || (MHSchemaMHCarplayLanguageMismatchReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCarPlayLangaugeMismatched:", v18, 0, 0);
        goto LABEL_210;
      case 0x89u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHDarwinConnectedDeviceWakeContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHDarwinConnectedDeviceWakeContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDarwinConnectedDeviceWakeContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Au:
        unsigned int v18 = objc_alloc_init(MHSchemaMHOdldFalseTriggerMitigated);
        if (!PBReaderPlaceMark() || (MHSchemaMHOdldFalseTriggerMitigatedReadFrom(v18, a2, v21) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOdldFalseTriggerMitigated:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Bu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSpeakerFalseTriggerMitigated);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHSpeakerFalseTriggerMitigatedReadFrom(v18, a2, v22) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeakerFalseTriggerMitigated:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Cu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSiriDirectedSpeechDetectionFailed);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHSiriDirectedSpeechDetectionFailedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSiriDirectedSpeechDetectionFailed:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Du:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAudioDucked);
        if (!PBReaderPlaceMark() || (MHSchemaMHAudioDuckedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioDucked:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Eu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingFailed);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingFailedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioRecordingFailed:", v18, 0, 0);
        goto LABEL_210;
      case 0x8Fu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHRTSFalseRejectDetected);
        if (!PBReaderPlaceMark() || (MHSchemaMHRTSFalseRejectDetectedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRtsFalseRejectDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x90u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHTRPCreated);
        if (!PBReaderPlaceMark() || !MHSchemaMHTRPCreatedReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrpCreated:", v18, 0, 0);
        goto LABEL_210;
      case 0x91u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHUserSpeakingContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHUserSpeakingContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserSpeakingContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x92u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSpeechStopDetected);
        if (!PBReaderPlaceMark() || (MHSchemaMHSpeechStopDetectedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechStopDetected:", v18, 0, 0);
        goto LABEL_210;
      case 0x93u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSpeechDetectorContext);
        if (!PBReaderPlaceMark() || (MHSchemaMHSpeechDetectorContextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpeechDetectorContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x94u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHStoppedListeningForSpeechContinuation);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHStoppedListeningForSpeechContinuationReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStoppedListeningForSpeechContinuation:", v18, 0, 0);
        goto LABEL_210;
      case 0x95u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHUserEngagementFalseTriggerMitigationEvaluationContext);
        if (!PBReaderPlaceMark()
          || !MHSchemaMHUserEngagementFalseTriggerMitigationEvaluationContextReadFrom(v18, a2))
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserEngagementModelContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x96u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAttendingContext);
        if (!PBReaderPlaceMark() || !MHSchemaMHAttendingContextReadFrom(v18, a2)) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAttendingContext:", v18, 0, 0);
        goto LABEL_210;
      case 0x97u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHCrownPressed);
        if (!PBReaderPlaceMark() || (MHSchemaMHCrownPressedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCrownPressed:", v18, 0, 0);
        goto LABEL_210;
      case 0x98u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHRaiseToSpeakTriggered);
        if (!PBReaderPlaceMark() || (MHSchemaMHRaiseToSpeakTriggeredReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRtsTriggered:", v18, 0, 0);
        goto LABEL_210;
      case 0x99u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHRaiseToSpeakFirstPassPolicyTriggered);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHRaiseToSpeakFirstPassPolicyTriggeredReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRtsFirstPassPolicyTriggered:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Au:
        unsigned int v18 = objc_alloc_init(MHSchemaMHRaiseToSpeakSecondPassPolicyDecisionMade);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHRaiseToSpeakSecondPassPolicyDecisionMadeReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRtsSecondPassPolicyDecisionMade:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Bu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceProfileOnboarded);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceProfileOnboardedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceProfileOnboarded:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Cu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHSensorControlStatusReported);
        if (!PBReaderPlaceMark() || (MHSchemaMHSensorControlStatusReportedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSensorControlStatusReported:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Du:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceTriggerRePrompted);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerRePromptedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerRePrompted:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Eu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHAssistantDaemonAudioRecordingFailureInsufficientPriority);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAssistantDaemonAudioRecordingFailureInsufficientPriorityReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAssistantDaemonAudioRecordingFailureInsufficientPriority:", v18, 0, 0);
        goto LABEL_210;
      case 0x9Fu:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceProfileICloudSyncFinished);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceProfileICloudSyncFinishedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceProfileICloudSyncFinished:", v18, 0, 0);
        goto LABEL_210;
      case 0xA0u:
        unsigned int v18 = objc_alloc_init(MHSchemaMHVoiceTriggerRejectDetected);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerRejectDetectedReadFrom(v18, a2, v23) & 1) == 0) {
          goto LABEL_217;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerRejectDetected:", v18, 0, 0);
        goto LABEL_210;
      default:
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            unsigned int v18 = objc_alloc_init(SISchemaUUID);
            if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_217;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setMhId:", v18, 0, 0);
            goto LABEL_210;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_211:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unsigned int v18 = objc_alloc_init(MHSchemaMHClientEventMetadata);
        if PBReaderPlaceMark() && (MHSchemaMHClientEventMetadataReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v18, 0, 0);
LABEL_210:

          goto LABEL_211;
        }
LABEL_217:

        return 0;
    }
  }
}

uint64_t MHSchemaMHClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMhId:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHCoreSpeechPreprocessorCompletedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_84;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_84:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_87:
        objc_msgSend(a1, "setBeepLocation:", v27, v80, v81);
        goto LABEL_123;
      case 2u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v4;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v16 = v30++ >= 9;
              if (v16)
              {
                uint64_t v36 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v31;
        }
LABEL_92:
        objc_msgSend(a1, "setStatsComputed:", v36, v80, v81);
        goto LABEL_123;
      case 3u:
        uint64_t v37 = *v4;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
          *(void *)(a2 + v37) = v38 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setBeepPower:", a3, v80, v81);
        goto LABEL_123;
      case 4u:
        uint64_t v39 = *v4;
        unint64_t v40 = *(void *)(a2 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
          *(void *)(a2 + v39) = v40 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setSignalPower:", a3, v80, v81);
        goto LABEL_123;
      case 5u:
        uint64_t v41 = *v4;
        unint64_t v42 = *(void *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v42);
          *(void *)(a2 + v41) = v42 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setOriginalPower:", a3, v80, v81);
        goto LABEL_123;
      case 6u:
        uint64_t v43 = *v4;
        unint64_t v44 = *(void *)(a2 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFFBLL && v44 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v44);
          *(void *)(a2 + v43) = v44 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setAbsMaxVal:", a3, v80, v81);
        goto LABEL_123;
      case 7u:
        uint64_t v45 = *v4;
        unint64_t v46 = *(void *)(a2 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFFBLL && v46 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v46);
          *(void *)(a2 + v45) = v46 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setAboveNinetyFivepcOfMax:", a3, v80, v81);
        goto LABEL_123;
      case 8u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v4;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v16 = v48++ >= 9;
              if (v16)
              {
                uint64_t v54 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v49;
        }
LABEL_97:
        objc_msgSend(a1, "setNumTotalInputSamples:", v54, v80, v81);
        goto LABEL_123;
      case 9u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        while (2)
        {
          uint64_t v58 = *v4;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v8) + v59);
            *(void *)(a2 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v16 = v56++ >= 9;
              if (v16)
              {
                uint64_t v62 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = v57;
        }
LABEL_102:
        objc_msgSend(a1, "setNumTotalOutputSamples:", v62, v80, v81);
        goto LABEL_123;
      case 0xAu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        while (2)
        {
          uint64_t v66 = *v4;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v8) + v67);
            *(void *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v16 = v64++ >= 9;
              if (v16)
              {
                uint64_t v70 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v65;
        }
LABEL_107:
        objc_msgSend(a1, "setInitialContinousZeros:", v70, v80, v81);
        goto LABEL_123;
      case 0xBu:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v4;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
            *(void *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v16 = v72++ >= 9;
              if (v16)
              {
                uint64_t v78 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v78 = 0;
        }
        else {
          uint64_t v78 = v73;
        }
LABEL_112:
        objc_msgSend(a1, "setMaxContinousZeros:", v78, v80, v81);
        goto LABEL_123;
      case 0xCu:
        uint64_t v79 = objc_alloc_init(MHSchemaMHCoreSpeechZeroFilterRunPair);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (PBReaderPlaceMark() && MHSchemaMHCoreSpeechZeroFilterRunPairReadFrom(v79, a2))
        {
          PBReaderRecallMark();
          if (v79) {
            objc_msgSend(a1, "addMidSegmentContinousZeros:", v79, 0, 0);
          }

LABEL_123:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_123;
    }
  }
}

uint64_t MHSchemaMHCoreSpeechZeroFilterRunPairReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setZeroRunStartingSample:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setZeroRunLength:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHDarwinConnectedDeviceWakeContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(MHSchemaMHDarwinConnectedDeviceWakeFailed);
        if (!PBReaderPlaceMark() || (MHSchemaMHDarwinConnectedDeviceWakeFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(MHSchemaMHDarwinConnectedDeviceWakeStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHDarwinConnectedDeviceWakeStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(MHSchemaMHDarwinConnectedDeviceWakeEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHDarwinConnectedDeviceWakeEndedReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHDarwinConnectedDeviceWakeEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHDarwinConnectedDeviceWakeFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHDarwinConnectedDeviceWakeStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHEndpointDelayContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_57;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_60:
          [a1 setSpeakingStartInNs:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_65:
          [a1 setSpeakingEndInNs:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_70:
          [a1 setEndpointDelayInNs:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_75:
          [a1 setEndpointModelDelayInNs:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v49 = *v3;
        unint64_t v50 = *(void *)(a2 + v49);
        if (v50 == -1 || v50 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
        *(void *)(a2 + v49) = v50 + 1;
        v48 |= (unint64_t)(v51 & 0x7F) << v46;
        if ((v51 & 0x80) == 0) {
          goto LABEL_77;
        }
        v46 += 7;
        BOOL v14 = v47++ >= 9;
        if (v14)
        {
          uint64_t v52 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      uint64_t v52 = *(unsigned char *)(a2 + *v5) ? 0 : v48;
LABEL_80:
      [a1 setEndpointDelayInNsV2:v52];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHEndpointDetectedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_116;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_119;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_116:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_119:
        [a1 setEndpointerType:v27];
        goto LABEL_113;
      case 2u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v4;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v16 = v30++ >= 9;
              if (v16)
              {
                uint64_t v36 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v31;
        }
LABEL_124:
        [a1 setEndpointAudioDurationInNs:v36];
        goto LABEL_113;
      case 3u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (2)
        {
          uint64_t v40 = *v4;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v8) + v41);
            *(void *)(a2 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v16 = v38++ >= 9;
              if (v16)
              {
                uint64_t v44 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v39;
        }
LABEL_129:
        [a1 setFirstBufferTimeInNs:v44];
        goto LABEL_113;
      case 4u:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        while (2)
        {
          uint64_t v48 = *v4;
          uint64_t v49 = *(void *)(a2 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v8) + v49);
            *(void *)(a2 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v16 = v46++ >= 9;
              if (v16)
              {
                uint64_t v52 = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v52 = 0;
        }
        else {
          uint64_t v52 = v47;
        }
LABEL_134:
        [a1 setEndpointedBufferTimeInNs:v52];
        goto LABEL_113;
      case 5u:
        char v53 = objc_alloc_init(MHSchemaMHEndpointFeaturesAtEndpoint);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointFeaturesAtEndpointReadFrom(v53, a2, v54) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointFeaturesAtEndpoint:", v53, 0, 0);
        goto LABEL_112;
      case 6u:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        while (2)
        {
          uint64_t v58 = *v4;
          uint64_t v59 = *(void *)(a2 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v8) + v59);
            *(void *)(a2 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v16 = v56++ >= 9;
              if (v16)
              {
                uint64_t v62 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = v57;
        }
LABEL_139:
        [a1 setEndpointerDecisionLagInNs:v62];
        goto LABEL_113;
      case 7u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        while (2)
        {
          uint64_t v66 = *v4;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v8) + v67);
            *(void *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v16 = v64++ >= 9;
              if (v16)
              {
                uint64_t v70 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v65;
        }
LABEL_144:
        [a1 setExtraDelayInNs:v70];
        goto LABEL_113;
      case 8u:
        char v53 = objc_alloc_init(SISchemaVersion);
        if (!PBReaderPlaceMark() || (SISchemaVersionReadFrom(v53, a2) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndpointModelConfigVersion:", v53, 0, 0);
        goto LABEL_112;
      case 9u:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v4;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
            *(void *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v16 = v72++ >= 9;
              if (v16)
              {
                uint64_t v73 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v73 = 0;
        }
LABEL_148:
        [a1 setDerivedBufferTimeFromHistoricalAudio:v73 != 0];
        goto LABEL_113;
      case 0xAu:
        uint64_t v78 = *v4;
        unint64_t v79 = *(void *)(a2 + v78);
        if (v79 <= 0xFFFFFFFFFFFFFFFBLL && v79 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v79);
          *(void *)(a2 + v78) = v79 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setEndpointerThreshold:a3];
        goto LABEL_113;
      case 0xBu:
        uint64_t v80 = *v4;
        unint64_t v81 = *(void *)(a2 + v80);
        if (v81 <= 0xFFFFFFFFFFFFFFFBLL && v81 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v81);
          *(void *)(a2 + v80) = v81 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setEndpointerScore:a3];
        goto LABEL_113;
      case 0xCu:
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        while (2)
        {
          uint64_t v85 = *v4;
          uint64_t v86 = *(void *)(a2 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(a2 + *v8) + v86);
            *(void *)(a2 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v16 = v83++ >= 9;
              if (v16)
              {
                uint64_t v89 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v89 = 0;
        }
        else {
          uint64_t v89 = v84;
        }
LABEL_153:
        [a1 setAudioSkippedDurationInNs:v89];
        goto LABEL_113;
      case 0xDu:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        while (2)
        {
          uint64_t v93 = *v4;
          uint64_t v94 = *(void *)(a2 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(a2 + *v8) + v94);
            *(void *)(a2 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              BOOL v16 = v91++ >= 9;
              if (v16)
              {
                uint64_t v97 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v97 = 0;
        }
        else {
          uint64_t v97 = v92;
        }
LABEL_158:
        [a1 setEndpointResetPositionInNs:v97];
        goto LABEL_113;
      case 0xEu:
        char v53 = objc_alloc_init(MHSchemaMHStatisticDistributionInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHStatisticDistributionInfoReadFrom(v53, a2, v98) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrFeatureLatencyDistribution:", v53, 0, 0);
        goto LABEL_112;
      case 0xFu:
        char v53 = objc_alloc_init(MHSchemaMHEndpointerTimeoutMetadata);
        if (!PBReaderPlaceMark() || (MHSchemaMHEndpointerTimeoutMetadataReadFrom(v53, a2) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTimeoutMetadata:", v53, 0, 0);
        goto LABEL_112;
      case 0x10u:
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v101 = 0;
        while (2)
        {
          uint64_t v102 = *v4;
          uint64_t v103 = *(void *)(a2 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(a2 + *v8) + v103);
            *(void *)(a2 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v16 = v100++ >= 9;
              if (v16)
              {
                uint64_t v106 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v106 = 0;
        }
        else {
          uint64_t v106 = v101;
        }
LABEL_163:
        [a1 setTrpDetectionType:v106];
        goto LABEL_113;
      case 0x11u:
        char v53 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v53, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrpId:", v53, 0, 0);
LABEL_112:

LABEL_113:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_169:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_113;
    }
  }
}

uint64_t MHSchemaMHEndpointFeaturesAtEndpointReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_89;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_92;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_89:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_92:
          [a1 setTrailingSilenceDurationInNs:v27];
          continue;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (2)
          {
            uint64_t v32 = *v4;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v16 = v30++ >= 9;
                if (v16)
                {
                  uint64_t v36 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v36 = 0;
          }
          else {
            uint64_t v36 = v31;
          }
LABEL_97:
          [a1 setClientSilenceFramesCountInNs:v36];
          continue;
        case 3u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setEndOfSentenceLikelihood:a3];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v4;
            uint64_t v43 = *(void *)(a2 + v42);
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v8) + v43);
              *(void *)(a2 + v42) = v44;
              v41 |= (unint64_t)(v45 & 0x7F) << v39;
              if (v45 < 0)
              {
                v39 += 7;
                BOOL v16 = v40++ >= 9;
                if (v16)
                {
                  uint64_t v46 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v46 = 0;
          }
          else {
            uint64_t v46 = v41;
          }
LABEL_102:
          [a1 setWordCount:v46];
          continue;
        case 5u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          while (2)
          {
            uint64_t v50 = *v4;
            uint64_t v51 = *(void *)(a2 + v50);
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
              *(void *)(a2 + v50) = v52;
              v49 |= (unint64_t)(v53 & 0x7F) << v47;
              if (v53 < 0)
              {
                v47 += 7;
                BOOL v16 = v48++ >= 9;
                if (v16)
                {
                  uint64_t v54 = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v54 = 0;
          }
          else {
            uint64_t v54 = v49;
          }
LABEL_107:
          [a1 setServerFeaturesLatencyInNs:v54];
          continue;
        case 6u:
          uint64_t v55 = *v4;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 <= 0xFFFFFFFFFFFFFFFBLL && v56 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v56);
            *(void *)(a2 + v55) = v56 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setClientSilenceProbability:a3];
          continue;
        case 7u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          while (2)
          {
            uint64_t v60 = *v4;
            uint64_t v61 = *(void *)(a2 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v8) + v61);
              *(void *)(a2 + v60) = v62;
              v59 |= (unint64_t)(v63 & 0x7F) << v57;
              if (v63 < 0)
              {
                v57 += 7;
                BOOL v16 = v58++ >= 9;
                if (v16)
                {
                  uint64_t v64 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v64 = 0;
          }
          else {
            uint64_t v64 = v59;
          }
LABEL_112:
          [a1 setRcTrailingSilenceDuration:v64];
          continue;
        case 8u:
          uint64_t v65 = *v4;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 <= 0xFFFFFFFFFFFFFFFBLL && v66 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v66);
            *(void *)(a2 + v65) = v66 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setRcEndOfSentenceLikelihood:a3];
          continue;
        case 9u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v4;
            uint64_t v71 = *(void *)(a2 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v8) + v71);
              *(void *)(a2 + v70) = v72;
              v69 |= (unint64_t)(v73 & 0x7F) << v67;
              if (v73 < 0)
              {
                v67 += 7;
                BOOL v16 = v68++ >= 9;
                if (v16)
                {
                  uint64_t v74 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v74 = 0;
          }
          else {
            uint64_t v74 = v69;
          }
LABEL_117:
          [a1 setRcWordCount:v74];
          continue;
        case 0xAu:
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v77 = 0;
          break;
        case 0xBu:
          uint64_t v83 = *v4;
          unint64_t v84 = *(void *)(a2 + v83);
          if (v84 <= 0xFFFFFFFFFFFFFFFBLL && v84 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v84);
            *(void *)(a2 + v83) = v84 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSilencePosterior:a3];
          continue;
        case 0xCu:
          uint64_t v85 = *v4;
          unint64_t v86 = *(void *)(a2 + v85);
          if (v86 <= 0xFFFFFFFFFFFFFFFBLL && v86 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v86);
            *(void *)(a2 + v85) = v86 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setAcousticEndpointerScore:a3];
          continue;
        case 0xDu:
          uint64_t v87 = *v4;
          unint64_t v88 = *(void *)(a2 + v87);
          if (v88 <= 0xFFFFFFFFFFFFFFFBLL && v88 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v88);
            *(void *)(a2 + v87) = v88 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSilencePosteriorFrameCountInNs:a3];
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v78 = *v4;
        uint64_t v79 = *(void *)(a2 + v78);
        unint64_t v80 = v79 + 1;
        if (v79 == -1 || v80 > *(void *)(a2 + *v5)) {
          break;
        }
        char v81 = *(unsigned char *)(*(void *)(a2 + *v8) + v79);
        *(void *)(a2 + v78) = v80;
        v77 |= (unint64_t)(v81 & 0x7F) << v75;
        if ((v81 & 0x80) == 0) {
          goto LABEL_119;
        }
        v75 += 7;
        BOOL v16 = v76++ >= 9;
        if (v16)
        {
          uint64_t v82 = 0;
          goto LABEL_122;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_119:
      uint64_t v82 = *(unsigned char *)(a2 + *v6) ? 0 : v77;
LABEL_122:
      [a1 setRcServerFeaturesLatency:v82];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHEndpointLatencyInfoReportedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_42;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_45:
        [a1 setFirstPacketLatencyInNs:v23];
        goto LABEL_46;
      case 2u:
        unint64_t v25 = objc_alloc_init(MHSchemaMHTrailingPacketLatencyInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHTrailingPacketLatencyInfoReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrailingPacketLatencyInfo:", v25, 0, 0);
        goto LABEL_40;
      case 3u:
        unint64_t v25 = objc_alloc_init(MHSchemaMHTrailingPacketLatencyInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHTrailingPacketLatencyInfoReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoreSpeechTrailingPacketLatencyInfo:", v25, 0, 0);
        goto LABEL_40;
      case 4u:
        unint64_t v25 = objc_alloc_init(MHSchemaMHStatisticDistributionInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHStatisticDistributionInfoReadFrom(v25, a2, v26) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrailingPacketLatency:", v25, 0, 0);
        goto LABEL_40;
      case 5u:
        unint64_t v25 = objc_alloc_init(MHSchemaMHStatisticDistributionInfo);
        if PBReaderPlaceMark() && (MHSchemaMHStatisticDistributionInfoReadFrom(v25, a2, v27))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCoreSpeechTrailingPacketLatency:", v25, 0, 0);
LABEL_40:

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_46;
    }
  }
}

uint64_t MHSchemaMHEndpointerAccessibleContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setAccessibleEndpointerLevel:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHEndpointerTimeoutMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v26 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_44:
        [a1 setIsTimeout:v26 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setTimeoutThresholdInNs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHEndpointerUsedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setEndpointer:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHLatticeFalseTriggerMitigationEndedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        uint64_t v22 = *v4;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setThreshold:a3];
      }
      else if ((v11 >> 3) == 1)
      {
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setScore:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL MHSchemaMHLatticeFalseTriggerMitigationEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        int v18 = objc_alloc_init(MHSchemaMHLatticeFalseTriggerMitigationFailed);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHLatticeFalseTriggerMitigationFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        int v18 = objc_alloc_init(MHSchemaMHLatticeFalseTriggerMitigationStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHLatticeFalseTriggerMitigationStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(MHSchemaMHLatticeFalseTriggerMitigationEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHLatticeFalseTriggerMitigationEndedReadFrom(v18, a2, v19) & 1) == 0)
    {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHLatticeFalseTriggerMitigationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHLatticeFalseTriggerMitigationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = PBReaderReadString();
        [a1 setModelVersion:v17];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHMitigationDecisionRecommendedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setIsMitigationRecommended:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHOdldFalseTriggerMitigatedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v20 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setModelVersion:v20];
        goto LABEL_42;
      case 2u:
        uint64_t v22 = *v4;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setOdldScore:a3];
        goto LABEL_67;
      case 3u:
        uint64_t v24 = *v4;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v25);
          *(void *)(a2 + v24) = v25 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setOdldScoreThreshold:a3];
        goto LABEL_67;
      case 4u:
        PBReaderReadString();
        uint64_t v20 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setErrorMessage:v20];
        goto LABEL_42;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v4;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v8) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v16 = v27++ >= 9;
              if (v16)
              {
                uint64_t v33 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v28;
        }
LABEL_56:
        [a1 setErrorCode:v33];
        goto LABEL_67;
      case 6u:
        uint64_t v20 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAnchorRequestId:", v20, 0, 0);
        goto LABEL_42;
      case 7u:
        uint64_t v20 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPreviousRequestId:", v20, 0, 0);
LABEL_42:

LABEL_67:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_69:

        return 0;
      case 8u:
        uint64_t v34 = *v4;
        unint64_t v35 = *(void *)(a2 + v34);
        if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v35);
          *(void *)(a2 + v34) = v35 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setAnchorSocialScore:a3];
        goto LABEL_67;
      case 9u:
        uint64_t v36 = *v4;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v37);
          *(void *)(a2 + v36) = v37 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setSocialScore:a3];
        goto LABEL_67;
      case 0xAu:
        uint64_t v38 = *v4;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFFBLL && v39 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v39);
          *(void *)(a2 + v38) = v39 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setConversationalOdldScore:a3];
        goto LABEL_67;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_67;
    }
  }
}

uint64_t MHSchemaMHOnDeviceEndpointerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setEnabled:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHServerEndpointerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setEnabled:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHSiriDirectedSpeechDetectionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setErrorMessage:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHSiriLaunchRequestContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MHSchemaMHSiriLaunchRequestStarted);
        if (!PBReaderPlaceMark() || (MHSchemaMHSiriLaunchRequestStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(MHSchemaMHSiriLaunchRequestEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHSiriLaunchRequestEndedReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHSiriLaunchRequestEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHSiriLaunchRequestStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHSpeakerFalseTriggerMitigatedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = PBReaderReadString();
          [a1 setModelVersion:v20];
          goto LABEL_29;
        case 2u:
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
            *(void *)(a2 + v22) = v23 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSpeakerMatchScore:a3];
          continue;
        case 3u:
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)(a2 + v24);
          if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v25);
            *(void *)(a2 + v24) = v25 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setThresholdScore:a3];
          continue;
        case 4u:
          uint64_t v20 = PBReaderReadString();
          [a1 setErrorMessage:v20];
LABEL_29:

          continue;
        case 5u:
          uint64_t v26 = *v4;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v5))
          {
            double v28 = *(double *)(*(void *)(a2 + *v8) + v27);
            *(void *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            double v28 = 0.0;
          }
          [a1 setProcessedAudioDurationInNs:v28];
          continue;
        case 6u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v32 = *v4;
        uint64_t v33 = *(void *)(a2 + v32);
        unint64_t v34 = v33 + 1;
        if (v33 == -1 || v34 > *(void *)(a2 + *v5)) {
          break;
        }
        char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
        *(void *)(a2 + v32) = v34;
        v31 |= (unint64_t)(v35 & 0x7F) << v29;
        if ((v35 & 0x80) == 0) {
          goto LABEL_41;
        }
        v29 += 7;
        BOOL v16 = v30++ >= 9;
        if (v16)
        {
          uint64_t v36 = 0;
          goto LABEL_44;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_41:
      uint64_t v36 = *(unsigned char *)(a2 + *v6) ? 0 : v31;
LABEL_44:
      [a1 setErrorCode:v36];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHStatisticDistributionInfoReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_74;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_77;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_74:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_77:
          [a1 setNum:v27];
          continue;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (2)
          {
            uint64_t v32 = *v4;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v16 = v30++ >= 9;
                if (v16)
                {
                  uint64_t v36 = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v36 = 0;
          }
          else {
            uint64_t v36 = v31;
          }
LABEL_82:
          [a1 setMax:v36];
          continue;
        case 3u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v4;
            uint64_t v41 = *(void *)(a2 + v40);
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v8) + v41);
              *(void *)(a2 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v16 = v38++ >= 9;
                if (v16)
                {
                  uint64_t v44 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v44 = 0;
          }
          else {
            uint64_t v44 = v39;
          }
LABEL_87:
          [a1 setMin:v44];
          continue;
        case 4u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v4;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v8) + v49);
              *(void *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v16 = v46++ >= 9;
                if (v16)
                {
                  uint64_t v52 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v47;
          }
LABEL_92:
          [a1 setAvg:v52];
          continue;
        case 5u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v4;
            uint64_t v57 = *(void *)(a2 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v59 = *(unsigned char *)(*(void *)(a2 + *v8) + v57);
              *(void *)(a2 + v56) = v58;
              v55 |= (unint64_t)(v59 & 0x7F) << v53;
              if (v59 < 0)
              {
                v53 += 7;
                BOOL v16 = v54++ >= 9;
                if (v16)
                {
                  uint64_t v60 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v60 = 0;
          }
          else {
            uint64_t v60 = v55;
          }
LABEL_97:
          [a1 setMedian:v60];
          continue;
        case 6u:
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          while (2)
          {
            uint64_t v64 = *v4;
            uint64_t v65 = *(void *)(a2 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v8) + v65);
              *(void *)(a2 + v64) = v66;
              v63 |= (unint64_t)(v67 & 0x7F) << v61;
              if (v67 < 0)
              {
                v61 += 7;
                BOOL v16 = v62++ >= 9;
                if (v16)
                {
                  uint64_t v68 = 0;
                  goto LABEL_102;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v68 = 0;
          }
          else {
            uint64_t v68 = v63;
          }
LABEL_102:
          [a1 setP95:v68];
          continue;
        case 7u:
          uint64_t v69 = *v4;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 <= 0xFFFFFFFFFFFFFFFBLL && v70 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v70);
            *(void *)(a2 + v69) = v70 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setStd:a3];
          continue;
        case 8u:
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v74 = *v4;
        uint64_t v75 = *(void *)(a2 + v74);
        unint64_t v76 = v75 + 1;
        if (v75 == -1 || v76 > *(void *)(a2 + *v5)) {
          break;
        }
        char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
        *(void *)(a2 + v74) = v76;
        v73 |= (unint64_t)(v77 & 0x7F) << v71;
        if ((v77 & 0x80) == 0) {
          goto LABEL_104;
        }
        v71 += 7;
        BOOL v16 = v72++ >= 9;
        if (v16)
        {
          uint64_t v78 = 0;
          goto LABEL_107;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_104:
      uint64_t v78 = *(unsigned char *)(a2 + *v6) ? 0 : v73;
LABEL_107:
      [a1 setWarmup:v78];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHTrailingPacketLatencyInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_71;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_74;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_71:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_74:
          [a1 setNum:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_79:
          [a1 setMax:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_84;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_84:
          [a1 setMin:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_89;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_89:
          [a1 setAvg:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_94:
          [a1 setMedian:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_99;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_99:
          [a1 setP95:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v63 = *v3;
        unint64_t v64 = *(void *)(a2 + v63);
        if (v64 == -1 || v64 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
        *(void *)(a2 + v63) = v64 + 1;
        v62 |= (unint64_t)(v65 & 0x7F) << v60;
        if ((v65 & 0x80) == 0) {
          goto LABEL_101;
        }
        v60 += 7;
        BOOL v14 = v61++ >= 9;
        if (v14)
        {
          uint64_t v66 = 0;
          goto LABEL_104;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_101:
      uint64_t v66 = *(unsigned char *)(a2 + *v5) ? 0 : v62;
LABEL_104:
      [a1 setStd:v66];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHUnintendedResponseSuppressionEndedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v6))
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = *v4;
          uint64_t v13 = *(void *)(a2 + v12);
          unint64_t v14 = v13 + 1;
          if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
          *(void *)(a2 + v12) = v14;
          v11 |= (unint64_t)(v15 & 0x7F) << v9;
          if ((v15 & 0x80) == 0) {
            goto LABEL_12;
          }
          v9 += 7;
          if (v10++ >= 9)
          {
            unint64_t v11 = 0;
            uint64_t v17 = *v6;
            int v18 = *(unsigned __int8 *)(a2 + v17);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        if (*(unsigned char *)(a2 + v17)) {
          unint64_t v11 = 0;
        }
LABEL_14:
        if (v18) {
          BOOL v19 = 1;
        }
        else {
          BOOL v19 = (v11 & 7) == 4;
        }
        if (!v19)
        {
          switch((v11 >> 3))
          {
            case 1u:
              uint64_t v20 = PBReaderReadString();
              [a1 setModelVersion:v20];
              goto LABEL_27;
            case 2u:
              uint64_t v21 = *v4;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v22);
                *(void *)(a2 + v21) = v22 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setScore:a3];
              goto LABEL_44;
            case 3u:
              uint64_t v23 = *v4;
              unint64_t v24 = *(void *)(a2 + v23);
              if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
                *(void *)(a2 + v23) = v24 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setThreshold:a3];
              goto LABEL_44;
            case 4u:
              uint64_t v20 = PBReaderReadString();
              [a1 setMitigationAssetVersion:v20];
LABEL_27:

              goto LABEL_44;
            case 5u:
              uint64_t v25 = *v4;
              unint64_t v26 = *(void *)(a2 + v25);
              if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
                *(void *)(a2 + v25) = v26 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setSpeakerIDThreshold:a3];
              goto LABEL_44;
            case 6u:
              uint64_t v27 = *v4;
              unint64_t v28 = *(void *)(a2 + v27);
              if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v28);
                *(void *)(a2 + v27) = v28 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setSpeakerIdScoreThreshold:a3];
              goto LABEL_44;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_44:
              if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
                return *(unsigned char *)(a2 + *v6) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL MHSchemaMHUnintendedResponseSuppressionEvaluationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        int v18 = objc_alloc_init(MHSchemaMHUnintendedResponseSuppressionFailed);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHUnintendedResponseSuppressionFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        int v18 = objc_alloc_init(MHSchemaMHUnintendedResponseSuppressionStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHUnintendedResponseSuppressionStartedReadFrom(v18, a2) & 1) == 0)
        {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(MHSchemaMHUnintendedResponseSuppressionEnded);
    if (!PBReaderPlaceMark()
      || (MHSchemaMHUnintendedResponseSuppressionEndedReadFrom(v18, a2, v19) & 1) == 0)
    {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHUnintendedResponseSuppressionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setErrorCode:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHUnintendedResponseSuppressionStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_53;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_56:
        [a1 setNumAsrRecords:v23];
        goto LABEL_67;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_61:
        [a1 setNumTokensTopPath:v31];
        goto LABEL_67;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_66:
        [a1 setTrailingSilenceDurationInNs:v38];
        goto LABEL_67;
      case 4u:
        char v39 = objc_alloc_init(MHSchemaMHAcousticFalseTriggerMitigationScoreGenerated);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHAcousticFalseTriggerMitigationScoreGeneratedReadFrom(v39, a2, v40) & 1) == 0)
        {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAftmScore:", v39, 0, 0);
        goto LABEL_51;
      case 5u:
        char v39 = objc_alloc_init(MHSchemaMHLatticeFalseTriggerMitigationEnded);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHLatticeFalseTriggerMitigationEndedReadFrom(v39, a2, v41) & 1) == 0)
        {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLrnnScore:", v39, 0, 0);
        goto LABEL_51;
      case 6u:
        char v39 = objc_alloc_init(MHSchemaMHUserEngagementFalseTriggerMitigationScoreGenerated);
        if (PBReaderPlaceMark()
          && (MHSchemaMHUserEngagementFalseTriggerMitigationScoreGeneratedReadFrom(v39, a2, v42) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUemScore:", v39, 0, 0);
LABEL_51:

LABEL_67:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_69:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_67;
    }
  }
}

BOOL MHSchemaMHVoiceAdBlockerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(MHSchemaMHAdMatchingFailed);
        if (!PBReaderPlaceMark() || (MHSchemaMHAdMatchingFailedReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(MHSchemaMHAdMatchingStarted);
        if (!PBReaderPlaceMark() || (MHSchemaMHAdMatchingStartedReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(MHSchemaMHAdMatchingEnded);
    if (!PBReaderPlaceMark() || (MHSchemaMHAdMatchingEndedReadFrom(v18, a2, v19) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setEnded:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MHSchemaMHVoiceTriggerContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerSecondPassStarted);
        if (!PBReaderPlaceMark()
          || (MHSchemaMHVoiceTriggerSecondPassStartedReadFrom(v17, a2, v18) & 1) == 0)
        {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        unint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerSecondPassTriggered);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerSecondPassTriggeredReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        unint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerSecondPassRejected);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerSecondPassRejectedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        unint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerSecondPassCancelled);
        if PBReaderPlaceMark() && (MHSchemaMHVoiceTriggerSecondPassCancelledReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCancelled:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t MHSchemaMHVoiceTriggerEventInfoReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      unint64_t v13 = *(void *)(a2 + v12);
      if (v13 == -1 || v13 >= *(void *)(a2 + *v5)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v13 + 1;
      v11 |= (unint64_t)(v14 & 0x7F) << v9;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v15 = v10++ >= 9;
      if (v15)
      {
        unint64_t v11 = 0;
        uint64_t v16 = *v6;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v16 = *v6;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v17 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v4;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v5)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_515;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_518;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_515:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_518:
        [a1 setSecondPassAnalyerStartSampleCount:v26];
        goto LABEL_492;
      case 2u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v4;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_523;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v29;
        }
LABEL_523:
        [a1 setSecondPassAnalyerEndSampleCount:v34];
        goto LABEL_492;
      case 0xEu:
        uint64_t v36 = *v4;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v37);
          *(void *)(a2 + v36) = v37 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setSatScore:a3];
        goto LABEL_492;
      case 0xFu:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (2)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)(a2 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v8) + v42);
            *(void *)(a2 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v15 = v39++ >= 9;
              if (v15)
              {
                uint64_t v45 = 0;
                goto LABEL_528;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v40;
        }
LABEL_528:
        [a1 setSatNumTrainingUtterances:v45];
        goto LABEL_492;
      case 0x10u:
        uint64_t v46 = *v4;
        unint64_t v47 = *(void *)(a2 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v47);
          *(void *)(a2 + v46) = v47 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setSatThreshold:a3];
        goto LABEL_492;
      case 0x11u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        while (2)
        {
          uint64_t v51 = *v4;
          uint64_t v52 = *(void *)(a2 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v8) + v52);
            *(void *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                uint64_t v50 = 0;
                goto LABEL_532;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v50 = 0;
        }
LABEL_532:
        [a1 setSatTriggered:v50 != 0];
        goto LABEL_492;
      case 0x12u:
        uint64_t v55 = *v4;
        unint64_t v56 = *(void *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFFBLL && v56 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v56);
          *(void *)(a2 + v55) = v56 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTdSpeakerRecognizerScore:a3];
        goto LABEL_492;
      case 0x13u:
        uint64_t v57 = *v4;
        unint64_t v58 = *(void *)(a2 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFFBLL && v58 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v58);
          *(void *)(a2 + v57) = v58 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTdSpeakerRecognizerCombinedScore:a3];
        goto LABEL_492;
      case 0x14u:
        uint64_t v59 = *v4;
        unint64_t v60 = *(void *)(a2 + v59);
        if (v60 <= 0xFFFFFFFFFFFFFFFBLL && v60 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v60);
          *(void *)(a2 + v59) = v60 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTdSpeakerRecognizerCombinedThreshold:a3];
        goto LABEL_492;
      case 0x15u:
        uint64_t v61 = *v4;
        unint64_t v62 = *(void *)(a2 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v62);
          *(void *)(a2 + v61) = v62 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTdSpeakerRecognizerCombinationWeight:a3];
        goto LABEL_492;
      case 0x16u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        while (2)
        {
          uint64_t v66 = *v4;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v8) + v67);
            *(void *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v15 = v64++ >= 9;
              if (v15)
              {
                uint64_t v70 = 0;
                goto LABEL_537;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v65;
        }
LABEL_537:
        [a1 setBiometricClue:v70];
        goto LABEL_492;
      case 0x17u:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v4;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
            *(void *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v15 = v72++ >= 9;
              if (v15)
              {
                uint64_t v73 = 0;
                goto LABEL_541;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v73 = 0;
        }
LABEL_541:
        [a1 setSatBeingTrained:v73 != 0];
        goto LABEL_492;
      case 0x18u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v4;
          uint64_t v82 = *(void *)(a2 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v8) + v82);
            *(void *)(a2 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v15 = v79++ >= 9;
              if (v15)
              {
                uint64_t v85 = 0;
                goto LABEL_546;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v85 = 0;
        }
        else {
          uint64_t v85 = v80;
        }
LABEL_546:
        [a1 setLastConsecutivePHSRejects:v85];
        goto LABEL_492;
      case 0x19u:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        while (2)
        {
          uint64_t v89 = *v4;
          uint64_t v90 = *(void *)(a2 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(a2 + *v8) + v90);
            *(void *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v15 = v87++ >= 9;
              if (v15)
              {
                uint64_t v93 = 0;
                goto LABEL_551;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v93 = 0;
        }
        else {
          uint64_t v93 = v88;
        }
LABEL_551:
        [a1 setDeltaTimeInNsFromlastPHSReject:v93];
        goto LABEL_492;
      case 0x1Au:
        uint64_t v94 = *v4;
        unint64_t v95 = *(void *)(a2 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFFBLL && v95 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v95);
          *(void *)(a2 + v94) = v95 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTriggerExplicitSatScore:a3];
        goto LABEL_492;
      case 0x1Bu:
        uint64_t v96 = *v4;
        unint64_t v97 = *(void *)(a2 + v96);
        if (v97 <= 0xFFFFFFFFFFFFFFFBLL && v97 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v97);
          *(void *)(a2 + v96) = v97 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTriggerExplicitTDSRSatScore:a3];
        goto LABEL_492;
      case 0x1Cu:
        uint64_t v98 = *v4;
        unint64_t v99 = *(void *)(a2 + v98);
        if (v99 <= 0xFFFFFFFFFFFFFFFBLL && v99 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v99);
          *(void *)(a2 + v98) = v99 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setShadowMicScore:a3];
        goto LABEL_492;
      case 0x1Du:
        uint64_t v100 = *v4;
        unint64_t v101 = *(void *)(a2 + v100);
        if (v101 <= 0xFFFFFFFFFFFFFFFBLL && v101 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v101);
          *(void *)(a2 + v100) = v101 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setShadowMicScoreThresholdForVAD:a3];
        goto LABEL_492;
      case 0x1Eu:
        uint64_t v102 = *v4;
        unint64_t v103 = *(void *)(a2 + v102);
        if (v103 <= 0xFFFFFFFFFFFFFFFBLL && v103 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v103);
          *(void *)(a2 + v102) = v103 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRemoteMicVADScore:a3];
        goto LABEL_492;
      case 0x1Fu:
        uint64_t v104 = *v4;
        unint64_t v105 = *(void *)(a2 + v104);
        if (v105 <= 0xFFFFFFFFFFFFFFFBLL && v105 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v105);
          *(void *)(a2 + v104) = v105 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRemoteMicVADThreshold:a3];
        goto LABEL_492;
      case 0x20u:
        uint64_t v106 = *v4;
        unint64_t v107 = *(void *)(a2 + v106);
        if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v107);
          *(void *)(a2 + v106) = v107 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRemoteMicVADMyriadThreshold:a3];
        goto LABEL_492;
      case 0x21u:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        while (2)
        {
          uint64_t v111 = *v4;
          uint64_t v112 = *(void *)(a2 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v8) + v112);
            *(void *)(a2 + v111) = v113;
            v110 |= (unint64_t)(v114 & 0x7F) << v108;
            if (v114 < 0)
            {
              v108 += 7;
              BOOL v15 = v109++ >= 9;
              if (v15)
              {
                uint64_t v115 = 0;
                goto LABEL_556;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v115 = 0;
        }
        else {
          uint64_t v115 = v110;
        }
LABEL_556:
        [a1 setEnhancedCarplayTriggerMode:v115];
        goto LABEL_492;
      case 0x22u:
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        while (2)
        {
          uint64_t v119 = *v4;
          uint64_t v120 = *(void *)(a2 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(a2 + *v8) + v120);
            *(void *)(a2 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v15 = v117++ >= 9;
              if (v15)
              {
                uint64_t v123 = 0;
                goto LABEL_561;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v123 = 0;
        }
        else {
          uint64_t v123 = v118;
        }
LABEL_561:
        [a1 setTriggerStartSampleCount:v123];
        goto LABEL_492;
      case 0x23u:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v126 = 0;
        while (2)
        {
          uint64_t v127 = *v4;
          uint64_t v128 = *(void *)(a2 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(a2 + *v8) + v128);
            *(void *)(a2 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              BOOL v15 = v125++ >= 9;
              if (v15)
              {
                uint64_t v131 = 0;
                goto LABEL_566;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v131 = 0;
        }
        else {
          uint64_t v131 = v126;
        }
LABEL_566:
        [a1 setClientStartSampleCount:v131];
        goto LABEL_492;
      case 0x24u:
        char v132 = 0;
        unsigned int v133 = 0;
        uint64_t v134 = 0;
        while (2)
        {
          uint64_t v135 = *v4;
          uint64_t v136 = *(void *)(a2 + v135);
          unint64_t v137 = v136 + 1;
          if (v136 == -1 || v137 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v138 = *(unsigned char *)(*(void *)(a2 + *v8) + v136);
            *(void *)(a2 + v135) = v137;
            v134 |= (unint64_t)(v138 & 0x7F) << v132;
            if (v138 < 0)
            {
              v132 += 7;
              BOOL v15 = v133++ >= 9;
              if (v15)
              {
                uint64_t v139 = 0;
                goto LABEL_571;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v139 = 0;
        }
        else {
          uint64_t v139 = v134;
        }
LABEL_571:
        [a1 setTriggerEndSampleCount:v139];
        goto LABEL_492;
      case 0x25u:
        char v140 = 0;
        unsigned int v141 = 0;
        uint64_t v142 = 0;
        while (2)
        {
          uint64_t v143 = *v4;
          uint64_t v144 = *(void *)(a2 + v143);
          unint64_t v145 = v144 + 1;
          if (v144 == -1 || v145 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v146 = *(unsigned char *)(*(void *)(a2 + *v8) + v144);
            *(void *)(a2 + v143) = v145;
            v142 |= (unint64_t)(v146 & 0x7F) << v140;
            if (v146 < 0)
            {
              v140 += 7;
              BOOL v15 = v141++ >= 9;
              if (v15)
              {
                uint64_t v147 = 0;
                goto LABEL_576;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v147 = 0;
        }
        else {
          uint64_t v147 = v142;
        }
LABEL_576:
        [a1 setTriggerFireSampleCount:v147];
        goto LABEL_492;
      case 0x26u:
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v150 = 0;
        while (2)
        {
          uint64_t v151 = *v4;
          uint64_t v152 = *(void *)(a2 + v151);
          unint64_t v153 = v152 + 1;
          if (v152 == -1 || v153 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v154 = *(unsigned char *)(*(void *)(a2 + *v8) + v152);
            *(void *)(a2 + v151) = v153;
            v150 |= (unint64_t)(v154 & 0x7F) << v148;
            if (v154 < 0)
            {
              v148 += 7;
              BOOL v15 = v149++ >= 9;
              if (v15)
              {
                uint64_t v155 = 0;
                goto LABEL_581;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v155 = 0;
        }
        else {
          uint64_t v155 = v150;
        }
LABEL_581:
        [a1 setTriggerStartNs:v155];
        goto LABEL_492;
      case 0x27u:
        char v156 = 0;
        unsigned int v157 = 0;
        uint64_t v158 = 0;
        while (2)
        {
          uint64_t v159 = *v4;
          uint64_t v160 = *(void *)(a2 + v159);
          unint64_t v161 = v160 + 1;
          if (v160 == -1 || v161 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v162 = *(unsigned char *)(*(void *)(a2 + *v8) + v160);
            *(void *)(a2 + v159) = v161;
            v158 |= (unint64_t)(v162 & 0x7F) << v156;
            if (v162 < 0)
            {
              v156 += 7;
              BOOL v15 = v157++ >= 9;
              if (v15)
              {
                uint64_t v163 = 0;
                goto LABEL_586;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v163 = 0;
        }
        else {
          uint64_t v163 = v158;
        }
LABEL_586:
        [a1 setTriggerEndNs:v163];
        goto LABEL_492;
      case 0x28u:
        char v164 = 0;
        unsigned int v165 = 0;
        uint64_t v166 = 0;
        while (2)
        {
          uint64_t v167 = *v4;
          uint64_t v168 = *(void *)(a2 + v167);
          unint64_t v169 = v168 + 1;
          if (v168 == -1 || v169 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v170 = *(unsigned char *)(*(void *)(a2 + *v8) + v168);
            *(void *)(a2 + v167) = v169;
            v166 |= (unint64_t)(v170 & 0x7F) << v164;
            if (v170 < 0)
            {
              v164 += 7;
              BOOL v15 = v165++ >= 9;
              if (v15)
              {
                uint64_t v171 = 0;
                goto LABEL_591;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v171 = 0;
        }
        else {
          uint64_t v171 = v166;
        }
LABEL_591:
        [a1 setTriggerFireNs:v171];
        goto LABEL_492;
      case 0x29u:
        char v172 = 0;
        unsigned int v173 = 0;
        uint64_t v174 = 0;
        while (2)
        {
          uint64_t v175 = *v4;
          uint64_t v176 = *(void *)(a2 + v175);
          unint64_t v177 = v176 + 1;
          if (v176 == -1 || v177 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v178 = *(unsigned char *)(*(void *)(a2 + *v8) + v176);
            *(void *)(a2 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if (v178 < 0)
            {
              v172 += 7;
              BOOL v15 = v173++ >= 9;
              if (v15)
              {
                uint64_t v179 = 0;
                goto LABEL_596;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v179 = 0;
        }
        else {
          uint64_t v179 = v174;
        }
LABEL_596:
        [a1 setExtraSamplesAtStart:v179];
        goto LABEL_492;
      case 0x2Au:
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v182 = 0;
        while (2)
        {
          uint64_t v183 = *v4;
          uint64_t v184 = *(void *)(a2 + v183);
          unint64_t v185 = v184 + 1;
          if (v184 == -1 || v185 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v186 = *(unsigned char *)(*(void *)(a2 + *v8) + v184);
            *(void *)(a2 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              BOOL v15 = v181++ >= 9;
              if (v15)
              {
                uint64_t v187 = 0;
                goto LABEL_601;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v187 = 0;
        }
        else {
          uint64_t v187 = v182;
        }
LABEL_601:
        [a1 setAnalyzerPrependingSamples:v187];
        goto LABEL_492;
      case 0x2Bu:
        char v188 = 0;
        unsigned int v189 = 0;
        uint64_t v190 = 0;
        while (2)
        {
          uint64_t v191 = *v4;
          uint64_t v192 = *(void *)(a2 + v191);
          unint64_t v193 = v192 + 1;
          if (v192 == -1 || v193 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v194 = *(unsigned char *)(*(void *)(a2 + *v8) + v192);
            *(void *)(a2 + v191) = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if (v194 < 0)
            {
              v188 += 7;
              BOOL v15 = v189++ >= 9;
              if (v15)
              {
                uint64_t v195 = 0;
                goto LABEL_606;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v195 = 0;
        }
        else {
          uint64_t v195 = v190;
        }
LABEL_606:
        [a1 setAnalyzerTrailingSamples:v195];
        goto LABEL_492;
      case 0x2Cu:
        char v196 = 0;
        unsigned int v197 = 0;
        uint64_t v198 = 0;
        while (2)
        {
          uint64_t v199 = *v4;
          uint64_t v200 = *(void *)(a2 + v199);
          unint64_t v201 = v200 + 1;
          if (v200 == -1 || v201 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v202 = *(unsigned char *)(*(void *)(a2 + *v8) + v200);
            *(void *)(a2 + v199) = v201;
            v198 |= (unint64_t)(v202 & 0x7F) << v196;
            if (v202 < 0)
            {
              v196 += 7;
              BOOL v15 = v197++ >= 9;
              if (v15)
              {
                uint64_t v198 = 0;
                goto LABEL_610;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v198 = 0;
        }
LABEL_610:
        [a1 setIsTriggerEvent:v198 != 0];
        goto LABEL_492;
      case 0x2Du:
        char v203 = 0;
        unsigned int v204 = 0;
        uint64_t v205 = 0;
        while (2)
        {
          uint64_t v206 = *v4;
          uint64_t v207 = *(void *)(a2 + v206);
          unint64_t v208 = v207 + 1;
          if (v207 == -1 || v208 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v209 = *(unsigned char *)(*(void *)(a2 + *v8) + v207);
            *(void *)(a2 + v206) = v208;
            v205 |= (unint64_t)(v209 & 0x7F) << v203;
            if (v209 < 0)
            {
              v203 += 7;
              BOOL v15 = v204++ >= 9;
              if (v15)
              {
                uint64_t v210 = 0;
                goto LABEL_615;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v210 = 0;
        }
        else {
          uint64_t v210 = v205;
        }
LABEL_615:
        [a1 setTotalSampleCount:v210];
        goto LABEL_492;
      case 0x2Eu:
        uint64_t v211 = *v4;
        unint64_t v212 = *(void *)(a2 + v211);
        if (v212 <= 0xFFFFFFFFFFFFFFFBLL && v212 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v212);
          *(void *)(a2 + v211) = v212 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTriggerScore:a3];
        goto LABEL_492;
      case 0x2Fu:
        char v213 = 0;
        unsigned int v214 = 0;
        uint64_t v215 = 0;
        while (2)
        {
          uint64_t v216 = *v4;
          uint64_t v217 = *(void *)(a2 + v216);
          unint64_t v218 = v217 + 1;
          if (v217 == -1 || v218 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v219 = *(unsigned char *)(*(void *)(a2 + *v8) + v217);
            *(void *)(a2 + v216) = v218;
            v215 |= (unint64_t)(v219 & 0x7F) << v213;
            if (v219 < 0)
            {
              v213 += 7;
              BOOL v15 = v214++ >= 9;
              if (v15)
              {
                uint64_t v215 = 0;
                goto LABEL_619;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v215 = 0;
        }
LABEL_619:
        [a1 setIsMaximized:v215 != 0];
        goto LABEL_492;
      case 0x30u:
        uint64_t v220 = *v4;
        unint64_t v221 = *(void *)(a2 + v220);
        if (v221 <= 0xFFFFFFFFFFFFFFFBLL && v221 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v221);
          *(void *)(a2 + v220) = v221 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setEffectiveThreshold:a3];
        goto LABEL_492;
      case 0x31u:
        uint64_t v222 = *v4;
        unint64_t v223 = *(void *)(a2 + v222);
        if (v223 <= 0xFFFFFFFFFFFFFFFBLL && v223 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v223);
          *(void *)(a2 + v222) = v223 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRecognizerScore:a3];
        goto LABEL_492;
      case 0x32u:
        uint64_t v224 = *v4;
        unint64_t v225 = *(void *)(a2 + v224);
        if (v225 <= 0xFFFFFFFFFFFFFFFBLL && v225 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v225);
          *(void *)(a2 + v224) = v225 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRecognizerThresholdOffset:a3];
        goto LABEL_492;
      case 0x33u:
        char v226 = 0;
        unsigned int v227 = 0;
        uint64_t v228 = 0;
        while (2)
        {
          uint64_t v229 = *v4;
          uint64_t v230 = *(void *)(a2 + v229);
          unint64_t v231 = v230 + 1;
          if (v230 == -1 || v231 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v232 = *(unsigned char *)(*(void *)(a2 + *v8) + v230);
            *(void *)(a2 + v229) = v231;
            v228 |= (unint64_t)(v232 & 0x7F) << v226;
            if (v232 < 0)
            {
              v226 += 7;
              BOOL v15 = v227++ >= 9;
              if (v15)
              {
                uint64_t v233 = 0;
                goto LABEL_624;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v233 = 0;
        }
        else {
          uint64_t v233 = v228;
        }
LABEL_624:
        [a1 setRecognizerWaitTimeInNs:v233];
        goto LABEL_492;
      case 0x34u:
        uint64_t v234 = *v4;
        unint64_t v235 = *(void *)(a2 + v234);
        if (v235 <= 0xFFFFFFFFFFFFFFFBLL && v235 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v235);
          *(void *)(a2 + v234) = v235 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setRecognizerScaleFactor:a3];
        goto LABEL_492;
      case 0x35u:
        uint64_t v236 = *v4;
        unint64_t v237 = *(void *)(a2 + v236);
        if (v237 <= 0xFFFFFFFFFFFFFFFBLL && v237 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v237);
          *(void *)(a2 + v236) = v237 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setThreshold:a3];
        goto LABEL_492;
      case 0x37u:
        char v238 = 0;
        unsigned int v239 = 0;
        uint64_t v240 = 0;
        while (2)
        {
          uint64_t v241 = *v4;
          uint64_t v242 = *(void *)(a2 + v241);
          unint64_t v243 = v242 + 1;
          if (v242 == -1 || v243 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v244 = *(unsigned char *)(*(void *)(a2 + *v8) + v242);
            *(void *)(a2 + v241) = v243;
            v240 |= (unint64_t)(v244 & 0x7F) << v238;
            if (v244 < 0)
            {
              v238 += 7;
              BOOL v15 = v239++ >= 9;
              if (v15)
              {
                uint64_t v245 = 0;
                goto LABEL_629;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v245 = 0;
        }
        else {
          uint64_t v245 = v240;
        }
LABEL_629:
        [a1 setTriggerStartTimeOffsetInNs:v245];
        goto LABEL_492;
      case 0x38u:
        char v246 = 0;
        unsigned int v247 = 0;
        uint64_t v248 = 0;
        while (2)
        {
          uint64_t v249 = *v4;
          uint64_t v250 = *(void *)(a2 + v249);
          unint64_t v251 = v250 + 1;
          if (v250 == -1 || v251 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v252 = *(unsigned char *)(*(void *)(a2 + *v8) + v250);
            *(void *)(a2 + v249) = v251;
            v248 |= (unint64_t)(v252 & 0x7F) << v246;
            if (v252 < 0)
            {
              v246 += 7;
              BOOL v15 = v247++ >= 9;
              if (v15)
              {
                uint64_t v253 = 0;
                goto LABEL_634;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v253 = 0;
        }
        else {
          uint64_t v253 = v248;
        }
LABEL_634:
        [a1 setTriggerEndTimeOffsetInNs:v253];
        goto LABEL_492;
      case 0x39u:
        char v254 = 0;
        unsigned int v255 = 0;
        uint64_t v256 = 0;
        while (2)
        {
          uint64_t v257 = *v4;
          uint64_t v258 = *(void *)(a2 + v257);
          unint64_t v259 = v258 + 1;
          if (v258 == -1 || v259 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v260 = *(unsigned char *)(*(void *)(a2 + *v8) + v258);
            *(void *)(a2 + v257) = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              BOOL v15 = v255++ >= 9;
              if (v15)
              {
                uint64_t v261 = 0;
                goto LABEL_639;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v261 = 0;
        }
        else {
          uint64_t v261 = v256;
        }
LABEL_639:
        [a1 setTriggerFireTimeOffsetInNs:v261];
        goto LABEL_492;
      case 0x3Au:
        uint64_t v262 = *v4;
        unint64_t v263 = *(void *)(a2 + v262);
        if (v263 <= 0xFFFFFFFFFFFFFFF7 && v263 + 8 <= *(void *)(a2 + *v5))
        {
          double v264 = *(double *)(*(void *)(a2 + *v8) + v263);
          *(void *)(a2 + v262) = v263 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v264 = 0.0;
        }
        [a1 setTriggerStartTime:v264];
        goto LABEL_492;
      case 0x3Bu:
        uint64_t v265 = *v4;
        unint64_t v266 = *(void *)(a2 + v265);
        if (v266 <= 0xFFFFFFFFFFFFFFF7 && v266 + 8 <= *(void *)(a2 + *v5))
        {
          double v267 = *(double *)(*(void *)(a2 + *v8) + v266);
          *(void *)(a2 + v265) = v266 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v267 = 0.0;
        }
        [a1 setTriggerEndTime:v267];
        goto LABEL_492;
      case 0x3Cu:
        uint64_t v268 = *v4;
        unint64_t v269 = *(void *)(a2 + v268);
        if (v269 <= 0xFFFFFFFFFFFFFFF7 && v269 + 8 <= *(void *)(a2 + *v5))
        {
          double v270 = *(double *)(*(void *)(a2 + *v8) + v269);
          *(void *)(a2 + v268) = v269 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v270 = 0.0;
        }
        [a1 setTriggerFiredTime:v270];
        goto LABEL_492;
      case 0x3Du:
        char v271 = 0;
        unsigned int v272 = 0;
        uint64_t v273 = 0;
        while (2)
        {
          uint64_t v274 = *v4;
          uint64_t v275 = *(void *)(a2 + v274);
          unint64_t v276 = v275 + 1;
          if (v275 == -1 || v276 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v277 = *(unsigned char *)(*(void *)(a2 + *v8) + v275);
            *(void *)(a2 + v274) = v276;
            v273 |= (unint64_t)(v277 & 0x7F) << v271;
            if (v277 < 0)
            {
              v271 += 7;
              BOOL v15 = v272++ >= 9;
              if (v15)
              {
                uint64_t v278 = 0;
                goto LABEL_644;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v278 = 0;
        }
        else {
          uint64_t v278 = v273;
        }
LABEL_644:
        [a1 setHardwareSamplerate:v278];
        goto LABEL_492;
      case 0x3Eu:
        char v279 = 0;
        unsigned int v280 = 0;
        uint64_t v281 = 0;
        while (2)
        {
          uint64_t v282 = *v4;
          uint64_t v283 = *(void *)(a2 + v282);
          unint64_t v284 = v283 + 1;
          if (v283 == -1 || v284 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v285 = *(unsigned char *)(*(void *)(a2 + *v8) + v283);
            *(void *)(a2 + v282) = v284;
            v281 |= (unint64_t)(v285 & 0x7F) << v279;
            if (v285 < 0)
            {
              v279 += 7;
              BOOL v15 = v280++ >= 9;
              if (v15)
              {
                uint64_t v281 = 0;
                goto LABEL_648;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v281 = 0;
        }
LABEL_648:
        [a1 setIsContinuous:v281 != 0];
        goto LABEL_492;
      case 0x3Fu:
        uint64_t v286 = *v4;
        unint64_t v287 = *(void *)(a2 + v286);
        if (v287 <= 0xFFFFFFFFFFFFFFFBLL && v287 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v287);
          *(void *)(a2 + v286) = v287 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setTriggerDurationInNs:a3];
        goto LABEL_492;
      case 0x40u:
        char v288 = 0;
        unsigned int v289 = 0;
        uint64_t v290 = 0;
        while (2)
        {
          uint64_t v291 = *v4;
          uint64_t v292 = *(void *)(a2 + v291);
          unint64_t v293 = v292 + 1;
          if (v292 == -1 || v293 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v294 = *(unsigned char *)(*(void *)(a2 + *v8) + v292);
            *(void *)(a2 + v291) = v293;
            v290 |= (unint64_t)(v294 & 0x7F) << v288;
            if (v294 < 0)
            {
              v288 += 7;
              BOOL v15 = v289++ >= 9;
              if (v15)
              {
                uint64_t v295 = 0;
                goto LABEL_653;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v295 = 0;
        }
        else {
          uint64_t v295 = v290;
        }
LABEL_653:
        [a1 setTotalSamplesAtTriggerStart:v295];
        goto LABEL_492;
      case 0x41u:
        char v296 = 0;
        unsigned int v297 = 0;
        uint64_t v298 = 0;
        while (2)
        {
          uint64_t v299 = *v4;
          uint64_t v300 = *(void *)(a2 + v299);
          unint64_t v301 = v300 + 1;
          if (v300 == -1 || v301 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v302 = *(unsigned char *)(*(void *)(a2 + *v8) + v300);
            *(void *)(a2 + v299) = v301;
            v298 |= (unint64_t)(v302 & 0x7F) << v296;
            if (v302 < 0)
            {
              v296 += 7;
              BOOL v15 = v297++ >= 9;
              if (v15)
              {
                uint64_t v303 = 0;
                goto LABEL_658;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v303 = 0;
        }
        else {
          uint64_t v303 = v298;
        }
LABEL_658:
        [a1 setTotalSamplesAtTriggerEnd:v303];
        goto LABEL_492;
      case 0x42u:
        char v304 = 0;
        unsigned int v305 = 0;
        uint64_t v306 = 0;
        while (2)
        {
          uint64_t v307 = *v4;
          uint64_t v308 = *(void *)(a2 + v307);
          unint64_t v309 = v308 + 1;
          if (v308 == -1 || v309 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v310 = *(unsigned char *)(*(void *)(a2 + *v8) + v308);
            *(void *)(a2 + v307) = v309;
            v306 |= (unint64_t)(v310 & 0x7F) << v304;
            if (v310 < 0)
            {
              v304 += 7;
              BOOL v15 = v305++ >= 9;
              if (v15)
              {
                uint64_t v311 = 0;
                goto LABEL_663;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v311 = 0;
        }
        else {
          uint64_t v311 = v306;
        }
LABEL_663:
        [a1 setTotalSamplesAtEndOfCapture:v311];
        goto LABEL_492;
      case 0x44u:
        PBReaderReadString();
        char v312 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setConfigVersion:v312];
        goto LABEL_491;
      case 0x45u:
        PBReaderReadString();
        char v312 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setConfigPath:v312];
        goto LABEL_491;
      case 0x46u:
        char v313 = 0;
        unsigned int v314 = 0;
        uint64_t v315 = 0;
        while (2)
        {
          uint64_t v316 = *v4;
          uint64_t v317 = *(void *)(a2 + v316);
          unint64_t v318 = v317 + 1;
          if (v317 == -1 || v318 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v319 = *(unsigned char *)(*(void *)(a2 + *v8) + v317);
            *(void *)(a2 + v316) = v318;
            v315 |= (unint64_t)(v319 & 0x7F) << v313;
            if (v319 < 0)
            {
              v313 += 7;
              BOOL v15 = v314++ >= 9;
              if (v15)
              {
                uint64_t v315 = 0;
                goto LABEL_667;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v315 = 0;
        }
LABEL_667:
        [a1 setIsSecondChance:v315 != 0];
        goto LABEL_492;
      case 0x47u:
        char v320 = 0;
        unsigned int v321 = 0;
        uint64_t v322 = 0;
        while (2)
        {
          uint64_t v323 = *v4;
          uint64_t v324 = *(void *)(a2 + v323);
          unint64_t v325 = v324 + 1;
          if (v324 == -1 || v325 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v326 = *(unsigned char *)(*(void *)(a2 + *v8) + v324);
            *(void *)(a2 + v323) = v325;
            v322 |= (unint64_t)(v326 & 0x7F) << v320;
            if (v326 < 0)
            {
              v320 += 7;
              BOOL v15 = v321++ >= 9;
              if (v15)
              {
                uint64_t v322 = 0;
                goto LABEL_671;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v322 = 0;
        }
LABEL_671:
        [a1 setDeviceHandheld:v322 != 0];
        goto LABEL_492;
      case 0x48u:
        char v327 = 0;
        unsigned int v328 = 0;
        uint64_t v329 = 0;
        while (2)
        {
          uint64_t v330 = *v4;
          uint64_t v331 = *(void *)(a2 + v330);
          unint64_t v332 = v331 + 1;
          if (v331 == -1 || v332 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v333 = *(unsigned char *)(*(void *)(a2 + *v8) + v331);
            *(void *)(a2 + v330) = v332;
            v329 |= (unint64_t)(v333 & 0x7F) << v327;
            if (v333 < 0)
            {
              v327 += 7;
              BOOL v15 = v328++ >= 9;
              if (v15)
              {
                uint64_t v334 = 0;
                goto LABEL_676;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v334 = 0;
        }
        else {
          uint64_t v334 = v329;
        }
LABEL_676:
        [a1 setActiveChannel:v334];
        goto LABEL_492;
      case 0x49u:
        char v335 = 0;
        unsigned int v336 = 0;
        uint64_t v337 = 0;
        while (2)
        {
          uint64_t v338 = *v4;
          uint64_t v339 = *(void *)(a2 + v338);
          unint64_t v340 = v339 + 1;
          if (v339 == -1 || v340 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v341 = *(unsigned char *)(*(void *)(a2 + *v8) + v339);
            *(void *)(a2 + v338) = v340;
            v337 |= (unint64_t)(v341 & 0x7F) << v335;
            if (v341 < 0)
            {
              v335 += 7;
              BOOL v15 = v336++ >= 9;
              if (v15)
              {
                uint64_t v342 = 0;
                goto LABEL_681;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v342 = 0;
        }
        else {
          uint64_t v342 = v337;
        }
LABEL_681:
        [a1 setTwoShotAudibleFeedbackDelayInNs:v342];
        goto LABEL_492;
      case 0x4Au:
        uint64_t v343 = *v4;
        unint64_t v344 = *(void *)(a2 + v343);
        if (v344 <= 0xFFFFFFFFFFFFFFFBLL && v344 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v344);
          *(void *)(a2 + v343) = v344 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setCumulativeUptimeInSec:a3];
        goto LABEL_492;
      case 0x4Bu:
        uint64_t v345 = *v4;
        unint64_t v346 = *(void *)(a2 + v345);
        if (v346 <= 0xFFFFFFFFFFFFFFFBLL && v346 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v346);
          *(void *)(a2 + v345) = v346 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setCumulativeDowntimeInSec:a3];
        goto LABEL_492;
      case 0x4Eu:
        char v347 = 0;
        unsigned int v348 = 0;
        uint64_t v349 = 0;
        while (2)
        {
          uint64_t v350 = *v4;
          uint64_t v351 = *(void *)(a2 + v350);
          unint64_t v352 = v351 + 1;
          if (v351 == -1 || v352 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v353 = *(unsigned char *)(*(void *)(a2 + *v8) + v351);
            *(void *)(a2 + v350) = v352;
            v349 |= (unint64_t)(v353 & 0x7F) << v347;
            if (v353 < 0)
            {
              v347 += 7;
              BOOL v15 = v348++ >= 9;
              if (v15)
              {
                uint64_t v354 = 0;
                goto LABEL_686;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v354 = 0;
        }
        else {
          uint64_t v354 = v349;
        }
LABEL_686:
        [a1 setHostPowerStateAtTrigger:v354];
        goto LABEL_492;
      case 0x4Fu:
        char v355 = 0;
        unsigned int v356 = 0;
        uint64_t v357 = 0;
        while (2)
        {
          uint64_t v358 = *v4;
          uint64_t v359 = *(void *)(a2 + v358);
          unint64_t v360 = v359 + 1;
          if (v359 == -1 || v360 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v361 = *(unsigned char *)(*(void *)(a2 + *v8) + v359);
            *(void *)(a2 + v358) = v360;
            v357 |= (unint64_t)(v361 & 0x7F) << v355;
            if (v361 < 0)
            {
              v355 += 7;
              BOOL v15 = v356++ >= 9;
              if (v15)
              {
                uint64_t v357 = 0;
                goto LABEL_690;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v357 = 0;
        }
LABEL_690:
        [a1 setIsMediaPlaying:v357 != 0];
        goto LABEL_492;
      case 0x50u:
        uint64_t v362 = *v4;
        unint64_t v363 = *(void *)(a2 + v362);
        if (v363 <= 0xFFFFFFFFFFFFFFFBLL && v363 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v363);
          *(void *)(a2 + v362) = v363 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setMediaVolume:a3];
        goto LABEL_492;
      case 0x51u:
        char v312 = objc_alloc_init(SISchemaUUID);
        if PBReaderPlaceMark() && (SISchemaUUIDReadFrom(v312, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setAudioProviderUUID:", v312, 0, 0);
LABEL_491:

LABEL_492:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      case 0x52u:
        char v364 = 0;
        unsigned int v365 = 0;
        uint64_t v366 = 0;
        while (2)
        {
          uint64_t v367 = *v4;
          uint64_t v368 = *(void *)(a2 + v367);
          unint64_t v369 = v368 + 1;
          if (v368 == -1 || v369 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v370 = *(unsigned char *)(*(void *)(a2 + *v8) + v368);
            *(void *)(a2 + v367) = v369;
            v366 |= (unint64_t)(v370 & 0x7F) << v364;
            if (v370 < 0)
            {
              v364 += 7;
              BOOL v15 = v365++ >= 9;
              if (v15)
              {
                uint64_t v366 = 0;
                goto LABEL_694;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v366 = 0;
        }
LABEL_694:
        [a1 setOnBatteryPower:v366 != 0];
        goto LABEL_492;
      case 0x53u:
        char v371 = 0;
        unsigned int v372 = 0;
        uint64_t v373 = 0;
        while (2)
        {
          uint64_t v374 = *v4;
          uint64_t v375 = *(void *)(a2 + v374);
          unint64_t v376 = v375 + 1;
          if (v375 == -1 || v376 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v377 = *(unsigned char *)(*(void *)(a2 + *v8) + v375);
            *(void *)(a2 + v374) = v376;
            v373 |= (unint64_t)(v377 & 0x7F) << v371;
            if (v377 < 0)
            {
              v371 += 7;
              BOOL v15 = v372++ >= 9;
              if (v15)
              {
                uint64_t v373 = 0;
                goto LABEL_698;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v373 = 0;
        }
LABEL_698:
        [a1 setDidWakeAP:v373 != 0];
        goto LABEL_492;
      case 0x54u:
        uint64_t v378 = *v4;
        unint64_t v379 = *(void *)(a2 + v378);
        if (v379 <= 0xFFFFFFFFFFFFFFFBLL && v379 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v379);
          *(void *)(a2 + v378) = v379 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setUptimeInSec:a3];
        goto LABEL_492;
      case 0x55u:
        uint64_t v380 = *v4;
        unint64_t v381 = *(void *)(a2 + v380);
        if (v381 <= 0xFFFFFFFFFFFFFFFBLL && v381 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v381);
          *(void *)(a2 + v380) = v381 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setDowntimeInSec:a3];
        goto LABEL_492;
      case 0x56u:
        char v382 = 0;
        unsigned int v383 = 0;
        uint64_t v384 = 0;
        while (2)
        {
          uint64_t v385 = *v4;
          uint64_t v386 = *(void *)(a2 + v385);
          unint64_t v387 = v386 + 1;
          if (v386 == -1 || v387 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v388 = *(unsigned char *)(*(void *)(a2 + *v8) + v386);
            *(void *)(a2 + v385) = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              BOOL v15 = v383++ >= 9;
              if (v15)
              {
                uint64_t v389 = 0;
                goto LABEL_703;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v389 = 0;
        }
        else {
          uint64_t v389 = v384;
        }
LABEL_703:
        [a1 setLastConsecutiveVTRejects:v389];
        goto LABEL_492;
      case 0x58u:
        PBReaderReadString();
        char v312 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setCaptureFilePath:v312];
        goto LABEL_491;
      case 0x59u:
        PBReaderReadString();
        char v312 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setConfigDataHash:v312];
        goto LABEL_491;
      case 0x5Au:
        char v390 = 0;
        unsigned int v391 = 0;
        uint64_t v392 = 0;
        while (2)
        {
          uint64_t v393 = *v4;
          uint64_t v394 = *(void *)(a2 + v393);
          unint64_t v395 = v394 + 1;
          if (v394 == -1 || v395 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v396 = *(unsigned char *)(*(void *)(a2 + *v8) + v394);
            *(void *)(a2 + v393) = v395;
            v392 |= (unint64_t)(v396 & 0x7F) << v390;
            if (v396 < 0)
            {
              v390 += 7;
              BOOL v15 = v391++ >= 9;
              if (v15)
              {
                uint64_t v392 = 0;
                goto LABEL_707;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v392 = 0;
        }
LABEL_707:
        [a1 setSiriIsActiveOrOtherAssertion:v392 != 0];
        goto LABEL_492;
      case 0x5Bu:
        char v397 = 0;
        unsigned int v398 = 0;
        uint64_t v399 = 0;
        while (2)
        {
          uint64_t v400 = *v4;
          uint64_t v401 = *(void *)(a2 + v400);
          unint64_t v402 = v401 + 1;
          if (v401 == -1 || v402 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v403 = *(unsigned char *)(*(void *)(a2 + *v8) + v401);
            *(void *)(a2 + v400) = v402;
            v399 |= (unint64_t)(v403 & 0x7F) << v397;
            if (v403 < 0)
            {
              v397 += 7;
              BOOL v15 = v398++ >= 9;
              if (v15)
              {
                uint64_t v399 = 0;
                goto LABEL_711;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v399 = 0;
        }
LABEL_711:
        [a1 setDidAudioStall:v399 != 0];
        goto LABEL_492;
      case 0x5Cu:
        char v404 = 0;
        unsigned int v405 = 0;
        uint64_t v406 = 0;
        while (2)
        {
          uint64_t v407 = *v4;
          uint64_t v408 = *(void *)(a2 + v407);
          unint64_t v409 = v408 + 1;
          if (v408 == -1 || v409 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v410 = *(unsigned char *)(*(void *)(a2 + *v8) + v408);
            *(void *)(a2 + v407) = v409;
            v406 |= (unint64_t)(v410 & 0x7F) << v404;
            if (v410 < 0)
            {
              v404 += 7;
              BOOL v15 = v405++ >= 9;
              if (v15)
              {
                uint64_t v406 = 0;
                goto LABEL_715;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v406 = 0;
        }
LABEL_715:
        [a1 setIsBargeIn:v406 != 0];
        goto LABEL_492;
      case 0x5Du:
        char v411 = 0;
        unsigned int v412 = 0;
        uint64_t v413 = 0;
        while (2)
        {
          uint64_t v414 = *v4;
          uint64_t v415 = *(void *)(a2 + v414);
          unint64_t v416 = v415 + 1;
          if (v415 == -1 || v416 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v417 = *(unsigned char *)(*(void *)(a2 + *v8) + v415);
            *(void *)(a2 + v414) = v416;
            v413 |= (unint64_t)(v417 & 0x7F) << v411;
            if (v417 < 0)
            {
              v411 += 7;
              BOOL v15 = v412++ >= 9;
              if (v15)
              {
                uint64_t v413 = 0;
                goto LABEL_719;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v413 = 0;
        }
LABEL_719:
        [a1 setIsWakeFromSleep:v413 != 0];
        goto LABEL_492;
      case 0x5Eu:
        char v418 = 0;
        unsigned int v419 = 0;
        uint64_t v420 = 0;
        while (2)
        {
          uint64_t v421 = *v4;
          uint64_t v422 = *(void *)(a2 + v421);
          unint64_t v423 = v422 + 1;
          if (v422 == -1 || v423 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v424 = *(unsigned char *)(*(void *)(a2 + *v8) + v422);
            *(void *)(a2 + v421) = v423;
            v420 |= (unint64_t)(v424 & 0x7F) << v418;
            if (v424 < 0)
            {
              v418 += 7;
              BOOL v15 = v419++ >= 9;
              if (v15)
              {
                uint64_t v425 = 0;
                goto LABEL_724;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v425 = 0;
        }
        else {
          uint64_t v425 = v420;
        }
LABEL_724:
        [a1 setSecondPassAssetQueryStartTimeInNs:v425];
        goto LABEL_492;
      case 0x5Fu:
        char v426 = 0;
        unsigned int v427 = 0;
        uint64_t v428 = 0;
        while (2)
        {
          uint64_t v429 = *v4;
          uint64_t v430 = *(void *)(a2 + v429);
          unint64_t v431 = v430 + 1;
          if (v430 == -1 || v431 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v432 = *(unsigned char *)(*(void *)(a2 + *v8) + v430);
            *(void *)(a2 + v429) = v431;
            v428 |= (unint64_t)(v432 & 0x7F) << v426;
            if (v432 < 0)
            {
              v426 += 7;
              BOOL v15 = v427++ >= 9;
              if (v15)
              {
                uint64_t v433 = 0;
                goto LABEL_729;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v433 = 0;
        }
        else {
          uint64_t v433 = v428;
        }
LABEL_729:
        [a1 setSecondPassAssetQueryCompleteTimeInNs:v433];
        goto LABEL_492;
      case 0x60u:
        char v434 = 0;
        unsigned int v435 = 0;
        uint64_t v436 = 0;
        while (2)
        {
          uint64_t v437 = *v4;
          uint64_t v438 = *(void *)(a2 + v437);
          unint64_t v439 = v438 + 1;
          if (v438 == -1 || v439 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v440 = *(unsigned char *)(*(void *)(a2 + *v8) + v438);
            *(void *)(a2 + v437) = v439;
            v436 |= (unint64_t)(v440 & 0x7F) << v434;
            if (v440 < 0)
            {
              v434 += 7;
              BOOL v15 = v435++ >= 9;
              if (v15)
              {
                uint64_t v441 = 0;
                goto LABEL_734;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v441 = 0;
        }
        else {
          uint64_t v441 = v436;
        }
LABEL_734:
        [a1 setSecondPassAssetLoadStartTimeInNs:v441];
        goto LABEL_492;
      case 0x61u:
        char v442 = 0;
        unsigned int v443 = 0;
        uint64_t v444 = 0;
        while (2)
        {
          uint64_t v445 = *v4;
          unint64_t v446 = *(void *)(a2 + v445);
          if (v446 == -1 || v446 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v447 = *(unsigned char *)(*(void *)(a2 + *v8) + v446);
            *(void *)(a2 + v445) = v446 + 1;
            v444 |= (unint64_t)(v447 & 0x7F) << v442;
            if (v447 < 0)
            {
              v442 += 7;
              BOOL v15 = v443++ >= 9;
              if (v15)
              {
                uint64_t v448 = 0;
                goto LABEL_739;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v448 = 0;
        }
        else {
          uint64_t v448 = v444;
        }
LABEL_739:
        [a1 setSecondPassAssetLoadCompleteTimeInNs:v448];
        goto LABEL_492;
      case 0x62u:
        char v449 = 0;
        unsigned int v450 = 0;
        uint64_t v451 = 0;
        while (2)
        {
          uint64_t v452 = *v4;
          unint64_t v453 = *(void *)(a2 + v452);
          if (v453 == -1 || v453 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v454 = *(unsigned char *)(*(void *)(a2 + *v8) + v453);
            *(void *)(a2 + v452) = v453 + 1;
            v451 |= (unint64_t)(v454 & 0x7F) << v449;
            if (v454 < 0)
            {
              v449 += 7;
              BOOL v15 = v450++ >= 9;
              if (v15)
              {
                uint64_t v455 = 0;
                goto LABEL_744;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v455 = 0;
        }
        else {
          uint64_t v455 = v451;
        }
LABEL_744:
        [a1 setSecondPassAudioStreamStartTimeInNs:v455];
        goto LABEL_492;
      case 0x63u:
        char v456 = 0;
        unsigned int v457 = 0;
        uint64_t v458 = 0;
        while (2)
        {
          uint64_t v459 = *v4;
          unint64_t v460 = *(void *)(a2 + v459);
          if (v460 == -1 || v460 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v461 = *(unsigned char *)(*(void *)(a2 + *v8) + v460);
            *(void *)(a2 + v459) = v460 + 1;
            v458 |= (unint64_t)(v461 & 0x7F) << v456;
            if (v461 < 0)
            {
              v456 += 7;
              BOOL v15 = v457++ >= 9;
              if (v15)
              {
                uint64_t v462 = 0;
                goto LABEL_749;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v462 = 0;
        }
        else {
          uint64_t v462 = v458;
        }
LABEL_749:
        [a1 setSecondPassAudioStreamReadyTimeInNs:v462];
        goto LABEL_492;
      case 0x64u:
        char v463 = 0;
        unsigned int v464 = 0;
        uint64_t v465 = 0;
        while (2)
        {
          uint64_t v466 = *v4;
          unint64_t v467 = *(void *)(a2 + v466);
          if (v467 == -1 || v467 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v468 = *(unsigned char *)(*(void *)(a2 + *v8) + v467);
            *(void *)(a2 + v466) = v467 + 1;
            v465 |= (unint64_t)(v468 & 0x7F) << v463;
            if (v468 < 0)
            {
              v463 += 7;
              BOOL v15 = v464++ >= 9;
              if (v15)
              {
                uint64_t v469 = 0;
                goto LABEL_754;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v469 = 0;
        }
        else {
          uint64_t v469 = v465;
        }
LABEL_754:
        [a1 setSecondPassFirstAudioPacketReceptionTimeInNs:v469];
        goto LABEL_492;
      case 0x65u:
        char v470 = 0;
        unsigned int v471 = 0;
        uint64_t v472 = 0;
        while (2)
        {
          uint64_t v473 = *v4;
          unint64_t v474 = *(void *)(a2 + v473);
          if (v474 == -1 || v474 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v475 = *(unsigned char *)(*(void *)(a2 + *v8) + v474);
            *(void *)(a2 + v473) = v474 + 1;
            v472 |= (unint64_t)(v475 & 0x7F) << v470;
            if (v475 < 0)
            {
              v470 += 7;
              BOOL v15 = v471++ >= 9;
              if (v15)
              {
                uint64_t v476 = 0;
                goto LABEL_759;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v476 = 0;
        }
        else {
          uint64_t v476 = v472;
        }
LABEL_759:
        [a1 setSecondPassLastAudioPacketReceptionTimeInNs:v476];
        goto LABEL_492;
      case 0x66u:
        char v477 = 0;
        unsigned int v478 = 0;
        uint64_t v479 = 0;
        while (2)
        {
          uint64_t v480 = *v4;
          unint64_t v481 = *(void *)(a2 + v480);
          if (v481 == -1 || v481 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v482 = *(unsigned char *)(*(void *)(a2 + *v8) + v481);
            *(void *)(a2 + v480) = v481 + 1;
            v479 |= (unint64_t)(v482 & 0x7F) << v477;
            if (v482 < 0)
            {
              v477 += 7;
              BOOL v15 = v478++ >= 9;
              if (v15)
              {
                uint64_t v483 = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v483 = 0;
        }
        else {
          uint64_t v483 = v479;
        }
LABEL_764:
        [a1 setSecondPassCheckerModelKeywordDetectionStartTimeInNs:v483];
        goto LABEL_492;
      case 0x67u:
        char v484 = 0;
        unsigned int v485 = 0;
        uint64_t v486 = 0;
        while (2)
        {
          uint64_t v487 = *v4;
          unint64_t v488 = *(void *)(a2 + v487);
          if (v488 == -1 || v488 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v489 = *(unsigned char *)(*(void *)(a2 + *v8) + v488);
            *(void *)(a2 + v487) = v488 + 1;
            v486 |= (unint64_t)(v489 & 0x7F) << v484;
            if (v489 < 0)
            {
              v484 += 7;
              BOOL v15 = v485++ >= 9;
              if (v15)
              {
                uint64_t v490 = 0;
                goto LABEL_769;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v490 = 0;
        }
        else {
          uint64_t v490 = v486;
        }
LABEL_769:
        [a1 setSecondPassCheckerModelKeywordDetectionEndTimeInNs:v490];
        goto LABEL_492;
      case 0x68u:
        PBReaderReadString();
        char v312 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
        [a1 setTriggerPhrase:v312];
        goto LABEL_491;
      case 0x69u:
        uint64_t v491 = *v4;
        unint64_t v492 = *(void *)(a2 + v491);
        if (v492 <= 0xFFFFFFFFFFFFFFF7 && v492 + 8 <= *(void *)(a2 + *v5))
        {
          double v493 = *(double *)(*(void *)(a2 + *v8) + v492);
          *(void *)(a2 + v491) = v492 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v493 = 0.0;
        }
        [a1 setLastDisplayWakeTimeOffsetInNs:v493];
        goto LABEL_492;
      case 0x6Au:
        char v494 = 0;
        unsigned int v495 = 0;
        uint64_t v496 = 0;
        while (2)
        {
          uint64_t v497 = *v4;
          unint64_t v498 = *(void *)(a2 + v497);
          if (v498 == -1 || v498 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v499 = *(unsigned char *)(*(void *)(a2 + *v8) + v498);
            *(void *)(a2 + v497) = v498 + 1;
            v496 |= (unint64_t)(v499 & 0x7F) << v494;
            if (v499 < 0)
            {
              v494 += 7;
              BOOL v15 = v495++ >= 9;
              if (v15)
              {
                uint64_t v496 = 0;
                goto LABEL_773;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v496 = 0;
        }
LABEL_773:
        [a1 setIsHSJSTriggerFromAlwaysOnMicBuffer:v496 != 0];
        goto LABEL_492;
      case 0x6Bu:
        char v500 = 0;
        unsigned int v501 = 0;
        uint64_t v502 = 0;
        while (2)
        {
          uint64_t v503 = *v4;
          unint64_t v504 = *(void *)(a2 + v503);
          if (v504 == -1 || v504 >= *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v505 = *(unsigned char *)(*(void *)(a2 + *v8) + v504);
            *(void *)(a2 + v503) = v504 + 1;
            v502 |= (unint64_t)(v505 & 0x7F) << v500;
            if (v505 < 0)
            {
              v500 += 7;
              BOOL v15 = v501++ >= 9;
              if (v15)
              {
                uint64_t v506 = 0;
                goto LABEL_778;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v506 = 0;
        }
        else {
          uint64_t v506 = v502;
        }
LABEL_778:
        [a1 setDisplayWakeTimeOffsetInNs:v506];
        goto LABEL_492;
      case 0x6Cu:
        uint64_t v507 = *v4;
        unint64_t v508 = *(void *)(a2 + v507);
        if (v508 <= 0xFFFFFFFFFFFFFFFBLL && v508 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v508);
          *(void *)(a2 + v507) = v508 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          a3 = 0.0;
        }
        [a1 setNeptuneDetectionApiScore:a3];
        goto LABEL_492;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_492;
    }
  }
}

uint64_t MHSchemaMHVoiceTriggerFirstPassDailyMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = PBReaderReadString();
        [a1 setConfigVersion:v25];
      }
      else
      {
        if (v17 != 3)
        {
          if (v17 == 2)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_37:
            [a1 setHardwareSampleRate:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = PBReaderReadString();
        [a1 setMitigationAssetVersion:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHVoiceTriggerFirstPassStatisticReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setFirstPassPeakScoreHS:a3];
          continue;
        case 2u:
          uint64_t v23 = *v4;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v24 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setFirstPassPeakScoreJS:a3];
          continue;
        case 3u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)(a2 + v28);
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v8) + v29);
              *(void *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v16 = v26++ >= 9;
                if (v16)
                {
                  uint64_t v32 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v32 = 0;
          }
          else {
            uint64_t v32 = v27;
          }
LABEL_85:
          [a1 setFirstPassTriggerSource:v32];
          continue;
        case 4u:
          uint64_t v33 = *v4;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v34 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setRecognizerScoreHS:a3];
          continue;
        case 5u:
          uint64_t v35 = *v4;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v36);
            *(void *)(a2 + v35) = v36 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setRecognizerScoreJS:a3];
          continue;
        case 6u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTriggerScoreHS:a3];
          continue;
        case 7u:
          uint64_t v39 = *v4;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
            *(void *)(a2 + v39) = v40 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTriggerScoreJS:a3];
          continue;
        case 8u:
          uint64_t v41 = *v4;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v42);
            *(void *)(a2 + v41) = v42 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setMitigationScore:a3];
          continue;
        case 9u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v4;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v8) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v16 = v44++ >= 9;
                if (v16)
                {
                  uint64_t v50 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v50 = 0;
          }
          else {
            uint64_t v50 = v45;
          }
LABEL_90:
          [a1 setInvocationTypeId:v50];
          continue;
        case 0xAu:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          break;
        case 0xBu:
          uint64_t v59 = *v4;
          unint64_t v60 = *(void *)(a2 + v59);
          if (v60 <= 0xFFFFFFFFFFFFFFFBLL && v60 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v60);
            *(void *)(a2 + v59) = v60 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setRepetitionSimilarityScore:a3];
          continue;
        case 0xCu:
          uint64_t v61 = *v4;
          unint64_t v62 = *(void *)(a2 + v61);
          if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v62);
            *(void *)(a2 + v61) = v62 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTdSpeakerRecognizerCombinedScore:a3];
          continue;
        case 0xDu:
          uint64_t v63 = *v4;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 <= 0xFFFFFFFFFFFFFFFBLL && v64 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v64);
            *(void *)(a2 + v63) = v64 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setKeywordThresholdHS:a3];
          continue;
        case 0xEu:
          uint64_t v65 = *v4;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 <= 0xFFFFFFFFFFFFFFFBLL && v66 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v66);
            *(void *)(a2 + v65) = v66 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setKeywordThresholdJS:a3];
          continue;
        case 0xFu:
          uint64_t v67 = *v4;
          unint64_t v68 = *(void *)(a2 + v67);
          if (v68 <= 0xFFFFFFFFFFFFFFFBLL && v68 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v68);
            *(void *)(a2 + v67) = v68 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTdSpeakerRecognizerCombinedThresholdHS:a3];
          continue;
        case 0x10u:
          uint64_t v69 = *v4;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 <= 0xFFFFFFFFFFFFFFFBLL && v70 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v70);
            *(void *)(a2 + v69) = v70 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTdSpeakerRecognizerCombinedThresholdJS:a3];
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v54 = *v4;
        uint64_t v55 = *(void *)(a2 + v54);
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)(a2 + *v5)) {
          break;
        }
        char v57 = *(unsigned char *)(*(void *)(a2 + *v8) + v55);
        *(void *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0) {
          goto LABEL_92;
        }
        v51 += 7;
        BOOL v16 = v52++ >= 9;
        if (v16)
        {
          uint64_t v58 = 0;
          goto LABEL_95;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_92:
      uint64_t v58 = *(unsigned char *)(a2 + *v6) ? 0 : v53;
LABEL_95:
      [a1 setSecondsSinceEpoch:v58];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t MHSchemaMHVoiceTriggerSecondPassCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerEventInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerEventInfoReadFrom(v17, a2, v18) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerEventInfo:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHVoiceTriggerSecondPassRejectedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v24 = objc_alloc_init(MHSchemaMHVoiceTriggerEventInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerEventInfoReadFrom(v24, a2, v25) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerEventInfo:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setReason:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHVoiceTriggerSecondPassStartedReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_112;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_115;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_112:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_115:
        objc_msgSend(a1, "setFirstPassDetectedChannel:", v27, v113, v114);
        goto LABEL_171;
      case 2u:
        uint64_t v29 = *v4;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
          *(void *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setFirstPassScore:", a3, v113, v114);
        goto LABEL_171;
      case 3u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v4;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
            *(void *)(a2 + v34) = v36;
            v33 |= (unint64_t)(v37 & 0x7F) << v31;
            if (v37 < 0)
            {
              v31 += 7;
              BOOL v16 = v32++ >= 9;
              if (v16)
              {
                uint64_t v38 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v33;
        }
LABEL_120:
        objc_msgSend(a1, "setFirstPassOnsetChannel:", v38, v113, v114);
        goto LABEL_171;
      case 4u:
        uint64_t v39 = *v4;
        unint64_t v40 = *(void *)(a2 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
          *(void *)(a2 + v39) = v40 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setFirstPassOnsetScore:", a3, v113, v114);
        goto LABEL_171;
      case 5u:
        uint64_t v41 = objc_alloc_init(MHSchemaFirstPassChannelSelectionScore);
        uint64_t v113 = 0;
        uint64_t v114 = 0;
        if (PBReaderPlaceMark()
          && MHSchemaFirstPassChannelSelectionScoreReadFrom(v41, a2, v42))
        {
          PBReaderRecallMark();
          if (v41) {
            objc_msgSend(a1, "addChannelSelectionScores:", v41, 0, 0);
          }

LABEL_171:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v4;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v8) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v16 = v44++ >= 9;
              if (v16)
              {
                uint64_t v50 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v50 = 0;
        }
        else {
          uint64_t v50 = v45;
        }
LABEL_125:
        objc_msgSend(a1, "setFirstPassChannelSelectionDelayNs:", v50, v113, v114);
        goto LABEL_171;
      case 7u:
        uint64_t v51 = *v4;
        unint64_t v52 = *(void *)(a2 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v52);
          *(void *)(a2 + v51) = v52 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setFirstPassMasterChannelScoreBoost:", a3, v113, v114);
        goto LABEL_171;
      case 8u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v4;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v8) + v57);
            *(void *)(a2 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v16 = v54++ >= 9;
              if (v16)
              {
                uint64_t v60 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v60 = 0;
        }
        else {
          uint64_t v60 = v55;
        }
LABEL_130:
        objc_msgSend(a1, "setFirstPassStartSampleCount:", v60, v113, v114);
        goto LABEL_171;
      case 9u:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        while (2)
        {
          uint64_t v64 = *v4;
          uint64_t v65 = *(void *)(a2 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v8) + v65);
            *(void *)(a2 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v16 = v62++ >= 9;
              if (v16)
              {
                uint64_t v68 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v68 = 0;
        }
        else {
          uint64_t v68 = v63;
        }
LABEL_135:
        objc_msgSend(a1, "setFirstPassEndSampleCount:", v68, v113, v114);
        goto LABEL_171;
      case 0xAu:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        while (2)
        {
          uint64_t v72 = *v4;
          uint64_t v73 = *(void *)(a2 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(a2 + *v8) + v73);
            *(void *)(a2 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v16 = v70++ >= 9;
              if (v16)
              {
                uint64_t v76 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v76 = 0;
        }
        else {
          uint64_t v76 = v71;
        }
LABEL_140:
        objc_msgSend(a1, "setFirstPassFireSampleCount:", v76, v113, v114);
        goto LABEL_171;
      case 0xBu:
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        while (2)
        {
          uint64_t v80 = *v4;
          uint64_t v81 = *(void *)(a2 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + *v8) + v81);
            *(void *)(a2 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v16 = v78++ >= 9;
              if (v16)
              {
                uint64_t v84 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v84 = 0;
        }
        else {
          uint64_t v84 = v79;
        }
LABEL_145:
        objc_msgSend(a1, "setFirstPassTriggerSource:", v84, v113, v114);
        goto LABEL_171;
      case 0xCu:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        while (2)
        {
          uint64_t v88 = *v4;
          uint64_t v89 = *(void *)(a2 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v8) + v89);
            *(void *)(a2 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v16 = v86++ >= 9;
              if (v16)
              {
                uint64_t v92 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v92 = 0;
        }
        else {
          uint64_t v92 = v87;
        }
LABEL_150:
        objc_msgSend(a1, "setEarlyDetectFiredTimeOffsetInNs:", v92, v113, v114);
        goto LABEL_171;
      case 0xDu:
        uint64_t v93 = *v4;
        unint64_t v94 = *(void *)(a2 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFFBLL && v94 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v94);
          *(void *)(a2 + v93) = v94 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setEarlyDetectFiredTime:", a3, v113, v114);
        goto LABEL_171;
      case 0xEu:
        uint64_t v95 = *v4;
        unint64_t v96 = *(void *)(a2 + v95);
        if (v96 <= 0xFFFFFFFFFFFFFFFBLL && v96 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v96);
          *(void *)(a2 + v95) = v96 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setFirstPassPrimaryChannelScoreBoost:", a3, v113, v114);
        goto LABEL_171;
      case 0xFu:
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v99 = 0;
        while (2)
        {
          uint64_t v100 = *v4;
          uint64_t v101 = *(void *)(a2 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(a2 + *v8) + v101);
            *(void *)(a2 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v16 = v98++ >= 9;
              if (v16)
              {
                uint64_t v104 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v104 = 0;
        }
        else {
          uint64_t v104 = v99;
        }
LABEL_155:
        objc_msgSend(a1, "setFirstPassInfoDispatchTimeInNs:", v104, v113, v114);
        goto LABEL_171;
      case 0x10u:
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v107 = 0;
        while (2)
        {
          uint64_t v108 = *v4;
          uint64_t v109 = *(void *)(a2 + v108);
          unint64_t v110 = v109 + 1;
          if (v109 == -1 || v110 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v111 = *(unsigned char *)(*(void *)(a2 + *v8) + v109);
            *(void *)(a2 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              BOOL v16 = v106++ >= 9;
              if (v16)
              {
                uint64_t v112 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v112 = 0;
        }
        else {
          uint64_t v112 = v107;
        }
LABEL_160:
        objc_msgSend(a1, "setFirstPassInfoReceptionTimeInNs:", v112, v113, v114);
        goto LABEL_171;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_171;
    }
  }
}

uint64_t MHSchemaMHVoiceTriggerSecondPassTriggeredReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MHSchemaMHVoiceTriggerEventInfo);
        if (!PBReaderPlaceMark() || (MHSchemaMHVoiceTriggerEventInfoReadFrom(v17, a2, v18) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVoiceTriggerEventInfo:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MHSchemaMHVoiceTriggerTwoShotDetectedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTASRStateUpdatedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setAsrState:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTBatchRequestCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MTSchemaMTBatchRequestContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContextId:", v17, 0, 0);
        goto LABEL_36;
      case 2u:
        char v17 = objc_alloc_init(MTSchemaMTBatchRequestStarted);
        if (!PBReaderPlaceMark() || (MTSchemaMTBatchRequestStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_36;
      case 3u:
        char v17 = objc_alloc_init(MTSchemaMTBatchRequestEnded);
        if (!PBReaderPlaceMark() || (MTSchemaMTBatchRequestEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_36;
      case 4u:
        char v17 = objc_alloc_init(MTSchemaMTBatchRequestFailed);
        if (!PBReaderPlaceMark() || (MTSchemaMTBatchRequestFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_36;
      case 5u:
        char v17 = objc_alloc_init(MTSchemaMTBatchRequestCancelled);
        if PBReaderPlaceMark() && (MTSchemaMTBatchRequestCancelledReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCancelled:", v17, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t MTSchemaMTBatchRequestEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setExists:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTBatchRequestFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v24 = objc_alloc_init(MTSchemaMTError);
        if (!PBReaderPlaceMark() || (MTSchemaMTErrorReadFrom(v24, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setError:", v24, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_36:
        [a1 setNumParagraphFailures:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTBatchRequestStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setSequenceNumber:v24];
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setNumParagraphs:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MTSchemaMTClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMtId:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v17 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSessionId:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MTSchemaMTClientEventV2ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        char v17 = objc_alloc_init(MTSchemaMTBatchRequestContext);
        if (!PBReaderPlaceMark() || !MTSchemaMTBatchRequestContextReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBatchRequestContext:", v17, 0, 0);
        goto LABEL_68;
      case 'f':
        char v17 = objc_alloc_init(MTSchemaMTInvocationContext);
        if (!PBReaderPlaceMark() || !MTSchemaMTInvocationContextReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInvocationContext:", v17, 0, 0);
        goto LABEL_68;
      case 'g':
        char v17 = objc_alloc_init(MTSchemaMTASRStateUpdated);
        if (!PBReaderPlaceMark() || (MTSchemaMTASRStateUpdatedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAsrStateUpdated:", v17, 0, 0);
        goto LABEL_68;
      case 'h':
        char v17 = objc_alloc_init(MTSchemaMTLocalePairResolved);
        if (!PBReaderPlaceMark() || (MTSchemaMTLocalePairResolvedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalePairResolved:", v17, 0, 0);
        goto LABEL_68;
      case 'i':
        char v17 = objc_alloc_init(MTSchemaMTInvocationStartedTier1);
        if (!PBReaderPlaceMark() || !MTSchemaMTInvocationStartedTier1ReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInvocationStartedTier1:", v17, 0, 0);
        goto LABEL_68;
      case 'j':
        char v17 = objc_alloc_init(MTSchemaMTAppNextButtonTappedTier1);
        if (!PBReaderPlaceMark() || !MTSchemaMTAppNextButtonTappedTier1ReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppNextButtonTapped:", v17, 0, 0);
        goto LABEL_68;
      case 'k':
        char v17 = objc_alloc_init(MTSchemaMTAppTextBoxDismissedTier1);
        if (!PBReaderPlaceMark() || !MTSchemaMTAppTextBoxDismissedTier1ReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppTextBoxDismissed:", v17, 0, 0);
        goto LABEL_68;
      case 'l':
        char v17 = objc_alloc_init(MTSchemaMTAppTimedOutTier1);
        if (!PBReaderPlaceMark() || !MTSchemaMTAppTimedOutTier1ReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppTimedOut:", v17, 0, 0);
        goto LABEL_68;
      case 'm':
        char v17 = objc_alloc_init(MTSchemaMTFrameworkRequestSent);
        if (!PBReaderPlaceMark() || (MTSchemaMTFrameworkRequestSentReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFrameworkRequestSent:", v17, 0, 0);
        goto LABEL_68;
      case 'n':
        char v17 = objc_alloc_init(MTSchemaMTFrameworkRequestResponseReceived);
        if (!PBReaderPlaceMark()
          || (MTSchemaMTFrameworkRequestResponseReceivedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFrameworkRequestResponseReceived:", v17, 0, 0);
        goto LABEL_68;
      case 'o':
        char v17 = objc_alloc_init(MTSchemaMTAppBackgroundedTier1);
        if (!PBReaderPlaceMark() || !MTSchemaMTAppBackgroundedTier1ReadFrom(v17, a2)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppBackgrounded:", v17, 0, 0);
        goto LABEL_68;
      case 'p':
        char v17 = objc_alloc_init(MTSchemaMTLanguageIdentificationCompleted);
        if (!PBReaderPlaceMark() || (MTSchemaMTLanguageIdentificationCompletedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLanguageIdentificationCompleted:", v17, 0, 0);
        goto LABEL_68;
      case 'q':
        char v17 = objc_alloc_init(MTSchemaMTLanguageDisambiguationUIShown);
        if (!PBReaderPlaceMark() || (MTSchemaMTLanguageDisambiguationUIShownReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLanguageDisambiguationUIShown:", v17, 0, 0);
        goto LABEL_68;
      case 'r':
        char v17 = objc_alloc_init(MTSchemaMTLanguageDisambiguationUISelected);
        if (!PBReaderPlaceMark()
          || (MTSchemaMTLanguageDisambiguationUISelectedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLanguageDisambiguationUISelected:", v17, 0, 0);
        goto LABEL_68;
      case 's':
        char v17 = objc_alloc_init(MTSchemaMTTranslationTTSPlayed);
        if (!PBReaderPlaceMark() || (MTSchemaMTTranslationTTSPlayedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTranslationTTSPlayed:", v17, 0, 0);
        goto LABEL_68;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_69:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v17 = objc_alloc_init(MTSchemaMTClientEventMetadata);
        if (PBReaderPlaceMark() && MTSchemaMTClientEventMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_68:

          goto LABEL_69;
        }
LABEL_75:

        return 0;
    }
  }
}

uint64_t MTSchemaMTErrorReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        unint64_t v25 = PBReaderReadString();
        [a1 setErrorDomain:v25];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_37:
            [a1 setErrorCode:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        unint64_t v25 = PBReaderReadString();
        [a1 setErrorMessage:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTInvocationCancelledReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = objc_alloc_init(MTSchemaMTLocalePair);
        if (!PBReaderPlaceMark() || (MTSchemaMTLocalePairReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalePair:", v24, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setExists:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setQssSessionId:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MTSchemaMTInvocationContextReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(MTSchemaMTInvocationStarted);
        if (!PBReaderPlaceMark() || (MTSchemaMTInvocationStartedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartedOrChanged:", v17, 0, 0);
        goto LABEL_33;
      case 2u:
        unint64_t v17 = objc_alloc_init(MTSchemaMTInvocationEnded);
        if (!PBReaderPlaceMark() || (MTSchemaMTInvocationEndedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEnded:", v17, 0, 0);
        goto LABEL_33;
      case 3u:
        unint64_t v17 = objc_alloc_init(MTSchemaMTInvocationFailed);
        if (!PBReaderPlaceMark() || !MTSchemaMTInvocationFailedReadFrom(v17, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFailed:", v17, 0, 0);
        goto LABEL_33;
      case 4u:
        unint64_t v17 = objc_alloc_init(MTSchemaMTInvocationCancelled);
        if PBReaderPlaceMark() && (MTSchemaMTInvocationCancelledReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCancelled:", v17, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t MTSchemaMTInvocationEndedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v24 = objc_alloc_init(MTSchemaMTLocalePair);
        if (!PBReaderPlaceMark() || (MTSchemaMTLocalePairReadFrom(v24, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalePair:", v24, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 1)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v20 = 0;
            }
LABEL_40:
            [a1 setExists:v20 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v24 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v24, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setQssSessionId:", v24, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MTSchemaMTInvocationFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v18 = objc_alloc_init(MTSchemaMTLocalePair);
        if (!PBReaderPlaceMark() || (MTSchemaMTLocalePairReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalePair:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        char v18 = objc_alloc_init(MTSchemaMTError);
        if (!PBReaderPlaceMark() || (MTSchemaMTErrorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setError:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setQssSessionId:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTInvocationStartedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_89;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_93:
        [a1 setIsOnDeviceTranslation:v21 != 0];
        goto LABEL_127;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_98:
        [a1 setMobileAssetConfigVersion:v31];
        goto LABEL_127;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_103:
        [a1 setTask:v38];
        goto LABEL_127;
      case 5u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v41;
        }
LABEL_108:
        [a1 setInputSource:v45];
        goto LABEL_127;
      case 6u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v48 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
LABEL_112:
        [a1 setIsExplicitLanguageFilterEnabled:v48 != 0];
        goto LABEL_127;
      case 7u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        while (2)
        {
          uint64_t v55 = *v3;
          unint64_t v56 = *(void *)(a2 + v55);
          if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
            *(void *)(a2 + v55) = v56 + 1;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v14 = v53++ >= 9;
              if (v14)
              {
                uint64_t v54 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v54 = 0;
        }
LABEL_116:
        [a1 setIsLanguageIdentificationEnabled:v54 != 0];
        goto LABEL_127;
      case 8u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        while (2)
        {
          uint64_t v61 = *v3;
          unint64_t v62 = *(void *)(a2 + v61);
          if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
            *(void *)(a2 + v61) = v62 + 1;
            v60 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v14 = v59++ >= 9;
              if (v14)
              {
                uint64_t v64 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
        else {
          uint64_t v64 = v60;
        }
LABEL_121:
        [a1 setDisplayMode:v64];
        goto LABEL_127;
      case 9u:
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setQssSessionId:", v17, 0, 0);
        goto LABEL_89;
      case 0xAu:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        while (2)
        {
          uint64_t v68 = *v3;
          unint64_t v69 = *(void *)(a2 + v68);
          if (v69 == -1 || v69 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
            *(void *)(a2 + v68) = v69 + 1;
            v67 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v14 = v66++ >= 9;
              if (v14)
              {
                uint64_t v71 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v71 = 0;
        }
        else {
          uint64_t v71 = v67;
        }
LABEL_126:
        [a1 setInvocationType:v71];
        goto LABEL_127;
      case 0xBu:
        unint64_t v17 = objc_alloc_init(MTSchemaMTAppInvocationMetadata);
        if (!PBReaderPlaceMark() || (MTSchemaMTAppInvocationMetadataReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppInvocationMetadata:", v17, 0, 0);
        goto LABEL_89;
      case 0xCu:
        unint64_t v17 = objc_alloc_init(MTSchemaMTApiInvocationMetadata);
        if PBReaderPlaceMark() && (MTSchemaMTApiInvocationMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setApiInvocationMetadata:", v17, 0, 0);
LABEL_89:

LABEL_127:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_129:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_127;
    }
  }
}

BOOL MTSchemaMTInvocationStartedTier1ReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v17 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkId:", v17, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v17 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
    [a1 setAppBundleId:v17];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTLocalePairReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setSourceLocale:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setTargetLocale:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MTSchemaMTLocalePairResolvedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MTSchemaMTLocalePair);
        if (!PBReaderPlaceMark() || (MTSchemaMTLocalePairReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalePair:", v17, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MWTSchemaMWTCheckpointReportedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_32:
        [a1 setStepType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MWTSchemaMWTClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 101)
      {
        if (v17 == 102)
        {
          unsigned int v18 = objc_alloc_init(MWTSchemaMWTMusicMetadataReported);
          if (!PBReaderPlaceMark() || (MWTSchemaMWTMusicMetadataReportedReadFrom(v18, a2) & 1) == 0)
          {
LABEL_39:

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setMwtMusicMetadataReported:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 103)
        {
          unsigned int v18 = objc_alloc_init(MWTSchemaMWTVMCPUStatsReported);
          if (!PBReaderPlaceMark() || (MWTSchemaMWTVMCPUStatsReportedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setMwtVMCpuStatsReported:", v18, 0, 0);
          goto LABEL_35;
        }
      }
      else
      {
        if (v17 == 1)
        {
          unsigned int v18 = objc_alloc_init(MWTSchemaMWTEventMetadata);
          if (!PBReaderPlaceMark() || !MWTSchemaMWTEventMetadataReadFrom(v18, a2)) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v18, 0, 0);
          goto LABEL_35;
        }
        if (v17 == 101)
        {
          unsigned int v18 = objc_alloc_init(MWTSchemaMWTCheckpointReported);
          if (!PBReaderPlaceMark() || (MWTSchemaMWTCheckpointReportedReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_39;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setMwtCheckpointReported:", v18, 0, 0);
LABEL_35:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MWTSchemaMWTEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSubRequestId:", v18, 0, 0);
        goto LABEL_30;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        unsigned int v18 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMwtId:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(SISchemaUUID);
    if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v18, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setRequestId:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MWTSchemaMWTMusicMetadataReportedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_403;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_406;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_403:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_406:
          [a1 setMusicDomain:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_411;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_411:
          [a1 setQueueType:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_416;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_416:
          [a1 setQueueSize:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v41 = 0;
                  goto LABEL_420;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v41 = 0;
          }
LABEL_420:
          [a1 setIsShuffled:v41 != 0];
          continue;
        case 5u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v14 = v46++ >= 9;
                if (v14)
                {
                  uint64_t v51 = 0;
                  goto LABEL_425;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = v47;
          }
LABEL_425:
          [a1 setPrefetchedMetadataSource:v51];
          continue;
        case 6u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (2)
          {
            uint64_t v55 = *v3;
            unint64_t v56 = *(void *)(a2 + v55);
            if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  uint64_t v58 = 0;
                  goto LABEL_430;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v58 = 0;
          }
          else {
            uint64_t v58 = v54;
          }
LABEL_430:
          [a1 setAssetEndPoint:v58];
          continue;
        case 7u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          while (2)
          {
            uint64_t v62 = *v3;
            unint64_t v63 = *(void *)(a2 + v62);
            if (v63 == -1 || v63 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
              *(void *)(a2 + v62) = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if (v64 < 0)
              {
                v59 += 7;
                BOOL v14 = v60++ >= 9;
                if (v14)
                {
                  uint64_t v65 = 0;
                  goto LABEL_435;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v65 = 0;
          }
          else {
            uint64_t v65 = v61;
          }
LABEL_435:
          [a1 setStreamingContentType:v65];
          continue;
        case 8u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          while (2)
          {
            uint64_t v69 = *v3;
            unint64_t v70 = *(void *)(a2 + v69);
            if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
              *(void *)(a2 + v69) = v70 + 1;
              v68 |= (unint64_t)(v71 & 0x7F) << v66;
              if (v71 < 0)
              {
                v66 += 7;
                BOOL v14 = v67++ >= 9;
                if (v14)
                {
                  uint64_t v72 = 0;
                  goto LABEL_440;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v72 = 0;
          }
          else {
            uint64_t v72 = v68;
          }
LABEL_440:
          [a1 setFormatCodec:v72];
          continue;
        case 9u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v75 = 0;
          while (2)
          {
            uint64_t v76 = *v3;
            unint64_t v77 = *(void *)(a2 + v76);
            if (v77 == -1 || v77 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v77 + 1;
              v75 |= (unint64_t)(v78 & 0x7F) << v73;
              if (v78 < 0)
              {
                v73 += 7;
                BOOL v14 = v74++ >= 9;
                if (v14)
                {
                  uint64_t v79 = 0;
                  goto LABEL_445;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v79 = 0;
          }
          else {
            uint64_t v79 = v75;
          }
LABEL_445:
          [a1 setFormatBitrate:v79];
          continue;
        case 0xAu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          while (2)
          {
            uint64_t v83 = *v3;
            unint64_t v84 = *(void *)(a2 + v83);
            if (v84 == -1 || v84 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
              *(void *)(a2 + v83) = v84 + 1;
              v82 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                BOOL v14 = v81++ >= 9;
                if (v14)
                {
                  uint64_t v86 = 0;
                  goto LABEL_450;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v86 = 0;
          }
          else {
            uint64_t v86 = v82;
          }
LABEL_450:
          [a1 setFormatBitDepth:v86];
          continue;
        case 0xBu:
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v89 = 0;
          while (2)
          {
            uint64_t v90 = *v3;
            unint64_t v91 = *(void *)(a2 + v90);
            if (v91 == -1 || v91 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v91);
              *(void *)(a2 + v90) = v91 + 1;
              v89 |= (unint64_t)(v92 & 0x7F) << v87;
              if (v92 < 0)
              {
                v87 += 7;
                BOOL v14 = v88++ >= 9;
                if (v14)
                {
                  uint64_t v93 = 0;
                  goto LABEL_455;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v93 = 0;
          }
          else {
            uint64_t v93 = v89;
          }
LABEL_455:
          [a1 setFormatChannels:v93];
          continue;
        case 0xCu:
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v96 = 0;
          while (2)
          {
            uint64_t v97 = *v3;
            unint64_t v98 = *(void *)(a2 + v97);
            if (v98 == -1 || v98 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v99 = *(unsigned char *)(*(void *)(a2 + *v7) + v98);
              *(void *)(a2 + v97) = v98 + 1;
              v96 |= (unint64_t)(v99 & 0x7F) << v94;
              if (v99 < 0)
              {
                v94 += 7;
                BOOL v14 = v95++ >= 9;
                if (v14)
                {
                  uint64_t v100 = 0;
                  goto LABEL_460;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v100 = 0;
          }
          else {
            uint64_t v100 = v96;
          }
LABEL_460:
          [a1 setFormatLayout:v100];
          continue;
        case 0xDu:
          char v101 = 0;
          unsigned int v102 = 0;
          uint64_t v103 = 0;
          while (2)
          {
            uint64_t v104 = *v3;
            unint64_t v105 = *(void *)(a2 + v104);
            if (v105 == -1 || v105 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v106 = *(unsigned char *)(*(void *)(a2 + *v7) + v105);
              *(void *)(a2 + v104) = v105 + 1;
              v103 |= (unint64_t)(v106 & 0x7F) << v101;
              if (v106 < 0)
              {
                v101 += 7;
                BOOL v14 = v102++ >= 9;
                if (v14)
                {
                  uint64_t v107 = 0;
                  goto LABEL_465;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v107 = 0;
          }
          else {
            uint64_t v107 = v103;
          }
LABEL_465:
          [a1 setFormatSampleRate:v107];
          continue;
        case 0xEu:
          char v108 = 0;
          unsigned int v109 = 0;
          uint64_t v110 = 0;
          while (2)
          {
            uint64_t v111 = *v3;
            unint64_t v112 = *(void *)(a2 + v111);
            if (v112 == -1 || v112 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v113 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
              *(void *)(a2 + v111) = v112 + 1;
              v110 |= (unint64_t)(v113 & 0x7F) << v108;
              if (v113 < 0)
              {
                v108 += 7;
                BOOL v14 = v109++ >= 9;
                if (v14)
                {
                  uint64_t v114 = 0;
                  goto LABEL_470;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v114 = 0;
          }
          else {
            uint64_t v114 = v110;
          }
LABEL_470:
          [a1 setFormatTier:v114];
          continue;
        case 0xFu:
          char v115 = 0;
          unsigned int v116 = 0;
          uint64_t v117 = 0;
          while (2)
          {
            uint64_t v118 = *v3;
            unint64_t v119 = *(void *)(a2 + v118);
            if (v119 == -1 || v119 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v120 = *(unsigned char *)(*(void *)(a2 + *v7) + v119);
              *(void *)(a2 + v118) = v119 + 1;
              v117 |= (unint64_t)(v120 & 0x7F) << v115;
              if (v120 < 0)
              {
                v115 += 7;
                BOOL v14 = v116++ >= 9;
                if (v14)
                {
                  uint64_t v121 = 0;
                  goto LABEL_475;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v121 = 0;
          }
          else {
            uint64_t v121 = v117;
          }
LABEL_475:
          [a1 setNumberOfSpeakers:v121];
          continue;
        case 0x10u:
          char v122 = 0;
          unsigned int v123 = 0;
          uint64_t v124 = 0;
          while (2)
          {
            uint64_t v125 = *v3;
            unint64_t v126 = *(void *)(a2 + v125);
            if (v126 == -1 || v126 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v127 = *(unsigned char *)(*(void *)(a2 + *v7) + v126);
              *(void *)(a2 + v125) = v126 + 1;
              v124 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                BOOL v14 = v123++ >= 9;
                if (v14)
                {
                  uint64_t v128 = 0;
                  goto LABEL_480;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v128 = 0;
          }
          else {
            uint64_t v128 = v124;
          }
LABEL_480:
          [a1 setRouteConfiguration:v128];
          continue;
        case 0x11u:
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v131 = 0;
          while (2)
          {
            uint64_t v132 = *v3;
            unint64_t v133 = *(void *)(a2 + v132);
            if (v133 == -1 || v133 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v134 = *(unsigned char *)(*(void *)(a2 + *v7) + v133);
              *(void *)(a2 + v132) = v133 + 1;
              v131 |= (unint64_t)(v134 & 0x7F) << v129;
              if (v134 < 0)
              {
                v129 += 7;
                BOOL v14 = v130++ >= 9;
                if (v14)
                {
                  uint64_t v131 = 0;
                  goto LABEL_484;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v131 = 0;
          }
LABEL_484:
          [a1 setIsAccountDataReady:v131 != 0];
          continue;
        case 0x12u:
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v137 = 0;
          while (2)
          {
            uint64_t v138 = *v3;
            unint64_t v139 = *(void *)(a2 + v138);
            if (v139 == -1 || v139 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v140 = *(unsigned char *)(*(void *)(a2 + *v7) + v139);
              *(void *)(a2 + v138) = v139 + 1;
              v137 |= (unint64_t)(v140 & 0x7F) << v135;
              if (v140 < 0)
              {
                v135 += 7;
                BOOL v14 = v136++ >= 9;
                if (v14)
                {
                  uint64_t v137 = 0;
                  goto LABEL_488;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v137 = 0;
          }
LABEL_488:
          [a1 setIsStoreBagReady:v137 != 0];
          continue;
        case 0x13u:
          char v141 = 0;
          unsigned int v142 = 0;
          uint64_t v143 = 0;
          while (2)
          {
            uint64_t v144 = *v3;
            unint64_t v145 = *(void *)(a2 + v144);
            if (v145 == -1 || v145 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v146 = *(unsigned char *)(*(void *)(a2 + *v7) + v145);
              *(void *)(a2 + v144) = v145 + 1;
              v143 |= (unint64_t)(v146 & 0x7F) << v141;
              if (v146 < 0)
              {
                v141 += 7;
                BOOL v14 = v142++ >= 9;
                if (v14)
                {
                  uint64_t v143 = 0;
                  goto LABEL_492;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v143 = 0;
          }
LABEL_492:
          [a1 setIsLeaseReady:v143 != 0];
          continue;
        case 0x14u:
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v149 = 0;
          while (2)
          {
            uint64_t v150 = *v3;
            unint64_t v151 = *(void *)(a2 + v150);
            if (v151 == -1 || v151 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v152 = *(unsigned char *)(*(void *)(a2 + *v7) + v151);
              *(void *)(a2 + v150) = v151 + 1;
              v149 |= (unint64_t)(v152 & 0x7F) << v147;
              if (v152 < 0)
              {
                v147 += 7;
                BOOL v14 = v148++ >= 9;
                if (v14)
                {
                  uint64_t v149 = 0;
                  goto LABEL_496;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v149 = 0;
          }
LABEL_496:
          [a1 setIsOnlineKeyReady:v149 != 0];
          continue;
        case 0x15u:
          char v153 = 0;
          unsigned int v154 = 0;
          uint64_t v155 = 0;
          while (2)
          {
            uint64_t v156 = *v3;
            unint64_t v157 = *(void *)(a2 + v156);
            if (v157 == -1 || v157 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v158 = *(unsigned char *)(*(void *)(a2 + *v7) + v157);
              *(void *)(a2 + v156) = v157 + 1;
              v155 |= (unint64_t)(v158 & 0x7F) << v153;
              if (v158 < 0)
              {
                v153 += 7;
                BOOL v14 = v154++ >= 9;
                if (v14)
                {
                  uint64_t v155 = 0;
                  goto LABEL_500;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v155 = 0;
          }
LABEL_500:
          [a1 setIsOfflineKeyReady:v155 != 0];
          continue;
        case 0x16u:
          char v159 = 0;
          unsigned int v160 = 0;
          uint64_t v161 = 0;
          while (2)
          {
            uint64_t v162 = *v3;
            unint64_t v163 = *(void *)(a2 + v162);
            if (v163 == -1 || v163 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
              *(void *)(a2 + v162) = v163 + 1;
              v161 |= (unint64_t)(v164 & 0x7F) << v159;
              if (v164 < 0)
              {
                v159 += 7;
                BOOL v14 = v160++ >= 9;
                if (v14)
                {
                  uint64_t v161 = 0;
                  goto LABEL_504;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v161 = 0;
          }
LABEL_504:
          [a1 setIsHlsKeysReady:v161 != 0];
          continue;
        case 0x17u:
          char v165 = 0;
          unsigned int v166 = 0;
          uint64_t v167 = 0;
          while (2)
          {
            uint64_t v168 = *v3;
            unint64_t v169 = *(void *)(a2 + v168);
            if (v169 == -1 || v169 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v170 = *(unsigned char *)(*(void *)(a2 + *v7) + v169);
              *(void *)(a2 + v168) = v169 + 1;
              v167 |= (unint64_t)(v170 & 0x7F) << v165;
              if (v170 < 0)
              {
                v165 += 7;
                BOOL v14 = v166++ >= 9;
                if (v14)
                {
                  uint64_t v167 = 0;
                  goto LABEL_508;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v167 = 0;
          }
LABEL_508:
          [a1 setIsInterruptingPlayback:v167 != 0];
          continue;
        case 0x18u:
          char v171 = 0;
          unsigned int v172 = 0;
          uint64_t v173 = 0;
          while (2)
          {
            uint64_t v174 = *v3;
            unint64_t v175 = *(void *)(a2 + v174);
            if (v175 == -1 || v175 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v176 = *(unsigned char *)(*(void *)(a2 + *v7) + v175);
              *(void *)(a2 + v174) = v175 + 1;
              v173 |= (unint64_t)(v176 & 0x7F) << v171;
              if (v176 < 0)
              {
                v171 += 7;
                BOOL v14 = v172++ >= 9;
                if (v14)
                {
                  uint64_t v173 = 0;
                  goto LABEL_512;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v173 = 0;
          }
LABEL_512:
          [a1 setIsRemoteSetQueue:v173 != 0];
          continue;
        case 0x19u:
          char v177 = 0;
          unsigned int v178 = 0;
          uint64_t v179 = 0;
          while (2)
          {
            uint64_t v180 = *v3;
            unint64_t v181 = *(void *)(a2 + v180);
            if (v181 == -1 || v181 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v182 = *(unsigned char *)(*(void *)(a2 + *v7) + v181);
              *(void *)(a2 + v180) = v181 + 1;
              v179 |= (unint64_t)(v182 & 0x7F) << v177;
              if (v182 < 0)
              {
                v177 += 7;
                BOOL v14 = v178++ >= 9;
                if (v14)
                {
                  uint64_t v179 = 0;
                  goto LABEL_516;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v179 = 0;
          }
LABEL_516:
          [a1 setIsDelegatedPlayback:v179 != 0];
          continue;
        case 0x1Au:
          char v183 = 0;
          unsigned int v184 = 0;
          uint64_t v185 = 0;
          while (2)
          {
            uint64_t v186 = *v3;
            unint64_t v187 = *(void *)(a2 + v186);
            if (v187 == -1 || v187 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v188 = *(unsigned char *)(*(void *)(a2 + *v7) + v187);
              *(void *)(a2 + v186) = v187 + 1;
              v185 |= (unint64_t)(v188 & 0x7F) << v183;
              if (v188 < 0)
              {
                v183 += 7;
                BOOL v14 = v184++ >= 9;
                if (v14)
                {
                  uint64_t v185 = 0;
                  goto LABEL_520;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v185 = 0;
          }
LABEL_520:
          [a1 setIsNonDefaultUser:v185 != 0];
          continue;
        case 0x1Bu:
          char v189 = 0;
          unsigned int v190 = 0;
          uint64_t v191 = 0;
          while (2)
          {
            uint64_t v192 = *v3;
            unint64_t v193 = *(void *)(a2 + v192);
            if (v193 == -1 || v193 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v194 = *(unsigned char *)(*(void *)(a2 + *v7) + v193);
              *(void *)(a2 + v192) = v193 + 1;
              v191 |= (unint64_t)(v194 & 0x7F) << v189;
              if (v194 < 0)
              {
                v189 += 7;
                BOOL v14 = v190++ >= 9;
                if (v14)
                {
                  uint64_t v191 = 0;
                  goto LABEL_524;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v191 = 0;
          }
LABEL_524:
          [a1 setIsAutoPlay:v191 != 0];
          continue;
        case 0x1Cu:
          char v195 = 0;
          unsigned int v196 = 0;
          uint64_t v197 = 0;
          while (2)
          {
            uint64_t v198 = *v3;
            unint64_t v199 = *(void *)(a2 + v198);
            if (v199 == -1 || v199 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v200 = *(unsigned char *)(*(void *)(a2 + *v7) + v199);
              *(void *)(a2 + v198) = v199 + 1;
              v197 |= (unint64_t)(v200 & 0x7F) << v195;
              if (v200 < 0)
              {
                v195 += 7;
                BOOL v14 = v196++ >= 9;
                if (v14)
                {
                  uint64_t v197 = 0;
                  goto LABEL_528;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v197 = 0;
          }
LABEL_528:
          [a1 setIsFirstPlayAfterAppLaunch:v197 != 0];
          continue;
        case 0x1Du:
          char v201 = 0;
          unsigned int v202 = 0;
          uint64_t v203 = 0;
          while (2)
          {
            uint64_t v204 = *v3;
            unint64_t v205 = *(void *)(a2 + v204);
            if (v205 == -1 || v205 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v206 = *(unsigned char *)(*(void *)(a2 + *v7) + v205);
              *(void *)(a2 + v204) = v205 + 1;
              v203 |= (unint64_t)(v206 & 0x7F) << v201;
              if (v206 < 0)
              {
                v201 += 7;
                BOOL v14 = v202++ >= 9;
                if (v14)
                {
                  uint64_t v203 = 0;
                  goto LABEL_532;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v203 = 0;
          }
LABEL_532:
          [a1 setIsMiniSinfAvailable:v203 != 0];
          continue;
        case 0x1Eu:
          char v207 = 0;
          unsigned int v208 = 0;
          uint64_t v209 = 0;
          while (2)
          {
            uint64_t v210 = *v3;
            unint64_t v211 = *(void *)(a2 + v210);
            if (v211 == -1 || v211 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v212 = *(unsigned char *)(*(void *)(a2 + *v7) + v211);
              *(void *)(a2 + v210) = v211 + 1;
              v209 |= (unint64_t)(v212 & 0x7F) << v207;
              if (v212 < 0)
              {
                v207 += 7;
                BOOL v14 = v208++ >= 9;
                if (v14)
                {
                  uint64_t v209 = 0;
                  goto LABEL_536;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v209 = 0;
          }
LABEL_536:
          [a1 setIsSharePlayPlayback:v209 != 0];
          continue;
        case 0x1Fu:
          char v213 = 0;
          unsigned int v214 = 0;
          uint64_t v215 = 0;
          while (2)
          {
            uint64_t v216 = *v3;
            unint64_t v217 = *(void *)(a2 + v216);
            if (v217 == -1 || v217 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v218 = *(unsigned char *)(*(void *)(a2 + *v7) + v217);
              *(void *)(a2 + v216) = v217 + 1;
              v215 |= (unint64_t)(v218 & 0x7F) << v213;
              if (v218 < 0)
              {
                v213 += 7;
                BOOL v14 = v214++ >= 9;
                if (v14)
                {
                  uint64_t v215 = 0;
                  goto LABEL_540;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v215 = 0;
          }
LABEL_540:
          [a1 setIsSuzeLease:v215 != 0];
          continue;
        case 0x20u:
          char v219 = 0;
          unsigned int v220 = 0;
          uint64_t v221 = 0;
          while (2)
          {
            uint64_t v222 = *v3;
            unint64_t v223 = *(void *)(a2 + v222);
            if (v223 == -1 || v223 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v224 = *(unsigned char *)(*(void *)(a2 + *v7) + v223);
              *(void *)(a2 + v222) = v223 + 1;
              v221 |= (unint64_t)(v224 & 0x7F) << v219;
              if (v224 < 0)
              {
                v219 += 7;
                BOOL v14 = v220++ >= 9;
                if (v14)
                {
                  uint64_t v225 = 0;
                  goto LABEL_545;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v225 = 0;
          }
          else {
            uint64_t v225 = v221;
          }
LABEL_545:
          [a1 setNetworkConnectionType:v225];
          continue;
        case 0x21u:
          char v226 = 0;
          unsigned int v227 = 0;
          uint64_t v228 = 0;
          while (2)
          {
            uint64_t v229 = *v3;
            unint64_t v230 = *(void *)(a2 + v229);
            if (v230 == -1 || v230 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v231 = *(unsigned char *)(*(void *)(a2 + *v7) + v230);
              *(void *)(a2 + v229) = v230 + 1;
              v228 |= (unint64_t)(v231 & 0x7F) << v226;
              if (v231 < 0)
              {
                v226 += 7;
                BOOL v14 = v227++ >= 9;
                if (v14)
                {
                  uint64_t v228 = 0;
                  goto LABEL_549;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v228 = 0;
          }
LABEL_549:
          [a1 setWasMediaLibraryDatabaseUpgraded:v228 != 0];
          continue;
        case 0x22u:
          char v232 = 0;
          unsigned int v233 = 0;
          uint64_t v234 = 0;
          while (2)
          {
            uint64_t v235 = *v3;
            unint64_t v236 = *(void *)(a2 + v235);
            if (v236 == -1 || v236 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v237 = *(unsigned char *)(*(void *)(a2 + *v7) + v236);
              *(void *)(a2 + v235) = v236 + 1;
              v234 |= (unint64_t)(v237 & 0x7F) << v232;
              if (v237 < 0)
              {
                v232 += 7;
                BOOL v14 = v233++ >= 9;
                if (v14)
                {
                  uint64_t v234 = 0;
                  goto LABEL_553;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v234 = 0;
          }
LABEL_553:
          [a1 setIsPrimaryUser:v234 != 0];
          continue;
        case 0x23u:
          char v238 = PBReaderReadString();
          [a1 setErrorResolutionType:v238];
          goto LABEL_401;
        case 0x24u:
          char v239 = 0;
          unsigned int v240 = 0;
          uint64_t v241 = 0;
          while (2)
          {
            uint64_t v242 = *v3;
            unint64_t v243 = *(void *)(a2 + v242);
            if (v243 == -1 || v243 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v244 = *(unsigned char *)(*(void *)(a2 + *v7) + v243);
              *(void *)(a2 + v242) = v243 + 1;
              v241 |= (unint64_t)(v244 & 0x7F) << v239;
              if (v244 < 0)
              {
                v239 += 7;
                BOOL v14 = v240++ >= 9;
                if (v14)
                {
                  uint64_t v245 = 0;
                  goto LABEL_558;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v245 = 0;
          }
          else {
            uint64_t v245 = v241;
          }
LABEL_558:
          [a1 setEndPointType:v245];
          continue;
        case 0x25u:
          char v246 = 0;
          unsigned int v247 = 0;
          uint64_t v248 = 0;
          while (2)
          {
            uint64_t v249 = *v3;
            unint64_t v250 = *(void *)(a2 + v249);
            if (v250 == -1 || v250 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v251 = *(unsigned char *)(*(void *)(a2 + *v7) + v250);
              *(void *)(a2 + v249) = v250 + 1;
              v248 |= (unint64_t)(v251 & 0x7F) << v246;
              if (v251 < 0)
              {
                v246 += 7;
                BOOL v14 = v247++ >= 9;
                if (v14)
                {
                  uint64_t v252 = 0;
                  goto LABEL_563;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v252 = 0;
          }
          else {
            uint64_t v252 = v248;
          }
LABEL_563:
          [a1 setRouteType:v252];
          continue;
        case 0x26u:
          char v253 = 0;
          unsigned int v254 = 0;
          uint64_t v255 = 0;
          while (2)
          {
            uint64_t v256 = *v3;
            unint64_t v257 = *(void *)(a2 + v256);
            if (v257 == -1 || v257 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v258 = *(unsigned char *)(*(void *)(a2 + *v7) + v257);
              *(void *)(a2 + v256) = v257 + 1;
              v255 |= (unint64_t)(v258 & 0x7F) << v253;
              if (v258 < 0)
              {
                v253 += 7;
                BOOL v14 = v254++ >= 9;
                if (v14)
                {
                  uint64_t v259 = 0;
                  goto LABEL_568;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v259 = 0;
          }
          else {
            uint64_t v259 = v255;
          }
LABEL_568:
          [a1 setFormatLayoutValue:v259];
          continue;
        case 0x27u:
          char v260 = 0;
          unsigned int v261 = 0;
          uint64_t v262 = 0;
          while (2)
          {
            uint64_t v263 = *v3;
            unint64_t v264 = *(void *)(a2 + v263);
            if (v264 == -1 || v264 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v265 = *(unsigned char *)(*(void *)(a2 + *v7) + v264);
              *(void *)(a2 + v263) = v264 + 1;
              v262 |= (unint64_t)(v265 & 0x7F) << v260;
              if (v265 < 0)
              {
                v260 += 7;
                BOOL v14 = v261++ >= 9;
                if (v14)
                {
                  uint64_t v266 = 0;
                  goto LABEL_573;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v266 = 0;
          }
          else {
            uint64_t v266 = v262;
          }
LABEL_573:
          [a1 setAssetSource:v266];
          continue;
        case 0x28u:
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v269 = 0;
          while (2)
          {
            uint64_t v270 = *v3;
            unint64_t v271 = *(void *)(a2 + v270);
            if (v271 == -1 || v271 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v272 = *(unsigned char *)(*(void *)(a2 + *v7) + v271);
              *(void *)(a2 + v270) = v271 + 1;
              v269 |= (unint64_t)(v272 & 0x7F) << v267;
              if (v272 < 0)
              {
                v267 += 7;
                BOOL v14 = v268++ >= 9;
                if (v14)
                {
                  uint64_t v273 = 0;
                  goto LABEL_578;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v273 = 0;
          }
          else {
            uint64_t v273 = v269;
          }
LABEL_578:
          [a1 setAssetLocation:v273];
          continue;
        case 0x29u:
          char v274 = 0;
          unsigned int v275 = 0;
          uint64_t v276 = 0;
          while (2)
          {
            uint64_t v277 = *v3;
            unint64_t v278 = *(void *)(a2 + v277);
            if (v278 == -1 || v278 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v279 = *(unsigned char *)(*(void *)(a2 + *v7) + v278);
              *(void *)(a2 + v277) = v278 + 1;
              v276 |= (unint64_t)(v279 & 0x7F) << v274;
              if (v279 < 0)
              {
                v274 += 7;
                BOOL v14 = v275++ >= 9;
                if (v14)
                {
                  uint64_t v280 = 0;
                  goto LABEL_583;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v280 = 0;
          }
          else {
            uint64_t v280 = v276;
          }
LABEL_583:
          [a1 setSubscriptionType:v280];
          continue;
        case 0x2Au:
          char v281 = 0;
          unsigned int v282 = 0;
          uint64_t v283 = 0;
          while (2)
          {
            uint64_t v284 = *v3;
            unint64_t v285 = *(void *)(a2 + v284);
            if (v285 == -1 || v285 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v286 = *(unsigned char *)(*(void *)(a2 + *v7) + v285);
              *(void *)(a2 + v284) = v285 + 1;
              v283 |= (unint64_t)(v286 & 0x7F) << v281;
              if (v286 < 0)
              {
                v281 += 7;
                BOOL v14 = v282++ >= 9;
                if (v14)
                {
                  uint64_t v283 = 0;
                  goto LABEL_587;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v283 = 0;
          }
LABEL_587:
          [a1 setHasLookupWaitTime:v283 != 0];
          continue;
        case 0x2Bu:
          char v287 = 0;
          unsigned int v288 = 0;
          uint64_t v289 = 0;
          while (2)
          {
            uint64_t v290 = *v3;
            unint64_t v291 = *(void *)(a2 + v290);
            if (v291 == -1 || v291 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v292 = *(unsigned char *)(*(void *)(a2 + *v7) + v291);
              *(void *)(a2 + v290) = v291 + 1;
              v289 |= (unint64_t)(v292 & 0x7F) << v287;
              if (v292 < 0)
              {
                v287 += 7;
                BOOL v14 = v288++ >= 9;
                if (v14)
                {
                  uint64_t v289 = 0;
                  goto LABEL_591;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v289 = 0;
          }
LABEL_591:
          [a1 setHasBagWaitTime:v289 != 0];
          continue;
        case 0x2Cu:
          char v293 = 0;
          unsigned int v294 = 0;
          uint64_t v295 = 0;
          while (2)
          {
            uint64_t v296 = *v3;
            unint64_t v297 = *(void *)(a2 + v296);
            if (v297 == -1 || v297 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v298 = *(unsigned char *)(*(void *)(a2 + *v7) + v297);
              *(void *)(a2 + v296) = v297 + 1;
              v295 |= (unint64_t)(v298 & 0x7F) << v293;
              if (v298 < 0)
              {
                v293 += 7;
                BOOL v14 = v294++ >= 9;
                if (v14)
                {
                  uint64_t v295 = 0;
                  goto LABEL_595;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v295 = 0;
          }
LABEL_595:
          [a1 setHasLeaseWaitTime:v295 != 0];
          continue;
        case 0x2Du:
          char v299 = 0;
          unsigned int v300 = 0;
          uint64_t v301 = 0;
          while (2)
          {
            uint64_t v302 = *v3;
            unint64_t v303 = *(void *)(a2 + v302);
            if (v303 == -1 || v303 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v304 = *(unsigned char *)(*(void *)(a2 + *v7) + v303);
              *(void *)(a2 + v302) = v303 + 1;
              v301 |= (unint64_t)(v304 & 0x7F) << v299;
              if (v304 < 0)
              {
                v299 += 7;
                BOOL v14 = v300++ >= 9;
                if (v14)
                {
                  uint64_t v301 = 0;
                  goto LABEL_599;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v301 = 0;
          }
LABEL_599:
          [a1 setHasSuzeLeaseWaitTime:v301 != 0];
          continue;
        case 0x2Eu:
          char v305 = 0;
          unsigned int v306 = 0;
          uint64_t v307 = 0;
          while (2)
          {
            uint64_t v308 = *v3;
            unint64_t v309 = *(void *)(a2 + v308);
            if (v309 == -1 || v309 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v310 = *(unsigned char *)(*(void *)(a2 + *v7) + v309);
              *(void *)(a2 + v308) = v309 + 1;
              v307 |= (unint64_t)(v310 & 0x7F) << v305;
              if (v310 < 0)
              {
                v305 += 7;
                BOOL v14 = v306++ >= 9;
                if (v14)
                {
                  uint64_t v307 = 0;
                  goto LABEL_603;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v307 = 0;
          }
LABEL_603:
          [a1 setHasSubscriptionAssetLoadWaitTime:v307 != 0];
          continue;
        case 0x2Fu:
          char v311 = 0;
          unsigned int v312 = 0;
          uint64_t v313 = 0;
          while (2)
          {
            uint64_t v314 = *v3;
            unint64_t v315 = *(void *)(a2 + v314);
            if (v315 == -1 || v315 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v316 = *(unsigned char *)(*(void *)(a2 + *v7) + v315);
              *(void *)(a2 + v314) = v315 + 1;
              v313 |= (unint64_t)(v316 & 0x7F) << v311;
              if (v316 < 0)
              {
                v311 += 7;
                BOOL v14 = v312++ >= 9;
                if (v14)
                {
                  uint64_t v313 = 0;
                  goto LABEL_607;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v313 = 0;
          }
LABEL_607:
          [a1 setHasMediaRedownloadWaitTime:v313 != 0];
          continue;
        case 0x30u:
          char v317 = 0;
          unsigned int v318 = 0;
          uint64_t v319 = 0;
          while (2)
          {
            uint64_t v320 = *v3;
            unint64_t v321 = *(void *)(a2 + v320);
            if (v321 == -1 || v321 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v322 = *(unsigned char *)(*(void *)(a2 + *v7) + v321);
              *(void *)(a2 + v320) = v321 + 1;
              v319 |= (unint64_t)(v322 & 0x7F) << v317;
              if (v322 < 0)
              {
                v317 += 7;
                BOOL v14 = v318++ >= 9;
                if (v14)
                {
                  uint64_t v323 = 0;
                  goto LABEL_612;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v323 = 0;
          }
          else {
            uint64_t v323 = v319;
          }
LABEL_612:
          [a1 setCmInitialStartupItemCreationToReadyToPlayDurationInMs:v323];
          continue;
        case 0x31u:
          char v324 = 0;
          unsigned int v325 = 0;
          uint64_t v326 = 0;
          while (2)
          {
            uint64_t v327 = *v3;
            unint64_t v328 = *(void *)(a2 + v327);
            if (v328 == -1 || v328 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v329 = *(unsigned char *)(*(void *)(a2 + *v7) + v328);
              *(void *)(a2 + v327) = v328 + 1;
              v326 |= (unint64_t)(v329 & 0x7F) << v324;
              if (v329 < 0)
              {
                v324 += 7;
                BOOL v14 = v325++ >= 9;
                if (v14)
                {
                  uint64_t v330 = 0;
                  goto LABEL_617;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v330 = 0;
          }
          else {
            uint64_t v330 = v326;
          }
LABEL_617:
          [a1 setCmInitialStartupItemCreationToLtluDurationInMs:v330];
          continue;
        case 0x32u:
          char v331 = 0;
          unsigned int v332 = 0;
          uint64_t v333 = 0;
          while (2)
          {
            uint64_t v334 = *v3;
            unint64_t v335 = *(void *)(a2 + v334);
            if (v335 == -1 || v335 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v336 = *(unsigned char *)(*(void *)(a2 + *v7) + v335);
              *(void *)(a2 + v334) = v335 + 1;
              v333 |= (unint64_t)(v336 & 0x7F) << v331;
              if (v336 < 0)
              {
                v331 += 7;
                BOOL v14 = v332++ >= 9;
                if (v14)
                {
                  uint64_t v337 = 0;
                  goto LABEL_622;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v337 = 0;
          }
          else {
            uint64_t v337 = v333;
          }
LABEL_622:
          [a1 setMasterPlaylistConnectionTlsHandshakeDurationInMs:v337];
          continue;
        case 0x33u:
          char v338 = 0;
          unsigned int v339 = 0;
          uint64_t v340 = 0;
          while (2)
          {
            uint64_t v341 = *v3;
            unint64_t v342 = *(void *)(a2 + v341);
            if (v342 == -1 || v342 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v343 = *(unsigned char *)(*(void *)(a2 + *v7) + v342);
              *(void *)(a2 + v341) = v342 + 1;
              v340 |= (unint64_t)(v343 & 0x7F) << v338;
              if (v343 < 0)
              {
                v338 += 7;
                BOOL v14 = v339++ >= 9;
                if (v14)
                {
                  uint64_t v344 = 0;
                  goto LABEL_627;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v344 = 0;
          }
          else {
            uint64_t v344 = v340;
          }
LABEL_627:
          [a1 setMasterPlaylistRequestDurationInMs:v344];
          continue;
        case 0x34u:
          char v345 = 0;
          unsigned int v346 = 0;
          uint64_t v347 = 0;
          while (2)
          {
            uint64_t v348 = *v3;
            unint64_t v349 = *(void *)(a2 + v348);
            if (v349 == -1 || v349 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v350 = *(unsigned char *)(*(void *)(a2 + *v7) + v349);
              *(void *)(a2 + v348) = v349 + 1;
              v347 |= (unint64_t)(v350 & 0x7F) << v345;
              if (v350 < 0)
              {
                v345 += 7;
                BOOL v14 = v346++ >= 9;
                if (v14)
                {
                  uint64_t v351 = 0;
                  goto LABEL_632;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v351 = 0;
          }
          else {
            uint64_t v351 = v347;
          }
LABEL_632:
          [a1 setSubPlaylistConnectionTlsHandshakeDurationInMs:v351];
          continue;
        case 0x35u:
          char v352 = 0;
          unsigned int v353 = 0;
          uint64_t v354 = 0;
          while (2)
          {
            uint64_t v355 = *v3;
            unint64_t v356 = *(void *)(a2 + v355);
            if (v356 == -1 || v356 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v357 = *(unsigned char *)(*(void *)(a2 + *v7) + v356);
              *(void *)(a2 + v355) = v356 + 1;
              v354 |= (unint64_t)(v357 & 0x7F) << v352;
              if (v357 < 0)
              {
                v352 += 7;
                BOOL v14 = v353++ >= 9;
                if (v14)
                {
                  uint64_t v358 = 0;
                  goto LABEL_637;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v358 = 0;
          }
          else {
            uint64_t v358 = v354;
          }
LABEL_637:
          [a1 setSubPlaylistRequestDurationInMs:v358];
          continue;
        case 0x36u:
          char v359 = 0;
          unsigned int v360 = 0;
          uint64_t v361 = 0;
          while (2)
          {
            uint64_t v362 = *v3;
            unint64_t v363 = *(void *)(a2 + v362);
            if (v363 == -1 || v363 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v364 = *(unsigned char *)(*(void *)(a2 + *v7) + v363);
              *(void *)(a2 + v362) = v363 + 1;
              v361 |= (unint64_t)(v364 & 0x7F) << v359;
              if (v364 < 0)
              {
                v359 += 7;
                BOOL v14 = v360++ >= 9;
                if (v14)
                {
                  uint64_t v365 = 0;
                  goto LABEL_642;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v365 = 0;
          }
          else {
            uint64_t v365 = v361;
          }
LABEL_642:
          [a1 setContentConnectionTlsHandshakeDurationInMs:v365];
          continue;
        case 0x37u:
          char v366 = 0;
          unsigned int v367 = 0;
          uint64_t v368 = 0;
          break;
        case 0x38u:
          char v238 = PBReaderReadString();
          [a1 setAudioQueueType:v238];
LABEL_401:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v369 = *v3;
        unint64_t v370 = *(void *)(a2 + v369);
        if (v370 == -1 || v370 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v371 = *(unsigned char *)(*(void *)(a2 + *v7) + v370);
        *(void *)(a2 + v369) = v370 + 1;
        v368 |= (unint64_t)(v371 & 0x7F) << v366;
        if ((v371 & 0x80) == 0) {
          goto LABEL_644;
        }
        v366 += 7;
        BOOL v14 = v367++ >= 9;
        if (v14)
        {
          uint64_t v372 = 0;
          goto LABEL_647;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_644:
      uint64_t v372 = *(unsigned char *)(a2 + *v5) ? 0 : v368;
LABEL_647:
      [a1 setContentFirstSegmentDurationInMs:v372];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MWTSchemaMWTVMCPUStatsReportedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_85;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_88:
          [a1 setSnapshotStage:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_93:
          [a1 setCpuTicksSystem:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_98;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_98:
          [a1 setCpuTicksUser:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v14 = v40++ >= 9;
                if (v14)
                {
                  uint64_t v45 = 0;
                  goto LABEL_103;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v41;
          }
LABEL_103:
          [a1 setCpuTicksIdle:v45];
          continue;
        case 5u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                BOOL v14 = v47++ >= 9;
                if (v14)
                {
                  uint64_t v52 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v52 = 0;
          }
          else {
            uint64_t v52 = v48;
          }
LABEL_108:
          [a1 setCpuTicksNice:v52];
          continue;
        case 6u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (2)
          {
            uint64_t v56 = *v3;
            unint64_t v57 = *(void *)(a2 + v56);
            if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
              *(void *)(a2 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                BOOL v14 = v54++ >= 9;
                if (v14)
                {
                  uint64_t v59 = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v55;
          }
LABEL_113:
          [a1 setCompressions:v59];
          continue;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v62 |= (unint64_t)(v65 & 0x7F) << v60;
              if (v65 < 0)
              {
                v60 += 7;
                BOOL v14 = v61++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
          else {
            uint64_t v66 = v62;
          }
LABEL_118:
          [a1 setDecompressions:v66];
          continue;
        case 8u:
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          while (2)
          {
            uint64_t v70 = *v3;
            unint64_t v71 = *(void *)(a2 + v70);
            if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v14 = v68++ >= 9;
                if (v14)
                {
                  uint64_t v73 = 0;
                  goto LABEL_123;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v73 = 0;
          }
          else {
            uint64_t v73 = v69;
          }
LABEL_123:
          [a1 setPageins:v73];
          continue;
        case 9u:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v77 = *v3;
        unint64_t v78 = *(void *)(a2 + v77);
        if (v78 == -1 || v78 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
        *(void *)(a2 + v77) = v78 + 1;
        v76 |= (unint64_t)(v79 & 0x7F) << v74;
        if ((v79 & 0x80) == 0) {
          goto LABEL_125;
        }
        v74 += 7;
        BOOL v14 = v75++ >= 9;
        if (v14)
        {
          uint64_t v80 = 0;
          goto LABEL_128;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_125:
      uint64_t v80 = *(unsigned char *)(a2 + *v5) ? 0 : v76;
LABEL_128:
      [a1 setFaults:v80];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETBluetoothDeviceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)(a2 + *v4))
        {
          double v29 = *(double *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v29 = 0.0;
        }
        [a1 setRssi:v29];
      }
      else if ((v10 >> 3) == 1)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_33;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_36:
        [a1 setIndex:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL NETSchemaNETClientEventReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 'e':
        int v17 = objc_alloc_init(NETSchemaNETSessionConnectionHttpHeaderCreated);
        if (!PBReaderPlaceMark() || !NETSchemaNETSessionConnectionHttpHeaderCreatedReadFrom(v17, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionConnectionHttpHeaderCreated:", v17, 0, 0);
        goto LABEL_50;
      case 'f':
        int v17 = objc_alloc_init(NETSchemaNETSessionConnectionSnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETSessionConnectionSnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionConnectionSnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      case 'g':
        int v17 = objc_alloc_init(NETSchemaNETDebugSessionConnectionSnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETDebugSessionConnectionSnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDebugSessionConnectionSnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      case 'h':
        int v17 = objc_alloc_init(NETSchemaNETSessionConnectionFailed);
        if (!PBReaderPlaceMark() || (NETSchemaNETSessionConnectionFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSessionConnectionFailed:", v17, 0, 0);
        goto LABEL_50;
      case 'i':
        int v17 = objc_alloc_init(NETSchemaNETPeerConnectionFailed);
        if (!PBReaderPlaceMark() || (NETSchemaNETPeerConnectionFailedReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPeerConnectionFailed:", v17, 0, 0);
        goto LABEL_50;
      case 'j':
        int v17 = objc_alloc_init(NETSchemaNETNetworkConnectionStatePreparationSnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETNetworkConnectionStatePreparationSnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNetworkConnectionStatePreparationSnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      case 'k':
        int v17 = objc_alloc_init(NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDebugNetworkConnectionStatePreparationSnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      case 'l':
        int v17 = objc_alloc_init(NETSchemaNETNetworkConnectionStateReadySnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETNetworkConnectionStateReadySnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNetworkConnectionStateReadySnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      case 'm':
        int v17 = objc_alloc_init(NETSchemaNETDebugNetworkConnectionStateReadySnapshotCaptured);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETDebugNetworkConnectionStateReadySnapshotCapturedReadFrom(v17, a2) & 1) == 0)
        {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDebugNetworkConnectionStateReadySnapshotCaptured:", v17, 0, 0);
        goto LABEL_50;
      default:
        if ((v10 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        int v17 = objc_alloc_init(NETSchemaNETClientEventMetadata);
        if PBReaderPlaceMark() && (NETSchemaNETClientEventMetadataReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEventMetadata:", v17, 0, 0);
LABEL_50:

          goto LABEL_51;
        }
LABEL_57:

        return 0;
    }
  }
}

uint64_t NETSchemaNETClientEventMetadataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v25, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNetId:", v25, 0, 0);
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_38;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_41:
            [a1 setProvider:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v25 = objc_alloc_init(SISchemaUUID);
        if (!PBReaderPlaceMark() || (SISchemaUUIDReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNetworkConnectionId:", v25, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCapturedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_67;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_69:
        [a1 setIsExpensive:v19 != 0];
        goto LABEL_87;
      case 2u:
        uint64_t v24 = objc_alloc_init(NETSchemaNETEndpoint);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !NETSchemaNETEndpointReadFrom(v24, a2)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        if (v24) {
          objc_msgSend(a1, "addPathGateways:", v24, 0, 0);
        }
        goto LABEL_58;
      case 3u:
        PBReaderReadString();
        uint64_t v24 = (NETSchemaNETEndpoint *)objc_claimAutoreleasedReturnValue();
        [a1 setConnectionInfo:v24];
        goto LABEL_58;
      case 4u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v27 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
LABEL_73:
        [a1 setHasIpv6:v27 != 0];
        goto LABEL_87;
      case 5u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v3;
          unint64_t v35 = *(void *)(a2 + v34);
          if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                uint64_t v33 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_77:
        [a1 setHasIpv4:v33 != 0];
        goto LABEL_87;
      case 6u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (2)
        {
          uint64_t v40 = *v3;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v14 = v38++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
LABEL_81:
        [a1 setIsConstrained:v39 != 0];
        goto LABEL_87;
      case 7u:
        uint64_t v24 = objc_alloc_init(NETSchemaNETPathInterface);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (PBReaderPlaceMark() && NETSchemaNETPathInterfaceReadFrom(v24, a2))
        {
          PBReaderRecallMark();
          if (v24) {
            objc_msgSend(a1, "addPathInterfaces:", v24, 0, 0);
          }
LABEL_58:

LABEL_87:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_89:

        return 0;
      case 8u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v3;
          unint64_t v47 = *(void *)(a2 + v46);
          if (v47 == -1 || v47 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v14 = v44++ >= 9;
              if (v14)
              {
                uint64_t v49 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v49 = 0;
        }
        else {
          uint64_t v49 = v45;
        }
LABEL_86:
        objc_msgSend(a1, "setStatus:", v49, v50, v51);
        goto LABEL_87;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_87;
    }
  }
}

uint64_t NETSchemaNETDebugNetworkConnectionStateReadySnapshotCapturedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = objc_alloc_init(NETSchemaNETEstablishmentResolution);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !NETSchemaNETEstablishmentResolutionReadFrom(v17, a2)) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addResolution:", v17, 0, 0);
        }
        goto LABEL_39;
      case 2u:
        char v17 = objc_alloc_init(NETSchemaNETProxyConfiguration);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || (NETSchemaNETProxyConfigurationReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        [a1 setProxyConfiguration:v17];
        goto LABEL_39;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v21;
        }
LABEL_44:
        objc_msgSend(a1, "setDurationInMs:", v25, v26, v27);
        goto LABEL_45;
      case 4u:
        char v17 = objc_alloc_init(NETSchemaNETHandShakeProtocol);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (PBReaderPlaceMark() && NETSchemaNETHandShakeProtocolReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          if (v17) {
            objc_msgSend(a1, "addConnectionEstablishmentProtocols:", v17, 0, 0);
          }
LABEL_39:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t NETSchemaNETDebugNetworkInterfaceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_144;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_147;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_144:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_147:
        [a1 setRttCurrent:v23];
        goto LABEL_228;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_152:
        [a1 setRttSmoothed:v31];
        goto LABEL_228;
      case 3u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v34;
        }
LABEL_157:
        [a1 setRttVariance:v38];
        goto LABEL_228;
      case 4u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v14 = v40++ >= 9;
              if (v14)
              {
                uint64_t v45 = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v45 = 0;
        }
        else {
          uint64_t v45 = v41;
        }
LABEL_162:
        [a1 setRttBest:v45];
        goto LABEL_228;
      case 5u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        while (2)
        {
          uint64_t v49 = *v3;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v14 = v47++ >= 9;
              if (v14)
              {
                uint64_t v52 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v52 = 0;
        }
        else {
          uint64_t v52 = v48;
        }
LABEL_167:
        [a1 setPacketsSent:v52];
        goto LABEL_228;
      case 6u:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                uint64_t v59 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = v55;
        }
LABEL_172:
        [a1 setPacketsReceived:v59];
        goto LABEL_228;
      case 7u:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        while (2)
        {
          uint64_t v63 = *v3;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v14 = v61++ >= 9;
              if (v14)
              {
                uint64_t v66 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v66 = 0;
        }
        else {
          uint64_t v66 = v62;
        }
LABEL_177:
        [a1 setBytesSent:v66];
        goto LABEL_228;
      case 8u:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        while (2)
        {
          uint64_t v70 = *v3;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 == -1 || v71 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
            *(void *)(a2 + v70) = v71 + 1;
            v69 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v14 = v68++ >= 9;
              if (v14)
              {
                uint64_t v73 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v73 = 0;
        }
        else {
          uint64_t v73 = v69;
        }
LABEL_182:
        [a1 setBytesRetransmitted:v73];
        goto LABEL_228;
      case 9u:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        while (2)
        {
          uint64_t v77 = *v3;
          unint64_t v78 = *(void *)(a2 + v77);
          if (v78 == -1 || v78 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v78 + 1;
            v76 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v14 = v75++ >= 9;
              if (v14)
              {
                uint64_t v80 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v80 = 0;
        }
        else {
          uint64_t v80 = v76;
        }
LABEL_187:
        [a1 setBytesUnacked:v80];
        goto LABEL_228;
      case 0xAu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        while (2)
        {
          uint64_t v84 = *v3;
          unint64_t v85 = *(void *)(a2 + v84);
          if (v85 == -1 || v85 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v85 + 1;
            v83 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v14 = v82++ >= 9;
              if (v14)
              {
                uint64_t v87 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v87 = 0;
        }
        else {
          uint64_t v87 = v83;
        }
LABEL_192:
        [a1 setBytesReceived:v87];
        goto LABEL_228;
      case 0xBu:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        while (2)
        {
          uint64_t v91 = *v3;
          unint64_t v92 = *(void *)(a2 + v91);
          if (v92 == -1 || v92 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v92 + 1;
            v90 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v14 = v89++ >= 9;
              if (v14)
              {
                uint64_t v94 = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v94 = 0;
        }
        else {
          uint64_t v94 = v90;
        }
LABEL_197:
        [a1 setDuplicateBytesReceived:v94];
        goto LABEL_228;
      case 0xCu:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        while (2)
        {
          uint64_t v98 = *v3;
          unint64_t v99 = *(void *)(a2 + v98);
          if (v99 == -1 || v99 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v99 + 1;
            v97 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v14 = v96++ >= 9;
              if (v14)
              {
                uint64_t v101 = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v101 = 0;
        }
        else {
          uint64_t v101 = v97;
        }
LABEL_202:
        [a1 setOutOfOrderBytesReceived:v101];
        goto LABEL_228;
      case 0xDu:
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        while (2)
        {
          uint64_t v105 = *v3;
          unint64_t v106 = *(void *)(a2 + v105);
          if (v106 == -1 || v106 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(a2 + *v7) + v106);
            *(void *)(a2 + v105) = v106 + 1;
            v104 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v14 = v103++ >= 9;
              if (v14)
              {
                uint64_t v108 = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v108 = 0;
        }
        else {
          uint64_t v108 = v104;
        }
LABEL_207:
        [a1 setSendBufferBytes:v108];
        goto LABEL_228;
      case 0xEu:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        while (2)
        {
          uint64_t v112 = *v3;
          unint64_t v113 = *(void *)(a2 + v112);
          if (v113 == -1 || v113 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(a2 + *v7) + v113);
            *(void *)(a2 + v112) = v113 + 1;
            v111 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v14 = v110++ >= 9;
              if (v14)
              {
                uint64_t v115 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v115 = 0;
        }
        else {
          uint64_t v115 = v111;
        }
LABEL_212:
        [a1 setSendBandwidth:v115];
        goto LABEL_228;
      case 0xFu:
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        while (2)
        {
          uint64_t v119 = *v3;
          unint64_t v120 = *(void *)(a2 + v119);
          if (v120 == -1 || v120 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)(a2 + *v7) + v120);
            *(void *)(a2 + v119) = v120 + 1;
            v118 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              BOOL v14 = v117++ >= 9;
              if (v14)
              {
                uint64_t v122 = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v122 = 0;
        }
        else {
          uint64_t v122 = v118;
        }
LABEL_217:
        [a1 setSynRetransmits:v122];
        goto LABEL_228;
      case 0x10u:
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v125 = 0;
        while (2)
        {
          uint64_t v126 = *v3;
          unint64_t v127 = *(void *)(a2 + v126);
          if (v127 == -1 || v127 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)(a2 + *v7) + v127);
            *(void *)(a2 + v126) = v127 + 1;
            v125 |= (unint64_t)(v128 & 0x7F) << v123;
            if (v128 < 0)
            {
              v123 += 7;
              BOOL v14 = v124++ >= 9;
              if (v14)
              {
                uint64_t v129 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v129 = 0;
        }
        else {
          uint64_t v129 = v125;
        }
LABEL_222:
        [a1 setTfoSynDataAcked:v129];
        goto LABEL_228;
      case 0x11u:
        char v130 = 0;
        unsigned int v131 = 0;
        uint64_t v132 = 0;
        while (2)
        {
          uint64_t v133 = *v3;
          unint64_t v134 = *(void *)(a2 + v133);
          if (v134 == -1 || v134 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v135 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
            *(void *)(a2 + v133) = v134 + 1;
            v132 |= (unint64_t)(v135 & 0x7F) << v130;
            if (v135 < 0)
            {
              v130 += 7;
              BOOL v14 = v131++ >= 9;
              if (v14)
              {
                uint64_t v136 = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v136 = 0;
        }
        else {
          uint64_t v136 = v132;
        }
LABEL_227:
        [a1 setSubflowSwitchCount:v136];
        goto LABEL_228;
      case 0x12u:
        uint64_t v137 = objc_alloc_init(NETSchemaNETNetworkInterface);
        if PBReaderPlaceMark() && (NETSchemaNETNetworkInterfaceReadFrom(v137, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setNetworkInterface:", v137, 0, 0);

LABEL_228:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_228;
    }
  }
}

uint64_t NETSchemaNETDebugSessionConnectionNetworkReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v26 = 0;
              goto LABEL_45;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_45:
          [a1 setWiFiPhyMode:v26];
          continue;
        case 2u:
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
          {
            double v30 = *(double *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v30 = 0.0;
          }
          [a1 setSignalStrengthBars:v30];
          continue;
        case 3u:
          uint64_t v31 = *v3;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
          {
            double v33 = *(double *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v33 = 0.0;
          }
          [a1 setOpenTimeInMs:v33];
          continue;
        case 4u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v37 = *v3;
        uint64_t v38 = *(void *)(a2 + v37);
        unint64_t v39 = v38 + 1;
        if (v38 == -1 || v39 > *(void *)(a2 + *v4)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
        *(void *)(a2 + v37) = v39;
        v36 |= (unint64_t)(v40 & 0x7F) << v34;
        if ((v40 & 0x80) == 0) {
          goto LABEL_47;
        }
        v34 += 7;
        BOOL v15 = v35++ >= 9;
        if (v15)
        {
          uint64_t v41 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
      uint64_t v41 = *(unsigned char *)(a2 + *v5) ? 0 : v36;
LABEL_50:
      [a1 setConnectedSubflowCount:v41];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETDebugSessionConnectionPingInfoReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4)) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
          *(void *)(a2 + v31) = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_46;
          }
          v28 += 7;
          BOOL v15 = v29++ >= 9;
          if (v15)
          {
            uint64_t v35 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        uint64_t v35 = *(unsigned char *)(a2 + *v5) ? 0 : v30;
LABEL_49:
        [a1 setPingCount:v35];
      }
      else if (v19 == 2)
      {
        uint64_t v36 = *v3;
        unint64_t v37 = *(void *)(a2 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)(a2 + *v4))
        {
          double v38 = *(double *)(*(void *)(a2 + *v7) + v37);
          *(void *)(a2 + v36) = v37 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v38 = 0.0;
        }
        [a1 setMeanPingInMs:v38];
      }
      else if (v19 == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_41;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v27 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        uint64_t v27 = *(unsigned char *)(a2 + *v5) ? 0 : v22;
LABEL_44:
        [a1 setUnacknowledgedPingCount:v27];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETDebugSessionConnectionQualityReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_50;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
          else {
            uint64_t v23 = v19;
          }
LABEL_53:
          [a1 setSymptomsCellularHistorical:v23];
          continue;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v31 = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v31 = 0;
          }
          else {
            uint64_t v31 = v27;
          }
LABEL_58:
          [a1 setSymptomsCellularInstant:v31];
          continue;
        case 3u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v38 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v34;
          }
LABEL_63:
          [a1 setSymptomsWiFiHistorical:v38];
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0) {
          goto LABEL_65;
        }
        v39 += 7;
        BOOL v14 = v40++ >= 9;
        if (v14)
        {
          uint64_t v45 = 0;
          goto LABEL_68;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
      uint64_t v45 = *(unsigned char *)(a2 + *v5) ? 0 : v41;
LABEL_68:
      [a1 setSymptomsWiFiInstant:v45];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETDebugSessionConnectionSnapshotCapturedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_43;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_46:
        objc_msgSend(a1, "setSequenceNumber:", v23, v26, v27);
        goto LABEL_47;
      case 3u:
        char v25 = objc_alloc_init(NETSchemaNETDebugSessionConnectionNetwork);
        if (!PBReaderPlaceMark() || (NETSchemaNETDebugSessionConnectionNetworkReadFrom(v25, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNetwork:", v25, 0, 0);
        goto LABEL_41;
      case 4u:
        char v25 = objc_alloc_init(NETSchemaNETDebugNetworkInterface);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (!PBReaderPlaceMark() || !NETSchemaNETDebugNetworkInterfaceReadFrom(v25, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        if (v25) {
          objc_msgSend(a1, "addNetworkInterfaces:", v25, 0, 0);
        }
        goto LABEL_41;
      case 5u:
        char v25 = objc_alloc_init(NETSchemaNETDebugSessionConnectionPingInfo);
        if (!PBReaderPlaceMark()
          || (NETSchemaNETDebugSessionConnectionPingInfoReadFrom(v25, a2) & 1) == 0)
        {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPingInfo:", v25, 0, 0);
        goto LABEL_41;
      case 6u:
        char v25 = objc_alloc_init(NETSchemaNETDebugSessionConnectionQuality);
        if PBReaderPlaceMark() && (NETSchemaNETDebugSessionConnectionQualityReadFrom(v25, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setQuality:", v25, 0, 0);
LABEL_41:

LABEL_47:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

uint64_t NETSchemaNETEndpointReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        while (1)
        {
          uint64_t v27 = *v3;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 1;
          v26 |= (unint64_t)(v29 & 0x7F) << v24;
          if ((v29 & 0x80) == 0) {
            goto LABEL_42;
          }
          v24 += 7;
          BOOL v14 = v25++ >= 9;
          if (v14)
          {
            uint64_t v30 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v30 = *(unsigned char *)(a2 + *v5) ? 0 : v26;
LABEL_45:
        [a1 setType:v30];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_40:
        [a1 setPort:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETErrorReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        unsigned int v25 = PBReaderReadString();
        [a1 setDomain:v25];
      }
      else
      {
        if (v17 != 2)
        {
          if (v17 == 3)
          {
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v3;
              unint64_t v22 = *(void *)(a2 + v21);
              if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
              *(void *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v24 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v20;
            }
LABEL_37:
            [a1 setErrorCode:v24];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        unsigned int v25 = PBReaderReadString();
        [a1 setDescription:v25];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETEstablishmentResolutionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_50;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = v19;
        }
LABEL_53:
        [a1 setDuration:v23];
        goto LABEL_64;
      case 2u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v14 = v26++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = v27;
        }
LABEL_58:
        [a1 setResolutionSource:v31];
        goto LABEL_64;
      case 3u:
        char v32 = objc_alloc_init(NETSchemaNETEndpoint);
        if (!PBReaderPlaceMark() || (NETSchemaNETEndpointReadFrom(v32, a2) & 1) == 0) {
          goto LABEL_66;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSuccessfulEndpoint:", v32, 0, 0);
        goto LABEL_41;
      case 4u:
        char v32 = objc_alloc_init(NETSchemaNETEndpoint);
        if PBReaderPlaceMark() && (NETSchemaNETEndpointReadFrom(v32, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPreferredEndpoint:", v32, 0, 0);
LABEL_41:

LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_66:

        return 0;
      case 5u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v37 + 1;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v39 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v35;
        }
LABEL_63:
        [a1 setEndpointCount:v39];
        goto LABEL_64;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_64;
    }
  }
}

uint64_t NETSchemaNETHandShakeProtocolReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_50;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_53:
        [a1 setProtocol:v31];
      }
      else if (v17 == 2)
      {
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
          *(void *)(a2 + v35) = v36 + 1;
          v34 |= (unint64_t)(v37 & 0x7F) << v32;
          if ((v37 & 0x80) == 0) {
            goto LABEL_55;
          }
          v32 += 7;
          BOOL v14 = v33++ >= 9;
          if (v14)
          {
            uint64_t v38 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v38 = *(unsigned char *)(a2 + *v5) ? 0 : v34;
LABEL_58:
        [a1 setHandShakeRTT:v38];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_45;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_48:
        [a1 setHandShakeDuration:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETNetworkConnectionStatePreparationSnapshotCapturedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_31:
        [a1 setHasDNS:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETNetworkConnectionStateReadySnapshotCapturedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = PBReaderReadString();
        [a1 setConnectionInfo:v25];
      }
      else if (v17 == 2)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 1;
          v28 |= (unint64_t)(v31 & 0x7F) << v26;
          if ((v31 & 0x80) == 0) {
            goto LABEL_44;
          }
          v26 += 7;
          BOOL v14 = v27++ >= 9;
          if (v14)
          {
            uint64_t v32 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
        uint64_t v32 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_47:
        [a1 setConnectionEstablishmentPreviousAttemptCount:v32];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_39;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_42:
        [a1 setConnectionEstablishmentAttemptDelay:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETNetworkInterfaceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v24 = PBReaderReadString();
        [a1 setName:v24];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v23 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v23 = *(unsigned char *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        [a1 setConnectionType:v23];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETPathInterfaceReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_44;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            uint64_t v31 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
        uint64_t v31 = *(unsigned char *)(a2 + *v5) ? 0 : v27;
LABEL_47:
        [a1 setType:v31];
      }
      else if (v17 == 2)
      {
        uint64_t v32 = PBReaderReadString();
        [a1 setName:v32];
      }
      else if (v17 == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_39;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v24 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        uint64_t v24 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_42:
        [a1 setIndex:v24];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETPeerConnectionFailedReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unsigned int v19 = objc_alloc_init(NETSchemaNETBluetoothDevice);
          uint64_t v59 = 0;
          uint64_t v60 = 0;
          if (PBReaderPlaceMark() && NETSchemaNETBluetoothDeviceReadFrom(v19, a2))
          {
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addConnectedBtDevices:", v19, 0, 0);
            }

            continue;
          }

          return 0;
        case 2u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          while (1)
          {
            uint64_t v24 = *v3;
            uint64_t v25 = *(void *)(a2 + v24);
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)(a2 + *v4)) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_65;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              uint64_t v23 = 0;
              goto LABEL_67;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_65:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v23 = 0;
          }
LABEL_67:
          [a1 setIsCloudConnected:v23 != 0];
          continue;
        case 3u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (2)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
              *(void *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (v15)
                {
                  uint64_t v30 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v30 = 0;
          }
LABEL_71:
          [a1 setIsConnected:v30 != 0];
          continue;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (v15)
                {
                  uint64_t v37 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
LABEL_75:
          [a1 setHasDevice:v37 != 0];
          continue;
        case 5u:
          uint64_t v42 = *v3;
          unint64_t v43 = *(void *)(a2 + v42);
          if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(a2 + *v4))
          {
            double v44 = *(double *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v43 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v44 = 0.0;
          }
          objc_msgSend(a1, "setTimeSinceLastNearbyChangeInSeconds:", v44, v59, v60);
          continue;
        case 6u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v3;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v15 = v46++ >= 9;
                if (v15)
                {
                  uint64_t v47 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_79:
          [a1 setIsNearby:v47 != 0];
          continue;
        case 7u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v55 = *v3;
        uint64_t v56 = *(void *)(a2 + v55);
        unint64_t v57 = v56 + 1;
        if (v56 == -1 || v57 > *(void *)(a2 + *v4)) {
          break;
        }
        char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
        *(void *)(a2 + v55) = v57;
        v54 |= (unint64_t)(v58 & 0x7F) << v52;
        if ((v58 & 0x80) == 0) {
          goto LABEL_81;
        }
        v52 += 7;
        BOOL v15 = v53++ >= 9;
        if (v15)
        {
          uint64_t v54 = 0;
          goto LABEL_83;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_81:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v54 = 0;
      }
LABEL_83:
      objc_msgSend(a1, "setIsPreferringBtClassic:", v54 != 0, v59, v60);
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t NETSchemaNETProxyConfigurationReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v25 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_43:
        [a1 setIsProxyConfigured:v25 != 0];
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        [a1 setUsingConfiguredProxy:v19 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}