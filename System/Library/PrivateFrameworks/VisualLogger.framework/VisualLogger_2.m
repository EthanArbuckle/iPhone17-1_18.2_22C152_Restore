void sub_21584EB54(void *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  long long v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x263EF8340];
  v4 = sub_215805BEC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21584EC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21584EC80(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886240, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886240))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray8u>]", qword_267886228);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886228, &dword_21572C000);
    __cxa_guard_release(&qword_267886240);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886260, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886260))
  {
    size_t v3 = sub_215747D98(qword_267886228, "<", 0);
    sub_215747C90(qword_267886228, 0, v3, qword_267886248);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886248, &dword_21572C000);
    __cxa_guard_release(&qword_267886260);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886280, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886280))
  {
    sub_215E19DF4((uint64_t)qword_267886248, (uint64_t)&xmmword_267886268);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886268, &dword_21572C000);
    __cxa_guard_release(&qword_267886280);
  }
  if (byte_26788627F < 0)
  {
    long long v2 = xmmword_267886268;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886268;
    *(void *)(a1 + 16) = unk_267886278;
  }
}

void sub_21584EE48(_Unwind_Exception *a1)
{
}

void sub_21584EE60(_Unwind_Exception *a1)
{
}

void sub_21584EE78(_Unwind_Exception *a1)
{
}

void sub_21584EE90()
{
}

void sub_21584EEA8(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 48);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 48) = 0;
}

__n128 sub_21584EED8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21584EEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663A60;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  return sub_21584EF24(a2 + 40, a3 + 40);
}

uint64_t sub_21584EF24(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    memptr[0] = 0;
    int v6 = malloc_type_posix_memalign(memptr, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = memptr[0];
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (*(_DWORD *)(a2 + 28)) {
    BOOL v7 = *(_DWORD *)(a2 + 24) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  if (v7) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *(void *)(a2 + 24);
  }
  v14[0] = *(void *)(a2 + 8);
  v14[1] = v9;
  v14[2] = v8;
  if (HIDWORD(v9) * HIDWORD(v8) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    goto LABEL_24;
  }
  if (v9 && HIDWORD(v9))
  {
    if (*(_DWORD *)(a1 + 28)) {
      BOOL v10 = *(_DWORD *)(a1 + 24) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    v12 = *(void **)(a1 + 24);
    v11 = *(void **)(a1 + 32);
    if (v10) {
      v12 = 0;
    }
    memptr[0] = *(void **)(a1 + 8);
    memptr[1] = v12;
    memptr[2] = v11;
    if (HIDWORD(v12) * HIDWORD(v11) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      v16[0] = (size_t)v14;
      v16[1] = (size_t)memptr;
      sub_21584F0C8(v16);
      return a1;
    }
LABEL_24:
    abort();
  }
  return a1;
}

void sub_21584F0AC(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

size_t *sub_21584F0C8(size_t *result)
{
  size_t v1 = *result;
  size_t v2 = result[1];
  uint64_t v3 = *(unsigned int *)(*result + 16);
  uint64_t v4 = *(unsigned int *)(v2 + 16);
  if (v3 != 1 || v4 != 1)
  {
    int v6 = *(_DWORD *)(v1 + 8);
    int v7 = *(_DWORD *)(v1 + 12);
    if (v6) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      int v9 = v6 - 1;
      BOOL v10 = *(char **)v1;
      v11 = *(char **)v2;
      int v12 = v7 - 1;
      if (v12)
      {
        uint64_t v13 = *(unsigned int *)(v2 + 20);
        uint64_t v14 = *(unsigned int *)(v1 + 20);
        if (v9)
        {
          for (int i = 0; i != v12; ++i)
          {
            int v16 = v9;
            v17 = v10;
            __n128 result = (size_t *)v11;
            do
            {
              *(unsigned char *)__n128 result = *v17;
              v17 += v3;
              __n128 result = (size_t *)((char *)result + v4);
              --v16;
            }
            while (v16);
            *(unsigned char *)__n128 result = *v17;
            v10 += v14;
            v11 += v13;
          }
        }
        else
        {
          do
          {
            char *v11 = *v10;
            v10 += v14;
            v11 += v13;
            --v12;
          }
          while (v12);
        }
      }
      for (; v9; --v9)
      {
        char *v11 = *v10;
        v10 += v3;
        v11 += v4;
      }
      char *v11 = *v10;
    }
    return result;
  }
  int v18 = *(_DWORD *)(v1 + 20);
  if (v18 != *(_DWORD *)(v2 + 20))
  {
    unsigned int v19 = *(_DWORD *)(v1 + 8);
LABEL_30:
    size_t v25 = v19;
    if (v19) {
      BOOL v23 = *(_DWORD *)(v1 + 12) == 0;
    }
    else {
      BOOL v23 = 1;
    }
    if (!v23) {
      return sub_21584F2A8(&v25, (char **)v1, (char **)v2);
    }
    return result;
  }
  unsigned int v19 = *(_DWORD *)(v1 + 8);
  if (v18 != v19) {
    goto LABEL_30;
  }
  size_t v20 = (*(_DWORD *)(v1 + 12) * v18);
  v21 = *(char **)v1;
  if (v20) {
    BOOL v22 = v21 == 0;
  }
  else {
    BOOL v22 = 0;
  }
  if (v22)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
  }
  else if (!v20)
  {
    return result;
  }
  v24 = *(char **)v2;

  return (size_t *)memmove(v24, v21, v20);
}

size_t *sub_21584F2A8(size_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    size_t v5 = result;
    int v6 = *a2;
    int v7 = *a3;
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = *((unsigned int *)a3 + 5);
      uint64_t v10 = *((unsigned int *)a2 + 5);
      do
      {
        size_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        __n128 result = (size_t *)memmove(v7, v6, v11);
LABEL_11:
        v6 += v10;
        v7 += v9;
        --v8;
      }
      while (v8);
    }
    size_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (size_t *)memmove(v7, v6, v12);
  }
  return result;
}

uint64_t sub_21584F418()
{
  return 2;
}

long long *sub_21584F424()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678862A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678862A0))
  {
    size_t v1 = sub_21584F508();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886288, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886298 = *((void *)v1 + 2);
      xmmword_267886288 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886288, &dword_21572C000);
    __cxa_guard_release(&qword_2678862A0);
  }
  if (byte_26788629F >= 0) {
    return &xmmword_267886288;
  }
  else {
    return (long long *)xmmword_267886288;
  }
}

void sub_21584F4F0(_Unwind_Exception *a1)
{
}

long long *sub_21584F508()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678862C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678862C0))
  {
    return &xmmword_2678862A8;
  }
  size_t v1 = sub_21584F5F0();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678862A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678862B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678862A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678862A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678862C0);
  return &xmmword_2678862A8;
}

void sub_21584F5D8(_Unwind_Exception *a1)
{
}

std::string *sub_21584F5F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678862E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678862E0))
  {
    return &stru_2678862C8;
  }
  sub_21584F818((uint64_t)__p);
  sub_21584F6EC(__p, &stru_2678862C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678862C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678862E0);
  return &stru_2678862C8;
}

void sub_21584F6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678862E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678862E0);
  _Unwind_Resume(a1);
}

void sub_21584F6EC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_2158084A4();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    size_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21584F7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21584F818(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886300, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886300))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray16u>]", qword_2678862E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678862E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886300);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886320, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886320))
  {
    size_t v3 = sub_215747D98(qword_2678862E8, "<", 0);
    sub_215747C90(qword_2678862E8, 0, v3, qword_267886308);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886308, &dword_21572C000);
    __cxa_guard_release(&qword_267886320);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886340))
  {
    sub_215E19DF4((uint64_t)qword_267886308, (uint64_t)&xmmword_267886328);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886328, &dword_21572C000);
    __cxa_guard_release(&qword_267886340);
  }
  if (byte_26788633F < 0)
  {
    long long v2 = xmmword_267886328;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886328;
    *(void *)(a1 + 16) = unk_267886338;
  }
}

void sub_21584F9E0(_Unwind_Exception *a1)
{
}

void sub_21584F9F8(_Unwind_Exception *a1)
{
}

void sub_21584FA10(_Unwind_Exception *a1)
{
}

void sub_21584FA28()
{
}

void sub_21584FA40(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 48);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 48) = 0;
}

__n128 sub_21584FA70(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21584FA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663AE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  return sub_21584FABC(a2 + 40, a3 + 40);
}

uint64_t sub_21584FABC(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    memptr[0] = 0;
    int v6 = malloc_type_posix_memalign(memptr, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = memptr[0];
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28)) {
    BOOL v8 = *(_DWORD *)(a2 + 24) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *(void *)(a2 + 24);
  }
  v14[0] = *(void *)(a2 + 8);
  v14[1] = v9;
  v14[2] = (v7 >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  if (HIDWORD(v9) * (v7 >> 33) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    goto LABEL_24;
  }
  if (v9 && HIDWORD(v9))
  {
    unint64_t v10 = *(void *)(a1 + 32);
    if (*(_DWORD *)(a1 + 28)) {
      BOOL v11 = *(_DWORD *)(a1 + 24) == 0;
    }
    else {
      BOOL v11 = 1;
    }
    size_t v12 = *(void **)(a1 + 24);
    if (v11) {
      size_t v12 = 0;
    }
    memptr[0] = *(void **)(a1 + 8);
    memptr[1] = v12;
    memptr[2] = (void *)((v10 >> 1) & 0x7FFFFFFF7FFFFFFFLL);
    if (HIDWORD(v12) * (v10 >> 33) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      sub_21584FC70(v14, (uint64_t)memptr);
      return a1;
    }
LABEL_24:
    abort();
  }
  return a1;
}

void sub_21584FC54(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

uint64_t *sub_21584FC70(uint64_t *result, uint64_t a2)
{
  uint64_t v3 = *((unsigned int *)result + 4);
  uint64_t v4 = *(unsigned int *)(a2 + 16);
  if (v3 == 1 && v4 == 1)
  {
    int v23 = *((_DWORD *)result + 5);
    int v24 = *((_DWORD *)result + 2);
    if (v23 == *(_DWORD *)(a2 + 20) && v23 == v24)
    {
      uint64_t v27 = (*((_DWORD *)result + 3) * v23);
      v28 = (char *)*result;
      if (v27) {
        BOOL v29 = v28 == 0;
      }
      else {
        BOOL v29 = 0;
      }
      if (v29)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v27)
      {
        return result;
      }
      v30 = *(char **)a2;
      return (uint64_t *)memmove(v30, v28, 2 * v27);
    }
    else
    {
      uint64_t v31 = *((unsigned int *)result + 2);
      if (v24) {
        BOOL v26 = *((_DWORD *)result + 3) == 0;
      }
      else {
        BOOL v26 = 1;
      }
      if (!v26) {
        return sub_21584FE68(&v31, (char **)result, (char **)a2);
      }
    }
  }
  else
  {
    int v6 = *((_DWORD *)result + 2);
    int v7 = *((_DWORD *)result + 3);
    if (v6) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      int v9 = v6 - 1;
      unint64_t v10 = (char *)*result;
      BOOL v11 = *(char **)a2;
      int v12 = v7 - 1;
      if (v12)
      {
        uint64_t v13 = *(unsigned int *)(a2 + 20);
        uint64_t v14 = *((unsigned int *)result + 5);
        if (!v9)
        {
          do
          {
            *(_WORD *)BOOL v11 = *(_WORD *)v10;
            v10 += 2 * v14;
            v11 += 2 * v13;
            --v12;
          }
          while (v12);
LABEL_40:
          *(_WORD *)BOOL v11 = *(_WORD *)v10;
          return result;
        }
        int v15 = 0;
        uint64_t v16 = 2 * v14;
        uint64_t v17 = 2 * v13;
        __n128 result = (uint64_t *)(2 * v4);
        do
        {
          int v18 = v11;
          unsigned int v19 = v10;
          int v20 = v9;
          do
          {
            *(_WORD *)int v18 = *(_WORD *)v19;
            v19 += 2 * v3;
            int v18 = (char *)result + (void)v18;
            --v20;
          }
          while (v20);
          *(_WORD *)int v18 = *(_WORD *)v19;
          v10 += v16;
          v11 += v17;
          ++v15;
        }
        while (v15 != v12);
      }
      if (v9)
      {
        uint64_t v21 = 2 * v3;
        uint64_t v22 = 2 * v4;
        do
        {
          *(_WORD *)BOOL v11 = *(_WORD *)v10;
          v10 += v21;
          v11 += v22;
          --v9;
        }
        while (v9);
      }
      goto LABEL_40;
    }
  }
  return result;
}

uint64_t *sub_21584FE68(uint64_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    size_t v5 = result;
    int v6 = *a2;
    int v7 = *a3;
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = 2 * *((unsigned int *)a2 + 5);
      uint64_t v10 = 2 * *((unsigned int *)a3 + 5);
      do
      {
        uint64_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        __n128 result = (uint64_t *)memmove(v7, v6, 2 * v11);
LABEL_11:
        v6 += v9;
        v7 += v10;
        --v8;
      }
      while (v8);
    }
    uint64_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (uint64_t *)memmove(v7, v6, 2 * v12);
  }
  return result;
}

uint64_t sub_21584FFE0()
{
  return 3;
}

long long *sub_21584FFEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886360, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886360))
  {
    uint64_t v1 = sub_2158500D0();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886348, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886358 = *((void *)v1 + 2);
      xmmword_267886348 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886348, &dword_21572C000);
    __cxa_guard_release(&qword_267886360);
  }
  if (byte_26788635F >= 0) {
    return &xmmword_267886348;
  }
  else {
    return (long long *)xmmword_267886348;
  }
}

void sub_2158500B8(_Unwind_Exception *a1)
{
}

long long *sub_2158500D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886380, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886380))
  {
    return &xmmword_267886368;
  }
  uint64_t v1 = sub_2158501B8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886368, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886378 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886368 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886368, &dword_21572C000);
  __cxa_guard_release(&qword_267886380);
  return &xmmword_267886368;
}

void sub_2158501A0(_Unwind_Exception *a1)
{
}

std::string *sub_2158501B8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678863A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678863A0))
  {
    return &stru_267886388;
  }
  sub_2158503E0((uint64_t)__p);
  sub_2158502B4(__p, &stru_267886388);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886388, &dword_21572C000);
  __cxa_guard_release(&qword_2678863A0);
  return &stru_267886388;
}

void sub_215850274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678863A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678863A0);
  _Unwind_Resume(a1);
}

void sub_2158502B4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_215809A60();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158503B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2158503E0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678863C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678863C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray16f>]", qword_2678863A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678863A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678863C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678863E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678863E0))
  {
    size_t v3 = sub_215747D98(qword_2678863A8, "<", 0);
    sub_215747C90(qword_2678863A8, 0, v3, qword_2678863C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678863C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678863E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886400, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886400))
  {
    sub_215E19DF4((uint64_t)qword_2678863C8, (uint64_t)&xmmword_2678863E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678863E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886400);
  }
  if (byte_2678863FF < 0)
  {
    long long v2 = xmmword_2678863E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678863E8;
    *(void *)(a1 + 16) = unk_2678863F8;
  }
}

void sub_2158505A8(_Unwind_Exception *a1)
{
}

void sub_2158505C0(_Unwind_Exception *a1)
{
}

void sub_2158505D8(_Unwind_Exception *a1)
{
}

void sub_2158505F0()
{
}

uint64_t sub_215850608(uint64_t a1, uint64_t a2)
{
  return sub_215D7D7C4(a2);
}

__n128 sub_215850610(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215850624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663B60;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  return sub_21585065C(a2 + 40, a3 + 40);
}

uint64_t sub_21585065C(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    memptr[0] = 0;
    int v6 = malloc_type_posix_memalign(memptr, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = memptr[0];
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28)) {
    BOOL v8 = *(_DWORD *)(a2 + 24) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  uint64_t v9 = *(void **)(a2 + 24);
  if (v8) {
    uint64_t v9 = 0;
  }
  memptr[0] = *(void **)(a2 + 8);
  memptr[1] = v9;
  memptr[2] = (void *)((v7 >> 1) & 0x7FFFFFFF7FFFFFFFLL);
  if (HIDWORD(v9) * (v7 >> 33) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21585078C(a1, (uint64_t)memptr);
  return a1;
}

void sub_215850770(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

uint64_t sub_21585078C(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 8);
  int v3 = *(_DWORD *)(a2 + 12);
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    int v6 = *(_WORD **)(result + 8);
    unint64_t v7 = *(void *)(result + 32);
    if (*(_DWORD *)(result + 28)) {
      BOOL v8 = *(_DWORD *)(result + 24) == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8) {
      int v9 = 0;
    }
    else {
      int v9 = *(_DWORD *)(result + 28);
    }
    unint64_t v10 = v7 >> 33;
    if (v9 * (v7 >> 33) == -1)
    {
      __n128 result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
      if (result) {
        abort();
      }
      int v2 = *(_DWORD *)(a2 + 8);
      int v3 = *(_DWORD *)(a2 + 12);
    }
    if (v2 && v3)
    {
      int v11 = v2 - 1;
      uint64_t v12 = *(_WORD **)a2;
      uint64_t v13 = 2 * *(unsigned int *)(a2 + 16);
      uint64_t v14 = 2 * (v7 >> 1);
      int v15 = v3 - 1;
      if (v15)
      {
        uint64_t v16 = *(unsigned int *)(a2 + 20);
        if (v11)
        {
          int v17 = 0;
          uint64_t v18 = 2 * v16;
          do
          {
            unsigned int v19 = v6;
            int v20 = v12;
            LODWORD(result) = v11;
            do
            {
              *unsigned int v19 = *v20;
              int v20 = (_WORD *)((char *)v20 + v13);
              unsigned int v19 = (_WORD *)((char *)v19 + v14);
              __n128 result = (result - 1);
            }
            while (result);
            *unsigned int v19 = *v20;
            uint64_t v12 = (_WORD *)((char *)v12 + v18);
            v6 += v10;
            ++v17;
          }
          while (v17 != v15);
        }
        else
        {
          do
          {
            *int v6 = *v12;
            v12 += v16;
            v6 += v10;
            --v15;
          }
          while (v15);
        }
      }
      for (; v11; --v11)
      {
        *int v6 = *v12;
        uint64_t v12 = (_WORD *)((char *)v12 + v13);
        int v6 = (_WORD *)((char *)v6 + v14);
      }
      *int v6 = *v12;
    }
  }
  return result;
}

uint64_t sub_2158508F4()
{
  return 4;
}

long long *sub_215850900()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886420, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886420))
  {
    uint64_t v1 = sub_2158509E4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886408, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886418 = *((void *)v1 + 2);
      xmmword_267886408 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886408, &dword_21572C000);
    __cxa_guard_release(&qword_267886420);
  }
  if (byte_26788641F >= 0) {
    return &xmmword_267886408;
  }
  else {
    return (long long *)xmmword_267886408;
  }
}

void sub_2158509CC(_Unwind_Exception *a1)
{
}

long long *sub_2158509E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886440, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886440))
  {
    return &xmmword_267886428;
  }
  uint64_t v1 = sub_215850ACC();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886428, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886438 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886428 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886428, &dword_21572C000);
  __cxa_guard_release(&qword_267886440);
  return &xmmword_267886428;
}

void sub_215850AB4(_Unwind_Exception *a1)
{
}

std::string *sub_215850ACC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886460, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886460))
  {
    return &stru_267886448;
  }
  sub_215850CF4((uint64_t)__p);
  sub_215850BC8(__p, &stru_267886448);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886448, &dword_21572C000);
  __cxa_guard_release(&qword_267886460);
  return &stru_267886448;
}

void sub_215850B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886460);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886460);
  _Unwind_Resume(a1);
}

void sub_215850BC8(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_21580B01C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  BOOL v8 = (void **)__p;
  if (__p)
  {
    int v9 = v12;
    unint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      unint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215850CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215850CF4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886480))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray32f>]", qword_267886468);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886468, &dword_21572C000);
    __cxa_guard_release(&qword_267886480);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678864A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678864A0))
  {
    size_t v3 = sub_215747D98(qword_267886468, "<", 0);
    sub_215747C90(qword_267886468, 0, v3, qword_267886488);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886488, &dword_21572C000);
    __cxa_guard_release(&qword_2678864A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678864C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678864C0))
  {
    sub_215E19DF4((uint64_t)qword_267886488, (uint64_t)&xmmword_2678864A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678864A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678864C0);
  }
  if (byte_2678864BF < 0)
  {
    long long v2 = xmmword_2678864A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678864A8;
    *(void *)(a1 + 16) = unk_2678864B8;
  }
}

void sub_215850EBC(_Unwind_Exception *a1)
{
}

void sub_215850ED4(_Unwind_Exception *a1)
{
}

void sub_215850EEC(_Unwind_Exception *a1)
{
}

void sub_215850F04()
{
}

void sub_215850F1C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 48);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 48) = 0;
}

__n128 sub_215850F4C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215850F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663BE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215850F98(a2 + 40, a3 + 40);
}

uint64_t sub_215850F98(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    memptr[0] = 0;
    int v6 = malloc_type_posix_memalign(memptr, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = memptr[0];
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28)) {
    BOOL v8 = *(_DWORD *)(a2 + 24) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *(void *)(a2 + 24);
  }
  v14[0] = *(void *)(a2 + 8);
  v14[1] = v9;
  v14[2] = (v7 >> 2) & 0x3FFFFFFF3FFFFFFFLL;
  if (HIDWORD(v9) * (v7 >> 34) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    goto LABEL_24;
  }
  if (v9 && HIDWORD(v9))
  {
    unint64_t v10 = *(void *)(a1 + 32);
    if (*(_DWORD *)(a1 + 28)) {
      BOOL v11 = *(_DWORD *)(a1 + 24) == 0;
    }
    else {
      BOOL v11 = 1;
    }
    uint64_t v12 = *(void **)(a1 + 24);
    if (v11) {
      uint64_t v12 = 0;
    }
    memptr[0] = *(void **)(a1 + 8);
    memptr[1] = v12;
    memptr[2] = (void *)((v10 >> 2) & 0x3FFFFFFF3FFFFFFFLL);
    if (HIDWORD(v12) * (v10 >> 34) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      sub_21585114C((uint64_t)v14, (uint64_t)memptr);
      return a1;
    }
LABEL_24:
    abort();
  }
  return a1;
}

void sub_215851130(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

float sub_21585114C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(unsigned int *)(a2 + 16);
  if (v3 == 1 && v4 == 1)
  {
    int v23 = *(_DWORD *)(a1 + 20);
    int v24 = *(_DWORD *)(a1 + 8);
    if (v23 == *(_DWORD *)(a2 + 20) && v23 == v24)
    {
      uint64_t v28 = (*(_DWORD *)(a1 + 12) * v23);
      BOOL v29 = *(char **)a1;
      if (v28) {
        BOOL v30 = v29 == 0;
      }
      else {
        BOOL v30 = 0;
      }
      if (v30)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v28)
      {
        return result;
      }
      uint64_t v31 = *(char **)a2;
      memmove(v31, v29, 4 * v28);
    }
    else
    {
      uint64_t v32 = *(unsigned int *)(a1 + 8);
      if (v24) {
        BOOL v26 = *(_DWORD *)(a1 + 12) == 0;
      }
      else {
        BOOL v26 = 1;
      }
      if (!v26) {
        sub_215851344(&v32, (char **)a1, (char **)a2);
      }
    }
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    if (v6) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      int v9 = v6 - 1;
      unint64_t v10 = *(char **)a1;
      BOOL v11 = *(char **)a2;
      int v12 = v7 - 1;
      if (v12)
      {
        uint64_t v13 = *(unsigned int *)(a2 + 20);
        uint64_t v14 = *(unsigned int *)(a1 + 20);
        if (!v9)
        {
          do
          {
            *(_DWORD *)BOOL v11 = *(_DWORD *)v10;
            v10 += 4 * v14;
            v11 += 4 * v13;
            --v12;
          }
          while (v12);
LABEL_40:
          float result = *(float *)v10;
          *(_DWORD *)BOOL v11 = *(_DWORD *)v10;
          return result;
        }
        int v15 = 0;
        uint64_t v16 = 4 * v14;
        uint64_t v17 = 4 * v13;
        do
        {
          uint64_t v18 = v11;
          unsigned int v19 = v10;
          int v20 = v9;
          do
          {
            *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
            v19 += 4 * v3;
            v18 += 4 * v4;
            --v20;
          }
          while (v20);
          *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
          v10 += v16;
          v11 += v17;
          ++v15;
        }
        while (v15 != v12);
      }
      if (v9)
      {
        uint64_t v21 = 4 * v3;
        uint64_t v22 = 4 * v4;
        do
        {
          *(_DWORD *)BOOL v11 = *(_DWORD *)v10;
          v10 += v21;
          v11 += v22;
          --v9;
        }
        while (v9);
      }
      goto LABEL_40;
    }
  }
  return result;
}

uint64_t *sub_215851344(uint64_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    size_t v5 = result;
    int v6 = *a2;
    int v7 = *a3;
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = 4 * *((unsigned int *)a2 + 5);
      uint64_t v10 = 4 * *((unsigned int *)a3 + 5);
      do
      {
        uint64_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        float result = (uint64_t *)memmove(v7, v6, 4 * v11);
LABEL_11:
        v6 += v9;
        v7 += v10;
        --v8;
      }
      while (v8);
    }
    uint64_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (uint64_t *)memmove(v7, v6, 4 * v12);
  }
  return result;
}

uint64_t sub_2158514BC()
{
  return 5;
}

long long *sub_2158514C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678864E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678864E0))
  {
    uint64_t v1 = sub_2158515AC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678864C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678864D8 = *((void *)v1 + 2);
      xmmword_2678864C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678864C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678864E0);
  }
  if (byte_2678864DF >= 0) {
    return &xmmword_2678864C8;
  }
  else {
    return (long long *)xmmword_2678864C8;
  }
}

void sub_215851594(_Unwind_Exception *a1)
{
}

long long *sub_2158515AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886500, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886500))
  {
    return &xmmword_2678864E8;
  }
  uint64_t v1 = sub_215851694();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678864E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678864F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678864E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678864E8, &dword_21572C000);
  __cxa_guard_release(&qword_267886500);
  return &xmmword_2678864E8;
}

void sub_21585167C(_Unwind_Exception *a1)
{
}

std::string *sub_215851694()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886520, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886520))
  {
    return &stru_267886508;
  }
  sub_2158518BC((uint64_t)__p);
  sub_215851790(__p, &stru_267886508);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886508, &dword_21572C000);
  __cxa_guard_release(&qword_267886520);
  return &stru_267886508;
}

void sub_215851750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886520);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886520);
  _Unwind_Resume(a1);
}

void sub_215851790(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_21580C5D8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215851890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2158518BC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886540, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886540))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Two8u>]", qword_267886528);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886528, &dword_21572C000);
    __cxa_guard_release(&qword_267886540);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886560, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886560))
  {
    size_t v3 = sub_215747D98(qword_267886528, "<", 0);
    sub_215747C90(qword_267886528, 0, v3, qword_267886548);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886548, &dword_21572C000);
    __cxa_guard_release(&qword_267886560);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886580, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886580))
  {
    sub_215E19DF4((uint64_t)qword_267886548, (uint64_t)&xmmword_267886568);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886568, &dword_21572C000);
    __cxa_guard_release(&qword_267886580);
  }
  if (byte_26788657F < 0)
  {
    long long v2 = xmmword_267886568;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886568;
    *(void *)(a1 + 16) = unk_267886578;
  }
}

void sub_215851A84(_Unwind_Exception *a1)
{
}

void sub_215851A9C(_Unwind_Exception *a1)
{
}

void sub_215851AB4(_Unwind_Exception *a1)
{
}

void sub_215851ACC()
{
}

void sub_215851AE4(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215851B14(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215851B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663C60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215851B70(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    memptr[0] = 0;
    int v6 = malloc_type_posix_memalign(memptr, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = memptr[0];
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 36);
  int v10 = *(_DWORD *)(a2 + 44);
  int v11 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24)) {
    BOOL v12 = *(_DWORD *)(a2 + 28) == 0;
  }
  else {
    BOOL v12 = 1;
  }
  BOOL v13 = v12 || v11 == 0;
  char v14 = v13;
  if (v13) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = *(void *)(a2 + 24);
  }
  if (v13) {
    int v16 = 0;
  }
  else {
    int v16 = v11;
  }
  v26[0] = v8;
  v26[1] = v15;
  int v27 = v16;
  uint64_t v28 = v9;
  int v29 = v10;
  if (v16 * v10 == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    goto LABEL_41;
  }
  if (HIDWORD(v15)) {
    BOOL v17 = v15 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17) {
    char v18 = 1;
  }
  else {
    char v18 = v14;
  }
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = *(void *)(a1 + 36);
    int v20 = *(_DWORD *)(a1 + 44);
    int v21 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24)) {
      BOOL v22 = *(_DWORD *)(a1 + 28) == 0;
    }
    else {
      BOOL v22 = 1;
    }
    BOOL v23 = v22 || v21 == 0;
    int v24 = *(void **)(a1 + 24);
    if (v23)
    {
      int v24 = 0;
      int v21 = 0;
    }
    memptr[0] = *(void **)(a1 + 8);
    memptr[1] = v24;
    int v31 = v21;
    uint64_t v32 = v19;
    int v33 = v20;
    if (v21 * v20 != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      v34[0] = (size_t)v26;
      v34[1] = (size_t)memptr;
      sub_215851D54(v34);
      return a1;
    }
LABEL_41:
    abort();
  }
  return a1;
}

void sub_215851D38(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

void sub_215851D54(size_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) != 1 || *(_DWORD *)(v2 + 20) != 1)
  {
    char v11 = 0;
    if (*(_DWORD *)(v1 + 8)) {
      BOOL v4 = *(_DWORD *)(v1 + 12) == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4 && *(_DWORD *)(v1 + 16) != 0) {
      sub_215852404((uint64_t)&v11, v1, v2);
    }
    return;
  }
  int v6 = *(_DWORD *)(v1 + 24);
  if (v6 == *(_DWORD *)(v2 + 24))
  {
    unsigned int v7 = *(_DWORD *)(v1 + 8);
    if (v6 == v7)
    {
      sub_215851E18(a1);
      return;
    }
  }
  else
  {
    unsigned int v7 = *(_DWORD *)(v1 + 8);
  }
  size_t v10 = v7;
  if (v7) {
    BOOL v8 = *(_DWORD *)(v1 + 12) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8 && *(_DWORD *)(v1 + 16) != 0) {
    sub_2158520B8(&v10, (char **)v1, (char **)v2);
  }
}

size_t *sub_215851E18(size_t *result)
{
  size_t v1 = *result;
  size_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 28);
  int v4 = *(_DWORD *)(*result + 12);
  if (v3 == *(_DWORD *)(v2 + 28) && v3 == *(_DWORD *)(v1 + 24) * v4)
  {
    size_t v5 = (*(_DWORD *)(v1 + 8) * v4 * *(_DWORD *)(v1 + 16));
    int v6 = *(char **)v1;
    if (v5) {
      BOOL v7 = v6 == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v5)
    {
      return result;
    }
    char v11 = *(char **)v2;
    return (size_t *)memmove(v11, v6, v5);
  }
  else
  {
    int v8 = *(_DWORD *)(v1 + 8);
    size_t v12 = (v8 * v4);
    if (v8) {
      BOOL v9 = v4 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9 && *(_DWORD *)(v1 + 16) != 0) {
      return sub_215851F40(&v12, (char **)v1, (char **)v2);
    }
  }
  return result;
}

size_t *sub_215851F40(size_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v4 = *((_DWORD *)a2 + 3) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4 && v3 != 0)
  {
    int v6 = result;
    BOOL v7 = *a2;
    int v8 = *a3;
    int v9 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v10 = *((unsigned int *)a3 + 7);
      uint64_t v11 = *((unsigned int *)a2 + 7);
      do
      {
        size_t v12 = *v6;
        if (!v7 && v12)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_22;
          }
        }
        else if (!v12)
        {
          goto LABEL_14;
        }
        __n128 result = (size_t *)memmove(v8, v7, v12);
LABEL_14:
        v7 += v11;
        v8 += v10;
        --v9;
      }
      while (v9);
    }
    size_t v13 = *v6;
    if (v7 || !v13)
    {
      if (!v13) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_22:
      abort();
    }
    return (size_t *)memmove(v8, v7, v13);
  }
  return result;
}

size_t *sub_2158520B8(size_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  int v4 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    BOOL v7 = result;
    int v8 = v3 - 1;
    uint64_t v9 = *((unsigned int *)a2 + 6);
    uint64_t v10 = *((unsigned int *)a3 + 6);
    uint64_t v11 = *a2;
    size_t v12 = *a3;
    int v28 = v4 - 1;
    int v24 = v8;
    if (v4 != 1)
    {
      uint64_t v26 = *((unsigned int *)a3 + 7);
      uint64_t v25 = *((unsigned int *)a2 + 7);
      if (v8)
      {
        int v13 = 0;
        while (1)
        {
          int v27 = v13;
          int v14 = v24;
          unint64_t v15 = v11;
          int v16 = v12;
          do
          {
            BOOL v17 = v15;
            size_t v18 = *v7;
            if (!v17 && v18)
            {
              if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
              {
                goto LABEL_48;
              }
LABEL_18:
              __n128 result = (size_t *)memmove(v16, v17, v18);
              goto LABEL_19;
            }
            if (v18) {
              goto LABEL_18;
            }
LABEL_19:
            unint64_t v15 = &v17[v9];
            v16 += v10;
            --v14;
          }
          while (v14);
          size_t v19 = *v7;
          if (!v17 && v19)
          {
            if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
LABEL_14:
              __n128 result = (size_t *)memmove(v16, &v17[v9], v19);
              goto LABEL_15;
            }
LABEL_48:
            abort();
          }
          if (v19) {
            goto LABEL_14;
          }
LABEL_15:
          v11 += v25;
          v12 += v26;
          int v13 = v27 + 1;
          if (v27 + 1 == v28) {
            goto LABEL_36;
          }
        }
      }
      do
      {
        size_t v20 = *v7;
        if (!v11 && v20)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_48;
          }
        }
        else if (!v20)
        {
          goto LABEL_31;
        }
        __n128 result = (size_t *)memmove(v12, v11, v20);
LABEL_31:
        v11 += v25;
        v12 += v26;
        --v28;
      }
      while (v28);
    }
LABEL_36:
    for (int i = v24; i; --i)
    {
      size_t v22 = *v7;
      if (!v11 && v22)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_48;
        }
      }
      else if (!v22)
      {
        goto LABEL_40;
      }
      __n128 result = (size_t *)memmove(v12, v11, v22);
LABEL_40:
      v11 += v9;
      v12 += v10;
    }
    size_t v23 = *v7;
    if (v11 || !v23)
    {
      if (!v23) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_48;
    }
    return (size_t *)memmove(v12, v11, v23);
  }
  return result;
}

void sub_215852404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 8);
  int v4 = *(_DWORD *)(a2 + 12);
  int v5 = *(_DWORD *)(a2 + 16);
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v3 - 1;
    int v9 = v4 - 1;
    uint64_t v10 = *(unsigned int *)(a2 + 20);
    uint64_t v11 = *(unsigned int *)(a2 + 24);
    uint64_t v12 = *(unsigned int *)(a3 + 20);
    uint64_t v13 = *(unsigned int *)(a3 + 24);
    int v14 = *(unsigned char **)a2;
    unint64_t v15 = *(unsigned char **)a3;
    int v16 = v5 - 1;
    if (v16)
    {
      uint64_t v17 = *(unsigned int *)(a3 + 28);
      uint64_t v18 = *(unsigned int *)(a2 + 28);
      if (v9)
      {
        int v19 = 0;
        if (v8)
        {
          do
          {
            int v20 = 0;
            int v21 = v14;
            size_t v22 = v15;
            do
            {
              int v23 = v8;
              int v24 = v21;
              uint64_t v25 = v22;
              do
              {
                *uint64_t v25 = *v24;
                v24 += v10;
                v25 += v12;
                --v23;
              }
              while (v23);
              *uint64_t v25 = *v24;
              v21 += v11;
              v22 += v13;
              ++v20;
            }
            while (v20 != v9);
            int v26 = v8;
            do
            {
              *size_t v22 = *v21;
              v21 += v10;
              v22 += v12;
              --v26;
            }
            while (v26);
            *size_t v22 = *v21;
            v14 += v18;
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
        else
        {
          do
          {
            int v27 = v9;
            int v28 = v14;
            int v29 = v15;
            do
            {
              *int v29 = *v28;
              v28 += v11;
              v29 += v13;
              --v27;
            }
            while (v27);
            *int v29 = *v28;
            v14 += v18;
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
      }
      else if (v8)
      {
        for (int i = 0; i != v16; ++i)
        {
          int v31 = v8;
          uint64_t v32 = v14;
          int v33 = v15;
          do
          {
            *int v33 = *v32;
            v32 += v10;
            v33 += v12;
            --v31;
          }
          while (v31);
          *int v33 = *v32;
          v14 += v18;
          v15 += v17;
        }
      }
      else
      {
        do
        {
          *unint64_t v15 = *v14;
          v14 += v18;
          v15 += v17;
          --v16;
        }
        while (v16);
      }
    }
    if (v9)
    {
      if (v8)
      {
        for (int j = 0; j != v9; ++j)
        {
          int v35 = v8;
          v36 = v14;
          v37 = v15;
          do
          {
            unsigned char *v37 = *v36;
            v36 += v10;
            v37 += v12;
            --v35;
          }
          while (v35);
          unsigned char *v37 = *v36;
          v14 += v11;
          v15 += v13;
        }
      }
      else
      {
        do
        {
          *unint64_t v15 = *v14;
          v14 += v11;
          v15 += v13;
          --v9;
        }
        while (v9);
      }
    }
    for (; v8; --v8)
    {
      *unint64_t v15 = *v14;
      v14 += v10;
      v15 += v12;
    }
    *unint64_t v15 = *v14;
  }
}

uint64_t sub_215852618()
{
  return 6;
}

long long *sub_215852624()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678865A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678865A0))
  {
    size_t v1 = sub_215852708();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886588, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886598 = *((void *)v1 + 2);
      xmmword_267886588 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886588, &dword_21572C000);
    __cxa_guard_release(&qword_2678865A0);
  }
  if (byte_26788659F >= 0) {
    return &xmmword_267886588;
  }
  else {
    return (long long *)xmmword_267886588;
  }
}

void sub_2158526F0(_Unwind_Exception *a1)
{
}

long long *sub_215852708()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678865C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678865C0))
  {
    return &xmmword_2678865A8;
  }
  size_t v1 = sub_2158527F0();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678865A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678865B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678865A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678865A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678865C0);
  return &xmmword_2678865A8;
}

void sub_2158527D8(_Unwind_Exception *a1)
{
}

std::string *sub_2158527F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678865E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678865E0))
  {
    return &stru_2678865C8;
  }
  sub_215852A18((uint64_t)__p);
  sub_2158528EC(__p, &stru_2678865C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678865C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678865E0);
  return &stru_2678865C8;
}

void sub_2158528AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678865E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678865E0);
  _Unwind_Resume(a1);
}

void sub_2158528EC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v4 = sub_215852C28();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    int v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158529EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215852A18(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886600, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886600))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Two16u>]", qword_2678865E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678865E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886600);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886620, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886620))
  {
    size_t v3 = sub_215747D98(qword_2678865E8, "<", 0);
    sub_215747C90(qword_2678865E8, 0, v3, qword_267886608);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886608, &dword_21572C000);
    __cxa_guard_release(&qword_267886620);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886640, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886640))
  {
    sub_215E19DF4((uint64_t)qword_267886608, (uint64_t)&xmmword_267886628);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886628, &dword_21572C000);
    __cxa_guard_release(&qword_267886640);
  }
  if (byte_26788663F < 0)
  {
    long long v2 = xmmword_267886628;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886628;
    *(void *)(a1 + 16) = unk_267886638;
  }
}

void sub_215852BE0(_Unwind_Exception *a1)
{
}

void sub_215852BF8(_Unwind_Exception *a1)
{
}

void sub_215852C10(_Unwind_Exception *a1)
{
}

std::string *sub_215852C28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885EA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885EA0))
  {
    return &stru_267885E88;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885E88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885E88, &dword_21572C000);
  __cxa_guard_release(&qword_267885EA0);
  return &stru_267885E88;
}

void sub_215852CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885EA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885EA0);
  _Unwind_Resume(a1);
}

void sub_215852D2C()
{
}

void sub_215852D44(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215852D74(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215852D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663CE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_215852DD0(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    v15[0] = 0;
    int v6 = malloc_type_posix_memalign(v15, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = v15[0];
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  int v8 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24)) {
    BOOL v9 = *(_DWORD *)(a2 + 28) == 0;
  }
  else {
    BOOL v9 = 1;
  }
  int v10 = *(_DWORD *)(a2 + 44) >> 1;
  uint64_t v11 = (*(void *)(a2 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  BOOL v12 = v9 || v8 == 0;
  uint64_t v13 = *(void **)(a2 + 24);
  if (v12)
  {
    uint64_t v13 = 0;
    int v8 = 0;
  }
  v15[0] = *(void **)(a2 + 8);
  v15[1] = v13;
  int v16 = v8;
  uint64_t v17 = v11;
  int v18 = v10;
  if (v8 * v10 == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215852F1C((uint64_t *)a1, v15);
  return a1;
}

void sub_215852F00(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215852F1C(uint64_t *result, _DWORD *a2)
{
  if (a2[2]) {
    BOOL v2 = a2[3] == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2 && a2[4] != 0)
  {
    int v5 = *((_DWORD *)result + 8);
    if (*((_DWORD *)result + 6)) {
      BOOL v6 = *((_DWORD *)result + 7) == 0;
    }
    else {
      BOOL v6 = 1;
    }
    int v7 = *((_DWORD *)result + 11) >> 1;
    uint64_t v8 = (*(unint64_t *)((char *)result + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
    BOOL v9 = v6 || v5 == 0;
    uint64_t v10 = result[3];
    if (v9)
    {
      uint64_t v10 = 0;
      int v5 = 0;
    }
    v11[0] = result[1];
    v11[1] = v10;
    int v12 = v5;
    uint64_t v13 = v8;
    int v14 = v7;
    if (v5 * v7 == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    v15[0] = (uint64_t)a2;
    v15[1] = (uint64_t)v11;
    return sub_215853000(v15);
  }
  return result;
}

uint64_t *sub_215853000(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  uint64_t v3 = *(unsigned int *)(*result + 20);
  uint64_t v4 = *(unsigned int *)(v2 + 20);
  if (v3 == 1 && v4 == 1)
  {
    return sub_2158530CC(result);
  }
  else
  {
    char v13 = 0;
    int v7 = *(_DWORD *)(v1 + 8);
    int v6 = *(_DWORD *)(v1 + 12);
    int v8 = *(_DWORD *)(v1 + 16);
    if (v7) {
      BOOL v9 = v6 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9 && v8 != 0)
    {
      uint64_t v14 = 0;
      int v15 = v7 - 1;
      uint64_t v16 = v3 | (v4 << 32);
      int v17 = v6 - 1;
      unint64_t v18 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned int *)(v2 + 24) << 32);
      int v19 = v8 - 1;
      unint64_t v20 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
      uint64_t v11 = *(_WORD **)v1;
      int v12 = *(_WORD **)v2;
      char v21 = 0;
      return (uint64_t *)sub_2158536F8((unint64_t)&v14, (uint64_t)&v21, (uint64_t)&v13, v11, v12);
    }
  }
  return result;
}

uint64_t *sub_2158530CC(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 24);
  if (v3 != *(_DWORD *)(v2 + 24))
  {
    unsigned int v4 = *(_DWORD *)(v1 + 8);
LABEL_12:
    uint64_t v14 = v4;
    if (v4) {
      BOOL v10 = *(_DWORD *)(v1 + 12) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10 && *(_DWORD *)(v1 + 16) != 0) {
      return sub_2158533A4(&v14, (char **)v1, (char **)v2);
    }
    return result;
  }
  unsigned int v4 = *(_DWORD *)(v1 + 8);
  if (v3 != *(_DWORD *)(v1 + 20) * v4) {
    goto LABEL_12;
  }
  int v5 = *(_DWORD *)(v1 + 28);
  if (v5 == *(_DWORD *)(v2 + 28) && (int v6 = *(_DWORD *)(v1 + 12), v5 == v6 * v3))
  {
    uint64_t v7 = v6 * v4 * *(_DWORD *)(v1 + 16);
    int v8 = *(char **)v1;
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v7)
    {
      return result;
    }
    char v13 = *(char **)v2;
    return (uint64_t *)memmove(v13, v8, 2 * v7);
  }
  else
  {
    int v12 = (_DWORD *)*result;
    return (uint64_t *)sub_21585322C(v12, (char **)v2);
  }
}

_DWORD *sub_21585322C(_DWORD *result, char **a2)
{
  int v2 = result[2];
  int v3 = result[3];
  int v4 = result[4];
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = (v3 * v2);
    int v8 = *(char **)result;
    BOOL v9 = *a2;
    int v10 = v4 - 1;
    if (v4 == 1)
    {
LABEL_17:
      if (!v7 || v8)
      {
        if (!v7) {
          return result;
        }
      }
      else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_16;
      }
      return memmove(v9, v8, 2 * v7);
    }
    else if (v7)
    {
      uint64_t v11 = 2 * result[7];
      uint64_t v12 = 2 * *((unsigned int *)a2 + 7);
      while (v8
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        __n128 result = memmove(v9, v8, 2 * v7);
        v8 += v11;
        v9 += v12;
        if (!--v10) {
          goto LABEL_17;
        }
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_2158533A4(uint64_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  int v4 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = result;
    int v8 = v3 - 1;
    BOOL v9 = *a2;
    int v10 = *a3;
    uint64_t v11 = 2 * *((unsigned int *)a2 + 6);
    uint64_t v12 = 2 * *((unsigned int *)a3 + 6);
    int v32 = v4 - 1;
    int v30 = v3 - 1;
    if (v4 != 1)
    {
      uint64_t v13 = *((unsigned int *)a3 + 7);
      uint64_t v14 = *((unsigned int *)a2 + 7);
      if (v8)
      {
        int v15 = 0;
        uint64_t v28 = 2 * v13;
        uint64_t v29 = 2 * v14;
        while (1)
        {
          int v31 = v15;
          uint64_t v16 = v10;
          int v17 = v9;
          int v18 = v30;
          do
          {
            int v19 = v17;
            uint64_t v20 = *v7;
            if (!v19 && v20)
            {
              if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
              {
                goto LABEL_48;
              }
LABEL_18:
              __n128 result = (uint64_t *)memmove(v16, v19, 2 * v20);
              goto LABEL_19;
            }
            if (v20) {
              goto LABEL_18;
            }
LABEL_19:
            int v17 = &v19[v11];
            v16 += v12;
            --v18;
          }
          while (v18);
          uint64_t v21 = *v7;
          if (!v19 && v21)
          {
            if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
LABEL_14:
              __n128 result = (uint64_t *)memmove(v16, &v19[v11], 2 * v21);
              goto LABEL_15;
            }
LABEL_48:
            abort();
          }
          if (v21) {
            goto LABEL_14;
          }
LABEL_15:
          v9 += v29;
          v10 += v28;
          int v15 = v31 + 1;
          if (v31 + 1 == v32) {
            goto LABEL_36;
          }
        }
      }
      uint64_t v22 = 2 * v14;
      uint64_t v23 = 2 * v13;
      do
      {
        uint64_t v24 = *v7;
        if (!v9 && v24)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_48;
          }
        }
        else if (!v24)
        {
          goto LABEL_31;
        }
        __n128 result = (uint64_t *)memmove(v10, v9, 2 * v24);
LABEL_31:
        v9 += v22;
        v10 += v23;
        --v32;
      }
      while (v32);
    }
LABEL_36:
    for (int i = v30; i; --i)
    {
      uint64_t v26 = *v7;
      if (!v9 && v26)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_48;
        }
      }
      else if (!v26)
      {
        goto LABEL_40;
      }
      __n128 result = (uint64_t *)memmove(v10, v9, 2 * v26);
LABEL_40:
      v9 += v11;
      v10 += v12;
    }
    uint64_t v27 = *v7;
    if (v9 || !v27)
    {
      if (!v27) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_48;
    }
    return (uint64_t *)memmove(v10, v9, 2 * v27);
  }
  return result;
}

unint64_t sub_2158536F8(unint64_t result, uint64_t a2, uint64_t a3, _WORD *a4, _WORD *a5)
{
  int v5 = *(_DWORD *)(result + 32);
  int v6 = *(_DWORD *)(result + 20);
  if (v5)
  {
    int v7 = *(_DWORD *)(result + 8);
    uint64_t v8 = *(unsigned int *)(result + 36);
    uint64_t v9 = *(unsigned int *)(result + 40);
    if (v6)
    {
      uint64_t v10 = *(unsigned int *)(result + 24);
      uint64_t v11 = *(unsigned int *)(result + 28);
      if (!v7)
      {
        do
        {
          v50 = a5;
          v51 = a4;
          int v52 = v6;
          do
          {
            _WORD *v50 = *v51;
            v51 += v10;
            v50 += v11;
            --v52;
          }
          while (v52);
          __n128 result = (unsigned __int16)*v51;
          _WORD *v50 = result;
          a4 += v8;
          a5 += v9;
          ++v7;
        }
        while (v7 != v5);
        goto LABEL_32;
      }
      int v12 = 0;
      uint64_t v13 = 2 * v8;
      uint64_t v14 = v10;
      uint64_t v15 = 2 * *(unsigned int *)(result + 12);
      uint64_t v16 = 2 * v9;
      uint64_t v17 = v11;
      uint64_t v18 = 2 * *(unsigned int *)(result + 16);
      int v19 = &a4[v14];
      uint64_t v20 = &a5[v17];
      do
      {
        int v21 = 0;
        uint64_t v22 = v20;
        uint64_t v23 = v19;
        uint64_t v24 = a5;
        uint64_t v25 = a4;
        do
        {
          uint64_t v26 = v23;
          uint64_t v27 = v22;
          uint64_t v28 = v24;
          uint64_t v29 = v25;
          int v30 = v7;
          do
          {
            _WORD *v28 = *v29;
            uint64_t v29 = (_WORD *)((char *)v29 + v15);
            uint64_t v28 = (_WORD *)((char *)v28 + v18);
            --v30;
          }
          while (v30);
          _WORD *v28 = *v29;
          uint64_t v25 = (_WORD *)((char *)v25 + v14 * 2);
          uint64_t v24 = (_WORD *)((char *)v24 + v17 * 2);
          ++v21;
          uint64_t v23 = &v26[v14];
          uint64_t v22 = &v27[v17];
        }
        while (v21 != v6);
        int v31 = v7;
        do
        {
          *uint64_t v27 = *v26;
          uint64_t v26 = (_WORD *)((char *)v26 + v15);
          uint64_t v27 = (_WORD *)((char *)v27 + v18);
          --v31;
        }
        while (v31);
        *uint64_t v27 = *v26;
        a4 = (_WORD *)((char *)a4 + v13);
        a5 = (_WORD *)((char *)a5 + v16);
        ++v12;
        int v19 = (_WORD *)((char *)v19 + v13);
        uint64_t v20 = (_WORD *)((char *)v20 + v16);
      }
      while (v12 != v5);
LABEL_14:
      uint64_t v10 = *(unsigned int *)(result + 24);
      uint64_t v11 = *(unsigned int *)(result + 28);
      if (v7)
      {
        int v32 = 0;
        uint64_t v33 = 2 * v10;
        uint64_t v34 = 2 * *(unsigned int *)(result + 12);
        uint64_t v35 = 2 * v11;
        uint64_t v36 = 2 * *(unsigned int *)(result + 16);
        do
        {
          v37 = a5;
          v38 = a4;
          int v39 = v7;
          do
          {
            _WORD *v37 = *v38;
            v38 = (_WORD *)((char *)v38 + v34);
            v37 = (_WORD *)((char *)v37 + v36);
            --v39;
          }
          while (v39);
          _WORD *v37 = *v38;
          a4 = (_WORD *)((char *)a4 + v33);
          a5 = (_WORD *)((char *)a5 + v35);
          ++v32;
        }
        while (v32 != v6);
        goto LABEL_25;
      }
      do
      {
LABEL_32:
        *a5 = *a4;
        a4 += v10;
        a5 += v11;
        --v6;
      }
      while (v6);
      goto LABEL_35;
    }
    if (!v7)
    {
      do
      {
        *a5 = *a4;
        a4 += v8;
        a5 += v9;
        --v5;
      }
      while (v5);
      goto LABEL_35;
    }
    int v40 = 0;
    uint64_t v41 = 2 * v8;
    uint64_t v42 = 2 * *(unsigned int *)(result + 12);
    uint64_t v43 = 2 * v9;
    uint64_t v44 = 2 * *(unsigned int *)(result + 16);
    do
    {
      v45 = a5;
      v46 = a4;
      int v47 = v7;
      do
      {
        _WORD *v45 = *v46;
        v46 = (_WORD *)((char *)v46 + v42);
        v45 = (_WORD *)((char *)v45 + v44);
        --v47;
      }
      while (v47);
      _WORD *v45 = *v46;
      a4 = (_WORD *)((char *)a4 + v41);
      a5 = (_WORD *)((char *)a5 + v43);
      ++v40;
    }
    while (v40 != v5);
  }
  else
  {
    int v7 = *(_DWORD *)(result + 8);
    if (v6) {
      goto LABEL_14;
    }
  }
LABEL_25:
  if (v7)
  {
    uint64_t v48 = 2 * *(unsigned int *)(result + 12);
    uint64_t v49 = 2 * *(unsigned int *)(result + 16);
    do
    {
      *a5 = *a4;
      a4 = (_WORD *)((char *)a4 + v48);
      a5 = (_WORD *)((char *)a5 + v49);
      --v7;
    }
    while (v7);
  }
LABEL_35:
  *a5 = *a4;
  return result;
}

uint64_t sub_215853998()
{
  return 7;
}

long long *sub_2158539A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886660, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886660))
  {
    uint64_t v1 = sub_215853A88();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886648, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886658 = *((void *)v1 + 2);
      xmmword_267886648 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886648, &dword_21572C000);
    __cxa_guard_release(&qword_267886660);
  }
  if (byte_26788665F >= 0) {
    return &xmmword_267886648;
  }
  else {
    return (long long *)xmmword_267886648;
  }
}

void sub_215853A70(_Unwind_Exception *a1)
{
}

long long *sub_215853A88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886680, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886680))
  {
    return &xmmword_267886668;
  }
  uint64_t v1 = sub_215853B70();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886668, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886678 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886668 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886668, &dword_21572C000);
  __cxa_guard_release(&qword_267886680);
  return &xmmword_267886668;
}

void sub_215853B58(_Unwind_Exception *a1)
{
}

std::string *sub_215853B70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678866A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678866A0))
  {
    return &stru_267886688;
  }
  sub_215853D98((uint64_t)__p);
  sub_215853C6C(__p, &stru_267886688);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886688, &dword_21572C000);
  __cxa_guard_release(&qword_2678866A0);
  return &stru_267886688;
}

void sub_215853C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678866A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678866A0);
  _Unwind_Resume(a1);
}

void sub_215853C6C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v4 = sub_21580DC14();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215853D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215853D98(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678866C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678866C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Two16f>]", qword_2678866A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678866A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678866C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678866E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678866E0))
  {
    size_t v3 = sub_215747D98(qword_2678866A8, "<", 0);
    sub_215747C90(qword_2678866A8, 0, v3, qword_2678866C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678866C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678866E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886700, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886700))
  {
    sub_215E19DF4((uint64_t)qword_2678866C8, (uint64_t)&xmmword_2678866E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678866E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886700);
  }
  if (byte_2678866FF < 0)
  {
    long long v2 = xmmword_2678866E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678866E8;
    *(void *)(a1 + 16) = unk_2678866F8;
  }
}

void sub_215853F60(_Unwind_Exception *a1)
{
}

void sub_215853F78(_Unwind_Exception *a1)
{
}

void sub_215853F90(_Unwind_Exception *a1)
{
}

void sub_215853FA8()
{
}

uint64_t sub_215853FC0(uint64_t a1, uint64_t a2)
{
  return sub_215D7F440(a2);
}

__n128 sub_215853FC8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215853FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663D60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_215854024(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    v15[0] = 0;
    int v6 = malloc_type_posix_memalign(v15, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = v15[0];
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  int v8 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24)) {
    BOOL v9 = *(_DWORD *)(a2 + 28) == 0;
  }
  else {
    BOOL v9 = 1;
  }
  int v10 = *(_DWORD *)(a2 + 44) >> 1;
  uint64_t v11 = (*(void *)(a2 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  BOOL v12 = v9 || v8 == 0;
  uint64_t v13 = *(void **)(a2 + 24);
  if (v12)
  {
    uint64_t v13 = 0;
    int v8 = 0;
  }
  v15[0] = *(void **)(a2 + 8);
  v15[1] = v13;
  int v16 = v8;
  uint64_t v17 = v11;
  int v18 = v10;
  if (v8 * v10 == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215854170(a1, v15);
  return a1;
}

void sub_215854154(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

void sub_215854170(uint64_t a1, _DWORD *a2)
{
  if (a2[2]) {
    BOOL v2 = a2[3] == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2 && a2[4] != 0)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24)) {
      BOOL v6 = *(_DWORD *)(a1 + 28) == 0;
    }
    else {
      BOOL v6 = 1;
    }
    int v7 = *(_DWORD *)(a1 + 44) >> 1;
    uint64_t v8 = (*(void *)(a1 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
    BOOL v9 = v6 || v5 == 0;
    uint64_t v10 = *(void *)(a1 + 24);
    if (v9)
    {
      uint64_t v10 = 0;
      int v5 = 0;
    }
    v12[0] = *(void *)(a1 + 8);
    v12[1] = v10;
    int v13 = v5;
    uint64_t v14 = v8;
    int v15 = v7;
    if (v5 * v7 != -1) {
      goto LABEL_21;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    if (a2[2] && a2[3] && a2[4]) {
LABEL_21:
    }
      sub_21585426C((uint64_t)&v11, (uint64_t)a2, (uint64_t)v12);
  }
}

void sub_21585426C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 8);
  int v4 = *(_DWORD *)(a2 + 12);
  int v5 = *(_DWORD *)(a2 + 16);
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v3 - 1;
    int v9 = v4 - 1;
    uint64_t v10 = *(unsigned int *)(a2 + 20);
    uint64_t v11 = *(unsigned int *)(a2 + 24);
    uint64_t v12 = *(unsigned int *)(a3 + 20);
    uint64_t v13 = *(unsigned int *)(a3 + 24);
    uint64_t v14 = *(_WORD **)a2;
    int v15 = *(_WORD **)a3;
    int v16 = v5 - 1;
    if (v16)
    {
      uint64_t v17 = *(unsigned int *)(a3 + 28);
      uint64_t v18 = *(unsigned int *)(a2 + 28);
      if (v9)
      {
        int v19 = 0;
        uint64_t v20 = 2 * v18;
        uint64_t v21 = v11;
        if (v8)
        {
          uint64_t v22 = 2 * v10;
          uint64_t v23 = 2 * v17;
          uint64_t v24 = v13;
          uint64_t v25 = &v14[v21];
          uint64_t v26 = &v15[v13];
          uint64_t v27 = 2 * v12;
          do
          {
            int v28 = 0;
            uint64_t v29 = v26;
            int v30 = v25;
            int v31 = v15;
            int v32 = v14;
            do
            {
              uint64_t v33 = v30;
              uint64_t v34 = v29;
              uint64_t v35 = v31;
              uint64_t v36 = v32;
              int v37 = v8;
              do
              {
                *uint64_t v35 = *v36;
                uint64_t v36 = (_WORD *)((char *)v36 + v22);
                uint64_t v35 = (_WORD *)((char *)v35 + v27);
                --v37;
              }
              while (v37);
              *uint64_t v35 = *v36;
              int v32 = (_WORD *)((char *)v32 + v21 * 2);
              int v31 = (_WORD *)((char *)v31 + v24 * 2);
              ++v28;
              int v30 = &v33[v21];
              uint64_t v29 = &v34[v24];
            }
            while (v28 != v9);
            int v38 = v8;
            do
            {
              *uint64_t v34 = *v33;
              uint64_t v33 = (_WORD *)((char *)v33 + v22);
              uint64_t v34 = (_WORD *)((char *)v34 + v27);
              --v38;
            }
            while (v38);
            *uint64_t v34 = *v33;
            uint64_t v14 = (_WORD *)((char *)v14 + v20);
            int v15 = (_WORD *)((char *)v15 + v23);
            ++v19;
            uint64_t v25 = (_WORD *)((char *)v25 + v20);
            uint64_t v26 = (_WORD *)((char *)v26 + v23);
          }
          while (v19 != v16);
        }
        else
        {
          do
          {
            int v44 = v9;
            v45 = v15;
            v46 = v14;
            do
            {
              _WORD *v45 = *v46;
              v46 = (_WORD *)((char *)v46 + v21 * 2);
              v45 += v13;
              --v44;
            }
            while (v44);
            _WORD *v45 = *v46;
            uint64_t v14 = (_WORD *)((char *)v14 + v20);
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
      }
      else if (v8)
      {
        int v39 = 0;
        uint64_t v40 = 2 * v18;
        do
        {
          uint64_t v41 = v15;
          uint64_t v42 = v14;
          int v43 = v8;
          do
          {
            *uint64_t v41 = *v42;
            v42 += v10;
            v41 += v12;
            --v43;
          }
          while (v43);
          *uint64_t v41 = *v42;
          uint64_t v14 = (_WORD *)((char *)v14 + v40);
          v15 += v17;
          ++v39;
        }
        while (v39 != v16);
      }
      else
      {
        do
        {
          *int v15 = *v14;
          v14 += v18;
          v15 += v17;
          --v16;
        }
        while (v16);
      }
    }
    if (v9)
    {
      if (v8)
      {
        int v47 = 0;
        uint64_t v48 = 2 * v11;
        uint64_t v49 = 2 * v13;
        do
        {
          v50 = v15;
          v51 = v14;
          int v52 = v8;
          do
          {
            _WORD *v50 = *v51;
            v51 += v10;
            v50 += v12;
            --v52;
          }
          while (v52);
          _WORD *v50 = *v51;
          uint64_t v14 = (_WORD *)((char *)v14 + v48);
          int v15 = (_WORD *)((char *)v15 + v49);
          ++v47;
        }
        while (v47 != v9);
      }
      else
      {
        uint64_t v53 = 2 * v11;
        uint64_t v54 = 2 * v13;
        do
        {
          *int v15 = *v14;
          uint64_t v14 = (_WORD *)((char *)v14 + v53);
          int v15 = (_WORD *)((char *)v15 + v54);
          --v9;
        }
        while (v9);
      }
    }
    if (v8)
    {
      uint64_t v55 = 2 * v10;
      uint64_t v56 = 2 * v12;
      do
      {
        *int v15 = *v14;
        uint64_t v14 = (_WORD *)((char *)v14 + v55);
        int v15 = (_WORD *)((char *)v15 + v56);
        --v8;
      }
      while (v8);
    }
    *int v15 = *v14;
  }
}

uint64_t sub_215854520()
{
  return 8;
}

long long *sub_21585452C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886720, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886720))
  {
    uint64_t v1 = sub_215854610();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886708, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886718 = *((void *)v1 + 2);
      xmmword_267886708 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886708, &dword_21572C000);
    __cxa_guard_release(&qword_267886720);
  }
  if (byte_26788671F >= 0) {
    return &xmmword_267886708;
  }
  else {
    return (long long *)xmmword_267886708;
  }
}

void sub_2158545F8(_Unwind_Exception *a1)
{
}

long long *sub_215854610()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886740, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886740))
  {
    return &xmmword_267886728;
  }
  uint64_t v1 = sub_2158546F8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886728, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886738 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886728 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886728, &dword_21572C000);
  __cxa_guard_release(&qword_267886740);
  return &xmmword_267886728;
}

void sub_2158546E0(_Unwind_Exception *a1)
{
}

std::string *sub_2158546F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886760, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886760))
  {
    return &stru_267886748;
  }
  sub_215854920((uint64_t)__p);
  sub_2158547F4(__p, &stru_267886748);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886748, &dword_21572C000);
  __cxa_guard_release(&qword_267886760);
  return &stru_267886748;
}

void sub_2158547B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886760);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886760);
  _Unwind_Resume(a1);
}

void sub_2158547F4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v4 = sub_21580F254();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    int v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158548F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215854920(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886780))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Two32f>]", qword_267886768);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886768, &dword_21572C000);
    __cxa_guard_release(&qword_267886780);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678867A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678867A0))
  {
    size_t v3 = sub_215747D98(qword_267886768, "<", 0);
    sub_215747C90(qword_267886768, 0, v3, qword_267886788);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886788, &dword_21572C000);
    __cxa_guard_release(&qword_2678867A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678867C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678867C0))
  {
    sub_215E19DF4((uint64_t)qword_267886788, (uint64_t)&xmmword_2678867A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678867A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678867C0);
  }
  if (byte_2678867BF < 0)
  {
    long long v2 = xmmword_2678867A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678867A8;
    *(void *)(a1 + 16) = unk_2678867B8;
  }
}

void sub_215854AE8(_Unwind_Exception *a1)
{
}

void sub_215854B00(_Unwind_Exception *a1)
{
}

void sub_215854B18(_Unwind_Exception *a1)
{
}

void sub_215854B30()
{
}

void sub_215854B48(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215854B78(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215854B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663DE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_215854BD4(uint64_t a1, uint64_t a2)
{
  size_t v4 = *(void *)a2;
  size_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  if (v4)
  {
    v15[0] = 0;
    int v6 = malloc_type_posix_memalign(v15, v5, v4, 0x1F88E90uLL);
    if (v6) {
      sub_215E0D744(v6, *(void *)(a1 + 16), v4);
    }
    *(void **)(a1 + 8) = v15[0];
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  int v8 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24)) {
    BOOL v9 = *(_DWORD *)(a2 + 28) == 0;
  }
  else {
    BOOL v9 = 1;
  }
  int v10 = *(_DWORD *)(a2 + 44) >> 2;
  uint64_t v11 = (*(void *)(a2 + 36) >> 2) & 0x3FFFFFFF3FFFFFFFLL;
  BOOL v12 = v9 || v8 == 0;
  uint64_t v13 = *(void **)(a2 + 24);
  if (v12)
  {
    uint64_t v13 = 0;
    int v8 = 0;
  }
  v15[0] = *(void **)(a2 + 8);
  v15[1] = v13;
  int v16 = v8;
  uint64_t v17 = v11;
  int v18 = v10;
  if (v8 * v10 == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215854D20(a1, v15);
  return a1;
}

void sub_215854D04(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)(v1 + 8);
  if (v3) {
    free(v3);
  }
  *(void *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

void sub_215854D20(uint64_t a1, _DWORD *a2)
{
  if (a2[2]) {
    BOOL v2 = a2[3] == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2 && a2[4] != 0)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24)) {
      BOOL v6 = *(_DWORD *)(a1 + 28) == 0;
    }
    else {
      BOOL v6 = 1;
    }
    int v7 = *(_DWORD *)(a1 + 44) >> 2;
    uint64_t v8 = (*(void *)(a1 + 36) >> 2) & 0x3FFFFFFF3FFFFFFFLL;
    BOOL v9 = v6 || v5 == 0;
    uint64_t v10 = *(void *)(a1 + 24);
    if (v9)
    {
      uint64_t v10 = 0;
      int v5 = 0;
    }
    v11[0] = *(void *)(a1 + 8);
    v11[1] = v10;
    int v12 = v5;
    uint64_t v13 = v8;
    int v14 = v7;
    if (v5 * v7 == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    v15[0] = (uint64_t)a2;
    v15[1] = (uint64_t)v11;
    sub_215854E04(v15);
  }
}

void sub_215854E04(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = *(unsigned int *)(*a1 + 20);
  uint64_t v4 = *(unsigned int *)(v2 + 20);
  if (v3 == 1 && v4 == 1)
  {
    sub_215854ED0(a1);
  }
  else
  {
    char v13 = 0;
    int v7 = *(_DWORD *)(v1 + 8);
    int v6 = *(_DWORD *)(v1 + 12);
    int v8 = *(_DWORD *)(v1 + 16);
    if (v7) {
      BOOL v9 = v6 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9 && v8 != 0)
    {
      uint64_t v14 = 0;
      int v15 = v7 - 1;
      uint64_t v16 = v3 | (v4 << 32);
      int v17 = v6 - 1;
      unint64_t v18 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned int *)(v2 + 24) << 32);
      int v19 = v8 - 1;
      unint64_t v20 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
      uint64_t v11 = *(_DWORD **)v1;
      int v12 = *(_DWORD **)v2;
      char v21 = 0;
      sub_2158554FC(&v14, (uint64_t)&v21, (uint64_t)&v13, v11, v12);
    }
  }
}

uint64_t *sub_215854ED0(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 24);
  if (v3 != *(_DWORD *)(v2 + 24))
  {
    unsigned int v4 = *(_DWORD *)(v1 + 8);
LABEL_12:
    uint64_t v14 = v4;
    if (v4) {
      BOOL v10 = *(_DWORD *)(v1 + 12) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10 && *(_DWORD *)(v1 + 16) != 0) {
      return sub_2158551A8(&v14, (char **)v1, (char **)v2);
    }
    return result;
  }
  unsigned int v4 = *(_DWORD *)(v1 + 8);
  if (v3 != *(_DWORD *)(v1 + 20) * v4) {
    goto LABEL_12;
  }
  int v5 = *(_DWORD *)(v1 + 28);
  if (v5 == *(_DWORD *)(v2 + 28) && (int v6 = *(_DWORD *)(v1 + 12), v5 == v6 * v3))
  {
    uint64_t v7 = v6 * v4 * *(_DWORD *)(v1 + 16);
    int v8 = *(char **)v1;
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v7)
    {
      return result;
    }
    char v13 = *(char **)v2;
    return (uint64_t *)memmove(v13, v8, 4 * v7);
  }
  else
  {
    int v12 = (_DWORD *)*result;
    return (uint64_t *)sub_215855030(v12, (char **)v2);
  }
}

_DWORD *sub_215855030(_DWORD *result, char **a2)
{
  int v2 = result[2];
  int v3 = result[3];
  int v4 = result[4];
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = (v3 * v2);
    int v8 = *(char **)result;
    BOOL v9 = *a2;
    int v10 = v4 - 1;
    if (v4 == 1)
    {
LABEL_17:
      if (!v7 || v8)
      {
        if (!v7) {
          return result;
        }
      }
      else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_16;
      }
      return memmove(v9, v8, 4 * v7);
    }
    else if (v7)
    {
      uint64_t v11 = 4 * result[7];
      uint64_t v12 = 4 * *((unsigned int *)a2 + 7);
      while (v8
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        __n128 result = memmove(v9, v8, 4 * v7);
        v8 += v11;
        v9 += v12;
        if (!--v10) {
          goto LABEL_17;
        }
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_2158551A8(uint64_t *result, char **a2, char **a3)
{
  int v3 = *((_DWORD *)a2 + 3);
  int v4 = *((_DWORD *)a2 + 4);
  if (*((_DWORD *)a2 + 2)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = result;
    int v8 = v3 - 1;
    BOOL v9 = *a2;
    int v10 = *a3;
    uint64_t v11 = 4 * *((unsigned int *)a2 + 6);
    uint64_t v12 = 4 * *((unsigned int *)a3 + 6);
    int v32 = v4 - 1;
    int v30 = v3 - 1;
    if (v4 != 1)
    {
      uint64_t v13 = *((unsigned int *)a3 + 7);
      uint64_t v14 = *((unsigned int *)a2 + 7);
      if (v8)
      {
        int v15 = 0;
        uint64_t v28 = 4 * v13;
        uint64_t v29 = 4 * v14;
        while (1)
        {
          int v31 = v15;
          uint64_t v16 = v10;
          int v17 = v9;
          int v18 = v30;
          do
          {
            int v19 = v17;
            uint64_t v20 = *v7;
            if (!v19 && v20)
            {
              if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
              {
                goto LABEL_48;
              }
LABEL_18:
              __n128 result = (uint64_t *)memmove(v16, v19, 4 * v20);
              goto LABEL_19;
            }
            if (v20) {
              goto LABEL_18;
            }
LABEL_19:
            int v17 = &v19[v11];
            v16 += v12;
            --v18;
          }
          while (v18);
          uint64_t v21 = *v7;
          if (!v19 && v21)
          {
            if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
LABEL_14:
              __n128 result = (uint64_t *)memmove(v16, &v19[v11], 4 * v21);
              goto LABEL_15;
            }
LABEL_48:
            abort();
          }
          if (v21) {
            goto LABEL_14;
          }
LABEL_15:
          v9 += v29;
          v10 += v28;
          int v15 = v31 + 1;
          if (v31 + 1 == v32) {
            goto LABEL_36;
          }
        }
      }
      uint64_t v22 = 4 * v14;
      uint64_t v23 = 4 * v13;
      do
      {
        uint64_t v24 = *v7;
        if (!v9 && v24)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_48;
          }
        }
        else if (!v24)
        {
          goto LABEL_31;
        }
        __n128 result = (uint64_t *)memmove(v10, v9, 4 * v24);
LABEL_31:
        v9 += v22;
        v10 += v23;
        --v32;
      }
      while (v32);
    }
LABEL_36:
    for (int i = v30; i; --i)
    {
      uint64_t v26 = *v7;
      if (!v9 && v26)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_48;
        }
      }
      else if (!v26)
      {
        goto LABEL_40;
      }
      __n128 result = (uint64_t *)memmove(v10, v9, 4 * v26);
LABEL_40:
      v9 += v11;
      v10 += v12;
    }
    uint64_t v27 = *v7;
    if (v9 || !v27)
    {
      if (!v27) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_48;
    }
    return (uint64_t *)memmove(v10, v9, 4 * v27);
  }
  return result;
}

float sub_2158554FC(_DWORD *a1, uint64_t a2, uint64_t a3, _DWORD *a4, _DWORD *a5)
{
  int v5 = a1[8];
  int v6 = a1[5];
  if (v5)
  {
    int v7 = a1[2];
    uint64_t v8 = a1[9];
    uint64_t v9 = a1[10];
    if (v6)
    {
      uint64_t v10 = a1[6];
      uint64_t v11 = a1[7];
      if (!v7)
      {
        do
        {
          v50 = a5;
          v51 = a4;
          int v52 = v6;
          do
          {
            _DWORD *v50 = *v51;
            v51 += v10;
            v50 += v11;
            --v52;
          }
          while (v52);
          _DWORD *v50 = *v51;
          a4 += v8;
          a5 += v9;
          ++v7;
        }
        while (v7 != v5);
        goto LABEL_32;
      }
      int v12 = 0;
      uint64_t v13 = 4 * v8;
      uint64_t v14 = v10;
      uint64_t v15 = 4 * a1[3];
      uint64_t v16 = 4 * v9;
      uint64_t v17 = v11;
      uint64_t v18 = 4 * a1[4];
      int v19 = &a4[v14];
      uint64_t v20 = &a5[v17];
      do
      {
        int v21 = 0;
        uint64_t v22 = v20;
        uint64_t v23 = v19;
        uint64_t v24 = a5;
        uint64_t v25 = a4;
        do
        {
          uint64_t v26 = v23;
          uint64_t v27 = v22;
          uint64_t v28 = v24;
          uint64_t v29 = v25;
          int v30 = v7;
          do
          {
            _DWORD *v28 = *v29;
            uint64_t v29 = (_DWORD *)((char *)v29 + v15);
            uint64_t v28 = (_DWORD *)((char *)v28 + v18);
            --v30;
          }
          while (v30);
          _DWORD *v28 = *v29;
          uint64_t v25 = (_DWORD *)((char *)v25 + v14 * 4);
          uint64_t v24 = (_DWORD *)((char *)v24 + v17 * 4);
          ++v21;
          uint64_t v23 = &v26[v14];
          uint64_t v22 = &v27[v17];
        }
        while (v21 != v6);
        int v31 = v7;
        do
        {
          *uint64_t v27 = *v26;
          uint64_t v26 = (_DWORD *)((char *)v26 + v15);
          uint64_t v27 = (_DWORD *)((char *)v27 + v18);
          --v31;
        }
        while (v31);
        *uint64_t v27 = *v26;
        a4 = (_DWORD *)((char *)a4 + v13);
        a5 = (_DWORD *)((char *)a5 + v16);
        ++v12;
        int v19 = (_DWORD *)((char *)v19 + v13);
        uint64_t v20 = (_DWORD *)((char *)v20 + v16);
      }
      while (v12 != v5);
LABEL_14:
      uint64_t v10 = a1[6];
      uint64_t v11 = a1[7];
      if (v7)
      {
        int v32 = 0;
        uint64_t v33 = 4 * v10;
        uint64_t v34 = 4 * a1[3];
        uint64_t v35 = 4 * v11;
        uint64_t v36 = 4 * a1[4];
        do
        {
          int v37 = a5;
          int v38 = a4;
          int v39 = v7;
          do
          {
            _DWORD *v37 = *v38;
            int v38 = (_DWORD *)((char *)v38 + v34);
            int v37 = (_DWORD *)((char *)v37 + v36);
            --v39;
          }
          while (v39);
          _DWORD *v37 = *v38;
          a4 = (_DWORD *)((char *)a4 + v33);
          a5 = (_DWORD *)((char *)a5 + v35);
          ++v32;
        }
        while (v32 != v6);
        goto LABEL_25;
      }
      do
      {
LABEL_32:
        *a5 = *a4;
        a4 += v10;
        a5 += v11;
        --v6;
      }
      while (v6);
      goto LABEL_35;
    }
    if (!v7)
    {
      do
      {
        *a5 = *a4;
        a4 += v8;
        a5 += v9;
        --v5;
      }
      while (v5);
      goto LABEL_35;
    }
    int v40 = 0;
    uint64_t v41 = 4 * v8;
    uint64_t v42 = 4 * a1[3];
    uint64_t v43 = 4 * v9;
    uint64_t v44 = 4 * a1[4];
    do
    {
      v45 = a5;
      v46 = a4;
      int v47 = v7;
      do
      {
        _DWORD *v45 = *v46;
        v46 = (_DWORD *)((char *)v46 + v42);
        v45 = (_DWORD *)((char *)v45 + v44);
        --v47;
      }
      while (v47);
      _DWORD *v45 = *v46;
      a4 = (_DWORD *)((char *)a4 + v41);
      a5 = (_DWORD *)((char *)a5 + v43);
      ++v40;
    }
    while (v40 != v5);
  }
  else
  {
    int v7 = a1[2];
    if (v6) {
      goto LABEL_14;
    }
  }
LABEL_25:
  if (v7)
  {
    uint64_t v48 = 4 * a1[3];
    uint64_t v49 = 4 * a1[4];
    do
    {
      *a5 = *a4;
      a4 = (_DWORD *)((char *)a4 + v48);
      a5 = (_DWORD *)((char *)a5 + v49);
      --v7;
    }
    while (v7);
  }
LABEL_35:
  float result = *(float *)a4;
  *a5 = *a4;
  return result;
}

uint64_t sub_21585579C()
{
  return 9;
}

long long *sub_2158557A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678867E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678867E0))
  {
    uint64_t v1 = sub_21585588C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678867C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678867D8 = *((void *)v1 + 2);
      xmmword_2678867C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678867C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678867E0);
  }
  if (byte_2678867DF >= 0) {
    return &xmmword_2678867C8;
  }
  else {
    return (long long *)xmmword_2678867C8;
  }
}

void sub_215855874(_Unwind_Exception *a1)
{
}

long long *sub_21585588C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886800, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886800))
  {
    return &xmmword_2678867E8;
  }
  uint64_t v1 = sub_215855974();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678867E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678867F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678867E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678867E8, &dword_21572C000);
  __cxa_guard_release(&qword_267886800);
  return &xmmword_2678867E8;
}

void sub_21585595C(_Unwind_Exception *a1)
{
}

std::string *sub_215855974()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886820, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886820))
  {
    return &stru_267886808;
  }
  sub_215855B9C((uint64_t)__p);
  sub_215855A70(__p, &stru_267886808);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886808, &dword_21572C000);
  __cxa_guard_release(&qword_267886820);
  return &stru_267886808;
}

void sub_215855A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886820);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886820);
  _Unwind_Resume(a1);
}

void sub_215855A70(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v4 = sub_215855DAC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215855B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215855B9C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886840))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Three8u>]", qword_267886828);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886828, &dword_21572C000);
    __cxa_guard_release(&qword_267886840);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886860))
  {
    size_t v3 = sub_215747D98(qword_267886828, "<", 0);
    sub_215747C90(qword_267886828, 0, v3, qword_267886848);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886848, &dword_21572C000);
    __cxa_guard_release(&qword_267886860);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886880, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886880))
  {
    sub_215E19DF4((uint64_t)qword_267886848, (uint64_t)&xmmword_267886868);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886868, &dword_21572C000);
    __cxa_guard_release(&qword_267886880);
  }
  if (byte_26788687F < 0)
  {
    long long v2 = xmmword_267886868;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886868;
    *(void *)(a1 + 16) = unk_267886878;
  }
}

void sub_215855D64(_Unwind_Exception *a1)
{
}

void sub_215855D7C(_Unwind_Exception *a1)
{
}

void sub_215855D94(_Unwind_Exception *a1)
{
}

std::string *sub_215855DAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885EC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885EC0))
  {
    return &stru_267885EA8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885EA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885EA8, &dword_21572C000);
  __cxa_guard_release(&qword_267885EC0);
  return &stru_267885EA8;
}

void sub_215855E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885EC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885EC0);
  _Unwind_Resume(a1);
}

void sub_215855EB0()
{
}

void sub_215855EC8(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215855EF8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215855F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663E60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215855F54()
{
  return 10;
}

long long *sub_215855F60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678868A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678868A0))
  {
    uint64_t v1 = sub_215856044();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886888, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886898 = *((void *)v1 + 2);
      xmmword_267886888 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886888, &dword_21572C000);
    __cxa_guard_release(&qword_2678868A0);
  }
  if (byte_26788689F >= 0) {
    return &xmmword_267886888;
  }
  else {
    return (long long *)xmmword_267886888;
  }
}

void sub_21585602C(_Unwind_Exception *a1)
{
}

long long *sub_215856044()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678868C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678868C0))
  {
    return &xmmword_2678868A8;
  }
  uint64_t v1 = sub_21585612C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678868A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678868B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678868A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678868A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678868C0);
  return &xmmword_2678868A8;
}

void sub_215856114(_Unwind_Exception *a1)
{
}

std::string *sub_21585612C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678868E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678868E0))
  {
    return &stru_2678868C8;
  }
  sub_215856354((uint64_t)__p);
  sub_215856228(__p, &stru_2678868C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678868C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678868E0);
  return &stru_2678868C8;
}

void sub_2158561E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678868E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678868E0);
  _Unwind_Resume(a1);
}

void sub_215856228(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215856564();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215856328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215856354(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886900))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Three16u>]", qword_2678868E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678868E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886900);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886920, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886920))
  {
    size_t v3 = sub_215747D98(qword_2678868E8, "<", 0);
    sub_215747C90(qword_2678868E8, 0, v3, qword_267886908);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886908, &dword_21572C000);
    __cxa_guard_release(&qword_267886920);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886940))
  {
    sub_215E19DF4((uint64_t)qword_267886908, (uint64_t)&xmmword_267886928);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886928, &dword_21572C000);
    __cxa_guard_release(&qword_267886940);
  }
  if (byte_26788693F < 0)
  {
    long long v2 = xmmword_267886928;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886928;
    *(void *)(a1 + 16) = unk_267886938;
  }
}

void sub_21585651C(_Unwind_Exception *a1)
{
}

void sub_215856534(_Unwind_Exception *a1)
{
}

void sub_21585654C(_Unwind_Exception *a1)
{
}

std::string *sub_215856564()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885EE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885EE0))
  {
    return &stru_267885EC8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885EC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885EC8, &dword_21572C000);
  __cxa_guard_release(&qword_267885EE0);
  return &stru_267885EC8;
}

void sub_215856628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885EE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885EE0);
  _Unwind_Resume(a1);
}

void sub_215856668()
{
}

void sub_215856680(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_2158566B0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2158566C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663EE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_21585670C()
{
  return 11;
}

long long *sub_215856718()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886960))
  {
    uint64_t v1 = sub_2158567FC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886948, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886958 = *((void *)v1 + 2);
      xmmword_267886948 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886948, &dword_21572C000);
    __cxa_guard_release(&qword_267886960);
  }
  if (byte_26788695F >= 0) {
    return &xmmword_267886948;
  }
  else {
    return (long long *)xmmword_267886948;
  }
}

void sub_2158567E4(_Unwind_Exception *a1)
{
}

long long *sub_2158567FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886980, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886980))
  {
    return &xmmword_267886968;
  }
  uint64_t v1 = sub_2158568E4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886968, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886978 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886968 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886968, &dword_21572C000);
  __cxa_guard_release(&qword_267886980);
  return &xmmword_267886968;
}

void sub_2158568CC(_Unwind_Exception *a1)
{
}

std::string *sub_2158568E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678869A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678869A0))
  {
    return &stru_267886988;
  }
  sub_215856B0C((uint64_t)__p);
  sub_2158569E0(__p, &stru_267886988);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886988, &dword_21572C000);
  __cxa_guard_release(&qword_2678869A0);
  return &stru_267886988;
}

void sub_2158569A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678869A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678869A0);
  _Unwind_Resume(a1);
}

void sub_2158569E0(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215856D1C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215856AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215856B0C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678869C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678869C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Three16f>]", qword_2678869A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678869A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678869C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678869E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678869E0))
  {
    size_t v3 = sub_215747D98(qword_2678869A8, "<", 0);
    sub_215747C90(qword_2678869A8, 0, v3, qword_2678869C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678869C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678869E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886A00))
  {
    sub_215E19DF4((uint64_t)qword_2678869C8, (uint64_t)&xmmword_2678869E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678869E8, &dword_21572C000);
    __cxa_guard_release(&qword_267886A00);
  }
  if (byte_2678869FF < 0)
  {
    long long v2 = xmmword_2678869E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678869E8;
    *(void *)(a1 + 16) = unk_2678869F8;
  }
}

void sub_215856CD4(_Unwind_Exception *a1)
{
}

void sub_215856CEC(_Unwind_Exception *a1)
{
}

void sub_215856D04(_Unwind_Exception *a1)
{
}

std::string *sub_215856D1C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885F00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885F00))
  {
    return &stru_267885EE8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885EE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885EE8, &dword_21572C000);
  __cxa_guard_release(&qword_267885F00);
  return &stru_267885EE8;
}

void sub_215856DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885F00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885F00);
  _Unwind_Resume(a1);
}

void sub_215856E20()
{
}

uint64_t sub_215856E38(uint64_t a1, uint64_t a2)
{
  return sub_215D81984(a2);
}

__n128 sub_215856E40(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215856E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663F60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_215856E9C()
{
  return 12;
}

long long *sub_215856EA8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886A20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886A20))
  {
    uint64_t v1 = sub_215856F8C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886A08, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886A18 = *((void *)v1 + 2);
      xmmword_267886A08 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886A08, &dword_21572C000);
    __cxa_guard_release(&qword_267886A20);
  }
  if (byte_267886A1F >= 0) {
    return &xmmword_267886A08;
  }
  else {
    return (long long *)xmmword_267886A08;
  }
}

void sub_215856F74(_Unwind_Exception *a1)
{
}

long long *sub_215856F8C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886A40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886A40))
  {
    return &xmmword_267886A28;
  }
  uint64_t v1 = sub_215857074();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886A28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886A38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886A28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886A28, &dword_21572C000);
  __cxa_guard_release(&qword_267886A40);
  return &xmmword_267886A28;
}

void sub_21585705C(_Unwind_Exception *a1)
{
}

std::string *sub_215857074()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886A60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886A60))
  {
    return &stru_267886A48;
  }
  sub_21585729C((uint64_t)__p);
  sub_215857170(__p, &stru_267886A48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886A48, &dword_21572C000);
  __cxa_guard_release(&qword_267886A60);
  return &stru_267886A48;
}

void sub_215857130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886A60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886A60);
  _Unwind_Resume(a1);
}

void sub_215857170(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_2158574AC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215857270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585729C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886A80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Three32f>]", qword_267886A68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886A68, &dword_21572C000);
    __cxa_guard_release(&qword_267886A80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886AA0))
  {
    size_t v3 = sub_215747D98(qword_267886A68, "<", 0);
    sub_215747C90(qword_267886A68, 0, v3, qword_267886A88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886A88, &dword_21572C000);
    __cxa_guard_release(&qword_267886AA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886AC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886AC0))
  {
    sub_215E19DF4((uint64_t)qword_267886A88, (uint64_t)&xmmword_267886AA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886AA8, &dword_21572C000);
    __cxa_guard_release(&qword_267886AC0);
  }
  if (byte_267886ABF < 0)
  {
    long long v2 = xmmword_267886AA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886AA8;
    *(void *)(a1 + 16) = unk_267886AB8;
  }
}

void sub_215857464(_Unwind_Exception *a1)
{
}

void sub_21585747C(_Unwind_Exception *a1)
{
}

void sub_215857494(_Unwind_Exception *a1)
{
}

std::string *sub_2158574AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885F20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885F20))
  {
    return &stru_267885F08;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885F08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885F08, &dword_21572C000);
  __cxa_guard_release(&qword_267885F20);
  return &stru_267885F08;
}

void sub_215857570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885F20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885F20);
  _Unwind_Resume(a1);
}

void sub_2158575B0()
{
}

void sub_2158575C8(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_2158575F8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585760C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663FE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_215857654()
{
  return 13;
}

long long *sub_215857660()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886AE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886AE0))
  {
    uint64_t v1 = sub_215857744();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886AC8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886AD8 = *((void *)v1 + 2);
      xmmword_267886AC8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886AC8, &dword_21572C000);
    __cxa_guard_release(&qword_267886AE0);
  }
  if (byte_267886ADF >= 0) {
    return &xmmword_267886AC8;
  }
  else {
    return (long long *)xmmword_267886AC8;
  }
}

void sub_21585772C(_Unwind_Exception *a1)
{
}

long long *sub_215857744()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886B00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886B00))
  {
    return &xmmword_267886AE8;
  }
  uint64_t v1 = sub_21585782C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886AE8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886AF8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886AE8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886AE8, &dword_21572C000);
  __cxa_guard_release(&qword_267886B00);
  return &xmmword_267886AE8;
}

void sub_215857814(_Unwind_Exception *a1)
{
}

std::string *sub_21585782C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886B20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886B20))
  {
    return &stru_267886B08;
  }
  sub_215857A54((uint64_t)__p);
  sub_215857928(__p, &stru_267886B08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886B08, &dword_21572C000);
  __cxa_guard_release(&qword_267886B20);
  return &stru_267886B08;
}

void sub_2158578E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886B20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886B20);
  _Unwind_Resume(a1);
}

void sub_215857928(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215857C64();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215857A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215857A54(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886B40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Four8u>]", qword_267886B28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886B28, &dword_21572C000);
    __cxa_guard_release(&qword_267886B40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886B60))
  {
    size_t v3 = sub_215747D98(qword_267886B28, "<", 0);
    sub_215747C90(qword_267886B28, 0, v3, qword_267886B48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886B48, &dword_21572C000);
    __cxa_guard_release(&qword_267886B60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886B80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886B80))
  {
    sub_215E19DF4((uint64_t)qword_267886B48, (uint64_t)&xmmword_267886B68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886B68, &dword_21572C000);
    __cxa_guard_release(&qword_267886B80);
  }
  if (byte_267886B7F < 0)
  {
    long long v2 = xmmword_267886B68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886B68;
    *(void *)(a1 + 16) = unk_267886B78;
  }
}

void sub_215857C1C(_Unwind_Exception *a1)
{
}

void sub_215857C34(_Unwind_Exception *a1)
{
}

void sub_215857C4C(_Unwind_Exception *a1)
{
}

std::string *sub_215857C64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885F40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885F40))
  {
    return &stru_267885F28;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885F28);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885F28, &dword_21572C000);
  __cxa_guard_release(&qword_267885F40);
  return &stru_267885F28;
}

void sub_215857D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885F40);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885F40);
  _Unwind_Resume(a1);
}

void sub_215857D68()
{
}

void sub_215857D80(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215857DB0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215857DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664060;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215857E0C()
{
  return 14;
}

long long *sub_215857E18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886BA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886BA0))
  {
    uint64_t v1 = sub_215857EFC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886B88, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886B98 = *((void *)v1 + 2);
      xmmword_267886B88 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886B88, &dword_21572C000);
    __cxa_guard_release(&qword_267886BA0);
  }
  if (byte_267886B9F >= 0) {
    return &xmmword_267886B88;
  }
  else {
    return (long long *)xmmword_267886B88;
  }
}

void sub_215857EE4(_Unwind_Exception *a1)
{
}

long long *sub_215857EFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886BC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886BC0))
  {
    return &xmmword_267886BA8;
  }
  uint64_t v1 = sub_215857FE4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886BA8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886BB8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886BA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886BA8, &dword_21572C000);
  __cxa_guard_release(&qword_267886BC0);
  return &xmmword_267886BA8;
}

void sub_215857FCC(_Unwind_Exception *a1)
{
}

std::string *sub_215857FE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886BE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886BE0))
  {
    return &stru_267886BC8;
  }
  sub_21585820C((uint64_t)__p);
  sub_2158580E0(__p, &stru_267886BC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886BC8, &dword_21572C000);
  __cxa_guard_release(&qword_267886BE0);
  return &stru_267886BC8;
}

void sub_2158580A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886BE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886BE0);
  _Unwind_Resume(a1);
}

void sub_2158580E0(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585841C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158581E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585820C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886C00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886C00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Four16u>]", qword_267886BE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886BE8, &dword_21572C000);
    __cxa_guard_release(&qword_267886C00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886C20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886C20))
  {
    size_t v3 = sub_215747D98(qword_267886BE8, "<", 0);
    sub_215747C90(qword_267886BE8, 0, v3, qword_267886C08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886C08, &dword_21572C000);
    __cxa_guard_release(&qword_267886C20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886C40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886C40))
  {
    sub_215E19DF4((uint64_t)qword_267886C08, (uint64_t)&xmmword_267886C28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886C28, &dword_21572C000);
    __cxa_guard_release(&qword_267886C40);
  }
  if (byte_267886C3F < 0)
  {
    long long v2 = xmmword_267886C28;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886C28;
    *(void *)(a1 + 16) = unk_267886C38;
  }
}

void sub_2158583D4(_Unwind_Exception *a1)
{
}

void sub_2158583EC(_Unwind_Exception *a1)
{
}

void sub_215858404(_Unwind_Exception *a1)
{
}

std::string *sub_21585841C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885F60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885F60))
  {
    return &stru_267885F48;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885F48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885F48, &dword_21572C000);
  __cxa_guard_release(&qword_267885F60);
  return &stru_267885F48;
}

void sub_2158584E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885F60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885F60);
  _Unwind_Resume(a1);
}

void sub_215858520()
{
}

void sub_215858538(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215858568(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585857C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6640E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_2158585C4()
{
  return 15;
}

long long *sub_2158585D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886C60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886C60))
  {
    uint64_t v1 = sub_2158586B4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886C48, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886C58 = *((void *)v1 + 2);
      xmmword_267886C48 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886C48, &dword_21572C000);
    __cxa_guard_release(&qword_267886C60);
  }
  if (byte_267886C5F >= 0) {
    return &xmmword_267886C48;
  }
  else {
    return (long long *)xmmword_267886C48;
  }
}

void sub_21585869C(_Unwind_Exception *a1)
{
}

long long *sub_2158586B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886C80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886C80))
  {
    return &xmmword_267886C68;
  }
  uint64_t v1 = sub_21585879C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886C68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886C78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886C68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886C68, &dword_21572C000);
  __cxa_guard_release(&qword_267886C80);
  return &xmmword_267886C68;
}

void sub_215858784(_Unwind_Exception *a1)
{
}

std::string *sub_21585879C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886CA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886CA0))
  {
    return &stru_267886C88;
  }
  sub_2158589C4((uint64_t)__p);
  sub_215858898(__p, &stru_267886C88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886C88, &dword_21572C000);
  __cxa_guard_release(&qword_267886CA0);
  return &stru_267886C88;
}

void sub_215858858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886CA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886CA0);
  _Unwind_Resume(a1);
}

void sub_215858898(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215858BD4();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215858998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2158589C4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886CC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886CC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Four16f>]", qword_267886CA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886CA8, &dword_21572C000);
    __cxa_guard_release(&qword_267886CC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886CE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886CE0))
  {
    size_t v3 = sub_215747D98(qword_267886CA8, "<", 0);
    sub_215747C90(qword_267886CA8, 0, v3, qword_267886CC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886CC8, &dword_21572C000);
    __cxa_guard_release(&qword_267886CE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886D00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886D00))
  {
    sub_215E19DF4((uint64_t)qword_267886CC8, (uint64_t)&xmmword_267886CE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886CE8, &dword_21572C000);
    __cxa_guard_release(&qword_267886D00);
  }
  if (byte_267886CFF < 0)
  {
    long long v2 = xmmword_267886CE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886CE8;
    *(void *)(a1 + 16) = unk_267886CF8;
  }
}

void sub_215858B8C(_Unwind_Exception *a1)
{
}

void sub_215858BA4(_Unwind_Exception *a1)
{
}

void sub_215858BBC(_Unwind_Exception *a1)
{
}

std::string *sub_215858BD4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885F80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885F80))
  {
    return &stru_267885F68;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885F68);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885F68, &dword_21572C000);
  __cxa_guard_release(&qword_267885F80);
  return &stru_267885F68;
}

void sub_215858C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885F80);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885F80);
  _Unwind_Resume(a1);
}

void sub_215858CD8()
{
}

uint64_t sub_215858CF0(uint64_t a1, uint64_t a2)
{
  return sub_215D83E30(a2);
}

__n128 sub_215858CF8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215858D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664160;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_215858D54()
{
  return 16;
}

long long *sub_215858D60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886D20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886D20))
  {
    uint64_t v1 = sub_215858E44();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886D08, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886D18 = *((void *)v1 + 2);
      xmmword_267886D08 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886D08, &dword_21572C000);
    __cxa_guard_release(&qword_267886D20);
  }
  if (byte_267886D1F >= 0) {
    return &xmmword_267886D08;
  }
  else {
    return (long long *)xmmword_267886D08;
  }
}

void sub_215858E2C(_Unwind_Exception *a1)
{
}

long long *sub_215858E44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886D40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886D40))
  {
    return &xmmword_267886D28;
  }
  uint64_t v1 = sub_215858F2C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886D28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886D38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886D28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886D28, &dword_21572C000);
  __cxa_guard_release(&qword_267886D40);
  return &xmmword_267886D28;
}

void sub_215858F14(_Unwind_Exception *a1)
{
}

std::string *sub_215858F2C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886D60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886D60))
  {
    return &stru_267886D48;
  }
  sub_215859154((uint64_t)__p);
  sub_215859028(__p, &stru_267886D48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886D48, &dword_21572C000);
  __cxa_guard_release(&qword_267886D60);
  return &stru_267886D48;
}

void sub_215858FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886D60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886D60);
  _Unwind_Resume(a1);
}

void sub_215859028(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215859364();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215859128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215859154(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886D80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886D80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Four32f>]", qword_267886D68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886D68, &dword_21572C000);
    __cxa_guard_release(&qword_267886D80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886DA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886DA0))
  {
    size_t v3 = sub_215747D98(qword_267886D68, "<", 0);
    sub_215747C90(qword_267886D68, 0, v3, qword_267886D88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886D88, &dword_21572C000);
    __cxa_guard_release(&qword_267886DA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886DC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886DC0))
  {
    sub_215E19DF4((uint64_t)qword_267886D88, (uint64_t)&xmmword_267886DA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886DA8, &dword_21572C000);
    __cxa_guard_release(&qword_267886DC0);
  }
  if (byte_267886DBF < 0)
  {
    long long v2 = xmmword_267886DA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886DA8;
    *(void *)(a1 + 16) = unk_267886DB8;
  }
}

void sub_21585931C(_Unwind_Exception *a1)
{
}

void sub_215859334(_Unwind_Exception *a1)
{
}

void sub_21585934C(_Unwind_Exception *a1)
{
}

std::string *sub_215859364()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885FA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885FA0))
  {
    return &stru_267885F88;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885F88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885F88, &dword_21572C000);
  __cxa_guard_release(&qword_267885FA0);
  return &stru_267885F88;
}

void sub_215859428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885FA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885FA0);
  _Unwind_Resume(a1);
}

void sub_215859468()
{
}

void sub_215859480(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_2158594B0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2158594C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6641E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_21585950C()
{
  return 17;
}

long long *sub_215859518()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886DE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886DE0))
  {
    uint64_t v1 = sub_2158595FC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886DC8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886DD8 = *((void *)v1 + 2);
      xmmword_267886DC8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886DC8, &dword_21572C000);
    __cxa_guard_release(&qword_267886DE0);
  }
  if (byte_267886DDF >= 0) {
    return &xmmword_267886DC8;
  }
  else {
    return (long long *)xmmword_267886DC8;
  }
}

void sub_2158595E4(_Unwind_Exception *a1)
{
}

long long *sub_2158595FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886E00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886E00))
  {
    return &xmmword_267886DE8;
  }
  uint64_t v1 = sub_2158596E4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886DE8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886DF8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886DE8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886DE8, &dword_21572C000);
  __cxa_guard_release(&qword_267886E00);
  return &xmmword_267886DE8;
}

void sub_2158596CC(_Unwind_Exception *a1)
{
}

std::string *sub_2158596E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886E20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886E20))
  {
    return &stru_267886E08;
  }
  sub_21585990C((uint64_t)__p);
  sub_2158597E0(__p, &stru_267886E08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886E08, &dword_21572C000);
  __cxa_guard_release(&qword_267886E20);
  return &stru_267886E08;
}

void sub_2158597A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886E20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886E20);
  _Unwind_Resume(a1);
}

void sub_2158597E0(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215859B1C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158598E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585990C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886E40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886E40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgr8u>]", qword_267886E28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886E28, &dword_21572C000);
    __cxa_guard_release(&qword_267886E40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886E60))
  {
    size_t v3 = sub_215747D98(qword_267886E28, "<", 0);
    sub_215747C90(qword_267886E28, 0, v3, qword_267886E48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886E48, &dword_21572C000);
    __cxa_guard_release(&qword_267886E60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886E80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886E80))
  {
    sub_215E19DF4((uint64_t)qword_267886E48, (uint64_t)&xmmword_267886E68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886E68, &dword_21572C000);
    __cxa_guard_release(&qword_267886E80);
  }
  if (byte_267886E7F < 0)
  {
    long long v2 = xmmword_267886E68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886E68;
    *(void *)(a1 + 16) = unk_267886E78;
  }
}

void sub_215859AD4(_Unwind_Exception *a1)
{
}

void sub_215859AEC(_Unwind_Exception *a1)
{
}

void sub_215859B04(_Unwind_Exception *a1)
{
}

std::string *sub_215859B1C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885FC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885FC0))
  {
    return &stru_267885FA8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885FA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885FA8, &dword_21572C000);
  __cxa_guard_release(&qword_267885FC0);
  return &stru_267885FA8;
}

void sub_215859BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885FC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885FC0);
  _Unwind_Resume(a1);
}

void sub_215859C20()
{
}

void sub_215859C38(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215859C68(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215859C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664260;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215859CC4()
{
  return 18;
}

long long *sub_215859CD0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886EA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886EA0))
  {
    uint64_t v1 = sub_215859DB4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886E88, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886E98 = *((void *)v1 + 2);
      xmmword_267886E88 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886E88, &dword_21572C000);
    __cxa_guard_release(&qword_267886EA0);
  }
  if (byte_267886E9F >= 0) {
    return &xmmword_267886E88;
  }
  else {
    return (long long *)xmmword_267886E88;
  }
}

void sub_215859D9C(_Unwind_Exception *a1)
{
}

long long *sub_215859DB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886EC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886EC0))
  {
    return &xmmword_267886EA8;
  }
  uint64_t v1 = sub_215859E9C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886EA8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886EB8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886EA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886EA8, &dword_21572C000);
  __cxa_guard_release(&qword_267886EC0);
  return &xmmword_267886EA8;
}

void sub_215859E84(_Unwind_Exception *a1)
{
}

std::string *sub_215859E9C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886EE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886EE0))
  {
    return &stru_267886EC8;
  }
  sub_21585A0C4((uint64_t)__p);
  sub_215859F98(__p, &stru_267886EC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886EC8, &dword_21572C000);
  __cxa_guard_release(&qword_267886EE0);
  return &stru_267886EC8;
}

void sub_215859F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886EE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886EE0);
  _Unwind_Resume(a1);
}

void sub_215859F98(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585A2D4();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585A098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585A0C4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886F00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886F00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgr16u>]", qword_267886EE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886EE8, &dword_21572C000);
    __cxa_guard_release(&qword_267886F00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886F20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886F20))
  {
    size_t v3 = sub_215747D98(qword_267886EE8, "<", 0);
    sub_215747C90(qword_267886EE8, 0, v3, qword_267886F08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886F08, &dword_21572C000);
    __cxa_guard_release(&qword_267886F20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886F40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886F40))
  {
    sub_215E19DF4((uint64_t)qword_267886F08, (uint64_t)&xmmword_267886F28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886F28, &dword_21572C000);
    __cxa_guard_release(&qword_267886F40);
  }
  if (byte_267886F3F < 0)
  {
    long long v2 = xmmword_267886F28;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886F28;
    *(void *)(a1 + 16) = unk_267886F38;
  }
}

void sub_21585A28C(_Unwind_Exception *a1)
{
}

void sub_21585A2A4(_Unwind_Exception *a1)
{
}

void sub_21585A2BC(_Unwind_Exception *a1)
{
}

std::string *sub_21585A2D4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885FE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885FE0))
  {
    return &stru_267885FC8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885FC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885FC8, &dword_21572C000);
  __cxa_guard_release(&qword_267885FE0);
  return &stru_267885FC8;
}

void sub_21585A398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885FE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885FE0);
  _Unwind_Resume(a1);
}

void sub_21585A3D8()
{
}

void sub_21585A3F0(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585A420(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585A434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6642E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_21585A47C()
{
  return 19;
}

long long *sub_21585A488()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886F60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886F60))
  {
    uint64_t v1 = sub_21585A56C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267886F48, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267886F58 = *((void *)v1 + 2);
      xmmword_267886F48 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886F48, &dword_21572C000);
    __cxa_guard_release(&qword_267886F60);
  }
  if (byte_267886F5F >= 0) {
    return &xmmword_267886F48;
  }
  else {
    return (long long *)xmmword_267886F48;
  }
}

void sub_21585A554(_Unwind_Exception *a1)
{
}

long long *sub_21585A56C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886F80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886F80))
  {
    return &xmmword_267886F68;
  }
  uint64_t v1 = sub_21585A654();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267886F68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267886F78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267886F68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886F68, &dword_21572C000);
  __cxa_guard_release(&qword_267886F80);
  return &xmmword_267886F68;
}

void sub_21585A63C(_Unwind_Exception *a1)
{
}

std::string *sub_21585A654()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886FA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886FA0))
  {
    return &stru_267886F88;
  }
  sub_21585A87C((uint64_t)__p);
  sub_21585A750(__p, &stru_267886F88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886F88, &dword_21572C000);
  __cxa_guard_release(&qword_267886FA0);
  return &stru_267886F88;
}

void sub_21585A710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886FA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886FA0);
  _Unwind_Resume(a1);
}

void sub_21585A750(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585AA8C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585A850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585A87C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886FC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886FC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgr16f>]", qword_267886FA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886FA8, &dword_21572C000);
    __cxa_guard_release(&qword_267886FC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886FE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267886FE0))
  {
    size_t v3 = sub_215747D98(qword_267886FA8, "<", 0);
    sub_215747C90(qword_267886FA8, 0, v3, qword_267886FC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267886FC8, &dword_21572C000);
    __cxa_guard_release(&qword_267886FE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887000, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887000))
  {
    sub_215E19DF4((uint64_t)qword_267886FC8, (uint64_t)&xmmword_267886FE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267886FE8, &dword_21572C000);
    __cxa_guard_release(&qword_267887000);
  }
  if (byte_267886FFF < 0)
  {
    long long v2 = xmmword_267886FE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267886FE8;
    *(void *)(a1 + 16) = unk_267886FF8;
  }
}

void sub_21585AA44(_Unwind_Exception *a1)
{
}

void sub_21585AA5C(_Unwind_Exception *a1)
{
}

void sub_21585AA74(_Unwind_Exception *a1)
{
}

std::string *sub_21585AA8C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886000, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886000))
  {
    return &stru_267885FE8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885FE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885FE8, &dword_21572C000);
  __cxa_guard_release(&qword_267886000);
  return &stru_267885FE8;
}

void sub_21585AB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886000);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886000);
  _Unwind_Resume(a1);
}

void sub_21585AB90()
{
}

uint64_t sub_21585ABA8(uint64_t a1, uint64_t a2)
{
  return sub_215D863C0(a2);
}

__n128 sub_21585ABB0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585ABC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664360;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_21585AC0C()
{
  return 20;
}

long long *sub_21585AC18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887020, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887020))
  {
    uint64_t v1 = sub_21585ACFC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887008, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887018 = *((void *)v1 + 2);
      xmmword_267887008 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887008, &dword_21572C000);
    __cxa_guard_release(&qword_267887020);
  }
  if (byte_26788701F >= 0) {
    return &xmmword_267887008;
  }
  else {
    return (long long *)xmmword_267887008;
  }
}

void sub_21585ACE4(_Unwind_Exception *a1)
{
}

long long *sub_21585ACFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887040, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887040))
  {
    return &xmmword_267887028;
  }
  uint64_t v1 = sub_21585ADE4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887028, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887038 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887028 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887028, &dword_21572C000);
  __cxa_guard_release(&qword_267887040);
  return &xmmword_267887028;
}

void sub_21585ADCC(_Unwind_Exception *a1)
{
}

std::string *sub_21585ADE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887060))
  {
    return &stru_267887048;
  }
  sub_21585B00C((uint64_t)__p);
  sub_21585AEE0(__p, &stru_267887048);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887048, &dword_21572C000);
  __cxa_guard_release(&qword_267887060);
  return &stru_267887048;
}

void sub_21585AEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887060);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887060);
  _Unwind_Resume(a1);
}

void sub_21585AEE0(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585B21C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585AFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585B00C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887080))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgr32f>]", qword_267887068);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887068, &dword_21572C000);
    __cxa_guard_release(&qword_267887080);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678870A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678870A0))
  {
    size_t v3 = sub_215747D98(qword_267887068, "<", 0);
    sub_215747C90(qword_267887068, 0, v3, qword_267887088);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887088, &dword_21572C000);
    __cxa_guard_release(&qword_2678870A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678870C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678870C0))
  {
    sub_215E19DF4((uint64_t)qword_267887088, (uint64_t)&xmmword_2678870A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678870A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678870C0);
  }
  if (byte_2678870BF < 0)
  {
    long long v2 = xmmword_2678870A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678870A8;
    *(void *)(a1 + 16) = unk_2678870B8;
  }
}

void sub_21585B1D4(_Unwind_Exception *a1)
{
}

void sub_21585B1EC(_Unwind_Exception *a1)
{
}

void sub_21585B204(_Unwind_Exception *a1)
{
}

std::string *sub_21585B21C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886020, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886020))
  {
    return &stru_267886008;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886008);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886008, &dword_21572C000);
  __cxa_guard_release(&qword_267886020);
  return &stru_267886008;
}

void sub_21585B2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886020);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886020);
  _Unwind_Resume(a1);
}

void sub_21585B320()
{
}

void sub_21585B338(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585B368(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585B37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6643E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_21585B3C4()
{
  return 21;
}

long long *sub_21585B3D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678870E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678870E0))
  {
    uint64_t v1 = sub_21585B4B4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678870C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678870D8 = *((void *)v1 + 2);
      xmmword_2678870C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678870C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678870E0);
  }
  if (byte_2678870DF >= 0) {
    return &xmmword_2678870C8;
  }
  else {
    return (long long *)xmmword_2678870C8;
  }
}

void sub_21585B49C(_Unwind_Exception *a1)
{
}

long long *sub_21585B4B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887100, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887100))
  {
    return &xmmword_2678870E8;
  }
  uint64_t v1 = sub_21585B59C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678870E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678870F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678870E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678870E8, &dword_21572C000);
  __cxa_guard_release(&qword_267887100);
  return &xmmword_2678870E8;
}

void sub_21585B584(_Unwind_Exception *a1)
{
}

std::string *sub_21585B59C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887120, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887120))
  {
    return &stru_267887108;
  }
  sub_21585B7C4((uint64_t)__p);
  sub_21585B698(__p, &stru_267887108);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887108, &dword_21572C000);
  __cxa_guard_release(&qword_267887120);
  return &stru_267887108;
}

void sub_21585B658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887120);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887120);
  _Unwind_Resume(a1);
}

void sub_21585B698(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215810894();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585B798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585B7C4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887140))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb8u>]", qword_267887128);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887128, &dword_21572C000);
    __cxa_guard_release(&qword_267887140);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887160))
  {
    size_t v3 = sub_215747D98(qword_267887128, "<", 0);
    sub_215747C90(qword_267887128, 0, v3, qword_267887148);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887148, &dword_21572C000);
    __cxa_guard_release(&qword_267887160);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887180, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887180))
  {
    sub_215E19DF4((uint64_t)qword_267887148, (uint64_t)&xmmword_267887168);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887168, &dword_21572C000);
    __cxa_guard_release(&qword_267887180);
  }
  if (byte_26788717F < 0)
  {
    long long v2 = xmmword_267887168;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887168;
    *(void *)(a1 + 16) = unk_267887178;
  }
}

void sub_21585B98C(_Unwind_Exception *a1)
{
}

void sub_21585B9A4(_Unwind_Exception *a1)
{
}

void sub_21585B9BC(_Unwind_Exception *a1)
{
}

void sub_21585B9D4()
{
}

void sub_21585B9EC(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585BA1C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585BA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664460;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_21585BA78()
{
  return 22;
}

long long *sub_21585BA84()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678871A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678871A0))
  {
    uint64_t v1 = sub_21585BB68();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887188, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887198 = *((void *)v1 + 2);
      xmmword_267887188 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887188, &dword_21572C000);
    __cxa_guard_release(&qword_2678871A0);
  }
  if (byte_26788719F >= 0) {
    return &xmmword_267887188;
  }
  else {
    return (long long *)xmmword_267887188;
  }
}

void sub_21585BB50(_Unwind_Exception *a1)
{
}

long long *sub_21585BB68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678871C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678871C0))
  {
    return &xmmword_2678871A8;
  }
  uint64_t v1 = sub_21585BC50();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678871A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678871B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678871A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678871A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678871C0);
  return &xmmword_2678871A8;
}

void sub_21585BC38(_Unwind_Exception *a1)
{
}

std::string *sub_21585BC50()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678871E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678871E0))
  {
    return &stru_2678871C8;
  }
  sub_21585BE78((uint64_t)__p);
  sub_21585BD4C(__p, &stru_2678871C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678871C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678871E0);
  return &stru_2678871C8;
}

void sub_21585BD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678871E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678871E0);
  _Unwind_Resume(a1);
}

void sub_21585BD4C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215811ED0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585BE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585BE78(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887200, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887200))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb16u>]", qword_2678871E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678871E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887200);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887220, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887220))
  {
    size_t v3 = sub_215747D98(qword_2678871E8, "<", 0);
    sub_215747C90(qword_2678871E8, 0, v3, qword_267887208);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887208, &dword_21572C000);
    __cxa_guard_release(&qword_267887220);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887240, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887240))
  {
    sub_215E19DF4((uint64_t)qword_267887208, (uint64_t)&xmmword_267887228);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887228, &dword_21572C000);
    __cxa_guard_release(&qword_267887240);
  }
  if (byte_26788723F < 0)
  {
    long long v2 = xmmword_267887228;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887228;
    *(void *)(a1 + 16) = unk_267887238;
  }
}

void sub_21585C040(_Unwind_Exception *a1)
{
}

void sub_21585C058(_Unwind_Exception *a1)
{
}

void sub_21585C070(_Unwind_Exception *a1)
{
}

void sub_21585C088()
{
}

void sub_21585C0A0(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585C0D0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585C0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6644E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_21585C12C()
{
  return 23;
}

long long *sub_21585C138()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887260, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887260))
  {
    uint64_t v1 = sub_21585C21C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887248, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887258 = *((void *)v1 + 2);
      xmmword_267887248 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887248, &dword_21572C000);
    __cxa_guard_release(&qword_267887260);
  }
  if (byte_26788725F >= 0) {
    return &xmmword_267887248;
  }
  else {
    return (long long *)xmmword_267887248;
  }
}

void sub_21585C204(_Unwind_Exception *a1)
{
}

long long *sub_21585C21C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887280, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887280))
  {
    return &xmmword_267887268;
  }
  uint64_t v1 = sub_21585C304();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887268, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887278 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887268 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887268, &dword_21572C000);
  __cxa_guard_release(&qword_267887280);
  return &xmmword_267887268;
}

void sub_21585C2EC(_Unwind_Exception *a1)
{
}

std::string *sub_21585C304()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678872A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678872A0))
  {
    return &stru_267887288;
  }
  sub_21585C52C((uint64_t)__p);
  sub_21585C400(__p, &stru_267887288);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887288, &dword_21572C000);
  __cxa_guard_release(&qword_2678872A0);
  return &stru_267887288;
}

void sub_21585C3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678872A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678872A0);
  _Unwind_Resume(a1);
}

void sub_21585C400(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585C73C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585C500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585C52C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678872C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678872C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb16f>]", qword_2678872A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678872A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678872C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678872E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678872E0))
  {
    size_t v3 = sub_215747D98(qword_2678872A8, "<", 0);
    sub_215747C90(qword_2678872A8, 0, v3, qword_2678872C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678872C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678872E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887300, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887300))
  {
    sub_215E19DF4((uint64_t)qword_2678872C8, (uint64_t)&xmmword_2678872E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678872E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887300);
  }
  if (byte_2678872FF < 0)
  {
    long long v2 = xmmword_2678872E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678872E8;
    *(void *)(a1 + 16) = unk_2678872F8;
  }
}

void sub_21585C6F4(_Unwind_Exception *a1)
{
}

void sub_21585C70C(_Unwind_Exception *a1)
{
}

void sub_21585C724(_Unwind_Exception *a1)
{
}

std::string *sub_21585C73C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886040, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886040))
  {
    return &stru_267886028;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886028);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886028, &dword_21572C000);
  __cxa_guard_release(&qword_267886040);
  return &stru_267886028;
}

void sub_21585C800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886040);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886040);
  _Unwind_Resume(a1);
}

void sub_21585C840()
{
}

uint64_t sub_21585C858(uint64_t a1, uint64_t a2)
{
  return sub_215D88A5C(a2);
}

__n128 sub_21585C860(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585C874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664560;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_21585C8BC()
{
  return 24;
}

long long *sub_21585C8C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887320, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887320))
  {
    uint64_t v1 = sub_21585C9AC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887308, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887318 = *((void *)v1 + 2);
      xmmword_267887308 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887308, &dword_21572C000);
    __cxa_guard_release(&qword_267887320);
  }
  if (byte_26788731F >= 0) {
    return &xmmword_267887308;
  }
  else {
    return (long long *)xmmword_267887308;
  }
}

void sub_21585C994(_Unwind_Exception *a1)
{
}

long long *sub_21585C9AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887340, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887340))
  {
    return &xmmword_267887328;
  }
  uint64_t v1 = sub_21585CA94();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887328, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887338 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887328 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887328, &dword_21572C000);
  __cxa_guard_release(&qword_267887340);
  return &xmmword_267887328;
}

void sub_21585CA7C(_Unwind_Exception *a1)
{
}

std::string *sub_21585CA94()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887360, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887360))
  {
    return &stru_267887348;
  }
  sub_21585CCBC((uint64_t)__p);
  sub_21585CB90(__p, &stru_267887348);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887348, &dword_21572C000);
  __cxa_guard_release(&qword_267887360);
  return &stru_267887348;
}

void sub_21585CB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887360);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887360);
  _Unwind_Resume(a1);
}

void sub_21585CB90(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585CECC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585CC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585CCBC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887380, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887380))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb32f>]", qword_267887368);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887368, &dword_21572C000);
    __cxa_guard_release(&qword_267887380);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678873A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678873A0))
  {
    size_t v3 = sub_215747D98(qword_267887368, "<", 0);
    sub_215747C90(qword_267887368, 0, v3, qword_267887388);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887388, &dword_21572C000);
    __cxa_guard_release(&qword_2678873A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678873C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678873C0))
  {
    sub_215E19DF4((uint64_t)qword_267887388, (uint64_t)&xmmword_2678873A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678873A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678873C0);
  }
  if (byte_2678873BF < 0)
  {
    long long v2 = xmmword_2678873A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678873A8;
    *(void *)(a1 + 16) = unk_2678873B8;
  }
}

void sub_21585CE84(_Unwind_Exception *a1)
{
}

void sub_21585CE9C(_Unwind_Exception *a1)
{
}

void sub_21585CEB4(_Unwind_Exception *a1)
{
}

std::string *sub_21585CECC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886060))
  {
    return &stru_267886048;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886048);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886048, &dword_21572C000);
  __cxa_guard_release(&qword_267886060);
  return &stru_267886048;
}

void sub_21585CF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886060);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886060);
  _Unwind_Resume(a1);
}

void sub_21585CFD0()
{
}

void sub_21585CFE8(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585D018(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585D02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6645E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_21585D074()
{
  return 25;
}

long long *sub_21585D080()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678873E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678873E0))
  {
    uint64_t v1 = sub_21585D164();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678873C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678873D8 = *((void *)v1 + 2);
      xmmword_2678873C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678873C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678873E0);
  }
  if (byte_2678873DF >= 0) {
    return &xmmword_2678873C8;
  }
  else {
    return (long long *)xmmword_2678873C8;
  }
}

void sub_21585D14C(_Unwind_Exception *a1)
{
}

long long *sub_21585D164()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887400, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887400))
  {
    return &xmmword_2678873E8;
  }
  uint64_t v1 = sub_21585D24C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678873E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678873F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678873E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678873E8, &dword_21572C000);
  __cxa_guard_release(&qword_267887400);
  return &xmmword_2678873E8;
}

void sub_21585D234(_Unwind_Exception *a1)
{
}

std::string *sub_21585D24C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887420, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887420))
  {
    return &stru_267887408;
  }
  sub_21585D474((uint64_t)__p);
  sub_21585D348(__p, &stru_267887408);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887408, &dword_21572C000);
  __cxa_guard_release(&qword_267887420);
  return &stru_267887408;
}

void sub_21585D308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887420);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887420);
  _Unwind_Resume(a1);
}

void sub_21585D348(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215813510();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585D448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585D474(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887440, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887440))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgra8u>]", qword_267887428);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887428, &dword_21572C000);
    __cxa_guard_release(&qword_267887440);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887460, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887460))
  {
    size_t v3 = sub_215747D98(qword_267887428, "<", 0);
    sub_215747C90(qword_267887428, 0, v3, qword_267887448);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887448, &dword_21572C000);
    __cxa_guard_release(&qword_267887460);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887480))
  {
    sub_215E19DF4((uint64_t)qword_267887448, (uint64_t)&xmmword_267887468);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887468, &dword_21572C000);
    __cxa_guard_release(&qword_267887480);
  }
  if (byte_26788747F < 0)
  {
    long long v2 = xmmword_267887468;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887468;
    *(void *)(a1 + 16) = unk_267887478;
  }
}

void sub_21585D63C(_Unwind_Exception *a1)
{
}

void sub_21585D654(_Unwind_Exception *a1)
{
}

void sub_21585D66C(_Unwind_Exception *a1)
{
}

void sub_21585D684()
{
}

void sub_21585D69C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585D6CC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585D6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664660;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_21585D728()
{
  return 26;
}

long long *sub_21585D734()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678874A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678874A0))
  {
    uint64_t v1 = sub_21585D818();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887488, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887498 = *((void *)v1 + 2);
      xmmword_267887488 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887488, &dword_21572C000);
    __cxa_guard_release(&qword_2678874A0);
  }
  if (byte_26788749F >= 0) {
    return &xmmword_267887488;
  }
  else {
    return (long long *)xmmword_267887488;
  }
}

void sub_21585D800(_Unwind_Exception *a1)
{
}

long long *sub_21585D818()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678874C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678874C0))
  {
    return &xmmword_2678874A8;
  }
  uint64_t v1 = sub_21585D900();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678874A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678874B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678874A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678874A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678874C0);
  return &xmmword_2678874A8;
}

void sub_21585D8E8(_Unwind_Exception *a1)
{
}

std::string *sub_21585D900()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678874E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678874E0))
  {
    return &stru_2678874C8;
  }
  sub_21585DB28((uint64_t)__p);
  sub_21585D9FC(__p, &stru_2678874C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678874C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678874E0);
  return &stru_2678874C8;
}

void sub_21585D9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678874E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678874E0);
  _Unwind_Resume(a1);
}

void sub_21585D9FC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585DD38();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585DAFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585DB28(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887500, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887500))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgra16u>]", qword_2678874E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678874E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887500);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887520, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887520))
  {
    size_t v3 = sub_215747D98(qword_2678874E8, "<", 0);
    sub_215747C90(qword_2678874E8, 0, v3, qword_267887508);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887508, &dword_21572C000);
    __cxa_guard_release(&qword_267887520);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887540, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887540))
  {
    sub_215E19DF4((uint64_t)qword_267887508, (uint64_t)&xmmword_267887528);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887528, &dword_21572C000);
    __cxa_guard_release(&qword_267887540);
  }
  if (byte_26788753F < 0)
  {
    long long v2 = xmmword_267887528;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887528;
    *(void *)(a1 + 16) = unk_267887538;
  }
}

void sub_21585DCF0(_Unwind_Exception *a1)
{
}

void sub_21585DD08(_Unwind_Exception *a1)
{
}

void sub_21585DD20(_Unwind_Exception *a1)
{
}

std::string *sub_21585DD38()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886080, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886080))
  {
    return &stru_267886068;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886068);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886068, &dword_21572C000);
  __cxa_guard_release(&qword_267886080);
  return &stru_267886068;
}

void sub_21585DDFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886080);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886080);
  _Unwind_Resume(a1);
}

void sub_21585DE3C()
{
}

void sub_21585DE54(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585DE84(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585DE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6646E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_21585DEE0()
{
  return 27;
}

long long *sub_21585DEEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887560, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887560))
  {
    uint64_t v1 = sub_21585DFD0();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887548, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887558 = *((void *)v1 + 2);
      xmmword_267887548 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887548, &dword_21572C000);
    __cxa_guard_release(&qword_267887560);
  }
  if (byte_26788755F >= 0) {
    return &xmmword_267887548;
  }
  else {
    return (long long *)xmmword_267887548;
  }
}

void sub_21585DFB8(_Unwind_Exception *a1)
{
}

long long *sub_21585DFD0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887580, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887580))
  {
    return &xmmword_267887568;
  }
  uint64_t v1 = sub_21585E0B8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887568, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887578 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887568 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887568, &dword_21572C000);
  __cxa_guard_release(&qword_267887580);
  return &xmmword_267887568;
}

void sub_21585E0A0(_Unwind_Exception *a1)
{
}

std::string *sub_21585E0B8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678875A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678875A0))
  {
    return &stru_267887588;
  }
  sub_21585E2E0((uint64_t)__p);
  sub_21585E1B4(__p, &stru_267887588);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887588, &dword_21572C000);
  __cxa_guard_release(&qword_2678875A0);
  return &stru_267887588;
}

void sub_21585E174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678875A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678875A0);
  _Unwind_Resume(a1);
}

void sub_21585E1B4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585E4F0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585E2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585E2E0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678875C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678875C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgra16f>]", qword_2678875A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678875A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678875C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678875E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678875E0))
  {
    size_t v3 = sub_215747D98(qword_2678875A8, "<", 0);
    sub_215747C90(qword_2678875A8, 0, v3, qword_2678875C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678875C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678875E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887600, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887600))
  {
    sub_215E19DF4((uint64_t)qword_2678875C8, (uint64_t)&xmmword_2678875E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678875E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887600);
  }
  if (byte_2678875FF < 0)
  {
    long long v2 = xmmword_2678875E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678875E8;
    *(void *)(a1 + 16) = unk_2678875F8;
  }
}

void sub_21585E4A8(_Unwind_Exception *a1)
{
}

void sub_21585E4C0(_Unwind_Exception *a1)
{
}

void sub_21585E4D8(_Unwind_Exception *a1)
{
}

std::string *sub_21585E4F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678860A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678860A0))
  {
    return &stru_267886088;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886088);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886088, &dword_21572C000);
  __cxa_guard_release(&qword_2678860A0);
  return &stru_267886088;
}

void sub_21585E5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678860A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678860A0);
  _Unwind_Resume(a1);
}

void sub_21585E5F4()
{
}

uint64_t sub_21585E60C(uint64_t a1, uint64_t a2)
{
  return sub_215D8AF08(a2);
}

__n128 sub_21585E614(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585E628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664760;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_21585E670()
{
  return 28;
}

long long *sub_21585E67C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887620, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887620))
  {
    uint64_t v1 = sub_21585E760();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887608, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887618 = *((void *)v1 + 2);
      xmmword_267887608 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887608, &dword_21572C000);
    __cxa_guard_release(&qword_267887620);
  }
  if (byte_26788761F >= 0) {
    return &xmmword_267887608;
  }
  else {
    return (long long *)xmmword_267887608;
  }
}

void sub_21585E748(_Unwind_Exception *a1)
{
}

long long *sub_21585E760()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887640, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887640))
  {
    return &xmmword_267887628;
  }
  uint64_t v1 = sub_21585E848();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887628, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887638 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887628 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887628, &dword_21572C000);
  __cxa_guard_release(&qword_267887640);
  return &xmmword_267887628;
}

void sub_21585E830(_Unwind_Exception *a1)
{
}

std::string *sub_21585E848()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887660, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887660))
  {
    return &stru_267887648;
  }
  sub_21585EA70((uint64_t)__p);
  sub_21585E944(__p, &stru_267887648);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887648, &dword_21572C000);
  __cxa_guard_release(&qword_267887660);
  return &stru_267887648;
}

void sub_21585E904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887660);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887660);
  _Unwind_Resume(a1);
}

void sub_21585E944(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585EC80();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585EA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585EA70(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887680, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887680))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgra32f>]", qword_267887668);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887668, &dword_21572C000);
    __cxa_guard_release(&qword_267887680);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678876A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678876A0))
  {
    size_t v3 = sub_215747D98(qword_267887668, "<", 0);
    sub_215747C90(qword_267887668, 0, v3, qword_267887688);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887688, &dword_21572C000);
    __cxa_guard_release(&qword_2678876A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678876C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678876C0))
  {
    sub_215E19DF4((uint64_t)qword_267887688, (uint64_t)&xmmword_2678876A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678876A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678876C0);
  }
  if (byte_2678876BF < 0)
  {
    long long v2 = xmmword_2678876A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678876A8;
    *(void *)(a1 + 16) = unk_2678876B8;
  }
}

void sub_21585EC38(_Unwind_Exception *a1)
{
}

void sub_21585EC50(_Unwind_Exception *a1)
{
}

void sub_21585EC68(_Unwind_Exception *a1)
{
}

std::string *sub_21585EC80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678860C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678860C0))
  {
    return &stru_2678860A8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678860A8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678860A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678860C0);
  return &stru_2678860A8;
}

void sub_21585ED44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678860C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678860C0);
  _Unwind_Resume(a1);
}

void sub_21585ED84()
{
}

void sub_21585ED9C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585EDCC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585EDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6647E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_21585EE28()
{
  return 29;
}

long long *sub_21585EE34()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678876E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678876E0))
  {
    uint64_t v1 = sub_21585EF18();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678876C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678876D8 = *((void *)v1 + 2);
      xmmword_2678876C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678876C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678876E0);
  }
  if (byte_2678876DF >= 0) {
    return &xmmword_2678876C8;
  }
  else {
    return (long long *)xmmword_2678876C8;
  }
}

void sub_21585EF00(_Unwind_Exception *a1)
{
}

long long *sub_21585EF18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887700, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887700))
  {
    return &xmmword_2678876E8;
  }
  uint64_t v1 = sub_21585F000();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678876E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678876F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678876E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678876E8, &dword_21572C000);
  __cxa_guard_release(&qword_267887700);
  return &xmmword_2678876E8;
}

void sub_21585EFE8(_Unwind_Exception *a1)
{
}

std::string *sub_21585F000()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887720, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887720))
  {
    return &stru_267887708;
  }
  sub_21585F228((uint64_t)__p);
  sub_21585F0FC(__p, &stru_267887708);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887708, &dword_21572C000);
  __cxa_guard_release(&qword_267887720);
  return &stru_267887708;
}

void sub_21585F0BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887720);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887720);
  _Unwind_Resume(a1);
}

void sub_21585F0FC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585F438();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585F1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585F228(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887740, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887740))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba8u>]", qword_267887728);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887728, &dword_21572C000);
    __cxa_guard_release(&qword_267887740);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887760, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887760))
  {
    size_t v3 = sub_215747D98(qword_267887728, "<", 0);
    sub_215747C90(qword_267887728, 0, v3, qword_267887748);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887748, &dword_21572C000);
    __cxa_guard_release(&qword_267887760);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887780))
  {
    sub_215E19DF4((uint64_t)qword_267887748, (uint64_t)&xmmword_267887768);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887768, &dword_21572C000);
    __cxa_guard_release(&qword_267887780);
  }
  if (byte_26788777F < 0)
  {
    long long v2 = xmmword_267887768;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887768;
    *(void *)(a1 + 16) = unk_267887778;
  }
}

void sub_21585F3F0(_Unwind_Exception *a1)
{
}

void sub_21585F408(_Unwind_Exception *a1)
{
}

void sub_21585F420(_Unwind_Exception *a1)
{
}

std::string *sub_21585F438()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678860E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678860E0))
  {
    return &stru_2678860C8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678860C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678860C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678860E0);
  return &stru_2678860C8;
}

void sub_21585F4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678860E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678860E0);
  _Unwind_Resume(a1);
}

void sub_21585F53C()
{
}

void sub_21585F554(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585F584(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585F598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664860;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_21585F5E0()
{
  return 30;
}

long long *sub_21585F5EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678877A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678877A0))
  {
    uint64_t v1 = sub_21585F6D0();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887788, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887798 = *((void *)v1 + 2);
      xmmword_267887788 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887788, &dword_21572C000);
    __cxa_guard_release(&qword_2678877A0);
  }
  if (byte_26788779F >= 0) {
    return &xmmword_267887788;
  }
  else {
    return (long long *)xmmword_267887788;
  }
}

void sub_21585F6B8(_Unwind_Exception *a1)
{
}

long long *sub_21585F6D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678877C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678877C0))
  {
    return &xmmword_2678877A8;
  }
  uint64_t v1 = sub_21585F7B8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678877A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678877B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678877A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678877A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678877C0);
  return &xmmword_2678877A8;
}

void sub_21585F7A0(_Unwind_Exception *a1)
{
}

std::string *sub_21585F7B8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678877E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678877E0))
  {
    return &stru_2678877C8;
  }
  sub_21585F9E0((uint64_t)__p);
  sub_21585F8B4(__p, &stru_2678877C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678877C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678877E0);
  return &stru_2678877C8;
}

void sub_21585F874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678877E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678877E0);
  _Unwind_Resume(a1);
}

void sub_21585F8B4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21585FBF0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21585F9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21585F9E0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887800, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887800))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba16u>]", qword_2678877E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678877E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887800);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887820, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887820))
  {
    size_t v3 = sub_215747D98(qword_2678877E8, "<", 0);
    sub_215747C90(qword_2678877E8, 0, v3, qword_267887808);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887808, &dword_21572C000);
    __cxa_guard_release(&qword_267887820);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887840))
  {
    sub_215E19DF4((uint64_t)qword_267887808, (uint64_t)&xmmword_267887828);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887828, &dword_21572C000);
    __cxa_guard_release(&qword_267887840);
  }
  if (byte_26788783F < 0)
  {
    long long v2 = xmmword_267887828;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887828;
    *(void *)(a1 + 16) = unk_267887838;
  }
}

void sub_21585FBA8(_Unwind_Exception *a1)
{
}

void sub_21585FBC0(_Unwind_Exception *a1)
{
}

void sub_21585FBD8(_Unwind_Exception *a1)
{
}

std::string *sub_21585FBF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886100, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886100))
  {
    return &stru_2678860E8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678860E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678860E8, &dword_21572C000);
  __cxa_guard_release(&qword_267886100);
  return &stru_2678860E8;
}

void sub_21585FCB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886100);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886100);
  _Unwind_Resume(a1);
}

void sub_21585FCF4()
{
}

void sub_21585FD0C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21585FD3C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_21585FD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6648E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_21585FD98()
{
  return 31;
}

long long *sub_21585FDA4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887860))
  {
    uint64_t v1 = sub_21585FE88();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887848, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887858 = *((void *)v1 + 2);
      xmmword_267887848 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887848, &dword_21572C000);
    __cxa_guard_release(&qword_267887860);
  }
  if (byte_26788785F >= 0) {
    return &xmmword_267887848;
  }
  else {
    return (long long *)xmmword_267887848;
  }
}

void sub_21585FE70(_Unwind_Exception *a1)
{
}

long long *sub_21585FE88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887880, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887880))
  {
    return &xmmword_267887868;
  }
  uint64_t v1 = sub_21585FF70();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887868, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887878 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887868 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887868, &dword_21572C000);
  __cxa_guard_release(&qword_267887880);
  return &xmmword_267887868;
}

void sub_21585FF58(_Unwind_Exception *a1)
{
}

std::string *sub_21585FF70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678878A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678878A0))
  {
    return &stru_267887888;
  }
  sub_215860198((uint64_t)__p);
  sub_21586006C(__p, &stru_267887888);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887888, &dword_21572C000);
  __cxa_guard_release(&qword_2678878A0);
  return &stru_267887888;
}

void sub_21586002C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678878A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678878A0);
  _Unwind_Resume(a1);
}

void sub_21586006C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215814B4C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21586016C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215860198(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678878C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678878C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba16f>]", qword_2678878A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678878A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678878C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678878E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678878E0))
  {
    size_t v3 = sub_215747D98(qword_2678878A8, "<", 0);
    sub_215747C90(qword_2678878A8, 0, v3, qword_2678878C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678878C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678878E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887900))
  {
    sub_215E19DF4((uint64_t)qword_2678878C8, (uint64_t)&xmmword_2678878E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678878E8, &dword_21572C000);
    __cxa_guard_release(&qword_267887900);
  }
  if (byte_2678878FF < 0)
  {
    long long v2 = xmmword_2678878E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678878E8;
    *(void *)(a1 + 16) = unk_2678878F8;
  }
}

void sub_215860360(_Unwind_Exception *a1)
{
}

void sub_215860378(_Unwind_Exception *a1)
{
}

void sub_215860390(_Unwind_Exception *a1)
{
}

void sub_2158603A8()
{
}

uint64_t sub_2158603C0(uint64_t a1, uint64_t a2)
{
  return sub_215D8D2A8(a2);
}

__n128 sub_2158603C8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2158603DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664960;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_215860424()
{
  return 32;
}

long long *sub_215860430()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887920, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887920))
  {
    uint64_t v1 = sub_215860514();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887908, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887918 = *((void *)v1 + 2);
      xmmword_267887908 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887908, &dword_21572C000);
    __cxa_guard_release(&qword_267887920);
  }
  if (byte_26788791F >= 0) {
    return &xmmword_267887908;
  }
  else {
    return (long long *)xmmword_267887908;
  }
}

void sub_2158604FC(_Unwind_Exception *a1)
{
}

long long *sub_215860514()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887940, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887940))
  {
    return &xmmword_267887928;
  }
  uint64_t v1 = sub_2158605FC();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887928, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887938 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887928 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887928, &dword_21572C000);
  __cxa_guard_release(&qword_267887940);
  return &xmmword_267887928;
}

void sub_2158605E4(_Unwind_Exception *a1)
{
}

std::string *sub_2158605FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887960, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887960))
  {
    return &stru_267887948;
  }
  sub_215860824((uint64_t)__p);
  sub_2158606F8(__p, &stru_267887948);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887948, &dword_21572C000);
  __cxa_guard_release(&qword_267887960);
  return &stru_267887948;
}

void sub_2158606B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887960);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887960);
  _Unwind_Resume(a1);
}

void sub_2158606F8(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_21581618C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158607F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215860824(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887980))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba32f>]", qword_267887968);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887968, &dword_21572C000);
    __cxa_guard_release(&qword_267887980);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678879A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678879A0))
  {
    size_t v3 = sub_215747D98(qword_267887968, "<", 0);
    sub_215747C90(qword_267887968, 0, v3, qword_267887988);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887988, &dword_21572C000);
    __cxa_guard_release(&qword_2678879A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678879C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678879C0))
  {
    sub_215E19DF4((uint64_t)qword_267887988, (uint64_t)&xmmword_2678879A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678879A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678879C0);
  }
  if (byte_2678879BF < 0)
  {
    long long v2 = xmmword_2678879A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678879A8;
    *(void *)(a1 + 16) = unk_2678879B8;
  }
}

void sub_2158609EC(_Unwind_Exception *a1)
{
}

void sub_215860A04(_Unwind_Exception *a1)
{
}

void sub_215860A1C(_Unwind_Exception *a1)
{
}

void sub_215860A34()
{
}

void sub_215860A4C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215860A7C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215860A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6649E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_215860AD8()
{
  return 33;
}

long long *sub_215860AE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678879E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678879E0))
  {
    uint64_t v1 = sub_215860BC8();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678879C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678879D8 = *((void *)v1 + 2);
      xmmword_2678879C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678879C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678879E0);
  }
  if (byte_2678879DF >= 0) {
    return &xmmword_2678879C8;
  }
  else {
    return (long long *)xmmword_2678879C8;
  }
}

void sub_215860BB0(_Unwind_Exception *a1)
{
}

long long *sub_215860BC8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887A00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887A00))
  {
    return &xmmword_2678879E8;
  }
  uint64_t v1 = sub_215860CB0();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678879E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678879F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678879E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678879E8, &dword_21572C000);
  __cxa_guard_release(&qword_267887A00);
  return &xmmword_2678879E8;
}

void sub_215860C98(_Unwind_Exception *a1)
{
}

std::string *sub_215860CB0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887A20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887A20))
  {
    return &stru_267887A08;
  }
  sub_215860ED8((uint64_t)__p);
  sub_215860DAC(__p, &stru_267887A08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887A08, &dword_21572C000);
  __cxa_guard_release(&qword_267887A20);
  return &stru_267887A08;
}

void sub_215860D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887A20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887A20);
  _Unwind_Resume(a1);
}

void sub_215860DAC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_2158610E8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215860EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215860ED8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887A40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887A40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr8u>]", qword_267887A28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887A28, &dword_21572C000);
    __cxa_guard_release(&qword_267887A40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887A60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887A60))
  {
    size_t v3 = sub_215747D98(qword_267887A28, "<", 0);
    sub_215747C90(qword_267887A28, 0, v3, qword_267887A48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887A48, &dword_21572C000);
    __cxa_guard_release(&qword_267887A60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887A80))
  {
    sub_215E19DF4((uint64_t)qword_267887A48, (uint64_t)&xmmword_267887A68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887A68, &dword_21572C000);
    __cxa_guard_release(&qword_267887A80);
  }
  if (byte_267887A7F < 0)
  {
    long long v2 = xmmword_267887A68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887A68;
    *(void *)(a1 + 16) = unk_267887A78;
  }
}

void sub_2158610A0(_Unwind_Exception *a1)
{
}

void sub_2158610B8(_Unwind_Exception *a1)
{
}

void sub_2158610D0(_Unwind_Exception *a1)
{
}

std::string *sub_2158610E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886120, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886120))
  {
    return &stru_267886108;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886108);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886108, &dword_21572C000);
  __cxa_guard_release(&qword_267886120);
  return &stru_267886108;
}

void sub_2158611AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886120);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886120);
  _Unwind_Resume(a1);
}

void sub_2158611EC()
{
}

void sub_215861204(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215861234(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215861248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664A60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215861290()
{
  return 34;
}

long long *sub_21586129C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887AA0))
  {
    uint64_t v1 = sub_215861380();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887A88, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887A98 = *((void *)v1 + 2);
      xmmword_267887A88 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887A88, &dword_21572C000);
    __cxa_guard_release(&qword_267887AA0);
  }
  if (byte_267887A9F >= 0) {
    return &xmmword_267887A88;
  }
  else {
    return (long long *)xmmword_267887A88;
  }
}

void sub_215861368(_Unwind_Exception *a1)
{
}

long long *sub_215861380()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887AC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887AC0))
  {
    return &xmmword_267887AA8;
  }
  uint64_t v1 = sub_215861468();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887AA8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887AB8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887AA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887AA8, &dword_21572C000);
  __cxa_guard_release(&qword_267887AC0);
  return &xmmword_267887AA8;
}

void sub_215861450(_Unwind_Exception *a1)
{
}

std::string *sub_215861468()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887AE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887AE0))
  {
    return &stru_267887AC8;
  }
  sub_215861690((uint64_t)__p);
  sub_215861564(__p, &stru_267887AC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887AC8, &dword_21572C000);
  __cxa_guard_release(&qword_267887AE0);
  return &stru_267887AC8;
}

void sub_215861524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887AE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887AE0);
  _Unwind_Resume(a1);
}

void sub_215861564(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_2158618A0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215861664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215861690(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887B00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887B00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr16u>]", qword_267887AE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887AE8, &dword_21572C000);
    __cxa_guard_release(&qword_267887B00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887B20))
  {
    size_t v3 = sub_215747D98(qword_267887AE8, "<", 0);
    sub_215747C90(qword_267887AE8, 0, v3, qword_267887B08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887B08, &dword_21572C000);
    __cxa_guard_release(&qword_267887B20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887B40))
  {
    sub_215E19DF4((uint64_t)qword_267887B08, (uint64_t)&xmmword_267887B28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887B28, &dword_21572C000);
    __cxa_guard_release(&qword_267887B40);
  }
  if (byte_267887B3F < 0)
  {
    long long v2 = xmmword_267887B28;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887B28;
    *(void *)(a1 + 16) = unk_267887B38;
  }
}

void sub_215861858(_Unwind_Exception *a1)
{
}

void sub_215861870(_Unwind_Exception *a1)
{
}

void sub_215861888(_Unwind_Exception *a1)
{
}

std::string *sub_2158618A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886140, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886140))
  {
    return &stru_267886128;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886128);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886128, &dword_21572C000);
  __cxa_guard_release(&qword_267886140);
  return &stru_267886128;
}

void sub_215861964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886140);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886140);
  _Unwind_Resume(a1);
}

void sub_2158619A4()
{
}

void sub_2158619BC(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_2158619EC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215861A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664AE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_215861A48()
{
  return 35;
}

long long *sub_215861A54()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887B60))
  {
    uint64_t v1 = sub_215861B38();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887B48, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887B58 = *((void *)v1 + 2);
      xmmword_267887B48 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887B48, &dword_21572C000);
    __cxa_guard_release(&qword_267887B60);
  }
  if (byte_267887B5F >= 0) {
    return &xmmword_267887B48;
  }
  else {
    return (long long *)xmmword_267887B48;
  }
}

void sub_215861B20(_Unwind_Exception *a1)
{
}

long long *sub_215861B38()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887B80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887B80))
  {
    return &xmmword_267887B68;
  }
  uint64_t v1 = sub_215861C20();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887B68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887B78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887B68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887B68, &dword_21572C000);
  __cxa_guard_release(&qword_267887B80);
  return &xmmword_267887B68;
}

void sub_215861C08(_Unwind_Exception *a1)
{
}

std::string *sub_215861C20()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887BA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887BA0))
  {
    return &stru_267887B88;
  }
  sub_215861E48((uint64_t)__p);
  sub_215861D1C(__p, &stru_267887B88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887B88, &dword_21572C000);
  __cxa_guard_release(&qword_267887BA0);
  return &stru_267887B88;
}

void sub_215861CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887BA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887BA0);
  _Unwind_Resume(a1);
}

void sub_215861D1C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215862058();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215861E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215861E48(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887BC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887BC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr16f>]", qword_267887BA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887BA8, &dword_21572C000);
    __cxa_guard_release(&qword_267887BC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887BE0))
  {
    size_t v3 = sub_215747D98(qword_267887BA8, "<", 0);
    sub_215747C90(qword_267887BA8, 0, v3, qword_267887BC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887BC8, &dword_21572C000);
    __cxa_guard_release(&qword_267887BE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887C00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887C00))
  {
    sub_215E19DF4((uint64_t)qword_267887BC8, (uint64_t)&xmmword_267887BE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887BE8, &dword_21572C000);
    __cxa_guard_release(&qword_267887C00);
  }
  if (byte_267887BFF < 0)
  {
    long long v2 = xmmword_267887BE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887BE8;
    *(void *)(a1 + 16) = unk_267887BF8;
  }
}

void sub_215862010(_Unwind_Exception *a1)
{
}

void sub_215862028(_Unwind_Exception *a1)
{
}

void sub_215862040(_Unwind_Exception *a1)
{
}

std::string *sub_215862058()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886160, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886160))
  {
    return &stru_267886148;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886148);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886148, &dword_21572C000);
  __cxa_guard_release(&qword_267886160);
  return &stru_267886148;
}

void sub_21586211C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886160);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886160);
  _Unwind_Resume(a1);
}

void sub_21586215C()
{
}

uint64_t sub_215862174(uint64_t a1, uint64_t a2)
{
  return sub_215D8F648(a2);
}

__n128 sub_21586217C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215862190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664B60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_2158621D8()
{
  return 36;
}

long long *sub_2158621E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887C20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887C20))
  {
    uint64_t v1 = sub_2158622C8();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887C08, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887C18 = *((void *)v1 + 2);
      xmmword_267887C08 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887C08, &dword_21572C000);
    __cxa_guard_release(&qword_267887C20);
  }
  if (byte_267887C1F >= 0) {
    return &xmmword_267887C08;
  }
  else {
    return (long long *)xmmword_267887C08;
  }
}

void sub_2158622B0(_Unwind_Exception *a1)
{
}

long long *sub_2158622C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887C40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887C40))
  {
    return &xmmword_267887C28;
  }
  uint64_t v1 = sub_2158623B0();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887C28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887C38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887C28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887C28, &dword_21572C000);
  __cxa_guard_release(&qword_267887C40);
  return &xmmword_267887C28;
}

void sub_215862398(_Unwind_Exception *a1)
{
}

std::string *sub_2158623B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887C60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887C60))
  {
    return &stru_267887C48;
  }
  sub_2158625D8((uint64_t)__p);
  sub_2158624AC(__p, &stru_267887C48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887C48, &dword_21572C000);
  __cxa_guard_release(&qword_267887C60);
  return &stru_267887C48;
}

void sub_21586246C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887C60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887C60);
  _Unwind_Resume(a1);
}

void sub_2158624AC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_2158627E8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2158625AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2158625D8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887C80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887C80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr32f>]", qword_267887C68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887C68, &dword_21572C000);
    __cxa_guard_release(&qword_267887C80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887CA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887CA0))
  {
    size_t v3 = sub_215747D98(qword_267887C68, "<", 0);
    sub_215747C90(qword_267887C68, 0, v3, qword_267887C88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887C88, &dword_21572C000);
    __cxa_guard_release(&qword_267887CA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887CC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887CC0))
  {
    sub_215E19DF4((uint64_t)qword_267887C88, (uint64_t)&xmmword_267887CA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887CA8, &dword_21572C000);
    __cxa_guard_release(&qword_267887CC0);
  }
  if (byte_267887CBF < 0)
  {
    long long v2 = xmmword_267887CA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887CA8;
    *(void *)(a1 + 16) = unk_267887CB8;
  }
}

void sub_2158627A0(_Unwind_Exception *a1)
{
}

void sub_2158627B8(_Unwind_Exception *a1)
{
}

void sub_2158627D0(_Unwind_Exception *a1)
{
}

std::string *sub_2158627E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886180, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886180))
  {
    return &stru_267886168;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886168);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886168, &dword_21572C000);
  __cxa_guard_release(&qword_267886180);
  return &stru_267886168;
}

void sub_2158628AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886180);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886180);
  _Unwind_Resume(a1);
}

void sub_2158628EC()
{
}

void sub_215862904(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215862934(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215862948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664BE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

uint64_t sub_215862990()
{
  return 37;
}

long long *sub_21586299C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887CE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887CE0))
  {
    uint64_t v1 = sub_215862A80();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887CC8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887CD8 = *((void *)v1 + 2);
      xmmword_267887CC8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887CC8, &dword_21572C000);
    __cxa_guard_release(&qword_267887CE0);
  }
  if (byte_267887CDF >= 0) {
    return &xmmword_267887CC8;
  }
  else {
    return (long long *)xmmword_267887CC8;
  }
}

void sub_215862A68(_Unwind_Exception *a1)
{
}

long long *sub_215862A80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887D00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887D00))
  {
    return &xmmword_267887CE8;
  }
  uint64_t v1 = sub_215862B68();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887CE8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887CF8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887CE8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887CE8, &dword_21572C000);
  __cxa_guard_release(&qword_267887D00);
  return &xmmword_267887CE8;
}

void sub_215862B50(_Unwind_Exception *a1)
{
}

std::string *sub_215862B68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887D20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887D20))
  {
    return &stru_267887D08;
  }
  sub_215862D90((uint64_t)__p);
  sub_215862C64(__p, &stru_267887D08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887D08, &dword_21572C000);
  __cxa_guard_release(&qword_267887D20);
  return &stru_267887D08;
}

void sub_215862C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887D20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887D20);
  _Unwind_Resume(a1);
}

void sub_215862C64(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_2158177CC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215862D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215862D90(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887D40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887D40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb8u>]", qword_267887D28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887D28, &dword_21572C000);
    __cxa_guard_release(&qword_267887D40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887D60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887D60))
  {
    size_t v3 = sub_215747D98(qword_267887D28, "<", 0);
    sub_215747C90(qword_267887D28, 0, v3, qword_267887D48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887D48, &dword_21572C000);
    __cxa_guard_release(&qword_267887D60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887D80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887D80))
  {
    sub_215E19DF4((uint64_t)qword_267887D48, (uint64_t)&xmmword_267887D68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887D68, &dword_21572C000);
    __cxa_guard_release(&qword_267887D80);
  }
  if (byte_267887D7F < 0)
  {
    long long v2 = xmmword_267887D68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887D68;
    *(void *)(a1 + 16) = unk_267887D78;
  }
}

void sub_215862F58(_Unwind_Exception *a1)
{
}

void sub_215862F70(_Unwind_Exception *a1)
{
}

void sub_215862F88(_Unwind_Exception *a1)
{
}

void sub_215862FA0()
{
}

void sub_215862FB8(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_215862FE8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215862FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664C60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215851B70(a2 + 64, a3 + 64);
}

uint64_t sub_215863044()
{
  return 38;
}

long long *sub_215863050()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887DA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887DA0))
  {
    uint64_t v1 = sub_215863134();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887D88, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887D98 = *((void *)v1 + 2);
      xmmword_267887D88 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887D88, &dword_21572C000);
    __cxa_guard_release(&qword_267887DA0);
  }
  if (byte_267887D9F >= 0) {
    return &xmmword_267887D88;
  }
  else {
    return (long long *)xmmword_267887D88;
  }
}

void sub_21586311C(_Unwind_Exception *a1)
{
}

long long *sub_215863134()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887DC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887DC0))
  {
    return &xmmword_267887DA8;
  }
  uint64_t v1 = sub_21586321C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887DA8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887DB8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887DA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887DA8, &dword_21572C000);
  __cxa_guard_release(&qword_267887DC0);
  return &xmmword_267887DA8;
}

void sub_215863204(_Unwind_Exception *a1)
{
}

std::string *sub_21586321C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887DE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887DE0))
  {
    return &stru_267887DC8;
  }
  sub_215863444((uint64_t)__p);
  sub_215863318(__p, &stru_267887DC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887DC8, &dword_21572C000);
  __cxa_guard_release(&qword_267887DE0);
  return &stru_267887DC8;
}

void sub_2158632D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887DE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887DE0);
  _Unwind_Resume(a1);
}

void sub_215863318(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215818E08();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215863418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215863444(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887E00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887E00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb16u>]", qword_267887DE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887DE8, &dword_21572C000);
    __cxa_guard_release(&qword_267887E00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887E20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887E20))
  {
    size_t v3 = sub_215747D98(qword_267887DE8, "<", 0);
    sub_215747C90(qword_267887DE8, 0, v3, qword_267887E08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887E08, &dword_21572C000);
    __cxa_guard_release(&qword_267887E20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887E40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887E40))
  {
    sub_215E19DF4((uint64_t)qword_267887E08, (uint64_t)&xmmword_267887E28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887E28, &dword_21572C000);
    __cxa_guard_release(&qword_267887E40);
  }
  if (byte_267887E3F < 0)
  {
    long long v2 = xmmword_267887E28;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887E28;
    *(void *)(a1 + 16) = unk_267887E38;
  }
}

void sub_21586360C(_Unwind_Exception *a1)
{
}

void sub_215863624(_Unwind_Exception *a1)
{
}

void sub_21586363C(_Unwind_Exception *a1)
{
}

void sub_215863654()
{
}

void sub_21586366C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_21586369C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2158636B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664CE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215852DD0(a2 + 64, a3 + 64);
}

uint64_t sub_2158636F8()
{
  return 39;
}

long long *sub_215863704()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887E60))
  {
    uint64_t v1 = sub_2158637E8();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887E48, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887E58 = *((void *)v1 + 2);
      xmmword_267887E48 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887E48, &dword_21572C000);
    __cxa_guard_release(&qword_267887E60);
  }
  if (byte_267887E5F >= 0) {
    return &xmmword_267887E48;
  }
  else {
    return (long long *)xmmword_267887E48;
  }
}

void sub_2158637D0(_Unwind_Exception *a1)
{
}

long long *sub_2158637E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887E80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887E80))
  {
    return &xmmword_267887E68;
  }
  uint64_t v1 = sub_2158638D0();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887E68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887E78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887E68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887E68, &dword_21572C000);
  __cxa_guard_release(&qword_267887E80);
  return &xmmword_267887E68;
}

void sub_2158638B8(_Unwind_Exception *a1)
{
}

std::string *sub_2158638D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887EA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887EA0))
  {
    return &stru_267887E88;
  }
  sub_215863AF8((uint64_t)__p);
  sub_2158639CC(__p, &stru_267887E88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887E88, &dword_21572C000);
  __cxa_guard_release(&qword_267887EA0);
  return &stru_267887E88;
}

void sub_21586398C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887EA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887EA0);
  _Unwind_Resume(a1);
}

void sub_2158639CC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215863D08();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215863ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215863AF8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887EC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887EC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb16f>]", qword_267887EA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887EA8, &dword_21572C000);
    __cxa_guard_release(&qword_267887EC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887EE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887EE0))
  {
    size_t v3 = sub_215747D98(qword_267887EA8, "<", 0);
    sub_215747C90(qword_267887EA8, 0, v3, qword_267887EC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887EC8, &dword_21572C000);
    __cxa_guard_release(&qword_267887EE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887F00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887F00))
  {
    sub_215E19DF4((uint64_t)qword_267887EC8, (uint64_t)&xmmword_267887EE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887EE8, &dword_21572C000);
    __cxa_guard_release(&qword_267887F00);
  }
  if (byte_267887EFF < 0)
  {
    long long v2 = xmmword_267887EE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887EE8;
    *(void *)(a1 + 16) = unk_267887EF8;
  }
}

void sub_215863CC0(_Unwind_Exception *a1)
{
}

void sub_215863CD8(_Unwind_Exception *a1)
{
}

void sub_215863CF0(_Unwind_Exception *a1)
{
}

std::string *sub_215863D08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678861A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678861A0))
  {
    return &stru_267886188;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267886188);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886188, &dword_21572C000);
  __cxa_guard_release(&qword_2678861A0);
  return &stru_267886188;
}

void sub_215863DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678861A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678861A0);
  _Unwind_Resume(a1);
}

void sub_215863E0C()
{
}

uint64_t sub_215863E24(uint64_t a1, uint64_t a2)
{
  return sub_215D919E8(a2);
}

__n128 sub_215863E2C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_215863E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664D60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854024(a2 + 64, a3 + 64);
}

uint64_t sub_215863E88()
{
  return 40;
}

long long *sub_215863E94()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887F20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887F20))
  {
    uint64_t v1 = sub_215863F78();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_267887F08, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_267887F18 = *((void *)v1 + 2);
      xmmword_267887F08 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887F08, &dword_21572C000);
    __cxa_guard_release(&qword_267887F20);
  }
  if (byte_267887F1F >= 0) {
    return &xmmword_267887F08;
  }
  else {
    return (long long *)xmmword_267887F08;
  }
}

void sub_215863F60(_Unwind_Exception *a1)
{
}

long long *sub_215863F78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887F40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887F40))
  {
    return &xmmword_267887F28;
  }
  uint64_t v1 = sub_215864060();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887F28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887F38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887F28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887F28, &dword_21572C000);
  __cxa_guard_release(&qword_267887F40);
  return &xmmword_267887F28;
}

void sub_215864048(_Unwind_Exception *a1)
{
}

std::string *sub_215864060()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887F60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887F60))
  {
    return &stru_267887F48;
  }
  sub_215864288((uint64_t)__p);
  sub_21586415C(__p, &stru_267887F48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887F48, &dword_21572C000);
  __cxa_guard_release(&qword_267887F60);
  return &stru_267887F48;
}

void sub_21586411C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267887F60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267887F60);
  _Unwind_Resume(a1);
}

void sub_21586415C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215864498();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21586425C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215864288(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887F80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887F80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb32f>]", qword_267887F68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887F68, &dword_21572C000);
    __cxa_guard_release(&qword_267887F80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887FA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887FA0))
  {
    size_t v3 = sub_215747D98(qword_267887F68, "<", 0);
    sub_215747C90(qword_267887F68, 0, v3, qword_267887F88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267887F88, &dword_21572C000);
    __cxa_guard_release(&qword_267887FA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887FC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267887FC0))
  {
    sub_215E19DF4((uint64_t)qword_267887F88, (uint64_t)&xmmword_267887FA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887FA8, &dword_21572C000);
    __cxa_guard_release(&qword_267887FC0);
  }
  if (byte_267887FBF < 0)
  {
    long long v2 = xmmword_267887FA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267887FA8;
    *(void *)(a1 + 16) = unk_267887FB8;
  }
}

void sub_215864450(_Unwind_Exception *a1)
{
}

void sub_215864468(_Unwind_Exception *a1)
{
}

void sub_215864480(_Unwind_Exception *a1)
{
}

std::string *sub_215864498()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678861C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678861C0))
  {
    return &stru_2678861A8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678861A8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678861A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678861C0);
  return &stru_2678861A8;
}

void sub_21586455C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678861C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678861C0);
  _Unwind_Resume(a1);
}

void sub_21586459C()
{
}

void sub_2158645B4(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void **)(a2 + 72);
  if (v3) {
    free(v3);
  }
  *(void *)(a2 + 72) = 0;
}

__n128 sub_2158645E4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2158645F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664DE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  return sub_215854BD4(a2 + 64, a3 + 64);
}

void sub_215864644()
{
}

void sub_215864658(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  sub_2158646B0(a3, a1, &v3);
}

void sub_215864684(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  sub_21589A394(a3, a1, &v3);
}

void sub_2158646B0(uint64_t a1, int a2, _DWORD *a3)
{
  uint64_t v181 = *MEMORY[0x263EF8340];
  switch(a2)
  {
    case 1:
      v159 = &unk_26C6618A0;
      LODWORD(v3) = *a3;
      if (a3[1]) {
        uint64_t v3 = v3;
      }
      else {
        uint64_t v3 = 0;
      }
      unint64_t v4 = (*a3 != 0) | (unint64_t)(v3 << 32);
      unint64_t v5 = *(void *)a3;
      LOBYTE(v160) = 0;
      v161 = &unk_26C65FB98;
      *(void *)&long long v162 = v5;
      *((void *)&v162 + 1) = v4;
      if (HIDWORD(v5)) {
        BOOL v6 = v5 == 0;
      }
      else {
        BOOL v6 = 1;
      }
      int v7 = v6;
      if (v6) {
        unint64_t v5 = 0;
      }
      *(void *)v175 = &unk_26C663A60;
      *(void *)&v175[8] = v5;
      *(void *)&v175[16] = v4;
      v175[24] = 0;
      v175[32] = 0;
      *(void *)v173 = v4;
      if (v5) {
        int v8 = v7;
      }
      else {
        int v8 = 1;
      }
      if (v8) {
        uint64_t v9 = 0;
      }
      else {
        uint64_t v9 = (void *)v5;
      }
      v172 = v9;
      if ((v3 & (v3 - 1)) != 0) {
        uint64_t v10 = 1;
      }
      else {
        uint64_t v10 = v3;
      }
      uint64_t v11 = sub_215DA3CC4((size_t *)v176, &v172, (void **)v173, 1, (uint64_t)&v160, 1, v10);
      *(void *)v163 = &unk_26C663A60;
      *(_OWORD *)&v163[8] = *(_OWORD *)&v175[8];
      *(_OWORD *)&v163[20] = *(_OWORD *)&v175[20];
      *(void *)&v163[40] = *v11;
      long long v164 = *(_OWORD *)&v176[8];
      long long v165 = v177;
      LODWORD(v166) = 1;
      operator new();
    case 2:
      v159 = &unk_26C661968;
      LODWORD(v16) = *a3;
      if (a3[1]) {
        uint64_t v16 = v16;
      }
      else {
        uint64_t v16 = 0;
      }
      unint64_t v17 = (*a3 != 0) | (unint64_t)(v16 << 32);
      unint64_t v18 = *(void *)a3;
      LOWORD(v160) = 0;
      v161 = &unk_26C65FC18;
      *(void *)&long long v162 = v18;
      *((void *)&v162 + 1) = v17;
      if (HIDWORD(v18)) {
        BOOL v19 = v18 == 0;
      }
      else {
        BOOL v19 = 1;
      }
      int v20 = v19;
      if (v19) {
        unint64_t v18 = 0;
      }
      *(void *)v175 = &unk_26C663AE0;
      *(void *)&v175[8] = v18;
      *(void *)&v175[16] = v17;
      v175[24] = 0;
      v175[32] = 0;
      *(void *)v173 = v17;
      if (v18) {
        int v21 = v20;
      }
      else {
        int v21 = 1;
      }
      if (v21) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = (void *)v18;
      }
      v172 = v22;
      uint64_t v23 = 2 * v16;
      if ((v23 & (v23 - 1)) != 0) {
        uint64_t v24 = 2;
      }
      else {
        uint64_t v24 = v23;
      }
      uint64_t v25 = sub_215DA906C((unint64_t *)v176, &v172, (unint64_t *)v173, 1, &v160, 1, v24);
      *(void *)v163 = &unk_26C663AE0;
      *(_OWORD *)&v163[8] = *(_OWORD *)&v175[8];
      *(_OWORD *)&v163[20] = *(_OWORD *)&v175[20];
      *(void *)&v163[40] = *v25;
      long long v164 = *(_OWORD *)&v176[8];
      long long v165 = v177;
      LODWORD(v166) = 1;
      operator new();
    case 3:
      v159 = &unk_26C661A30;
      LODWORD(v26) = *a3;
      if (a3[1]) {
        uint64_t v26 = v26;
      }
      else {
        uint64_t v26 = 0;
      }
      unint64_t v27 = (*a3 != 0) | (unint64_t)(v26 << 32);
      unint64_t v28 = *(void *)a3;
      LOWORD(v160) = 0;
      v161 = &unk_26C65FC98;
      *(void *)&long long v162 = v28;
      *((void *)&v162 + 1) = v27;
      if (HIDWORD(v28)) {
        BOOL v29 = v28 == 0;
      }
      else {
        BOOL v29 = 1;
      }
      int v30 = v29;
      if (v29) {
        unint64_t v28 = 0;
      }
      *(void *)v175 = &unk_26C663B60;
      *(void *)&v175[8] = v28;
      *(void *)&v175[16] = v27;
      v175[24] = 0;
      v175[32] = 0;
      *(void *)v173 = v27;
      if (v28) {
        int v31 = v30;
      }
      else {
        int v31 = 1;
      }
      if (v31) {
        int v32 = 0;
      }
      else {
        int v32 = (void *)v28;
      }
      v172 = v32;
      uint64_t v33 = 2 * v26;
      if ((v33 & (v33 - 1)) != 0) {
        uint64_t v34 = 2;
      }
      else {
        uint64_t v34 = v33;
      }
      uint64_t v35 = sub_215DA92D8((unint64_t *)v176, &v172, (unint64_t *)v173, 1, &v160, 1, v34);
      *(void *)v163 = &unk_26C663B60;
      *(_OWORD *)&v163[8] = *(_OWORD *)&v175[8];
      *(_OWORD *)&v163[20] = *(_OWORD *)&v175[20];
      *(void *)&v163[40] = *v35;
      long long v164 = *(_OWORD *)&v176[8];
      *uint64_t v35 = 0;
      v35[1] = 0;
      long long v165 = v177;
      LODWORD(v166) = 1;
      sub_215D7D7C4((uint64_t)v175);
      operator new();
    case 4:
      v159 = &unk_26C661AF8;
      LODWORD(v36) = *a3;
      if (a3[1]) {
        uint64_t v36 = v36;
      }
      else {
        uint64_t v36 = 0;
      }
      unint64_t v37 = (*a3 != 0) | (unint64_t)(v36 << 32);
      unint64_t v38 = *(void *)a3;
      int v160 = 0;
      v161 = &unk_26C65FD18;
      *(void *)&long long v162 = v38;
      *((void *)&v162 + 1) = v37;
      if (HIDWORD(v38)) {
        BOOL v39 = v38 == 0;
      }
      else {
        BOOL v39 = 1;
      }
      int v40 = v39;
      if (v39) {
        unint64_t v38 = 0;
      }
      *(void *)v175 = &unk_26C663BE0;
      *(void *)&v175[8] = v38;
      *(void *)&v175[16] = v37;
      v175[24] = 0;
      v175[32] = 0;
      *(void *)v173 = v37;
      if (v38) {
        int v41 = v40;
      }
      else {
        int v41 = 1;
      }
      if (v41) {
        uint64_t v42 = 0;
      }
      else {
        uint64_t v42 = (void *)v38;
      }
      v172 = v42;
      uint64_t v43 = 4 * v36;
      if ((v43 & (v43 - 1)) != 0) {
        uint64_t v44 = 4;
      }
      else {
        uint64_t v44 = v43;
      }
      v45 = sub_215DA9608((unint64_t *)v176, &v172, (unint64_t *)v173, 1, &v160, 1, v44);
      *(void *)v163 = &unk_26C663BE0;
      *(_OWORD *)&v163[8] = *(_OWORD *)&v175[8];
      *(_OWORD *)&v163[20] = *(_OWORD *)&v175[20];
      *(void *)&v163[40] = *v45;
      long long v164 = *(_OWORD *)&v176[8];
      long long v165 = v177;
      LODWORD(v166) = 1;
      operator new();
    case 5:
      uint64_t v46 = 2 * (*a3 != 0);
      LODWORD(v47) = v46 * *a3;
      if (a3[1]) {
        unint64_t v47 = v47;
      }
      else {
        unint64_t v47 = 0;
      }
      *(_DWORD *)v175 = 2;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v48 = *(void *)&v175[4];
      v172 = &unk_26C661BC0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v46 & 0x1FFFFFFFFLL | ((unint64_t)(v47 >> 1) << 33);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v48);
      *(_DWORD *)&v173[20] = v47;
      *(void *)&v173[24] = v48;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C65FD98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D7E444((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C663C60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 6:
      uint64_t v49 = 2 * (*a3 != 0);
      LODWORD(v50) = v49 * *a3;
      if (a3[1]) {
        unint64_t v50 = v50;
      }
      else {
        unint64_t v50 = 0;
      }
      *(_DWORD *)v175 = 2;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v51 = *(void *)&v175[4];
      v172 = &unk_26C661C88;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v49 & 0x1FFFFFFFFLL | ((unint64_t)(v50 >> 1) << 33);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v51);
      *(_DWORD *)&v173[20] = v50;
      *(void *)&v173[24] = v51;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C65FE18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D7EC84((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C663CE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 7:
      uint64_t v52 = 2 * (*a3 != 0);
      LODWORD(v53) = v52 * *a3;
      if (a3[1]) {
        unint64_t v53 = v53;
      }
      else {
        unint64_t v53 = 0;
      }
      *(_DWORD *)v175 = 2;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v54 = *(void *)&v175[4];
      v172 = &unk_26C661D50;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v52 & 0x1FFFFFFFFLL | ((unint64_t)(v53 >> 1) << 33);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v54);
      *(_DWORD *)&v173[20] = v53;
      *(void *)&v173[24] = v54;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C65FE98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v55 = sub_215D7F670((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C663D60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D7F440(v55);
      operator new();
    case 8:
      uint64_t v56 = 2 * (*a3 != 0);
      LODWORD(v57) = v56 * *a3;
      if (a3[1]) {
        unint64_t v57 = v57;
      }
      else {
        unint64_t v57 = 0;
      }
      *(_DWORD *)v175 = 2;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v58 = *(void *)&v175[4];
      v172 = &unk_26C661E18;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v56 & 0x1FFFFFFFFLL | ((unint64_t)(v57 >> 1) << 33);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v58);
      *(_DWORD *)&v173[20] = v57;
      *(void *)&v173[24] = v58;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C65FF18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D7FEB4((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C663DE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 9:
      if (*a3) {
        uint64_t v59 = 3;
      }
      else {
        uint64_t v59 = 0;
      }
      LODWORD(v60) = v59 * *a3;
      if (a3[1]) {
        uint64_t v60 = v60;
      }
      else {
        uint64_t v60 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v61 = *(void *)&v175[4];
      v172 = &unk_26C661EE0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v59 | (v60 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v61);
      *(_DWORD *)&v173[20] = v60;
      *(void *)&v173[24] = v61;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C65FF98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D806FC((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C663E60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 10:
      if (*a3) {
        uint64_t v62 = 3;
      }
      else {
        uint64_t v62 = 0;
      }
      LODWORD(v63) = v62 * *a3;
      if (a3[1]) {
        uint64_t v63 = v63;
      }
      else {
        uint64_t v63 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v64 = *(void *)&v175[4];
      v172 = &unk_26C661FA8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v62 | (v63 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v64);
      *(_DWORD *)&v173[20] = v63;
      *(void *)&v173[24] = v64;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660018;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D81070((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C663EE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 11:
      if (*a3) {
        uint64_t v65 = 3;
      }
      else {
        uint64_t v65 = 0;
      }
      LODWORD(v66) = v65 * *a3;
      if (a3[1]) {
        uint64_t v66 = v66;
      }
      else {
        uint64_t v66 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v67 = *(void *)&v175[4];
      v172 = &unk_26C662070;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v65 | (v66 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v67);
      *(_DWORD *)&v173[20] = v66;
      *(void *)&v173[24] = v67;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660098;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v68 = sub_215D81BB4((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C663F60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D81984(v68);
      operator new();
    case 12:
      if (*a3) {
        uint64_t v69 = 3;
      }
      else {
        uint64_t v69 = 0;
      }
      LODWORD(v70) = v69 * *a3;
      if (a3[1]) {
        uint64_t v70 = v70;
      }
      else {
        uint64_t v70 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v71 = *(void *)&v175[4];
      v172 = &unk_26C662138;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v69 | (v70 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v71);
      *(_DWORD *)&v173[20] = v70;
      *(void *)&v173[24] = v71;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660118;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D823FC((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C663FE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 13:
      uint64_t v72 = 4 * (*a3 != 0);
      LODWORD(v73) = v72 * *a3;
      if (a3[1]) {
        unint64_t v73 = v73;
      }
      else {
        unint64_t v73 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v74 = *(void *)&v175[4];
      v172 = &unk_26C662200;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v72 & 0x3FFFFFFFFLL | ((unint64_t)(v73 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v74);
      *(_DWORD *)&v173[20] = v73;
      *(void *)&v173[24] = v74;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660198;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D82D98((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664060;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 14:
      uint64_t v75 = 4 * (*a3 != 0);
      LODWORD(v76) = v75 * *a3;
      if (a3[1]) {
        unint64_t v76 = v76;
      }
      else {
        unint64_t v76 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v77 = *(void *)&v175[4];
      v172 = &unk_26C6622C8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v75 & 0x3FFFFFFFFLL | ((unint64_t)(v76 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v77);
      *(_DWORD *)&v173[20] = v76;
      *(void *)&v173[24] = v77;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660218;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D83624((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C6640E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 15:
      uint64_t v78 = 4 * (*a3 != 0);
      LODWORD(v79) = v78 * *a3;
      if (a3[1]) {
        unint64_t v79 = v79;
      }
      else {
        unint64_t v79 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v80 = *(void *)&v175[4];
      v172 = &unk_26C662390;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v78 & 0x3FFFFFFFFLL | ((unint64_t)(v79 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v80);
      *(_DWORD *)&v173[20] = v79;
      *(void *)&v173[24] = v80;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660298;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v81 = sub_215D84060((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664160;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D83E30(v81);
      operator new();
    case 16:
      uint64_t v82 = 4 * (*a3 != 0);
      LODWORD(v83) = v82 * *a3;
      if (a3[1]) {
        unint64_t v83 = v83;
      }
      else {
        unint64_t v83 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v84 = *(void *)&v175[4];
      v172 = &unk_26C662458;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v82 & 0x3FFFFFFFFLL | ((unint64_t)(v83 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v84);
      *(_DWORD *)&v173[20] = v83;
      *(void *)&v173[24] = v84;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660318;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D848A8((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C6641E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 17:
      if (*a3) {
        uint64_t v85 = 3;
      }
      else {
        uint64_t v85 = 0;
      }
      LODWORD(v86) = v85 * *a3;
      if (a3[1]) {
        uint64_t v86 = v86;
      }
      else {
        uint64_t v86 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v87 = *(void *)&v175[4];
      v172 = &unk_26C662520;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v85 | (v86 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v87);
      *(_DWORD *)&v173[20] = v86;
      *(void *)&v173[24] = v87;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660398;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D85138((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664260;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 18:
      if (*a3) {
        uint64_t v88 = 3;
      }
      else {
        uint64_t v88 = 0;
      }
      LODWORD(v89) = v88 * *a3;
      if (a3[1]) {
        uint64_t v89 = v89;
      }
      else {
        uint64_t v89 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v90 = *(void *)&v175[4];
      v172 = &unk_26C6625E8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v88 | (v89 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v90);
      *(_DWORD *)&v173[20] = v89;
      *(void *)&v173[24] = v90;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660418;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D85AAC((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C6642E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 19:
      if (*a3) {
        uint64_t v91 = 3;
      }
      else {
        uint64_t v91 = 0;
      }
      LODWORD(v92) = v91 * *a3;
      if (a3[1]) {
        uint64_t v92 = v92;
      }
      else {
        uint64_t v92 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v93 = *(void *)&v175[4];
      v172 = &unk_26C6626B0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v91 | (v92 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v93);
      *(_DWORD *)&v173[20] = v92;
      *(void *)&v173[24] = v93;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660498;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v94 = sub_215D865F0((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664360;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D863C0(v94);
      operator new();
    case 20:
      if (*a3) {
        uint64_t v95 = 3;
      }
      else {
        uint64_t v95 = 0;
      }
      LODWORD(v96) = v95 * *a3;
      if (a3[1]) {
        uint64_t v96 = v96;
      }
      else {
        uint64_t v96 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v97 = *(void *)&v175[4];
      v172 = &unk_26C662778;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v95 | (v96 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v97);
      *(_DWORD *)&v173[20] = v96;
      *(void *)&v173[24] = v97;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660518;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D86E38((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C6643E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 21:
      if (*a3) {
        uint64_t v98 = 3;
      }
      else {
        uint64_t v98 = 0;
      }
      LODWORD(v99) = v98 * *a3;
      if (a3[1]) {
        uint64_t v99 = v99;
      }
      else {
        uint64_t v99 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v100 = *(void *)&v175[4];
      v172 = &unk_26C662840;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v98 | (v99 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v100);
      *(_DWORD *)&v173[20] = v99;
      *(void *)&v173[24] = v100;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660598;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D877D4((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664460;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 22:
      if (*a3) {
        uint64_t v101 = 3;
      }
      else {
        uint64_t v101 = 0;
      }
      LODWORD(v102) = v101 * *a3;
      if (a3[1]) {
        uint64_t v102 = v102;
      }
      else {
        uint64_t v102 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v103 = *(void *)&v175[4];
      v172 = &unk_26C662908;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v101 | (v102 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v103);
      *(_DWORD *)&v173[20] = v102;
      *(void *)&v173[24] = v103;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660618;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D88148((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C6644E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 23:
      if (*a3) {
        uint64_t v104 = 3;
      }
      else {
        uint64_t v104 = 0;
      }
      LODWORD(v105) = v104 * *a3;
      if (a3[1]) {
        uint64_t v105 = v105;
      }
      else {
        uint64_t v105 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v106 = *(void *)&v175[4];
      v172 = &unk_26C6629D0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v104 | (v105 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v106);
      *(_DWORD *)&v173[20] = v105;
      *(void *)&v173[24] = v106;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660698;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v107 = sub_215D88C8C((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664560;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D88A5C(v107);
      operator new();
    case 24:
      if (*a3) {
        uint64_t v108 = 3;
      }
      else {
        uint64_t v108 = 0;
      }
      LODWORD(v109) = v108 * *a3;
      if (a3[1]) {
        uint64_t v109 = v109;
      }
      else {
        uint64_t v109 = 0;
      }
      *(_DWORD *)v175 = 3;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v110 = *(void *)&v175[4];
      v172 = &unk_26C662A98;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v108 | (v109 << 32);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v110);
      *(_DWORD *)&v173[20] = v109;
      *(void *)&v173[24] = v110;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660718;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D894D4((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C6645E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 25:
      uint64_t v111 = 4 * (*a3 != 0);
      LODWORD(v112) = v111 * *a3;
      if (a3[1]) {
        unint64_t v112 = v112;
      }
      else {
        unint64_t v112 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v113 = *(void *)&v175[4];
      v172 = &unk_26C662B60;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v111 & 0x3FFFFFFFFLL | ((unint64_t)(v112 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v113);
      *(_DWORD *)&v173[20] = v112;
      *(void *)&v173[24] = v113;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660798;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D89E70((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664660;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 26:
      uint64_t v114 = 4 * (*a3 != 0);
      LODWORD(v115) = v114 * *a3;
      if (a3[1]) {
        unint64_t v115 = v115;
      }
      else {
        unint64_t v115 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v116 = *(void *)&v175[4];
      v172 = &unk_26C662C28;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v114 & 0x3FFFFFFFFLL | ((unint64_t)(v115 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v116);
      *(_DWORD *)&v173[20] = v115;
      *(void *)&v173[24] = v116;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660818;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8A6FC((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C6646E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 27:
      uint64_t v12 = 4 * (*a3 != 0);
      LODWORD(v13) = v12 * *a3;
      if (a3[1]) {
        unint64_t v13 = v13;
      }
      else {
        unint64_t v13 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v14 = *(void *)&v175[4];
      v172 = &unk_26C662CF0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v12 & 0x3FFFFFFFFLL | ((unint64_t)(v13 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v14);
      *(_DWORD *)&v173[20] = v13;
      *(void *)&v173[24] = v14;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660898;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v15 = sub_215D8B138((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664760;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D8AF08(v15);
      operator new();
    case 28:
      uint64_t v117 = 4 * (*a3 != 0);
      LODWORD(v118) = v117 * *a3;
      if (a3[1]) {
        unint64_t v118 = v118;
      }
      else {
        unint64_t v118 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v119 = *(void *)&v175[4];
      v172 = &unk_26C662DB8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v117 & 0x3FFFFFFFFLL | ((unint64_t)(v118 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v119);
      *(_DWORD *)&v173[20] = v118;
      *(void *)&v173[24] = v119;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660918;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8B980((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C6647E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 29:
      uint64_t v120 = 4 * (*a3 != 0);
      LODWORD(v121) = v120 * *a3;
      if (a3[1]) {
        unint64_t v121 = v121;
      }
      else {
        unint64_t v121 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v122 = *(void *)&v175[4];
      v172 = &unk_26C662E80;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v120 & 0x3FFFFFFFFLL | ((unint64_t)(v121 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v122);
      *(_DWORD *)&v173[20] = v121;
      *(void *)&v173[24] = v122;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660998;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8C210((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664860;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 30:
      uint64_t v123 = 4 * (*a3 != 0);
      LODWORD(v124) = v123 * *a3;
      if (a3[1]) {
        unint64_t v124 = v124;
      }
      else {
        unint64_t v124 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v125 = *(void *)&v175[4];
      v172 = &unk_26C662F48;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v123 & 0x3FFFFFFFFLL | ((unint64_t)(v124 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v125);
      *(_DWORD *)&v173[20] = v124;
      *(void *)&v173[24] = v125;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660A18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8CA9C((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C6648E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 31:
      uint64_t v126 = 4 * (*a3 != 0);
      LODWORD(v127) = v126 * *a3;
      if (a3[1]) {
        unint64_t v127 = v127;
      }
      else {
        unint64_t v127 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v128 = *(void *)&v175[4];
      v172 = &unk_26C663010;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v126 & 0x3FFFFFFFFLL | ((unint64_t)(v127 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v128);
      *(_DWORD *)&v173[20] = v127;
      *(void *)&v173[24] = v128;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660A98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v129 = sub_215D8D4D8((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664960;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D8D2A8(v129);
      operator new();
    case 32:
      uint64_t v130 = 4 * (*a3 != 0);
      LODWORD(v131) = v130 * *a3;
      if (a3[1]) {
        unint64_t v131 = v131;
      }
      else {
        unint64_t v131 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v132 = *(void *)&v175[4];
      v172 = &unk_26C6630D8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v130 & 0x3FFFFFFFFLL | ((unint64_t)(v131 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v132);
      *(_DWORD *)&v173[20] = v131;
      *(void *)&v173[24] = v132;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660B18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8DD20((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C6649E0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 33:
      uint64_t v133 = 4 * (*a3 != 0);
      LODWORD(v134) = v133 * *a3;
      if (a3[1]) {
        unint64_t v134 = v134;
      }
      else {
        unint64_t v134 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v135 = *(void *)&v175[4];
      v172 = &unk_26C6631A0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v133 & 0x3FFFFFFFFLL | ((unint64_t)(v134 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v135);
      *(_DWORD *)&v173[20] = v134;
      *(void *)&v173[24] = v135;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660B98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8E5B0((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664A60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 34:
      uint64_t v136 = 4 * (*a3 != 0);
      LODWORD(v137) = v136 * *a3;
      if (a3[1]) {
        unint64_t v137 = v137;
      }
      else {
        unint64_t v137 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v138 = *(void *)&v175[4];
      v172 = &unk_26C663268;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v136 & 0x3FFFFFFFFLL | ((unint64_t)(v137 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v138);
      *(_DWORD *)&v173[20] = v137;
      *(void *)&v173[24] = v138;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660C18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D8EE3C((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C664AE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 35:
      uint64_t v139 = 4 * (*a3 != 0);
      LODWORD(v140) = v139 * *a3;
      if (a3[1]) {
        unint64_t v140 = v140;
      }
      else {
        unint64_t v140 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v141 = *(void *)&v175[4];
      v172 = &unk_26C663330;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v139 & 0x3FFFFFFFFLL | ((unint64_t)(v140 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v141);
      *(_DWORD *)&v173[20] = v140;
      *(void *)&v173[24] = v141;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660C98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v142 = sub_215D8F878((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664B60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D8F648(v142);
      operator new();
    case 36:
      uint64_t v143 = 4 * (*a3 != 0);
      LODWORD(v144) = v143 * *a3;
      if (a3[1]) {
        unint64_t v144 = v144;
      }
      else {
        unint64_t v144 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v145 = *(void *)&v175[4];
      v172 = &unk_26C6633F8;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v143 & 0x3FFFFFFFFLL | ((unint64_t)(v144 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v145);
      *(_DWORD *)&v173[20] = v144;
      *(void *)&v173[24] = v145;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660D18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D900C0((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C664BE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 37:
      uint64_t v146 = 4 * (*a3 != 0);
      LODWORD(v147) = v146 * *a3;
      if (a3[1]) {
        unint64_t v147 = v147;
      }
      else {
        unint64_t v147 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v148 = *(void *)&v175[4];
      v172 = &unk_26C6634C0;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v146 & 0x3FFFFFFFFLL | ((unint64_t)(v147 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v148);
      *(_DWORD *)&v173[20] = v147;
      *(void *)&v173[24] = v148;
      uint64_t v174 = *(void *)&v175[4];
      LOBYTE(v159) = 0;
      v161 = &unk_26C660D98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D90950((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664C60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 38:
      uint64_t v149 = 4 * (*a3 != 0);
      LODWORD(v150) = v149 * *a3;
      if (a3[1]) {
        unint64_t v150 = v150;
      }
      else {
        unint64_t v150 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v151 = *(void *)&v175[4];
      v172 = &unk_26C663588;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v149 & 0x3FFFFFFFFLL | ((unint64_t)(v150 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v151);
      *(_DWORD *)&v173[20] = v150;
      *(void *)&v173[24] = v151;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660E18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D911DC((uint64_t)v175, (uint64_t)v173, (const __int16 *)&v159);
      *(void *)&v163[24] = &unk_26C664CE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    case 39:
      uint64_t v152 = 4 * (*a3 != 0);
      LODWORD(v153) = v152 * *a3;
      if (a3[1]) {
        unint64_t v153 = v153;
      }
      else {
        unint64_t v153 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v154 = *(void *)&v175[4];
      v172 = &unk_26C663650;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v152 & 0x3FFFFFFFFLL | ((unint64_t)(v153 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v154);
      *(_DWORD *)&v173[20] = v153;
      *(void *)&v173[24] = v154;
      uint64_t v174 = *(void *)&v175[4];
      LOWORD(v159) = 0;
      v161 = &unk_26C660E98;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      uint64_t v155 = sub_215D91C18((uint64_t)v175, (uint64_t)v173, &v159);
      *(void *)&v163[24] = &unk_26C664D60;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      long long v177 = 0uLL;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      sub_215D919E8(v155);
      operator new();
    case 40:
      uint64_t v156 = 4 * (*a3 != 0);
      LODWORD(v157) = v156 * *a3;
      if (a3[1]) {
        unint64_t v157 = v157;
      }
      else {
        unint64_t v157 = 0;
      }
      *(_DWORD *)v175 = 4;
      *(void *)&v175[4] = *(void *)a3;
      uint64_t v158 = *(void *)&v175[4];
      v172 = &unk_26C663718;
      *(void *)v173 = *(void *)v175;
      *(_DWORD *)v175 = 1;
      *(void *)&v175[4] = v156 & 0x3FFFFFFFFLL | ((unint64_t)(v157 >> 2) << 34);
      *(void *)&v173[12] = *(void *)v175;
      *(_DWORD *)&v173[8] = HIDWORD(v158);
      *(_DWORD *)&v173[20] = v157;
      *(void *)&v173[24] = v158;
      uint64_t v174 = *(void *)&v175[4];
      LODWORD(v159) = 0;
      v161 = &unk_26C660F18;
      *(void *)&v163[16] = *(void *)&v175[4];
      *(_OWORD *)v163 = *(_OWORD *)&v173[16];
      long long v162 = *(_OWORD *)v173;
      sub_215D92460((uint64_t)v175, (uint64_t)v173, (const float *)&v159);
      *(void *)&v163[24] = &unk_26C664DE0;
      *(_OWORD *)&v163[32] = *(_OWORD *)&v175[8];
      long long v164 = *(_OWORD *)&v175[24];
      long long v165 = *(_OWORD *)v176;
      uint64_t v166 = *(void *)&v176[16];
      long long v167 = v177;
      uint64_t v168 = v178;
      uint64_t v170 = v180;
      long long v169 = v179;
      int v171 = 1;
      operator new();
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_215869530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_21586A8AC@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a3;
  LODWORD(a3) = *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v4 = (void *)((*a1 != 0) | (unint64_t)(a3 << 32));
  unint64_t v5 = *(void *)a1;
  char v16 = *a2;
  *(void *)uint64_t v3 = &unk_26C65FB98;
  *(void *)(v3 + 8) = v5;
  *(void *)(v3 + 16) = v4;
  if (HIDWORD(v5)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v5 = 0;
  }
  *(void *)uint64_t v12 = v5;
  *(void *)&v12[8] = v4;
  v12[16] = 0;
  v12[24] = 0;
  unint64_t v18 = v4;
  if (v5) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v17 = v9;
  if ((a3 & (a3 - 1)) != 0) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = a3;
  }
  sub_215DA3CC4((size_t *)&v13, &v17, &v18, 1, (uint64_t)&v16, 1, v10);
  *(void *)(v3 + 24) = &unk_26C663A60;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(v3 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(v3 + 64) = v13;
  *(void *)(v3 + 80) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(v3 + 88) = v15;
  *(_DWORD *)(v3 + 104) = 1;
  return result;
}

void sub_21586A9EC()
{
}

double sub_21586AA00@<D0>(uint64_t a1@<X8>)
{
  char v7 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26C65FB98;
  v3[24] = 0;
  memset(v3, 0, 17);
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  sub_215DA3CC4((size_t *)&v4, &v8, &v9, 1, (uint64_t)&v7, 1, 0);
  *(void *)(a1 + 24) = &unk_26C663A60;
  *(_OWORD *)(a1 + 32) = 0uLL;
  *(_OWORD *)(a1 + 44) = *(_OWORD *)&v3[12];
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = v5;
  double result = v6[0];
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v6;
  *(_DWORD *)(a1 + 104) = 1;
  return result;
}

double sub_21586AAEC@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *a1;
  BOOL v3 = *a1 != 0;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  *(void *)&long long v5 = *(void *)a1;
  *((void *)&v5 + 1) = v3 | (a2 << 32);
  *(void *)uint64_t v2 = &unk_26C65FB98;
  *(_OWORD *)(v2 + 8) = v5;
  BOOL v6 = &unk_26C665220;
  sub_215D92C68((uint64_t *)&v5, (uint64_t)v7);
  *(void *)(v2 + 24) = &unk_26C663A60;
  *(_OWORD *)(v2 + 32) = v8[0];
  *(_OWORD *)(v2 + 44) = *(_OWORD *)((char *)v8 + 12);
  *(_OWORD *)(v2 + 64) = v8[2];
  *(void *)(v2 + 80) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(v2 + 88) = v10;
  *(_DWORD *)(v2 + 104) = 1;
  return result;
}

double sub_21586ABD8@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  if (*a1) {
    unint64_t v4 = ((unint64_t)a1[2] << 32) | 1;
  }
  else {
    unint64_t v4 = 0;
  }
  if (*a1) {
    unint64_t v5 = *(void *)a1;
  }
  else {
    unint64_t v5 = 0;
  }
  char v16 = *a2;
  *(void *)a3 = &unk_26C65FB98;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v4;
  if (HIDWORD(v5)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v5 = 0;
  }
  *(void *)uint64_t v12 = v5;
  *(void *)&v12[8] = v4;
  v12[16] = 0;
  v12[24] = 0;
  if (v5) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v5 = 0;
  }
  unint64_t v17 = v5;
  unint64_t v18 = v4;
  unint64_t v9 = HIDWORD(v4);
  if ((v9 & (v9 - 1)) != 0) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_215DA3CC4((size_t *)&v13, &v17, (void **)&v18, 1, (uint64_t)&v16, 1, v10);
  *(void *)(a3 + 24) = &unk_26C663A60;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(a3 + 64) = v13;
  *(void *)(a3 + 80) = v14;
  double result = v15[0];
  *(_OWORD *)(a3 + 88) = *(_OWORD *)v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586AD14@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  if (*a1) {
    unint64_t v3 = ((unint64_t)a1[2] << 32) | 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*a1) {
    uint64_t v4 = *(void *)a1;
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v3;
  *(void *)a2 = &unk_26C65FB98;
  *(_OWORD *)(a2 + 8) = v6;
  int v7 = &unk_26C665220;
  sub_215D92C68((uint64_t *)&v6, (uint64_t)v8);
  *(void *)(a2 + 24) = &unk_26C663A60;
  *(_OWORD *)(a2 + 32) = v9[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v9 + 12);
  *(_OWORD *)(a2 + 64) = v9[2];
  *(void *)(a2 + 80) = v10;
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + 88) = v11;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586AE00@<D0>(uint64_t *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C65FB98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  if (*((_DWORD *)a1 + 1)) {
    BOOL v4 = *(_DWORD *)a1 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  unint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  if (v4) {
    unint64_t v6 = 0;
  }
  *(void *)long long v11 = v6;
  *(void *)&v11[8] = a1[1];
  v11[16] = 0;
  v11[24] = 0;
  if (v6) {
    BOOL v7 = HIDWORD(v6) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = v6;
  }
  unint64_t v16 = v8;
  unint64_t v17 = v5;
  if ((HIDWORD(v5) & (HIDWORD(v5) - 1)) != 0) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = HIDWORD(v5);
  }
  sub_215DA3CC4((size_t *)&v12, &v16, (void **)&v17, 1, (uint64_t)&v15, 1, v9);
  *(void *)(a3 + 24) = &unk_26C663A60;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  double result = *(double *)&v14;
  *(_OWORD *)(a3 + 88) = v14;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586AF28@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = &unk_26C65FB98;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  sub_215D92C68(a1, (uint64_t)v4);
  *(void *)(a2 + 24) = &unk_26C663A60;
  *(_OWORD *)(a2 + 32) = v5[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v5 + 12);
  *(_OWORD *)(a2 + 64) = v5[2];
  *(void *)(a2 + 80) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a2 + 88) = v7;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586AFF0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  BOOL v6 = HIDWORD(*a1) == 0;
  if (!*a1) {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = (void *)(v7 | (*a1 != 0));
  char v15 = *a3;
  *(void *)a4 = &unk_26C65FB98;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v8;
  if (v6) {
    uint64_t v5 = 0;
  }
  *(void *)long long v11 = v5;
  *(void *)&v11[8] = v8;
  v11[16] = 0;
  v11[24] = 0;
  if (!v5) {
    BOOL v6 = 1;
  }
  if (v6) {
    uint64_t v5 = 0;
  }
  uint64_t v16 = v5;
  unint64_t v17 = v8;
  if ((HIDWORD(v7) & (HIDWORD(v7) - 1)) != 0) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = HIDWORD(v7);
  }
  sub_215DA3CC4((size_t *)&v12, &v16, &v17, 1, (uint64_t)&v15, 1, v9);
  *(void *)(a4 + 24) = &unk_26C663A60;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a4 + 64) = v12;
  *(void *)(a4 + 80) = v13;
  double result = v14[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v14;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586B130@<D0>(void *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4 = *a1 != 0;
  if (*a1) {
    BOOL v5 = HIDWORD(*a1) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  *(void *)&long long v8 = *a1;
  *((void *)&v8 + 1) = v6 | v4;
  *(void *)a3 = &unk_26C65FB98;
  *(_OWORD *)(a3 + 8) = v8;
  uint64_t v9 = &unk_26C665220;
  sub_215D92C68((uint64_t *)&v8, (uint64_t)v10);
  *(void *)(a3 + 24) = &unk_26C663A60;
  *(_OWORD *)(a3 + 32) = v11[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v11 + 12);
  *(_OWORD *)(a3 + 64) = v11[2];
  *(void *)(a3 + 80) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 88) = v13;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586B224@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  unsigned int v5 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      unint64_t v8 = (unint64_t)(v7 + v5) << 32;
    }
    else
    {
      unint64_t v8 = 0;
    }
    uint64_t v9 = 1;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = (void *)(v9 | v8);
  unint64_t v11 = *(void *)a1;
  char v23 = *a3;
  *(void *)a4 = &unk_26C65FB98;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v10;
  if (HIDWORD(v11)) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  if (v12) {
    unint64_t v11 = 0;
  }
  *(void *)BOOL v19 = v11;
  *(void *)&v19[8] = v10;
  v19[16] = 0;
  v19[24] = 0;
  uint64_t v25 = v10;
  if (v11) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (v14) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = v11;
  }
  unint64_t v24 = v15;
  unint64_t v16 = HIDWORD(v8);
  if ((v16 & (v16 - 1)) != 0) {
    uint64_t v17 = 1;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_215DA3CC4((size_t *)&v20, &v24, &v25, 1, (uint64_t)&v23, 1, v17);
  *(void *)(a4 + 24) = &unk_26C663A60;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v19;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v19[12];
  *(_OWORD *)(a4 + 64) = v20;
  *(void *)(a4 + 80) = v21;
  double result = v22[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v22;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586B398@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *(void *)&long long v10 = *(void *)a1;
  *((void *)&v10 + 1) = v8 | v7;
  *(void *)a3 = &unk_26C65FB98;
  *(_OWORD *)(a3 + 8) = v10;
  unint64_t v11 = &unk_26C665220;
  sub_215D92C68((uint64_t *)&v10, (uint64_t)v12);
  *(void *)(a3 + 24) = &unk_26C663A60;
  *(_OWORD *)(a3 + 32) = v13[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(a3 + 64) = v13[2];
  *(void *)(a3 + 80) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a3 + 88) = v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

uint64_t sub_21586B4B8@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *((_DWORD *)a1 + 2);
  BOOL v3 = a2 != 0;
  if (*((_DWORD *)a1 + 3)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  v7[0] = *((void *)a1 + 1);
  v7[1] = v3 | (a2 << 32);
  long long v5 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  return sub_215839340(v2, v7, (size_t)&v5);
}

uint64_t sub_21586B514@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  BOOL v4 = *((void *)a1 + 1) != 0;
  if (*((void *)a1 + 1)) {
    BOOL v5 = HIDWORD(*((void *)a1 + 1)) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  v10[0] = *((void *)a1 + 1);
  v10[1] = v6 | v4;
  long long v8 = *a1;
  uint64_t v9 = v3;
  return sub_215839340(a3, v10, (size_t)&v8);
}

uint64_t sub_21586B574@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *((_DWORD *)a1 + 2);
  if (v4)
  {
    if (*((_DWORD *)a1 + 3))
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = *((void *)a1 + 2);
  v13[0] = *((void *)a1 + 1);
  v13[1] = v8 | v7;
  long long v11 = *a1;
  uint64_t v12 = v9;
  return sub_215839340(a3, v13, (size_t)&v11);
}

__n128 sub_21586B600(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21586B614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663A60;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

double sub_21586B660@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a3;
  LODWORD(a3) = *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v4 = (*a1 != 0) | (unint64_t)(a3 << 32);
  unint64_t v5 = *(void *)a1;
  __int16 v17 = *a2;
  *(void *)uint64_t v3 = &unk_26C65FC18;
  *(void *)(v3 + 8) = v5;
  *(void *)(v3 + 16) = v4;
  if (HIDWORD(v5)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v5 = 0;
  }
  *(void *)int v13 = v5;
  *(void *)&v13[8] = v4;
  v13[16] = 0;
  v13[24] = 0;
  unint64_t v19 = v4;
  if (v5) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v18 = v9;
  uint64_t v10 = 2 * a3;
  if ((v10 & (v10 - 1)) != 0) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_215DA906C((unint64_t *)&v14, &v18, &v19, 1, &v17, 1, v11);
  *(void *)(v3 + 24) = &unk_26C663AE0;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v13;
  *(_OWORD *)(v3 + 44) = *(_OWORD *)&v13[12];
  *(_OWORD *)(v3 + 64) = v14;
  *(void *)(v3 + 80) = v15;
  double result = v16[0];
  *(_OWORD *)(v3 + 88) = *(_OWORD *)v16;
  *(_DWORD *)(v3 + 104) = 1;
  return result;
}

void sub_21586B7A8()
{
}

double sub_21586B7BC@<D0>(uint64_t a1@<X8>)
{
  __int16 v7 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26C65FC18;
  v3[24] = 0;
  memset(v3, 0, 17);
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  sub_215DA906C((unint64_t *)&v4, &v8, &v9, 1, &v7, 1, 0);
  *(void *)(a1 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a1 + 32) = 0uLL;
  *(_OWORD *)(a1 + 44) = *(_OWORD *)&v3[12];
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = v5;
  double result = v6[0];
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v6;
  *(_DWORD *)(a1 + 104) = 1;
  return result;
}

double sub_21586B8A8@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *a1;
  BOOL v3 = *a1 != 0;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  *(void *)&long long v5 = *(void *)a1;
  *((void *)&v5 + 1) = v3 | (a2 << 32);
  *(void *)uint64_t v2 = &unk_26C65FC18;
  *(_OWORD *)(v2 + 8) = v5;
  BOOL v6 = &unk_26C665250;
  sub_215D92EA0((uint64_t *)&v5, (uint64_t)v7);
  *(void *)(v2 + 24) = &unk_26C663AE0;
  *(_OWORD *)(v2 + 32) = v8[0];
  *(_OWORD *)(v2 + 44) = *(_OWORD *)((char *)v8 + 12);
  *(_OWORD *)(v2 + 64) = v8[2];
  *(void *)(v2 + 80) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(v2 + 88) = v10;
  *(_DWORD *)(v2 + 104) = 1;
  return result;
}

double sub_21586B994@<D0>(unint64_t *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  if (*(_DWORD *)a1)
  {
    unint64_t v4 = *a1;
    unint64_t v5 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 1) & 0x7FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v5 = 0;
    unint64_t v4 = 0;
  }
  __int16 v16 = *a2;
  *(void *)a3 = &unk_26C65FC18;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  if (HIDWORD(v4)) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v4 = 0;
  }
  *(void *)uint64_t v12 = v4;
  *(void *)&unsigned char v12[8] = v5;
  v12[16] = 0;
  v12[24] = 0;
  if (v4) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v4 = 0;
  }
  unint64_t v17 = v4;
  unint64_t v18 = v5;
  uint64_t v9 = (v5 >> 31) & 0xFFFFFFFE;
  if ((v9 & (v9 - 1)) != 0) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_215DA906C((unint64_t *)&v13, &v17, &v18, 1, &v16, 1, v10);
  *(void *)(a3 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(a3 + 64) = v13;
  *(void *)(a3 + 80) = v14;
  double result = v15[0];
  *(_OWORD *)(a3 + 88) = *(_OWORD *)v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586BAE4@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)a1)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 1) & 0x7FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  *(void *)&long long v6 = v3;
  *((void *)&v6 + 1) = v4;
  *(void *)a2 = &unk_26C65FC18;
  *(_OWORD *)(a2 + 8) = v6;
  int v7 = &unk_26C665250;
  sub_215D92EA0((uint64_t *)&v6, (uint64_t)v8);
  *(void *)(a2 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a2 + 32) = v9[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v9 + 12);
  *(_OWORD *)(a2 + 64) = v9[2];
  *(void *)(a2 + 80) = v10;
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + 88) = v11;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586BBDC@<D0>(uint64_t *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C65FC18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  if (*((_DWORD *)a1 + 1)) {
    BOOL v4 = *(_DWORD *)a1 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  unint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  if (v4) {
    unint64_t v6 = 0;
  }
  *(void *)long long v11 = v6;
  *(void *)&v11[8] = a1[1];
  v11[16] = 0;
  v11[24] = 0;
  if (v6) {
    BOOL v7 = HIDWORD(v6) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = v6;
  }
  unint64_t v16 = v8;
  unint64_t v17 = v5;
  if (((v5 >> 31) & 0x1FFFFFFFELL & (((v5 >> 31) & 0x1FFFFFFFELL) - 1)) != 0) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = (v5 >> 31) & 0x1FFFFFFFELL;
  }
  sub_215DA906C((unint64_t *)&v12, &v16, &v17, 1, &v15, 1, v9);
  *(void *)(a3 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  double result = v14[0];
  *(_OWORD *)(a3 + 88) = *(_OWORD *)v14;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586BD0C@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = &unk_26C65FC18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  sub_215D92EA0(a1, (uint64_t)v4);
  *(void *)(a2 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a2 + 32) = v5[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v5 + 12);
  *(_OWORD *)(a2 + 64) = v5[2];
  *(void *)(a2 + 80) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a2 + 88) = v7;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586BDD4@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  BOOL v6 = HIDWORD(*a1) == 0;
  if (!*a1) {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | (*a1 != 0);
  __int16 v15 = *a3;
  *(void *)a4 = &unk_26C65FC18;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v8;
  if (v6) {
    uint64_t v5 = 0;
  }
  *(void *)long long v11 = v5;
  *(void *)&v11[8] = v8;
  v11[16] = 0;
  v11[24] = 0;
  if (!v5) {
    BOOL v6 = 1;
  }
  if (v6) {
    uint64_t v5 = 0;
  }
  uint64_t v16 = v5;
  unint64_t v17 = v8;
  if (((v7 >> 31) & ((v7 >> 31) - 1)) != 0) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = v7 >> 31;
  }
  sub_215DA906C((unint64_t *)&v12, &v16, &v17, 1, &v15, 1, v9);
  *(void *)(a4 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a4 + 64) = v12;
  *(void *)(a4 + 80) = v13;
  double result = v14[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v14;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586BF18@<D0>(void *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4 = *a1 != 0;
  if (*a1) {
    BOOL v5 = HIDWORD(*a1) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  *(void *)&long long v8 = *a1;
  *((void *)&v8 + 1) = v6 | v4;
  *(void *)a3 = &unk_26C65FC18;
  *(_OWORD *)(a3 + 8) = v8;
  uint64_t v9 = &unk_26C665250;
  sub_215D92EA0((uint64_t *)&v8, (uint64_t)v10);
  *(void *)(a3 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a3 + 32) = v11[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v11 + 12);
  *(_OWORD *)(a3 + 64) = v11[2];
  *(void *)(a3 + 80) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 88) = v13;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586C00C@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  unsigned int v5 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      unint64_t v8 = (unint64_t)(v7 + v5) << 32;
    }
    else
    {
      unint64_t v8 = 0;
    }
    uint64_t v9 = 1;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  unint64_t v10 = v9 | v8;
  unint64_t v11 = *(void *)a1;
  __int16 v23 = *a3;
  *(void *)a4 = &unk_26C65FC18;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v10;
  if (HIDWORD(v11)) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  if (v12) {
    unint64_t v11 = 0;
  }
  *(void *)unint64_t v19 = v11;
  *(void *)&v19[8] = v10;
  v19[16] = 0;
  v19[24] = 0;
  unint64_t v25 = v10;
  if (v11) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (v14) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = v11;
  }
  unint64_t v24 = v15;
  unint64_t v16 = v8 >> 31;
  if ((v16 & (v16 - 1)) != 0) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_215DA906C((unint64_t *)&v20, &v24, &v25, 1, &v23, 1, v17);
  *(void *)(a4 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v19;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v19[12];
  *(_OWORD *)(a4 + 64) = v20;
  *(void *)(a4 + 80) = v21;
  double result = v22[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v22;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586C184@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *(void *)&long long v10 = *(void *)a1;
  *((void *)&v10 + 1) = v8 | v7;
  *(void *)a3 = &unk_26C65FC18;
  *(_OWORD *)(a3 + 8) = v10;
  unint64_t v11 = &unk_26C665250;
  sub_215D92EA0((uint64_t *)&v10, (uint64_t)v12);
  *(void *)(a3 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a3 + 32) = v13[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(a3 + 64) = v13[2];
  *(void *)(a3 + 80) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a3 + 88) = v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

uint64_t sub_21586C2A4@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *((_DWORD *)a1 + 2);
  BOOL v3 = a2 != 0;
  if (*((_DWORD *)a1 + 3)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  v7[0] = *((void *)a1 + 1);
  v7[1] = v3 | (a2 << 32);
  long long v5 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  return sub_215839BE0(v2, v7, (uint64_t *)&v5);
}

uint64_t sub_21586C300@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  BOOL v4 = *((void *)a1 + 1) != 0;
  if (*((void *)a1 + 1)) {
    BOOL v5 = HIDWORD(*((void *)a1 + 1)) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  v10[0] = *((void *)a1 + 1);
  v10[1] = v6 | v4;
  long long v8 = *a1;
  uint64_t v9 = v3;
  return sub_215839BE0(a3, v10, (uint64_t *)&v8);
}

uint64_t sub_21586C360@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *((_DWORD *)a1 + 2);
  if (v4)
  {
    if (*((_DWORD *)a1 + 3))
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = *((void *)a1 + 2);
  v13[0] = *((void *)a1 + 1);
  v13[1] = v8 | v7;
  long long v11 = *a1;
  uint64_t v12 = v9;
  return sub_215839BE0(a3, v13, (uint64_t *)&v11);
}

__n128 sub_21586C3EC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21586C400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663AE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

uint64_t sub_21586C44C@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a3;
  LODWORD(a3) = *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v4 = (*a1 != 0) | (unint64_t)(a3 << 32);
  unint64_t v5 = *(void *)a1;
  __int16 v18 = *a2;
  *(void *)uint64_t v3 = &unk_26C65FC98;
  *(void *)(v3 + 8) = v5;
  *(void *)(v3 + 16) = v4;
  if (HIDWORD(v5)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v5 = 0;
  }
  int v13 = &unk_26C663B60;
  *(void *)uint64_t v14 = v5;
  *(void *)&v14[8] = v4;
  v14[16] = 0;
  v14[24] = 0;
  unint64_t v20 = v4;
  if (v5) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v19 = v9;
  uint64_t v10 = 2 * a3;
  if ((v10 & (v10 - 1)) != 0) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_215DA92D8((unint64_t *)&v15, &v19, &v20, 1, &v18, 1, v11);
  *(void *)(v3 + 24) = &unk_26C663B60;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v14;
  *(_OWORD *)(v3 + 44) = *(_OWORD *)&v14[12];
  *(_OWORD *)(v3 + 64) = v15;
  *(void *)(v3 + 80) = v16;
  long long v15 = 0uLL;
  *(_OWORD *)(v3 + 88) = v17;
  *(_DWORD *)(v3 + 104) = 1;
  return sub_215D7D7C4((uint64_t)&v13);
}

void sub_21586C5A0()
{
}

uint64_t sub_21586C5B4@<X0>(uint64_t a1@<X8>)
{
  __int16 v7 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26C65FC98;
  LOBYTE(v3[4]) = 0;
  memset(&v3[1], 0, 17);
  v3[0] = &unk_26C663B60;
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  sub_215DA92D8((unint64_t *)&v4, &v8, &v9, 1, &v7, 1, 0);
  *(void *)(a1 + 24) = &unk_26C663B60;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v3[1];
  *(_OWORD *)(a1 + 44) = *(_OWORD *)((char *)&v3[2] + 4);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = v5;
  long long v4 = 0uLL;
  *(_OWORD *)(a1 + 88) = v6;
  *(_DWORD *)(a1 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v3);
}

uint64_t sub_21586C6AC@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *a1;
  BOOL v3 = *a1 != 0;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  *(void *)&long long v5 = *(void *)a1;
  *((void *)&v5 + 1) = v3 | (a2 << 32);
  *(void *)uint64_t v2 = &unk_26C65FC98;
  *(_OWORD *)(v2 + 8) = v5;
  long long v6 = &unk_26C665280;
  sub_215D930F0((uint64_t *)&v5, (uint64_t)v7);
  *(void *)(v2 + 24) = &unk_26C663B60;
  *(_OWORD *)(v2 + 32) = v8[0];
  *(_OWORD *)(v2 + 44) = *(_OWORD *)((char *)v8 + 12);
  *(_OWORD *)(v2 + 64) = v9;
  *(void *)(v2 + 80) = v10;
  long long v9 = 0uLL;
  *(_OWORD *)(v2 + 88) = v11;
  *(_DWORD *)(v2 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v7);
}

uint64_t sub_21586C7A4@<X0>(unint64_t *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  if (*(_DWORD *)a1)
  {
    unint64_t v4 = *a1;
    unint64_t v5 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 1) & 0x7FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v5 = 0;
    unint64_t v4 = 0;
  }
  __int16 v17 = *a2;
  *(void *)a3 = &unk_26C65FC98;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  if (HIDWORD(v4)) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v4 = 0;
  }
  uint64_t v12 = &unk_26C663B60;
  *(void *)int v13 = v4;
  *(void *)&v13[8] = v5;
  v13[16] = 0;
  v13[24] = 0;
  if (v4) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v4 = 0;
  }
  unint64_t v18 = v4;
  unint64_t v19 = v5;
  uint64_t v9 = (v5 >> 31) & 0xFFFFFFFE;
  if ((v9 & (v9 - 1)) != 0) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_215DA92D8((unint64_t *)&v14, &v18, &v19, 1, &v17, 1, v10);
  *(void *)(a3 + 24) = &unk_26C663B60;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v13;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v13[12];
  *(_OWORD *)(a3 + 64) = v14;
  *(void *)(a3 + 80) = v15;
  long long v14 = 0uLL;
  *(_OWORD *)(a3 + 88) = v16;
  *(_DWORD *)(a3 + 104) = 1;
  return sub_215D7D7C4((uint64_t)&v12);
}

uint64_t sub_21586C900@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)a1)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 1) & 0x7FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  *(void *)&long long v6 = v3;
  *((void *)&v6 + 1) = v4;
  *(void *)a2 = &unk_26C65FC98;
  *(_OWORD *)(a2 + 8) = v6;
  int v7 = &unk_26C665280;
  sub_215D930F0((uint64_t *)&v6, (uint64_t)v8);
  *(void *)(a2 + 24) = &unk_26C663B60;
  *(_OWORD *)(a2 + 32) = v9[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v9 + 12);
  *(_OWORD *)(a2 + 64) = v10;
  *(void *)(a2 + 80) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 88) = v12;
  *(_DWORD *)(a2 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v8);
}

uint64_t sub_21586CA04@<X0>(uint64_t *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v16 = *a2;
  *(void *)a3 = &unk_26C65FC98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  if (*((_DWORD *)a1 + 1)) {
    BOOL v4 = *(_DWORD *)a1 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  unint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  if (v4) {
    unint64_t v6 = 0;
  }
  uint64_t v11 = &unk_26C663B60;
  *(void *)long long v12 = v6;
  *(void *)&unsigned char v12[8] = v5;
  v12[16] = 0;
  v12[24] = 0;
  if (v6) {
    BOOL v7 = HIDWORD(v6) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = v6;
  }
  unint64_t v17 = v8;
  unint64_t v18 = v5;
  if (((v5 >> 31) & 0x1FFFFFFFELL & (((v5 >> 31) & 0x1FFFFFFFELL) - 1)) != 0) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = (v5 >> 31) & 0x1FFFFFFFELL;
  }
  sub_215DA92D8((unint64_t *)&v13, &v17, &v18, 1, &v16, 1, v9);
  *(void *)(a3 + 24) = &unk_26C663B60;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(a3 + 64) = v13;
  *(void *)(a3 + 80) = v14;
  long long v13 = 0uLL;
  *(_OWORD *)(a3 + 88) = v15;
  *(_DWORD *)(a3 + 104) = 1;
  return sub_215D7D7C4((uint64_t)&v11);
}

uint64_t sub_21586CB40@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = &unk_26C65FC98;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  sub_215D930F0(a1, (uint64_t)v4);
  *(void *)(a2 + 24) = &unk_26C663B60;
  *(_OWORD *)(a2 + 32) = v5[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v5 + 12);
  *(_OWORD *)(a2 + 64) = v6;
  *(void *)(a2 + 80) = v7;
  long long v6 = 0uLL;
  *(_OWORD *)(a2 + 88) = v8;
  *(_DWORD *)(a2 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v4);
}

uint64_t sub_21586CC14@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  BOOL v6 = HIDWORD(*a1) == 0;
  if (!*a1) {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | (*a1 != 0);
  __int16 v16 = *a3;
  *(void *)a4 = &unk_26C65FC98;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v8;
  if (v6) {
    uint64_t v5 = 0;
  }
  uint64_t v11 = &unk_26C663B60;
  *(void *)long long v12 = v5;
  *(void *)&unsigned char v12[8] = v8;
  v12[16] = 0;
  v12[24] = 0;
  if (!v5) {
    BOOL v6 = 1;
  }
  if (v6) {
    uint64_t v5 = 0;
  }
  uint64_t v17 = v5;
  unint64_t v18 = v8;
  if (((v7 >> 31) & ((v7 >> 31) - 1)) != 0) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = v7 >> 31;
  }
  sub_215DA92D8((unint64_t *)&v13, &v17, &v18, 1, &v16, 1, v9);
  *(void *)(a4 + 24) = &unk_26C663B60;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(a4 + 64) = v13;
  *(void *)(a4 + 80) = v14;
  long long v13 = 0uLL;
  *(_OWORD *)(a4 + 88) = v15;
  *(_DWORD *)(a4 + 104) = 1;
  return sub_215D7D7C4((uint64_t)&v11);
}

uint64_t sub_21586CD64@<X0>(void *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4 = *a1 != 0;
  if (*a1) {
    BOOL v5 = HIDWORD(*a1) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  *(void *)&long long v8 = *a1;
  *((void *)&v8 + 1) = v6 | v4;
  *(void *)a3 = &unk_26C65FC98;
  *(_OWORD *)(a3 + 8) = v8;
  uint64_t v9 = &unk_26C665280;
  sub_215D930F0((uint64_t *)&v8, (uint64_t)v10);
  *(void *)(a3 + 24) = &unk_26C663B60;
  *(_OWORD *)(a3 + 32) = v11[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v11 + 12);
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  long long v12 = 0uLL;
  *(_OWORD *)(a3 + 88) = v14;
  *(_DWORD *)(a3 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v10);
}

uint64_t sub_21586CE64@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  unsigned int v5 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      unint64_t v8 = (unint64_t)(v7 + v5) << 32;
    }
    else
    {
      unint64_t v8 = 0;
    }
    uint64_t v9 = 1;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  unint64_t v10 = v9 | v8;
  unint64_t v11 = *(void *)a1;
  __int16 v24 = *a3;
  *(void *)a4 = &unk_26C65FC98;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v10;
  if (HIDWORD(v11)) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  if (v12) {
    unint64_t v11 = 0;
  }
  unint64_t v19 = &unk_26C663B60;
  *(void *)unint64_t v20 = v11;
  *(void *)&v20[8] = v10;
  v20[16] = 0;
  v20[24] = 0;
  unint64_t v26 = v10;
  if (v11) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (v14) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = v11;
  }
  unint64_t v25 = v15;
  unint64_t v16 = v8 >> 31;
  if ((v16 & (v16 - 1)) != 0) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_215DA92D8((unint64_t *)&v21, &v25, &v26, 1, &v24, 1, v17);
  *(void *)(a4 + 24) = &unk_26C663B60;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v20;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v20[12];
  *(_OWORD *)(a4 + 64) = v21;
  *(void *)(a4 + 80) = v22;
  long long v21 = 0uLL;
  *(_OWORD *)(a4 + 88) = v23;
  *(_DWORD *)(a4 + 104) = 1;
  return sub_215D7D7C4((uint64_t)&v19);
}

uint64_t sub_21586CFE8@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *(void *)&long long v10 = *(void *)a1;
  *((void *)&v10 + 1) = v8 | v7;
  *(void *)a3 = &unk_26C65FC98;
  *(_OWORD *)(a3 + 8) = v10;
  unint64_t v11 = &unk_26C665280;
  sub_215D930F0((uint64_t *)&v10, (uint64_t)v12);
  *(void *)(a3 + 24) = &unk_26C663B60;
  *(_OWORD *)(a3 + 32) = v13[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(a3 + 64) = v14;
  *(void *)(a3 + 80) = v15;
  long long v14 = 0uLL;
  *(_OWORD *)(a3 + 88) = v16;
  *(_DWORD *)(a3 + 104) = 1;
  return sub_215D7D7C4((uint64_t)v12);
}

uint64_t sub_21586D114@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *((_DWORD *)a1 + 2);
  BOOL v3 = a2 != 0;
  if (*((_DWORD *)a1 + 3)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  v7[0] = *((void *)a1 + 1);
  v7[1] = v3 | (a2 << 32);
  long long v5 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  return sub_21583A46C(v2, v7, (uint64_t)&v5);
}

uint64_t sub_21586D170@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  BOOL v4 = *((void *)a1 + 1) != 0;
  if (*((void *)a1 + 1)) {
    BOOL v5 = HIDWORD(*((void *)a1 + 1)) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  v10[0] = *((void *)a1 + 1);
  v10[1] = v6 | v4;
  long long v8 = *a1;
  uint64_t v9 = v3;
  return sub_21583A46C(a3, v10, (uint64_t)&v8);
}

uint64_t sub_21586D1D0@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *((_DWORD *)a1 + 2);
  if (v4)
  {
    if (*((_DWORD *)a1 + 3))
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = *((void *)a1 + 2);
  v13[0] = *((void *)a1 + 1);
  v13[1] = v8 | v7;
  long long v11 = *a1;
  uint64_t v12 = v9;
  return sub_21583A46C(a3, v13, (uint64_t)&v11);
}

__n128 sub_21586D25C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21586D270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663B60;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

double sub_21586D2BC@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = a3;
  LODWORD(a3) = *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v4 = (*a1 != 0) | (unint64_t)(a3 << 32);
  unint64_t v5 = *(void *)a1;
  int v17 = *a2;
  *(void *)uint64_t v3 = &unk_26C65FD18;
  *(void *)(v3 + 8) = v5;
  *(void *)(v3 + 16) = v4;
  if (HIDWORD(v5)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v5 = 0;
  }
  *(void *)int v13 = v5;
  *(void *)&v13[8] = v4;
  v13[16] = 0;
  v13[24] = 0;
  unint64_t v19 = v4;
  if (v5) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v18 = v9;
  uint64_t v10 = 4 * a3;
  if ((v10 & (v10 - 1)) != 0) {
    uint64_t v11 = 4;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_215DA9608((unint64_t *)&v14, &v18, &v19, 1, &v17, 1, v11);
  *(void *)(v3 + 24) = &unk_26C663BE0;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v13;
  *(_OWORD *)(v3 + 44) = *(_OWORD *)&v13[12];
  *(_OWORD *)(v3 + 64) = v14;
  *(void *)(v3 + 80) = v15;
  double result = v16[0];
  *(_OWORD *)(v3 + 88) = *(_OWORD *)v16;
  *(_DWORD *)(v3 + 104) = 1;
  return result;
}

void sub_21586D404()
{
}

double sub_21586D418@<D0>(uint64_t a1@<X8>)
{
  int v7 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26C65FD18;
  v3[24] = 0;
  memset(v3, 0, 17);
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  sub_215DA9608((unint64_t *)&v4, &v8, &v9, 1, &v7, 1, 0);
  *(void *)(a1 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a1 + 32) = 0uLL;
  *(_OWORD *)(a1 + 44) = *(_OWORD *)&v3[12];
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = v5;
  double result = v6[0];
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v6;
  *(_DWORD *)(a1 + 104) = 1;
  return result;
}

double sub_21586D504@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *a1;
  BOOL v3 = *a1 != 0;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  *(void *)&long long v5 = *(void *)a1;
  *((void *)&v5 + 1) = v3 | (a2 << 32);
  *(void *)uint64_t v2 = &unk_26C65FD18;
  *(_OWORD *)(v2 + 8) = v5;
  BOOL v6 = &unk_26C6652B0;
  sub_215D93398((uint64_t *)&v5, (uint64_t)v7);
  *(void *)(v2 + 24) = &unk_26C663BE0;
  *(_OWORD *)(v2 + 32) = v8[0];
  *(_OWORD *)(v2 + 44) = *(_OWORD *)((char *)v8 + 12);
  *(_OWORD *)(v2 + 64) = v8[2];
  *(void *)(v2 + 80) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(v2 + 88) = v10;
  *(_DWORD *)(v2 + 104) = 1;
  return result;
}

double sub_21586D5F0@<D0>(unint64_t *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  if (*(_DWORD *)a1)
  {
    unint64_t v4 = *a1;
    unint64_t v5 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 2) & 0x3FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v5 = 0;
    unint64_t v4 = 0;
  }
  int v16 = *a2;
  *(void *)a3 = &unk_26C65FD18;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  if (HIDWORD(v4)) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  if (v6) {
    unint64_t v4 = 0;
  }
  *(void *)uint64_t v12 = v4;
  *(void *)&unsigned char v12[8] = v5;
  v12[16] = 0;
  v12[24] = 0;
  if (v4) {
    int v8 = v7;
  }
  else {
    int v8 = 1;
  }
  if (v8) {
    unint64_t v4 = 0;
  }
  unint64_t v17 = v4;
  unint64_t v18 = v5;
  uint64_t v9 = (v5 >> 30) & 0xFFFFFFFC;
  if ((v9 & (v9 - 1)) != 0) {
    uint64_t v10 = 4;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_215DA9608((unint64_t *)&v13, &v17, &v18, 1, &v16, 1, v10);
  *(void *)(a3 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v12;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v12[12];
  *(_OWORD *)(a3 + 64) = v13;
  *(void *)(a3 + 80) = v14;
  double result = v15[0];
  *(_OWORD *)(a3 + 88) = *(_OWORD *)v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586D740@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)a1)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = ((((unint64_t)*((unsigned int *)a1 + 2) >> 2) & 0x3FFFFFFF) << 32) | 1;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  *(void *)&long long v6 = v3;
  *((void *)&v6 + 1) = v4;
  *(void *)a2 = &unk_26C65FD18;
  *(_OWORD *)(a2 + 8) = v6;
  int v7 = &unk_26C6652B0;
  sub_215D93398((uint64_t *)&v6, (uint64_t)v8);
  *(void *)(a2 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a2 + 32) = v9[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v9 + 12);
  *(_OWORD *)(a2 + 64) = v9[2];
  *(void *)(a2 + 80) = v10;
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + 88) = v11;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586D838@<D0>(uint64_t *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C65FD18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  if (*((_DWORD *)a1 + 1)) {
    BOOL v4 = *(_DWORD *)a1 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  unint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  if (v4) {
    unint64_t v6 = 0;
  }
  *(void *)long long v11 = v6;
  *(void *)&v11[8] = a1[1];
  v11[16] = 0;
  v11[24] = 0;
  if (v6) {
    BOOL v7 = HIDWORD(v6) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = v6;
  }
  unint64_t v16 = v8;
  unint64_t v17 = v5;
  if (((v5 >> 30) & 0x3FFFFFFFCLL & (((v5 >> 30) & 0x3FFFFFFFCLL) - 1)) != 0) {
    uint64_t v9 = 4;
  }
  else {
    uint64_t v9 = (v5 >> 30) & 0x3FFFFFFFCLL;
  }
  sub_215DA9608((unint64_t *)&v12, &v16, &v17, 1, &v15, 1, v9);
  *(void *)(a3 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  double result = v14[0];
  *(_OWORD *)(a3 + 88) = *(_OWORD *)v14;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586D968@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = &unk_26C65FD18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  sub_215D93398(a1, (uint64_t)v4);
  *(void *)(a2 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a2 + 32) = v5[0];
  *(_OWORD *)(a2 + 44) = *(_OWORD *)((char *)v5 + 12);
  *(_OWORD *)(a2 + 64) = v5[2];
  *(void *)(a2 + 80) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a2 + 88) = v7;
  *(_DWORD *)(a2 + 104) = 1;
  return result;
}

double sub_21586DA30@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  BOOL v6 = HIDWORD(*a1) == 0;
  if (!*a1) {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | (*a1 != 0);
  int v15 = *a3;
  *(void *)a4 = &unk_26C65FD18;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v8;
  if (v6) {
    uint64_t v5 = 0;
  }
  *(void *)long long v11 = v5;
  *(void *)&v11[8] = v8;
  v11[16] = 0;
  v11[24] = 0;
  if (!v5) {
    BOOL v6 = 1;
  }
  if (v6) {
    uint64_t v5 = 0;
  }
  uint64_t v16 = v5;
  unint64_t v17 = v8;
  if (((v7 >> 30) & ((v7 >> 30) - 1)) != 0) {
    uint64_t v9 = 4;
  }
  else {
    uint64_t v9 = v7 >> 30;
  }
  sub_215DA9608((unint64_t *)&v12, &v16, &v17, 1, &v15, 1, v9);
  *(void *)(a4 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v11;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v11[12];
  *(_OWORD *)(a4 + 64) = v12;
  *(void *)(a4 + 80) = v13;
  double result = v14[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v14;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586DB74@<D0>(void *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4 = *a1 != 0;
  if (*a1) {
    BOOL v5 = HIDWORD(*a1) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  *(void *)&long long v8 = *a1;
  *((void *)&v8 + 1) = v6 | v4;
  *(void *)a3 = &unk_26C65FD18;
  *(_OWORD *)(a3 + 8) = v8;
  uint64_t v9 = &unk_26C6652B0;
  sub_215D93398((uint64_t *)&v8, (uint64_t)v10);
  *(void *)(a3 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a3 + 32) = v11[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v11 + 12);
  *(_OWORD *)(a3 + 64) = v11[2];
  *(void *)(a3 + 80) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 88) = v13;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

double sub_21586DC68@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  unsigned int v5 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      unint64_t v8 = (unint64_t)(v7 + v5) << 32;
    }
    else
    {
      unint64_t v8 = 0;
    }
    uint64_t v9 = 1;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  unint64_t v10 = v9 | v8;
  unint64_t v11 = *(void *)a1;
  int v23 = *a3;
  *(void *)a4 = &unk_26C65FD18;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v10;
  if (HIDWORD(v11)) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  if (v12) {
    unint64_t v11 = 0;
  }
  *(void *)unint64_t v19 = v11;
  *(void *)&v19[8] = v10;
  v19[16] = 0;
  v19[24] = 0;
  unint64_t v25 = v10;
  if (v11) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (v14) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = v11;
  }
  unint64_t v24 = v15;
  unint64_t v16 = v8 >> 30;
  if ((v16 & (v16 - 1)) != 0) {
    uint64_t v17 = 4;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_215DA9608((unint64_t *)&v20, &v24, &v25, 1, &v23, 1, v17);
  *(void *)(a4 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)v19;
  *(_OWORD *)(a4 + 44) = *(_OWORD *)&v19[12];
  *(_OWORD *)(a4 + 64) = v20;
  *(void *)(a4 + 80) = v21;
  double result = v22[0];
  *(_OWORD *)(a4 + 88) = *(_OWORD *)v22;
  *(_DWORD *)(a4 + 104) = 1;
  return result;
}

double sub_21586DDE0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *a1;
  if (*a1)
  {
    if (a1[1])
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  *(void *)&long long v10 = *(void *)a1;
  *((void *)&v10 + 1) = v8 | v7;
  *(void *)a3 = &unk_26C65FD18;
  *(_OWORD *)(a3 + 8) = v10;
  unint64_t v11 = &unk_26C6652B0;
  sub_215D93398((uint64_t *)&v10, (uint64_t)v12);
  *(void *)(a3 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a3 + 32) = v13[0];
  *(_OWORD *)(a3 + 44) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(a3 + 64) = v13[2];
  *(void *)(a3 + 80) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a3 + 88) = v15;
  *(_DWORD *)(a3 + 104) = 1;
  return result;
}

uint64_t sub_21586DF00@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  LODWORD(a2) = *((_DWORD *)a1 + 2);
  BOOL v3 = a2 != 0;
  if (*((_DWORD *)a1 + 3)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  v7[0] = *((void *)a1 + 1);
  v7[1] = v3 | (a2 << 32);
  long long v5 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  return sub_21583AD38(v2, v7, (uint64_t)&v5);
}

uint64_t sub_21586DF5C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  BOOL v4 = *((void *)a1 + 1) != 0;
  if (*((void *)a1 + 1)) {
    BOOL v5 = HIDWORD(*((void *)a1 + 1)) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  v10[0] = *((void *)a1 + 1);
  v10[1] = v6 | v4;
  long long v8 = *a1;
  uint64_t v9 = v3;
  return sub_21583AD38(a3, v10, (uint64_t)&v8);
}

uint64_t sub_21586DFBC@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  unsigned int v4 = *((_DWORD *)a1 + 2);
  if (v4)
  {
    if (*((_DWORD *)a1 + 3))
    {
      int v5 = v4 % *a2;
      int v6 = *a2 - v5;
      if (!v5) {
        int v6 = 0;
      }
      unint64_t v7 = (unint64_t)(v6 + v4) << 32;
    }
    else
    {
      unint64_t v7 = 0;
    }
    uint64_t v8 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = *((void *)a1 + 2);
  v13[0] = *((void *)a1 + 1);
  v13[1] = v8 | v7;
  long long v11 = *a1;
  uint64_t v12 = v9;
  return sub_21583AD38(a3, v13, (uint64_t)&v11);
}

__n128 sub_21586E048(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21586E05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663BE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(a2 + 20) = *(_OWORD *)(a3 + 20);
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

double sub_21586E0A8@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 2 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a3 >> 1) << 33);
  *(_DWORD *)uint64_t v12 = 2;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)uint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C65FD98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D7E444((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C663C60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21586E210()
{
}

double sub_21586E224@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 2;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C65FD98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D7E444((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663C60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21586E360@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)uint64_t v11 = 2;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C65FD98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6652E0;
  sub_215D935F0((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663C60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21586E4DC@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 2;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 2;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 2;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C65FD98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D7E444((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663C60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21586E664@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 2;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 2;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 2;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C65FD98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6652E0;
  sub_215D935F0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663C60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21586E804@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C65FD98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D7E444((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663C60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21586E8D8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C65FD98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D935F0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663C60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21586E9C4@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (2 * (*a1 != 0));
  *(_DWORD *)char v15 = 2;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C65FD98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D7E444((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663C60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21586EB24@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (2 * (*a1 != 0));
  *(_DWORD *)char v14 = 2;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C65FD98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6652E0;
  sub_215D935F0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663C60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21586EC9C@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 2 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 2;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 2;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C65FD98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D7E444((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663C60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21586EE24@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 2;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C65FD98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6652E0;
  sub_215D935F0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663C60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

size_t *sub_21586EFC4@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 2 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)char v16 = 2;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C65FD98;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = (size_t)&unk_26C6652E0;
  sub_215D935F0((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C663C60;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_21583B5C4((uint64_t)v16, v2);
  v15[0] = (size_t)v12;
  v15[1] = (size_t)v16;
  return sub_2158A24F4(v15);
}

void sub_21586F184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    unint64_t v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613C8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21586F1D8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

size_t *sub_21586F1F4@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (2 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 2;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C65FD98;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = (size_t)&unk_26C6652E0;
  sub_215D935F0((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C663C60;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v17, a3);
  v16[0] = (size_t)v13;
  v16[1] = (size_t)v17;
  return sub_2158A24F4(v16);
}

void sub_21586F3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    unint64_t v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613C8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21586F404(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

size_t *sub_21586F420@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 2;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  size_t v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C65FD98;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = (size_t)&unk_26C6652E0;
  sub_215D935F0((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C663C60;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v20, a3);
  v19[0] = (size_t)v16;
  v19[1] = (size_t)v20;
  return sub_2158A24F4(v19);
}

void sub_21586F604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613C8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21586F658(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_21586F674(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21586F688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663C60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21586F6EC@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 2 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a3 >> 1) << 33);
  *(_DWORD *)long long v12 = 2;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C65FE18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D7EC84((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C663CE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21586F854()
{
}

double sub_21586F868@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 2;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C65FE18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D7EC84((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21586F9A4@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)uint64_t v11 = 2;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C65FE18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665310;
  sub_215D93B0C((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663CE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21586FB20@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 2;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 2;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 2;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C65FE18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D7EC84((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663CE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21586FCAC@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 2;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 2;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 2;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C65FE18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665310;
  sub_215D93B0C((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663CE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21586FE50@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C65FE18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D7EC84((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21586FF24@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C65FE18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D93B0C(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215870010@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (2 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 2;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C65FE18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D7EC84((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215870170@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (2 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 2;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C65FE18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665310;
  sub_215D93B0C((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158702E8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 2 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 2;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 2;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C65FE18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D7EC84((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215870470@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 2;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C65FE18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665310;
  sub_215D93B0C((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663CE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t *sub_215870610@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 2 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)__int16 v16 = 2;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C65FE18;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = (uint64_t)&unk_26C665310;
  sub_215D93B0C((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C663CE0;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_21583B5C4((uint64_t)v16, v2);
  v15[0] = (uint64_t)v12;
  v15[1] = (uint64_t)v16;
  return sub_2158A307C(v15);
}

void sub_2158707D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613E8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215870824(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

uint64_t *sub_215870840@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (2 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 2;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C65FE18;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = (uint64_t)&unk_26C665310;
  sub_215D93B0C((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C663CE0;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v17, a3);
  v16[0] = (uint64_t)v13;
  v16[1] = (uint64_t)v17;
  return sub_2158A307C(v16);
}

void sub_2158709FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613E8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215870A50(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

uint64_t *sub_215870A6C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 2;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  uint64_t v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C65FE18;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = (uint64_t)&unk_26C665310;
  sub_215D93B0C((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C663CE0;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v20, a3);
  v19[0] = (uint64_t)v16;
  v19[1] = (uint64_t)v20;
  return sub_2158A307C(v19);
}

void sub_215870C50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C6613E8[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215870CA4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_215870CC0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215870CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663CE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_215870D38@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 2 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a3 >> 1) << 33);
  *(_DWORD *)long long v12 = 2;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C65FE98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D7F670((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C663D60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D7F440((uint64_t)v12);
}

void sub_215870EAC()
{
}

uint64_t sub_215870EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 2;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C65FE98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D7F670((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663D60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D7F440((uint64_t)&v7);
}

uint64_t sub_215871008@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)uint64_t v11 = 2;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C65FE98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665340;
  sub_215D93E6C((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663D60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D7F440((uint64_t)v11);
}

uint64_t sub_215871190@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 2;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 2;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 2;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C65FE98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D7F670((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663D60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D7F440((uint64_t)v12);
}

uint64_t sub_215871328@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 2;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 2;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 2;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C65FE98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665340;
  sub_215D93E6C((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663D60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D7F440((uint64_t)v11);
}

uint64_t sub_2158714D8@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C65FE98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D7F670((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663D60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D7F440((uint64_t)v6);
}

uint64_t sub_2158715B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C65FE98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D93E6C(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663D60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D7F440((uint64_t)v5);
}

uint64_t sub_2158716B0@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (2 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 2;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C65FE98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D7F670((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663D60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D7F440((uint64_t)v15);
}

uint64_t sub_21587181C@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (2 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 2;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C65FE98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665340;
  sub_215D93E6C((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663D60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D7F440((uint64_t)v14);
}

uint64_t sub_2158719A0@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 2 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 2;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 2;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C65FE98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D7F670((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663D60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D7F440((uint64_t)v17);
}

uint64_t sub_215871B34@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 2;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C65FE98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665340;
  sub_215D93E6C((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663D60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D7F440((uint64_t)v16);
}

double sub_215871CE0@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 2 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)__int16 v16 = 2;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C65FE98;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = (uint64_t)&unk_26C665340;
  sub_215D93E6C((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C663D60;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D7F440((uint64_t)v16);
  sub_21583B5C4((uint64_t)v16, v2);
  v15[0] = (uint64_t)v12;
  v15[1] = (uint64_t)v16;
  *(void *)&double result = sub_2158A3B98(v15);
  return result;
}

void sub_215871EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661408[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215871F00(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215871F1C@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (2 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 2;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C65FE98;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = (uint64_t)&unk_26C665340;
  sub_215D93E6C((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C663D60;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D7F440((uint64_t)v17);
  sub_21583B5C4((uint64_t)v17, a3);
  v16[0] = (uint64_t)v13;
  v16[1] = (uint64_t)v17;
  *(void *)&double result = sub_2158A3B98(v16);
  return result;
}

void sub_2158720E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661408[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215872138(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215872154@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 2;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  uint64_t v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C65FE98;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = (uint64_t)&unk_26C665340;
  sub_215D93E6C((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C663D60;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D7F440((uint64_t)v20);
  sub_21583B5C4((uint64_t)v20, a3);
  v19[0] = (uint64_t)v16;
  v19[1] = (uint64_t)v20;
  *(void *)&double result = sub_2158A3B98(v19);
  return result;
}

void sub_215872344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661408[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215872398(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_2158723B4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158723C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663D60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21587242C@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 2 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a3 >> 1) << 33);
  *(_DWORD *)long long v12 = 2;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C65FF18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D7FEB4((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C663DE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215872594()
{
}

double sub_2158725A8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 2;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C65FF18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D7FEB4((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_2158726E0@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)uint64_t v11 = 2;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C65FF18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665370;
  sub_215D9430C((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663DE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587285C@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 2;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 2;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 2;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C65FF18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D7FEB4((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C663DE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_2158729E8@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 2;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 2;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 2;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C65FF18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665370;
  sub_215D9430C((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663DE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215872B8C@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C65FF18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D7FEB4((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215872C60@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C65FF18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9430C(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215872D4C@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (2 * (*a1 != 0));
  *(_DWORD *)int v15 = 2;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C65FF18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D7FEB4((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215872EAC@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (2 * (*a1 != 0));
  *(_DWORD *)int v14 = 2;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C65FF18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665370;
  sub_215D9430C((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215873024@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 2 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 2;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 2;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C65FF18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D7FEB4((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158731AC@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 2;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C65FF18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665370;
  sub_215D9430C((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663DE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

float sub_21587334C@<S0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 2 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  *(_DWORD *)int v16 = 2;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C65FF18;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = (uint64_t)&unk_26C665370;
  sub_215D9430C((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C663DE0;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_21583B5C4((uint64_t)v16, v2);
  v15[0] = (uint64_t)v12;
  v15[1] = (uint64_t)v16;
  return sub_2158A4CE8(v15);
}

void sub_21587350C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661428[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215873560(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

float sub_21587357C@<S0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (2 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 2;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C65FF18;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = (uint64_t)&unk_26C665370;
  sub_215D9430C((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C663DE0;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v17, a3);
  v16[0] = (uint64_t)v13;
  v16[1] = (uint64_t)v17;
  return sub_2158A4CE8(v16);
}

void sub_215873738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661428[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21587378C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

float sub_2158737A8@<S0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 2 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 2;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  uint64_t v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C65FF18;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = (uint64_t)&unk_26C665370;
  sub_215D9430C((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C663DE0;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_21583B5C4((uint64_t)v20, a3);
  v19[0] = (uint64_t)v16;
  v19[1] = (uint64_t)v20;
  return sub_2158A4CE8(v19);
}

void sub_21587398C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661428[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_2158739E0(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_2158739FC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215873A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663DE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215873A74@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)uint64_t v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)long long v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  char v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C65FF98;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D806FC((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C663E60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_215873BD4()
{
}

double sub_215873BE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C65FF98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D806FC((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663E60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215873D24@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C65FF98;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C6653A0;
  sub_215D94674((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C663E60;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215873E98@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C65FF98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D806FC((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663E60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215874020@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C65FF98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C6653A0;
  sub_215D94674((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663E60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158741C0@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C65FF98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D806FC((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663E60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215874294@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C65FF98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D94674(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663E60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215874380@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C65FF98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D806FC((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663E60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158744E0@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C65FF98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C6653A0;
  sub_215D94674((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663E60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215874658@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C65FF98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D806FC((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663E60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158747E0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C65FF98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6653A0;
  sub_215D94674((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663E60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215874980@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21583D3D4(a2, (uint64_t)&v11, v10);
}

uint64_t sub_215874A44@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_21583D3D4(a3, (uint64_t)&v13, v12);
}

uint64_t sub_215874B0C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21583D3D4(a3, (uint64_t)&v14, v13);
}

__n128 sub_215874BFC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215874C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663E60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215874C74@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660018;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D81070((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_215874DD4()
{
}

double sub_215874DE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660018;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D81070((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215874F24@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660018;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C6653D0;
  sub_215D94B80((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215875098@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660018;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D81070((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663EE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215875224@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660018;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C6653D0;
  sub_215D94B80((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663EE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158753C8@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660018;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D81070((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587549C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660018;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D94B80(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215875588@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660018;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D81070((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158756E8@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660018;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C6653D0;
  sub_215D94B80((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215875860@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660018;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D81070((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158759E8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660018;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6653D0;
  sub_215D94B80((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215875B88@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21583DD8C(a2, (uint64_t)&v11, v10);
}

uint64_t sub_215875C4C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_21583DD8C(a3, (uint64_t)&v13, v12);
}

uint64_t sub_215875D14@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21583DD8C(a3, (uint64_t)&v14, v13);
}

__n128 sub_215875E04(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215875E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663EE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_215875E7C@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660098;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D81BB4((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C663F60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  long long v17 = 0uLL;
  *(void *)(a3 + 152) = v20;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D81984((uint64_t)v13);
}

void sub_215875FE8()
{
}

uint64_t sub_215875FFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660098;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D81BB4((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C663F60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D81984((uint64_t)&v7);
}

uint64_t sub_215876144@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660098;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665400;
  sub_215D94EDC((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C663F60;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(a2 + 152) = v19;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D81984((uint64_t)v12);
}

uint64_t sub_2158762C4@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660098;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D81BB4((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C663F60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D81984((uint64_t)v12);
}

uint64_t sub_21587645C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660098;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665400;
  sub_215D94EDC((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663F60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D81984((uint64_t)v11);
}

uint64_t sub_21587660C@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660098;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D81BB4((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C663F60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D81984((uint64_t)v6);
}

uint64_t sub_2158766EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660098;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D94EDC(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663F60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D81984((uint64_t)v5);
}

uint64_t sub_2158767E4@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660098;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D81BB4((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C663F60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D81984((uint64_t)v15);
}

uint64_t sub_215876950@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660098;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665400;
  sub_215D94EDC((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663F60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D81984((uint64_t)v14);
}

uint64_t sub_215876AD4@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660098;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D81BB4((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C663F60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D81984((uint64_t)v17);
}

uint64_t sub_215876C68@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660098;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665400;
  sub_215D94EDC((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663F60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D81984((uint64_t)v16);
}

double sub_215876E14@<D0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v17 = 3;
  uint64_t v7 = *((void *)a1 + 4);
  *(_DWORD *)&v17[4] = v7;
  *(void *)uint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v7);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v6;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v7;
  uint64_t v15 = v6;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a2 = &unk_26C660098;
  *(void *)(a2 + 40) = v6;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a2 + 24) = v10;
  v16[0] = &unk_26C665400;
  sub_215D94EDC((uint64_t)v14, (uint64_t)v17);
  *(void *)(a2 + 48) = &unk_26C663F60;
  uint64_t v11 = v22;
  *(void *)(a2 + 104) = v20;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a2 + 72) = v18;
  *(_OWORD *)(a2 + 88) = v19;
  *(_OWORD *)(a2 + 112) = v21;
  *(void *)(a2 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a2 + 152) = v24;
  *(_OWORD *)(a2 + 136) = v23;
  *(_DWORD *)(a2 + 160) = 1;
  sub_215D81984((uint64_t)v17);
  sub_21583D2A4((uint64_t)v17, a2);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A6204(v16);
}

void sub_215876FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661488[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21587702C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215877048@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*((void *)a1 + 4)) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v15 = __PAIR64__(v4, 3);
  *(_DWORD *)&v15[8] = HIDWORD(v4);
  *(_DWORD *)long long v18 = 1;
  *(void *)&v18[4] = v8;
  *(void *)&v15[12] = *(void *)v18;
  *(_DWORD *)&v15[20] = HIDWORD(v7);
  *(void *)&unsigned char v15[24] = v4;
  unint64_t v16 = v8;
  long long v9 = *a1;
  long long v10 = a1[2];
  v14[1] = a1[1];
  double v14[2] = v10;
  v14[0] = v9;
  *(void *)a3 = &unk_26C660098;
  *(void *)(a3 + 40) = v8;
  long long v11 = *(_OWORD *)&v15[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v15;
  *(_OWORD *)(a3 + 24) = v11;
  v17[0] = &unk_26C665400;
  sub_215D94EDC((uint64_t)v15, (uint64_t)v18);
  *(void *)(a3 + 48) = &unk_26C663F60;
  uint64_t v12 = v23;
  *(void *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v18[8];
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 112) = v22;
  *(void *)(a3 + 128) = v12;
  long long v22 = 0uLL;
  *(void *)(a3 + 152) = v25;
  *(_OWORD *)(a3 + 136) = v24;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D81984((uint64_t)v18);
  sub_21583D2A4((uint64_t)v18, a3);
  v17[0] = v14;
  v17[1] = v18;
  return sub_2158A6204(v17);
}

void sub_215877210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    uint64_t v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661488[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215877264(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215877280@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)long long v20 = 3;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)long long v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660098;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665400;
  sub_215D94EDC((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C663F60;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D81984((uint64_t)v20);
  sub_21583D2A4((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A6204(v19);
}

void sub_215877470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661488[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_2158774C4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_2158774E0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158774F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663F60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215877558@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)uint64_t v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)long long v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  int v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660118;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D823FC((uint64_t)v13, (uint64_t)v10, (const float *)&v12);
  *(void *)(a3 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_2158776B8()
{
}

double sub_2158776CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660118;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D823FC((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215877804@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660118;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665430;
  sub_215D95378((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215877978@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660118;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D823FC((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C663FE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215877B04@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660118;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665430;
  sub_215D95378((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C663FE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215877CA8@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660118;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D823FC((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215877D7C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660118;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D95378(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215877E68@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660118;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D823FC((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215877FC8@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660118;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665430;
  sub_215D95378((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215878140@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660118;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D823FC((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158782C8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660118;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665430;
  sub_215D95378((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215878468@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21583EE50(a2, (uint64_t)&v11, v10);
}

uint64_t sub_21587852C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_21583EE50(a3, (uint64_t)&v13, v12);
}

uint64_t sub_2158785F4@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21583EE50(a3, (uint64_t)&v14, v13);
}

__n128 sub_2158786E4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158786F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C663FE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21587875C@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)uint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)uint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660198;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D82D98((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664060;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_2158788C4()
{
}

double sub_2158788D8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660198;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D82D98((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664060;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215878A14@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660198;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665460;
  sub_215D956D4((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664060;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215878B90@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660198;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D82D98((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664060;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215878D18@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660198;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665460;
  sub_215D956D4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664060;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215878EB8@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660198;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D82D98((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664060;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215878F8C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660198;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D956D4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664060;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215879078@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)char v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660198;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D82D98((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664060;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158791D8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)char v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660198;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665460;
  sub_215D956D4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664060;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215879350@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660198;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D82D98((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664060;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158794D8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660198;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665460;
  sub_215D956D4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664060;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215879678@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21583F95C(v2, (uint64_t)v11, v10);
}

uint64_t sub_215879744@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21583F95C(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21587980C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21583F95C(a3, (uint64_t)&v14, v13);
}

__n128 sub_2158798FC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215879910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664060;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215879974@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660218;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D83624((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C6640E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215879ADC()
{
}

double sub_215879AF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660218;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D83624((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215879C2C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660218;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665490;
  sub_215D95BF0((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6640E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215879DA8@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660218;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D83624((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C6640E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215879F34@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660218;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665490;
  sub_215D95BF0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6640E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587A0D8@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660218;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D83624((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587A1AC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660218;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D95BF0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587A298@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660218;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D83624((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587A3F8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660218;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665490;
  sub_215D95BF0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587A570@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660218;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D83624((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587A6F8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660218;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665490;
  sub_215D95BF0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21587A898@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215840224(v2, (uint64_t)v11, v10);
}

uint64_t sub_21587A964@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215840224(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21587AA2C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215840224(a3, (uint64_t)&v14, v13);
}

__n128 sub_21587AB1C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21587AB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6640E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_21587AB94@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660298;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D84060((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664160;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D83E30((uint64_t)v12);
}

void sub_21587AD08()
{
}

uint64_t sub_21587AD1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660298;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D84060((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664160;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D83E30((uint64_t)&v7);
}

uint64_t sub_21587AE64@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660298;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664160;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D83E30((uint64_t)v11);
}

uint64_t sub_21587AFEC@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660298;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D84060((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664160;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D83E30((uint64_t)v12);
}

uint64_t sub_21587B184@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660298;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664160;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D83E30((uint64_t)v11);
}

uint64_t sub_21587B334@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660298;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D84060((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664160;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D83E30((uint64_t)v6);
}

uint64_t sub_21587B414@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660298;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D95F54(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664160;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D83E30((uint64_t)v5);
}

uint64_t sub_21587B50C@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660298;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D84060((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664160;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D83E30((uint64_t)v15);
}

uint64_t sub_21587B678@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660298;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664160;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D83E30((uint64_t)v14);
}

uint64_t sub_21587B7FC@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660298;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D84060((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664160;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D83E30((uint64_t)v17);
}

uint64_t sub_21587B990@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660298;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664160;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D83E30((uint64_t)v16);
}

double sub_21587BB3C@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&unsigned char v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C660298;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C664160;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D83E30((uint64_t)v16);
  sub_21583F82C((uint64_t)v16, v2);
  v15[0] = v12;
  v15[1] = v16;
  return sub_2158A79C0(v15);
}

void sub_21587BD08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661508[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21587BD5C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21587BD78@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (4 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 4;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C660298;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C664160;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D83E30((uint64_t)v17);
  sub_21583F82C((uint64_t)v17, a3);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A79C0(v16);
}

void sub_21587BF40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661508[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21587BF94(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21587BFB0@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 4;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660298;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C6654C0;
  sub_215D95F54((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664160;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D83E30((uint64_t)v20);
  sub_21583F82C((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A79C0(v19);
}

void sub_21587C1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661508[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21587C1F4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_21587C210(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21587C224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664160;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21587C288@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)long long v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660318;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D848A8((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6641E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21587C3F0()
{
}

double sub_21587C404@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660318;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D848A8((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21587C53C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660318;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6654F0;
  sub_215D96400((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6641E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587C6B8@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660318;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D848A8((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6641E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21587C844@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660318;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6654F0;
  sub_215D96400((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6641E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587C9E8@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660318;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D848A8((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587CABC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660318;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D96400(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587CBA8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)int v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660318;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D848A8((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587CD08@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)int v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660318;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6654F0;
  sub_215D96400((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587CE80@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660318;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D848A8((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587D008@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660318;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6654F0;
  sub_215D96400((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21587D1A8@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_2158411D8(v2, (uint64_t)v11, v10);
}

uint64_t sub_21587D274@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_2158411D8(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21587D33C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_2158411D8(a3, (uint64_t)&v14, v13);
}

__n128 sub_21587D42C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21587D440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6641E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21587D4A4@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)uint64_t v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)uint64_t v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  char v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660398;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D85138((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C664260;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_21587D604()
{
}

double sub_21587D618@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660398;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D85138((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664260;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21587D754@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660398;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665520;
  sub_215D96764((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C664260;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587D8C8@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660398;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D85138((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664260;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21587DA50@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660398;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665520;
  sub_215D96764((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664260;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587DBF0@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660398;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D85138((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664260;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587DCC4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660398;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D96764(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664260;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587DDB0@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660398;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D85138((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664260;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587DF10@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660398;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665520;
  sub_215D96764((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664260;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587E088@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660398;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D85138((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664260;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587E210@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660398;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665520;
  sub_215D96764((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664260;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21587E3B0@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215841AA0(a2, (uint64_t)&v11, v10);
}

uint64_t sub_21587E474@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_215841AA0(a3, (uint64_t)&v13, v12);
}

uint64_t sub_21587E53C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215841AA0(a3, (uint64_t)&v14, v13);
}

__n128 sub_21587E62C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21587E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664260;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21587E6A4@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660418;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D85AAC((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_21587E804()
{
}

double sub_21587E818@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660418;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D85AAC((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21587E954@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660418;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665550;
  sub_215D96C70((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587EAC8@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660418;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D85AAC((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C6642E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21587EC54@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660418;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665550;
  sub_215D96C70((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6642E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21587EDF8@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660418;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D85AAC((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587EECC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660418;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D96C70(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21587EFB8@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660418;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D85AAC((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587F118@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660418;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665550;
  sub_215D96C70((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21587F290@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660418;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D85AAC((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21587F418@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660418;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665550;
  sub_215D96C70((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21587F5B8@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215842458(a2, (uint64_t)&v11, v10);
}

uint64_t sub_21587F67C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_215842458(a3, (uint64_t)&v13, v12);
}

uint64_t sub_21587F744@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215842458(a3, (uint64_t)&v14, v13);
}

__n128 sub_21587F834(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21587F848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6642E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_21587F8AC@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660498;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D865F0((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C664360;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  long long v17 = 0uLL;
  *(void *)(a3 + 152) = v20;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D863C0((uint64_t)v13);
}

void sub_21587FA18()
{
}

uint64_t sub_21587FA2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660498;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D865F0((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664360;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D863C0((uint64_t)&v7);
}

uint64_t sub_21587FB74@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660498;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665580;
  sub_215D96FCC((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C664360;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(a2 + 152) = v19;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D863C0((uint64_t)v12);
}

uint64_t sub_21587FCF4@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660498;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D865F0((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664360;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D863C0((uint64_t)v12);
}

uint64_t sub_21587FE8C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660498;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665580;
  sub_215D96FCC((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664360;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D863C0((uint64_t)v11);
}

uint64_t sub_21588003C@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660498;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D865F0((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664360;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D863C0((uint64_t)v6);
}

uint64_t sub_21588011C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660498;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D96FCC(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664360;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D863C0((uint64_t)v5);
}

uint64_t sub_215880214@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660498;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D865F0((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664360;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D863C0((uint64_t)v15);
}

uint64_t sub_215880380@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660498;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665580;
  sub_215D96FCC((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664360;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D863C0((uint64_t)v14);
}

uint64_t sub_215880504@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660498;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D865F0((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664360;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D863C0((uint64_t)v17);
}

uint64_t sub_215880698@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660498;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665580;
  sub_215D96FCC((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664360;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D863C0((uint64_t)v16);
}

double sub_215880844@<D0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v17 = 3;
  uint64_t v7 = *((void *)a1 + 4);
  *(_DWORD *)&v17[4] = v7;
  *(void *)uint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v7);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v6;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v7;
  uint64_t v15 = v6;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a2 = &unk_26C660498;
  *(void *)(a2 + 40) = v6;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a2 + 24) = v10;
  v16[0] = &unk_26C665580;
  sub_215D96FCC((uint64_t)v14, (uint64_t)v17);
  *(void *)(a2 + 48) = &unk_26C664360;
  uint64_t v11 = v22;
  *(void *)(a2 + 104) = v20;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a2 + 72) = v18;
  *(_OWORD *)(a2 + 88) = v19;
  *(_OWORD *)(a2 + 112) = v21;
  *(void *)(a2 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a2 + 152) = v24;
  *(_OWORD *)(a2 + 136) = v23;
  *(_DWORD *)(a2 + 160) = 1;
  sub_215D863C0((uint64_t)v17);
  sub_21583D2A4((uint64_t)v17, a2);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A6204(v16);
}

void sub_215880A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661588[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215880A5C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215880A78@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*((void *)a1 + 4)) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v15 = __PAIR64__(v4, 3);
  *(_DWORD *)&v15[8] = HIDWORD(v4);
  *(_DWORD *)long long v18 = 1;
  *(void *)&v18[4] = v8;
  *(void *)&v15[12] = *(void *)v18;
  *(_DWORD *)&v15[20] = HIDWORD(v7);
  *(void *)&unsigned char v15[24] = v4;
  unint64_t v16 = v8;
  long long v9 = *a1;
  long long v10 = a1[2];
  v14[1] = a1[1];
  double v14[2] = v10;
  v14[0] = v9;
  *(void *)a3 = &unk_26C660498;
  *(void *)(a3 + 40) = v8;
  long long v11 = *(_OWORD *)&v15[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v15;
  *(_OWORD *)(a3 + 24) = v11;
  v17[0] = &unk_26C665580;
  sub_215D96FCC((uint64_t)v15, (uint64_t)v18);
  *(void *)(a3 + 48) = &unk_26C664360;
  uint64_t v12 = v23;
  *(void *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v18[8];
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 112) = v22;
  *(void *)(a3 + 128) = v12;
  long long v22 = 0uLL;
  *(void *)(a3 + 152) = v25;
  *(_OWORD *)(a3 + 136) = v24;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D863C0((uint64_t)v18);
  sub_21583D2A4((uint64_t)v18, a3);
  v17[0] = v14;
  v17[1] = v18;
  return sub_2158A6204(v17);
}

void sub_215880C40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    uint64_t v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661588[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215880C94(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215880CB0@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)long long v20 = 3;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)long long v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660498;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665580;
  sub_215D96FCC((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664360;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D863C0((uint64_t)v20);
  sub_21583D2A4((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A6204(v19);
}

void sub_215880EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661588[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215880EF4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_215880F10(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215880F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664360;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215880F88@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)uint64_t v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)long long v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  int v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660518;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D86E38((uint64_t)v13, (uint64_t)v10, (const float *)&v12);
  *(void *)(a3 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_2158810E8()
{
}

double sub_2158810FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660518;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D86E38((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215881234@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660518;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C6655B0;
  sub_215D97468((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_2158813A8@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660518;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D86E38((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6643E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215881534@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660518;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C6655B0;
  sub_215D97468((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6643E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158816D8@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660518;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D86E38((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158817AC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660518;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D97468(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215881898@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660518;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D86E38((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158819F8@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660518;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C6655B0;
  sub_215D97468((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215881B70@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660518;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D86E38((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215881CF8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660518;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6655B0;
  sub_215D97468((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215881E98@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584351C(a2, (uint64_t)&v11, v10);
}

uint64_t sub_215881F5C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_21584351C(a3, (uint64_t)&v13, v12);
}

uint64_t sub_215882024@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584351C(a3, (uint64_t)&v14, v13);
}

__n128 sub_215882114(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215882128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6643E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588218C@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  char v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660598;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D877D4((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C664460;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_2158822EC()
{
}

double sub_215882300@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660598;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D877D4((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664460;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588243C@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660598;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C6655E0;
  sub_215D977C4((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C664460;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_2158825B0@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660598;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D877D4((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664460;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215882738@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660598;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C6655E0;
  sub_215D977C4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664460;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158828D8@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660598;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D877D4((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664460;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158829AC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660598;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D977C4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664460;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215882A98@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660598;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D877D4((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664460;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215882BF8@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660598;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C6655E0;
  sub_215D977C4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664460;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215882D70@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660598;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D877D4((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664460;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215882EF8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660598;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6655E0;
  sub_215D977C4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664460;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215883098@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215843EF8(a2, (uint64_t)&v11, v10);
}

uint64_t sub_21588315C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_215843EF8(a3, (uint64_t)&v13, v12);
}

uint64_t sub_215883224@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215843EF8(a3, (uint64_t)&v14, v13);
}

__n128 sub_215883314(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215883328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664460;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588338C@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660618;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D88148((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_2158834EC()
{
}

double sub_215883500@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660618;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D88148((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588363C@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660618;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665610;
  sub_215D97CD0((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_2158837B0@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660618;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D88148((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C6644E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588393C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660618;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665610;
  sub_215D97CD0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6644E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215883AE0@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660618;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D88148((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215883BB4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660618;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D97CD0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215883CA0@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660618;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D88148((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215883E00@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660618;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665610;
  sub_215D97CD0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215883F78@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660618;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D88148((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215884100@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660618;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665610;
  sub_215D97CD0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_2158842A0@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_2158448B0(a2, (uint64_t)&v11, v10);
}

uint64_t sub_215884364@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_2158448B0(a3, (uint64_t)&v13, v12);
}

uint64_t sub_21588442C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_2158448B0(a3, (uint64_t)&v14, v13);
}

__n128 sub_21588451C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215884530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6644E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_215884594@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)int v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)long long v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)int v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  __int16 v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660698;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D88C8C((uint64_t)v13, (uint64_t)v10, &v12);
  *(void *)(a3 + 48) = &unk_26C664560;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  long long v17 = 0uLL;
  *(void *)(a3 + 152) = v20;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D88A5C((uint64_t)v13);
}

void sub_215884700()
{
}

uint64_t sub_215884714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660698;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D88C8C((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664560;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D88A5C((uint64_t)&v7);
}

uint64_t sub_21588485C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660698;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665640;
  sub_215D9802C((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C664560;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(a2 + 152) = v19;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D88A5C((uint64_t)v12);
}

uint64_t sub_2158849DC@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660698;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D88C8C((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664560;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D88A5C((uint64_t)v12);
}

uint64_t sub_215884B74@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660698;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665640;
  sub_215D9802C((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664560;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D88A5C((uint64_t)v11);
}

uint64_t sub_215884D24@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660698;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D88C8C((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664560;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D88A5C((uint64_t)v6);
}

uint64_t sub_215884E04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660698;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9802C(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664560;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D88A5C((uint64_t)v5);
}

uint64_t sub_215884EFC@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660698;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D88C8C((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664560;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D88A5C((uint64_t)v15);
}

uint64_t sub_215885068@<X0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660698;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665640;
  sub_215D9802C((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664560;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D88A5C((uint64_t)v14);
}

uint64_t sub_2158851EC@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660698;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D88C8C((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664560;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D88A5C((uint64_t)v17);
}

uint64_t sub_215885380@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660698;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665640;
  sub_215D9802C((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664560;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D88A5C((uint64_t)v16);
}

double sub_21588552C@<D0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v17 = 3;
  uint64_t v7 = *((void *)a1 + 4);
  *(_DWORD *)&v17[4] = v7;
  *(void *)uint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v7);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v6;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v7;
  uint64_t v15 = v6;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a2 = &unk_26C660698;
  *(void *)(a2 + 40) = v6;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a2 + 24) = v10;
  v16[0] = &unk_26C665640;
  sub_215D9802C((uint64_t)v14, (uint64_t)v17);
  *(void *)(a2 + 48) = &unk_26C664560;
  uint64_t v11 = v22;
  *(void *)(a2 + 104) = v20;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a2 + 72) = v18;
  *(_OWORD *)(a2 + 88) = v19;
  *(_OWORD *)(a2 + 112) = v21;
  *(void *)(a2 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a2 + 152) = v24;
  *(_OWORD *)(a2 + 136) = v23;
  *(_DWORD *)(a2 + 160) = 1;
  sub_215D88A5C((uint64_t)v17);
  sub_21583D2A4((uint64_t)v17, a2);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A6204(v16);
}

void sub_2158856F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661608[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215885744(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215885760@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*((void *)a1 + 4)) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v15 = __PAIR64__(v4, 3);
  *(_DWORD *)&v15[8] = HIDWORD(v4);
  *(_DWORD *)long long v18 = 1;
  *(void *)&v18[4] = v8;
  *(void *)&v15[12] = *(void *)v18;
  *(_DWORD *)&v15[20] = HIDWORD(v7);
  *(void *)&unsigned char v15[24] = v4;
  unint64_t v16 = v8;
  long long v9 = *a1;
  long long v10 = a1[2];
  v14[1] = a1[1];
  double v14[2] = v10;
  v14[0] = v9;
  *(void *)a3 = &unk_26C660698;
  *(void *)(a3 + 40) = v8;
  long long v11 = *(_OWORD *)&v15[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v15;
  *(_OWORD *)(a3 + 24) = v11;
  v17[0] = &unk_26C665640;
  sub_215D9802C((uint64_t)v15, (uint64_t)v18);
  *(void *)(a3 + 48) = &unk_26C664560;
  uint64_t v12 = v23;
  *(void *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v18[8];
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 112) = v22;
  *(void *)(a3 + 128) = v12;
  long long v22 = 0uLL;
  *(void *)(a3 + 152) = v25;
  *(_OWORD *)(a3 + 136) = v24;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D88A5C((uint64_t)v18);
  sub_21583D2A4((uint64_t)v18, a3);
  v17[0] = v14;
  v17[1] = v18;
  return sub_2158A6204(v17);
}

void sub_215885928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    uint64_t v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661608[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588597C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215885998@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)long long v20 = 3;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)long long v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660698;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665640;
  sub_215D9802C((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664560;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D88A5C((uint64_t)v20);
  sub_21583D2A4((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A6204(v19);
}

void sub_215885B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661608[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215885BDC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_215885BF8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215885C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664560;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215885C70@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * *a1;
  if (a1[1]) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v4 | (v5 << 32);
  *(_DWORD *)long long v13 = 3;
  uint64_t v7 = *(void *)a1;
  *(_DWORD *)&v13[4] = *(void *)a1;
  *(void *)uint64_t v10 = *(void *)v13;
  *(_DWORD *)&unsigned char v10[8] = HIDWORD(v7);
  *(_DWORD *)long long v13 = 1;
  *(void *)&v13[4] = v6;
  *(void *)&v10[12] = *(void *)v13;
  *(_DWORD *)&v10[20] = v5;
  *(void *)&v10[24] = v7;
  uint64_t v11 = v6;
  int v12 = *a2;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)a3 = &unk_26C660718;
  *(_OWORD *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v6;
  sub_215D894D4((uint64_t)v13, (uint64_t)v10, (const float *)&v12);
  *(void *)(a3 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v13[8];
  *(_OWORD *)(a3 + 72) = v14;
  *(_OWORD *)(a3 + 88) = v15;
  *(void *)(a3 + 104) = v16;
  *(_OWORD *)(a3 + 112) = v17;
  *(void *)(a3 + 128) = v18;
  *(void *)(a3 + 152) = v20;
  double result = *(double *)&v19;
  *(_OWORD *)(a3 + 136) = v19;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

void sub_215885DD0()
{
}

double sub_215885DE4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)long long v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(void *)long long v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660718;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D894D4((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215885F1C@<D0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = 0;
  }
  LODWORD(v4) = v3 * *a1;
  if (a1[1]) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v3 | (v4 << 32);
  *(_DWORD *)long long v12 = 3;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)long long v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = v4;
  *(void *)&v9[24] = v6;
  uint64_t v10 = v5;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v9;
  *(void *)a2 = &unk_26C660718;
  *(void *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  uint64_t v11 = &unk_26C665670;
  sub_215D984C8((uint64_t)v9, (uint64_t)v12);
  *(void *)(a2 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 88) = v14;
  *(void *)(a2 + 104) = v15;
  *(_OWORD *)(a2 + 112) = v16;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 136) = v18;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215886090@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 3;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 3;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 3;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)uint64_t v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660718;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D894D4((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6645E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588621C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 3;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 3;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 3;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)long long v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660718;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v10 = &unk_26C665670;
  sub_215D984C8((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6645E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158863C0@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660718;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D894D4((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215886494@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660718;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D984C8(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215886580@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v5 = *a1;
  if (*a1) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*a1) {
    BOOL v7 = HIDWORD(v5) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v8 | v6;
  *(void *)long long v12 = __PAIR64__(v5, 3);
  *(_DWORD *)&unsigned char v12[8] = HIDWORD(v5);
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  unint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660718;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D894D4((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158866E0@<D0>(unint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v4 = *a1;
  if (*a1) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  if (*a1) {
    BOOL v6 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  unint64_t v8 = v7 | v5;
  *(void *)uint64_t v11 = __PAIR64__(v4, 3);
  *(_DWORD *)&v11[8] = HIDWORD(v4);
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  unint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660718;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  unint64_t v13 = &unk_26C665670;
  sub_215D984C8((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215886858@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 3 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 3;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660718;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D894D4((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158869E0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 3;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)unint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660718;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665670;
  sub_215D984C8((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215886B80@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  if (v3) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  LODWORD(v5) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0;
  }
  int v11 = 3;
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v12 = v6;
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v4 | (v5 << 32);
  uint64_t v13 = v17[0];
  int v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215845974(a2, (uint64_t)&v11, v10);
}

uint64_t sub_215886C44@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v19[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *a2;
  if (*((void *)a1 + 4)) {
    BOOL v7 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v13 = 3;
  unint64_t v14 = v4;
  uint64_t v8 = v6 << 32;
  if (v7) {
    uint64_t v8 = 0;
  }
  HIDWORD(v14) = HIDWORD(v4);
  LODWORD(v19[0]) = 1;
  *(void *)((char *)v19 + 4) = v8 | v5;
  uint64_t v15 = v19[0];
  int v16 = HIDWORD(v8);
  unint64_t v17 = v4;
  uint64_t v18 = v8 | v5;
  long long v9 = *a1;
  long long v10 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v10;
  v12[0] = v9;
  return sub_215845974(a3, (uint64_t)&v13, v12);
}

uint64_t sub_215886D0C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 3 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 3;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215845974(a3, (uint64_t)&v14, v13);
}

__n128 sub_215886DFC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215886E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6645E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215886E74@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)uint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)uint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660798;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D89E70((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664660;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215886FDC()
{
}

double sub_215886FF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660798;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D89E70((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664660;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588712C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660798;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6656A0;
  sub_215D98824((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664660;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158872A8@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660798;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D89E70((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664660;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215887430@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660798;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6656A0;
  sub_215D98824((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664660;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158875D0@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660798;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D89E70((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664660;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158876A4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660798;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D98824(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664660;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215887790@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)char v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660798;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D89E70((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664660;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158878F0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)char v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660798;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6656A0;
  sub_215D98824((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664660;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215887A68@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660798;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D89E70((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664660;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215887BF0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660798;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6656A0;
  sub_215D98824((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664660;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215887D90@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215846350(v2, (uint64_t)v11, v10);
}

uint64_t sub_215887E5C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215846350(a3, (uint64_t)&v11, v10);
}

uint64_t sub_215887F24@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215846350(a3, (uint64_t)&v14, v13);
}

__n128 sub_215888014(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215888028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664660;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588808C@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660818;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8A6FC((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C6646E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_2158881F4()
{
}

double sub_215888208@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660818;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8A6FC((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215888344@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660818;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6656D0;
  sub_215D98D40((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6646E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158884C0@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660818;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8A6FC((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C6646E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588864C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660818;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6656D0;
  sub_215D98D40((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6646E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158887F0@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660818;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8A6FC((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158888C4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660818;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D98D40(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_2158889B0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660818;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8A6FC((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215888B10@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660818;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6656D0;
  sub_215D98D40((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215888C88@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660818;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8A6FC((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215888E10@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660818;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6656D0;
  sub_215D98D40((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215888FB0@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215846C18(v2, (uint64_t)v11, v10);
}

uint64_t sub_21588907C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215846C18(a3, (uint64_t)&v11, v10);
}

uint64_t sub_215889144@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215846C18(a3, (uint64_t)&v14, v13);
}

__n128 sub_215889234(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215889248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6646E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_2158892AC@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660898;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8B138((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664760;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8AF08((uint64_t)v12);
}

void sub_215889420()
{
}

uint64_t sub_215889434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660898;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8B138((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664760;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D8AF08((uint64_t)&v7);
}

uint64_t sub_21588957C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660898;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665700;
  sub_215D990A4((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664760;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8AF08((uint64_t)v11);
}

uint64_t sub_215889704@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660898;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8B138((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664760;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8AF08((uint64_t)v12);
}

uint64_t sub_21588989C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660898;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665700;
  sub_215D990A4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664760;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8AF08((uint64_t)v11);
}

uint64_t sub_215889A4C@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660898;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8B138((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664760;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8AF08((uint64_t)v6);
}

uint64_t sub_215889B2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660898;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D990A4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664760;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D8AF08((uint64_t)v5);
}

uint64_t sub_215889C24@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660898;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8B138((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664760;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8AF08((uint64_t)v15);
}

uint64_t sub_215889D90@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660898;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665700;
  sub_215D990A4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664760;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8AF08((uint64_t)v14);
}

uint64_t sub_215889F14@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660898;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8B138((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664760;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8AF08((uint64_t)v17);
}

uint64_t sub_21588A0A8@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660898;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665700;
  sub_215D990A4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664760;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8AF08((uint64_t)v16);
}

double sub_21588A254@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&unsigned char v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C660898;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = &unk_26C665700;
  sub_215D990A4((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C664760;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D8AF08((uint64_t)v16);
  sub_21583F82C((uint64_t)v16, v2);
  v15[0] = v12;
  v15[1] = v16;
  return sub_2158A79C0(v15);
}

void sub_21588A420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661688[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588A474(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21588A490@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (4 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 4;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C660898;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = &unk_26C665700;
  sub_215D990A4((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C664760;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8AF08((uint64_t)v17);
  sub_21583F82C((uint64_t)v17, a3);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A79C0(v16);
}

void sub_21588A658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661688[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588A6AC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21588A6C8@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 4;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660898;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665700;
  sub_215D990A4((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664760;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8AF08((uint64_t)v20);
  sub_21583F82C((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A79C0(v19);
}

void sub_21588A8B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661688[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588A90C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_21588A928(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21588A93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664760;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588A9A0@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)long long v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660918;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8B980((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6647E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21588AB08()
{
}

double sub_21588AB1C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660918;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8B980((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588AC54@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660918;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665730;
  sub_215D99550((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6647E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588ADD0@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660918;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8B980((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6647E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588AF5C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660918;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665730;
  sub_215D99550((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6647E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588B100@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660918;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8B980((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588B1D4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660918;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D99550(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21588B2C0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)int v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660918;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8B980((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588B420@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)int v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660918;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665730;
  sub_215D99550((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588B598@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660918;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8B980((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588B720@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660918;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665730;
  sub_215D99550((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21588B8C0@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215847BCC(v2, (uint64_t)v11, v10);
}

uint64_t sub_21588B98C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215847BCC(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21588BA54@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215847BCC(a3, (uint64_t)&v14, v13);
}

__n128 sub_21588BB44(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21588BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6647E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588BBBC@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660998;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8C210((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664860;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21588BD24()
{
}

double sub_21588BD38@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660998;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8C210((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664860;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588BE74@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660998;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665760;
  sub_215D998B4((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664860;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588BFF0@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660998;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8C210((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664860;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588C178@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660998;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665760;
  sub_215D998B4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664860;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588C318@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660998;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8C210((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664860;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588C3EC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660998;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D998B4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664860;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21588C4D8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)char v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660998;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8C210((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664860;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588C638@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)char v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660998;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665760;
  sub_215D998B4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664860;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588C7B0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660998;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8C210((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664860;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588C938@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660998;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665760;
  sub_215D998B4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664860;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21588CAD8@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215848494(v2, (uint64_t)v11, v10);
}

uint64_t sub_21588CBA4@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215848494(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21588CC6C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215848494(a3, (uint64_t)&v14, v13);
}

__n128 sub_21588CD5C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21588CD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664860;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588CDD4@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660A18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8CA9C((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C6648E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21588CF3C()
{
}

double sub_21588CF50@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660A18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8CA9C((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588D08C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660A18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665790;
  sub_215D99DD0((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6648E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588D208@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660A18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8CA9C((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C6648E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588D394@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660A18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665790;
  sub_215D99DD0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6648E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588D538@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660A18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8CA9C((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588D60C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660A18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D99DD0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_21588D6F8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660A18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8CA9C((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588D858@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660A18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665790;
  sub_215D99DD0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588D9D0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660A18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8CA9C((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_21588DB58@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660A18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665790;
  sub_215D99DD0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21588DCF8@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215848D5C(v2, (uint64_t)v11, v10);
}

uint64_t sub_21588DDC4@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215848D5C(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21588DE8C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215848D5C(a3, (uint64_t)&v14, v13);
}

__n128 sub_21588DF7C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21588DF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6648E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_21588DFF4@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660A98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8D4D8((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664960;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v12);
}

void sub_21588E168()
{
}

uint64_t sub_21588E17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660A98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8D4D8((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664960;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D8D2A8((uint64_t)&v7);
}

uint64_t sub_21588E2C4@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660A98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664960;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v11);
}

uint64_t sub_21588E44C@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660A98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8D4D8((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664960;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v12);
}

uint64_t sub_21588E5E4@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660A98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664960;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v11);
}

uint64_t sub_21588E794@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660A98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8D4D8((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664960;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v6);
}

uint64_t sub_21588E874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660A98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9A134(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664960;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v5);
}

uint64_t sub_21588E96C@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660A98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8D4D8((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664960;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v15);
}

uint64_t sub_21588EAD8@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660A98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664960;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v14);
}

uint64_t sub_21588EC5C@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660A98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8D4D8((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664960;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v17);
}

uint64_t sub_21588EDF0@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660A98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664960;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8D2A8((uint64_t)v16);
}

double sub_21588EF9C@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&unsigned char v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C660A98;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C664960;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D8D2A8((uint64_t)v16);
  sub_21583F82C((uint64_t)v16, v2);
  v15[0] = v12;
  v15[1] = v16;
  return sub_2158A79C0(v15);
}

void sub_21588F168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661708[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588F1BC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21588F1D8@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (4 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 4;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C660A98;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C664960;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8D2A8((uint64_t)v17);
  sub_21583F82C((uint64_t)v17, a3);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A79C0(v16);
}

void sub_21588F3A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661708[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588F3F4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_21588F410@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 4;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660A98;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C6657C0;
  sub_215D9A134((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664960;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8D2A8((uint64_t)v20);
  sub_21583F82C((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A79C0(v19);
}

void sub_21588F600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661708[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21588F654(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_21588F670(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21588F684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664960;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21588F6E8@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)long long v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660B18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8DD20((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6649E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_21588F850()
{
}

double sub_21588F864@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660B18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8DD20((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21588F99C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660B18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6657F0;
  sub_215D9A5E0((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6649E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588FB18@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660B18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8DD20((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C6649E0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_21588FCA4@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660B18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6657F0;
  sub_215D9A5E0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C6649E0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_21588FE48@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660B18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8DD20((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21588FF1C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660B18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9A5E0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215890008@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)int v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660B18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8DD20((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215890168@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)int v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660B18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6657F0;
  sub_215D9A5E0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158902E0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660B18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8DD20((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215890468@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660B18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6657F0;
  sub_215D9A5E0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215890608@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215849D10(v2, (uint64_t)v11, v10);
}

uint64_t sub_2158906D4@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_215849D10(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21589079C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_215849D10(a3, (uint64_t)&v14, v13);
}

__n128 sub_21589088C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158908A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C6649E0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215890904@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660B98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8E5B0((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664A60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215890A6C()
{
}

double sub_215890A80@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660B98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8E5B0((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664A60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215890BBC@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660B98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665820;
  sub_215D9A944((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664A60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215890D38@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660B98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8E5B0((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664A60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215890EC0@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660B98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665820;
  sub_215D9A944((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664A60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215891060@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660B98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8E5B0((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664A60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215891134@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660B98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9A944(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664A60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215891220@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)char v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660B98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8E5B0((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664A60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215891380@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)char v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660B98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665820;
  sub_215D9A944((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664A60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158914F8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660B98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8E5B0((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664A60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215891680@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660B98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665820;
  sub_215D9A944((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664A60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215891820@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584A5D8(v2, (uint64_t)v11, v10);
}

uint64_t sub_2158918EC@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584A5D8(a3, (uint64_t)&v11, v10);
}

uint64_t sub_2158919B4@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584A5D8(a3, (uint64_t)&v14, v13);
}

__n128 sub_215891AA4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215891AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664A60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215891B1C@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660C18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8EE3C((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664AE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215891C84()
{
}

double sub_215891C98@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660C18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8EE3C((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215891DD4@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660C18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665850;
  sub_215D9AE60((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664AE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215891F50@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660C18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8EE3C((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664AE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_2158920DC@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660C18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665850;
  sub_215D9AE60((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664AE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215892280@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660C18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8EE3C((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215892354@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660C18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9AE60(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215892440@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660C18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8EE3C((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158925A0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660C18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665850;
  sub_215D9AE60((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215892718@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660C18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8EE3C((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158928A0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660C18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665850;
  sub_215D9AE60((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215892A40@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584AEA0(v2, (uint64_t)v11, v10);
}

uint64_t sub_215892B0C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584AEA0(a3, (uint64_t)&v11, v10);
}

uint64_t sub_215892BD4@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584AEA0(a3, (uint64_t)&v14, v13);
}

__n128 sub_215892CC4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215892CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664AE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_215892D3C@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660C98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D8F878((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664B60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8F648((uint64_t)v12);
}

void sub_215892EB0()
{
}

uint64_t sub_215892EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660C98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D8F878((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664B60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D8F648((uint64_t)&v7);
}

uint64_t sub_21589300C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660C98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664B60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8F648((uint64_t)v11);
}

uint64_t sub_215893194@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660C98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D8F878((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664B60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D8F648((uint64_t)v12);
}

uint64_t sub_21589332C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660C98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664B60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D8F648((uint64_t)v11);
}

uint64_t sub_2158934DC@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660C98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D8F878((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664B60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8F648((uint64_t)v6);
}

uint64_t sub_2158935BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660C98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9B1C4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664B60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D8F648((uint64_t)v5);
}

uint64_t sub_2158936B4@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660C98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D8F878((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664B60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8F648((uint64_t)v15);
}

uint64_t sub_215893820@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660C98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664B60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8F648((uint64_t)v14);
}

uint64_t sub_2158939A4@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660C98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D8F878((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664B60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D8F648((uint64_t)v17);
}

uint64_t sub_215893B38@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660C98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664B60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D8F648((uint64_t)v16);
}

double sub_215893CE4@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&unsigned char v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C660C98;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C664B60;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D8F648((uint64_t)v16);
  sub_21583F82C((uint64_t)v16, v2);
  v15[0] = v12;
  v15[1] = v16;
  return sub_2158A79C0(v15);
}

void sub_215893EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661788[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215893F04(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215893F20@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (4 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 4;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C660C98;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C664B60;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8F648((uint64_t)v17);
  sub_21583F82C((uint64_t)v17, a3);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A79C0(v16);
}

void sub_2158940E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661788[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21589413C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215894158@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 4;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660C98;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665880;
  sub_215D9B1C4((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664B60;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D8F648((uint64_t)v20);
  sub_21583F82C((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A79C0(v19);
}

void sub_215894348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661788[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_21589439C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_2158943B8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158943CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664B60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215894430@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)long long v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660D18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D900C0((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C664BE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_215894598()
{
}

double sub_2158945AC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660D18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D900C0((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_2158946E4@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660D18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6658B0;
  sub_215D9B670((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664BE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215894860@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660D18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D900C0((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C664BE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_2158949EC@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660D18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6658B0;
  sub_215D9B670((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664BE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215894B90@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660D18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D900C0((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215894C64@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660D18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9B670(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215894D50@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)int v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660D18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D900C0((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215894EB0@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)int v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660D18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6658B0;
  sub_215D9B670((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215895028@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660D18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D900C0((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158951B0@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660D18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6658B0;
  sub_215D9B670((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215895350@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584BE54(v2, (uint64_t)v11, v10);
}

uint64_t sub_21589541C@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584BE54(a3, (uint64_t)&v11, v10);
}

uint64_t sub_2158954E4@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584BE54(a3, (uint64_t)&v14, v13);
}

__n128 sub_2158955D4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_2158955E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664BE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_21589564C@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  char v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660D98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D90950((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664C60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_2158957B4()
{
}

double sub_2158957C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  char v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660D98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D90950((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664C60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215895904@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660D98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C6658E0;
  sub_215D9B9D4((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664C60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215895A80@<D0>(_DWORD *a1@<X1>, char *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[2];
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  char v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660D98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D90950((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664C60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215895C08@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[2];
    *(_DWORD *)char v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)char v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)char v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660D98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C6658E0;
  sub_215D9B9D4((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664C60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215895DA8@<D0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  char v15 = *a2;
  *(void *)a3 = &unk_26C660D98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D90950((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664C60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215895E7C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660D98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9B9D4(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664C60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215895F68@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)char v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)char v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  char v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660D98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D90950((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664C60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158960C8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)char v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)char v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660D98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C6658E0;
  sub_215D9B9D4((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664C60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215896240@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)char v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  char v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660D98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D90950((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664C60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158963C8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)char v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)char v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660D98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C6658E0;
  sub_215D9B9D4((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664C60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215896568@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584C71C(v2, (uint64_t)v11, v10);
}

uint64_t sub_215896634@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584C71C(a3, (uint64_t)&v11, v10);
}

uint64_t sub_2158966FC@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584C71C(a3, (uint64_t)&v14, v13);
}

__n128 sub_2158967EC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215896800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664C60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215896864@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660E18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D911DC((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664CE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_2158969CC()
{
}

double sub_2158969E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660E18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D911DC((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_215896B1C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660E18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665910;
  sub_215D9BEF0((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664CE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215896C98@<D0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660E18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D911DC((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664CE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215896E24@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660E18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665910;
  sub_215D9BEF0((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664CE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_215896FC8@<D0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660E18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D911DC((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_21589709C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660E18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9BEF0(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215897188@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660E18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D911DC((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158972E8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660E18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665910;
  sub_215D9BEF0((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215897460@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660E18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D911DC((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_2158975E8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660E18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665910;
  sub_215D9BEF0((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_215897788@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584CFE4(v2, (uint64_t)v11, v10);
}

uint64_t sub_215897854@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584CFE4(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21589791C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584CFE4(a3, (uint64_t)&v14, v13);
}

__n128 sub_215897A0C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215897A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664CE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_215897A84@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)unint64_t v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)unint64_t v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  __int16 v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660E98;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D91C18((uint64_t)v12, (uint64_t)v9, &v11);
  *(void *)(v3 + 48) = &unk_26C664D60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D919E8((uint64_t)v12);
}

void sub_215897BF8()
{
}

uint64_t sub_215897C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  __int16 v6 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660E98;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D91C18((uint64_t)&v7, (uint64_t)v3, &v6);
  *(void *)(a1 + 48) = &unk_26C664D60;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  long long v12 = 0uLL;
  *(void *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return sub_215D919E8((uint64_t)&v7);
}

uint64_t sub_215897D54@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660E98;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665940;
  sub_215D9C254((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664D60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D919E8((uint64_t)v11);
}

uint64_t sub_215897EDC@<X0>(_DWORD *a1@<X1>, __int16 *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  __int16 v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660E98;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D91C18((uint64_t)v12, (uint64_t)v10, &v11);
  *(void *)(v3 + 48) = &unk_26C664D60;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  long long v16 = 0uLL;
  *(void *)(v3 + 152) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return sub_215D919E8((uint64_t)v12);
}

uint64_t sub_215898074@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 1;
    *(_DWORD *)__int16 v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)__int16 v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)__int16 v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660E98;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665940;
  sub_215D9C254((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664D60;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  long long v15 = 0uLL;
  *(void *)(v2 + 152) = v18;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return sub_215D919E8((uint64_t)v11);
}

uint64_t sub_215898224@<X0>(uint64_t a1@<X1>, __int16 *a2@<X2>, uint64_t a3@<X8>)
{
  __int16 v15 = *a2;
  *(void *)a3 = &unk_26C660E98;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D91C18((uint64_t)v6, a1, &v15);
  *(void *)(a3 + 48) = &unk_26C664D60;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  long long v11 = 0uLL;
  *(_OWORD *)(a3 + 136) = v13;
  *(void *)(a3 + 152) = v14;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D919E8((uint64_t)v6);
}

uint64_t sub_215898304@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660E98;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9C254(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664D60;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  long long v10 = 0uLL;
  *(_OWORD *)(a2 + 136) = v12;
  *(void *)(a2 + 152) = v13;
  *(_DWORD *)(a2 + 160) = 1;
  return sub_215D919E8((uint64_t)v5);
}

uint64_t sub_2158983FC@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)__int16 v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  __int16 v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660E98;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D91C18((uint64_t)v15, (uint64_t)v12, &v14);
  *(void *)(a4 + 48) = &unk_26C664D60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  long long v19 = 0uLL;
  *(void *)(a4 + 152) = v22;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D919E8((uint64_t)v15);
}

uint64_t sub_215898568@<X0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)__int16 v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)__int16 v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660E98;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665940;
  sub_215D9C254((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664D60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  long long v18 = 0uLL;
  *(void *)(a3 + 152) = v21;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D919E8((uint64_t)v14);
}

uint64_t sub_2158986EC@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, __int16 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)__int16 v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  __int16 v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660E98;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D91C18((uint64_t)v17, (uint64_t)v14, &v16);
  *(void *)(a4 + 48) = &unk_26C664D60;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  long long v21 = 0uLL;
  *(void *)(a4 + 152) = v24;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return sub_215D919E8((uint64_t)v17);
}

uint64_t sub_215898880@<X0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660E98;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665940;
  sub_215D9C254((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664D60;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  long long v20 = 0uLL;
  *(void *)(a3 + 152) = v23;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return sub_215D919E8((uint64_t)v16);
}

double sub_215898A2C@<D0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  if (*((_DWORD *)a1 + 9)) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)__int16 v16 = 4;
  uint64_t v6 = *((void *)a1 + 4);
  *(_DWORD *)&v16[4] = v6;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v6);
  *(_DWORD *)__int16 v16 = 1;
  *(void *)&v16[4] = v5;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = a2;
  *(void *)&unsigned char v13[24] = v6;
  unint64_t v14 = v5;
  long long v7 = *a1;
  long long v8 = a1[2];
  v12[1] = a1[1];
  void v12[2] = v8;
  v12[0] = v7;
  *(void *)uint64_t v2 = &unk_26C660E98;
  *(void *)(v2 + 40) = v5;
  long long v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(v2 + 24) = v9;
  v15[0] = &unk_26C665940;
  sub_215D9C254((uint64_t)v13, (uint64_t)v16);
  *(void *)(v2 + 48) = &unk_26C664D60;
  uint64_t v10 = v21;
  *(void *)(v2 + 104) = v19;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(v2 + 72) = v17;
  *(_OWORD *)(v2 + 88) = v18;
  *(_OWORD *)(v2 + 112) = v20;
  *(void *)(v2 + 128) = v10;
  long long v20 = 0uLL;
  *(void *)(v2 + 152) = v23;
  *(_OWORD *)(v2 + 136) = v22;
  *(_DWORD *)(v2 + 160) = 1;
  sub_215D919E8((uint64_t)v16);
  sub_21583F82C((uint64_t)v16, v2);
  v15[0] = v12;
  v15[1] = v16;
  return sub_2158A79C0(v15);
}

void sub_215898BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661808[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215898C4C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215898C68@<D0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  if (v5) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = v6 | (4 * (*((void *)a1 + 4) != 0));
  *(_DWORD *)long long v17 = 4;
  *(_DWORD *)&v17[4] = v4;
  *(void *)unint64_t v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v4);
  *(_DWORD *)long long v17 = 1;
  *(void *)&v17[4] = v7;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = HIDWORD(v6);
  *(void *)&unsigned char v14[24] = v4;
  uint64_t v15 = v7;
  long long v8 = *a1;
  long long v9 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v9;
  v13[0] = v8;
  *(void *)a3 = &unk_26C660E98;
  *(void *)(a3 + 40) = v7;
  long long v10 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v14;
  *(_OWORD *)(a3 + 24) = v10;
  v16[0] = &unk_26C665940;
  sub_215D9C254((uint64_t)v14, (uint64_t)v17);
  *(void *)(a3 + 48) = &unk_26C664D60;
  uint64_t v11 = v22;
  *(void *)(a3 + 104) = v20;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a3 + 72) = v18;
  *(_OWORD *)(a3 + 88) = v19;
  *(_OWORD *)(a3 + 112) = v21;
  *(void *)(a3 + 128) = v11;
  long long v21 = 0uLL;
  *(void *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 136) = v23;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D919E8((uint64_t)v17);
  sub_21583F82C((uint64_t)v17, a3);
  v16[0] = v13;
  v16[1] = v17;
  return sub_2158A79C0(v16);
}

void sub_215898E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661808[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_215898E84(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

double sub_215898EA0@<D0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)uint64_t v20 = 4;
  uint64_t v10 = *((void *)a1 + 4);
  *(_DWORD *)&v20[4] = v10;
  *(void *)long long v17 = *(void *)v20;
  *(_DWORD *)&v17[8] = HIDWORD(v10);
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)&v20[4] = v9;
  *(void *)&v17[12] = *(void *)v20;
  *(_DWORD *)&v17[20] = v4;
  *(void *)&unsigned char v17[24] = v10;
  uint64_t v18 = v9;
  long long v11 = *a1;
  long long v12 = a1[2];
  v16[1] = a1[1];
  void v16[2] = v12;
  v16[0] = v11;
  *(void *)a3 = &unk_26C660E98;
  *(void *)(a3 + 40) = v9;
  long long v13 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = v13;
  v19[0] = &unk_26C665940;
  sub_215D9C254((uint64_t)v17, (uint64_t)v20);
  *(void *)(a3 + 48) = &unk_26C664D60;
  uint64_t v14 = v25;
  *(void *)(a3 + 104) = v23;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a3 + 72) = v21;
  *(_OWORD *)(a3 + 88) = v22;
  *(_OWORD *)(a3 + 112) = v24;
  *(void *)(a3 + 128) = v14;
  long long v24 = 0uLL;
  *(void *)(a3 + 152) = v27;
  *(_OWORD *)(a3 + 136) = v26;
  *(_DWORD *)(a3 + 160) = 1;
  sub_215D919E8((uint64_t)v20);
  sub_21583F82C((uint64_t)v20, a3);
  v19[0] = v16;
  v19[1] = v20;
  return sub_2158A79C0(v19);
}

void sub_215899090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  LODWORD(v26) = *(_DWORD *)(v22 + 160);
  if (!v26)
  {
    long long v26 = *(void (**)(void, void))(v22 + 64);
    if (!v26)
    {
LABEL_5:
      ((void (*)(char *, void *))off_26C661808[v26])(&a22, v23);
LABEL_6:
      *(_DWORD *)(v22 + 160) = -1;
      _Unwind_Resume(exception_object);
    }
    v26(*v24, *v23);
    LODWORD(v26) = *(_DWORD *)(v22 + 160);
  }
  if (v26 == -1) {
    goto LABEL_6;
  }
  goto LABEL_5;
}

void sub_2158990E4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

__n128 sub_215899100(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_215899114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664D60;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

double sub_215899178@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4 * (*a1 != 0);
  LODWORD(a3) = v4 * *a1;
  if (a1[1]) {
    a3 = a3;
  }
  else {
    a3 = 0;
  }
  unint64_t v5 = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a3 >> 2) << 34);
  *(_DWORD *)long long v12 = 4;
  uint64_t v6 = *(void *)a1;
  *(_DWORD *)&v12[4] = *(void *)a1;
  *(void *)uint64_t v9 = *(void *)v12;
  *(_DWORD *)&v9[8] = HIDWORD(v6);
  *(_DWORD *)long long v12 = 1;
  *(void *)&v12[4] = v5;
  *(void *)&v9[12] = *(void *)v12;
  *(_DWORD *)&v9[20] = a3;
  *(void *)&v9[24] = v6;
  unint64_t v10 = v5;
  int v11 = *a2;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v3 = &unk_26C660F18;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v5;
  sub_215D92460((uint64_t)v12, (uint64_t)v9, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C664DE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

void sub_2158992E0()
{
}

double sub_2158992F4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v6 = 0;
  int v7 = 1;
  *(void *)unint64_t v3 = 4;
  *(_DWORD *)&v3[8] = 0;
  *(void *)uint64_t v8 = 0;
  *(void *)&v3[12] = 1;
  memset(v5, 0, 12);
  uint64_t v4 = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(void *)a1 = &unk_26C660F18;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = *(void *)((char *)v5 + 4);
  sub_215D92460((uint64_t)&v7, (uint64_t)v3, (const float *)&v6);
  *(void *)(a1 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&v8[4];
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 152) = v15;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 136) = v14;
  *(_DWORD *)(a1 + 160) = 1;
  return result;
}

double sub_21589942C@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1]) {
    a2 = a2;
  }
  else {
    a2 = 0;
  }
  unint64_t v4 = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  *(_DWORD *)uint64_t v11 = 4;
  uint64_t v5 = *(void *)a1;
  *(_DWORD *)&v11[4] = *(void *)a1;
  *(void *)uint64_t v8 = *(void *)v11;
  *(_DWORD *)&unsigned char v8[8] = HIDWORD(v5);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)&v11[4] = v4;
  *(void *)&v8[12] = *(void *)v11;
  *(_DWORD *)&unsigned char v8[20] = a2;
  *(void *)&v8[24] = v5;
  unint64_t v9 = v4;
  long long v6 = *(_OWORD *)&v8[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v8;
  *(void *)unint64_t v2 = &unk_26C660F18;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v6;
  long long v10 = &unk_26C665970;
  sub_215D9C700((uint64_t)v8, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664DE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158995A8@<D0>(_DWORD *a1@<X1>, int *a2@<X2>, unint64_t a3@<X8>)
{
  unint64_t v3 = a3;
  uint64_t v20 = *MEMORY[0x263EF8340];
  LODWORD(a3) = *a1;
  if (*a1)
  {
    unint64_t v4 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)long long v12 = 4;
    unint64_t v5 = *(void *)a1;
    *(_DWORD *)&v12[4] = *(void *)a1;
    uint64_t v6 = *(void *)v12;
    a3 = HIDWORD(v5);
    *(_DWORD *)long long v12 = 1;
    *(void *)&v12[4] = (v4 << 32) | 4;
    uint64_t v7 = *(void *)v12;
    *(_DWORD *)&v10[20] = v4;
    *(void *)&v10[24] = v5;
    *(void *)&unsigned char v10[32] = *(void *)&v12[4];
  }
  else
  {
    *(_DWORD *)long long v12 = 1;
    uint64_t v6 = 4;
    *(void *)&v12[4] = 0;
    uint64_t v7 = 1;
    memset(&v10[20], 0, 20);
  }
  *(void *)long long v10 = v6;
  *(_DWORD *)&unsigned char v10[8] = a3;
  *(void *)&v10[12] = v7;
  int v11 = *a2;
  *(void *)unint64_t v3 = &unk_26C660F18;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v10;
  *(_OWORD *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = *(void *)&v10[32];
  sub_215D92460((uint64_t)v12, (uint64_t)v10, (const float *)&v11);
  *(void *)(v3 + 48) = &unk_26C664DE0;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)&v12[8];
  *(_OWORD *)(v3 + 72) = v13;
  *(_OWORD *)(v3 + 88) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v16;
  *(void *)(v3 + 128) = v17;
  *(void *)(v3 + 152) = v19;
  double result = *(double *)&v18;
  *(_OWORD *)(v3 + 136) = v18;
  *(_DWORD *)(v3 + 160) = 1;
  return result;
}

double sub_215899734@<D0>(_DWORD *a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t v2 = a2;
  uint64_t v19 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *a1;
  if (*a1)
  {
    unint64_t v3 = (unint64_t)a1[2] >> 2;
    *(_DWORD *)int v11 = 4;
    unint64_t v4 = *(void *)a1;
    *(_DWORD *)&v11[4] = *(void *)a1;
    uint64_t v5 = *(void *)v11;
    a2 = HIDWORD(v4);
    *(_DWORD *)int v11 = 1;
    *(void *)&v11[4] = (v3 << 32) | 4;
    uint64_t v6 = *(void *)v11;
    *(_DWORD *)&v9[20] = v3;
    *(void *)&v9[24] = v4;
    *(void *)&unsigned char v9[32] = *(void *)&v11[4];
  }
  else
  {
    *(_DWORD *)int v11 = 1;
    uint64_t v5 = 4;
    *(void *)&v11[4] = 0;
    uint64_t v6 = 1;
    memset(&v9[20], 0, 20);
  }
  *(void *)unint64_t v9 = v5;
  *(_DWORD *)&v9[8] = a2;
  *(void *)&v9[12] = v6;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(v2 + 8) = *(_OWORD *)v9;
  *(void *)unint64_t v2 = &unk_26C660F18;
  *(void *)(v2 + 40) = *(void *)&v9[32];
  *(_OWORD *)(v2 + 24) = v7;
  long long v10 = &unk_26C665970;
  sub_215D9C700((uint64_t)v9, (uint64_t)v11);
  *(void *)(v2 + 48) = &unk_26C664DE0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)&v11[8];
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *(void *)(v2 + 104) = v14;
  *(_OWORD *)(v2 + 112) = v15;
  *(void *)(v2 + 128) = v16;
  *(void *)(v2 + 152) = v18;
  double result = *(double *)&v17;
  *(_OWORD *)(v2 + 136) = v17;
  *(_DWORD *)(v2 + 160) = 1;
  return result;
}

double sub_2158998D8@<D0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  int v15 = *a2;
  *(void *)a3 = &unk_26C660F18;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v4;
  *(void *)(a3 + 40) = *(void *)(a1 + 32);
  sub_215D92460((uint64_t)v6, a1, (const float *)&v15);
  *(void *)(a3 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a3 + 56) = v7;
  *(_OWORD *)(a3 + 72) = v8;
  *(_OWORD *)(a3 + 88) = v9;
  *(void *)(a3 + 104) = v10;
  *(_OWORD *)(a3 + 112) = v11;
  *(void *)(a3 + 128) = v12;
  *(void *)(a3 + 152) = v14;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 136) = v13;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_2158999AC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)a2 = &unk_26C660F18;
  *(_OWORD *)(a2 + 24) = v3;
  *(void *)(a2 + 40) = *(void *)(a1 + 32);
  sub_215D9C700(a1, (uint64_t)v5);
  *(void *)(a2 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 88) = v8;
  *(void *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 112) = v10;
  *(void *)(a2 + 128) = v11;
  *(void *)(a2 + 152) = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 136) = v12;
  *(_DWORD *)(a2 + 160) = 1;
  return result;
}

double sub_215899A98@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v6 = HIDWORD(*a1);
  if (*a1) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = (unint64_t)*a2 << 32;
  if (v7) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (4 * (*a1 != 0));
  *(_DWORD *)int v15 = 4;
  *(_DWORD *)&v15[4] = v5;
  *(void *)long long v12 = *(void *)v15;
  *(_DWORD *)&unsigned char v12[8] = v6;
  *(_DWORD *)int v15 = 1;
  *(void *)&v15[4] = v9;
  *(void *)&v12[12] = *(void *)v15;
  *(_DWORD *)&v12[20] = HIDWORD(v8);
  *(void *)&unsigned char v12[24] = v5;
  uint64_t v13 = v9;
  int v14 = *a3;
  long long v10 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v12;
  *(void *)a4 = &unk_26C660F18;
  *(_OWORD *)(a4 + 24) = v10;
  *(void *)(a4 + 40) = v9;
  sub_215D92460((uint64_t)v15, (uint64_t)v12, (const float *)&v14);
  *(void *)(a4 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v15[8];
  *(_OWORD *)(a4 + 72) = v16;
  *(_OWORD *)(a4 + 88) = v17;
  *(void *)(a4 + 104) = v18;
  *(_OWORD *)(a4 + 112) = v19;
  *(void *)(a4 + 128) = v20;
  *(void *)(a4 + 152) = v22;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 136) = v21;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215899BF8@<D0>(uint64_t *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v5 = HIDWORD(*a1);
  if (*a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  unint64_t v7 = (unint64_t)*a2 << 32;
  if (v6) {
    unint64_t v7 = 0;
  }
  uint64_t v8 = v7 | (4 * (*a1 != 0));
  *(_DWORD *)int v14 = 4;
  *(_DWORD *)&v14[4] = v4;
  *(void *)uint64_t v11 = *(void *)v14;
  *(_DWORD *)&v11[8] = v5;
  *(_DWORD *)int v14 = 1;
  *(void *)&v14[4] = v8;
  *(void *)&v11[12] = *(void *)v14;
  *(_DWORD *)&v11[20] = HIDWORD(v7);
  *(void *)&unsigned char v11[24] = v4;
  uint64_t v12 = v8;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(void *)a3 = &unk_26C660F18;
  *(void *)(a3 + 40) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  uint64_t v13 = &unk_26C665970;
  sub_215D9C700((uint64_t)v11, (uint64_t)v14);
  *(void *)(a3 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v14[8];
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 88) = v16;
  *(void *)(a3 + 104) = v17;
  *(_OWORD *)(a3 + 112) = v18;
  *(void *)(a3 + 128) = v19;
  *(void *)(a3 + 152) = v21;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 136) = v20;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

double sub_215899D70@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, int *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  if (v5)
  {
    if (a1[1])
    {
      unsigned int v6 = 4 * v5;
      int v7 = v6 % *a2;
      int v8 = *a2 - v7;
      if (!v7) {
        int v8 = 0;
      }
      uint64_t v5 = v8 + v6;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v9 = 4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | (v5 << 32);
  *(_DWORD *)uint64_t v17 = 4;
  uint64_t v11 = *(void *)a1;
  *(_DWORD *)&v17[4] = *(void *)a1;
  *(void *)int v14 = *(void *)v17;
  *(_DWORD *)&v14[8] = HIDWORD(v11);
  *(_DWORD *)uint64_t v17 = 1;
  *(void *)&v17[4] = v10;
  *(void *)&v14[12] = *(void *)v17;
  *(_DWORD *)&v14[20] = v5;
  *(void *)&unsigned char v14[24] = v11;
  uint64_t v15 = v10;
  int v16 = *a3;
  long long v12 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a4 + 8) = *(_OWORD *)v14;
  *(void *)a4 = &unk_26C660F18;
  *(_OWORD *)(a4 + 24) = v12;
  *(void *)(a4 + 40) = v10;
  sub_215D92460((uint64_t)v17, (uint64_t)v14, (const float *)&v16);
  *(void *)(a4 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)&v17[8];
  *(_OWORD *)(a4 + 72) = v18;
  *(_OWORD *)(a4 + 88) = v19;
  *(void *)(a4 + 104) = v20;
  *(_OWORD *)(a4 + 112) = v21;
  *(void *)(a4 + 128) = v22;
  *(void *)(a4 + 152) = v24;
  double result = *(double *)&v23;
  *(_OWORD *)(a4 + 136) = v23;
  *(_DWORD *)(a4 + 160) = 1;
  return result;
}

double sub_215899EF8@<D0>(unsigned int *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  if (v4)
  {
    if (a1[1])
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | (v4 << 32);
  *(_DWORD *)int v16 = 4;
  uint64_t v10 = *(void *)a1;
  *(_DWORD *)&v16[4] = *(void *)a1;
  *(void *)uint64_t v13 = *(void *)v16;
  *(_DWORD *)&v13[8] = HIDWORD(v10);
  *(_DWORD *)int v16 = 1;
  *(void *)&v16[4] = v9;
  *(void *)&v13[12] = *(void *)v16;
  *(_DWORD *)&v13[20] = v4;
  *(void *)&unsigned char v13[24] = v10;
  uint64_t v14 = v9;
  long long v11 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(void *)a3 = &unk_26C660F18;
  *(void *)(a3 + 40) = v9;
  *(_OWORD *)(a3 + 24) = v11;
  uint64_t v15 = &unk_26C665970;
  sub_215D9C700((uint64_t)v13, (uint64_t)v16);
  *(void *)(a3 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)&v16[8];
  *(_OWORD *)(a3 + 72) = v17;
  *(_OWORD *)(a3 + 88) = v18;
  *(void *)(a3 + 104) = v19;
  *(_OWORD *)(a3 + 112) = v20;
  *(void *)(a3 + 128) = v21;
  *(void *)(a3 + 152) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 136) = v22;
  *(_DWORD *)(a3 + 160) = 1;
  return result;
}

uint64_t sub_21589A098@<X0>(long long *a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v2 = a2;
  void v16[2] = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a1 + 8);
  uint64_t v4 = 4 * (v3 != 0);
  LODWORD(a2) = v4 * v3;
  BOOL v5 = *((_DWORD *)a1 + 9) == 0;
  v11[0] = 4;
  uint64_t v6 = *((void *)a1 + 4);
  if (v5) {
    a2 = 0;
  }
  else {
    a2 = a2;
  }
  *(void *)&v11[1] = *((void *)a1 + 4);
  LODWORD(v16[0]) = 1;
  *(void *)((char *)v16 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  uint64_t v12 = v16[0];
  int v13 = a2;
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)((char *)v16 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584DF98(v2, (uint64_t)v11, v10);
}

uint64_t sub_21589A164@<X0>(long long *a1@<X1>, unsigned int *a2@<X2>, uint64_t a3@<X8>)
{
  void v17[2] = *MEMORY[0x263EF8340];
  unint64_t v4 = *((void *)a1 + 4);
  if (v4) {
    BOOL v5 = HIDWORD(v4) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  unint64_t v6 = (unint64_t)*a2 << 32;
  int v11 = 4;
  unint64_t v12 = v4;
  if (v5) {
    unint64_t v6 = 0;
  }
  HIDWORD(v12) = HIDWORD(v4);
  LODWORD(v17[0]) = 1;
  *(void *)((char *)v17 + 4) = v6 | (4 * (v4 != 0));
  uint64_t v13 = v17[0];
  int v14 = HIDWORD(v6);
  unint64_t v15 = v4;
  uint64_t v16 = *(void *)((char *)v17 + 4);
  long long v7 = *a1;
  long long v8 = a1[2];
  v10[1] = a1[1];
  uint64_t v10[2] = v8;
  v10[0] = v7;
  return sub_21584DF98(a3, (uint64_t)&v11, v10);
}

uint64_t sub_21589A22C@<X0>(long long *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *((unsigned int *)a1 + 8);
  if (v4)
  {
    if (*((_DWORD *)a1 + 9))
    {
      unsigned int v5 = 4 * v4;
      int v6 = v5 % *a2;
      int v7 = *a2 - v6;
      if (!v6) {
        int v7 = 0;
      }
      uint64_t v4 = v7 + v5;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v8 = 0;
  }
  int v14 = 4;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v15 = v9;
  LODWORD(v20[0]) = 1;
  *(void *)((char *)v20 + 4) = v8 | (v4 << 32);
  uint64_t v16 = v20[0];
  int v17 = v4;
  uint64_t v18 = v9;
  uint64_t v19 = *(void *)((char *)v20 + 4);
  long long v10 = *a1;
  long long v11 = a1[2];
  v13[1] = a1[1];
  uint64_t v13[2] = v11;
  v13[0] = v10;
  return sub_21584DF98(a3, (uint64_t)&v14, v13);
}

__n128 sub_21589A31C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_21589A330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C664DE0;
  long long v3 = *(_OWORD *)(a3 + 8);
  long long v4 = *(_OWORD *)(a3 + 24);
  long long v5 = *(_OWORD *)(a3 + 40);
  *(void *)(a2 + 56) = *(void *)(a3 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  *(_OWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(void *)(a2 + 80) = *(void *)(a3 + 80);
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  __n128 result = *(__n128 *)(a3 + 88);
  *(void *)(a2 + 104) = *(void *)(a3 + 104);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

void sub_21589A394(uint64_t a1, int a2, _DWORD *a3)
{
  uint64_t v128 = *MEMORY[0x263EF8340];
  switch(a2)
  {
    case 1:
      LODWORD(v3) = *a3;
      BOOL v4 = *a3 != 0;
      if (a3[1]) {
        uint64_t v3 = v3;
      }
      else {
        uint64_t v3 = 0;
      }
      *(void *)uint64_t v119 = *(void *)a3;
      *(void *)&v119[8] = v4 | (v3 << 32);
      uint64_t v123 = &unk_26C665220;
      sub_215D92C68((uint64_t *)v119, (uint64_t)v124);
      operator new();
    case 2:
      LODWORD(v8) = *a3;
      BOOL v9 = *a3 != 0;
      if (a3[1]) {
        uint64_t v8 = v8;
      }
      else {
        uint64_t v8 = 0;
      }
      *(void *)uint64_t v119 = *(void *)a3;
      *(void *)&v119[8] = v9 | (v8 << 32);
      uint64_t v123 = &unk_26C665250;
      sub_215D92EA0((uint64_t *)v119, (uint64_t)v124);
      operator new();
    case 3:
      LODWORD(v10) = *a3;
      BOOL v11 = *a3 != 0;
      if (a3[1]) {
        uint64_t v10 = v10;
      }
      else {
        uint64_t v10 = 0;
      }
      *(void *)uint64_t v119 = *(void *)a3;
      *(void *)&v119[8] = v11 | (v10 << 32);
      uint64_t v123 = &unk_26C665280;
      sub_215D930F0((uint64_t *)v119, (uint64_t)v124);
      uint64_t v125 = 0;
      uint64_t v126 = 0;
      sub_215D7D7C4((uint64_t)v124);
      operator new();
    case 4:
      LODWORD(v12) = *a3;
      BOOL v13 = *a3 != 0;
      if (a3[1]) {
        uint64_t v12 = v12;
      }
      else {
        uint64_t v12 = 0;
      }
      *(void *)uint64_t v119 = *(void *)a3;
      *(void *)&v119[8] = v13 | (v12 << 32);
      uint64_t v123 = &unk_26C6652B0;
      sub_215D93398((uint64_t *)v119, (uint64_t)v124);
      operator new();
    case 5:
      uint64_t v14 = 2 * (*a3 != 0);
      LODWORD(v15) = v14 * *a3;
      if (a3[1]) {
        unint64_t v15 = v15;
      }
      else {
        unint64_t v15 = 0;
      }
      *(_DWORD *)unint64_t v124 = 2;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v16 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v14 & 0x1FFFFFFFFLL | ((unint64_t)(v15 >> 1) << 33);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v16);
      int v120 = v15;
      uint64_t v121 = v16;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6652E0;
      sub_215D935F0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 6:
      uint64_t v17 = 2 * (*a3 != 0);
      LODWORD(v18) = v17 * *a3;
      if (a3[1]) {
        unint64_t v18 = v18;
      }
      else {
        unint64_t v18 = 0;
      }
      *(_DWORD *)unint64_t v124 = 2;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v19 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v19);
      int v120 = v18;
      uint64_t v121 = v19;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665310;
      sub_215D93B0C((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 7:
      uint64_t v20 = 2 * (*a3 != 0);
      LODWORD(v21) = v20 * *a3;
      if (a3[1]) {
        unint64_t v21 = v21;
      }
      else {
        unint64_t v21 = 0;
      }
      *(_DWORD *)unint64_t v124 = 2;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v22 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v20 & 0x1FFFFFFFFLL | ((unint64_t)(v21 >> 1) << 33);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v22);
      int v120 = v21;
      uint64_t v121 = v22;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665340;
      sub_215D93E6C((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D7F440((uint64_t)v124);
      operator new();
    case 8:
      uint64_t v23 = 2 * (*a3 != 0);
      LODWORD(v24) = v23 * *a3;
      if (a3[1]) {
        unint64_t v24 = v24;
      }
      else {
        unint64_t v24 = 0;
      }
      *(_DWORD *)unint64_t v124 = 2;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v25 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v23 & 0x1FFFFFFFFLL | ((unint64_t)(v24 >> 1) << 33);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v25);
      int v120 = v24;
      uint64_t v121 = v25;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665370;
      sub_215D9430C((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 9:
      if (*a3) {
        uint64_t v26 = 3;
      }
      else {
        uint64_t v26 = 0;
      }
      LODWORD(v27) = v26 * *a3;
      if (a3[1]) {
        uint64_t v27 = v27;
      }
      else {
        uint64_t v27 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v28 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v26 | (v27 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v28);
      int v120 = v27;
      uint64_t v121 = v28;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6653A0;
      sub_215D94674((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 10:
      if (*a3) {
        uint64_t v29 = 3;
      }
      else {
        uint64_t v29 = 0;
      }
      LODWORD(v30) = v29 * *a3;
      if (a3[1]) {
        uint64_t v30 = v30;
      }
      else {
        uint64_t v30 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v31 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v29 | (v30 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v31);
      int v120 = v30;
      uint64_t v121 = v31;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6653D0;
      sub_215D94B80((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 11:
      if (*a3) {
        uint64_t v32 = 3;
      }
      else {
        uint64_t v32 = 0;
      }
      LODWORD(v33) = v32 * *a3;
      if (a3[1]) {
        uint64_t v33 = v33;
      }
      else {
        uint64_t v33 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v34 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v32 | (v33 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v34);
      int v120 = v33;
      uint64_t v121 = v34;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665400;
      sub_215D94EDC((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D81984((uint64_t)v124);
      operator new();
    case 12:
      if (*a3) {
        uint64_t v35 = 3;
      }
      else {
        uint64_t v35 = 0;
      }
      LODWORD(v36) = v35 * *a3;
      if (a3[1]) {
        uint64_t v36 = v36;
      }
      else {
        uint64_t v36 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v37 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v35 | (v36 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v37);
      int v120 = v36;
      uint64_t v121 = v37;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665430;
      sub_215D95378((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 13:
      uint64_t v38 = 4 * (*a3 != 0);
      LODWORD(v39) = v38 * *a3;
      if (a3[1]) {
        unint64_t v39 = v39;
      }
      else {
        unint64_t v39 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v40 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v38 & 0x3FFFFFFFFLL | ((unint64_t)(v39 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v40);
      int v120 = v39;
      uint64_t v121 = v40;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665460;
      sub_215D956D4((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 14:
      uint64_t v41 = 4 * (*a3 != 0);
      LODWORD(v42) = v41 * *a3;
      if (a3[1]) {
        unint64_t v42 = v42;
      }
      else {
        unint64_t v42 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v43 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v41 & 0x3FFFFFFFFLL | ((unint64_t)(v42 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v43);
      int v120 = v42;
      uint64_t v121 = v43;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665490;
      sub_215D95BF0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 15:
      uint64_t v44 = 4 * (*a3 != 0);
      LODWORD(v45) = v44 * *a3;
      if (a3[1]) {
        unint64_t v45 = v45;
      }
      else {
        unint64_t v45 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v46 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v44 & 0x3FFFFFFFFLL | ((unint64_t)(v45 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v46);
      int v120 = v45;
      uint64_t v121 = v46;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6654C0;
      sub_215D95F54((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D83E30((uint64_t)v124);
      operator new();
    case 16:
      uint64_t v47 = 4 * (*a3 != 0);
      LODWORD(v48) = v47 * *a3;
      if (a3[1]) {
        unint64_t v48 = v48;
      }
      else {
        unint64_t v48 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v49 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v47 & 0x3FFFFFFFFLL | ((unint64_t)(v48 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v49);
      int v120 = v48;
      uint64_t v121 = v49;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6654F0;
      sub_215D96400((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 17:
      if (*a3) {
        uint64_t v50 = 3;
      }
      else {
        uint64_t v50 = 0;
      }
      LODWORD(v51) = v50 * *a3;
      if (a3[1]) {
        uint64_t v51 = v51;
      }
      else {
        uint64_t v51 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v52 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v50 | (v51 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v52);
      int v120 = v51;
      uint64_t v121 = v52;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665520;
      sub_215D96764((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 18:
      if (*a3) {
        uint64_t v53 = 3;
      }
      else {
        uint64_t v53 = 0;
      }
      LODWORD(v54) = v53 * *a3;
      if (a3[1]) {
        uint64_t v54 = v54;
      }
      else {
        uint64_t v54 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v55 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v53 | (v54 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v55);
      int v120 = v54;
      uint64_t v121 = v55;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665550;
      sub_215D96C70((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 19:
      if (*a3) {
        uint64_t v56 = 3;
      }
      else {
        uint64_t v56 = 0;
      }
      LODWORD(v57) = v56 * *a3;
      if (a3[1]) {
        uint64_t v57 = v57;
      }
      else {
        uint64_t v57 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v58 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v56 | (v57 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v58);
      int v120 = v57;
      uint64_t v121 = v58;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665580;
      sub_215D96FCC((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D863C0((uint64_t)v124);
      operator new();
    case 20:
      if (*a3) {
        uint64_t v59 = 3;
      }
      else {
        uint64_t v59 = 0;
      }
      LODWORD(v60) = v59 * *a3;
      if (a3[1]) {
        uint64_t v60 = v60;
      }
      else {
        uint64_t v60 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v61 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v59 | (v60 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v61);
      int v120 = v60;
      uint64_t v121 = v61;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6655B0;
      sub_215D97468((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 21:
      if (*a3) {
        uint64_t v62 = 3;
      }
      else {
        uint64_t v62 = 0;
      }
      LODWORD(v63) = v62 * *a3;
      if (a3[1]) {
        uint64_t v63 = v63;
      }
      else {
        uint64_t v63 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v64 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v62 | (v63 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v64);
      int v120 = v63;
      uint64_t v121 = v64;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6655E0;
      sub_215D977C4((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 22:
      if (*a3) {
        uint64_t v65 = 3;
      }
      else {
        uint64_t v65 = 0;
      }
      LODWORD(v66) = v65 * *a3;
      if (a3[1]) {
        uint64_t v66 = v66;
      }
      else {
        uint64_t v66 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v67 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v65 | (v66 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v67);
      int v120 = v66;
      uint64_t v121 = v67;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665610;
      sub_215D97CD0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 23:
      if (*a3) {
        uint64_t v68 = 3;
      }
      else {
        uint64_t v68 = 0;
      }
      LODWORD(v69) = v68 * *a3;
      if (a3[1]) {
        uint64_t v69 = v69;
      }
      else {
        uint64_t v69 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v70 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v68 | (v69 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v70);
      int v120 = v69;
      uint64_t v121 = v70;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665640;
      sub_215D9802C((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D88A5C((uint64_t)v124);
      operator new();
    case 24:
      if (*a3) {
        uint64_t v71 = 3;
      }
      else {
        uint64_t v71 = 0;
      }
      LODWORD(v72) = v71 * *a3;
      if (a3[1]) {
        uint64_t v72 = v72;
      }
      else {
        uint64_t v72 = 0;
      }
      *(_DWORD *)unint64_t v124 = 3;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v73 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v71 | (v72 << 32);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v73);
      int v120 = v72;
      uint64_t v121 = v73;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665670;
      sub_215D984C8((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 25:
      uint64_t v74 = 4 * (*a3 != 0);
      LODWORD(v75) = v74 * *a3;
      if (a3[1]) {
        unint64_t v75 = v75;
      }
      else {
        unint64_t v75 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v76 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v74 & 0x3FFFFFFFFLL | ((unint64_t)(v75 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v76);
      int v120 = v75;
      uint64_t v121 = v76;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6656A0;
      sub_215D98824((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 26:
      uint64_t v77 = 4 * (*a3 != 0);
      LODWORD(v78) = v77 * *a3;
      if (a3[1]) {
        unint64_t v78 = v78;
      }
      else {
        unint64_t v78 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v79 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v77 & 0x3FFFFFFFFLL | ((unint64_t)(v78 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v79);
      int v120 = v78;
      uint64_t v121 = v79;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6656D0;
      sub_215D98D40((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 27:
      uint64_t v5 = 4 * (*a3 != 0);
      LODWORD(v6) = v5 * *a3;
      if (a3[1]) {
        unint64_t v6 = v6;
      }
      else {
        unint64_t v6 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v7 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v7);
      int v120 = v6;
      uint64_t v121 = v7;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665700;
      sub_215D990A4((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D8AF08((uint64_t)v124);
      operator new();
    case 28:
      uint64_t v80 = 4 * (*a3 != 0);
      LODWORD(v81) = v80 * *a3;
      if (a3[1]) {
        unint64_t v81 = v81;
      }
      else {
        unint64_t v81 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v82 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v80 & 0x3FFFFFFFFLL | ((unint64_t)(v81 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v82);
      int v120 = v81;
      uint64_t v121 = v82;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665730;
      sub_215D99550((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 29:
      uint64_t v83 = 4 * (*a3 != 0);
      LODWORD(v84) = v83 * *a3;
      if (a3[1]) {
        unint64_t v84 = v84;
      }
      else {
        unint64_t v84 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v85 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v83 & 0x3FFFFFFFFLL | ((unint64_t)(v84 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v85);
      int v120 = v84;
      uint64_t v121 = v85;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665760;
      sub_215D998B4((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 30:
      uint64_t v86 = 4 * (*a3 != 0);
      LODWORD(v87) = v86 * *a3;
      if (a3[1]) {
        unint64_t v87 = v87;
      }
      else {
        unint64_t v87 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v88 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v86 & 0x3FFFFFFFFLL | ((unint64_t)(v87 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v88);
      int v120 = v87;
      uint64_t v121 = v88;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665790;
      sub_215D99DD0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 31:
      uint64_t v89 = 4 * (*a3 != 0);
      LODWORD(v90) = v89 * *a3;
      if (a3[1]) {
        unint64_t v90 = v90;
      }
      else {
        unint64_t v90 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v91 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v89 & 0x3FFFFFFFFLL | ((unint64_t)(v90 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v91);
      int v120 = v90;
      uint64_t v121 = v91;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6657C0;
      sub_215D9A134((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D8D2A8((uint64_t)v124);
      operator new();
    case 32:
      uint64_t v92 = 4 * (*a3 != 0);
      LODWORD(v93) = v92 * *a3;
      if (a3[1]) {
        unint64_t v93 = v93;
      }
      else {
        unint64_t v93 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v94 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v92 & 0x3FFFFFFFFLL | ((unint64_t)(v93 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v94);
      int v120 = v93;
      uint64_t v121 = v94;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6657F0;
      sub_215D9A5E0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 33:
      uint64_t v95 = 4 * (*a3 != 0);
      LODWORD(v96) = v95 * *a3;
      if (a3[1]) {
        unint64_t v96 = v96;
      }
      else {
        unint64_t v96 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v97 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v95 & 0x3FFFFFFFFLL | ((unint64_t)(v96 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v97);
      int v120 = v96;
      uint64_t v121 = v97;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665820;
      sub_215D9A944((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 34:
      uint64_t v98 = 4 * (*a3 != 0);
      LODWORD(v99) = v98 * *a3;
      if (a3[1]) {
        unint64_t v99 = v99;
      }
      else {
        unint64_t v99 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v100 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v98 & 0x3FFFFFFFFLL | ((unint64_t)(v99 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v100);
      int v120 = v99;
      uint64_t v121 = v100;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665850;
      sub_215D9AE60((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 35:
      uint64_t v101 = 4 * (*a3 != 0);
      LODWORD(v102) = v101 * *a3;
      if (a3[1]) {
        unint64_t v102 = v102;
      }
      else {
        unint64_t v102 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v103 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v101 & 0x3FFFFFFFFLL | ((unint64_t)(v102 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v103);
      int v120 = v102;
      uint64_t v121 = v103;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665880;
      sub_215D9B1C4((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D8F648((uint64_t)v124);
      operator new();
    case 36:
      uint64_t v104 = 4 * (*a3 != 0);
      LODWORD(v105) = v104 * *a3;
      if (a3[1]) {
        unint64_t v105 = v105;
      }
      else {
        unint64_t v105 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v106 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v104 & 0x3FFFFFFFFLL | ((unint64_t)(v105 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v106);
      int v120 = v105;
      uint64_t v121 = v106;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6658B0;
      sub_215D9B670((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 37:
      uint64_t v107 = 4 * (*a3 != 0);
      LODWORD(v108) = v107 * *a3;
      if (a3[1]) {
        unint64_t v108 = v108;
      }
      else {
        unint64_t v108 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v109 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v107 & 0x3FFFFFFFFLL | ((unint64_t)(v108 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v109);
      int v120 = v108;
      uint64_t v121 = v109;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C6658E0;
      sub_215D9B9D4((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 38:
      uint64_t v110 = 4 * (*a3 != 0);
      LODWORD(v111) = v110 * *a3;
      if (a3[1]) {
        unint64_t v111 = v111;
      }
      else {
        unint64_t v111 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v112 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v110 & 0x3FFFFFFFFLL | ((unint64_t)(v111 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v112);
      int v120 = v111;
      uint64_t v121 = v112;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665910;
      sub_215D9BEF0((uint64_t)v119, (uint64_t)v124);
      operator new();
    case 39:
      uint64_t v113 = 4 * (*a3 != 0);
      LODWORD(v114) = v113 * *a3;
      if (a3[1]) {
        unint64_t v114 = v114;
      }
      else {
        unint64_t v114 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v115 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v113 & 0x3FFFFFFFFLL | ((unint64_t)(v114 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v115);
      int v120 = v114;
      uint64_t v121 = v115;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665940;
      sub_215D9C254((uint64_t)v119, (uint64_t)v124);
      long long v127 = 0uLL;
      sub_215D919E8((uint64_t)v124);
      operator new();
    case 40:
      uint64_t v116 = 4 * (*a3 != 0);
      LODWORD(v117) = v116 * *a3;
      if (a3[1]) {
        unint64_t v117 = v117;
      }
      else {
        unint64_t v117 = 0;
      }
      *(_DWORD *)unint64_t v124 = 4;
      *(void *)&v124[4] = *(void *)a3;
      uint64_t v118 = *(void *)&v124[4];
      *(void *)uint64_t v119 = *(void *)v124;
      *(_DWORD *)unint64_t v124 = 1;
      *(void *)&v124[4] = v116 & 0x3FFFFFFFFLL | ((unint64_t)(v117 >> 2) << 34);
      *(void *)&v119[12] = *(void *)v124;
      *(_DWORD *)&v119[8] = HIDWORD(v118);
      int v120 = v117;
      uint64_t v121 = v118;
      uint64_t v122 = *(void *)&v124[4];
      uint64_t v123 = &unk_26C665970;
      sub_215D9C700((uint64_t)v119, (uint64_t)v124);
      operator new();
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_21589F440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_2158A07BC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[5].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661348[v5])(&v7, v4);
  }
  v4[5].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[5].n128_u32[0] = 0;
  return result;
}

void sub_2158A0850(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 80);
  if (v5 == -1) {
    goto LABEL_10;
  }
  if (v5 != 1)
  {
    ((void (*)(size_t *, uint64_t))off_26C661348[v5])(v12, v4);
LABEL_10:
    *(_DWORD *)(v4 + 80) = -1;
    *(void *)uint64_t v4 = &unk_26C663A60;
    long long v9 = *(_OWORD *)(a3 + 8);
    *(_OWORD *)(v4 + 20) = *(_OWORD *)(a3 + 20);
    *(_OWORD *)(v4 + 8) = v9;
    sub_21584EF24(v4 + 40, a3 + 40);
    *(_DWORD *)(v4 + 80) = 1;
    return;
  }
  char v7 = (_OWORD *)(a2 + 8);
  uint64_t v8 = (_OWORD *)(a3 + 8);
  if (*(void *)(a2 + 48)
    && *(_DWORD *)v8 == *(_DWORD *)v7
    && *(_DWORD *)(a3 + 12) == *(_DWORD *)(a2 + 12)
    && *(_DWORD *)(a3 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a3 + 20) == *(_DWORD *)(a2 + 20))
  {
    v12[0] = a3 + 8;
    v12[1] = a2 + 8;
    sub_2158A09D8(v12);
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *v8;
    *(_OWORD *)((char *)&v12[1] + 4) = *(_OWORD *)(a3 + 20);
    sub_21584EF24((uint64_t)v13, a3 + 40);
    *char v7 = *(_OWORD *)v12;
    *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)((char *)&v12[1] + 4);
    *(_OWORD *)(a2 + 64) = v14;
    *(void *)(a2 + 40) = v13[0];
    uint64_t v10 = *(void **)(a2 + 48);
    if (v10) {
      free(v10);
    }
    uint64_t v11 = v13[2];
    *(void *)(a2 + 48) = v13[1];
    *(void *)(a2 + 56) = v11;
  }
}

size_t *sub_2158A09D8(size_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  uint64_t v3 = *(unsigned int *)(*result + 8);
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  if (v3 != 1 || v4 != 1)
  {
    int v6 = *(_DWORD *)(v1 + 4);
    if (*(_DWORD *)v1) {
      BOOL v7 = v6 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7)
    {
      int v8 = *(_DWORD *)v1 - 1;
      long long v9 = *(unsigned char **)(v1 + 40);
      uint64_t v10 = *(size_t **)(v2 + 40);
      int v11 = v6 - 1;
      if (v11)
      {
        uint64_t v12 = *(unsigned int *)(v2 + 12);
        uint64_t v13 = *(unsigned int *)(v1 + 12);
        if (*(_DWORD *)v1 == 1)
        {
          do
          {
            *(unsigned char *)uint64_t v10 = *v9;
            v9 += v13;
            uint64_t v10 = (size_t *)((char *)v10 + v12);
            --v11;
          }
          while (v11);
        }
        else
        {
          for (int i = 0; i != v11; ++i)
          {
            int v15 = v8;
            uint64_t v16 = v9;
            __n128 result = v10;
            do
            {
              *(unsigned char *)__n128 result = *v16;
              v16 += v3;
              __n128 result = (size_t *)((char *)result + v4);
              --v15;
            }
            while (v15);
            *(unsigned char *)__n128 result = *v16;
            v9 += v13;
            uint64_t v10 = (size_t *)((char *)v10 + v12);
          }
        }
      }
      for (; v8; --v8)
      {
        *(unsigned char *)uint64_t v10 = *v9;
        v9 += v3;
        uint64_t v10 = (size_t *)((char *)v10 + v4);
      }
      *(unsigned char *)uint64_t v10 = *v9;
    }
    return result;
  }
  int v17 = *(_DWORD *)(v1 + 12);
  if (v17 != *(_DWORD *)(v2 + 12))
  {
    unsigned int v18 = *(_DWORD *)v1;
LABEL_30:
    size_t v24 = v18;
    if (v18) {
      BOOL v22 = *(_DWORD *)(v1 + 4) == 0;
    }
    else {
      BOOL v22 = 1;
    }
    if (!v22) {
      return sub_2158A0BB8(&v24, v1, v2);
    }
    return result;
  }
  unsigned int v18 = *(_DWORD *)v1;
  if (v17 != *(_DWORD *)v1) {
    goto LABEL_30;
  }
  size_t v19 = (*(_DWORD *)(v1 + 4) * v17);
  uint64_t v20 = *(const void **)(v1 + 40);
  if (v19) {
    BOOL v21 = v20 == 0;
  }
  else {
    BOOL v21 = 0;
  }
  if (v21)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
  }
  else if (!v19)
  {
    return result;
  }
  uint64_t v23 = *(void **)(v2 + 40);

  return (size_t *)memmove(v23, v20, v19);
}

size_t *sub_2158A0BB8(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  if (*(_DWORD *)a2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = result;
    int v6 = *(char **)(a2 + 40);
    BOOL v7 = *(char **)(a3 + 40);
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = *(unsigned int *)(a3 + 12);
      uint64_t v10 = *(unsigned int *)(a2 + 12);
      do
      {
        size_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        __n128 result = (size_t *)memmove(v7, v6, v11);
LABEL_11:
        v6 += v10;
        v7 += v9;
        --v8;
      }
      while (v8);
    }
    size_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (size_t *)memmove(v7, v6, v12);
  }
  return result;
}

__n128 sub_2158A0D28(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[5].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661368[v5])(&v7, v4);
  }
  v4[5].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[5].n128_u32[0] = 0;
  return result;
}

void sub_2158A0DBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 80);
  if (v5 == -1) {
    goto LABEL_12;
  }
  if (v5 != 1)
  {
    ((void (*)(_OWORD *, uint64_t))off_26C661368[v5])(v13, v4);
LABEL_12:
    *(_DWORD *)(v4 + 80) = -1;
    *(void *)uint64_t v4 = &unk_26C663AE0;
    long long v10 = *(_OWORD *)(a3 + 8);
    *(_OWORD *)(v4 + 20) = *(_OWORD *)(a3 + 20);
    *(_OWORD *)(v4 + 8) = v10;
    sub_21584FABC(v4 + 40, a3 + 40);
    *(_DWORD *)(v4 + 80) = 1;
    return;
  }
  char v7 = (_OWORD *)(a2 + 8);
  int v8 = (_OWORD *)(a3 + 8);
  if (*(void *)(a2 + 48)
    && *(_DWORD *)v8 == *(_DWORD *)v7
    && *(_DWORD *)(a3 + 12) == *(_DWORD *)(a2 + 12)
    && *(_DWORD *)(a3 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a3 + 20) == *(_DWORD *)(a2 + 20))
  {
    uint64_t v9 = a2 + 8;
    sub_2158A0F4C((uint64_t)v8, v9);
  }
  else
  {
    v13[0] = *v8;
    *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)(a3 + 20);
    sub_21584FABC((uint64_t)v14, a3 + 40);
    *char v7 = v13[0];
    *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)((char *)v13 + 12);
    *(_OWORD *)(a2 + 64) = v15;
    *(void *)(a2 + 40) = v14[0];
    size_t v11 = *(void **)(a2 + 48);
    if (v11) {
      free(v11);
    }
    uint64_t v12 = v14[2];
    *(void *)(a2 + 48) = v14[1];
    *(void *)(a2 + 56) = v12;
  }
}

uint64_t sub_2158A0F4C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(result + 8);
  uint64_t v4 = *(unsigned int *)(a2 + 8);
  if (v3 == 1 && v4 == 1)
  {
    int v22 = *(_DWORD *)(result + 12);
    int v23 = *(_DWORD *)result;
    if (v22 == *(_DWORD *)(a2 + 12) && v22 == v23)
    {
      uint64_t v26 = (*(_DWORD *)(result + 4) * v22);
      uint64_t v27 = *(const void **)(result + 40);
      if (v26) {
        BOOL v28 = v27 == 0;
      }
      else {
        BOOL v28 = 0;
      }
      if (v28)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v26)
      {
        return result;
      }
      uint64_t v29 = *(void **)(a2 + 40);
      return (uint64_t)memmove(v29, v27, 2 * v26);
    }
    else
    {
      uint64_t v30 = *(unsigned int *)result;
      if (v23) {
        BOOL v25 = *(_DWORD *)(result + 4) == 0;
      }
      else {
        BOOL v25 = 1;
      }
      if (!v25) {
        return (uint64_t)sub_2158A1144(&v30, result, a2);
      }
    }
  }
  else
  {
    int v6 = *(_DWORD *)(result + 4);
    if (*(_DWORD *)result) {
      BOOL v7 = v6 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7)
    {
      int v8 = *(_DWORD *)result - 1;
      uint64_t v9 = *(_WORD **)(result + 40);
      long long v10 = *(_WORD **)(a2 + 40);
      int v11 = v6 - 1;
      if (v11)
      {
        uint64_t v12 = *(unsigned int *)(a2 + 12);
        uint64_t v13 = *(unsigned int *)(result + 12);
        if (*(_DWORD *)result == 1)
        {
          do
          {
            *long long v10 = *v9;
            v9 += v13;
            v10 += v12;
            --v11;
          }
          while (v11);
LABEL_40:
          *long long v10 = *v9;
          return result;
        }
        int v14 = 0;
        uint64_t v15 = 2 * v13;
        uint64_t v16 = 2 * v12;
        __n128 result = 2 * v4;
        do
        {
          int v17 = v10;
          unsigned int v18 = v9;
          int v19 = v8;
          do
          {
            _WORD *v17 = *v18;
            v18 += v3;
            int v17 = (_WORD *)((char *)v17 + result);
            --v19;
          }
          while (v19);
          _WORD *v17 = *v18;
          uint64_t v9 = (_WORD *)((char *)v9 + v15);
          long long v10 = (_WORD *)((char *)v10 + v16);
          ++v14;
        }
        while (v14 != v11);
      }
      if (v8)
      {
        uint64_t v20 = 2 * v3;
        uint64_t v21 = 2 * v4;
        do
        {
          *long long v10 = *v9;
          uint64_t v9 = (_WORD *)((char *)v9 + v20);
          long long v10 = (_WORD *)((char *)v10 + v21);
          --v8;
        }
        while (v8);
      }
      goto LABEL_40;
    }
  }
  return result;
}

uint64_t *sub_2158A1144(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  if (*(_DWORD *)a2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = result;
    int v6 = *(char **)(a2 + 40);
    BOOL v7 = *(char **)(a3 + 40);
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = 2 * *(unsigned int *)(a2 + 12);
      uint64_t v10 = 2 * *(unsigned int *)(a3 + 12);
      do
      {
        uint64_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        __n128 result = (uint64_t *)memmove(v7, v6, 2 * v11);
LABEL_11:
        v6 += v9;
        v7 += v10;
        --v8;
      }
      while (v8);
    }
    uint64_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (uint64_t *)memmove(v7, v6, 2 * v12);
  }
  return result;
}

__int16 sub_2158A12BC@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(unsigned int *)(v2 + 16);
  uint64_t v5 = *(unsigned int *)(v3 + 16);
  if (v4 == 1 && v5 == 1)
  {
    int v24 = *(_DWORD *)(v2 + 20);
    if (v24 == *(_DWORD *)(v3 + 20) && v24 == *(_DWORD *)(v2 + 8))
    {
      uint64_t v25 = (*(_DWORD *)(v2 + 12) * v24);
      uint64_t v26 = *(void *)v2;
      if (v25) {
        BOOL v27 = v26 == 0;
      }
      else {
        BOOL v27 = 0;
      }
      if (v27)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v25)
      {
        return v28;
      }
      uint64_t v29 = *(_WORD **)v3;
      unint64_t v30 = (v25 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v30 < 0xF)
      {
        uint64_t v31 = (__int16 *)v26;
      }
      else
      {
        uint64_t v31 = (__int16 *)v26;
        if ((unint64_t)v29 - v26 >= 0x20)
        {
          unint64_t v32 = v30 + 1;
          unint64_t v33 = v32 & 0xFFFFFFFFFFFFFFF0;
          uint64_t v34 = &v29[v33];
          uint64_t v31 = (__int16 *)(v26 + v33 * 2);
          uint64_t v35 = (long long *)(v26 + 16);
          uint64_t v36 = v29 + 8;
          unint64_t v37 = v32 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            long long v28 = *(v35 - 1);
            long long v38 = *v35;
            *(v36 - 1) = v28;
            _OWORD *v36 = v38;
            v35 += 2;
            v36 += 2;
            v37 -= 16;
          }
          while (v37);
          uint64_t v29 = v34;
          if (v32 == (v32 & 0xFFFFFFFFFFFFFFF0)) {
            return v28;
          }
        }
      }
      do
      {
        __int16 v39 = *v31++;
        LOWORD(v28) = v39;
        *v29++ = v39;
      }
      while (v31 != (__int16 *)(v26 + 2 * v25));
      return v28;
    }
    LOWORD(v28) = sub_2158A1500((uint64_t *)v2, (uint64_t *)v3);
  }
  else
  {
    int v7 = *(_DWORD *)(v2 + 8);
    int v8 = *(_DWORD *)(v2 + 12);
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      int v10 = v7 - 1;
      uint64_t v11 = *(_WORD **)v2;
      uint64_t v12 = *(_WORD **)v3;
      uint64_t v13 = 2 * v4;
      uint64_t v14 = 2 * v5;
      int v15 = v8 - 1;
      if (v15)
      {
        uint64_t v16 = *(unsigned int *)(v3 + 20);
        uint64_t v17 = *(unsigned int *)(v2 + 20);
        if (v10)
        {
          int v18 = 0;
          uint64_t v19 = 2 * v17;
          uint64_t v20 = 2 * v16;
          do
          {
            uint64_t v21 = v12;
            int v22 = v11;
            int v23 = v10;
            do
            {
              _WORD *v21 = *v22;
              int v22 = (_WORD *)((char *)v22 + v13);
              uint64_t v21 = (_WORD *)((char *)v21 + v14);
              --v23;
            }
            while (v23);
            _WORD *v21 = *v22;
            uint64_t v11 = (_WORD *)((char *)v11 + v19);
            uint64_t v12 = (_WORD *)((char *)v12 + v20);
            ++v18;
          }
          while (v18 != v15);
        }
        else
        {
          do
          {
            _WORD *v12 = *v11;
            v11 += v17;
            v12 += v16;
            --v15;
          }
          while (v15);
        }
      }
      for (; v10; --v10)
      {
        _WORD *v12 = *v11;
        uint64_t v11 = (_WORD *)((char *)v11 + v13);
        uint64_t v12 = (_WORD *)((char *)v12 + v14);
      }
      LOWORD(v28) = *v11;
      _WORD *v12 = *v11;
    }
  }
  return v28;
}

__int16 sub_2158A1500@<H0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>)
{
  uint64_t v3 = *((unsigned int *)a1 + 2);
  int v2 = *((_DWORD *)a1 + 3);
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = *a2;
    int v7 = v2 - 1;
    uint64_t v36 = *((unsigned int *)a1 + 2);
    if (v2 != 1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 2 * *((unsigned int *)a2 + 5);
      uint64_t v10 = 2 * *((unsigned int *)a1 + 5);
      unint64_t v11 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      unint64_t v12 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v37 = 2 * v12;
      uint64_t v13 = *a2;
      uint64_t v14 = *a1;
      while (1)
      {
        if (!v14)
        {
          BOOL v15 = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8);
          uint64_t v3 = v36;
          if (v15) {
            goto LABEL_29;
          }
        }
        uint64_t v16 = (_WORD *)v13;
        uint64_t v17 = (__int16 *)v14;
        if (v11 < 0xF) {
          goto LABEL_33;
        }
        uint64_t v16 = (_WORD *)v13;
        uint64_t v17 = (__int16 *)v14;
        if ((unint64_t)(v6 + v9 * v8 - (v5 + v10 * v8)) < 0x20) {
          goto LABEL_33;
        }
        uint64_t v18 = 0;
        uint64_t v16 = (_WORD *)(v13 + v37);
        uint64_t v17 = (__int16 *)(v14 + v37);
        unint64_t v19 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint64_t v20 = (_OWORD *)(v13 + v18);
          long long v21 = *(_OWORD *)(v14 + v18 + 16);
          *uint64_t v20 = *(_OWORD *)(v14 + v18);
          v20[1] = v21;
          v18 += 32;
          v19 -= 16;
        }
        while (v19);
        if (v11 + 1 != v12)
        {
LABEL_33:
          do
          {
            __int16 v22 = *v17++;
            *v16++ = v22;
          }
          while (v17 != (__int16 *)(v14 + 2 * v3));
        }
        v14 += v10;
        v13 += v9;
        if (++v8 == v7) {
          goto LABEL_18;
        }
      }
    }
    uint64_t v13 = *a2;
    uint64_t v14 = *a1;
LABEL_18:
    if (!v14)
    {
      BOOL v23 = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8);
      uint64_t v3 = v36;
      if (v23) {
LABEL_29:
      }
        abort();
    }
    unint64_t v24 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v24 < 0xF || (unint64_t)(v13 - v14) < 0x20)
    {
      BOOL v27 = (_WORD *)v13;
      long long v28 = (__int16 *)v14;
    }
    else
    {
      unint64_t v25 = v24 + 1;
      unint64_t v26 = (v24 + 1) & 0xFFFFFFFFFFFFFFF0;
      BOOL v27 = (_WORD *)(v13 + 2 * v26);
      long long v28 = (__int16 *)(v14 + 2 * v26);
      uint64_t v29 = (long long *)(v14 + 16);
      unint64_t v30 = (_OWORD *)(v13 + 16);
      unint64_t v31 = v26;
      do
      {
        long long v32 = *(v29 - 1);
        long long v33 = *v29;
        *(v30 - 1) = v32;
        _OWORD *v30 = v33;
        v29 += 2;
        v30 += 2;
        v31 -= 16;
      }
      while (v31);
      if (v25 == v26) {
        return v32;
      }
    }
    do
    {
      __int16 v34 = *v28++;
      LOWORD(v32) = v34;
      *v27++ = v34;
    }
    while (v28 != (__int16 *)(v14 + 2 * v3));
  }
  return v32;
}

__n128 sub_2158A1748(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[5].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661388[v5])(&v7, v4);
  }
  v4[5].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[5].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A17DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 80);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661388[v5])(&v8, v4);
LABEL_7:
    *(_DWORD *)(v4 + 80) = -1;
    *(void *)uint64_t v4 = &unk_26C663B60;
    long long v7 = *(_OWORD *)(a3 + 8);
    *(_OWORD *)(v4 + 20) = *(_OWORD *)(a3 + 20);
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_21585065C(v4 + 40, a3 + 40);
    *(_DWORD *)(v4 + 80) = 1;
    return result;
  }

  return sub_2158A18A8(a2 + 8, (_DWORD *)(a3 + 8));
}

uint64_t sub_2158A18A8(uint64_t a1, _DWORD *a2)
{
  if (*(void *)(a1 + 40)
    && *a2 == *(_DWORD *)a1
    && a2[1] == *(_DWORD *)(a1 + 4)
    && a2[2] == *(_DWORD *)(a1 + 8)
    && a2[3] == *(_DWORD *)(a1 + 12))
  {
    v8[0] = (uint64_t)a2;
    v8[1] = a1;
    sub_2158A1AD4(v8);
    return a1;
  }
  *(_OWORD *)char v8 = *(_OWORD *)a2;
  *(_OWORD *)((char *)&v8[1] + 4) = *(_OWORD *)(a2 + 3);
  sub_21585065C((uint64_t)v9, (uint64_t)(a2 + 8));
  *(_OWORD *)a1 = *(_OWORD *)v8;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)((char *)&v8[1] + 4);
  *(_OWORD *)(a1 + 56) = v10;
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4)
  {
    if (*(_DWORD *)(a1 + 60)) {
      BOOL v5 = *(_DWORD *)(a1 + 56) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (v5) {
      int v6 = 0;
    }
    else {
      int v6 = *(_DWORD *)(a1 + 60);
    }
    if (v6 * (*(void *)(a1 + 64) >> 33) == -1)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      uint64_t v4 = *(void **)(a1 + 40);
      *(void *)(a1 + 32) = v9[0];
      if (!v4) {
        goto LABEL_20;
      }
    }
    else
    {
      *(void *)(a1 + 32) = v9[0];
    }
    free(v4);
  }
  else
  {
    *(void *)(a1 + 32) = v9[0];
  }
LABEL_20:
  uint64_t v7 = v9[2];
  *(void *)(a1 + 40) = v9[1];
  *(void *)(a1 + 48) = v7;
  return a1;
}

void sub_2158A1A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158A1A2C(uint64_t a1)
{
  int v2 = *(void **)(a1 + 40);
  if (v2)
  {
    BOOL v3 = !*(_DWORD *)(a1 + 60) || *(_DWORD *)(a1 + 56) == 0;
    int v4 = v3 ? 0 : *(_DWORD *)(a1 + 60);
    if (v4 * (*(void *)(a1 + 64) >> 33) != -1) {
      goto LABEL_11;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    int v2 = *(void **)(a1 + 40);
    if (v2) {
LABEL_11:
    }
      free(v2);
  }
  *(void *)(a1 + 40) = 0;
  return a1;
}

__int16 sub_2158A1AD4@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  uint64_t v5 = *(unsigned int *)(v3 + 8);
  if (v4 == 1 && v5 == 1)
  {
    int v23 = *(_DWORD *)(v2 + 12);
    if (v23 == *(_DWORD *)(v3 + 12) && v23 == *(_DWORD *)v2)
    {
      uint64_t v24 = (*(_DWORD *)(v2 + 4) * v23);
      uint64_t v25 = *(void *)(v2 + 40);
      if (v24) {
        BOOL v26 = v25 == 0;
      }
      else {
        BOOL v26 = 0;
      }
      if (v26)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v24)
      {
        return v27;
      }
      long long v28 = *(_WORD **)(v3 + 40);
      unint64_t v29 = (v24 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v29 < 0xF)
      {
        unint64_t v30 = (__int16 *)v25;
      }
      else
      {
        unint64_t v30 = (__int16 *)v25;
        if ((unint64_t)v28 - v25 >= 0x20)
        {
          unint64_t v31 = v29 + 1;
          unint64_t v32 = v31 & 0xFFFFFFFFFFFFFFF0;
          long long v33 = &v28[v32];
          unint64_t v30 = (__int16 *)(v25 + v32 * 2);
          __int16 v34 = (long long *)(v25 + 16);
          uint64_t v35 = v28 + 8;
          unint64_t v36 = v31 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            long long v27 = *(v34 - 1);
            long long v37 = *v34;
            *(v35 - 1) = v27;
            *uint64_t v35 = v37;
            v34 += 2;
            v35 += 2;
            v36 -= 16;
          }
          while (v36);
          long long v28 = v33;
          if (v31 == (v31 & 0xFFFFFFFFFFFFFFF0)) {
            return v27;
          }
        }
      }
      do
      {
        __int16 v38 = *v30++;
        LOWORD(v27) = v38;
        *v28++ = v38;
      }
      while (v30 != (__int16 *)(v25 + 2 * v24));
      return v27;
    }
    LOWORD(v27) = sub_2158A1D18((unsigned int *)v2, v3);
  }
  else
  {
    int v7 = *(_DWORD *)(v2 + 4);
    if (*(_DWORD *)v2) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      int v9 = *(_DWORD *)v2 - 1;
      long long v10 = *(_WORD **)(v2 + 40);
      unint64_t v11 = *(_WORD **)(v3 + 40);
      uint64_t v12 = 2 * v4;
      uint64_t v13 = 2 * v5;
      int v14 = v7 - 1;
      if (v14)
      {
        uint64_t v15 = *(unsigned int *)(v3 + 12);
        uint64_t v16 = *(unsigned int *)(v2 + 12);
        if (*(_DWORD *)v2 == 1)
        {
          do
          {
            _WORD *v11 = *v10;
            v10 += v16;
            v11 += v15;
            --v14;
          }
          while (v14);
        }
        else
        {
          int v17 = 0;
          uint64_t v18 = 2 * v16;
          uint64_t v19 = 2 * v15;
          do
          {
            uint64_t v20 = v11;
            long long v21 = v10;
            int v22 = v9;
            do
            {
              *uint64_t v20 = *v21;
              long long v21 = (_WORD *)((char *)v21 + v12);
              uint64_t v20 = (_WORD *)((char *)v20 + v13);
              --v22;
            }
            while (v22);
            *uint64_t v20 = *v21;
            long long v10 = (_WORD *)((char *)v10 + v18);
            unint64_t v11 = (_WORD *)((char *)v11 + v19);
            ++v17;
          }
          while (v17 != v14);
        }
      }
      for (; v9; --v9)
      {
        _WORD *v11 = *v10;
        long long v10 = (_WORD *)((char *)v10 + v12);
        unint64_t v11 = (_WORD *)((char *)v11 + v13);
      }
      LOWORD(v27) = *v10;
      _WORD *v11 = *v10;
    }
  }
  return v27;
}

__int16 sub_2158A1D18@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3 = *a1;
  unsigned int v2 = a1[1];
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = *((void *)a1 + 5);
    uint64_t v6 = *(void *)(a2 + 40);
    unsigned int v7 = v2 - 1;
    uint64_t v36 = *a1;
    if (v2 != 1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 2 * *(unsigned int *)(a2 + 12);
      uint64_t v10 = 2 * a1[3];
      unint64_t v11 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      unint64_t v12 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v37 = 2 * v12;
      uint64_t v13 = *(void *)(a2 + 40);
      uint64_t v14 = *((void *)a1 + 5);
      while (1)
      {
        if (!v14)
        {
          BOOL v15 = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8);
          uint64_t v3 = v36;
          if (v15) {
            goto LABEL_29;
          }
        }
        uint64_t v16 = (_WORD *)v13;
        int v17 = (__int16 *)v14;
        if (v11 < 0xF) {
          goto LABEL_33;
        }
        uint64_t v16 = (_WORD *)v13;
        int v17 = (__int16 *)v14;
        if ((unint64_t)(v6 + v9 * v8 - (v5 + v10 * v8)) < 0x20) {
          goto LABEL_33;
        }
        uint64_t v18 = 0;
        uint64_t v16 = (_WORD *)(v13 + v37);
        int v17 = (__int16 *)(v14 + v37);
        unint64_t v19 = (v11 + 1) & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint64_t v20 = (_OWORD *)(v13 + v18);
          long long v21 = *(_OWORD *)(v14 + v18 + 16);
          *uint64_t v20 = *(_OWORD *)(v14 + v18);
          v20[1] = v21;
          v18 += 32;
          v19 -= 16;
        }
        while (v19);
        if (v11 + 1 != v12)
        {
LABEL_33:
          do
          {
            __int16 v22 = *v17++;
            *v16++ = v22;
          }
          while (v17 != (__int16 *)(v14 + 2 * v3));
        }
        v14 += v10;
        v13 += v9;
        if (++v8 == v7) {
          goto LABEL_18;
        }
      }
    }
    uint64_t v13 = *(void *)(a2 + 40);
    uint64_t v14 = *((void *)a1 + 5);
LABEL_18:
    if (!v14)
    {
      BOOL v23 = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8);
      uint64_t v3 = v36;
      if (v23) {
LABEL_29:
      }
        abort();
    }
    unint64_t v24 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v24 < 0xF || (unint64_t)(v13 - v14) < 0x20)
    {
      long long v27 = (_WORD *)v13;
      long long v28 = (__int16 *)v14;
    }
    else
    {
      unint64_t v25 = v24 + 1;
      unint64_t v26 = (v24 + 1) & 0xFFFFFFFFFFFFFFF0;
      long long v27 = (_WORD *)(v13 + 2 * v26);
      long long v28 = (__int16 *)(v14 + 2 * v26);
      unint64_t v29 = (long long *)(v14 + 16);
      unint64_t v30 = (_OWORD *)(v13 + 16);
      unint64_t v31 = v26;
      do
      {
        long long v32 = *(v29 - 1);
        long long v33 = *v29;
        *(v30 - 1) = v32;
        _OWORD *v30 = v33;
        v29 += 2;
        v30 += 2;
        v31 -= 16;
      }
      while (v31);
      if (v25 == v26) {
        return v32;
      }
    }
    do
    {
      __int16 v34 = *v28++;
      LOWORD(v32) = v34;
      *v27++ = v34;
    }
    while (v28 != (__int16 *)(v14 + 2 * v3));
  }
  return v32;
}

__n128 sub_2158A1F60(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[5].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6613A8[v5])(&v7, v4);
  }
  v4[5].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[5].n128_u32[0] = 0;
  return result;
}

void sub_2158A1FF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 80);
  if (v5 == -1) {
    goto LABEL_12;
  }
  if (v5 != 1)
  {
    ((void (*)(_OWORD *, uint64_t))off_26C6613A8[v5])(v13, v4);
LABEL_12:
    *(_DWORD *)(v4 + 80) = -1;
    *(void *)uint64_t v4 = &unk_26C663BE0;
    long long v10 = *(_OWORD *)(a3 + 8);
    *(_OWORD *)(v4 + 20) = *(_OWORD *)(a3 + 20);
    *(_OWORD *)(v4 + 8) = v10;
    sub_215850F98(v4 + 40, a3 + 40);
    *(_DWORD *)(v4 + 80) = 1;
    return;
  }
  char v7 = (_OWORD *)(a2 + 8);
  uint64_t v8 = (unsigned int *)(a3 + 8);
  if (*(void *)(a2 + 48)
    && *v8 == *(_DWORD *)v7
    && *(_DWORD *)(a3 + 12) == *(_DWORD *)(a2 + 12)
    && *(_DWORD *)(a3 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a3 + 20) == *(_DWORD *)(a2 + 20))
  {
    uint64_t v9 = a2 + 8;
    sub_2158A2184(v8, v9);
  }
  else
  {
    v13[0] = *(_OWORD *)v8;
    *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)(a3 + 20);
    sub_215850F98((uint64_t)v14, a3 + 40);
    *char v7 = v13[0];
    *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)((char *)v13 + 12);
    *(_OWORD *)(a2 + 64) = v15;
    *(void *)(a2 + 40) = v14[0];
    unint64_t v11 = *(void **)(a2 + 48);
    if (v11) {
      free(v11);
    }
    uint64_t v12 = v14[2];
    *(void *)(a2 + 48) = v14[1];
    *(void *)(a2 + 56) = v12;
  }
}

float sub_2158A2184(unsigned int *a1, uint64_t a2)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = *(unsigned int *)(a2 + 8);
  if (v3 == 1 && v4 == 1)
  {
    unsigned int v22 = a1[3];
    int v23 = *a1;
    if (v22 == *(_DWORD *)(a2 + 12) && v22 == v23)
    {
      uint64_t v27 = a1[1] * v22;
      long long v28 = (const void *)*((void *)a1 + 5);
      if (v27) {
        BOOL v29 = v28 == 0;
      }
      else {
        BOOL v29 = 0;
      }
      if (v29)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
      }
      else if (!v27)
      {
        return result;
      }
      unint64_t v30 = *(void **)(a2 + 40);
      memmove(v30, v28, 4 * v27);
    }
    else
    {
      uint64_t v31 = *a1;
      if (v23) {
        BOOL v25 = a1[1] == 0;
      }
      else {
        BOOL v25 = 1;
      }
      if (!v25) {
        sub_2158A237C(&v31, (uint64_t)a1, a2);
      }
    }
  }
  else
  {
    unsigned int v6 = a1[1];
    if (*a1) {
      BOOL v7 = v6 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7)
    {
      int v8 = *a1 - 1;
      uint64_t v9 = (_DWORD *)*((void *)a1 + 5);
      long long v10 = *(_DWORD **)(a2 + 40);
      unsigned int v11 = v6 - 1;
      if (v11)
      {
        uint64_t v12 = *(unsigned int *)(a2 + 12);
        uint64_t v13 = a1[3];
        if (*a1 == 1)
        {
          do
          {
            *long long v10 = *v9;
            v9 += v13;
            v10 += v12;
            --v11;
          }
          while (v11);
LABEL_40:
          float result = *(float *)v9;
          *long long v10 = *v9;
          return result;
        }
        int v14 = 0;
        uint64_t v15 = 4 * v13;
        uint64_t v16 = 4 * v12;
        do
        {
          int v17 = v10;
          uint64_t v18 = v9;
          int v19 = v8;
          do
          {
            _DWORD *v17 = *v18;
            v18 += v3;
            v17 += v4;
            --v19;
          }
          while (v19);
          _DWORD *v17 = *v18;
          uint64_t v9 = (_DWORD *)((char *)v9 + v15);
          long long v10 = (_DWORD *)((char *)v10 + v16);
          ++v14;
        }
        while (v14 != v11);
      }
      if (v8)
      {
        uint64_t v20 = 4 * v3;
        uint64_t v21 = 4 * v4;
        do
        {
          *long long v10 = *v9;
          uint64_t v9 = (_DWORD *)((char *)v9 + v20);
          long long v10 = (_DWORD *)((char *)v10 + v21);
          --v8;
        }
        while (v8);
      }
      goto LABEL_40;
    }
  }
  return result;
}

uint64_t *sub_2158A237C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  if (*(_DWORD *)a2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = result;
    unsigned int v6 = *(char **)(a2 + 40);
    BOOL v7 = *(char **)(a3 + 40);
    int v8 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v9 = 4 * *(unsigned int *)(a2 + 12);
      uint64_t v10 = 4 * *(unsigned int *)(a3 + 12);
      do
      {
        uint64_t v11 = *v5;
        if (!v6 && v11)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_19;
          }
        }
        else if (!v11)
        {
          goto LABEL_11;
        }
        float result = (uint64_t *)memmove(v7, v6, 4 * v11);
LABEL_11:
        v6 += v9;
        v7 += v10;
        --v8;
      }
      while (v8);
    }
    uint64_t v12 = *v5;
    if (v6 || !v12)
    {
      if (!v12) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_19:
      abort();
    }
    return (uint64_t *)memmove(v7, v6, 4 * v12);
  }
  return result;
}

size_t *sub_2158A24F4(size_t *result)
{
  size_t v2 = *result;
  size_t v1 = result[1];
  if (*(_DWORD *)(*result + 20) == 1 && *(_DWORD *)(v1 + 20) == 1) {
    return sub_2158A2610(result);
  }
  int v4 = *(_DWORD *)(v2 + 12);
  int v5 = *(_DWORD *)(v2 + 16);
  if (*(_DWORD *)(v2 + 8)) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v4 - 1;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    uint64_t v10 = *(unsigned int *)(v1 + 24);
    uint64_t v11 = *(unsigned char **)v2;
    uint64_t v12 = *(unsigned char **)v1;
    int v13 = v5 - 1;
    if (v13)
    {
      uint64_t v14 = *(unsigned int *)(v1 + 28);
      uint64_t v15 = *(unsigned int *)(v2 + 28);
      if (v8)
      {
        int v16 = 0;
        int v17 = v11 + 1;
        float result = (size_t *)(v12 + 1);
        do
        {
          uint64_t v18 = result;
          int v19 = v17;
          int v20 = v8;
          do
          {
            *((unsigned char *)v18 - 1) = *(v19 - 1);
            *(unsigned char *)uint64_t v18 = *v19;
            v19 += v9;
            uint64_t v18 = (size_t *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *((unsigned char *)v18 - 1) = *(v19 - 1);
          *(unsigned char *)uint64_t v18 = *v19;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          float result = (size_t *)((char *)result + v14);
        }
        while (v16 != v13);
      }
      else
      {
        do
        {
          unsigned char *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
      }
    }
    for (; v8; --v8)
    {
      unsigned char *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    unsigned char *v12 = *v11;
    v12[1] = v11[1];
  }
  return result;
}

size_t *sub_2158A2610(size_t *result)
{
  size_t v1 = *result;
  size_t v2 = result[1];
  uint64_t v3 = *(unsigned int *)(*result + 24);
  uint64_t v4 = *(unsigned int *)(v2 + 24);
  if (v3 == v4)
  {
    unsigned int v5 = *(_DWORD *)(v1 + 8);
    if (v3 == *(_DWORD *)(v1 + 20) * v5)
    {
      return sub_215851E18(result);
    }
  }
  else
  {
    unsigned int v5 = *(_DWORD *)(v1 + 8);
  }
  size_t v10 = v5;
  int v7 = *(_DWORD *)(v1 + 12);
  int v6 = *(_DWORD *)(v1 + 16);
  if (v5) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8 && v6 != 0)
  {
    uint64_t v13 = 0;
    unsigned int v14 = v5 - 1;
    unint64_t v15 = *(unsigned int *)(v1 + 20) | ((unint64_t)*(unsigned int *)(v2 + 20) << 32);
    int v16 = v7 - 1;
    uint64_t v17 = v3 | (v4 << 32);
    int v18 = v6 - 1;
    unint64_t v19 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
    uint64_t v12 = *(const void **)v1;
    uint64_t v11 = *(void **)v2;
    return (size_t *)sub_2158A26F8(&v13, &v10, &v12, &v11);
  }
  return result;
}

_DWORD *sub_2158A26F8(_DWORD *result, size_t *a2, const void **a3, void **a4)
{
  unsigned int v5 = result;
  int v6 = (char *)*a3;
  int v7 = (char *)*a4;
  if (result[8])
  {
    for (unsigned int i = 0; i < v5[8]; ++i)
    {
      unsigned int v9 = v5[5];
      size_t v10 = v7;
      uint64_t v11 = v6;
      if (v9)
      {
        unsigned int v12 = 0;
        uint64_t v11 = v6;
        size_t v10 = v7;
        do
        {
          size_t v13 = *a2;
          if (!v11 && v13)
          {
            if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
              goto LABEL_39;
            }
          }
          else if (!v13)
          {
            goto LABEL_10;
          }
          float result = memmove(v10, v11, v13);
          unsigned int v9 = v5[5];
LABEL_10:
          v11 += v5[6];
          v10 += v5[7];
          ++v12;
        }
        while (v12 < v9);
      }
      size_t v14 = *a2;
      if (!v11 && v14)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_39;
        }
      }
      else if (!v14)
      {
        goto LABEL_5;
      }
      float result = memmove(v10, v11, v14);
LABEL_5:
      v6 += v5[9];
      v7 += v5[10];
    }
  }
  unsigned int v15 = v5[5];
  if (v15)
  {
    for (unsigned int j = 0; j < v15; ++j)
    {
      size_t v17 = *a2;
      if (!v6 && v17)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_39;
        }
      }
      else if (!v17)
      {
        goto LABEL_23;
      }
      float result = memmove(v7, v6, v17);
      unsigned int v15 = v5[5];
LABEL_23:
      v6 += v5[6];
      v7 += v5[7];
    }
  }
  size_t v18 = *a2;
  if (v6) {
    BOOL v19 = 1;
  }
  else {
    BOOL v19 = v18 == 0;
  }
  if (v19)
  {
    if (!v18) {
      return result;
    }
  }
  else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
LABEL_39:
    abort();
  }

  return memmove(v7, v6, v18);
}

__n128 sub_2158A2990(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6613C8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A2A24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6613C8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663C60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A2B00(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A2B00(uint64_t a1, long long *a2)
{
  if (*(void *)(a1 + 64)
    && *(void *)((char *)a2 + 4) == *(void *)(a1 + 4)
    && *((void *)a2 + 2) == *(void *)(a1 + 16))
  {
    *(void *)&long long v9 = a2;
    *((void *)&v9 + 1) = a1;
    sub_2158A2BD8((size_t *)&v9);
    return a1;
  }
  else
  {
    long long v3 = a2[1];
    long long v9 = *a2;
    long long v10 = v3;
    long long v11 = a2[2];
    uint64_t v12 = *((void *)a2 + 6);
    sub_215851B70((uint64_t)v13, (uint64_t)a2 + 56);
    long long v4 = v10;
    *(_OWORD *)a1 = v9;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 80) = v14;
    *(void *)(a1 + 96) = v15;
    uint64_t v5 = v13[0];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v5;
    int v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v13[2];
    *(void *)(a1 + 64) = v13[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
}

size_t *sub_2158A2BD8(size_t *result)
{
  size_t v2 = *result;
  size_t v1 = result[1];
  if (*(_DWORD *)(*result + 12) == 1 && *(_DWORD *)(v1 + 12) == 1) {
    return sub_2158A2CF4(result);
  }
  int v4 = *(_DWORD *)(v2 + 4);
  int v5 = *(_DWORD *)(v2 + 8);
  if (*(_DWORD *)v2) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v4 - 1;
    uint64_t v9 = *(unsigned int *)(v2 + 16);
    uint64_t v10 = *(unsigned int *)(v1 + 16);
    long long v11 = *(unsigned char **)(v2 + 64);
    uint64_t v12 = *(unsigned char **)(v1 + 64);
    int v13 = v5 - 1;
    if (v13)
    {
      uint64_t v14 = *(unsigned int *)(v1 + 20);
      uint64_t v15 = *(unsigned int *)(v2 + 20);
      if (v8)
      {
        int v16 = 0;
        size_t v17 = v11 + 1;
        uint64_t result = (size_t *)(v12 + 1);
        do
        {
          size_t v18 = result;
          BOOL v19 = v17;
          int v20 = v8;
          do
          {
            *((unsigned char *)v18 - 1) = *(v19 - 1);
            *(unsigned char *)size_t v18 = *v19;
            v19 += v9;
            size_t v18 = (size_t *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *((unsigned char *)v18 - 1) = *(v19 - 1);
          *(unsigned char *)size_t v18 = *v19;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          uint64_t result = (size_t *)((char *)result + v14);
        }
        while (v16 != v13);
      }
      else
      {
        do
        {
          unsigned char *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
      }
    }
    for (; v8; --v8)
    {
      unsigned char *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    unsigned char *v12 = *v11;
    v12[1] = v11[1];
  }
  return result;
}

size_t *sub_2158A2CF4(size_t *result)
{
  size_t v1 = *result;
  size_t v2 = result[1];
  uint64_t v3 = *(unsigned int *)(*result + 16);
  uint64_t v4 = *(unsigned int *)(v2 + 16);
  if (v3 == v4)
  {
    unsigned int v5 = *(_DWORD *)v1;
    if (v3 == *(_DWORD *)(v1 + 12) * *(_DWORD *)v1)
    {
      return sub_2158A2DD8(result);
    }
  }
  else
  {
    unsigned int v5 = *(_DWORD *)v1;
  }
  size_t v10 = v5;
  int v7 = *(_DWORD *)(v1 + 4);
  int v6 = *(_DWORD *)(v1 + 8);
  if (v5) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8 && v6 != 0)
  {
    unsigned int v14 = v5 - 1;
    unint64_t v15 = *(unsigned int *)(v1 + 12) | ((unint64_t)*(unsigned int *)(v2 + 12) << 32);
    int v16 = v7 - 1;
    uint64_t v17 = v3 | (v4 << 32);
    int v18 = v6 - 1;
    unint64_t v19 = *(unsigned int *)(v1 + 20) | ((unint64_t)*(unsigned int *)(v2 + 20) << 32);
    uint64_t v12 = *(const void **)(v1 + 64);
    uint64_t v13 = 0;
    long long v11 = *(void **)(v2 + 64);
    return (size_t *)sub_2158A26F8(&v13, &v10, &v12, &v11);
  }
  return result;
}

size_t *sub_2158A2DD8(size_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 20);
  if (v3 != *(_DWORD *)(v2 + 20))
  {
    int v4 = *(_DWORD *)(v1 + 4);
LABEL_10:
    int v8 = *(_DWORD *)v1;
    size_t v12 = (*(_DWORD *)v1 * v4);
    if (v8) {
      BOOL v9 = v4 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9 && *(_DWORD *)(v1 + 8) != 0) {
      return sub_2158A2F04(&v12, v1, v2);
    }
    return result;
  }
  int v4 = *(_DWORD *)(v1 + 4);
  if (v3 != *(_DWORD *)(v1 + 16) * v4) {
    goto LABEL_10;
  }
  size_t v5 = (*(_DWORD *)v1 * v4 * *(_DWORD *)(v1 + 8));
  int v6 = *(const void **)(v1 + 64);
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
  }
  else if (!v5)
  {
    return result;
  }
  long long v11 = *(void **)(v2 + 64);

  return (size_t *)memmove(v11, v6, v5);
}

size_t *sub_2158A2F04(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v4 = *(_DWORD *)(a2 + 4) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4 && v3 != 0)
  {
    int v6 = result;
    BOOL v7 = *(char **)(a2 + 64);
    int v8 = *(char **)(a3 + 64);
    int v9 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v10 = *(unsigned int *)(a3 + 20);
      uint64_t v11 = *(unsigned int *)(a2 + 20);
      do
      {
        size_t v12 = *v6;
        if (!v7 && v12)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_22;
          }
        }
        else if (!v12)
        {
          goto LABEL_14;
        }
        uint64_t result = (size_t *)memmove(v8, v7, v12);
LABEL_14:
        v7 += v11;
        v8 += v10;
        --v9;
      }
      while (v9);
    }
    size_t v13 = *v6;
    if (v7 || !v13)
    {
      if (!v13) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_22:
      abort();
    }
    return (size_t *)memmove(v8, v7, v13);
  }
  return result;
}

uint64_t *sub_2158A307C(uint64_t *result)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  if (*(_DWORD *)(*result + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    return sub_2158530CC(result);
  }
  else
  {
    int v5 = *(_DWORD *)(v3 + 12);
    int v6 = *(_DWORD *)(v3 + 16);
    if (*(_DWORD *)(v3 + 8)) {
      BOOL v7 = v5 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7 && v6 != 0)
    {
      int v9 = v5 - 1;
      uint64_t v10 = *(unsigned int *)(v3 + 24);
      uint64_t v11 = *(unsigned int *)(v2 + 24);
      size_t v12 = *(_WORD **)v3;
      size_t v13 = *(_WORD **)v2;
      int v14 = v6 - 1;
      if (v14)
      {
        uint64_t v15 = *(unsigned int *)(v2 + 28);
        uint64_t v16 = *(unsigned int *)(v3 + 28);
        if (!v9)
        {
          do
          {
            *size_t v13 = *v12;
            v13[1] = v12[1];
            v12 += v16;
            v13 += v15;
            --v14;
          }
          while (v14);
LABEL_25:
          *size_t v13 = *v12;
          v13[1] = v12[1];
          return result;
        }
        int v17 = 0;
        uint64_t result = (uint64_t *)(2 * v10);
        int v18 = v12 + 1;
        unint64_t v19 = v13 + 1;
        do
        {
          int v20 = v19;
          uint64_t v21 = v18;
          int v22 = v9;
          do
          {
            *(v20 - 1) = *(v21 - 1);
            *int v20 = *v21;
            uint64_t v21 = (_WORD *)((char *)result + (void)v21);
            v20 += v11;
            --v22;
          }
          while (v22);
          *(v20 - 1) = *(v21 - 1);
          *int v20 = *v21;
          v12 += v16;
          v13 += v15;
          ++v17;
          v18 += v16;
          v19 += v15;
        }
        while (v17 != v14);
      }
      for (; v9; --v9)
      {
        *size_t v13 = *v12;
        v13[1] = v12[1];
        v12 += v10;
        v13 += v11;
      }
      goto LABEL_25;
    }
  }
  return result;
}

__n128 sub_2158A31D0(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6613E8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A3264(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6613E8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663CE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A3340(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A3340(uint64_t a1, long long *a2)
{
  if (*(void *)(a1 + 64)
    && *(void *)((char *)a2 + 4) == *(void *)(a1 + 4)
    && *((void *)a2 + 2) == *(void *)(a1 + 16))
  {
    *(void *)&long long v9 = a2;
    *((void *)&v9 + 1) = a1;
    sub_2158A3418((uint64_t *)&v9);
    return a1;
  }
  else
  {
    long long v3 = a2[1];
    long long v9 = *a2;
    long long v10 = v3;
    long long v11 = a2[2];
    uint64_t v12 = *((void *)a2 + 6);
    sub_215852DD0((uint64_t)v13, (uint64_t)a2 + 56);
    long long v4 = v10;
    *(_OWORD *)a1 = v9;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 80) = v14;
    *(void *)(a1 + 96) = v15;
    uint64_t v5 = v13[0];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v5;
    int v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v13[2];
    *(void *)(a1 + 64) = v13[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
}

uint64_t *sub_2158A3418(uint64_t *result)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  if (*(_DWORD *)(*result + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    return sub_2158A356C(result);
  }
  else
  {
    int v5 = *(_DWORD *)(v3 + 4);
    int v6 = *(_DWORD *)(v3 + 8);
    if (*(_DWORD *)v3) {
      BOOL v7 = v5 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7 && v6 != 0)
    {
      int v9 = v5 - 1;
      uint64_t v10 = *(unsigned int *)(v3 + 16);
      uint64_t v11 = *(unsigned int *)(v2 + 16);
      uint64_t v12 = *(_WORD **)(v3 + 64);
      size_t v13 = *(_WORD **)(v2 + 64);
      int v14 = v6 - 1;
      if (v14)
      {
        uint64_t v15 = *(unsigned int *)(v2 + 20);
        uint64_t v16 = *(unsigned int *)(v3 + 20);
        if (!v9)
        {
          do
          {
            *size_t v13 = *v12;
            v13[1] = v12[1];
            v12 += v16;
            v13 += v15;
            --v14;
          }
          while (v14);
LABEL_25:
          *size_t v13 = *v12;
          v13[1] = v12[1];
          return result;
        }
        int v17 = 0;
        uint64_t result = (uint64_t *)(2 * v10);
        int v18 = v12 + 1;
        unint64_t v19 = v13 + 1;
        do
        {
          int v20 = v19;
          uint64_t v21 = v18;
          int v22 = v9;
          do
          {
            *(v20 - 1) = *(v21 - 1);
            *int v20 = *v21;
            uint64_t v21 = (_WORD *)((char *)result + (void)v21);
            v20 += v11;
            --v22;
          }
          while (v22);
          *(v20 - 1) = *(v21 - 1);
          *int v20 = *v21;
          v12 += v16;
          v13 += v15;
          ++v17;
          v18 += v16;
          v19 += v15;
        }
        while (v17 != v14);
      }
      for (; v9; --v9)
      {
        *size_t v13 = *v12;
        v13[1] = v12[1];
        v12 += v10;
        v13 += v11;
      }
      goto LABEL_25;
    }
  }
  return result;
}

uint64_t *sub_2158A356C(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 16);
  if (v3 != *(_DWORD *)(v2 + 16))
  {
    unsigned int v4 = *(_DWORD *)v1;
LABEL_12:
    uint64_t v14 = v4;
    if (v4) {
      BOOL v10 = *(_DWORD *)(v1 + 4) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10 && *(_DWORD *)(v1 + 8) != 0) {
      return sub_2158A3844(&v14, v1, v2);
    }
    return result;
  }
  unsigned int v4 = *(_DWORD *)v1;
  if (v3 != *(_DWORD *)(v1 + 12) * *(_DWORD *)v1) {
    goto LABEL_12;
  }
  int v5 = *(_DWORD *)(v1 + 20);
  if (v5 == *(_DWORD *)(v2 + 20) && (int v6 = *(_DWORD *)(v1 + 4), v5 == v6 * v3))
  {
    uint64_t v7 = v6 * v4 * *(_DWORD *)(v1 + 8);
    long long v8 = *(const void **)(v1 + 64);
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v7)
    {
      return result;
    }
    size_t v13 = *(void **)(v2 + 64);
    return (uint64_t *)memmove(v13, v8, 2 * v7);
  }
  else
  {
    uint64_t v12 = (_DWORD *)*result;
    return (uint64_t *)sub_2158A36CC(v12, v2);
  }
}

_DWORD *sub_2158A36CC(_DWORD *result, uint64_t a2)
{
  int v2 = result[1];
  int v3 = result[2];
  if (*result) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4 && v3 != 0)
  {
    uint64_t v6 = (v2 * *result);
    uint64_t v7 = (char *)*((void *)result + 8);
    long long v8 = *(char **)(a2 + 64);
    int v9 = v3 - 1;
    if (v3 == 1)
    {
LABEL_17:
      if (!v6 || v7)
      {
        if (!v6) {
          return result;
        }
      }
      else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_16;
      }
      return memmove(v8, v7, 2 * v6);
    }
    else if (v6)
    {
      uint64_t v10 = 2 * result[5];
      uint64_t v11 = 2 * *(unsigned int *)(a2 + 20);
      while (v7
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        uint64_t result = memmove(v8, v7, 2 * v6);
        v7 += v10;
        v8 += v11;
        if (!--v9) {
          goto LABEL_17;
        }
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_2158A3844(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = result;
    int v8 = v3 - 1;
    int v9 = *(char **)(a2 + 64);
    uint64_t v10 = *(char **)(a3 + 64);
    uint64_t v11 = 2 * *(unsigned int *)(a2 + 16);
    uint64_t v12 = 2 * *(unsigned int *)(a3 + 16);
    int v32 = v4 - 1;
    int v30 = v3 - 1;
    if (v4 != 1)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v8)
      {
        int v15 = 0;
        uint64_t v28 = 2 * v13;
        uint64_t v29 = 2 * v14;
        while (1)
        {
          int v31 = v15;
          uint64_t v16 = v10;
          int v17 = v9;
          int v18 = v30;
          do
          {
            unint64_t v19 = v17;
            uint64_t v20 = *v7;
            if (!v19 && v20)
            {
              if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
              {
                goto LABEL_48;
              }
LABEL_18:
              uint64_t result = (uint64_t *)memmove(v16, v19, 2 * v20);
              goto LABEL_19;
            }
            if (v20) {
              goto LABEL_18;
            }
LABEL_19:
            int v17 = &v19[v11];
            v16 += v12;
            --v18;
          }
          while (v18);
          uint64_t v21 = *v7;
          if (!v19 && v21)
          {
            if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
LABEL_14:
              uint64_t result = (uint64_t *)memmove(v16, &v19[v11], 2 * v21);
              goto LABEL_15;
            }
LABEL_48:
            abort();
          }
          if (v21) {
            goto LABEL_14;
          }
LABEL_15:
          v9 += v29;
          v10 += v28;
          int v15 = v31 + 1;
          if (v31 + 1 == v32) {
            goto LABEL_36;
          }
        }
      }
      uint64_t v22 = 2 * v14;
      uint64_t v23 = 2 * v13;
      do
      {
        uint64_t v24 = *v7;
        if (!v9 && v24)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_48;
          }
        }
        else if (!v24)
        {
          goto LABEL_31;
        }
        uint64_t result = (uint64_t *)memmove(v10, v9, 2 * v24);
LABEL_31:
        v9 += v22;
        v10 += v23;
        --v32;
      }
      while (v32);
    }
LABEL_36:
    for (int i = v30; i; --i)
    {
      uint64_t v26 = *v7;
      if (!v9 && v26)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_48;
        }
      }
      else if (!v26)
      {
        goto LABEL_40;
      }
      uint64_t result = (uint64_t *)memmove(v10, v9, 2 * v26);
LABEL_40:
      v9 += v11;
      v10 += v12;
    }
    uint64_t v27 = *v7;
    if (v9 || !v27)
    {
      if (!v27) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_48;
    }
    return (uint64_t *)memmove(v10, v9, 2 * v27);
  }
  return result;
}

__int16 sub_2158A3B98@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) != 1 || *(_DWORD *)(v2 + 20) != 1)
  {
    int v4 = *(_DWORD *)(v1 + 12);
    int v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8)) {
      BOOL v6 = v4 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6 && v5 != 0)
    {
      int v8 = v4 - 1;
      int v9 = *(_WORD **)v1;
      uint64_t v10 = *(_WORD **)v2;
      uint64_t v11 = 2 * *(unsigned int *)(v1 + 24);
      uint64_t v12 = 2 * *(unsigned int *)(v2 + 24);
      int v13 = v5 - 1;
      if (v13)
      {
        uint64_t v14 = *(unsigned int *)(v2 + 28);
        uint64_t v15 = *(unsigned int *)(v1 + 28);
        if (v8)
        {
          int v16 = 0;
          int v17 = v9 + 1;
          int v18 = v10 + 1;
          do
          {
            unint64_t v19 = v18;
            uint64_t v20 = v17;
            int v21 = v8;
            do
            {
              *(v19 - 1) = *(v20 - 1);
              *unint64_t v19 = *v20;
              uint64_t v20 = (_WORD *)((char *)v20 + v11);
              unint64_t v19 = (_WORD *)((char *)v19 + v12);
              --v21;
            }
            while (v21);
            *(v19 - 1) = *(v20 - 1);
            *unint64_t v19 = *v20;
            v9 += v15;
            v10 += v14;
            ++v16;
            v17 += v15;
            v18 += v14;
          }
          while (v16 != v13);
        }
        else
        {
          uint64_t v27 = 2 * v15;
          uint64_t v28 = 2 * v14;
          do
          {
            *uint64_t v10 = *v9;
            v10[1] = v9[1];
            int v9 = (_WORD *)((char *)v9 + v27);
            uint64_t v10 = (_WORD *)((char *)v10 + v28);
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *uint64_t v10 = *v9;
        v10[1] = v9[1];
        int v9 = (_WORD *)((char *)v9 + v11);
        uint64_t v10 = (_WORD *)((char *)v10 + v12);
      }
      *uint64_t v10 = *v9;
      LOWORD(v24) = v9[1];
      v10[1] = LOWORD(v24);
    }
    return LOWORD(v24);
  }
  int v22 = *(_DWORD *)(v1 + 24);
  if (v22 == *(_DWORD *)(v2 + 24))
  {
    unsigned int v23 = *(_DWORD *)(v1 + 8);
    if (v22 == v23)
    {
      double v24 = sub_2158A3D4C(a1);
      return LOWORD(v24);
    }
  }
  else
  {
    unsigned int v23 = *(_DWORD *)(v1 + 8);
  }
  uint64_t v30 = v23;
  if (v23) {
    BOOL v25 = *(_DWORD *)(v1 + 12) == 0;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25 && *(_DWORD *)(v1 + 16) != 0) {
    double v24 = sub_2158A4184(&v30, v1, v2);
  }
  return LOWORD(v24);
}

double sub_2158A3D4C(void *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = *(unsigned int *)(*a1 + 28);
  uint64_t v4 = *(unsigned int *)(v2 + 28);
  int v5 = *(_DWORD *)(*a1 + 12);
  if (v3 == v4 && v3 == *(_DWORD *)(v1 + 24) * v5)
  {
    uint64_t v6 = (*(_DWORD *)(v1 + 8) * v5 * *(_DWORD *)(v1 + 16));
    uint64_t v7 = *(void *)v1;
    if (v6) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 0;
    }
    if (v8)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v6)
    {
      return *(double *)&v17;
    }
    int v18 = *(_WORD **)v2;
    unint64_t v19 = (v6 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v19 < 0xF)
    {
      uint64_t v20 = (__int16 *)v7;
      do
      {
LABEL_25:
        __int16 v28 = *v20++;
        LOWORD(v17) = v28;
        *v18++ = v28;
      }
      while (v20 != (__int16 *)(v7 + 2 * v6));
      return *(double *)&v17;
    }
    uint64_t v20 = (__int16 *)v7;
    if ((unint64_t)v18 - v7 < 0x20) {
      goto LABEL_25;
    }
    unint64_t v21 = v19 + 1;
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFF0;
    unsigned int v23 = &v18[v22];
    uint64_t v20 = (__int16 *)(v7 + v22 * 2);
    double v24 = (long long *)(v7 + 16);
    BOOL v25 = v18 + 8;
    unint64_t v26 = v21 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      long long v17 = *(v24 - 1);
      long long v27 = *v24;
      *(v25 - 1) = v17;
      *BOOL v25 = v27;
      v24 += 2;
      v25 += 2;
      v26 -= 16;
    }
    while (v26);
    int v18 = v23;
    if (v21 != (v21 & 0xFFFFFFFFFFFFFFF0)) {
      goto LABEL_25;
    }
  }
  else
  {
    int v9 = *(_DWORD *)(v1 + 8);
    uint64_t v30 = (v9 * v5);
    int v10 = *(_DWORD *)(v1 + 16);
    if (v9) {
      BOOL v11 = v5 == 0;
    }
    else {
      BOOL v11 = 1;
    }
    if (!v11 && v10 != 0)
    {
      int v32 = v9 - 1;
      uint64_t v13 = *(unsigned int *)(v1 + 24);
      uint64_t v14 = *(unsigned int *)(v2 + 24);
      unint64_t v33 = *(unsigned int *)(v1 + 20) | ((unint64_t)*(unsigned int *)(v2 + 20) << 32);
      uint64_t v31 = 0;
      int v34 = v5 - 1;
      uint64_t v35 = v13 | (v14 << 32);
      int v36 = v10 - 1;
      uint64_t v37 = v3 | (v4 << 32);
      uint64_t v15 = *(void *)v1;
      uint64_t v16 = *(void *)v2;
      memset(v38, 0, sizeof(v38));
      *(void *)&long long v17 = sub_2158A3F20((unsigned int *)&v31, (uint64_t)v38, &v30, v15, v16);
    }
  }
  return *(double *)&v17;
}

__int16 sub_2158A3F20@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5 = a5;
  uint64_t v6 = a4;
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  unint64_t v11 = a1[3] | (unint64_t)(v9 << 32);
  unint64_t v12 = a1[4] | (unint64_t)(v10 << 32);
  *(void *)a2 = a4;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = a5;
  *(void *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  unsigned int v13 = a1[8];
  if (v13)
  {
    for (unsigned int i = 0; i < v13; ++i)
    {
      *(void *)a2 = v6;
      *(void *)(a2 + 24) = v5;
      uint64_t v16 = *a3;
      if (v6 || !v16)
      {
        uint64_t v17 = v5;
        if (!v16) {
          goto LABEL_4;
        }
      }
      else
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_33;
        }
        uint64_t v17 = *(void *)(a2 + 24);
      }
      unint64_t v18 = (v16 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v18 < 0xF || (unint64_t)(v17 - v6) < 0x20)
      {
        unint64_t v21 = (_WORD *)v17;
        unint64_t v22 = (__int16 *)v6;
      }
      else
      {
        unint64_t v19 = v18 + 1;
        unint64_t v20 = (v18 + 1) & 0xFFFFFFFFFFFFFFF0;
        unint64_t v21 = (_WORD *)(v17 + 2 * v20);
        unint64_t v22 = (__int16 *)(v6 + 2 * v20);
        unsigned int v23 = (long long *)(v6 + 16);
        double v24 = (_OWORD *)(v17 + 16);
        unint64_t v25 = v20;
        do
        {
          long long v26 = *(v23 - 1);
          long long v27 = *v23;
          *(v24 - 1) = v26;
          _OWORD *v24 = v27;
          v23 += 2;
          v24 += 2;
          v25 -= 16;
        }
        while (v25);
        if (v19 == v20) {
          goto LABEL_3;
        }
      }
      do
      {
        __int16 v28 = *v22++;
        LOWORD(v26) = v28;
        *v21++ = v28;
      }
      while (v22 != (__int16 *)(v6 + 2 * v16));
LABEL_3:
      unsigned int v13 = a1[8];
LABEL_4:
      v6 += 2 * a1[9];
      v5 += 2 * a1[10];
    }
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 24) = v5;
  uint64_t v29 = *a3;
  if (v6 || !v29)
  {
    if (!v29) {
      return v26;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_33:
      abort();
    }
    uint64_t v5 = *(void *)(a2 + 24);
  }
  unint64_t v30 = (v29 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v30 < 0xF || (unint64_t)(v5 - v6) < 0x20)
  {
    unint64_t v33 = (_WORD *)v5;
    int v34 = (__int16 *)v6;
    do
    {
LABEL_31:
      __int16 v39 = *v34++;
      LOWORD(v26) = v39;
      *v33++ = v39;
    }
    while (v34 != (__int16 *)(v6 + 2 * v29));
    return v26;
  }
  unint64_t v31 = v30 + 1;
  unint64_t v32 = (v30 + 1) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v33 = (_WORD *)(v5 + 2 * v32);
  int v34 = (__int16 *)(v6 + 2 * v32);
  uint64_t v35 = (long long *)(v6 + 16);
  int v36 = (_OWORD *)(v5 + 16);
  unint64_t v37 = v32;
  do
  {
    long long v26 = *(v35 - 1);
    long long v38 = *v35;
    *(v36 - 1) = v26;
    _OWORD *v36 = v38;
    v35 += 2;
    v36 += 2;
    v37 -= 16;
  }
  while (v37);
  if (v31 != v32) {
    goto LABEL_31;
  }
  return v26;
}

double sub_2158A4184(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a2 + 8);
  int v3 = *(_DWORD *)(a2 + 12);
  int v5 = *(_DWORD *)(a2 + 16);
  if (v4) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v16 = v4 - 1;
    uint64_t v9 = *(unsigned int *)(a2 + 24);
    uint64_t v10 = *(unsigned int *)(a3 + 24);
    unint64_t v17 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    uint64_t v15 = 0;
    int v18 = v3 - 1;
    uint64_t v19 = v9 | (v10 << 32);
    unint64_t v21 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)a3;
    memset(v22, 0, sizeof(v22));
    unsigned int v20 = v5 - 1;
    if (v5 != 1)
    {
      unsigned int v13 = 0;
      do
      {
        sub_2158A4274(&v15, v22, a1, v11, v12);
        v11 += 2 * v21;
        v12 += 2 * HIDWORD(v21);
        ++v13;
      }
      while (v13 < v20);
    }
    *(void *)&double result = sub_2158A4274(&v15, v22, a1, v11, v12);
  }
  return result;
}

__int16 sub_2158A4274@<H0>(_DWORD *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5 = a5;
  uint64_t v6 = a4;
  *a2 = a4;
  a2[2] = a5;
  unsigned int v9 = a1[5];
  if (v9)
  {
    for (unsigned int i = 0; i < v9; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      uint64_t v12 = *a3;
      if (v6 || !v12)
      {
        uint64_t v13 = v5;
        if (!v12) {
          goto LABEL_4;
        }
      }
      else
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_33;
        }
        uint64_t v13 = a2[2];
      }
      unint64_t v14 = (v12 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v14 < 0xF || (unint64_t)(v13 - v6) < 0x20)
      {
        unint64_t v17 = (_WORD *)v13;
        int v18 = (__int16 *)v6;
      }
      else
      {
        unint64_t v15 = v14 + 1;
        unint64_t v16 = (v14 + 1) & 0xFFFFFFFFFFFFFFF0;
        unint64_t v17 = (_WORD *)(v13 + 2 * v16);
        int v18 = (__int16 *)(v6 + 2 * v16);
        uint64_t v19 = (long long *)(v6 + 16);
        unsigned int v20 = (_OWORD *)(v13 + 16);
        unint64_t v21 = v16;
        do
        {
          long long v22 = *(v19 - 1);
          long long v23 = *v19;
          *(v20 - 1) = v22;
          *unsigned int v20 = v23;
          v19 += 2;
          v20 += 2;
          v21 -= 16;
        }
        while (v21);
        if (v15 == v16) {
          goto LABEL_3;
        }
      }
      do
      {
        __int16 v24 = *v18++;
        LOWORD(v22) = v24;
        *v17++ = v24;
      }
      while (v18 != (__int16 *)(v6 + 2 * v12));
LABEL_3:
      unsigned int v9 = a1[5];
LABEL_4:
      v6 += 2 * a1[6];
      v5 += 2 * a1[7];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  uint64_t v25 = *a3;
  if (v6 || !v25)
  {
    if (!v25) {
      return v22;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_33:
      abort();
    }
    uint64_t v5 = a2[2];
  }
  unint64_t v26 = (v25 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v26 < 0xF || (unint64_t)(v5 - v6) < 0x20)
  {
    uint64_t v29 = (_WORD *)v5;
    unint64_t v30 = (__int16 *)v6;
    do
    {
LABEL_31:
      __int16 v35 = *v30++;
      LOWORD(v22) = v35;
      *v29++ = v35;
    }
    while (v30 != (__int16 *)(v6 + 2 * v25));
    return v22;
  }
  unint64_t v27 = v26 + 1;
  unint64_t v28 = (v26 + 1) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v29 = (_WORD *)(v5 + 2 * v28);
  unint64_t v30 = (__int16 *)(v6 + 2 * v28);
  unint64_t v31 = (long long *)(v6 + 16);
  unint64_t v32 = (_OWORD *)(v5 + 16);
  unint64_t v33 = v28;
  do
  {
    long long v22 = *(v31 - 1);
    long long v34 = *v31;
    *(v32 - 1) = v22;
    *unint64_t v32 = v34;
    v31 += 2;
    v32 += 2;
    v33 -= 16;
  }
  while (v33);
  if (v27 != v28) {
    goto LABEL_31;
  }
  return v22;
}

__n128 sub_2158A44C0(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661408[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A4554(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661408[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663D60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A4630(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A4630(uint64_t a1, long long *a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)((char *)a2 + 4) != *(void *)(a1 + 4)
    || *((void *)a2 + 2) != *(void *)(a1 + 16))
  {
    long long v3 = a2[1];
    long long v11 = *a2;
    long long v12 = v3;
    long long v13 = a2[2];
    uint64_t v14 = *((void *)a2 + 6);
    sub_215854024((uint64_t)v15, (uint64_t)a2 + 56);
    long long v4 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v13;
    *(void *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 80) = v16;
    *(void *)(a1 + 96) = v17;
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      if (*(_DWORD *)(a1 + 88)) {
        BOOL v6 = *(_DWORD *)(a1 + 84) == 0;
      }
      else {
        BOOL v6 = 1;
      }
      if (v6 || *(_DWORD *)(a1 + 80) == 0) {
        int v8 = 0;
      }
      else {
        int v8 = *(_DWORD *)(a1 + 88);
      }
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
        uint64_t v5 = *(void **)(a1 + 64);
        *(void *)(a1 + 56) = v15[0];
        if (!v5) {
          goto LABEL_20;
        }
      }
      else
      {
        *(void *)(a1 + 56) = v15[0];
      }
      free(v5);
    }
    else
    {
      *(void *)(a1 + 56) = v15[0];
    }
LABEL_20:
    uint64_t v9 = v15[2];
    *(void *)(a1 + 64) = v15[1];
    *(void *)(a1 + 72) = v9;
    return a1;
  }
  *(void *)&long long v11 = a2;
  *((void *)&v11 + 1) = a1;
  sub_2158A4864((uint64_t *)&v11);
  return a1;
}

void sub_2158A47A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158A47B4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    BOOL v3 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
    BOOL v4 = v3 || *(_DWORD *)(a1 + 80) == 0;
    int v5 = v4 ? 0 : *(_DWORD *)(a1 + 88);
    if (v5 * (*(_DWORD *)(a1 + 100) >> 1) != -1) {
      goto LABEL_14;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void **)(a1 + 64);
    if (v2) {
LABEL_14:
    }
      free(v2);
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

__int16 sub_2158A4864@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*(_DWORD *)(*a1 + 12) != 1 || *(_DWORD *)(v2 + 12) != 1)
  {
    int v4 = *(_DWORD *)(v1 + 4);
    int v5 = *(_DWORD *)(v1 + 8);
    if (*(_DWORD *)v1) {
      BOOL v6 = v4 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6 && v5 != 0)
    {
      int v8 = v4 - 1;
      uint64_t v9 = *(_WORD **)(v1 + 64);
      char v10 = *(_WORD **)(v2 + 64);
      uint64_t v11 = 2 * *(unsigned int *)(v1 + 16);
      uint64_t v12 = 2 * *(unsigned int *)(v2 + 16);
      int v13 = v5 - 1;
      if (v13)
      {
        uint64_t v14 = *(unsigned int *)(v2 + 20);
        uint64_t v15 = *(unsigned int *)(v1 + 20);
        if (v8)
        {
          int v16 = 0;
          uint64_t v17 = v9 + 1;
          int v18 = v10 + 1;
          do
          {
            uint64_t v19 = v18;
            unsigned int v20 = v17;
            int v21 = v8;
            do
            {
              *(v19 - 1) = *(v20 - 1);
              *uint64_t v19 = *v20;
              unsigned int v20 = (_WORD *)((char *)v20 + v11);
              uint64_t v19 = (_WORD *)((char *)v19 + v12);
              --v21;
            }
            while (v21);
            *(v19 - 1) = *(v20 - 1);
            *uint64_t v19 = *v20;
            v9 += v15;
            v10 += v14;
            ++v16;
            v17 += v15;
            v18 += v14;
          }
          while (v16 != v13);
        }
        else
        {
          uint64_t v27 = 2 * v15;
          uint64_t v28 = 2 * v14;
          do
          {
            *char v10 = *v9;
            v10[1] = v9[1];
            uint64_t v9 = (_WORD *)((char *)v9 + v27);
            char v10 = (_WORD *)((char *)v10 + v28);
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *char v10 = *v9;
        v10[1] = v9[1];
        uint64_t v9 = (_WORD *)((char *)v9 + v11);
        char v10 = (_WORD *)((char *)v10 + v12);
      }
      *char v10 = *v9;
      LOWORD(v24) = v9[1];
      v10[1] = LOWORD(v24);
    }
    return LOWORD(v24);
  }
  int v22 = *(_DWORD *)(v1 + 16);
  if (v22 == *(_DWORD *)(v2 + 16))
  {
    unsigned int v23 = *(_DWORD *)v1;
    if (v22 == *(_DWORD *)v1)
    {
      double v24 = sub_2158A4A18(a1);
      return LOWORD(v24);
    }
  }
  else
  {
    unsigned int v23 = *(_DWORD *)v1;
  }
  uint64_t v30 = v23;
  if (v23) {
    BOOL v25 = *(_DWORD *)(v1 + 4) == 0;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25 && *(_DWORD *)(v1 + 8) != 0) {
    double v24 = sub_2158A4BF8(&v30, v1, v2);
  }
  return LOWORD(v24);
}

double sub_2158A4A18(void *a1)
{
  uint64_t v1 = (int *)*a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = *(unsigned int *)(*a1 + 20);
  uint64_t v4 = *(unsigned int *)(v2 + 20);
  if (v3 != v4)
  {
    int v5 = v1[1];
LABEL_10:
    int v9 = *v1;
    uint64_t v28 = (*v1 * v5);
    int v10 = v1[2];
    if (v9) {
      BOOL v11 = v5 == 0;
    }
    else {
      BOOL v11 = 1;
    }
    if (!v11 && v10 != 0)
    {
      uint64_t v29 = 0;
      int v30 = v9 - 1;
      unint64_t v31 = v1[3] | ((unint64_t)*(unsigned int *)(v2 + 12) << 32);
      int v32 = v5 - 1;
      unint64_t v33 = v1[4] | ((unint64_t)*(unsigned int *)(v2 + 16) << 32);
      int v34 = v10 - 1;
      uint64_t v35 = v3 | (v4 << 32);
      uint64_t v13 = *((void *)v1 + 8);
      uint64_t v14 = *(void *)(v2 + 64);
      memset(v36, 0, sizeof(v36));
      *(void *)&long long v15 = sub_2158A3F20((unsigned int *)&v29, (uint64_t)v36, &v28, v13, v14);
    }
    return *(double *)&v15;
  }
  int v5 = v1[1];
  if (v3 != v1[4] * v5) {
    goto LABEL_10;
  }
  uint64_t v6 = (*v1 * v5 * v1[2]);
  uint64_t v7 = *((void *)v1 + 8);
  if (v6) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
  }
  else if (!v6)
  {
    return *(double *)&v15;
  }
  int v16 = *(_WORD **)(v2 + 64);
  unint64_t v17 = (v6 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v17 < 0xF)
  {
    int v18 = (__int16 *)v7;
    do
    {
LABEL_26:
      __int16 v26 = *v18++;
      LOWORD(v15) = v26;
      *v16++ = v26;
    }
    while (v18 != (__int16 *)(v7 + 2 * v6));
    return *(double *)&v15;
  }
  int v18 = (__int16 *)v7;
  if ((unint64_t)v16 - v7 < 0x20) {
    goto LABEL_26;
  }
  unint64_t v19 = v17 + 1;
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFF0;
  int v21 = &v16[v20];
  int v18 = (__int16 *)(v7 + v20 * 2);
  int v22 = (long long *)(v7 + 16);
  unsigned int v23 = v16 + 8;
  unint64_t v24 = v19 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    long long v15 = *(v22 - 1);
    long long v25 = *v22;
    *(v23 - 1) = v15;
    *unsigned int v23 = v25;
    v22 += 2;
    v23 += 2;
    v24 -= 16;
  }
  while (v24);
  int v16 = v21;
  if (v19 != (v19 & 0xFFFFFFFFFFFFFFF0)) {
    goto LABEL_26;
  }
  return *(double *)&v15;
}

double sub_2158A4BF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v15 = *(_DWORD *)a2 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    unint64_t v16 = *(unsigned int *)(a2 + 12) | ((unint64_t)*(unsigned int *)(a3 + 12) << 32);
    uint64_t v14 = 0;
    int v17 = v3 - 1;
    uint64_t v18 = v8 | (v9 << 32);
    unint64_t v20 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    uint64_t v10 = *(void *)(a2 + 64);
    uint64_t v11 = *(void *)(a3 + 64);
    memset(v21, 0, sizeof(v21));
    unsigned int v19 = v4 - 1;
    if (v4 != 1)
    {
      unsigned int v12 = 0;
      do
      {
        sub_2158A4274(&v14, v21, a1, v10, v11);
        v10 += 2 * v20;
        v11 += 2 * HIDWORD(v20);
        ++v12;
      }
      while (v12 < v19);
    }
    *(void *)&double result = sub_2158A4274(&v14, v21, a1, v10, v11);
  }
  return result;
}

float sub_2158A4CE8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v1 + 20) == 1)
  {
    sub_215854ED0(a1);
    return result;
  }
  int v4 = *(_DWORD *)(v2 + 12);
  int v5 = *(_DWORD *)(v2 + 16);
  if (*(_DWORD *)(v2 + 8)) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v4 - 1;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    uint64_t v10 = *(unsigned int *)(v1 + 24);
    uint64_t v11 = *(float **)v2;
    unsigned int v12 = *(float **)v1;
    int v13 = v5 - 1;
    if (v13)
    {
      uint64_t v14 = *(unsigned int *)(v1 + 28);
      uint64_t v15 = *(unsigned int *)(v2 + 28);
      if (!v8)
      {
        do
        {
          float *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_23:
        float *v12 = *v11;
        float result = v11[1];
        v12[1] = result;
        return result;
      }
      int v16 = 0;
      int v17 = v11 + 1;
      uint64_t v18 = v12 + 1;
      do
      {
        unsigned int v19 = v18;
        unint64_t v20 = v17;
        int v21 = v8;
        do
        {
          *(v19 - 1) = *(v20 - 1);
          *unsigned int v19 = *v20;
          v20 += v9;
          v19 += v10;
          --v21;
        }
        while (v21);
        *(v19 - 1) = *(v20 - 1);
        *unsigned int v19 = *v20;
        v11 += v15;
        v12 += v14;
        ++v16;
        v17 += v15;
        v18 += v14;
      }
      while (v16 != v13);
    }
    for (; v8; --v8)
    {
      float *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    goto LABEL_23;
  }
  return result;
}

__n128 sub_2158A4E24(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661428[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A4EB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661428[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663DE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A4F94(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A4F94(uint64_t a1, long long *a2)
{
  if (*(void *)(a1 + 64)
    && *(void *)((char *)a2 + 4) == *(void *)(a1 + 4)
    && *((void *)a2 + 2) == *(void *)(a1 + 16))
  {
    *(void *)&long long v9 = a2;
    *((void *)&v9 + 1) = a1;
    sub_2158A506C((uint64_t *)&v9);
    return a1;
  }
  else
  {
    long long v3 = a2[1];
    long long v9 = *a2;
    long long v10 = v3;
    long long v11 = a2[2];
    uint64_t v12 = *((void *)a2 + 6);
    sub_215854BD4((uint64_t)v13, (uint64_t)a2 + 56);
    long long v4 = v10;
    *(_OWORD *)a1 = v9;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 80) = v14;
    *(void *)(a1 + 96) = v15;
    uint64_t v5 = v13[0];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v5;
    BOOL v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v13[2];
    *(void *)(a1 + 64) = v13[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
}

float sub_2158A506C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*(_DWORD *)(*a1 + 12) == 1 && *(_DWORD *)(v1 + 12) == 1)
  {
    sub_2158A51A8(a1);
    return result;
  }
  int v4 = *(_DWORD *)(v2 + 4);
  int v5 = *(_DWORD *)(v2 + 8);
  if (*(_DWORD *)v2) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && v5 != 0)
  {
    int v8 = v4 - 1;
    uint64_t v9 = *(unsigned int *)(v2 + 16);
    uint64_t v10 = *(unsigned int *)(v1 + 16);
    long long v11 = *(float **)(v2 + 64);
    uint64_t v12 = *(float **)(v1 + 64);
    int v13 = v5 - 1;
    if (v13)
    {
      uint64_t v14 = *(unsigned int *)(v1 + 20);
      uint64_t v15 = *(unsigned int *)(v2 + 20);
      if (!v8)
      {
        do
        {
          float *v12 = *v11;
          v12[1] = v11[1];
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_23:
        float *v12 = *v11;
        float result = v11[1];
        v12[1] = result;
        return result;
      }
      int v16 = 0;
      int v17 = v11 + 1;
      uint64_t v18 = v12 + 1;
      do
      {
        unsigned int v19 = v18;
        unint64_t v20 = v17;
        int v21 = v8;
        do
        {
          *(v19 - 1) = *(v20 - 1);
          *unsigned int v19 = *v20;
          v20 += v9;
          v19 += v10;
          --v21;
        }
        while (v21);
        *(v19 - 1) = *(v20 - 1);
        *unsigned int v19 = *v20;
        v11 += v15;
        v12 += v14;
        ++v16;
        v17 += v15;
        v18 += v14;
      }
      while (v16 != v13);
    }
    for (; v8; --v8)
    {
      float *v12 = *v11;
      v12[1] = v11[1];
      v11 += v9;
      v12 += v10;
    }
    goto LABEL_23;
  }
  return result;
}

uint64_t *sub_2158A51A8(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  int v3 = *(_DWORD *)(*result + 16);
  if (v3 != *(_DWORD *)(v2 + 16))
  {
    unsigned int v4 = *(_DWORD *)v1;
LABEL_12:
    uint64_t v14 = v4;
    if (v4) {
      BOOL v10 = *(_DWORD *)(v1 + 4) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10 && *(_DWORD *)(v1 + 8) != 0) {
      return sub_2158A5480(&v14, v1, v2);
    }
    return result;
  }
  unsigned int v4 = *(_DWORD *)v1;
  if (v3 != *(_DWORD *)(v1 + 12) * *(_DWORD *)v1) {
    goto LABEL_12;
  }
  int v5 = *(_DWORD *)(v1 + 20);
  if (v5 == *(_DWORD *)(v2 + 20) && (int v6 = *(_DWORD *)(v1 + 4), v5 == v6 * v3))
  {
    uint64_t v7 = v6 * v4 * *(_DWORD *)(v1 + 8);
    int v8 = *(const void **)(v1 + 64);
    if (v7) {
      BOOL v9 = v8 == 0;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
    }
    else if (!v7)
    {
      return result;
    }
    int v13 = *(void **)(v2 + 64);
    return (uint64_t *)memmove(v13, v8, 4 * v7);
  }
  else
  {
    uint64_t v12 = (_DWORD *)*result;
    return (uint64_t *)sub_2158A5308(v12, v2);
  }
}

_DWORD *sub_2158A5308(_DWORD *result, uint64_t a2)
{
  int v2 = result[1];
  int v3 = result[2];
  if (*result) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4 && v3 != 0)
  {
    uint64_t v6 = (v2 * *result);
    uint64_t v7 = (char *)*((void *)result + 8);
    int v8 = *(char **)(a2 + 64);
    int v9 = v3 - 1;
    if (v3 == 1)
    {
LABEL_17:
      if (!v6 || v7)
      {
        if (!v6) {
          return result;
        }
      }
      else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_16;
      }
      return memmove(v8, v7, 4 * v6);
    }
    else if (v6)
    {
      uint64_t v10 = 4 * result[5];
      uint64_t v11 = 4 * *(unsigned int *)(a2 + 20);
      while (v7
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        float result = memmove(v8, v7, 4 * v6);
        v7 += v10;
        v8 += v11;
        if (!--v9) {
          goto LABEL_17;
        }
      }
LABEL_16:
      abort();
    }
  }
  return result;
}

uint64_t *sub_2158A5480(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    uint64_t v7 = result;
    int v8 = v3 - 1;
    int v9 = *(char **)(a2 + 64);
    uint64_t v10 = *(char **)(a3 + 64);
    uint64_t v11 = 4 * *(unsigned int *)(a2 + 16);
    uint64_t v12 = 4 * *(unsigned int *)(a3 + 16);
    int v32 = v4 - 1;
    int v30 = v3 - 1;
    if (v4 != 1)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v8)
      {
        int v15 = 0;
        uint64_t v28 = 4 * v13;
        uint64_t v29 = 4 * v14;
        while (1)
        {
          int v31 = v15;
          int v16 = v10;
          int v17 = v9;
          int v18 = v30;
          do
          {
            unsigned int v19 = v17;
            uint64_t v20 = *v7;
            if (!v19 && v20)
            {
              if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
              {
                goto LABEL_48;
              }
LABEL_18:
              float result = (uint64_t *)memmove(v16, v19, 4 * v20);
              goto LABEL_19;
            }
            if (v20) {
              goto LABEL_18;
            }
LABEL_19:
            int v17 = &v19[v11];
            v16 += v12;
            --v18;
          }
          while (v18);
          uint64_t v21 = *v7;
          if (!v19 && v21)
          {
            if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
            {
LABEL_14:
              float result = (uint64_t *)memmove(v16, &v19[v11], 4 * v21);
              goto LABEL_15;
            }
LABEL_48:
            abort();
          }
          if (v21) {
            goto LABEL_14;
          }
LABEL_15:
          v9 += v29;
          v10 += v28;
          int v15 = v31 + 1;
          if (v31 + 1 == v32) {
            goto LABEL_36;
          }
        }
      }
      uint64_t v22 = 4 * v14;
      uint64_t v23 = 4 * v13;
      do
      {
        uint64_t v24 = *v7;
        if (!v9 && v24)
        {
          if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            goto LABEL_48;
          }
        }
        else if (!v24)
        {
          goto LABEL_31;
        }
        float result = (uint64_t *)memmove(v10, v9, 4 * v24);
LABEL_31:
        v9 += v22;
        v10 += v23;
        --v32;
      }
      while (v32);
    }
LABEL_36:
    for (int i = v30; i; --i)
    {
      uint64_t v26 = *v7;
      if (!v9 && v26)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_48;
        }
      }
      else if (!v26)
      {
        goto LABEL_40;
      }
      float result = (uint64_t *)memmove(v10, v9, 4 * v26);
LABEL_40:
      v9 += v11;
      v10 += v12;
    }
    uint64_t v27 = *v7;
    if (v9 || !v27)
    {
      if (!v27) {
        return result;
      }
    }
    else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_48;
    }
    return (uint64_t *)memmove(v10, v9, 4 * v27);
  }
  return result;
}

void sub_2158A57D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    uint64_t v10 = *(unsigned char **)a2;
    uint64_t v11 = *(unsigned char **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        int v15 = 0;
        int v16 = v11 + 2;
        int v17 = v10 + 2;
        do
        {
          int v18 = v17;
          unsigned int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *unsigned int v19 = *v18;
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          unsigned char *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      unsigned char *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    unsigned char *v11 = *v10;
    v11[1] = v10[1];
    _OWORD v11[2] = v10[2];
  }
}

__n128 sub_2158A58FC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661448[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A5990(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661448[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663E60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5A6C(a2 + 8, a3 + 8);
}

uint64_t sub_2158A5A6C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215851B70((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A2CF4((size_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A5B9C((uint64_t)&v18, a2, a1);
    return a1;
  }
}

void sub_2158A5B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(unsigned char **)(a2 + 64);
    long long v11 = *(unsigned char **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        int v15 = 0;
        uint64_t v16 = v11 + 2;
        char v17 = v10 + 2;
        do
        {
          int v18 = v17;
          unsigned int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *unsigned int v19 = *v18;
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          unsigned char *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      unsigned char *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    unsigned char *v11 = *v10;
    v11[1] = v10[1];
    _OWORD v11[2] = v10[2];
  }
}

void sub_2158A5CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    long long v10 = *(_WORD **)a2;
    long long v11 = *(_WORD **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          _WORD *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        _WORD *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        return;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        unsigned int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *unsigned int v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      _WORD *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

__n128 sub_2158A5E14(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661468[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A5EA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661468[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663EE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5F84(a2 + 8, a3 + 8);
}

uint64_t sub_2158A5F84(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215852DD0((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A356C((uint64_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A60B4((uint64_t)&v18, a2, a1);
    return a1;
  }
}

void sub_2158A60B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(_WORD **)(a2 + 64);
    long long v11 = *(_WORD **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          _WORD *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        _WORD *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        return;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        unsigned int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *unsigned int v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      _WORD *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

double sub_2158A6204(void *a1)
{
  uint64_t v1 = (_DWORD *)*a1;
  uint64_t v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) != 1 || *(_DWORD *)(v2 + 20) != 1)
  {
    char v11 = 0;
    if (v1[2]) {
      BOOL v4 = v1[3] == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4 && v1[4] != 0)
    {
      int v12 = &v11;
      *(void *)&double result = sub_2158A62D0((uint64_t)&v12, (uint64_t)v1, v2);
    }
    return result;
  }
  int v7 = v1[6];
  if (v7 == *(_DWORD *)(v2 + 24))
  {
    unsigned int v8 = v1[2];
    if (v7 == v8)
    {
      return sub_2158A3D4C(a1);
    }
  }
  else
  {
    unsigned int v8 = v1[2];
  }
  int v12 = (char *)v8;
  if (v8) {
    BOOL v9 = v1[3] == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9 && v1[4] != 0) {
    return sub_2158A4184((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  return result;
}

__int16 sub_2158A62D0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    unsigned int v8 = *(_WORD **)a2;
    BOOL v9 = *(_WORD **)a3;
    uint64_t v10 = 2 * *(unsigned int *)(a2 + 24);
    uint64_t v11 = 2 * *(unsigned int *)(a3 + 24);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        int v15 = 0;
        uint64_t v16 = v9 + 2;
        char v17 = v8 + 2;
        do
        {
          int v18 = v17;
          unsigned int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *unsigned int v19 = *v18;
            unsigned int v19 = (_WORD *)((char *)v19 + v11);
            int v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        uint64_t v21 = 2 * v14;
        uint64_t v22 = 2 * v13;
        do
        {
          *BOOL v9 = *v8;
          v9[1] = v8[1];
          _OWORD v9[2] = v8[2];
          unsigned int v8 = (_WORD *)((char *)v8 + v21);
          BOOL v9 = (_WORD *)((char *)v9 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *BOOL v9 = *v8;
      v9[1] = v8[1];
      _OWORD v9[2] = v8[2];
      unsigned int v8 = (_WORD *)((char *)v8 + v10);
      BOOL v9 = (_WORD *)((char *)v9 + v11);
    }
    *BOOL v9 = *v8;
    v9[1] = v8[1];
    __int16 result = v8[2];
    _OWORD v9[2] = result;
  }
  return result;
}

__n128 sub_2158A6410(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661488[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A64A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661488[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663F60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6580(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A6580(uint64_t a1, long long *a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)((char *)a2 + 4) != *(void *)(a1 + 4)
    || *((void *)a2 + 2) != *(void *)(a1 + 16))
  {
    long long v3 = a2[1];
    long long v11 = *a2;
    long long v12 = v3;
    long long v13 = a2[2];
    uint64_t v14 = *((void *)a2 + 6);
    sub_215854024((uint64_t)v15, (uint64_t)a2 + 56);
    long long v4 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v13;
    *(void *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 80) = v16;
    *(void *)(a1 + 96) = v17;
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      if (*(_DWORD *)(a1 + 88)) {
        BOOL v6 = *(_DWORD *)(a1 + 84) == 0;
      }
      else {
        BOOL v6 = 1;
      }
      if (v6 || *(_DWORD *)(a1 + 80) == 0) {
        int v8 = 0;
      }
      else {
        int v8 = *(_DWORD *)(a1 + 88);
      }
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
        uint64_t v5 = *(void **)(a1 + 64);
        *(void *)(a1 + 56) = v15[0];
        if (!v5) {
          goto LABEL_20;
        }
      }
      else
      {
        *(void *)(a1 + 56) = v15[0];
      }
      free(v5);
    }
    else
    {
      *(void *)(a1 + 56) = v15[0];
    }
LABEL_20:
    uint64_t v9 = v15[2];
    *(void *)(a1 + 64) = v15[1];
    *(void *)(a1 + 72) = v9;
    return a1;
  }
  *(void *)&long long v11 = a2;
  *((void *)&v11 + 1) = a1;
  sub_2158A67B4((unsigned int **)&v11);
  return a1;
}

void sub_2158A66F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158A6704(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    BOOL v3 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
    BOOL v4 = v3 || *(_DWORD *)(a1 + 80) == 0;
    int v5 = v4 ? 0 : *(_DWORD *)(a1 + 88);
    if (v5 * (*(_DWORD *)(a1 + 100) >> 1) != -1) {
      goto LABEL_14;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void **)(a1 + 64);
    if (v2) {
LABEL_14:
    }
      free(v2);
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

double sub_2158A67B4(unsigned int **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)a1[1];
  if ((*a1)[3] != 1 || *(_DWORD *)(v2 + 12) != 1)
  {
    char v11 = 0;
    if (*v1) {
      BOOL v4 = v1[1] == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4 && v1[2] != 0)
    {
      long long v12 = &v11;
      *(void *)&double result = sub_2158A6880((uint64_t)&v12, (uint64_t)v1, v2);
    }
    return result;
  }
  unsigned int v7 = v1[4];
  if (v7 == *(_DWORD *)(v2 + 16))
  {
    unsigned int v8 = *v1;
    if (v7 == *v1)
    {
      return sub_2158A4A18(a1);
    }
  }
  else
  {
    unsigned int v8 = *v1;
  }
  long long v12 = (char *)v8;
  if (v8) {
    BOOL v9 = v1[1] == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9 && v1[2] != 0) {
    return sub_2158A4BF8((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  return result;
}

__int16 sub_2158A6880@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    unsigned int v8 = *(_WORD **)(a2 + 64);
    BOOL v9 = *(_WORD **)(a3 + 64);
    uint64_t v10 = 2 * *(unsigned int *)(a2 + 16);
    uint64_t v11 = 2 * *(unsigned int *)(a3 + 16);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        int v15 = 0;
        long long v16 = v9 + 2;
        uint64_t v17 = v8 + 2;
        do
        {
          int v18 = v17;
          unsigned int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *unsigned int v19 = *v18;
            unsigned int v19 = (_WORD *)((char *)v19 + v11);
            int v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *unsigned int v19 = *v18;
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        uint64_t v21 = 2 * v14;
        uint64_t v22 = 2 * v13;
        do
        {
          *BOOL v9 = *v8;
          v9[1] = v8[1];
          _OWORD v9[2] = v8[2];
          unsigned int v8 = (_WORD *)((char *)v8 + v21);
          BOOL v9 = (_WORD *)((char *)v9 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *BOOL v9 = *v8;
      v9[1] = v8[1];
      _OWORD v9[2] = v8[2];
      unsigned int v8 = (_WORD *)((char *)v8 + v10);
      BOOL v9 = (_WORD *)((char *)v9 + v11);
    }
    *BOOL v9 = *v8;
    v9[1] = v8[1];
    __int16 result = v8[2];
    _OWORD v9[2] = result;
  }
  return result;
}

float sub_2158A69C0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 12);
  int v3 = *(_DWORD *)(a1 + 16);
  if (*(_DWORD *)(a1 + 8)) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4 && v3 != 0)
  {
    int v6 = v2 - 1;
    uint64_t v7 = *(unsigned int *)(a1 + 24);
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    BOOL v9 = *(float **)a1;
    uint64_t v10 = *(float **)a2;
    int v11 = v3 - 1;
    if (v11)
    {
      uint64_t v12 = *(unsigned int *)(a2 + 28);
      uint64_t v13 = *(unsigned int *)(a1 + 28);
      if (!v6)
      {
        do
        {
          *uint64_t v10 = *v9;
          v10[1] = v9[1];
          uint64_t v10[2] = v9[2];
          v9 += v13;
          v10 += v12;
          --v11;
        }
        while (v11);
LABEL_18:
        *uint64_t v10 = *v9;
        v10[1] = v9[1];
        float result = v9[2];
        uint64_t v10[2] = result;
        return result;
      }
      int v14 = 0;
      int v15 = v10 + 2;
      long long v16 = v9 + 2;
      do
      {
        uint64_t v17 = v16;
        int v18 = v15;
        int v19 = v6;
        do
        {
          *(v18 - 2) = *(v17 - 2);
          *(v18 - 1) = *(v17 - 1);
          *int v18 = *v17;
          v18 += v8;
          v17 += v7;
          --v19;
        }
        while (v19);
        *(v18 - 2) = *(v17 - 2);
        *(v18 - 1) = *(v17 - 1);
        *int v18 = *v17;
        v9 += v13;
        v10 += v12;
        ++v14;
        v15 += v12;
        v16 += v13;
      }
      while (v14 != v11);
    }
    for (; v6; --v6)
    {
      *uint64_t v10 = *v9;
      v10[1] = v9[1];
      uint64_t v10[2] = v9[2];
      v9 += v7;
      v10 += v8;
    }
    goto LABEL_18;
  }
  return result;
}

__n128 sub_2158A6B08(__n128 **a1, __n128 *a2, __n128 *a3)
{
  BOOL v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6614A8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *BOOL v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A6B9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6614A8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C663FE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6C78(a2 + 8, a3 + 8);
}

uint64_t sub_2158A6C78(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215854BD4((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    int v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A51A8((uint64_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A6DA8((uint64_t)&v18, a2, a1);
    return a1;
  }
}

float sub_2158A6DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(float **)(a2 + 64);
    long long v11 = *(float **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          float *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        float *v11 = *v10;
        v11[1] = v10[1];
        float result = v10[2];
        _OWORD v11[2] = result;
        return result;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *int v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      float *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_2158A6EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    long long v10 = *(unsigned char **)a2;
    long long v11 = *(unsigned char **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        int v15 = 0;
        uint64_t v16 = v11 + 3;
        char v17 = v10 + 1;
        do
        {
          int v18 = v17;
          int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 3) = *(v18 - 1);
            *(v19 - 2) = *v18;
            *(v19 - 1) = v18[1];
            *int v19 = v18[2];
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 3) = *(v18 - 1);
          *(v19 - 2) = *v18;
          *(v19 - 1) = v18[1];
          *int v19 = v18[2];
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          unsigned char *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      unsigned char *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    unsigned char *v11 = *v10;
    v11[1] = v10[1];
    _OWORD v11[2] = v10[2];
    _DWORD v11[3] = v10[3];
  }
}

__n128 sub_2158A7040(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6614C8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A70D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6614C8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664060;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A71B0(a2 + 8, a3 + 8);
}

uint64_t sub_2158A71B0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215851B70((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    int v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A2CF4((size_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A72E0((uint64_t)&v18, a2, a1);
    return a1;
  }
}

void sub_2158A72E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(unsigned char **)(a2 + 64);
    long long v11 = *(unsigned char **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        int v15 = 0;
        uint64_t v16 = v11 + 3;
        char v17 = v10 + 1;
        do
        {
          int v18 = v17;
          int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 3) = *(v18 - 1);
            *(v19 - 2) = *v18;
            *(v19 - 1) = v18[1];
            *int v19 = v18[2];
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 3) = *(v18 - 1);
          *(v19 - 2) = *v18;
          *(v19 - 1) = v18[1];
          *int v19 = v18[2];
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          unsigned char *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      unsigned char *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    unsigned char *v11 = *v10;
    v11[1] = v10[1];
    _OWORD v11[2] = v10[2];
    _DWORD v11[3] = v10[3];
  }
}

void sub_2158A7430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    long long v10 = *(_WORD **)a2;
    long long v11 = *(_WORD **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          _WORD *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        _WORD *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        _DWORD v11[3] = v10[3];
        return;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *int v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      _WORD *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

__n128 sub_2158A75A8(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6614E8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A763C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6614E8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6640E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7718(a2 + 8, a3 + 8);
}

uint64_t sub_2158A7718(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215852DD0((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    int v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A356C((uint64_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A7848((uint64_t)&v18, a2, a1);
    return a1;
  }
}

void sub_2158A7848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(_WORD **)(a2 + 64);
    long long v11 = *(_WORD **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          _WORD *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        _WORD *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        _DWORD v11[3] = v10[3];
        return;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *int v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      _WORD *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

double sub_2158A79C0(void *a1)
{
  uint64_t v1 = (_DWORD *)*a1;
  uint64_t v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) != 1 || *(_DWORD *)(v2 + 20) != 1)
  {
    char v11 = 0;
    if (v1[2]) {
      BOOL v4 = v1[3] == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4 && v1[4] != 0)
    {
      int v12 = &v11;
      *(void *)&double result = sub_2158A7A8C((uint64_t)&v12, (uint64_t)v1, v2);
    }
    return result;
  }
  int v7 = v1[6];
  if (v7 == *(_DWORD *)(v2 + 24))
  {
    unsigned int v8 = v1[2];
    if (v7 == v8)
    {
      return sub_2158A3D4C(a1);
    }
  }
  else
  {
    unsigned int v8 = v1[2];
  }
  int v12 = (char *)v8;
  if (v8) {
    BOOL v9 = v1[3] == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9 && v1[4] != 0) {
    return sub_2158A4184((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  return result;
}

__int16 sub_2158A7A8C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    unsigned int v8 = *(_WORD **)a2;
    BOOL v9 = *(_WORD **)a3;
    uint64_t v10 = 2 * *(unsigned int *)(a2 + 24);
    uint64_t v11 = 2 * *(unsigned int *)(a3 + 24);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        int v15 = 0;
        uint64_t v16 = v9 + 2;
        char v17 = v8 + 2;
        do
        {
          int v18 = v17;
          int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *int v19 = *v18;
            v19[1] = v18[1];
            int v19 = (_WORD *)((char *)v19 + v11);
            int v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        uint64_t v21 = 2 * v14;
        uint64_t v22 = 2 * v13;
        do
        {
          *BOOL v9 = *v8;
          v9[1] = v8[1];
          _OWORD v9[2] = v8[2];
          void v9[3] = v8[3];
          unsigned int v8 = (_WORD *)((char *)v8 + v21);
          BOOL v9 = (_WORD *)((char *)v9 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *BOOL v9 = *v8;
      v9[1] = v8[1];
      _OWORD v9[2] = v8[2];
      void v9[3] = v8[3];
      unsigned int v8 = (_WORD *)((char *)v8 + v10);
      BOOL v9 = (_WORD *)((char *)v9 + v11);
    }
    *BOOL v9 = *v8;
    v9[1] = v8[1];
    _OWORD v9[2] = v8[2];
    __int16 result = v8[3];
    void v9[3] = result;
  }
  return result;
}

__n128 sub_2158A7BF4(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661508[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A7C88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661508[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664160;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7D64(a2 + 8, (long long *)(a3 + 8));
}

uint64_t sub_2158A7D64(uint64_t a1, long long *a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)((char *)a2 + 4) != *(void *)(a1 + 4)
    || *((void *)a2 + 2) != *(void *)(a1 + 16))
  {
    long long v3 = a2[1];
    long long v11 = *a2;
    long long v12 = v3;
    long long v13 = a2[2];
    uint64_t v14 = *((void *)a2 + 6);
    sub_215854024((uint64_t)v15, (uint64_t)a2 + 56);
    long long v4 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v13;
    *(void *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 80) = v16;
    *(void *)(a1 + 96) = v17;
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      if (*(_DWORD *)(a1 + 88)) {
        BOOL v6 = *(_DWORD *)(a1 + 84) == 0;
      }
      else {
        BOOL v6 = 1;
      }
      if (v6 || *(_DWORD *)(a1 + 80) == 0) {
        int v8 = 0;
      }
      else {
        int v8 = *(_DWORD *)(a1 + 88);
      }
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
        uint64_t v5 = *(void **)(a1 + 64);
        *(void *)(a1 + 56) = v15[0];
        if (!v5) {
          goto LABEL_20;
        }
      }
      else
      {
        *(void *)(a1 + 56) = v15[0];
      }
      free(v5);
    }
    else
    {
      *(void *)(a1 + 56) = v15[0];
    }
LABEL_20:
    uint64_t v9 = v15[2];
    *(void *)(a1 + 64) = v15[1];
    *(void *)(a1 + 72) = v9;
    return a1;
  }
  *(void *)&long long v11 = a2;
  *((void *)&v11 + 1) = a1;
  sub_2158A7F98((unsigned int **)&v11);
  return a1;
}

void sub_2158A7ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158A7EE8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    BOOL v3 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
    BOOL v4 = v3 || *(_DWORD *)(a1 + 80) == 0;
    int v5 = v4 ? 0 : *(_DWORD *)(a1 + 88);
    if (v5 * (*(_DWORD *)(a1 + 100) >> 1) != -1) {
      goto LABEL_14;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void **)(a1 + 64);
    if (v2) {
LABEL_14:
    }
      free(v2);
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

double sub_2158A7F98(unsigned int **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)a1[1];
  if ((*a1)[3] != 1 || *(_DWORD *)(v2 + 12) != 1)
  {
    char v11 = 0;
    if (*v1) {
      BOOL v4 = v1[1] == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (!v4 && v1[2] != 0)
    {
      long long v12 = &v11;
      *(void *)&double result = sub_2158A8064((uint64_t)&v12, (uint64_t)v1, v2);
    }
    return result;
  }
  unsigned int v7 = v1[4];
  if (v7 == *(_DWORD *)(v2 + 16))
  {
    unsigned int v8 = *v1;
    if (v7 == *v1)
    {
      return sub_2158A4A18(a1);
    }
  }
  else
  {
    unsigned int v8 = *v1;
  }
  long long v12 = (char *)v8;
  if (v8) {
    BOOL v9 = v1[1] == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9 && v1[2] != 0) {
    return sub_2158A4BF8((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  return result;
}

__int16 sub_2158A8064@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    unsigned int v8 = *(_WORD **)(a2 + 64);
    BOOL v9 = *(_WORD **)(a3 + 64);
    uint64_t v10 = 2 * *(unsigned int *)(a2 + 16);
    uint64_t v11 = 2 * *(unsigned int *)(a3 + 16);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        int v15 = 0;
        long long v16 = v9 + 2;
        uint64_t v17 = v8 + 2;
        do
        {
          int v18 = v17;
          int v19 = v16;
          int v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *int v19 = *v18;
            v19[1] = v18[1];
            int v19 = (_WORD *)((char *)v19 + v11);
            int v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        uint64_t v21 = 2 * v14;
        uint64_t v22 = 2 * v13;
        do
        {
          *BOOL v9 = *v8;
          v9[1] = v8[1];
          _OWORD v9[2] = v8[2];
          void v9[3] = v8[3];
          unsigned int v8 = (_WORD *)((char *)v8 + v21);
          BOOL v9 = (_WORD *)((char *)v9 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *BOOL v9 = *v8;
      v9[1] = v8[1];
      _OWORD v9[2] = v8[2];
      void v9[3] = v8[3];
      unsigned int v8 = (_WORD *)((char *)v8 + v10);
      BOOL v9 = (_WORD *)((char *)v9 + v11);
    }
    *BOOL v9 = *v8;
    v9[1] = v8[1];
    _OWORD v9[2] = v8[2];
    __int16 result = v8[3];
    void v9[3] = result;
  }
  return result;
}

float sub_2158A81CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    uint64_t v10 = *(float **)a2;
    uint64_t v11 = *(float **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          float *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        float *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        float result = v10[3];
        _DWORD v11[3] = result;
        return result;
      }
      int v15 = 0;
      long long v16 = v11 + 2;
      uint64_t v17 = v10 + 2;
      do
      {
        int v18 = v17;
        int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *int v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      float *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

__n128 sub_2158A833C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661528[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A83D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661528[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6641E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A84AC(a2 + 8, a3 + 8);
}

uint64_t sub_2158A84AC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 64)
    || *(void *)(a2 + 4) != *(void *)(a1 + 4)
    || *(void *)(a2 + 16) != *(void *)(a1 + 16))
  {
    long long v3 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)a2;
    long long v11 = v3;
    long long v12 = *(_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_215854BD4((uint64_t)v14, a2 + 56);
    long long v4 = v11;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 80) = v15;
    *(void *)(a1 + 96) = v16;
    uint64_t v5 = v14[0];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v5;
    BOOL v6 = *(void **)(a1 + 64);
    if (v6) {
      free(v6);
    }
    uint64_t v7 = v14[2];
    *(void *)(a1 + 64) = v14[1];
    *(void *)(a1 + 72) = v7;
    return a1;
  }
  *(void *)&long long v10 = a2;
  *((void *)&v10 + 1) = a1;
  if (*(_DWORD *)(a2 + 12) == 1 && *(_DWORD *)(a1 + 12) == 1)
  {
    sub_2158A51A8((uint64_t *)&v10);
    return a1;
  }
  else
  {
    char v17 = 0;
    if (!*(_DWORD *)a2 || !*(_DWORD *)(a2 + 4) || !*(_DWORD *)(a2 + 8)) {
      return a1;
    }
    int v18 = &v17;
    sub_2158A85DC((uint64_t)&v18, a2, a1);
    return a1;
  }
}

float sub_2158A85DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(unsigned int *)(a3 + 16);
    long long v10 = *(float **)(a2 + 64);
    long long v11 = *(float **)(a3 + 64);
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 20);
      uint64_t v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          float *v11 = *v10;
          v11[1] = v10[1];
          _OWORD v11[2] = v10[2];
          _DWORD v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        float *v11 = *v10;
        v11[1] = v10[1];
        _OWORD v11[2] = v10[2];
        float result = v10[3];
        _DWORD v11[3] = result;
        return result;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      char v17 = v10 + 2;
      do
      {
        int v18 = v17;
        int v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *int v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *int v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      float *v11 = *v10;
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      _DWORD v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

__n128 sub_2158A874C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  int v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661548[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *int v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A87E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661548[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664260;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5A6C(a2 + 8, a3 + 8);
}

__n128 sub_2158A88BC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661568[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A8950(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661568[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6642E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5F84(a2 + 8, a3 + 8);
}

__n128 sub_2158A8A2C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661588[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A8AC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661588[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664360;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6580(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158A8B9C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6615A8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A8C30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6615A8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6643E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6C78(a2 + 8, a3 + 8);
}

__n128 sub_2158A8D0C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6615C8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A8DA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6615C8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664460;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5A6C(a2 + 8, a3 + 8);
}

__n128 sub_2158A8E7C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6615E8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A8F10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6615E8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6644E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A5F84(a2 + 8, a3 + 8);
}

__n128 sub_2158A8FEC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661608[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9080(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661608[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664560;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6580(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158A915C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661628[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A91F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661628[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6645E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A6C78(a2 + 8, a3 + 8);
}

__n128 sub_2158A92CC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661648[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9360(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661648[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664660;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A71B0(a2 + 8, a3 + 8);
}

__n128 sub_2158A943C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661668[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A94D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661668[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6646E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7718(a2 + 8, a3 + 8);
}

__n128 sub_2158A95AC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661688[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9640(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661688[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664760;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7D64(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158A971C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6616A8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A97B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6616A8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6647E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A84AC(a2 + 8, a3 + 8);
}

__n128 sub_2158A988C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6616C8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9920(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6616C8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664860;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A71B0(a2 + 8, a3 + 8);
}

__n128 sub_2158A99FC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6616E8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9A90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6616E8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6648E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7718(a2 + 8, a3 + 8);
}

__n128 sub_2158A9B6C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661708[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9C00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661708[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664960;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7D64(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158A9CDC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661728[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9D70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661728[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C6649E0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A84AC(a2 + 8, a3 + 8);
}

__n128 sub_2158A9E4C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661748[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158A9EE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661748[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664A60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A71B0(a2 + 8, a3 + 8);
}

__n128 sub_2158A9FBC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661768[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA050(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661768[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664AE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7718(a2 + 8, a3 + 8);
}

__n128 sub_2158AA12C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661788[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA1C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661788[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664B60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7D64(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158AA29C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6617A8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA330(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6617A8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664BE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A84AC(a2 + 8, a3 + 8);
}

__n128 sub_2158AA40C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6617C8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA4A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6617C8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664C60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215851B70(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A71B0(a2 + 8, a3 + 8);
}

__n128 sub_2158AA57C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C6617E8[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA610(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C6617E8[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664CE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215852DD0(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7718(a2 + 8, a3 + 8);
}

__n128 sub_2158AA6EC(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661808[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA780(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661808[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664D60;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854024(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A7D64(a2 + 8, (long long *)(a3 + 8));
}

__n128 sub_2158AA85C(__n128 **a1, __n128 *a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*a1)[7].n128_u32[0];
  if (v5 != -1)
  {
    if (!v5)
    {
      __n128 result = *a3;
      a2[1].n128_u64[0] = a3[1].n128_u64[0];
      *a2 = result;
      return result;
    }
    ((void (*)(char *, __n128 *))off_26C661828[v5])(&v7, v4);
  }
  v4[7].n128_u32[0] = -1;
  __n128 result = *a3;
  v4[1].n128_u64[0] = a3[1].n128_u64[0];
  *uint64_t v4 = result;
  v4[7].n128_u32[0] = 0;
  return result;
}

uint64_t sub_2158AA8F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 112);
  if (v5 == -1) {
    goto LABEL_7;
  }
  if (v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C661828[v5])(&v10, v4);
LABEL_7:
    *(_DWORD *)(v4 + 112) = -1;
    *(void *)uint64_t v4 = &unk_26C664DE0;
    long long v7 = *(_OWORD *)(a3 + 8);
    long long v8 = *(_OWORD *)(a3 + 24);
    long long v9 = *(_OWORD *)(a3 + 40);
    *(void *)(v4 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 8) = v7;
    uint64_t result = sub_215854BD4(v4 + 64, a3 + 64);
    *(_DWORD *)(v4 + 112) = 1;
    return result;
  }

  return sub_2158A84AC(a2 + 8, a3 + 8);
}

void sub_2158AA9CC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 <= 3)
  {
    *(void *)(a1 + 56) = a2;
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  sub_2157CFEA8((uint64_t)v6, "invalid value for VZFileExportBehavior");
  char v14 = 1;
  sub_21573FCF8(0xAu, (long long *)v6, (uint64_t)&v15);
  *(_OWORD *)a3 = v15;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v25)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v14) {
      return;
    }
LABEL_15:
    if (!v13) {
      goto LABEL_18;
    }
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_18:
        if (!v8) {
          return;
        }
        goto LABEL_19;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_18;
    }
    operator delete(v9);
    if (!v8) {
      return;
    }
LABEL_19:
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    return;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v4 = v18;
  if (v18)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v17;
    uint64_t v17 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v24)
  {
    uint64_t v5 = v21;
    *(void *)(a3 + 64) = v20;
    *(_OWORD *)(a3 + 48) = v19;
    long long v19 = 0uLL;
    *(void *)(a3 + 72) = v5;
    *(_OWORD *)(a3 + 80) = v22;
    *(void *)(a3 + 96) = v23;
    uint64_t v20 = 0;
    long long v22 = 0uLL;
    uint64_t v23 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v4 && SHIBYTE(v17) < 0) {
    operator delete((void *)__p);
  }
  if (v14) {
    goto LABEL_15;
  }
}

void sub_2158AAB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158AAB90(uint64_t result, uint64_t a2)
{
  *(_OWORD *)uint64_t result = *(_OWORD *)a2;
  *(unsigned char *)(result + 16) = 0;
  *(unsigned char *)(result + 112) = 0;
  if (*(unsigned char *)(a2 + 112))
  {
    *(unsigned char *)(result + 40) = 0;
    if (*(unsigned char *)(a2 + 40))
    {
      long long v2 = *(_OWORD *)(a2 + 16);
      *(void *)(result + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(result + 16) = v2;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      *(unsigned char *)(result + 40) = 1;
    }
    *(unsigned char *)(result + 48) = 0;
    *(unsigned char *)(result + 104) = 0;
    if (*(unsigned char *)(a2 + 104))
    {
      long long v3 = *(_OWORD *)(a2 + 48);
      *(void *)(result + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(result + 48) = v3;
      *(void *)(a2 + 56) = 0;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 48) = 0;
      *(void *)(result + 72) = *(void *)(a2 + 72);
      long long v4 = *(_OWORD *)(a2 + 80);
      *(void *)(result + 96) = *(void *)(a2 + 96);
      *(_OWORD *)(result + 80) = v4;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 80) = 0;
      *(unsigned char *)(result + 104) = 1;
    }
    *(unsigned char *)(result + 112) = 1;
  }
  *(unsigned char *)(result + 120) = 0;
  return result;
}

void sub_2158AAC40(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = (std::string::size_type *)a1;
  v66[0] = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 24))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 24) = 1;
  }
  sub_215947928(a2, &v46);
  v57[0] = a3;
  int v58 = 0;
  char v59 = 1;
  std::string::size_type v8 = (std::string::size_type)(v5 + 2);
  std::string::size_type v7 = v5[2];
  std::string::size_type v9 = v5[1];
  if (v9 < v7)
  {
    *(void *)std::string::size_type v9 = off_26C678AE8;
    sub_2158B0D70(v9 + 16, (uint64_t)&__p);
    *(unsigned char *)(v9 + 768) = 0;
    *(unsigned char *)(v9 + 808) = 0;
    if (v59)
    {
      *(_DWORD *)(v9 + 800) = -1;
      int v10 = v58;
      if (v58 != -1)
      {
        ((void (*)(const char **, std::string::size_type, void *))off_26C665A50[v58])(&v60, v9 + 768, v57);
        *(_DWORD *)(v9 + 800) = v10;
      }
      *(unsigned char *)(v9 + 808) = 1;
    }
    long long v11 = (std::string *)(v9 + 816);
    v5[1] = v9 + 816;
    goto LABEL_41;
  }
  unint64_t v12 = 0xFAFAFAFAFAFAFAFBLL * ((uint64_t)(v9 - *v5) >> 4);
  if (v12 + 1 > 0x50505050505050) {
    sub_215738AC0();
  }
  unint64_t v13 = 0xFAFAFAFAFAFAFAFBLL * ((uint64_t)(v7 - *v5) >> 4);
  uint64_t v14 = 2 * v13;
  if (2 * v13 <= v12 + 1) {
    uint64_t v14 = v12 + 1;
  }
  if (v13 >= 0x28282828282828) {
    unint64_t v15 = 0x50505050505050;
  }
  else {
    unint64_t v15 = v14;
  }
  uint64_t v64 = (const char *)(v5 + 2);
  if (v15)
  {
    if (v15 > 0x50505050505050) {
      sub_215738AD8();
    }
    uint64_t v16 = (const char *)operator new(816 * v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = (std::string *)&v16[816 * v12];
  uint64_t v60 = v16;
  std::string::size_type v61 = (std::string::size_type)v17;
  uint64_t v62 = v17;
  uint64_t v63 = &v16[816 * v15];
  v17->__r_.__value_.__r.__words[0] = (std::string::size_type)off_26C678AE8;
  sub_2158B0D70((uint64_t)&v17->__r_.__value_.__r.__words[2], (uint64_t)&__p);
  int v32 = v5;
  unsigned __int8 v18 = &v16[816 * v12];
  *((unsigned char *)v18 + 768) = 0;
  *((unsigned char *)v18 + 808) = 0;
  if (v59)
  {
    long long v19 = &v16[816 * v12];
    *((_DWORD *)v19 + 200) = -1;
    int v20 = v58;
    if (v58 != -1)
    {
      ((void (*)(std::string *, const char *, void *))off_26C665A50[v58])(&v42, v18 + 768, v57);
      *((_DWORD *)v19 + 200) = v20;
    }
    *((unsigned char *)v18 + 808) = 1;
  }
  std::string::size_type v21 = v61;
  long long v11 = v62 + 34;
  v62 += 34;
  long long v22 = (char *)*v32;
  uint64_t v23 = (char *)v32[1];
  v33.__r_.__value_.__r.__words[0] = v61;
  v33.__r_.__value_.__l.__size_ = v61;
  long long v44 = *(_OWORD *)&v33.__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[0] = v8;
  v42.__r_.__value_.__l.__size_ = (std::string::size_type)&v44;
  v42.__r_.__value_.__r.__words[2] = (std::string::size_type)&v33;
  char v43 = 0;
  if (v23 == v22)
  {
    char v25 = v23;
    uint64_t v5 = v32;
  }
  else
  {
    do
    {
      *(void *)(v21 - 816) = off_26C678AE8;
      sub_21577A6C8(v21 - 800, (uint64_t)(v23 - 800));
      *(unsigned char *)(v21 - 48) = 0;
      *(unsigned char *)(v21 - 8) = 0;
      if (*(v23 - 8))
      {
        *(unsigned char *)(v21 - 48) = 0;
        *(_DWORD *)(v21 - 16) = -1;
        uint64_t v24 = *((unsigned int *)v23 - 4);
        if (v24 != -1)
        {
          ((void (*)(char *, std::string::size_type, char *))off_26C6659F0[v24])(v45, v21 - 48, v23 - 48);
          *(_DWORD *)(v21 - 16) = v24;
        }
        *(unsigned char *)(v21 - 8) = 1;
      }
      v23 -= 816;
      std::string::size_type v21 = v33.__r_.__value_.__l.__size_ - 816;
      v33.__r_.__value_.__l.__size_ -= 816;
    }
    while (v23 != v22);
    uint64_t v5 = v32;
    char v25 = (const char *)*v32;
    uint64_t v23 = (char *)v32[1];
  }
  *uint64_t v5 = v21;
  v5[1] = (std::string::size_type)v11;
  uint64_t v26 = (const char *)v5[2];
  void v5[2] = (std::string::size_type)v63;
  uint64_t v63 = v26;
  uint64_t v60 = v25;
  std::string::size_type v61 = (std::string::size_type)v25;
  if (v23 == v25)
  {
    if (!v23) {
      goto LABEL_41;
    }
LABEL_40:
    operator delete(v23);
    goto LABEL_41;
  }
  do
  {
    uint64_t v62 = (std::string *)(v23 - 816);
    if (*(v23 - 8))
    {
      uint64_t v27 = *((unsigned int *)v23 - 4);
      if (v27 != -1) {
        ((void (*)(std::string *, char *))off_26C6659E0[v27])(&v42, v23 - 48);
      }
      *((_DWORD *)v23 - 4) = -1;
    }
    *((void *)v23 - 102) = off_26C678AE8;
    sub_215948050((uint64_t)(v23 - 800));
    uint64_t v23 = (char *)v62;
  }
  while (v62 != (std::string *)v25);
  uint64_t v23 = (char *)v60;
  if (v60) {
    goto LABEL_40;
  }
LABEL_41:
  v5[1] = (std::string::size_type)v11;
  if (v59)
  {
    if (v58 != -1) {
      ((void (*)(const char **, void *))off_26C6659E0[v58])(&v60, v57);
    }
    int v58 = -1;
  }
  *(void *)&long long v46 = off_26C678AE8;
  sub_215948050((uint64_t)&__p);
  if (a3 < 0x200)
  {
    *(unsigned char *)(a4 + 120) = 1;
    return;
  }
  *(void *)&long long v44 = a3 & 0xFFFFFFFFFFFFFE00;
  sub_215E0C06C(8, (uint64_t)&v44, (uint64_t)"0x", 2, &v33);
  uint64_t v60 = "VZStoragePreference contains invalid flags ";
  std::string::size_type v61 = 43;
  std::string::size_type size = HIBYTE(v33.__r_.__value_.__r.__words[2]);
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v29 = &v33;
  }
  else {
    uint64_t v29 = (std::string *)v33.__r_.__value_.__r.__words[0];
  }
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v33.__r_.__value_.__l.__size_;
  }
  uint64_t v62 = v29;
  uint64_t v63 = (const char *)size;
  uint64_t v64 = " which will be ignored";
  uint64_t v65 = 22;
  sub_2157430CC((uint64_t)&v60, (uint64_t)v66, 0, 0, &v42);
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v42.__r_.__value_.__l.__data_, v42.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v42;
  }
  char v35 = 1;
  LOBYTE(v36) = 0;
  char v40 = 0;
  char v41 = 1;
  sub_21573FCF8(0xAu, (long long *)&__dst, (uint64_t)&v46);
  *(_OWORD *)a4 = v46;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (!v56)
  {
    *(unsigned char *)(a4 + 120) = 0;
    if (!v41) {
      goto LABEL_72;
    }
LABEL_66:
    if (!v40) {
      goto LABEL_69;
    }
    if (v39 < 0)
    {
      operator delete(v38);
      if ((v37 & 0x80000000) == 0)
      {
LABEL_69:
        if (!v35) {
          goto LABEL_72;
        }
LABEL_70:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        goto LABEL_72;
      }
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_69;
    }
    operator delete(v36);
    if (!v35) {
      goto LABEL_72;
    }
    goto LABEL_70;
  }
  *(unsigned char *)(a4 + 40) = 0;
  int v30 = v49;
  if (v49)
  {
    *(_OWORD *)(a4 + 16) = __p;
    *(void *)(a4 + 32) = v48;
    uint64_t v48 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a4 + 40) = 1;
  }
  *(unsigned char *)(a4 + 48) = 0;
  *(unsigned char *)(a4 + 104) = 0;
  if (v55)
  {
    uint64_t v31 = v52;
    *(void *)(a4 + 64) = v51;
    *(_OWORD *)(a4 + 48) = v50;
    long long v50 = 0uLL;
    *(void *)(a4 + 72) = v31;
    *(_OWORD *)(a4 + 80) = v53;
    *(void *)(a4 + 96) = v54;
    uint64_t v51 = 0;
    long long v53 = 0uLL;
    uint64_t v54 = 0;
    *(unsigned char *)(a4 + 104) = 1;
  }
  *(unsigned char *)(a4 + 112) = 1;
  *(unsigned char *)(a4 + 120) = 0;
  if (v30 && SHIBYTE(v48) < 0) {
    operator delete((void *)__p);
  }
  if (v41) {
    goto LABEL_66;
  }
LABEL_72:
  if ((SHIBYTE(v42.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_76:
    operator delete(v33.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v42.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_76;
  }
}

void sub_2158AB374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48)
{
  if (a39 < 0) {
    operator delete(__p);
  }
  if (a19 < 0)
  {
    operator delete(a14);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158AB490(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 808))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 800);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C6659E0[v2])(&v4, a1 + 768);
    }
    *(_DWORD *)(a1 + 800) = -1;
  }
  *(void *)a1 = off_26C678AE8;
  sub_215948050(a1 + 16);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2158AB518(void *a1, uint64_t a2)
{
  sub_215731D94(a1, (uint64_t)"{", 1);
  sub_2158B3BB0((uint64_t)&v4, &v3, a2);
  sub_215731D94(v3, (uint64_t)",", 1);
  if (*(unsigned char *)(a2 + 56)) {
    sub_2158B3CD4((uint64_t)&v5, &v3, (void *)(a2 + 32));
  }
  else {
    sub_215731D94(v3, (uint64_t)"nullopt", 7);
  }
  sub_215731D94(v3, (uint64_t)"}", 1);
}

void sub_2158AB5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  int v10 = sub_215CF5EF8();
  if (a5) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = (uint64_t)v10;
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)a1;
    uint64_t v27 = *(void *)(a1 + 16);
  }
  *(void *)&long long v20 = 1000;
  BYTE8(v20) = 1;
  LOBYTE(v21) = 1;
  *((void *)&v21 + 1) = 0;
  if (*(unsigned char *)(a2 + 64))
  {
    sub_21577A1A0((uint64_t)&__p, a2);
    long long v12 = *(_OWORD *)(a2 + 48);
    long long v24 = *(_OWORD *)(a2 + 32);
    long long v25 = v12;
    if (*(unsigned char *)(a3 + 32)) {
      goto LABEL_9;
    }
  }
  else
  {
    LOBYTE(__p) = 0;
    char v23 = 0;
    long long v24 = v20;
    long long v25 = v21;
    if (*(unsigned char *)(a3 + 32))
    {
LABEL_9:
      uint64_t v13 = *(void *)(a3 + 24);
      if (v13)
      {
        if (v13 != a3)
        {
          uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 16))(v13);
          int v32 = v14;
          if (!v14) {
            goto LABEL_16;
          }
LABEL_18:
          if (v14 == v31)
          {
            char v35 = &v34;
            (*(void (**)(void *, long long *))(v31[0] + 24))(v31, &v34);
          }
          else
          {
            char v35 = (long long *)v14;
            int v32 = 0;
          }
          goto LABEL_21;
        }
        int v32 = v31;
        (*(void (**)(uint64_t, void *))(*(void *)a3 + 24))(a3, v31);
        uint64_t v14 = v32;
        if (v32) {
          goto LABEL_18;
        }
      }
      else
      {
        int v32 = 0;
      }
LABEL_16:
      char v35 = 0;
LABEL_21:
      uint64_t v29 = 0;
      unint64_t v15 = operator new(0x28uLL);
      uint64_t v16 = v15;
      *unint64_t v15 = &unk_26C665A70;
      uint64_t v17 = v15 + 1;
      if (v35)
      {
        if (v35 == &v34)
        {
          v15[4] = v17;
          (*(void (**)(long long *))(v34 + 24))(&v34);
        }
        else
        {
          v15[4] = v35;
          char v35 = 0;
        }
      }
      else
      {
        v15[4] = 0;
      }
      uint64_t v29 = v16;
      if (v35 == &v34)
      {
        (*(void (**)(long long *, void *))(v34 + 32))(&v34, v17);
        char v30 = 1;
        unsigned __int8 v18 = v32;
        if (v32 != v31)
        {
LABEL_30:
          if (v18) {
            (*(void (**)(void *, void *))(*v18 + 40))(v18, v17);
          }
LABEL_34:
          long long v19 = operator new(0x30uLL);
          v19[1] = 0;
          void v19[2] = 0;
          *long long v19 = &unk_26C665C98;
          sub_21577A1A0((uint64_t)&v34, (uint64_t)&__p);
          long long v36 = v24;
          long long v37 = v25;
          LOBYTE(v31[0]) = 0;
          char v33 = 0;
          if (v30)
          {
            if (v29)
            {
              if (v29 == v28)
              {
                int v32 = v31;
                (*(void (**)(void *, void *))(v28[0] + 24))(v28, v31);
              }
              else
              {
                int v32 = v29;
                uint64_t v29 = 0;
              }
            }
            else
            {
              int v32 = 0;
            }
            char v33 = 1;
          }
          sub_215AC09FC(v19 + 3, a1, (uint64_t)&v34, (uint64_t)v31, v11);
        }
      }
      else
      {
        if (v35) {
          (*(void (**)(void))(*(void *)v35 + 40))();
        }
        char v30 = 1;
        unsigned __int8 v18 = v32;
        if (v32 != v31) {
          goto LABEL_30;
        }
      }
      (*(void (**)(void *, void *))(v31[0] + 32))(v31, v17);
      goto LABEL_34;
    }
  }
  LOBYTE(v28[0]) = 0;
  char v30 = 0;
  goto LABEL_34;
}

void sub_2158ABDF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,char a36)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

uint64_t sub_2158ABF1C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

char **sub_2158ABFB4(char **a1)
{
  if (*((unsigned char *)a1 + 24))
  {
    uint64_t v2 = *a1;
    if (*a1)
    {
      long long v3 = a1[1];
      char v4 = *a1;
      if (v3 != v2)
      {
        uint64_t v5 = 0;
        do
        {
          BOOL v6 = &v3[v5];
          if (v3[v5 - 8])
          {
            uint64_t v7 = *((unsigned int *)v6 - 4);
            if (v7 != -1) {
              ((void (*)(char *, char *))off_26C6659E0[v7])(&v9, v6 - 48);
            }
            *((_DWORD *)v6 - 4) = -1;
          }
          *((void *)v6 - 102) = off_26C678AE8;
          sub_215948050((uint64_t)(v6 - 800));
          v5 -= 816;
        }
        while (&v3[v5] != v2);
        char v4 = *a1;
      }
      a1[1] = v2;
      operator delete(v4);
    }
  }
  return a1;
}

void sub_2158AC0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  char v16 = 1;
  sub_2158AE3B0(v21);
  *(_OWORD *)char v23 = *(_OWORD *)v21;
  uint64_t v24 = v22;
  uint64_t v22 = 0;
  v21[1] = 0;
  v21[0] = 0;
  char v25 = 1;
  *(_OWORD *)long long v19 = 0u;
  *(_OWORD *)long long v20 = 0u;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)unsigned __int8 v18 = 0u;
  if (*(unsigned char *)(a2 + 64))
  {
    sub_21577C7D8((uint64_t)v12, a2);
    if (*(unsigned char *)(a3 + 32)) {
      goto LABEL_3;
    }
  }
  else
  {
    LOBYTE(v12[0]) = 0;
    char v13 = 0;
    LOBYTE(__p) = 0;
    char v15 = 0;
    if (*(unsigned char *)(a3 + 32))
    {
LABEL_3:
      uint64_t v6 = *(void *)(a3 + 24);
      if (v6)
      {
        if (v6 != a3)
        {
          uint64_t v7 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6);
          int v32 = v7;
          if (!v7) {
            goto LABEL_10;
          }
LABEL_12:
          if (v7 == &v31)
          {
            uint64_t v27 = &v26;
            (*(void (**)(uint64_t *, long long *))(v31 + 24))(&v31, &v26);
          }
          else
          {
            uint64_t v27 = (long long *)v7;
            int v32 = 0;
          }
          goto LABEL_15;
        }
        int v32 = &v31;
        (*(void (**)(uint64_t, uint64_t *))(*(void *)a3 + 24))(a3, &v31);
        uint64_t v7 = v32;
        if (v32) {
          goto LABEL_12;
        }
      }
      else
      {
        int v32 = 0;
      }
LABEL_10:
      uint64_t v27 = 0;
LABEL_15:
      uint64_t v29 = 0;
      std::string::size_type v8 = operator new(0x28uLL);
      char v9 = v8;
      *std::string::size_type v8 = &unk_26C665CE8;
      int v10 = v8 + 1;
      if (v27)
      {
        if (v27 == &v26)
        {
          uint64_t v8[4] = v10;
          (*(void (**)(long long *))(v26 + 24))(&v26);
        }
        else
        {
          uint64_t v8[4] = v27;
          uint64_t v27 = 0;
        }
      }
      else
      {
        uint64_t v8[4] = 0;
      }
      uint64_t v29 = v9;
      if (v27 == &v26)
      {
        (*(void (**)(long long *, void *))(v26 + 32))(&v26, v10);
        char v30 = 1;
        uint64_t v11 = v32;
        if (v32 != &v31)
        {
LABEL_24:
          if (v11) {
            (*(void (**)(uint64_t *, void *))(*v11 + 40))(v11, v10);
          }
LABEL_28:
          sub_215ACAF3C(a1, (uint64_t)v23, (uint64_t)v12, (uint64_t)v28);
        }
      }
      else
      {
        if (v27) {
          (*(void (**)(void))(*(void *)v27 + 40))();
        }
        char v30 = 1;
        uint64_t v11 = v32;
        if (v32 != &v31) {
          goto LABEL_24;
        }
      }
      (*(void (**)(uint64_t *, void *))(v31 + 32))(&v31, v10);
      goto LABEL_28;
    }
  }
  LOBYTE(v28[0]) = 0;
  char v30 = 0;
  goto LABEL_28;
}

void sub_2158AD000(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t sub_2158AD528(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    if (*(void *)a1)
    {
      sub_21577997C((uint64_t *)a1);
      uint64_t v2 = (void **)a1;
LABEL_11:
      operator delete(*v2);
      return a1;
    }
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
LABEL_8:
      if (!*(unsigned char *)(a1 + 40)) {
        return a1;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 48));
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if (*(char *)(a1 + 39) < 0)
  {
    uint64_t v2 = (void **)(a1 + 16);
    goto LABEL_11;
  }
  return a1;
}

void sub_2158AD5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  long long v19 = 0u;
  *(_OWORD *)long long __p = 0u;
  long long v17 = 0u;
  *(_OWORD *)unsigned __int8 v18 = 0u;
  if (*(unsigned char *)(a2 + 64))
  {
    sub_21577C7D8((uint64_t)&v21, a2);
  }
  else
  {
    LOBYTE(v21) = 0;
    char v22 = 0;
    LOBYTE(v23) = 0;
    char v24 = 0;
  }
  sub_2158AE3B0(v11);
  *(_OWORD *)char v13 = *(_OWORD *)v11;
  uint64_t v14 = v12;
  v11[1] = 0;
  uint64_t v12 = 0;
  v11[0] = 0;
  char v15 = 1;
  sub_21577C7D8((uint64_t)&v10, (uint64_t)&v21);
  if (!*(unsigned char *)(a3 + 32))
  {
    LOBYTE(v27) = 0;
    char v29 = 0;
    goto LABEL_29;
  }
  uint64_t v4 = *(void *)(a3 + 24);
  if (v4)
  {
    if (v4 != a3)
    {
      uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 16))(v4);
      uint64_t v31 = v5;
      if (!v5) {
        goto LABEL_11;
      }
LABEL_13:
      if (v5 == v30)
      {
        p_dst = &__dst;
        (*(void (**)(void *, long long *))(v30[0] + 24))(v30, &__dst);
      }
      else
      {
        p_dst = (long long *)v5;
        uint64_t v31 = 0;
      }
      goto LABEL_16;
    }
    uint64_t v31 = v30;
    (*(void (**)(uint64_t, void *))(*(void *)a3 + 24))(a3, v30);
    uint64_t v5 = v31;
    if (v31) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v31 = 0;
  }
LABEL_11:
  p_dst = 0;
LABEL_16:
  uint64_t v28 = 0;
  uint64_t v6 = operator new(0x28uLL);
  uint64_t v7 = v6;
  *uint64_t v6 = &unk_26C665BF8;
  std::string::size_type v8 = v6 + 1;
  if (p_dst)
  {
    if (p_dst == &__dst)
    {
      v6[4] = v8;
      (*(void (**)(long long *))(__dst + 24))(&__dst);
    }
    else
    {
      v6[4] = p_dst;
      p_dst = 0;
    }
  }
  else
  {
    v6[4] = 0;
  }
  uint64_t v28 = v7;
  if (p_dst == &__dst)
  {
    (*(void (**)(long long *, void *))(__dst + 32))(&__dst, v8);
    char v29 = 1;
    char v9 = v31;
    if (v31 != v30)
    {
LABEL_25:
      if (v9) {
        (*(void (**)(void *, void *))(*v9 + 40))(v9, v8);
      }
LABEL_29:
      char v16 = &unk_26C677B98;
      sub_215AC9F30();
    }
  }
  else
  {
    if (p_dst) {
      (*(void (**)(void))(*(void *)p_dst + 40))();
    }
    char v29 = 1;
    char v9 = v31;
    if (v31 != v30) {
      goto LABEL_25;
    }
  }
  (*(void (**)(void *, void *))(v30[0] + 32))(v30, v8);
  goto LABEL_29;
}

void sub_2158AE144(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

void sub_2158AE3A0(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2158AE158);
  }
  JUMPOUT(0x2158AE278);
}

void sub_2158AE3B0(void *a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v2 = operator new(0x28uLL);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = &unk_26C665BA8;
  v2[3] = &unk_26C67A2B0;
  *((_DWORD *)v2 + 8) = 0;
  uint64_t v4 = (char *)(v2 + 3);
  uint64_t v5 = (std::__shared_weak_count *)v2;
  sub_2158B2BE0(a1, (uint64_t)&v4, 1uLL);
  long long v3 = v5;
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2158AE4F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_215733368((uint64_t)va1);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158AE514(uint64_t a1)
{
  *(void *)a1 = &unk_26C6659A0;
  if (!*(unsigned char *)(a1 + 152) || (*(char *)(a1 + 151) & 0x80000000) == 0)
  {
    sub_215779804(a1 + 48);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      goto LABEL_4;
    }
LABEL_8:
    operator delete(*(void **)(a1 + 24));
    uint64_t v2 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = &unk_26C677B98;
    *(void *)(a1 + 16) = 0;
    if (!v2) {
      return a1;
    }
    goto LABEL_5;
  }
  operator delete(*(void **)(a1 + 128));
  sub_215779804(a1 + 48);
  if (*(char *)(a1 + 47) < 0) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = &unk_26C677B98;
  *(void *)(a1 + 16) = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v3 = sub_215ACE800(v2);
    MEMORY[0x2166C4D20](v3, 0x10F2C4013865076);
  }
  return a1;
}

uint64_t sub_2158AE600(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

char **sub_2158AE698(char **a1)
{
  if (*((unsigned char *)a1 + 24))
  {
    uint64_t v2 = *a1;
    if (*a1)
    {
      uint64_t v3 = a1[1];
      uint64_t v4 = *a1;
      if (v3 != v2)
      {
        do
        {
          uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        uint64_t v4 = *a1;
      }
      a1[1] = v2;
      operator delete(v4);
    }
  }
  return a1;
}

uint64_t sub_2158AE754(uint64_t result, uint64_t a2)
{
  *(_OWORD *)uint64_t result = *(_OWORD *)a2;
  *(unsigned char *)(result + 16) = 0;
  *(unsigned char *)(result + 112) = 0;
  if (*(unsigned char *)(a2 + 112))
  {
    *(unsigned char *)(result + 40) = 0;
    if (*(unsigned char *)(a2 + 40))
    {
      long long v2 = *(_OWORD *)(a2 + 16);
      *(void *)(result + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(result + 16) = v2;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      *(unsigned char *)(result + 40) = 1;
    }
    *(unsigned char *)(result + 48) = 0;
    *(unsigned char *)(result + 104) = 0;
    if (*(unsigned char *)(a2 + 104))
    {
      long long v3 = *(_OWORD *)(a2 + 48);
      *(void *)(result + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(result + 48) = v3;
      *(void *)(a2 + 56) = 0;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 48) = 0;
      *(void *)(result + 72) = *(void *)(a2 + 72);
      long long v4 = *(_OWORD *)(a2 + 80);
      *(void *)(result + 96) = *(void *)(a2 + 96);
      *(_OWORD *)(result + 80) = v4;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 80) = 0;
      *(unsigned char *)(result + 104) = 1;
    }
    *(unsigned char *)(result + 112) = 1;
  }
  *(unsigned char *)(result + 160) = 0;
  return result;
}

uint64_t sub_2158AE804(uint64_t a1, const char *a2)
{
  long long v4 = (char *)operator new(0x40uLL);
  long long v5 = xmmword_215EAEAA0;
  strcpy(v4, "Caught unexpected exception during creation of file importer: ");
  int v6 = 1;
  if (*(void *)a2)
  {
    uint64_t v7 = &v4;
    std::string::size_type v8 = a2;
    char v9 = &v4;
    int v10 = a2;
    uint64_t v11 = a2;
    sub_215743B60((uint64_t *)&v9, (uint64_t)&v4);
  }
  else
  {
    uint64_t v7 = &v4;
    std::string::size_type v8 = "nullptr";
    char v9 = &v4;
    int v10 = "nullptr";
    uint64_t v11 = "nullptr";
    sub_215743540((uint64_t *)&v9, (uint64_t)&v4);
  }
  if (v6 == -1) {
    sub_215742D4C();
  }
  uint64_t v7 = (char **)&v12;
  uint64_t result = ((uint64_t (*)(char ***, char **))off_26C665B70[v6])(&v7, &v4);
  if (v6 != -1) {
    return ((uint64_t (*)(char ***, char **))off_26C665AE0[v6])(&v7, &v4);
  }
  return result;
}

void sub_2158AE930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158AE944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158AE958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2158AE96C(uint64_t a1)
{
  *(void *)a1 = &unk_26C6659A0;
  if (!*(unsigned char *)(a1 + 152) || (*(char *)(a1 + 151) & 0x80000000) == 0)
  {
    sub_215779804(a1 + 48);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      goto LABEL_4;
    }
LABEL_8:
    operator delete(*(void **)(a1 + 24));
    uint64_t v2 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = &unk_26C677B98;
    *(void *)(a1 + 16) = 0;
    if (!v2) {
      return a1;
    }
    goto LABEL_5;
  }
  operator delete(*(void **)(a1 + 128));
  sub_215779804(a1 + 48);
  if (*(char *)(a1 + 47) < 0) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = &unk_26C677B98;
  *(void *)(a1 + 16) = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v3 = sub_215ACE800(v2);
    MEMORY[0x2166C4D20](v3, 0x10F2C4013865076);
  }
  return a1;
}

void sub_2158AEA58(uint64_t a1)
{
  *(void *)a1 = &unk_26C6659A0;
  if (*(unsigned char *)(a1 + 152) && *(char *)(a1 + 151) < 0)
  {
    operator delete(*(void **)(a1 + 128));
    sub_215779804(a1 + 48);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    {
LABEL_4:
      uint64_t v2 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = &unk_26C677B98;
      *(void *)(a1 + 16) = 0;
      if (!v2) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else
  {
    sub_215779804(a1 + 48);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      goto LABEL_4;
    }
  }
  operator delete(*(void **)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = &unk_26C677B98;
  *(void *)(a1 + 16) = 0;
  if (!v2)
  {
LABEL_6:
    JUMPOUT(0x2166C4D20);
  }
LABEL_5:
  uint64_t v3 = sub_215ACE800(v2);
  MEMORY[0x2166C4D20](v3, 0x10F2C4013865076);
  goto LABEL_6;
}

uint64_t sub_2158AEB64(uint64_t a1)
{
  v20[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = v2[36];
  unint64_t v4 = v2[35];
  if (v4 >= 0x86BCA1AF286BCA1BLL * ((v2[37] - v3) >> 3) && !v2[32]) {
    return 0;
  }
  uint64_t v5 = v3 + 152 * v4;
  if (*(unsigned char *)(a1 + 152))
  {
    if (*(void *)(a1 + 112) != v5)
    {
      *(void *)(a1 + 112) = v5;
      *(void *)(a1 + 120) = 1;
      int v6 = (void **)(v3 + 152 * v4 + 96);
      if (*(char *)(v5 + 119) < 0)
      {
        sub_215738B0C(__p, *v6, *(void *)(v3 + 152 * v4 + 104));
      }
      else
      {
        long long v7 = *(_OWORD *)v6;
        __p[2] = *(void **)(v3 + 152 * v4 + 112);
        *(_OWORD *)long long __p = v7;
      }
      char v12 = (void **)(a1 + 128);
      if (*(char *)(a1 + 151) < 0) {
        operator delete(*v12);
      }
      *(_OWORD *)char v12 = *(_OWORD *)__p;
      *(void **)(a1 + 144) = __p[2];
    }
  }
  else
  {
    std::string::size_type v8 = (void **)(v3 + 152 * v4 + 96);
    if (*(char *)(v5 + 119) < 0)
    {
      sub_215738B0C(__p, *v8, *(void *)(v3 + 152 * v4 + 104));
      BOOL v10 = *(unsigned char *)(a1 + 152) == 0;
    }
    else
    {
      long long v9 = *(_OWORD *)v8;
      __p[2] = *(void **)(v3 + 152 * v4 + 112);
      *(_OWORD *)long long __p = v9;
      BOOL v10 = 1;
    }
    char v13 = __p[0];
    v20[0] = __p[1];
    *(void **)((char *)v20 + 7) = *(void **)((char *)&__p[1] + 7);
    char v14 = HIBYTE(__p[2]);
    memset(__p, 0, sizeof(__p));
    *(void *)(a1 + 112) = v5;
    *(void *)(a1 + 120) = 1;
    if (v10)
    {
      uint64_t v15 = v20[0];
      *(void *)(a1 + 128) = v13;
      *(void *)(a1 + 136) = v15;
      *(void *)(a1 + 143) = *(void *)((char *)v20 + 7);
      *(unsigned char *)(a1 + 151) = v14;
      *(unsigned char *)(a1 + 152) = 1;
    }
    else if (*(char *)(a1 + 151) < 0)
    {
      operator delete(*(void **)(a1 + 128));
      int v17 = SHIBYTE(__p[2]);
      uint64_t v18 = v20[0];
      *(void *)(a1 + 128) = v13;
      *(void *)(a1 + 136) = v18;
      *(void *)(a1 + 143) = *(void *)((char *)v20 + 7);
      *(unsigned char *)(a1 + 151) = v14;
      if (v17 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      uint64_t v16 = v20[0];
      *(void *)(a1 + 128) = v13;
      *(void *)(a1 + 136) = v16;
      *(void *)(a1 + 143) = *(void *)((char *)v20 + 7);
      *(unsigned char *)(a1 + 151) = v14;
    }
  }
  uint64_t result = a1 + 128;
  if (*(char *)(a1 + 151) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t sub_2158AED80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_215AC32A0(*(void *)(a1 + 16), (uint64_t)&v67);
  if (v77)
  {
    uint64_t v3 = (char *)operator new(0x40uLL);
    *((void *)v3 + 1) = 0;
    *((void *)v3 + 2) = 0;
    *(void *)uint64_t v3 = &unk_26C658088;
    *(timespec *)(v3 + 24) = v67;
    v67.tv_sec = 0;
    v67.tv_nsec = 0;
    *((void *)v3 + 5) = &unk_26C678D20;
    *((_OWORD *)v3 + 3) = *(_OWORD *)&v68[8];
    *(void *)&v68[8] = 0;
    *(void *)&v68[16] = 0;
    long long __p = 0;
    uint64_t v57 = 0;
    LOBYTE(v58) = 0;
    *(void *)&long long v23 = v3 + 24;
    *((void *)&v23 + 1) = v3;
    long long __dst = 0uLL;
    if (atomic_exchange_explicit((atomic_uchar *volatile)&v58, 1u, memory_order_acquire))
    {
      int v4 = 0;
      do
      {
        if (v4)
        {
          timespec __rqtp = (timespec)xmmword_215E98470;
          nanosleep(&__rqtp, 0);
        }
        --v4;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)&v58, 1u, memory_order_acquire));
    }
    uint64_t v5 = __p;
    int v6 = v57;
    if (v57)
    {
      atomic_fetch_add_explicit(v57 + 2, 1u, memory_order_relaxed);
      atomic_store(0, (unsigned __int8 *)&v58);
      *(void *)&long long v24 = v5;
      *((void *)&v24 + 1) = v6;
      LOBYTE(v25) = 0;
      unsigned __int8 v34 = 1;
      if (atomic_fetch_add(v6 + 2, 0xFFFFFFFF) == 1)
      {
        (*(void (**)(atomic_uint *))(*(void *)v6 + 16))(v6);
        if (atomic_fetch_add(v6 + 3, 0xFFFFFFFF) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v6 + 24))(v6);
        }
      }
    }
    else
    {
      atomic_store(0, (unsigned __int8 *)&v58);
      long long v24 = (unint64_t)v5;
      LOBYTE(v25) = 0;
      unsigned __int8 v34 = 1;
    }
    long long v9 = (std::__shared_weak_count *)*((void *)&__dst + 1);
    if (*((void *)&__dst + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&__dst + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
    goto LABEL_43;
  }
  timespec v35 = v67;
  sub_215741BFC(&v36, (long long *)v68);
  sub_215838F34((unsigned __int8 *)&v35, (uint64_t)&__rqtp);
  long long __dst = (__int128)__rqtp;
  long long v7 = sub_215741BFC(&__p, &v46);
  long long v23 = __dst;
  LOBYTE(v24) = 0;
  char v33 = 0;
  if (v66)
  {
    char v26 = 0;
    int v8 = v59;
    if (v59)
    {
      long long v24 = *(_OWORD *)v7;
      uint64_t v25 = *((void *)v7 + 2);
      *((void *)v7 + 1) = 0;
      *((void *)v7 + 2) = 0;
      *(void *)long long v7 = 0;
      char v26 = 1;
    }
    LOBYTE(v27) = 0;
    char v32 = 0;
    if (v65)
    {
      uint64_t v28 = v61;
      long long v27 = v60;
      long long v60 = 0uLL;
      uint64_t v29 = v62;
      long long v30 = v63;
      uint64_t v31 = v64;
      std::string::size_type v61 = 0;
      long long v63 = 0uLL;
      uint64_t v64 = 0;
      char v32 = 1;
    }
    char v33 = 1;
    unsigned __int8 v34 = 0;
    if (v8 && SHIBYTE(v58) < 0) {
      operator delete(__p);
    }
    if (!v54) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  unsigned __int8 v34 = 0;
  if (v54)
  {
LABEL_26:
    if (v53)
    {
      if (v52 < 0) {
        operator delete(v51);
      }
      if (v50 < 0) {
        operator delete(v49);
      }
    }
    if (v48 && v47 < 0) {
      operator delete((void *)v46);
    }
  }
LABEL_34:
  if (v44)
  {
    if (v43)
    {
      if (v42 < 0) {
        operator delete(v41);
      }
      if (v40 < 0) {
        operator delete(v39);
      }
    }
    if (v38 && v37 < 0) {
      operator delete(v36);
    }
  }
LABEL_43:
  sub_2158B553C((uint64_t)&v67);
  if (v34)
  {
    *(unsigned char *)(a2 + 120) = 1;
    *(_OWORD *)a2 = v23;
    long long v23 = 0uLL;
    if (atomic_exchange_explicit((atomic_uchar *volatile)&v25, 1u, memory_order_acquire))
    {
      int v10 = 0;
      do
      {
        if (v10)
        {
          timespec v67 = (timespec)xmmword_215E98470;
          nanosleep(&v67, 0);
        }
        --v10;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)&v25, 1u, memory_order_acquire));
    }
LABEL_63:
    uint64_t v16 = *((void *)&v24 + 1);
    if (*((void *)&v24 + 1)) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v24 + 1) + 8), 1u, memory_order_relaxed);
    }
    atomic_store(0, (unsigned __int8 *)&v25);
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = v16;
    *(unsigned char *)(a2 + 32) = 0;
    return sub_215779A98((uint64_t)&v23);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E498, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E498))
  {
    long long v21 = std::generic_category();
    qword_26788E4C8 = 22;
    qword_26788E4D0 = (uint64_t)v21;
    __cxa_guard_release(&qword_26788E498);
  }
  if (*((void *)&v23 + 1) == qword_26788E4D0 && v23 == qword_26788E4C8)
  {
    sub_215741BFC(&__dst, &v24);
    sub_21573FCF8(0xAu, &__dst, (uint64_t)&v67);
    *(timespec *)a2 = v67;
    *(unsigned char *)(a2 + 16) = 0;
    uint64_t v11 = a2 + 16;
    *(unsigned char *)(a2 + 112) = 0;
    if (v76)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v12 = v69;
      if (!v69) {
        goto LABEL_81;
      }
LABEL_80:
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v68;
      *(void *)(v11 + 16) = *(void *)&v68[16];
      memset(v68, 0, sizeof(v68));
      *(unsigned char *)(a2 + 40) = 1;
LABEL_81:
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v75)
      {
        uint64_t v20 = v72;
        *(void *)(a2 + 64) = v71;
        *(_OWORD *)(a2 + 48) = v70;
        long long v70 = 0uLL;
        *(void *)(a2 + 72) = v20;
        *(_OWORD *)(a2 + 80) = v73;
        *(void *)(a2 + 96) = v74;
        uint64_t v71 = 0;
        long long v73 = 0uLL;
        uint64_t v74 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v12 && (v68[23] & 0x80000000) != 0) {
        operator delete(*(void **)v68);
      }
      if (!(_BYTE)v64) {
        return sub_215779A98((uint64_t)&v23);
      }
LABEL_89:
      if (BYTE8(v63))
      {
        if (SBYTE7(v63) < 0) {
          operator delete(v61);
        }
        if (SBYTE7(v60) < 0) {
          operator delete(v58);
        }
      }
      if ((_BYTE)v57 && SHIBYTE(__p) < 0) {
        operator delete((void *)__dst);
      }
      return sub_215779A98((uint64_t)&v23);
    }
    goto LABEL_88;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E4A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E4A0))
  {
    char v22 = sub_215AB74CC();
    qword_26788E4D8 = 1;
    qword_26788E4E0 = (uint64_t)v22;
    __cxa_guard_release(&qword_26788E4A0);
  }
  uint64_t v13 = *((void *)&v23 + 1);
  if (qword_26788E4E0 == *((void *)&v23 + 1))
  {
    if (v23 <= 0xDu)
    {
      if ((v23 - 1) > 0xCu) {
        unsigned int v18 = 0;
      }
      else {
        unsigned int v18 = dword_215EAF2E4[(char)(v23 - 1)];
      }
    }
    else
    {
      unsigned int v18 = 1;
    }
    sub_215741BFC(&__dst, &v24);
    sub_21573FCF8(v18, &__dst, (uint64_t)&v67);
    *(timespec *)a2 = v67;
    *(unsigned char *)(a2 + 16) = 0;
    uint64_t v11 = a2 + 16;
    *(unsigned char *)(a2 + 112) = 0;
    if (v76)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v12 = v69;
      if (!v69) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
LABEL_88:
    *(unsigned char *)(a2 + 120) = 0;
    if (!(_BYTE)v64) {
      return sub_215779A98((uint64_t)&v23);
    }
    goto LABEL_89;
  }
  *(unsigned char *)a2 = 0;
  int v14 = v34;
  *(unsigned char *)(a2 + 120) = v34;
  if (v14)
  {
    *(void *)a2 = v23;
    *(void *)(a2 + 8) = v13;
    long long v23 = 0uLL;
    if (atomic_exchange_explicit((atomic_uchar *volatile)&v25, 1u, memory_order_acquire))
    {
      int v15 = 0;
      do
      {
        if (v15)
        {
          timespec v67 = (timespec)xmmword_215E98470;
          nanosleep(&v67, 0);
        }
        --v15;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)&v25, 1u, memory_order_acquire));
    }
    goto LABEL_63;
  }
  *(_OWORD *)a2 = v23;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v33)
  {
    *(unsigned char *)(a2 + 40) = 0;
    if (v26)
    {
      *(_OWORD *)(a2 + 16) = v24;
      *(void *)(a2 + 32) = v25;
      uint64_t v25 = 0;
      long long v24 = 0uLL;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v32)
    {
      uint64_t v19 = v29;
      *(void *)(a2 + 64) = v28;
      *(_OWORD *)(a2 + 48) = v27;
      long long v27 = 0uLL;
      *(void *)(a2 + 72) = v19;
      *(_OWORD *)(a2 + 80) = v30;
      *(void *)(a2 + 96) = v31;
      uint64_t v28 = 0;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
  }
  return sub_215779A98((uint64_t)&v23);
}

void sub_2158AF584(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,long long __p,int a46,__int16 a47,char a48,char a49,char a50)
{
  __cxa_guard_abort(&qword_26788E4A0);
  sub_215779A98((uint64_t)&a13);
  switch(a2)
  {
    case 5:
      char v53 = __cxa_begin_catch(a1);
      a12 = (*(uint64_t (**)(void *))(*(void *)v53 + 16))(v53);
      sub_2157482C8(&__p, (const char **)&a12);
      sub_2159644BC(&__p, (uint64_t)&a13);
      break;
    case 4:
      char v54 = __cxa_begin_catch(a1);
      a12 = (*(uint64_t (**)(void *))(*(void *)v54 + 16))(v54);
      sub_2157482C8(&__p, (const char **)&a12);
      sub_215964DE4(&__p, (uint64_t)&a13);
      break;
    case 3:
      char v55 = __cxa_begin_catch(a1);
      a12 = (*(uint64_t (**)(void *))(*(void *)v55 + 16))(v55);
      sub_2157482C8(&__p, (const char **)&a12);
      sub_215964408(&__p, (uint64_t)&a13);
      break;
    default:
      char v56 = __cxa_begin_catch(a1);
      if (a2 == 2)
      {
        a12 = (*(uint64_t (**)(void *))(*(void *)v56 + 16))(v56);
        sub_2157482C8(&__p, (const char **)&a12);
        sub_215964408(&__p, (uint64_t)&a13);
      }
      else
      {
        LOBYTE(__p) = 0;
        a50 = 0;
        sub_2159641D8(&__p, (uint64_t)&a13);
      }
      break;
  }
  sub_2158AAB90(v50, (uint64_t)&a13);
  sub_21573FF04((uint64_t)&a13);
  if (a50 && a49 < 0) {
    operator delete((void *)__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x2158AF2ECLL);
}

void sub_2158AF7A4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,char a51)
{
  if (a51)
  {
    if (a50 < 0) {
      operator delete(__p);
    }
  }
  __cxa_end_catch();
  sub_215731D80(a1);
}

void sub_2158AF890(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v44 = 1;
  sub_215AC8FFC(a2, *(void *)(a1 + 16), (uint64_t)&v76);
  if (!v80)
  {
    long long v57 = v78;
    sub_215741BFC(&v58, v79);
    sub_215838F34((unsigned __int8 *)&v57, (uint64_t)v67);
    long long v23 = *(_OWORD *)v67;
    sub_215741BFC(v24, (long long *)&v67[16]);
    sub_215741F54((uint64_t)&v34, &v23);
    if (v32)
    {
      if (v31)
      {
        if (v30 < 0) {
          operator delete(__p);
        }
        if (v28 < 0) {
          operator delete(v27);
        }
      }
      if (v26 && v25 < 0) {
        operator delete(v24[0]);
      }
    }
    if (v75)
    {
      if (v74)
      {
        if (v73 < 0) {
          operator delete(v72);
        }
        if (v71 < 0) {
          operator delete(v70);
        }
      }
      if (v69 && v68 < 0) {
        operator delete(*(void **)&v67[16]);
      }
    }
    if (v66)
    {
      if (v65)
      {
        if (v64 < 0) {
          operator delete(v63);
        }
        if (v62 < 0) {
          operator delete(v61);
        }
      }
      if (v60 && v59 < 0) {
        operator delete(v58);
      }
    }
  }
  long long v82 = 0uLL;
  unint64_t v81 = 0;
  sub_2158B4BC4(&v81, 0xCCCCCCCCCCCCCCCDLL * ((v77 - v76) >> 3));
  sub_2158B4E34(v76, v77, &v81);
  int v4 = v81;
  *(void *)timespec v67 = v81;
  char v22 = (char *)v82;
  *(_OWORD *)&v67[8] = v82;
  sub_2158B348C(&v23, (uint64_t *)v67);
  long long v45 = v23;
  v46[0] = v24[0];
  v24[0] = 0;
  long long v23 = 0uLL;
  char v56 = 1;
  if (v4)
  {
    uint64_t v5 = v22;
    if (v22 != v4)
    {
      do
      {
        int v6 = (atomic_uint *)*((void *)v5 - 2);
        if (v6)
        {
          if (atomic_fetch_add(v6 + 2, 0xFFFFFFFF) == 1)
          {
            (*(void (**)(atomic_uint *))(*(void *)v6 + 16))(v6);
            if (atomic_fetch_add(v6 + 3, 0xFFFFFFFF) == 1) {
              (*(void (**)(atomic_uint *))(*(void *)v6 + 24))(v6);
            }
          }
        }
        long long v7 = (std::__shared_weak_count *)*((void *)v5 - 4);
        if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v5 -= 40;
      }
      while (v5 != v4);
      int v4 = *(char **)v67;
    }
    operator delete(v4);
  }
  sub_2158B53D0(&v76);
  sub_2158B3FD8((uint64_t)&v23, (uint64_t)&v45);
  if (v56)
  {
    uint64_t v8 = v45;
    if (!(void)v45) {
      goto LABEL_65;
    }
    uint64_t v9 = *((void *)&v45 + 1);
    if (*((void *)&v45 + 1) != (void)v45)
    {
      do
      {
        int v10 = *(atomic_uint **)(v9 - 16);
        if (v10)
        {
          if (atomic_fetch_add(v10 + 2, 0xFFFFFFFF) == 1)
          {
            (*(void (**)(atomic_uint *))(*(void *)v10 + 16))(v10);
            if (atomic_fetch_add(v10 + 3, 0xFFFFFFFF) == 1) {
              (*(void (**)(atomic_uint *))(*(void *)v10 + 24))(v10);
            }
          }
        }
        uint64_t v11 = *(std::__shared_weak_count **)(v9 - 32);
        if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
        v9 -= 40;
      }
      while (v9 != v8);
    }
    *((void *)&v45 + 1) = v8;
    int v12 = (void **)&v45;
    goto LABEL_64;
  }
  if (v55)
  {
    if (v54)
    {
      if (SHIBYTE(v53) < 0) {
        operator delete(v52[0]);
      }
      if (SHIBYTE(v50) < 0) {
        operator delete(v49[0]);
      }
    }
    if (v48 && v47 < 0)
    {
      int v12 = v46;
LABEL_64:
      operator delete(*v12);
    }
  }
LABEL_65:
  if (v33)
  {
    sub_2158B348C((void *)a3, (uint64_t *)&v23);
    *(unsigned char *)(a3 + 32) = 0;
    *(unsigned char *)(a3 + 24) = 1;
    int v13 = v44;
    *(unsigned char *)(a3 + 152) = v44;
    if (!v13)
    {
      *(_OWORD *)(a3 + 32) = v34;
      sub_215741BFC((unsigned char *)(a3 + 48), &v35);
    }
    goto LABEL_76;
  }
  long long v45 = v23;
  int v14 = sub_215741BFC(v46, (long long *)v24);
  *(unsigned char *)a3 = 0;
  *(unsigned char *)(a3 + 24) = 0;
  *(_OWORD *)(a3 + 32) = v45;
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 144) = 0;
  if (v55)
  {
    *(unsigned char *)(a3 + 72) = 0;
    int v15 = v48;
    if (v48)
    {
      *(_OWORD *)(a3 + 48) = *(_OWORD *)v14;
      *(void *)(a3 + 64) = *((void *)v14 + 2);
      *((void *)v14 + 1) = 0;
      *((void *)v14 + 2) = 0;
      *(void *)int v14 = 0;
      *(unsigned char *)(a3 + 72) = 1;
    }
    *(unsigned char *)(a3 + 80) = 0;
    *(unsigned char *)(a3 + 136) = 0;
    if (v54)
    {
      uint64_t v16 = v51;
      *(void *)(a3 + 96) = v50;
      *(_OWORD *)(a3 + 80) = *(_OWORD *)v49;
      v49[0] = 0;
      v49[1] = 0;
      *(void *)(a3 + 104) = v16;
      *(_OWORD *)(a3 + 112) = *(_OWORD *)v52;
      *(void *)(a3 + 128) = v53;
      uint64_t v50 = 0;
      v52[0] = 0;
      v52[1] = 0;
      uint64_t v53 = 0;
      *(unsigned char *)(a3 + 136) = 1;
    }
    *(unsigned char *)(a3 + 144) = 1;
    *(unsigned char *)(a3 + 152) = 0;
    if (v15 && v47 < 0) {
      operator delete(v46[0]);
    }
LABEL_76:
    if (v33) {
      goto LABEL_77;
    }
    goto LABEL_90;
  }
  *(unsigned char *)(a3 + 152) = 0;
  if (v33)
  {
LABEL_77:
    uint64_t v17 = v23;
    if ((void)v23)
    {
      uint64_t v18 = *((void *)&v23 + 1);
      if (*((void *)&v23 + 1) != (void)v23)
      {
        do
        {
          uint64_t v19 = *(atomic_uint **)(v18 - 16);
          if (v19)
          {
            if (atomic_fetch_add(v19 + 2, 0xFFFFFFFF) == 1)
            {
              (*(void (**)(atomic_uint *))(*(void *)v19 + 16))(v19);
              if (atomic_fetch_add(v19 + 3, 0xFFFFFFFF) == 1) {
                (*(void (**)(atomic_uint *))(*(void *)v19 + 24))(v19);
              }
            }
          }
          uint64_t v20 = *(std::__shared_weak_count **)(v18 - 32);
          if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
          v18 -= 40;
        }
        while (v18 != v17);
      }
      *((void *)&v23 + 1) = v17;
      long long v21 = (void **)&v23;
      goto LABEL_99;
    }
    goto LABEL_100;
  }
LABEL_90:
  if (v32)
  {
    if (v31)
    {
      if (v30 < 0) {
        operator delete(__p);
      }
      if (v28 < 0) {
        operator delete(v27);
      }
    }
    if (v26 && v25 < 0)
    {
      long long v21 = v24;
LABEL_99:
      operator delete(*v21);
    }
  }
LABEL_100:
  if (!v44 && v43)
  {
    if (v42)
    {
      if (v41 < 0) {
        operator delete(v40);
      }
      if (v39 < 0) {
        operator delete(v38);
      }
    }
    if (v37)
    {
      if (v36 < 0) {
        operator delete((void *)v35);
      }
    }
  }
}

void sub_2158AFFC8(void *a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(void *)v1)
    {
      sub_21577997C((uint64_t *)v1);
      operator delete(*(void **)v1);
      sub_215731D80(a1);
    }
  }
  sub_215731D80(a1);
}

void sub_2158B03AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  unint64_t v4 = v3[35];
  unint64_t v5 = 0x86BCA1AF286BCA1BLL * ((uint64_t)(v3[37] - v3[36]) >> 3);
  if (v4 < v5 || v3[32])
  {
    unint64_t v6 = v4 + 1;
    v3[35] = v6;
    if (v6 >= v5) {
      sub_215AC1948(v3);
    }
    sub_215AC2750((uint64_t)v3);
  }
  *(unsigned char *)(a2 + 120) = 1;
}

void sub_2158B0724(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = *(void **)(a1 + 16);
  while (1)
  {
    uint64_t v6 = v5[36];
    unint64_t v7 = v5[35];
    unint64_t v8 = 0x86BCA1AF286BCA1BLL * ((v5[37] - v6) >> 3);
    if (v7 >= v8 && !v5[32]) {
      break;
    }
    if (*(void *)(v6 + 152 * v7) >= a2) {
      break;
    }
    unint64_t v9 = v7 + 1;
    v5[35] = v9;
    if (v9 >= v8) {
      sub_215AC1948(v5);
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

uint64_t sub_2158B0AC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*(void *)(result + 16) + 280) = 0;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

void sub_2158B0AD4()
{
}

void sub_2158B0C9C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2158B0CC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = a10;
  a10 = 0;
  if (!v11) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464((uint64_t)&a10, v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158B0CE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 88))
  {
    if ((*(char *)(a1 + 87) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(*(void **)(a1 + 32));
      if (!*(unsigned char *)(a1 + 24)) {
        return a1;
      }
      goto LABEL_5;
    }
    operator delete(*(void **)(a1 + 64));
    if (*(char *)(a1 + 55) < 0) {
      goto LABEL_8;
    }
  }
LABEL_4:
  if (!*(unsigned char *)(a1 + 24)) {
    return a1;
  }
LABEL_5:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_2158B0D70(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    *(unsigned char *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 40) = -1;
    uint64_t v4 = *(unsigned int *)(a2 + 40);
    if (v4 != -1)
    {
      ((void (*)(char *))off_26C665A00[v4])(&v18);
      *(_DWORD *)(a1 + 40) = v4;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  int v6 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 112) = 0;
  if (*(unsigned char *)(a2 + 112))
  {
    *(unsigned char *)(a1 + 104) = 0;
    if (*(unsigned char *)(a2 + 104))
    {
      long long v7 = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = v7;
      *(void *)(a2 + 80) = 0;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 72) = 0;
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
  }
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  if (*(unsigned char *)(a2 + 152))
  {
    *(_DWORD *)(a1 + 144) = -1;
    uint64_t v8 = *(unsigned int *)(a2 + 144);
    if (v8 != -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_26C665A10[v8])(&v19, a1 + 120, a2 + 120);
      *(_DWORD *)(a1 + 144) = v8;
    }
    *(unsigned char *)(a1 + 152) = 1;
  }
  *(unsigned char *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  if (*(unsigned char *)(a2 + 224))
  {
    *(_DWORD *)(a1 + 216) = -1;
    uint64_t v9 = *(unsigned int *)(a2 + 216);
    if (v9 != -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_26C665A20[v9])(&v20, a1 + 160, a2 + 160);
      *(_DWORD *)(a1 + 216) = v9;
    }
    *(unsigned char *)(a1 + 224) = 1;
  }
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  if (*(unsigned char *)(a2 + 256))
  {
    *(void *)(a1 + 232) = &unk_26C678D20;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a2 + 240) = 0;
    *(void *)(a2 + 248) = 0;
    *(unsigned char *)(a1 + 256) = 1;
  }
  *(unsigned char *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 312) = 0;
  if (*(unsigned char *)(a2 + 312))
  {
    *(unsigned char *)(a1 + 272) = 0;
    *(_DWORD *)(a1 + 304) = -1;
    uint64_t v10 = *(unsigned int *)(a2 + 304);
    if (v10 != -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_26C665A00[v10])(&v21, a1 + 272, a2 + 272);
      *(_DWORD *)(a1 + 304) = v10;
    }
    *(unsigned char *)(a1 + 312) = 1;
  }
  *(unsigned char *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 416) = 0;
  if (*(unsigned char *)(a2 + 416))
  {
    *(unsigned char *)(a1 + 336) = 0;
    *(_DWORD *)(a1 + 400) = -1;
    uint64_t v11 = *(unsigned int *)(a2 + 400);
    if (v11 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C665A30[v11])(v22, a1 + 336, a2 + 336);
      *(_DWORD *)(a1 + 400) = v11;
    }
    *(unsigned char *)(a1 + 416) = 1;
  }
  *(unsigned char *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 576) = 0;
  if (*(unsigned char *)(a2 + 576))
  {
    *(unsigned char *)(a1 + 448) = 0;
    *(_DWORD *)(a1 + 560) = -1;
    uint64_t v12 = *(unsigned int *)(a2 + 560);
    if (v12 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C665A40[v12])(v23, a1 + 448, a2 + 448);
      *(_DWORD *)(a1 + 560) = v12;
    }
    *(unsigned char *)(a1 + 576) = 1;
  }
  *(unsigned char *)(a1 + 592) = 0;
  *(unsigned char *)(a1 + 624) = 0;
  if (*(unsigned char *)(a2 + 624))
  {
    *(unsigned char *)(a1 + 616) = 0;
    if (*(unsigned char *)(a2 + 616))
    {
      *(void *)(a1 + 592) = 0;
      *(void *)(a1 + 600) = 0;
      *(void *)(a1 + 608) = 0;
      *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      *(void *)(a2 + 592) = 0;
      *(void *)(a2 + 600) = 0;
      *(void *)(a2 + 608) = 0;
      *(unsigned char *)(a1 + 616) = 1;
    }
    *(unsigned char *)(a1 + 624) = 1;
  }
  *(unsigned char *)(a1 + 632) = 0;
  *(unsigned char *)(a1 + 680) = 0;
  if (*(unsigned char *)(a2 + 680))
  {
    *(unsigned char *)(a1 + 640) = 0;
    *(_DWORD *)(a1 + 672) = -1;
    uint64_t v13 = *(unsigned int *)(a2 + 672);
    if (v13 != -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_26C665A00[v13])(&v24, a1 + 640, a2 + 640);
      *(_DWORD *)(a1 + 672) = v13;
    }
    *(unsigned char *)(a1 + 680) = 1;
  }
  long long v14 = *(_OWORD *)(a2 + 688);
  long long v15 = *(_OWORD *)(a2 + 704);
  long long v16 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 729) = *(_OWORD *)(a2 + 729);
  *(_OWORD *)(a1 + 704) = v15;
  *(_OWORD *)(a1 + 720) = v16;
  *(_OWORD *)(a1 + 688) = v14;
  return a1;
}

void sub_2158B111C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v20 = *(unsigned int *)(v12 + 560);
  if (v20 != -1) {
    ((void (*)(char *, uint64_t))off_26C6659D0[v20])(&a12, v18);
  }
  *(_DWORD *)(v12 + 560) = -1;
  sub_21577AD14(v17);
  sub_21577AD78(v12 + 264);
  if (*(unsigned char *)(v12 + 256)) {
    sub_215AEFACC(v16);
  }
  sub_21577ADDC(v15);
  sub_21577AE40(v14);
  sub_21577AEA4(v13);
  sub_21577AD78(v12);
  _Unwind_Resume(a1);
}

__n128 sub_2158B11E0(uint64_t a1, uint64_t a2, __n128 *a3)
{
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 24) = 0;
  if (a3[1].n128_u8[8])
  {
    __n128 result = *a3;
    *(void *)(a2 + 16) = a3[1].n128_u64[0];
    *(__n128 *)a2 = result;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    a3->n128_u64[0] = 0;
    *(unsigned char *)(a2 + 24) = 1;
  }
  return result;
}

__n128 sub_2158B1214(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

__n128 sub_2158B1230(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

__n128 sub_2158B124C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

__n128 sub_2158B1268(uint64_t a1, __n128 *a2, uint64_t a3)
{
  __n128 result = *(__n128 *)a3;
  a2[1].n128_u64[0] = *(void *)(a3 + 16);
  *a2 = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  a2[1].n128_u8[8] = 0;
  a2[3].n128_u8[0] = 0;
  if (*(unsigned char *)(a3 + 48))
  {
    __n128 result = *(__n128 *)(a3 + 24);
    a2[2].n128_u64[1] = *(void *)(a3 + 40);
    *(__n128 *)((char *)a2 + 24) = result;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 24) = 0;
    a2[3].n128_u8[0] = 1;
  }
  return result;
}

__n128 sub_2158B12B8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

__n128 sub_2158B12D4(uint64_t a1, uint64_t a2, __n128 *a3)
{
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 48) = 0;
  if (a3[3].n128_u8[0])
  {
    _X4 = 0;
    _X5 = 0;
    __n128 result = *a3;
    *(void *)(a2 + 16) = a3[1].n128_u64[0];
    *(__n128 *)a2 = result;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    a3->n128_u64[0] = 0;
    __asm { CASPAL          X4, X5, X4, X5, [X8] }
    *(void *)(a2 + 32) = _X4;
    *(void *)(a2 + 40) = 0;
    *(unsigned char *)(a2 + 48) = 1;
  }
  return result;
}

__n128 sub_2158B131C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  unint64_t v3 = a3[1].n128_u64[0];
  __n128 result = *a3;
  *a2 = *a3;
  a2[1].n128_u64[0] = v3;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

void sub_2158B1338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 96) = 0;
  if (*(unsigned char *)(a3 + 96))
  {
    *(unsigned char *)(a2 + 24) = 0;
    if (*(unsigned char *)(a3 + 24))
    {
      uint64_t v3 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v3;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(unsigned char *)(a2 + 24) = 1;
    }
    *(unsigned char *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 80) = 0;
    if (*(unsigned char *)(a3 + 80))
    {
      _X4 = 0;
      _X5 = 0;
      long long v6 = *(_OWORD *)(a3 + 32);
      *(void *)(a2 + 48) = *(void *)(a3 + 48);
      *(_OWORD *)(a2 + 32) = v6;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 48) = 0;
      *(void *)(a3 + 32) = 0;
      __asm { CASPAL          X4, X5, X4, X5, [X8] }
      *(void *)(a2 + 64) = _X4;
      *(void *)(a2 + 72) = 0;
      *(unsigned char *)(a2 + 80) = 1;
    }
    *(unsigned char *)(a2 + 96) = 1;
  }
}

__n128 sub_2158B13C8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  unint64_t v3 = a3[1].n128_u64[0];
  __n128 result = *a3;
  *a2 = *a3;
  a2[1].n128_u64[0] = v3;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

void sub_2158B13E4(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

uint64_t sub_2158B13F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 24;
  uint64_t v4 = *(void *)(a3 + 24);
  if (!v4)
  {
    uint64_t v3 = a2 + 24;
    goto LABEL_5;
  }
  if (v4 != a3)
  {
    *(void *)(a2 + 24) = v4;
LABEL_5:
    *(void *)uint64_t v3 = 0;
    return result;
  }
  *(void *)(a2 + 24) = a2;
  return (*(uint64_t (**)(void))(**(void **)v3 + 24))();
}

uint64_t sub_2158B1460(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 816;
    if (*(unsigned char *)(i - 8))
    {
      uint64_t v4 = *(unsigned int *)(i - 16);
      if (v4 != -1) {
        ((void (*)(char *, uint64_t))off_26C6659E0[v4])(&v6, i - 48);
      }
      *(_DWORD *)(i - 16) = -1;
    }
    *(void *)(i - 816) = off_26C678AE8;
    sub_215948050(i - 800);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_2158B152C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8);
    uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8);
    if (v3 != v4)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8);
      do
      {
        if (*(unsigned char *)(v5 + 808))
        {
          uint64_t v6 = *(unsigned int *)(v5 + 800);
          if (v6 != -1) {
            ((void (*)(char *, uint64_t))off_26C6659E0[v6])(&v7, v5 + 768);
          }
          *(_DWORD *)(v5 + 800) = -1;
        }
        *(void *)uint64_t v5 = off_26C678AE8;
        sub_215948050(v5 + 16);
        v5 += 816;
        v3 += 816;
      }
      while (v5 != v4);
    }
  }
  return a1;
}

void *sub_2158B1604(void *a1)
{
  *a1 = &unk_26C665A70;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_2158B16B4(void *a1)
{
  *a1 = &unk_26C665A70;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2158B1778(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C665A70;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_2158B183C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158B1850(uint64_t result, void *a2)
{
  *a2 = &unk_26C665A70;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2158B1920(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_2158B1984(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_2158B1A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_215AEFBD4(a3);
  sub_215AF0948(a3);
  int v14 = 0;
  sub_2158B25D8(v13, "while exporting data ");
  sub_215748F40((uint64_t)&v12, (uint64_t)v13, &v6);
  char v7 = v13;
  uint64_t v8 = " of type ";
  uint64_t v9 = v13;
  uint64_t v10 = " of type ";
  uint64_t v11 = " of type ";
  if (v14 != -1)
  {
    v15[0] = &v7;
    ((void (*)(void *, _DWORD *))off_26C665B10[v14])(v15, v13);
    v15[0] = &v4;
    v15[1] = &v5;
    char v7 = v13;
    uint64_t v8 = "{";
    uint64_t v9 = v13;
    uint64_t v10 = "{";
    uint64_t v11 = "{";
    if (v14 != -1)
    {
      uint64_t v17 = &v7;
      ((void (*)(void **, _DWORD *))off_26C665B28[v14])(&v17, v13);
      LOBYTE(v7) = 1;
      uint64_t v8 = (const char *)v13;
      uint64_t v9 = &v16;
      sub_2158B26CC((uint64_t)v15, (uint64_t)&v7);
      char v7 = v13;
      uint64_t v8 = "}";
      uint64_t v9 = v13;
      uint64_t v10 = "}";
      uint64_t v11 = "}";
      if (v14 != -1)
      {
        uint64_t v17 = &v7;
        ((void (*)(void **, _DWORD *))off_26C665B28[v14])(&v17, v13);
        char v7 = v13;
        uint64_t v8 = " to directory ";
        uint64_t v9 = v13;
        uint64_t v10 = " to directory ";
        uint64_t v11 = " to directory ";
        if (v14 != -1)
        {
          v15[0] = &v7;
          ((void (*)(void *, _DWORD *))off_26C665B58[v14])(v15, v13);
          sub_2158B2364();
        }
        sub_215742D4C();
      }
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2158B1DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46,int a47,char a48)
{
  if (a48)
  {
    if (a46)
    {
      if (a45 < 0) {
        operator delete(__p);
      }
      if (a38 < 0) {
        operator delete(a33);
      }
    }
    if (a32)
    {
      if (a31 < 0) {
        operator delete(a26);
      }
    }
  }
  if (a23 < 0)
  {
    operator delete(a18);
    if ((a15 & 0x80000000) == 0) {
LABEL_12:
    }
      _Unwind_Resume(a1);
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_2158B1EC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger33CreateDestinationWithFileExporterERKNSt3__14__fs10filesystem4pathENS2_8"
                     "optionalINS1_17FileExportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEENSC_11OptionalRefINS_3"
                     "kit2fs11IFilesystemEEEENK3$_0clEvEUlS7_RKNSK_3viz10SharedDataERKNSC_6ErrorCINSP_11IOErrorCodeEEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger33CreateDestinationWithFileExporterERKNSt3__14__fs10filesystem"
                                "4pathENS2_8optionalINS1_17FileExportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEE"
                                "NSC_11OptionalRefINS_3kit2fs11IFilesystemEEEENK3$_0clEvEUlS7_RKNSK_3viz10SharedDataERKNS"
                                "C_6ErrorCINSP_11IOErrorCodeEEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger33CreateDestinationWithFileExporterERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17FileExportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEENSC_11OptionalRefINS_3kit2fs11IFilesystemEEEENK3$_0clEvEUlS7_RKNSK_3viz10SharedDataERKNSC_6ErrorCINSP_11IOErrorCodeEEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger33CreateDestinationWithFileExporterERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17FileExportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEENSC_11OptionalRefINS_3kit2fs11IFilesystemEEEENK3$_0clEvEUlS7_RKNSK_3viz10SharedDataERKNSC_6ErrorCINSP_11IOErrorCodeEEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158B1F38()
{
  return &unk_26C665B88;
}

void sub_2158B1F44(char *a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  char v45[2] = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *((void *)a1 + 1);
  LOBYTE(v18) = 0;
  char v20 = 0;
  LOBYTE(v21) = 0;
  char v25 = 0;
  sub_2158B2240(a1 + 16, (uint64_t)&v18, (uint64_t)v26);
  sub_215E1109C((uint64_t)v26, a2, (uint64_t)&__p);
  int v12 = v36;
  if (v36)
  {
    uint64_t v13 = __p;
    v45[0] = v35;
    *(void *)((char *)v45 + 7) = *(void *)((char *)&v35 + 7);
    char v7 = HIBYTE(v35);
    long long v35 = 0uLL;
    long long __p = 0;
    int v14 = v42;
    if (v42) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = 0;
    int v14 = v42;
    if (v42)
    {
LABEL_3:
      uint64_t v15 = v37;
      v44[0] = v38;
      *(void *)((char *)v44 + 7) = *(void *)((char *)&v38 + 7);
      char v9 = HIBYTE(v38);
      char v37 = 0;
      long long v38 = 0uLL;
      uint64_t v10 = v39;
      uint64_t v8 = v40;
      v43[0] = v41;
      *(void *)((char *)v43 + 7) = *(void *)((char *)&v41 + 7);
      char v11 = HIBYTE(v41);
      char v40 = 0;
      long long v41 = 0uLL;
      *(void *)a3 = v5;
      *(void *)(a3 + 8) = v6;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      *(unsigned char *)(a3 + 40) = 0;
      if (!v12) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  uint64_t v15 = 0;
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  *(unsigned char *)(a3 + 40) = 0;
  if (v12)
  {
LABEL_4:
    uint64_t v16 = v45[0];
    *(void *)(a3 + 16) = v13;
    *(void *)(a3 + 24) = v16;
    *(void *)(a3 + 31) = *(void *)((char *)v45 + 7);
    *(unsigned char *)(a3 + 39) = v7;
    v45[0] = 0;
    *(void *)((char *)v45 + 7) = 0;
    *(unsigned char *)(a3 + 40) = 1;
    uint64_t v13 = 0;
    char v7 = 0;
  }
LABEL_5:
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v14)
  {
    uint64_t v17 = v44[0];
    *(void *)(a3 + 48) = v15;
    *(void *)(a3 + 56) = v17;
    *(void *)(a3 + 63) = *(void *)((char *)v44 + 7);
    *(unsigned char *)(a3 + 71) = v9;
    v44[0] = 0;
    *(void *)((char *)v44 + 7) = 0;
    *(void *)(a3 + 72) = v10;
    *(void *)(a3 + 80) = v8;
    *(void *)(a3 + 88) = v43[0];
    *(void *)(a3 + 95) = *(void *)((char *)v43 + 7);
    *(unsigned char *)(a3 + 103) = v11;
    v43[0] = 0;
    *(void *)((char *)v43 + 7) = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  if (v12 && v7 < 0)
  {
    operator delete(v13);
    int v14 = v42;
  }
  if (v14)
  {
    if ((SHIBYTE(v41) & 0x80000000) == 0)
    {
      if ((SHIBYTE(v38) & 0x80000000) == 0) {
        goto LABEL_13;
      }
LABEL_33:
      operator delete(v37);
      if (!v36) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    operator delete(v40);
    if (SHIBYTE(v38) < 0) {
      goto LABEL_33;
    }
  }
LABEL_13:
  if (!v36) {
    goto LABEL_16;
  }
LABEL_14:
  if (SHIBYTE(v35) < 0) {
    operator delete(__p);
  }
LABEL_16:
  if (!v33) {
    goto LABEL_19;
  }
  if ((v32 & 0x80000000) == 0)
  {
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_19;
    }
LABEL_36:
    operator delete(v29);
    if (!v28) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  operator delete(v31);
  if (v30 < 0) {
    goto LABEL_36;
  }
LABEL_19:
  if (!v28) {
    goto LABEL_22;
  }
LABEL_20:
  if (v27 < 0) {
    operator delete(v26[0]);
  }
LABEL_22:
  if (!v25) {
    goto LABEL_25;
  }
  if (v24 < 0)
  {
    operator delete(v23);
    if ((v22 & 0x80000000) == 0)
    {
LABEL_25:
      if (!v20) {
        return;
      }
      goto LABEL_26;
    }
  }
  else if ((v22 & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(v21);
  if (!v20) {
    return;
  }
LABEL_26:
  if (v19 < 0) {
    operator delete(v18);
  }
}

void sub_2158B2210(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  sub_2158B0CE8((uint64_t)va1);
  sub_2158B0CE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158B222C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2158B0CE8((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2158B2240@<X0>(char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = result[96];
  *(unsigned char *)a3 = 0;
  *(unsigned char *)(a3 + 24) = 0;
  if (v4)
  {
    uint64_t v5 = result;
    if (result[24])
    {
      if (result[23] < 0)
      {
        sub_215738B0C((unsigned char *)a3, *(void **)result, *((void *)result + 1));
      }
      else
      {
        *(_OWORD *)a3 = *(_OWORD *)result;
        *(void *)(a3 + 16) = *((void *)result + 2);
      }
      *(unsigned char *)(a3 + 24) = 1;
    }
    return sub_215741CB8((char *)(a3 + 32), (long long *)v5 + 2);
  }
  else
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_OWORD *)a3 = *(_OWORD *)a2;
      *(void *)(a3 + 16) = *(void *)(a2 + 16);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0;
      *(unsigned char *)(a3 + 24) = 1;
    }
    *(unsigned char *)(a3 + 32) = 0;
    *(unsigned char *)(a3 + 88) = 0;
    if (*(unsigned char *)(a2 + 88))
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a3 + 48) = *(void *)(a2 + 48);
      *(_OWORD *)(a3 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a3 + 56) = v6;
      *(_OWORD *)(a3 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a3 + 80) = *(void *)(a2 + 80);
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 72) = 0;
      *(void *)(a2 + 80) = 0;
      *(unsigned char *)(a3 + 88) = 1;
    }
  }
  return result;
}

void sub_2158B233C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2158B2364()
{
}

void sub_2158B2570(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2158B2594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2158B25D8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C665AE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158B26CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)a1;
  if (!*(unsigned char *)a2)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = ",";
    uint64_t v9 = v7;
    uint64_t v10 = ",";
    char v11 = ",";
    uint64_t v5 = *(unsigned int *)(v7 + 24);
    if (v5 == -1) {
      goto LABEL_6;
    }
    uint64_t v12 = &v7;
    ((void (*)(uint64_t **))off_26C665B28[v5])(&v12);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = v4;
  uint64_t v9 = v7;
  uint64_t v10 = v4;
  char v11 = v4;
  uint64_t v6 = *(unsigned int *)(v7 + 24);
  if (v6 == -1) {
LABEL_6:
  }
    sub_215742D4C();
  uint64_t v12 = &v7;
  ((void (*)(uint64_t **))off_26C665B40[v6])(&v12);
  sub_2158B2798(a2, *(unsigned int **)(a1 + 8));
}

void sub_2158B2798(uint64_t a1, unsigned int *a2)
{
  if (!*(unsigned char *)a1)
  {
    uint64_t v8 = *(void *)(a1 + 8);
    uint64_t v9 = (std::string *)",";
    uint64_t v10 = v8;
    char v11 = (std::string *)",";
    uint64_t v12 = (std::string *)",";
    uint64_t v4 = *(unsigned int *)(v8 + 24);
    if (v4 == -1) {
      sub_215742D4C();
    }
    v7.__r_.__value_.__r.__words[0] = (std::string::size_type)&v8;
    ((void (*)(std::string *))off_26C665B28[v4])(&v7);
  }
  *(unsigned char *)a1 = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  std::to_string(&v7, *a2);
  uint64_t v8 = v5;
  uint64_t v9 = &v7;
  uint64_t v10 = v5;
  char v11 = &v7;
  uint64_t v12 = &v7;
  uint64_t v6 = *(unsigned int *)(v5 + 24);
  if (v6 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = &v8;
  ((void (*)(uint64_t **, uint64_t))off_26C665AF8[v6])(&v13, v5);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
}

void sub_2158B2888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158B28A4(void *a1, unsigned char *a2, unsigned char *a3, unsigned __int8 __c, unsigned __int8 a5)
{
  memset(&v15, 0, sizeof(v15));
  std::string::push_back(&v15, __c);
  for (; a2 != a3; ++a2)
  {
    int v10 = *a2;
    if (v10 == a5 || v10 == __c)
    {
      std::string::push_back(&v15, a5);
      LOBYTE(v10) = *a2;
    }
    std::string::push_back(&v15, v10);
  }
  std::string::push_back(&v15, __c);
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v11 = &v15;
  }
  else {
    char v11 = (std::string *)v15.__r_.__value_.__r.__words[0];
  }
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v15.__r_.__value_.__l.__size_;
  }
  uint64_t v13 = sub_215731D94(a1, (uint64_t)v11, size);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v13;
}

void sub_2158B298C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char **sub_2158B29AC(char **a1)
{
  if (*((unsigned char *)a1 + 24))
  {
    uint64_t v2 = *a1;
    if (*a1)
    {
      uint64_t v3 = a1[1];
      uint64_t v4 = *a1;
      if (v3 != v2)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = &v3[v5];
          if (v3[v5 - 8])
          {
            uint64_t v7 = *((unsigned int *)v6 - 4);
            if (v7 != -1) {
              ((void (*)(char *, char *))off_26C6659E0[v7])(&v9, v6 - 48);
            }
            *((_DWORD *)v6 - 4) = -1;
          }
          *((void *)v6 - 102) = off_26C678AE8;
          sub_215948050((uint64_t)(v6 - 800));
          v5 -= 816;
        }
        while (&v3[v5] != v2);
        uint64_t v4 = *a1;
      }
      a1[1] = v2;
      operator delete(v4);
    }
  }
  return a1;
}

uint64_t *sub_2158B2AA4(uint64_t *a1)
{
  if (*a1)
  {
    sub_21577997C(a1);
    operator delete((void *)*a1);
  }
  return a1;
}

uint64_t sub_2158B2AE0(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 24);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void *sub_2158B2BE0(void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60) {
      sub_215738AC0();
    }
    uint64_t v5 = 16 * a3;
    uint64_t v6 = (char *)operator new(16 * a3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      uint64_t v8 = a2 + v7;
      char v9 = &v6[v7];
      uint64_t v10 = *(void *)(a2 + v7 + 8);
      *(void *)char v9 = *(void *)(a2 + v7);
      *((void *)v9 + 1) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 16;
    }
    while (v8 + 16 != a2 + v5);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2158B2C98(_Unwind_Exception *exception_object)
{
  uint64_t v3 = (char *)*v1;
  if (*v1)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6)
        {
          if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158B2D24(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C665BA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2158B2D44(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C665BA8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void *sub_2158B2DA0(void *a1)
{
  *a1 = &unk_26C665BF8;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_2158B2E50(void *a1)
{
  *a1 = &unk_26C665BF8;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2158B2F14(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C665BF8;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_2158B2FD8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158B2FEC(uint64_t result, void *a2)
{
  *a2 = &unk_26C665BF8;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2158B30BC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_2158B3120(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_2158B31D4(uint64_t a1, char *a2)
{
  HIBYTE(v4[2]) = 20;
  strcpy((char *)v4, "while importing data");
  sub_2158B1F44(a2, v4, (uint64_t)v5);
  sub_215838F34(v5, (uint64_t)v15);
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v3 + 48))(v3, v15);
  if (v24)
  {
    if (!v23) {
      goto LABEL_6;
    }
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_6:
        if (!v18) {
          goto LABEL_9;
        }
LABEL_7:
        if (v17 < 0) {
          operator delete(v16);
        }
        goto LABEL_9;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v19);
    if (!v18) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
LABEL_9:
  if (!v14) {
    goto LABEL_16;
  }
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_13;
      }
LABEL_22:
      operator delete(v9);
      if (!v8) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    operator delete(v11);
    if (v10 < 0) {
      goto LABEL_22;
    }
  }
LABEL_13:
  if (!v8) {
    goto LABEL_16;
  }
LABEL_14:
  if (v7 < 0) {
    operator delete(__p);
  }
LABEL_16:
  if (SHIBYTE(v4[2]) < 0) {
    operator delete(v4[0]);
  }
}

void sub_2158B3354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,int a39,__int16 a40,char a41,char a42)
{
  if ((_BYTE)a40)
  {
    if (a38)
    {
      if (a37 < 0) {
        operator delete(__p);
      }
      if (a30 < 0) {
        operator delete(a25);
      }
    }
    if (a24 && a23 < 0) {
      operator delete(a18);
    }
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158B3410(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12FileImporter6CreateERKNSt3__14__fs10filesystem4pathENS3_8optionalINS1_1"
                     "7FileImportOptionsEEENS9_INS3_8functionIFvRKNS_3esn5ErrorEEEEEERKNS_3kit2fs11IFilesystemEENK3$_0clE"
                     "vEUlRKNSD_6ErrorCINSK_3viz11IOErrorCodeEEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12FileImporter6CreateERKNSt3__14__fs10filesystem4pathENS3_8opt"
                                "ionalINS1_17FileImportOptionsEEENS9_INS3_8functionIFvRKNS_3esn5ErrorEEEEEERKNS_3kit2fs11"
                                "IFilesystemEENK3$_0clEvEUlRKNSD_6ErrorCINSK_3viz11IOErrorCodeEEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12FileImporter6CreateERKNSt3__14__fs10filesystem4pathENS3_8optionalINS1_17FileImportOptionsEEENS9_INS3_8functionIFvRKNS_3esn5ErrorEEEEEERKNS_3kit2fs11IFilesystemEENK3$_0clEvEUlRKNSD_6ErrorCINSK_3viz11IOErrorCodeEEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12FileImporter6CreateERKNSt3__14__fs10filesystem4pathENS3_8optionalINS1_17FileImportOptionsEEENS9_INS3_8functionIFvRKNS_3esn5ErrorEEEEEERKNS_3kit2fs11IFilesystemEENK3$_0clEvEUlRKNSD_6ErrorCINSK_3viz11IOErrorCodeEEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158B3480()
{
  return &unk_26C665C68;
}

void *sub_2158B348C(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  int64_t v5 = v4 - *a2;
  if (v4 != *a2)
  {
    unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * (v5 >> 3);
    if (v6 >= 0x666666666666667) {
      sub_215738AC0();
    }
    char v7 = operator new(v5);
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[5 * v6];
    do
    {
      *char v7 = *(void *)v3;
      uint64_t v8 = *(void *)(v3 + 8);
      v7[1] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      if (atomic_exchange_explicit((atomic_uchar *volatile)(v3 + 32), 1u, memory_order_acquire))
      {
        int v9 = 0;
        do
        {
          if (v9)
          {
            timespec __rqtp = (timespec)xmmword_215E98470;
            nanosleep(&__rqtp, 0);
          }
          --v9;
        }
        while (atomic_exchange_explicit((atomic_uchar *volatile)(v3 + 32), 1u, memory_order_acquire));
      }
      uint64_t v10 = *(void *)(v3 + 16);
      uint64_t v11 = *(void *)(v3 + 24);
      if (v11) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v11 + 8), 1u, memory_order_relaxed);
      }
      atomic_store(0, (unsigned __int8 *)(v3 + 32));
      uint64_t v7[2] = v10;
      v7[3] = v11;
      *((unsigned char *)v7 + 32) = 0;
      v3 += 40;
      v7 += 5;
    }
    while (v3 != v4);
    a1[1] = v7;
  }
  return a1;
}

void sub_2158B35CC(_Unwind_Exception *exception_object)
{
  if (*v1)
  {
    sub_21577997C(v1);
    operator delete((void *)*v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158B35F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  if (*(unsigned char *)a2)
  {
    *(unsigned char *)a2 = 0;
    int64_t v5 = *(void ***)(a2 + 8);
    if (*(unsigned char *)(v4 + 24)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_215731D94(*v5, (uint64_t)"nullopt", 7);
    uint64_t v7 = a1[1];
    if (!*(unsigned char *)a2) {
      goto LABEL_14;
    }
LABEL_8:
    *(unsigned char *)a2 = 0;
    uint64_t v8 = *(void ***)(a2 + 8);
    if (!*(unsigned char *)(v7 + 16)) {
      goto LABEL_15;
    }
LABEL_9:
    sub_215731D94(*v8, (uint64_t)"{", 1);
    v16[0] = 1;
    char v17 = v8;
    char v18 = (char *)v14;
    sub_2158B3AA8((uint64_t)v16, v7);
    sub_215731D94(*v8, (uint64_t)"}", 1);
    int v9 = (void *)a1[2];
    if (*(unsigned char *)a2) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  *(unsigned char *)a2 = 0;
  int64_t v5 = *(void ***)(a2 + 8);
  if (!*(unsigned char *)(v4 + 24)) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v6 = *v5;
  if ((uint64_t)(*(void *)(v4 + 8) - *(void *)v4) > 815)
  {
    sub_215731D94(v6, (uint64_t)"{", 1);
    uint64_t v12 = *(void *)v4 + 768;
    v14[0] = *(void *)v4;
    v14[1] = v12;
    sub_215731D94(*v5, (uint64_t)"{", 1);
    v16[0] = 1;
    char v17 = v5;
    char v18 = &v15;
    sub_2158B3944((uint64_t)v14, (uint64_t)v16);
  }
  sub_215731D94(v6, (uint64_t)"{}", 2);
  uint64_t v7 = a1[1];
  if (*(unsigned char *)a2) {
    goto LABEL_8;
  }
LABEL_14:
  sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  *(unsigned char *)a2 = 0;
  uint64_t v8 = *(void ***)(a2 + 8);
  if (*(unsigned char *)(v7 + 16)) {
    goto LABEL_9;
  }
LABEL_15:
  sub_215731D94(*v8, (uint64_t)"nullopt", 7);
  int v9 = (void *)a1[2];
  if (!*(unsigned char *)a2) {
LABEL_10:
  }
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
LABEL_11:
  *(unsigned char *)a2 = 0;
  switch(*v9)
  {
    case 0:
      uint64_t v10 = "Default";
      uint64_t v11 = 7;
      break;
    case 1:
      uint64_t v10 = "FlushSequenceAndDataFilesLazily";
      uint64_t v11 = 31;
      break;
    case 2:
      uint64_t v10 = "Flush";
      uint64_t v11 = 5;
      break;
    case 3:
      uint64_t v10 = "FlushSequenceAndDataFilesImmediately";
      uint64_t v11 = 36;
      break;
    default:
      uint64_t v10 = "invalid FileBehavior value";
      uint64_t v11 = 26;
      break;
  }
  return sub_215731D94(**(void ***)(a2 + 8), (uint64_t)v10, v11);
}

void sub_2158B3944(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)a2) {
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  }
  *(unsigned char *)a2 = 0;
  sub_215AE91B0();
}

void *sub_2158B3A60(uint64_t a1, uint64_t a2)
{
  return sub_215ABC228(**(void ***)(*(void *)a1 + 8), a2);
}

void *sub_2158B3A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  if (v2) {
    uint64_t v3 = "f(){*}";
  }
  else {
    uint64_t v3 = "f(){nullptr}";
  }
  uint64_t v4 = **(void ***)(*(void *)a1 + 8);
  if (v2) {
    uint64_t v5 = 6;
  }
  else {
    uint64_t v5 = 12;
  }
  return sub_215731D94(v4, (uint64_t)v3, v5);
}

void sub_2158B3AA8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    *(unsigned char *)a1 = 0;
    uint64_t v4 = *(void ***)(a1 + 8);
    if (*(unsigned char *)(a2 + 8))
    {
LABEL_3:
      std::to_string(&v8, *(void *)a2);
      if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v5 = &v8;
      }
      else {
        uint64_t v5 = (std::string *)v8.__r_.__value_.__r.__words[0];
      }
      if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v8.__r_.__value_.__l.__size_;
      }
      sub_215731D94(*v4, (uint64_t)v5, size);
      if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v8.__r_.__value_.__l.__data_);
      }
      return;
    }
  }
  else
  {
    sub_215731D94(**(void ***)(a1 + 8), (uint64_t)",", 1);
    *(unsigned char *)a1 = 0;
    uint64_t v4 = *(void ***)(a1 + 8);
    if (*(unsigned char *)(a2 + 8)) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = *v4;

  sub_215731D94(v7, (uint64_t)"nullopt", 7);
}

void sub_2158B3B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158B3BB0(uint64_t a1, void **a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 24))
  {
    uint64_t v3 = *a2;
    if ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) > 767)
    {
      sub_215731D94(v3, (uint64_t)"{", 1);
      sub_215AE91B0();
    }
    uint64_t v4 = "{}";
    uint64_t v5 = 2;
  }
  else
  {
    uint64_t v3 = *a2;
    uint64_t v4 = "nullopt";
    uint64_t v5 = 7;
  }
  return sub_215731D94(v3, (uint64_t)v4, v5);
}

void *sub_2158B3CD4(uint64_t a1, void **a2, void *a3)
{
  uint64_t v3 = *a2;
  if ((uint64_t)(a3[1] - *a3) > 799)
  {
    sub_215731D94(v3, (uint64_t)"{", 1);
    sub_215731D94(*a2, (uint64_t)"{", 1);
    sub_215AE91B0();
  }

  return sub_215731D94(v3, (uint64_t)"{}", 2);
}

void sub_2158B3E88(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C665C98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2158B3EA8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C665C98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2158B3EFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    if (*(unsigned char *)(v2 + 112)) {
      (*(void (**)(void))(**(void **)(*(void *)(v2 + 288) + 8) + 24))(*(void *)(*(void *)(v2 + 288) + 8));
    }
    if (*(unsigned char *)(v2 + 456)) {
      sub_215ACF4B4(v2 + 416, 0, 0);
    }
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_2158B3FD8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 120))
  {
    *(unsigned char *)(a1 + 120) = 1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  else
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E488, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788E488))
    {
      char v13 = std::generic_category();
      qword_26788E4A8 = 22;
      qword_26788E4B0 = (uint64_t)v13;
      __cxa_guard_release(&qword_26788E488);
    }
    if (*(void *)(a2 + 8) == qword_26788E4B0 && *(_DWORD *)a2 == qword_26788E4A8)
    {
      sub_215741BFC(__dst, (long long *)(a2 + 16));
      sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)&v33);
      *(_OWORD *)a1 = v33;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v43)
      {
        *(unsigned char *)(a1 + 40) = 0;
        int v7 = v36;
        if (v36)
        {
          *(_OWORD *)(a1 + 16) = v34;
          *(void *)(a1 + 32) = v35;
          uint64_t v35 = 0;
          long long v34 = 0uLL;
          *(unsigned char *)(a1 + 40) = 1;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v42)
        {
          uint64_t v8 = v39;
          *(void *)(a1 + 64) = v38;
          *(_OWORD *)(a1 + 48) = v37;
          long long v37 = 0uLL;
          *(void *)(a1 + 72) = v8;
          *(_OWORD *)(a1 + 80) = v40;
          *(void *)(a1 + 96) = v41;
          uint64_t v38 = 0;
          long long v40 = 0uLL;
          uint64_t v41 = 0;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        *(unsigned char *)(a1 + 120) = 0;
        if (v7 && SHIBYTE(v35) < 0) {
          operator delete((void *)v34);
        }
      }
      else
      {
        *(unsigned char *)(a1 + 120) = 0;
      }
      if (v32)
      {
        if (v31)
        {
          if (v30 < 0) {
            operator delete(__p);
          }
          if (v28 < 0) {
            operator delete(v27);
          }
        }
        if (v26 && v25 < 0) {
          operator delete(__dst[0]);
        }
      }
    }
    else
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E490, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788E490))
      {
        char v14 = sub_215AB74CC();
        qword_26788E4B8 = 1;
        qword_26788E4C0 = (uint64_t)v14;
        __cxa_guard_release(&qword_26788E490);
      }
      uint64_t v5 = *(void *)(a2 + 8);
      if (qword_26788E4C0 == v5)
      {
        if (*(_DWORD *)a2 <= 0xDu)
        {
          if ((*(_DWORD *)a2 - 1) > 0xCu) {
            unsigned int v9 = 0;
          }
          else {
            unsigned int v9 = dword_215EAF2E4[(char)(*(_DWORD *)a2 - 1)];
          }
        }
        else
        {
          unsigned int v9 = 1;
        }
        sub_215741BFC(v15, (long long *)(a2 + 16));
        sub_21573FCF8(v9, (long long *)v15, (uint64_t)&v33);
        *(_OWORD *)a1 = v33;
        *(unsigned char *)(a1 + 16) = 0;
        *(unsigned char *)(a1 + 112) = 0;
        if (v43)
        {
          *(unsigned char *)(a1 + 40) = 0;
          int v11 = v36;
          if (v36)
          {
            *(_OWORD *)(a1 + 16) = v34;
            *(void *)(a1 + 32) = v35;
            uint64_t v35 = 0;
            long long v34 = 0uLL;
            *(unsigned char *)(a1 + 40) = 1;
          }
          *(unsigned char *)(a1 + 48) = 0;
          *(unsigned char *)(a1 + 104) = 0;
          if (v42)
          {
            uint64_t v12 = v39;
            *(void *)(a1 + 64) = v38;
            *(_OWORD *)(a1 + 48) = v37;
            long long v37 = 0uLL;
            *(void *)(a1 + 72) = v12;
            *(_OWORD *)(a1 + 80) = v40;
            *(void *)(a1 + 96) = v41;
            uint64_t v38 = 0;
            long long v40 = 0uLL;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 104) = 1;
          }
          *(unsigned char *)(a1 + 112) = 1;
          *(unsigned char *)(a1 + 120) = 0;
          if (v11 && SHIBYTE(v35) < 0) {
            operator delete((void *)v34);
          }
        }
        else
        {
          *(unsigned char *)(a1 + 120) = 0;
        }
        if (v23)
        {
          if (v22)
          {
            if (v21 < 0) {
              operator delete(v20);
            }
            if (v19 < 0) {
              operator delete(v18);
            }
          }
          if (v17 && v16 < 0) {
            operator delete(v15[0]);
          }
        }
      }
      else
      {
        *(unsigned char *)a1 = 0;
        int v6 = *(unsigned __int8 *)(a2 + 120);
        *(unsigned char *)(a1 + 120) = v6;
        if (v6)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v5;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a2 + 8) = 0;
          *(void *)(a2 + 16) = 0;
          *(void *)a2 = 0;
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = 0;
          *(unsigned char *)(a1 + 112) = 0;
          if (*(unsigned char *)(a2 + 112))
          {
            *(unsigned char *)(a1 + 40) = 0;
            if (*(unsigned char *)(a2 + 40))
            {
              *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              *(void *)(a2 + 24) = 0;
              *(void *)(a2 + 32) = 0;
              *(void *)(a2 + 16) = 0;
              *(unsigned char *)(a1 + 40) = 1;
            }
            *(unsigned char *)(a1 + 48) = 0;
            *(unsigned char *)(a1 + 104) = 0;
            if (*(unsigned char *)(a2 + 104))
            {
              uint64_t v10 = *(void *)(a2 + 72);
              *(void *)(a1 + 64) = *(void *)(a2 + 64);
              *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
              *(void *)(a2 + 56) = 0;
              *(void *)(a2 + 64) = 0;
              *(void *)(a2 + 48) = 0;
              *(void *)(a1 + 72) = v10;
              *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
              *(void *)(a1 + 96) = *(void *)(a2 + 96);
              *(void *)(a2 + 80) = 0;
              *(void *)(a2 + 88) = 0;
              *(void *)(a2 + 96) = 0;
              *(unsigned char *)(a1 + 104) = 1;
            }
            *(unsigned char *)(a1 + 112) = 1;
          }
        }
      }
    }
  }
}

void sub_2158B4498(_Unwind_Exception *a1)
{
}

void sub_2158B44B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158B44C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_2158B44D8(void *a1)
{
  *a1 = &unk_26C665CE8;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_2158B4588(void *a1)
{
  *a1 = &unk_26C665CE8;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2158B464C(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C665CE8;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_2158B4710(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158B4724(uint64_t result, void *a2)
{
  *a2 = &unk_26C665CE8;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2158B47F4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_2158B4858(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_2158B490C(uint64_t a1, char *a2)
{
  HIBYTE(v4[2]) = 20;
  strcpy((char *)v4, "while importing data");
  sub_2158B1F44(a2, v4, (uint64_t)v5);
  sub_215838F34(v5, (uint64_t)v15);
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v3 + 48))(v3, v15);
  if (v24)
  {
    if (!v23) {
      goto LABEL_6;
    }
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_6:
        if (!v18) {
          goto LABEL_9;
        }
LABEL_7:
        if (v17 < 0) {
          operator delete(v16);
        }
        goto LABEL_9;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v19);
    if (!v18) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
LABEL_9:
  if (!v14) {
    goto LABEL_16;
  }
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_13;
      }
LABEL_22:
      operator delete(v9);
      if (!v8) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    operator delete(v11);
    if (v10 < 0) {
      goto LABEL_22;
    }
  }
LABEL_13:
  if (!v8) {
    goto LABEL_16;
  }
LABEL_14:
  if (v7 < 0) {
    operator delete(__p);
  }
LABEL_16:
  if (SHIBYTE(v4[2]) < 0) {
    operator delete(v4[0]);
  }
}

void sub_2158B4A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,int a39,__int16 a40,char a41,char a42)
{
  if ((_BYTE)a40)
  {
    if (a38)
    {
      if (a37 < 0) {
        operator delete(__p);
      }
      if (a30 < 0) {
        operator delete(a25);
      }
    }
    if (a24 && a23 < 0) {
      operator delete(a18);
    }
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158B4B48(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger6ImportERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17FileImportOpt"
                     "ionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEERNS_3kit2fs11IFilesystemEENK3$_0clEvEUlRKNSC_6Erro"
                     "rCINSJ_3viz11IOErrorCodeEEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger6ImportERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17Fi"
                                "leImportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEERNS_3kit2fs11IFilesystemEENK"
                                "3$_0clEvEUlRKNSC_6ErrorCINSJ_3viz11IOErrorCodeEEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger6ImportERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17FileImportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEERNS_3kit2fs11IFilesystemEENK3$_0clEvEUlRKNSC_6ErrorCINSJ_3viz11IOErrorCodeEEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger6ImportERKNSt3__14__fs10filesystem4pathENS2_8optionalINS1_17FileImportOptionsEEENS8_INS2_8functionIFvRKNS_3esn5ErrorEEEEEERNS_3kit2fs11IFilesystemEENK3$_0clEvEUlRKNSC_6ErrorCINSJ_3viz11IOErrorCodeEEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158B4BB8()
{
  return &unk_26C665D48;
}

void sub_2158B4BC4(char **a1, unint64_t a2)
{
  uint64_t v2 = *a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) < a2)
  {
    if (a2 >= 0x666666666666667) {
      sub_215738AC0();
    }
    uint64_t v4 = a1[1];
    uint64_t v5 = 40 * a2;
    int v6 = (char *)operator new(40 * a2);
    char v7 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *a1 = v7;
      a1[1] = v7;
      a1[2] = &v6[v5];
      if (v2) {
LABEL_27:
      }
        operator delete(v2);
    }
    else
    {
      char v20 = &v6[v5];
      char v8 = &v6[v4 - v2];
      unsigned int v9 = v4;
      char v10 = v8;
      do
      {
        uint64_t v11 = *((void *)v9 - 5);
        v9 -= 40;
        *((void *)v10 - 5) = v11;
        v10 -= 40;
        uint64_t v12 = *((void *)v9 + 1);
        *((void *)v10 + 1) = v12;
        if (v12) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
        }
        char v13 = v4 - 8;
        if (atomic_exchange_explicit(v4 - 8, 1u, memory_order_acquire))
        {
          int v14 = 0;
          do
          {
            if (v14)
            {
              timespec __rqtp = (timespec)xmmword_215E98470;
              nanosleep(&__rqtp, 0);
            }
            --v14;
          }
          while (atomic_exchange_explicit(v13, 1u, memory_order_acquire));
        }
        uint64_t v15 = *((void *)v4 - 3);
        uint64_t v16 = *((void *)v4 - 2);
        if (v16) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v16 + 8), 1u, memory_order_relaxed);
        }
        atomic_store(0, (unsigned __int8 *)v13);
        *((void *)v8 - 3) = v15;
        *((void *)v8 - 2) = v16;
        *(v8 - 8) = 0;
        char v8 = v10;
        uint64_t v4 = v9;
      }
      while (v9 != v2);
      char v17 = *a1;
      uint64_t v2 = a1[1];
      *a1 = v10;
      a1[1] = v7;
      a1[2] = v20;
      if (v2 != v17)
      {
        do
        {
          char v18 = (atomic_uint *)*((void *)v2 - 2);
          if (v18)
          {
            if (atomic_fetch_add(v18 + 2, 0xFFFFFFFF) == 1)
            {
              (*(void (**)(atomic_uint *))(*(void *)v18 + 16))(v18);
              if (atomic_fetch_add(v18 + 3, 0xFFFFFFFF) == 1) {
                (*(void (**)(atomic_uint *))(*(void *)v18 + 24))(v18);
              }
            }
          }
          char v19 = (std::__shared_weak_count *)*((void *)v2 - 4);
          if (v19)
          {
            if (!atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
              std::__shared_weak_count::__release_weak(v19);
            }
          }
          v2 -= 40;
        }
        while (v2 != v17);
        uint64_t v2 = v17;
      }
      if (v2) {
        goto LABEL_27;
      }
    }
  }
}

char **sub_2158B4E34(void *a1, void *a2, char **a3)
{
  unint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    while (1)
    {
      int v6 = operator new(0x40uLL);
      char v7 = v6;
      v6[1] = 0;
      double v6[2] = 0;
      *int v6 = &unk_26C658088;
      v6[3] = *v5;
      char v8 = v6 + 3;
      uint64_t v9 = v5[1];
      v6[4] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      v6[5] = &unk_26C678D20;
      v6[6] = v5[3];
      uint64_t v10 = v5[4];
      v6[7] = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v41[0] = 0;
      unint64_t v12 = (unint64_t)v3[1];
      unint64_t v11 = (unint64_t)v3[2];
      if (v12 < v11)
      {
        *(void *)unint64_t v12 = v8;
        *(void *)(v12 + 8) = v6;
        if (atomic_exchange_explicit(v41, 1u, memory_order_acquire))
        {
          int v13 = 0;
          do
          {
            if (v13)
            {
              timespec __rqtp = (timespec)xmmword_215E98470;
              nanosleep(&__rqtp, 0);
            }
            --v13;
          }
          while (atomic_exchange_explicit(v41, 1u, memory_order_acquire));
        }
        atomic_store(0, (unsigned __int8 *)v41);
        *(void *)(v12 + 16) = 0;
        *(void *)(v12 + 24) = 0;
        *(unsigned char *)(v12 + 32) = 0;
        char v19 = (char *)(v12 + 40);
        v3[1] = (char *)(v12 + 40);
        goto LABEL_55;
      }
      unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v12 - (void)*v3) >> 3);
      unint64_t v15 = v14 + 1;
      if (v14 + 1 > 0x666666666666666) {
        sub_215738AC0();
      }
      unint64_t v16 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v11 - (void)*v3) >> 3);
      if (2 * v16 > v15) {
        unint64_t v15 = 2 * v16;
      }
      unint64_t v17 = v16 >= 0x333333333333333 ? 0x666666666666666 : v15;
      if (v17)
      {
        if (v17 > 0x666666666666666) {
          sub_215738AD8();
        }
        char v18 = (char *)operator new(40 * v17);
      }
      else
      {
        char v18 = 0;
      }
      char v20 = &v18[40 * v14];
      *(void *)char v20 = v8;
      *((void *)v20 + 1) = v7;
      if (atomic_exchange_explicit(v41, 1u, memory_order_acquire))
      {
        int v21 = 0;
        do
        {
          if (v21)
          {
            timespec __rqtp = (timespec)xmmword_215E98470;
            nanosleep(&__rqtp, 0);
          }
          --v21;
        }
        while (atomic_exchange_explicit(v41, 1u, memory_order_acquire));
      }
      char v22 = &v18[40 * v17];
      char v23 = &v18[40 * v14];
      atomic_store(0, (unsigned __int8 *)v41);
      *((void *)v23 + 2) = 0;
      *((void *)v23 + 3) = 0;
      v23[32] = 0;
      char v19 = v20 + 40;
      unint64_t v3 = a3;
      char v24 = *a3;
      char v25 = a3[1];
      if (v25 != *a3) {
        break;
      }
      *a3 = v20;
      a3[1] = v19;
      a3[2] = v22;
      uint64_t v4 = a2;
      if (v25) {
        goto LABEL_54;
      }
LABEL_55:
      v3[1] = v19;
      v5 += 5;
      if (v5 == v4) {
        return v3;
      }
    }
    uint64_t v39 = v20 + 40;
    char v26 = a3[1];
    char v27 = &v18[40 * v14];
    do
    {
      uint64_t v28 = *((void *)v26 - 5);
      v26 -= 40;
      *((void *)v27 - 5) = v28;
      v27 -= 40;
      uint64_t v29 = *((void *)v26 + 1);
      *((void *)v27 + 1) = v29;
      if (v29) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v29 + 8), 1uLL, memory_order_relaxed);
      }
      char v30 = v25 - 8;
      if (atomic_exchange_explicit(v25 - 8, 1u, memory_order_acquire))
      {
        int v31 = 0;
        do
        {
          if (v31)
          {
            timespec __rqtp = (timespec)xmmword_215E98470;
            nanosleep(&__rqtp, 0);
          }
          --v31;
        }
        while (atomic_exchange_explicit(v30, 1u, memory_order_acquire));
      }
      uint64_t v32 = *((void *)v25 - 3);
      uint64_t v33 = *((void *)v25 - 2);
      if (v33) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v33 + 8), 1u, memory_order_relaxed);
      }
      atomic_store(0, (unsigned __int8 *)v30);
      *((void *)v20 - 3) = v32;
      *((void *)v20 - 2) = v33;
      *(v20 - 8) = 0;
      char v20 = v27;
      char v25 = v26;
    }
    while (v26 != v24);
    char v19 = v39;
    unint64_t v3 = a3;
    char v25 = *a3;
    long long v34 = a3[1];
    *a3 = v27;
    a3[1] = v39;
    a3[2] = v22;
    if (v34 != v25)
    {
      do
      {
        uint64_t v35 = (atomic_uint *)*((void *)v34 - 2);
        if (v35)
        {
          if (atomic_fetch_add(v35 + 2, 0xFFFFFFFF) == 1)
          {
            (*(void (**)(atomic_uint *))(*(void *)v35 + 16))(v35);
            if (atomic_fetch_add(v35 + 3, 0xFFFFFFFF) == 1) {
              (*(void (**)(atomic_uint *))(*(void *)v35 + 24))(v35);
            }
          }
        }
        unsigned __int8 v36 = (std::__shared_weak_count *)*((void *)v34 - 4);
        if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
        v34 -= 40;
      }
      while (v34 != v25);
      char v19 = v39;
    }
    uint64_t v4 = a2;
    if (!v25) {
      goto LABEL_55;
    }
LABEL_54:
    operator delete(v25);
    goto LABEL_55;
  }
  return v3;
}

void sub_2158B5394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_2158B2AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158B53AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_2158B2AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

char **sub_2158B53D0(char **a1)
{
  if (*((unsigned char *)a1 + 144) || !*((unsigned char *)a1 + 136)) {
    goto LABEL_2;
  }
  if (!*((unsigned char *)a1 + 128)) {
    goto LABEL_20;
  }
  if (*((char *)a1 + 127) < 0)
  {
    operator delete(a1[13]);
    if ((*((char *)a1 + 95) & 0x80000000) == 0)
    {
LABEL_20:
      if (*((unsigned char *)a1 + 64)) {
        goto LABEL_21;
      }
      goto LABEL_2;
    }
  }
  else if ((*((char *)a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(a1[9]);
  if (*((unsigned char *)a1 + 64))
  {
LABEL_21:
    if (*((char *)a1 + 63) < 0) {
      operator delete(a1[5]);
    }
  }
LABEL_2:
  uint64_t v2 = *a1;
  if (!*a1) {
    return a1;
  }
  unint64_t v3 = a1[1];
  uint64_t v4 = *a1;
  if (v3 == v2) {
    goto LABEL_14;
  }
  do
  {
    uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
    if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      int v6 = (std::__shared_weak_count *)*((void *)v3 - 4);
      if (!v6) {
        goto LABEL_5;
      }
    }
    else
    {
      int v6 = (std::__shared_weak_count *)*((void *)v3 - 4);
      if (!v6) {
        goto LABEL_5;
      }
    }
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
LABEL_5:
    v3 -= 40;
  }
  while (v3 != v2);
  uint64_t v4 = *a1;
LABEL_14:
  a1[1] = v2;
  operator delete(v4);
  return a1;
}

uint64_t sub_2158B553C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_12;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_12:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_13;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_13:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

int *sub_2158B5674(uint64_t *a1, int **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  int v6 = **a2;
  if (v6)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    uint64_t v5 = *a2;
    int v6 = **a2;
  }
  char v8 = a2[1];
  char v7 = a2[2];
  *uint64_t v5 = v6 + 1;
  sub_215731D94(v8, *(void *)&v7[4 * v6], *(void *)&v7[4 * v6 + 2]);
  sub_215731D94(v8, (uint64_t)" = ", 3);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 23);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = (unsigned char *)v4;
  }
  else {
    uint64_t v10 = *(unsigned char **)v4;
  }
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(v4 + 8);
  }
  sub_2158B28A4(a2[1], v10, &v10[v9], 0x22u, 0x5Cu);
  uint64_t v11 = a1[1];
  unint64_t v12 = *a2;
  int v13 = **a2;
  if (v13)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    unint64_t v12 = *a2;
    int v13 = **a2;
  }
  unint64_t v15 = a2[1];
  unint64_t v14 = a2[2];
  int *v12 = v13 + 1;
  sub_215731D94(v15, *(void *)&v14[4 * v13], *(void *)&v14[4 * v13 + 2]);
  sub_215731D94(v15, (uint64_t)" = ", 3);
  uint64_t result = a2[1];

  sub_2158AB518(result, v11);
  return result;
}

void sub_2158B579C()
{
  qword_26788E4F8 = 0;
  qword_26788E500 = 0;
  qword_26788E508 = 0;
  uint64_t v0 = sub_215E0CF48();
  if (v0)
  {
    uint64_t v2 = v1;
    unint64_t v3 = &v1[v0];
    do
    {
      int v5 = *v2;
      uint64_t v6 = sub_2157FC978(*v2);
      if ((v6 & 0xFF00000000) != 0)
      {
        int v7 = 1647392256;
        int v8 = 103;
        switch((int)v6)
        {
          case 1:
            if (v5 == 1278226488)
            {
              uint64_t v9 = 0;
              goto LABEL_40;
            }
            break;
          case 2:
            goto LABEL_36;
          case 3:
            if (v5 == 1278226536) {
              goto LABEL_37;
            }
            break;
          case 4:
            if (v5 == 1278226534) {
              goto LABEL_37;
            }
            break;
          case 5:
            int v10 = 56;
            goto LABEL_25;
          case 7:
            int v10 = 104;
            goto LABEL_25;
          case 8:
            int v10 = 102;
LABEL_25:
            if (v5 == (v10 | 0x32433000)) {
              goto LABEL_37;
            }
            break;
          case 17:
            if (v5 == 842285639) {
              goto LABEL_37;
            }
            break;
          case 21:
            int v7 = 0;
            int v8 = 24;
LABEL_36:
            if (v5 == (v7 | v8)) {
              goto LABEL_37;
            }
            break;
          case 22:
            if (v5 == 1647589490) {
              goto LABEL_37;
            }
            break;
          case 25:
            if (v5 == 1111970369) {
              goto LABEL_37;
            }
            break;
          case 29:
            if (v5 == 1380401729) {
              goto LABEL_37;
            }
            break;
          case 31:
            if (v5 == 1380411457) {
              goto LABEL_37;
            }
            break;
          case 32:
            if (v5 == 1380410945) {
              goto LABEL_37;
            }
            break;
          case 33:
            if (v5 == 1094862674) {
              goto LABEL_37;
            }
            break;
          case 37:
            if (v5 == 32) {
              goto LABEL_37;
            }
            break;
          case 38:
            if (v5 != 1647719521) {
              break;
            }
LABEL_37:
            int v11 = v6 - 2;
            unint64_t v12 = (char *)&v33;
            if ((v6 - 2) <= 0x24)
            {
              unint64_t v12 = (char *)&v33;
              if ((0x18E898806FuLL >> v11))
              {
                uint64_t v9 = qword_215EB3068[v11];
LABEL_40:
                unint64_t v12 = (char *)&v32[v9];
              }
            }
            if (v12 - (char *)v32 == 68) {
              break;
            }
            uint64_t v13 = qword_26788E500;
            if (qword_26788E500 < (unint64_t)qword_26788E508)
            {
              *(_DWORD *)qword_26788E500 = v5;
              uint64_t v4 = v13 + 4;
              goto LABEL_4;
            }
            unint64_t v14 = (void *)qword_26788E4F8;
            uint64_t v15 = qword_26788E500 - qword_26788E4F8;
            uint64_t v16 = (qword_26788E500 - qword_26788E4F8) >> 2;
            unint64_t v17 = v16 + 1;
            if ((unint64_t)(v16 + 1) >> 62) {
              sub_215738AC0();
            }
            uint64_t v18 = qword_26788E508 - qword_26788E4F8;
            if ((qword_26788E508 - qword_26788E4F8) >> 1 > v17) {
              unint64_t v17 = v18 >> 1;
            }
            if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v19 = v17;
            }
            if (!v19)
            {
              char v20 = 0;
              int v21 = (int *)(4 * v16);
              *(_DWORD *)(4 * v16) = v5;
              uint64_t v4 = 4 * v16 + 4;
              uint64_t v22 = v13 - (void)v14;
              if ((void *)v13 == v14) {
                goto LABEL_62;
              }
LABEL_56:
              unint64_t v23 = v22 - 4;
              if (v23 < 0x2C) {
                goto LABEL_69;
              }
              if ((unint64_t)(v13 - (void)v20 - v15) < 0x20) {
                goto LABEL_69;
              }
              uint64_t v24 = (v23 >> 2) + 1;
              uint64_t v25 = 4 * (v24 & 0x7FFFFFFFFFFFFFF8);
              uint64_t v26 = v13 - v25;
              int v21 = (int *)((char *)v21 - v25);
              char v27 = &v20[4 * v16 - 16];
              uint64_t v28 = (long long *)(v13 - 16);
              uint64_t v29 = v24 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v30 = *v28;
                *((_OWORD *)v27 - 1) = *(v28 - 1);
                *(_OWORD *)char v27 = v30;
                v27 -= 32;
                v28 -= 2;
                v29 -= 8;
              }
              while (v29);
              uint64_t v13 = v26;
              if (v24 != (v24 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_69:
                do
                {
                  int v31 = *(_DWORD *)(v13 - 4);
                  v13 -= 4;
                  *--int v21 = v31;
                }
                while ((void *)v13 != v14);
              }
              goto LABEL_62;
            }
            if (v19 >> 62) {
              sub_215738AD8();
            }
            char v20 = (char *)operator new(4 * v19);
            int v21 = (int *)&v20[4 * v16];
            int *v21 = v5;
            uint64_t v4 = (uint64_t)(v21 + 1);
            uint64_t v22 = v13 - (void)v14;
            if ((void *)v13 != v14) {
              goto LABEL_56;
            }
LABEL_62:
            qword_26788E4F8 = (uint64_t)v21;
            qword_26788E500 = v4;
            qword_26788E508 = (uint64_t)&v20[4 * v19];
            if (v14) {
              operator delete(v14);
            }
LABEL_4:
            qword_26788E500 = v4;
            break;
          default:
            break;
        }
      }
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_2158B5B94(_Unwind_Exception *exception_object)
{
  if (qword_26788E4F8)
  {
    qword_26788E500 = qword_26788E4F8;
    operator delete((void *)qword_26788E4F8);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158B5C58()
{
  qword_26788E510 = 0;
  qword_26788E518 = 0;
  qword_26788E520 = 0;
  uint64_t v0 = sub_215E0CF48();
  if (v0)
  {
    uint64_t v2 = v1;
    unint64_t v3 = &v1[v0];
    while (1)
    {
      int v5 = *v2;
      uint64_t v6 = sub_2157FC978(*v2);
      if ((v6 & 0xFF00000000) == 0) {
        goto LABEL_5;
      }
      int v7 = v6 - 1;
      int v8 = (char *)&v29;
      if ((v6 - 1) <= 0x25)
      {
        int v8 = (char *)&v29;
        if ((0x31D13100DFuLL >> v7)) {
          int v8 = (char *)&v28[qword_215EB3190[v7]];
        }
      }
      if (v8 - (char *)v28 == 68) {
        goto LABEL_5;
      }
      uint64_t v9 = qword_26788E518;
      if (qword_26788E518 >= (unint64_t)qword_26788E520) {
        break;
      }
      *(_DWORD *)qword_26788E518 = v5;
      uint64_t v4 = v9 + 4;
LABEL_4:
      qword_26788E518 = v4;
LABEL_5:
      if (++v2 == v3) {
        return;
      }
    }
    int v10 = (void *)qword_26788E510;
    uint64_t v11 = qword_26788E518 - qword_26788E510;
    uint64_t v12 = (qword_26788E518 - qword_26788E510) >> 2;
    unint64_t v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 62) {
      sub_215738AC0();
    }
    uint64_t v14 = qword_26788E520 - qword_26788E510;
    if ((qword_26788E520 - qword_26788E510) >> 1 > v13) {
      unint64_t v13 = v14 >> 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15)
    {
      if (v15 >> 62) {
        sub_215738AD8();
      }
      uint64_t v16 = (char *)operator new(4 * v15);
      unint64_t v17 = (int *)&v16[4 * v12];
      int *v17 = v5;
      uint64_t v4 = (uint64_t)(v17 + 1);
      uint64_t v18 = v9 - (void)v10;
      if ((void *)v9 == v10) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v17 = (int *)(4 * v12);
      *(_DWORD *)(4 * v12) = v5;
      uint64_t v4 = 4 * v12 + 4;
      uint64_t v18 = v9 - (void)v10;
      if ((void *)v9 == v10)
      {
LABEL_29:
        qword_26788E510 = (uint64_t)v17;
        qword_26788E518 = v4;
        qword_26788E520 = (uint64_t)&v16[4 * v15];
        if (v10) {
          operator delete(v10);
        }
        goto LABEL_4;
      }
    }
    unint64_t v19 = v18 - 4;
    if (v19 < 0x2C) {
      goto LABEL_36;
    }
    if ((unint64_t)(v9 - (void)v16 - v11) < 0x20) {
      goto LABEL_36;
    }
    uint64_t v20 = (v19 >> 2) + 1;
    uint64_t v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
    uint64_t v22 = v9 - v21;
    unint64_t v17 = (int *)((char *)v17 - v21);
    unint64_t v23 = &v16[4 * v12 - 16];
    uint64_t v24 = (long long *)(v9 - 16);
    uint64_t v25 = v20 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      long long v26 = *v24;
      *((_OWORD *)v23 - 1) = *(v24 - 1);
      *(_OWORD *)unint64_t v23 = v26;
      v23 -= 32;
      v24 -= 2;
      v25 -= 8;
    }
    while (v25);
    uint64_t v9 = v22;
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_36:
      do
      {
        int v27 = *(_DWORD *)(v9 - 4);
        v9 -= 4;
        *--unint64_t v17 = v27;
      }
      while ((void *)v9 != v10);
    }
    goto LABEL_29;
  }
}

void sub_2158B5E88(_Unwind_Exception *exception_object)
{
  if (qword_26788E510)
  {
    qword_26788E518 = qword_26788E510;
    operator delete((void *)qword_26788E510);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158B5EB4(int a1)
{
  uint64_t result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 == 875836534) {
          return result;
        }
        if (a1 != 1094862674)
        {
          int v7 = 1111970369;
          goto LABEL_37;
        }
        return 4;
      }
      if (a1 == 875704422 || a1 == 875704438) {
        return result;
      }
      int v4 = 875836518;
LABEL_41:
      if (a1 != v4) {
        goto LABEL_43;
      }
      return result;
    }
    if (a1 > 843264055)
    {
      unsigned int v6 = a1 - 843264056;
      if (v6 <= 0x30 && ((1 << v6) & 0x1400000000001) != 0) {
        return 2;
      }
      goto LABEL_43;
    }
    if (a1 != 24)
    {
      if (a1 == 32) {
        return 4;
      }
      if (a1 != 842285639) {
        goto LABEL_43;
      }
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032) {
          return result;
        }
        int v4 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600) {
          return result;
        }
        int v4 = 1717856627;
      }
      goto LABEL_41;
    }
    if (a1 == 1647392359) {
      return result;
    }
    if (a1 != 1647589490)
    {
      int v7 = 1647719521;
      goto LABEL_37;
    }
    return 3;
  }
  if (a1 <= 1278226741)
  {
    unsigned int v5 = a1 - 1278226488;
    if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0) {
      goto LABEL_43;
    }
    return result;
  }
  if (a1 > 1380410944)
  {
    if (a1 != 1380410945)
    {
      unsigned __int16 v3 = 26689;
      goto LABEL_36;
    }
    return 4;
  }
  if (a1 != 1278226742)
  {
    unsigned __int16 v3 = 16961;
LABEL_36:
    int v7 = v3 | 0x52470000;
LABEL_37:
    if (a1 == v7) {
      return 4;
    }
LABEL_43:
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 420, (uint64_t)"", 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

void sub_2158B6130(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  unsigned __int16 v3 = *(uint64_t **)(a1 + 8);
  if (v3)
  {
    uint64_t v6 = *v3;
    unsigned int v5 = (std::__shared_weak_count *)v3[1];
    if (v5
      && (atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed),
          !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
LABEL_5:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E4F0, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788E4F0))
      {
        sub_2158B5C58();
        __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E510, &dword_21572C000);
        __cxa_guard_release(&qword_26788E4F0);
      }
      uint64_t v7 = qword_26788E510;
      uint64_t v8 = qword_26788E518;
      int v9 = sub_215DCBB74(a1);
      uint64_t v10 = (v8 - v7) >> 2;
      if (v8 == v7)
      {
        if (!v10) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v11 = 4 * v10;
        uint64_t v12 = (_DWORD *)v7;
        while (*v12 != v9)
        {
          ++v12;
          v11 -= 4;
          if (!v11)
          {
            uint64_t v12 = (_DWORD *)(v7 + ((v8 - v7) & 0xFFFFFFFFFFFFFFFCLL));
            break;
          }
        }
        if (v10 == ((uint64_t)v12 - v7) >> 2)
        {
LABEL_12:
          LODWORD(v39) = sub_215DCBB74(a1);
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E4F0, memory_order_acquire) & 1) == 0)
          {
            if (__cxa_guard_acquire(&qword_26788E4F0))
            {
              sub_2158B5C58();
              __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E510, &dword_21572C000);
              __cxa_guard_release(&qword_26788E4F0);
            }
          }
          v38.__r_.__value_.__r.__words[0] = (qword_26788E518 - qword_26788E510) >> 2;
          v38.__r_.__value_.__l.__size_ = qword_26788E510;
          LODWORD(v29) = 0;
          sub_2157E4674(v28, "Invalid IOSurface format '");
          sub_2157FCC44();
        }
      }
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v16 = *(std::__shared_weak_count **)(a1 + 16);
      v30[0] = &unk_26C684900;
      v30[1] = v17;
      int v31 = v16;
      if (v16) {
        atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v18 = sub_215DCBB74((uint64_t)v30);
      int v35 = v18;
      int v19 = sub_2158B5EB4(v18);
      unsigned int v20 = sub_2158BA804(v18);
      if (v20 >= 4)
      {
        sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 322, (uint64_t)"", 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_215E1ABD8);
        abort();
      }
      int v21 = dword_215EAF330[(char)v20];
      size_t v22 = sub_215DCB5DC((uint64_t)v30);
      if (v22 != v21 * v19)
      {
        int v37 = 0;
        sub_2158C2354(info, "Invalid IOSurface: ");
        sub_2158C20E4();
      }
      if (sub_215DCB8A8((uint64_t)v30) % v22)
      {
        int v37 = 0;
        sub_2158C2354(info, "Invalid IOSurface: ");
        sub_2158C20E4();
      }
      char v51 = 1;
      v30[0] = &unk_26C684900;
      unint64_t v23 = v31;
      if (v31 && !atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
      if (v51)
      {
        int v24 = sub_215DCBB74(a1);
        switch(sub_2157FC978(v24))
        {
          case 1u:
            operator new();
          case 2u:
            operator new();
          case 3u:
            operator new();
          case 4u:
            operator new();
          case 5u:
            operator new();
          case 6u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 7u:
            operator new();
          case 8u:
            operator new();
          case 9u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xAu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xBu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xCu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xDu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xEu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0xFu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x10u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x11u:
            operator new();
          case 0x12u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x13u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x14u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x15u:
            operator new();
          case 0x16u:
            operator new();
          case 0x17u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x18u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x19u:
            operator new();
          case 0x1Au:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x1Bu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x1Cu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x1Du:
            operator new();
          case 0x1Eu:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x1Fu:
            operator new();
          case 0x20u:
            operator new();
          case 0x21u:
            operator new();
          case 0x22u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x23u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x24u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x25u:
            operator new();
          case 0x26u:
            operator new();
          case 0x27u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 0x28u:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
          default:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
            abort();
        }
      }
      *(_OWORD *)&v52[0].numer = v40;
      uint64_t v25 = sub_215741BFC(&v53, &__p);
      *(_OWORD *)a2 = *(_OWORD *)&v52[0].numer;
      *(unsigned char *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 112) = 0;
      if (v62)
      {
        *(unsigned char *)(a2 + 40) = 0;
        int v26 = v55;
        if (v55)
        {
          *(_OWORD *)(a2 + 16) = *(_OWORD *)v25;
          *(void *)(a2 + 32) = *((void *)v25 + 2);
          *((void *)v25 + 1) = 0;
          *((void *)v25 + 2) = 0;
          *(void *)uint64_t v25 = 0;
          *(unsigned char *)(a2 + 40) = 1;
        }
        *(unsigned char *)(a2 + 48) = 0;
        *(unsigned char *)(a2 + 104) = 0;
        if (v61)
        {
          uint64_t v27 = v58;
          *(void *)(a2 + 64) = v57;
          *(_OWORD *)(a2 + 48) = v56;
          long long v56 = 0uLL;
          *(void *)(a2 + 72) = v27;
          *(_OWORD *)(a2 + 80) = v59;
          *(void *)(a2 + 96) = v60;
          uint64_t v57 = 0;
          long long v59 = 0uLL;
          uint64_t v60 = 0;
          *(unsigned char *)(a2 + 104) = 1;
        }
        *(unsigned char *)(a2 + 112) = 1;
        *(unsigned char *)(a2 + 528) = 0;
        if (v26 && SHIBYTE(v54) < 0) {
          operator delete(v53);
        }
      }
      else
      {
        *(unsigned char *)(a2 + 528) = 0;
      }
      if (!v51 && v50)
      {
        if (v49)
        {
          if (SHIBYTE(v48) < 0) {
            operator delete(v47[0]);
          }
          if (SHIBYTE(v45) < 0) {
            operator delete(v44[0]);
          }
        }
        if (v43 && SHIBYTE(v42) < 0)
        {
          unint64_t v15 = (void *)__p;
          goto LABEL_27;
        }
      }
      return;
    }
  }
  LOBYTE(v32) = 0;
  char v34 = 0;
  sub_215964354(&v32, (uint64_t)&v40);
  *(_OWORD *)a2 = v40;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v50)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v13 = v43;
    if (v43)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(void *)(a2 + 32) = v42;
      uint64_t v42 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v49)
    {
      uint64_t v14 = v46;
      *(void *)(a2 + 64) = v45;
      *(_OWORD *)(a2 + 48) = *(_OWORD *)v44;
      v44[0] = 0;
      v44[1] = 0;
      *(void *)(a2 + 72) = v14;
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v47;
      *(void *)(a2 + 96) = v48;
      uint64_t v45 = 0;
      v47[0] = 0;
      v47[1] = 0;
      uint64_t v48 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 528) = 0;
    if (v13 && SHIBYTE(v42) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 528) = 0;
  }
  if (v34 && v33 < 0)
  {
    unint64_t v15 = (void *)v32;
LABEL_27:
    operator delete(v15);
  }
}

void sub_2158B8660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158B8684(_Unwind_Exception *a1)
{
}

void sub_2158B869C(_Unwind_Exception *a1)
{
}

void sub_2158B86B4(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B86C8(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B86DC(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B86F0(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8704(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8718(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B872C(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8740(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8754(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8768(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B877C(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8790(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B87A4(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B87B8(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B87CC(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B87E0(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B87F4(_Unwind_Exception *a1)
{
  sub_215733368(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_2158B8808(_Unwind_Exception *a1)
{
  if (STACK[0x310])
  {
    uint64_t v2 = sub_215B7344C(STACK[0x310]);
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2158B8D1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL VZImageIsIOSurfacePixelFormatSupported_0(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E4E8, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_26788E4E8))
    {
      sub_2158B579C();
      __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E4F8, &dword_21572C000);
      __cxa_guard_release(&qword_26788E4E8);
    }
  }
  uint64_t v2 = (qword_26788E500 - qword_26788E4F8) >> 2;
  if (qword_26788E500 == qword_26788E4F8) {
    return v2 != 0;
  }
  uint64_t v3 = 4 * v2;
  int v4 = (_DWORD *)qword_26788E4F8;
  while (*v4 != a1)
  {
    ++v4;
    v3 -= 4;
    if (!v3)
    {
      int v4 = (_DWORD *)(qword_26788E4F8 + ((qword_26788E500 - qword_26788E4F8) & 0xFFFFFFFFFFFFFFFCLL));
      return v2 != ((uint64_t)v4 - qword_26788E4F8) >> 2;
    }
  }
  return v2 != ((uint64_t)v4 - qword_26788E4F8) >> 2;
}

void sub_2158B8E74(_Unwind_Exception *a1)
{
}

BOOL VZImageIsIOSurfacePixelFormatPartiallySupported_0(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E4F0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_26788E4F0))
    {
      sub_2158B5C58();
      __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E510, &dword_21572C000);
      __cxa_guard_release(&qword_26788E4F0);
    }
  }
  uint64_t v2 = (qword_26788E518 - qword_26788E510) >> 2;
  if (qword_26788E518 == qword_26788E510) {
    return v2 != 0;
  }
  uint64_t v3 = 4 * v2;
  int v4 = (_DWORD *)qword_26788E510;
  while (*v4 != a1)
  {
    ++v4;
    v3 -= 4;
    if (!v3)
    {
      int v4 = (_DWORD *)(qword_26788E510 + ((qword_26788E518 - qword_26788E510) & 0xFFFFFFFFFFFFFFFCLL));
      return v2 != ((uint64_t)v4 - qword_26788E510) >> 2;
    }
  }
  return v2 != ((uint64_t)v4 - qword_26788E510) >> 2;
}

void sub_2158B8F68(_Unwind_Exception *a1)
{
}

void sub_2158B8F80(long long *a1@<X0>, void *a2@<X8>)
{
  sub_2158B90C4(a1, (uint64_t)v5);
  if (v14)
  {
    uint64_t v3 = sub_2157674F0((uint64_t)v5);
    *a2 = &unk_26C684900;
    a2[1] = *(void *)(v3 + 8);
    uint64_t v4 = *(void *)(v3 + 16);
    a2[2] = v4;
    if (v4) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    }
    if (v14) {
      goto LABEL_5;
    }
  }
  else
  {
    a2[1] = 0;
    a2[2] = 0;
    *a2 = &unk_26C684900;
    if (v14)
    {
LABEL_5:
      (*(void (**)(void *))v5[0])(v5);
      return;
    }
  }
  if (v13)
  {
    if (v12)
    {
      if (v11 < 0) {
        operator delete(__p);
      }
      if (v9 < 0) {
        operator delete(v8);
      }
    }
    if (v7)
    {
      if (v6 < 0) {
        operator delete((void *)v5[2]);
      }
    }
  }
}

void sub_2158B90B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158B90C4(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  uint64_t v4 = (const void *)*((void *)a1 + 53);
  unsigned int v5 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_18:
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      goto LABEL_19;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v7 = *((void *)a1 + 53);
  uint64_t v8 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  if (!v7)
  {
LABEL_19:
    char v11 = sub_215AB5250(1u);
    char v12 = v11;
    if (v11[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v11, *((void *)v11 + 1));
    }
    else
    {
      long long v13 = *(_OWORD *)v11;
      uint64_t v62 = *((void *)v11 + 2);
      long long __dst = v13;
    }
    int v63 = *((_DWORD *)v12 + 6);
    sub_2157C3E6C(&v45, (uint64_t)&__dst, 1uLL);
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v42, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v42 = *a1;
      unsigned __int8 v43 = (std::__shared_weak_count *)*((void *)a1 + 2);
    }
    int v44 = *((_DWORD *)a1 + 6);
    uint64_t v39 = operator new(0x20uLL);
    long long v40 = xmmword_215EAF320;
    strcpy((char *)v39, "cannot return data as IOSurface");
    char v41 = 1;
    sub_215964570((long long **)&v45, (uint64_t)&v42, (uint64_t)&v39);
  }
  if (*((unsigned char *)a1 + 512))
  {
    uint64_t v10 = *((void *)a1 + 62);
    uint64_t v9 = *((void *)a1 + 63);
    *(void *)a2 = &unk_26C684900;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v9;
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a2 + 120) = 1;
    if (!v8) {
      return;
    }
LABEL_26:
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    return;
  }
  uint64_t v14 = (*(uint64_t (**)(void))(*(void *)(v7 + 8) + 40))();
  if (v15)
  {
    *((void *)&v42 + 1) = 0;
    unsigned __int8 v43 = 0;
    *(void *)&long long v42 = &unk_26C684900;
    (*(void (**)(uint64_t, long long *))(*(void *)v14 + 56))(v14, &v42);
    if (*((void *)&v42 + 1))
    {
      uint64_t v17 = **((void **)&v42 + 1);
      uint64_t v16 = *(std::__shared_weak_count **)(*((void *)&v42 + 1) + 8);
      if (v16)
      {
        atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      if (v17)
      {
        if (*((unsigned char *)a1 + 512))
        {
          uint64_t v19 = *((void *)&v42 + 1);
          int v18 = v43;
          if (v43) {
            atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          unsigned int v20 = (std::__shared_weak_count *)*((void *)a1 + 63);
          *((void *)a1 + 62) = v19;
          *((void *)a1 + 63) = v18;
          if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        else
        {
          uint64_t v24 = *((void *)&v42 + 1);
          unint64_t v23 = v43;
          *((void *)a1 + 61) = &unk_26C684900;
          *((void *)a1 + 62) = v24;
          *((void *)a1 + 63) = v23;
          if (v23) {
            atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          *((unsigned char *)a1 + 512) = 1;
        }
        uint64_t v26 = *((void *)&v42 + 1);
        uint64_t v25 = v43;
        *(void *)a2 = &unk_26C684900;
        *(void *)(a2 + 8) = v26;
        *(void *)(a2 + 16) = v25;
        if (v25) {
          atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        *(unsigned char *)(a2 + 120) = 1;
        goto LABEL_74;
      }
    }
  }
  else
  {
    *((void *)&v42 + 1) = 0;
    unsigned __int8 v43 = 0;
    *(void *)&long long v42 = &unk_26C684900;
  }
  int v63 = 0;
  sub_2158C402C(&__dst, "contained image data does not contain an IOSurface");
  if (v63 == -1) {
    sub_215742D4C();
  }
  uint64_t v60 = &v59;
  ((void (*)(void **__return_ptr, char **, long long *))off_26C666EA0[v63])(v28, &v60, &__dst);
  if (v63 != -1) {
    ((void (*)(char **, long long *))off_26C666E40[v63])(&v60, &__dst);
  }
  if (SHIBYTE(v29) < 0)
  {
    sub_215738B0C(v30, v28[0], (unint64_t)v28[1]);
  }
  else
  {
    *(_OWORD *)long long v30 = *(_OWORD *)v28;
    uint64_t v31 = v29;
  }
  char v32 = 1;
  LOBYTE(v33) = 0;
  char v37 = 0;
  char v38 = 1;
  sub_21573FCF8(0xCu, (long long *)v30, (uint64_t)&v46);
  *(_OWORD *)a2 = v46;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v56)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v21 = v49;
    if (v49)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(void *)(a2 + 32) = v48;
      uint64_t v48 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v55)
    {
      uint64_t v22 = v52;
      *(void *)(a2 + 64) = v51;
      *(_OWORD *)(a2 + 48) = v50;
      long long v50 = 0uLL;
      *(void *)(a2 + 72) = v22;
      *(_OWORD *)(a2 + 80) = v53;
      *(void *)(a2 + 96) = v54;
      uint64_t v51 = 0;
      long long v53 = 0uLL;
      uint64_t v54 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v21 && SHIBYTE(v48) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 120) = 0;
  }
  if (v38)
  {
    if (v37)
    {
      if (v36 < 0) {
        operator delete(v35);
      }
      if (v34 < 0) {
        operator delete(v33);
      }
    }
    if (v32 && SHIBYTE(v31) < 0) {
      operator delete(v30[0]);
    }
  }
  if (SHIBYTE(v29) < 0) {
    operator delete(v28[0]);
  }
LABEL_74:
  *(void *)&long long v42 = &unk_26C684900;
  uint64_t v27 = v43;
  if (v43 && !atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  uint64_t v8 = v58;
  if (v58) {
    goto LABEL_26;
  }
}

void sub_2158B98FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,char a44)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_215DCAD80(&a37);
  sub_215733368(v44 - 128);
  _Unwind_Resume(a1);
}

void sub_2158B99D0(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v4 = (const void *)*((void *)a1 + 53);
  unsigned int v5 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_18:
      uint64_t v33 = 0;
      char v34 = 0;
      goto LABEL_19;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v8 = *((void *)a1 + 53);
  uint64_t v7 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v33 = v8;
  char v34 = v7;
  if (!v8)
  {
LABEL_19:
    char v11 = sub_215AB5250(1u);
    char v12 = v11;
    if (v11[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v11, *((void *)v11 + 1));
    }
    else
    {
      long long v13 = *(_OWORD *)v11;
      uint64_t v39 = *((void *)v11 + 2);
      long long __dst = v13;
    }
    LODWORD(v40) = *((_DWORD *)v12 + 6);
    sub_2157C3E6C(&v30, (uint64_t)&__dst, 1uLL);
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v35, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v35 = *a1;
      uint64_t v36 = *((void *)a1 + 2);
    }
    int v37 = *((_DWORD *)a1 + 6);
    uint64_t v27 = operator new(0x20uLL);
    long long v28 = xmmword_215EAF320;
    strcpy((char *)v27, "cannot return data as IOSurface");
    char v29 = 1;
    sub_215964570((long long **)&v30, (uint64_t)&v35, (uint64_t)&v27);
  }
  if (*((unsigned char *)a1 + 512))
  {
    uint64_t v10 = *((void *)a1 + 62);
    uint64_t v9 = *((void *)a1 + 63);
    *(void *)a2 = &unk_26C684900;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v9;
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a2 + 120) = 1;
    if (!v7) {
      return;
    }
LABEL_26:
    if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    return;
  }
  int v26 = *(_DWORD *)(v8 + 56);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 40))(v8 + 8);
  if (!v15)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    unint64_t v23 = &unk_26C684900;
    goto LABEL_39;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  unint64_t v23 = &unk_26C684900;
  (*(void (**)(uint64_t, void **))(*(void *)v14 + 56))(v14, &v23);
  if (!v24) {
    goto LABEL_39;
  }
  uint64_t v17 = *v24;
  uint64_t v16 = (std::__shared_weak_count *)v24[1];
  if (v16)
  {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
LABEL_39:
    unsigned int v20 = (char *)&v32 + 4;
    int v21 = v26 - 1;
    if (v26 - 1) <= 0x25 && ((0x31D13100DFuLL >> v21)) {
      unsigned int v20 = (char *)&v31 + 4 * qword_215EB3190[v21];
    }
    if (v20 - (char *)&v31 == 68)
    {
      int v37 = 0;
      sub_2158385C4(&v35, "contained image data of format '");
      sub_215806C64();
    }
    sub_2158C4120((uint64_t)&v31, v26, (unsigned int *)(v8 + 32));
  }
  uint64_t v19 = v24;
  int v18 = v25;
  *(void *)a2 = &unk_26C684900;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a2 + 120) = 1;
  unint64_t v23 = &unk_26C684900;
  uint64_t v22 = v25;
  if (v25 && !atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  uint64_t v7 = v34;
  if (v34) {
    goto LABEL_26;
  }
}

void sub_2158BA678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,char a47)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_215DCAD80(&a30);
  sub_215733368(v47 - 224);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BA804(int a1)
{
  if (a1 <= 1278226533)
  {
    if (a1 > 875704421)
    {
      if (a1 <= 875836533)
      {
        if (a1 == 875704422 || a1 == 875704438) {
          return 0;
        }
        int v1 = 875836518;
      }
      else
      {
        if (a1 <= 1111970368)
        {
          if (a1 != 875836534)
          {
            int v1 = 1094862674;
            goto LABEL_38;
          }
          return 0;
        }
        if (a1 == 1111970369) {
          return 0;
        }
        int v1 = 1278226488;
      }
LABEL_38:
      if (a1 == v1) {
        return 0;
      }
LABEL_44:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 303, (uint64_t)"", 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_215E1ABD8);
      abort();
    }
    if (a1 <= 843264055)
    {
      if (a1 == 24 || a1 == 32) {
        return 0;
      }
      int v1 = 842285639;
      goto LABEL_38;
    }
    if (a1 == 843264056) {
      return 0;
    }
    if (a1 != 843264102)
    {
      int v4 = 843264104;
      goto LABEL_42;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032) {
          return 2;
        }
        int v4 = 1751411059;
        goto LABEL_42;
      }
      if (a1 != 1717855600 && a1 != 1717856627) {
        goto LABEL_44;
      }
      return 3;
    }
    if (a1 == 1647392359 || a1 == 1647589490) {
      return 1;
    }
    int v2 = 1647719521;
LABEL_27:
    if (a1 != v2) {
      goto LABEL_44;
    }
    return 1;
  }
  if (a1 <= 1380401728)
  {
    if (a1 == 1278226534) {
      return 3;
    }
    if (a1 == 1278226536) {
      return 2;
    }
    int v2 = 1278226742;
    goto LABEL_27;
  }
  if (a1 == 1380401729) {
    return 0;
  }
  if (a1 == 1380410945) {
    return 3;
  }
  int v4 = 1380411457;
LABEL_42:
  if (a1 != v4) {
    goto LABEL_44;
  }
  return 2;
}

uint64_t sub_2158BAA80(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BAAFC(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C665D68;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v6, 0, 1);
  uint64_t v4 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  *(void *)(a1 + 48) = v4;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 56) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a1 + 40);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BACD0(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B67478(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C40EE3858B8);
  _Unwind_Resume(a1);
}

void sub_2158BACF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BAD54(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67D9B0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40EE3858B8);
  }
  return a1;
}

void sub_2158BADF0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BAE7C()
{
  return 1;
}

uint64_t sub_2158BAE84(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2158BAE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 1);
}

uint64_t sub_2158BAEA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BAF34(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BAF6C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67D9B0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BB018(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BB08C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 2, a2 + 64, 2, a2 + 72, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 1;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BB148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2158BB164(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BB1F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_2158BB1F8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158BB200@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(result + 32);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 40);
  return result;
}

uint64_t sub_2158BB214(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_2158BB220(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BB29C(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C665EB8;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v6, 0, 2);
  uint64_t v4 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  *(void *)(a1 + 48) = v4;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 56) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a1 + 40);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BB470(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6CA28(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C40EE3858B8);
  _Unwind_Resume(a1);
}

void sub_2158BB498(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BB4F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DBF0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40EE3858B8);
  }
  return a1;
}

void sub_2158BB590(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BB61C()
{
  return 2;
}

uint64_t sub_2158BB624(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2158BB62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_2158BB648(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BB6D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BB70C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DBF0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BB7B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BB82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 2, a2 + 64, 2, a2 + 72, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 2;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BB8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BB908(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BB984(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C665FB0;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v6, 0, 3);
  uint64_t v4 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  *(void *)(a1 + 48) = v4;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 56) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a1 + 40);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BBB58(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B7094C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C40EE3858B8);
  _Unwind_Resume(a1);
}

void sub_2158BBB80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BBBDC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DDA0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40EE3858B8);
  }
  return a1;
}

void sub_2158BBC78(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BBD04()
{
  return 3;
}

uint64_t sub_2158BBD0C(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2158BBD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_2158BBD30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BBDBC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BBDF4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DDA0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BBEA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BBF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 2, a2 + 64, 2, a2 + 72, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 3;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BBFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BBFE8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BC064(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C6660A8;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v6, 0, 4);
  uint64_t v4 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  *(void *)(a1 + 48) = v4;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 56) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a1 + 40);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BC238(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B7495C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C40EE3858B8);
  _Unwind_Resume(a1);
}

void sub_2158BC260(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BC2BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DF50;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40EE3858B8);
  }
  return a1;
}

void sub_2158BC358(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BC3E4()
{
  return 4;
}

uint64_t sub_2158BC3EC(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2158BC3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 4);
}

uint64_t sub_2158BC410(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BC49C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BC4D4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DF50;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BC580(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BC5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 2, a2 + 64, 2, a2 + 72, 4);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (4 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 4;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BC6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BC6D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BC74C(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C6661A0;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 5);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BC930(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6884C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BC958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BC9B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DA40;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BCA50(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BCADC()
{
  return 5;
}

uint64_t sub_2158BCAE4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BCAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158BCB08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BCB94(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BCBCC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DA40;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BCC78(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BCCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 5;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BCDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BCDBC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BCE38(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666298;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 7);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BD01C(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B71E8C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BD044(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BD0A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DE30;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BD13C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BD1C8()
{
  return 7;
}

uint64_t sub_2158BD1D0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BD1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2158BD1F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BD280(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BD2B8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DE30;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BD364(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BD3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 7;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BD490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BD4AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BD528(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666390;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 8);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BD70C(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B75E9C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BD734(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BD790(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DFE0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BD82C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BD8B8()
{
  return 8;
}

uint64_t sub_2158BD8C0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BD8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2158BD8E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BD970(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BD9A8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DFE0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BDA54(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BDAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 4);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (4 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 8;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BDB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BDB9C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BDC18(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666488;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 17);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BDDFC(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B69E50(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BDE24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BDE80(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DAD0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BDF1C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BDFA8()
{
  return 17;
}

uint64_t sub_2158BDFB0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BDFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158BDFD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BE060(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BE098(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DAD0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BE144(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BE1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 17;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BE26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BE288(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BE304(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666580;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 21);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BE4E8(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B69E50(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BE510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BE56C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DAD0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BE608(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BE694()
{
  return 21;
}

uint64_t sub_2158BE69C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BE6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158BE6C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BE74C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BE784(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DAD0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BE830(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BE8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 21;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BE958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BE974(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BE9F0(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666678;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 22);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BEBD4(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6DF38(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BEBFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BEC58(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DC80;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BECF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BED80()
{
  return 22;
}

uint64_t sub_2158BED88(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BED90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2158BEDAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BEE38(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BEE70(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DC80;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BEF1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BEF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 22;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BF048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BF064(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BF0E0(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666770;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 25);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BF2C4(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6B4B0(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BF2EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BF348(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DB60;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BF3E4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BF470()
{
  return 25;
}

uint64_t sub_2158BF478(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BF480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158BF49C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BF528(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BF560(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DB60;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BF60C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BF680(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 25;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BF734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BF750(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BF7CC(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666868;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 29);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158BF9B0(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6B4B0(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158BF9D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158BFA34(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DB60;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158BFAD0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BFB5C()
{
  return 29;
}

uint64_t sub_2158BFB64(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158BFB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158BFB88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158BFC14(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158BFC4C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DB60;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158BFCF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158BFD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 29;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158BFE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158BFE3C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158BFEB8(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666960;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 31);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158C009C(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B7344C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158C00C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158C0120(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DEC0;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158C01BC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C0248()
{
  return 31;
}

uint64_t sub_2158C0250(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158C0258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2158C0274(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158C0300(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C0338(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DEC0;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158C03E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158C0458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 31;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158C0510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158C052C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158C05A8(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666A58;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 32);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158C078C(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B7745C(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158C07B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158C0810(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67E070;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158C08AC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C0938()
{
  return 32;
}

uint64_t sub_2158C0940(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158C0948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2158C0964(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158C09F0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C0A28(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67E070;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158C0AD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158C0B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 4);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (4 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 32;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158C0C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158C0C1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158C0C98(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666B50;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 33);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158C0E7C(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6B4B0(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158C0EA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158C0F00(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DB60;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158C0F9C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1028()
{
  return 33;
}

uint64_t sub_2158C1030(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158C1038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158C1054(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158C10E0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1118(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DB60;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158C11C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158C1238(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 33;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158C12EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158C1308(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158C1384(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666C48;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 37);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158C1568(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6B4B0(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158C1590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158C15EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DB60;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158C1688(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1714()
{
  return 37;
}

uint64_t sub_2158C171C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158C1724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2158C1740(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158C17CC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1804(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DB60;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158C18B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158C1924(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 1);
  uint64_t v9 = v7 | 0x100000000;
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v6) {
    uint64_t v9 = 0;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 37;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158C19D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158C19F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158C1A70(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C666D40;
  uint64_t v3 = *a2;
  *a2 = 0;
  if (v3) {
    operator new();
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v7, 0, 38);
  long long v5 = v7[1];
  long long v4 = v7[2];
  *(_OWORD *)(a1 + 32) = *v7;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v7 = 0;
  MEMORY[0x2166C4D20]();
  *(void *)(a1 + 80) = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a1 + 56);
  *(void *)(a1 + 120) = *(void *)(a1 + 72);
  if (!atomic_fetch_add((atomic_ullong *volatile)8, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(MEMORY[0] + 16))(0);
    std::__shared_weak_count::__release_weak(0);
  }
  return a1;
}

void sub_2158C1C54(_Unwind_Exception *a1)
{
  uint64_t v3 = sub_215B6F454(v1);
  MEMORY[0x2166C4D20](v3, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_2158C1C7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v3);
  if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2158C1CD8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67DD10;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C4049419736);
  }
  return a1;
}

void sub_2158C1D74(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1E00()
{
  return 38;
}

uint64_t sub_2158C1E08(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2158C1E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2158C1E2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158C1EB8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C1EF0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67DD10;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67EED8[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158C1F9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2158C2010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = *(unsigned __int8 *)(a2 + 28);
  int v7 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_215DC93A4((uint64_t)&v12, 3, a2 + 88, 3, a2 + 100, 2);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (2 * v7) | 0x100000000;
  if (!v6) {
    uint64_t v10 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v11 = v12;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_DWORD *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v9;
  *(_DWORD *)(a1 + 48) = 38;
  *(_WORD *)(a1 + 52) = 256;
  return result;
}

void sub_2158C20C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2158C20E4()
{
}

void sub_2158C22D0(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2158C22F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2158C2338(_DWORD ***a1)
{
  return sub_2158C2354(**a1, (char *)(*a1)[1]);
}

void sub_2158C2344(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158C2354(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    int v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158C2448(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  int v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C666E40[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158C2600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158C2644(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2158C2740((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158C2738(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158C2740(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  int v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      int v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  int v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158C2940(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158C2954(_DWORD ***a1)
{
  return sub_2158C2970(**a1, (char *)(*a1)[1]);
}

void sub_2158C2960(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158C2970(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158C2A64(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  int v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C666E40[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158C2C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158C2C60(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2158C2D5C((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158C2D54(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158C2D5C(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  int v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      int v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  int v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158C2F5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158C2F70(_DWORD ***a1)
{
  return sub_2158C2F8C(**a1, (char *)(*a1)[1]);
}

void sub_2158C2F7C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158C2F8C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158C3080(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  int v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C666E40[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158C3238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158C327C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2158C3378((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158C3370(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158C3378(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  int v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      int v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  int v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158C3578(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_2158C358C(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    unint64_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_2158C367C(uint64_t *a1, uint64_t a2)
{
  void v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  unint64_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    unint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C666E40[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_2158C3838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158C387C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    unsigned int v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    unsigned int v20 = v17;
    if (!v18)
    {
      int v21 = &v13[24 * v12];
      char *v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      unint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      unint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  int v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  unint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_2158C3B10(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158C3B28(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_2158C3B30()
{
}

void sub_2158C3BEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  sub_215821460((void **)va);
  _Unwind_Resume(a1);
}

void sub_2158C3C28(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10F3C4035895BD5);
  _Unwind_Resume(a1);
}

uint64_t sub_2158C3C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2158C3DF8(a2, (uint64_t)&v9);
  *(void *)a1 = &unk_26C65F6A0;
  *(void *)(a1 + 8) = &unk_26C657100;
  long long v5 = v9;
  long long v6 = v10[0];
  long long v9 = 0uLL;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)((char *)v10 + 14);
  sub_2157C4FB8(a1 + 64, a3);
  *(void *)a1 = &unk_26C65F620;
  size_t v7 = (std::__shared_weak_count *)*((void *)&v9 + 1);
  if (*((void *)&v9 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v9 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  *(void *)a1 = &unk_26C678E78;
  return a1;
}

void sub_2158C3D98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  *(void *)(v2 + 8) = v3;
  long long v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_215764BDC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2158C3DF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v14 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    char v13 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = *(_DWORD *)(a1 + 40);
    int v6 = *(_DWORD *)(a1 + 56);
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    char v13 = 0;
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = *(_DWORD *)(a1 + 40);
    int v6 = *(_DWORD *)(a1 + 56);
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v5;
  *(_DWORD *)(a2 + 40) = v6;
  if (v4)
  {
    if (v3)
    {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
    if ((v7 & 0xFFFFFFu) <= 0x10000) {
      unsigned __int8 v8 = 0;
    }
    else {
      unsigned __int8 v8 = v7;
    }
    __int16 v9 = v7 & 0xFF00;
    if ((v7 & 0xFF0000) == 0) {
      __int16 v9 = 0;
    }
    uint64_t v3 = v13;
    *(_WORD *)(a2 + 44) = v9 & 0xFF00 | v8;
    if (!v13) {
      goto LABEL_17;
    }
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3) {
      goto LABEL_17;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    unint64_t v10 = v14;
    if (!v14) {
      return;
    }
    goto LABEL_18;
  }
LABEL_17:
  unint64_t v10 = v14;
  if (!v14) {
    return;
  }
LABEL_18:
  if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
}

void sub_2158C4008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158C402C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158C4120(uint64_t a1, int a2, unsigned int *a3)
{
  switch(a2)
  {
    case 1:
      uint64_t v4 = &unk_26C667510;
      sub_215B91594(a3, (uint64_t)&v3);
      operator new();
    case 2:
      uint64_t v4 = &unk_26C667548;
      sub_215B916E4(a3, (uint64_t)&v3);
      operator new();
    case 3:
      uint64_t v4 = &unk_26C667580;
      sub_215B91834(a3, (uint64_t)&v3);
      operator new();
    case 4:
      uint64_t v4 = &unk_26C6675B8;
      sub_215B91984(a3, (uint64_t)&v3);
      operator new();
    case 5:
      uint64_t v4 = &unk_26C6675F0;
      sub_215B91AD4(a3, (unint64_t)&v3);
      operator new();
    case 7:
      uint64_t v4 = &unk_26C667628;
      sub_215B91CB8(a3, (unint64_t)&v3);
      operator new();
    case 8:
      uint64_t v4 = &unk_26C667660;
      sub_215B91E9C(a3, (unint64_t)&v3);
      operator new();
    case 17:
      uint64_t v4 = &unk_26C667698;
      sub_215B92080(a3, (uint64_t)&v3);
      operator new();
    case 21:
      uint64_t v4 = &unk_26C6676D0;
      sub_215B9225C(a3, (uint64_t)&v3);
      operator new();
    case 22:
      uint64_t v4 = &unk_26C667708;
      sub_215B92438(a3, (uint64_t)&v3);
      operator new();
    case 25:
      uint64_t v4 = &unk_26C667740;
      sub_215B92614(a3, (unint64_t)&v3);
      operator new();
    case 29:
      uint64_t v4 = &unk_26C667778;
      sub_215B927F8(a3, (unint64_t)&v3);
      operator new();
    case 31:
      uint64_t v4 = &unk_26C6677B0;
      sub_215B929DC(a3, (unint64_t)&v3);
      operator new();
    case 32:
      uint64_t v4 = &unk_26C6677E8;
      sub_215B92BC0(a3, (unint64_t)&v3);
      operator new();
    case 33:
      uint64_t v4 = &unk_26C667820;
      sub_215B92DA4(a3, (unint64_t)&v3);
      operator new();
    case 37:
      uint64_t v4 = &unk_26C667858;
      sub_215B92F88(a3, (unint64_t)&v3);
      operator new();
    case 38:
      uint64_t v4 = &unk_26C667890;
      sub_215B9316C(a3, (unint64_t)&v3);
      operator new();
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_2158C8114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158C1CD8((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8198(_Unwind_Exception *a1)
{
  sub_2158C1CD8((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C81AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C81C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C81E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158C15EC((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8244(_Unwind_Exception *a1)
{
  sub_2158C15EC((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C826C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158C0F00((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C82F0(_Unwind_Exception *a1)
{
  sub_2158C0F00((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C833C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158C0810((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C839C(_Unwind_Exception *a1)
{
  sub_2158C0810((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C83B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C83C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C83E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158C0120((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8448(_Unwind_Exception *a1)
{
  sub_2158C0120((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C845C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BFA34((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C84F4(_Unwind_Exception *a1)
{
  sub_2158BFA34((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C851C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BF348((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C85A0(_Unwind_Exception *a1)
{
  sub_2158BF348((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C85B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C85C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C85EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BEC58((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C864C(_Unwind_Exception *a1)
{
  sub_2158BEC58((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BE56C((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C86F8(_Unwind_Exception *a1)
{
  sub_2158BE56C((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C870C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BDE80((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C87A4(_Unwind_Exception *a1)
{
  sub_2158BDE80((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C87B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C87CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C87F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BD790((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8850(_Unwind_Exception *a1)
{
  sub_2158BD790((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C889C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BD0A0((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C88FC(_Unwind_Exception *a1)
{
  sub_2158BD0A0((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BC9B4((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C89A8(_Unwind_Exception *a1)
{
  sub_2158BC9B4((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C89BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C89D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C89F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BC2BC((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8A54(_Unwind_Exception *a1)
{
  sub_2158BC2BC((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BBBDC((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8B00(_Unwind_Exception *a1)
{
  sub_2158BBBDC((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BB4F4((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8BAC(_Unwind_Exception *a1)
{
  sub_2158BB4F4((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v27 - 80);
  sub_215733368((uint64_t)&a26);
  sub_215733368(v26);
  _Unwind_Resume(a1);
}

void sub_2158C8BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_215733368(v26);
  if (!atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  sub_215733368((uint64_t)&a26);
  sub_2158BAD54((uint64_t *)(v29 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8C58(_Unwind_Exception *a1)
{
  sub_2158BAD54((uint64_t *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_2158C8C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2158C8D28()
{
}

__n128 sub_2158C8D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &unk_26C684900;
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  return result;
}

__n128 sub_2158C8D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = &unk_26C6848C0;
  return result;
}

__n128 sub_2158C8D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = &unk_26C6848E0;
  return result;
}

void sub_2158C8DC4()
{
}

void sub_2158C8DDC()
{
}

void sub_2158C8DF4()
{
}

void sub_2158C8E0C()
{
}

void sub_2158C8E24()
{
}

void sub_2158C8E3C()
{
}

void sub_2158C8E54()
{
}

void sub_2158C8E6C()
{
}

void sub_2158C8E84()
{
}

void sub_2158C8E9C()
{
}

void sub_2158C8EB4()
{
}

void sub_2158C8ECC()
{
}

void sub_2158C8EE4()
{
}

void sub_2158C8EFC()
{
}

void sub_2158C8F14()
{
}

void sub_2158C8F2C()
{
}

uint64_t sub_2158C8F40(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158C8FBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v14 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    char v13 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = *(_DWORD *)(a1 + 40);
    int v6 = *(_DWORD *)(a1 + 56);
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    char v13 = 0;
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = *(_DWORD *)(a1 + 40);
    int v6 = *(_DWORD *)(a1 + 56);
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v5;
  *(_DWORD *)(a2 + 40) = v6;
  if (v4)
  {
    if (v3)
    {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
    if ((v7 & 0xFFFFFFu) <= 0x10000) {
      unsigned __int8 v8 = 0;
    }
    else {
      unsigned __int8 v8 = v7;
    }
    __int16 v9 = v7 & 0xFF00;
    if ((v7 & 0xFF0000) == 0) {
      __int16 v9 = 0;
    }
    uint64_t v3 = v13;
    *(_WORD *)(a2 + 44) = v9 & 0xFF00 | v8;
    if (!v13) {
      goto LABEL_17;
    }
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3) {
      goto LABEL_17;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    unint64_t v10 = v14;
    if (!v14) {
      return;
    }
    goto LABEL_18;
  }
LABEL_17:
  unint64_t v10 = v14;
  if (!v14) {
    return;
  }
LABEL_18:
  if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
}

void sub_2158C91CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2158C91F0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158C927C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_2158C9284(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_2158C928C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(result + 24);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 32);
  return result;
}

uint64_t sub_2158C92A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

_DWORD *sub_2158C9330(_DWORD ***a1)
{
  return sub_2158C97F0(**a1, (char *)(*a1)[1]);
}

void sub_2158C933C(uint64_t *a1, uint64_t a2)
{
  void v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  uint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  int v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  __int16 v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    int v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C666E40[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_2158C94F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158C953C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  uint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    unsigned int v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    unsigned int v20 = v17;
    if (!v18)
    {
      int v21 = &v13[24 * v12];
      char *v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      unint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      unint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  int v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  unint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_2158C97D0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158C97E8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_2158C97F0(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C666E40[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158C98E4(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 - 1 > 0x27)
  {
    sub_2158F90A0(a1, (uint64_t)&v6);
    *(_OWORD *)a2 = v6;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (v16)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v4 = v9;
      if (v9)
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(void *)(a2 + 32) = v8;
        uint64_t v8 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v15)
      {
        uint64_t v5 = v12;
        *(void *)(a2 + 64) = v11;
        *(_OWORD *)(a2 + 48) = v10;
        long long v10 = 0uLL;
        *(void *)(a2 + 72) = v5;
        *(_OWORD *)(a2 + 80) = v13;
        *(void *)(a2 + 96) = v14;
        uint64_t v11 = 0;
        long long v13 = 0uLL;
        uint64_t v14 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v4 && SHIBYTE(v8) < 0) {
        operator delete((void *)__p);
      }
    }
    else
    {
      *(unsigned char *)(a2 + 120) = 0;
    }
  }
  else
  {
    int v3 = 1;
    if (a1 - 1 < 4)
    {
LABEL_19:
      *(_DWORD *)a2 = v3;
      *(unsigned char *)(a2 + 120) = 1;
      return;
    }
    if (a1 - 5 < 4)
    {
      *(_DWORD *)a2 = 2;
      *(unsigned char *)(a2 + 120) = 1;
      return;
    }
    if (a1 - 9 >= 0x10 || ((0xFF0Fu >> (a1 - 9)) & 1) == 0)
    {
      int v3 = 4;
      if (a1 - 13 >= 4 && a1 - 25 >= 0x10)
      {
        sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/Format.h", 493, (uint64_t)"", 0, (uint64_t)"unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
        abort();
      }
      goto LABEL_19;
    }
    *(_DWORD *)a2 = 3;
    *(unsigned char *)(a2 + 120) = 1;
  }
}

void sub_2158C9AD0(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 - 1 <= 0x27)
  {
    if (a1 - 1 >= 4)
    {
      if (a1 - 5 >= 4)
      {
        if (a1 - 9 < 0x10 && ((0xFF0Fu >> (a1 - 9)) & 1) != 0)
        {
          int v3 = 3;
          uint64_t v4 = (a1 & 3) - 1;
          if (v4 > 2)
          {
LABEL_25:
            int v7 = 4;
            goto LABEL_26;
          }
        }
        else
        {
          int v3 = 4;
          if (a1 - 13 >= 4 && a1 - 25 >= 0x10)
          {
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/Format.h", 493, (uint64_t)"", 0, (uint64_t)"unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
            abort();
          }
          uint64_t v4 = (a1 & 3) - 1;
          if (v4 > 2) {
            goto LABEL_25;
          }
        }
      }
      else
      {
        int v3 = 2;
        uint64_t v4 = (a1 & 3) - 1;
        if (v4 > 2) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      int v3 = 1;
      uint64_t v4 = (a1 & 3) - 1;
      if (v4 > 2) {
        goto LABEL_25;
      }
    }
    int v7 = dword_215EBD218[v4];
LABEL_26:
    *(_DWORD *)a2 = v7 * v3;
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  sub_2158F90A0(a1, (uint64_t)&v8);
  *(_OWORD *)a2 = v8;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v18)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v5 = v11;
    if (v11)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(void *)(a2 + 32) = v10;
      uint64_t v10 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v17)
    {
      uint64_t v6 = v14;
      *(void *)(a2 + 64) = v13;
      *(_OWORD *)(a2 + 48) = v12;
      long long v12 = 0uLL;
      *(void *)(a2 + 72) = v6;
      *(_OWORD *)(a2 + 80) = v15;
      *(void *)(a2 + 96) = v16;
      uint64_t v13 = 0;
      long long v15 = 0uLL;
      uint64_t v16 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v5 && SHIBYTE(v10) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 120) = 0;
  }
}

void sub_2158C9CEC(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 - 1 > 0x27)
  {
    sub_2158F90A0(a1, (uint64_t)&v7);
    *(_OWORD *)a2 = v7;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (v17)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v5 = v10;
      if (v10)
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(void *)(a2 + 32) = v9;
        uint64_t v9 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v16)
      {
        uint64_t v6 = v13;
        *(void *)(a2 + 64) = v12;
        *(_OWORD *)(a2 + 48) = v11;
        long long v11 = 0uLL;
        *(void *)(a2 + 72) = v6;
        *(_OWORD *)(a2 + 80) = v14;
        *(void *)(a2 + 96) = v15;
        uint64_t v12 = 0;
        long long v14 = 0uLL;
        uint64_t v15 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v5 && SHIBYTE(v9) < 0) {
        operator delete((void *)__p);
      }
    }
    else
    {
      *(unsigned char *)(a2 + 120) = 0;
    }
  }
  else
  {
    uint64_t v3 = (a1 & 3) - 1;
    if (v3 > 2) {
      int v4 = 4;
    }
    else {
      int v4 = dword_215EBD218[v3];
    }
    *(_DWORD *)a2 = v4;
    *(unsigned char *)(a2 + 120) = 1;
  }
}

void sub_2158C9E3C()
{
}

void sub_2158CA110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11 && !atomic_fetch_add(&a11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
    std::__shared_weak_count::__release_weak(a11);
  }
  if (!atomic_fetch_add(v12, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158CA1D4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26C66ADA8;
  *(void *)(a1 + 8) = &unk_26C657100;
  uint64_t v3 = *(void *)(a2 + 8);
  int v4 = *(std::__shared_weak_count **)(a2 + 16);
  uint64_t v5 = a2 + 8;
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v6 = *(void *)(a2 + 40);
    int v7 = *(_DWORD *)(a2 + 48);
    __int16 v8 = *(_WORD *)(a2 + 52);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 40);
    int v7 = *(_DWORD *)(a2 + 48);
    __int16 v8 = *(_WORD *)(a2 + 52);
  }
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  unsigned __int8 v10 = (long long *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 56) = v7;
  *(_WORD *)(a1 + 60) = v8;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  *(void *)(a1 + 64) = &unk_26C657170;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v5;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  long long v11 = *v10;
  *(_OWORD *)(a1 + 102) = *(long long *)((char *)v10 + 14);
  *(_OWORD *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 120) = 1;
  *(unsigned char *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  return a1;
}

uint64_t sub_2158CA328(uint64_t a1)
{
  *(void *)a1 = &unk_26C66ADA8;
  if (*(unsigned char *)(a1 + 152))
  {
    *(void *)(a1 + 128) = off_26C67D770;
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 144);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  if (*(unsigned char *)(a1 + 120))
  {
    *(void *)(a1 + 64) = &unk_26C657170;
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  *(void *)(a1 + 8) = &unk_26C657100;
  int v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_2158CA4C4(uint64_t a1)
{
  sub_2158CA328(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158CA4FC(_DWORD *a1)
{
  int v1 = a1[8];
  if (!v1) {
    return 0;
  }
  int v2 = a1[9];
  if (!v2) {
    return 0;
  }
  int v3 = a1[14];
  if ((v3 - 1) >= 4)
  {
    if ((v3 - 5) >= 4)
    {
      if (v3 - 9) < 0x10 && ((0xFF0Fu >> (v3 - 9)))
      {
        int v4 = 3;
      }
      else
      {
        int v4 = 4;
        if ((v3 - 13) >= 4 && (v3 - 25) >= 0x10)
        {
          if (!v3)
          {
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/Format.h", 491, (uint64_t)"", 0, (uint64_t)"dynamic format properties only known at runtime", 47, (void (*)(void **))sub_215E1ABD8);
            abort();
          }
          sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/Format.h", 493, (uint64_t)"", 0, (uint64_t)"unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
          abort();
        }
      }
    }
    else
    {
      int v4 = 2;
    }
  }
  else
  {
    int v4 = 1;
  }
  uint64_t v6 = (a1[10] * (v2 - 1));
  uint64_t v7 = (v4 * v1);
  int v8 = (a1[14] & 3) - 1;
  if (v8 > 2) {
    return v6 + 4 * v7;
  }
  else {
    return v6 + qword_215EBD228[v8] * v7;
  }
}

BOOL sub_2158CA63C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 60) && *(void *)(a1 + 48))
  {
    uint64_t v4 = *(void *)(a1 + 16);
    uint64_t v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    (*(void (**)(uint64_t, void, const char *))(*(void *)v4 + 88))(v4, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
  }
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 48);
  if (*(unsigned char *)(a2 + 60)) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    unsigned __int8 v10 = *(std::__shared_weak_count **)(a2 + 24);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    (*(void (**)(uint64_t, void, const char *))(*(void *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
    uint64_t v7 = *(void *)(a2 + 48);
  }
  if (v6 == v7)
  {
    if (*(void *)(a1 + 48) == v6)
    {
      if (*(_DWORD *)(a1 + 56) == *(_DWORD *)(a2 + 56))
      {
        BOOL result = 0;
        if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32) && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)) {
          return *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40);
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return sub_2158CA858(a1 + 8, a2 + 8);
  }
  return result;
}

BOOL sub_2158CA858(uint64_t a1, uint64_t a2)
{
  sub_215822684(a1, &v9);
  sub_215822684(a2, &v8);
  BOOL v4 = sub_2158F6D5C(a1, a2);
  uint64_t v5 = v8;
  uint64_t v8 = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = v9;
  uint64_t v9 = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  return v4;
}

void sub_2158CA90C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a9)
  {
    (*(void (**)(uint64_t))(*(void *)a9 + 8))(a9);
    uint64_t v11 = a10;
    if (!a10) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v11 = a10;
    if (!a10) {
      goto LABEL_3;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void sub_2158CA9A0(int a1@<W0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

void sub_2158CA9B0(int a1@<W0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

void sub_2158CA9C0(int a1@<W0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
}

void sub_2158CA9D0(unsigned int a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  unsigned int v23 = a1;
  int v24 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a2;
  uint64_t v20 = a5;
  if (a1 - 1 < 0x28) {
    sub_2158C9E3C();
  }
  sub_2158F90A0(a1, (uint64_t)&v9);
  *(_OWORD *)a6 = v9;
  *(unsigned char *)(a6 + 16) = 0;
  *(unsigned char *)(a6 + 112) = 0;
  if (v19)
  {
    *(unsigned char *)(a6 + 40) = 0;
    int v7 = v12;
    if (v12)
    {
      *(_OWORD *)(a6 + 16) = v10;
      *(void *)(a6 + 32) = v11;
      uint64_t v11 = 0;
      long long v10 = 0uLL;
      *(unsigned char *)(a6 + 40) = 1;
    }
    *(unsigned char *)(a6 + 48) = 0;
    *(unsigned char *)(a6 + 104) = 0;
    if (v18)
    {
      uint64_t v8 = v15;
      *(void *)(a6 + 64) = v14;
      *(_OWORD *)(a6 + 48) = v13;
      long long v13 = 0uLL;
      *(void *)(a6 + 72) = v8;
      *(_OWORD *)(a6 + 80) = v16;
      *(void *)(a6 + 96) = v17;
      uint64_t v14 = 0;
      long long v16 = 0uLL;
      uint64_t v17 = 0;
      *(unsigned char *)(a6 + 104) = 1;
    }
    *(unsigned char *)(a6 + 112) = 1;
    *(unsigned char *)(a6 + 160) = 0;
    if (v7)
    {
      if (SHIBYTE(v11) < 0) {
        operator delete((void *)v10);
      }
    }
  }
  else
  {
    *(unsigned char *)(a6 + 160) = 0;
  }
}

void sub_2158CAD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  sub_2157407D4((uint64_t)&a28);
  sub_215764584(v28 - 248);
  _Unwind_Resume(a1);
}

void sub_2158CAD70(_Unwind_Exception *a1)
{
  sub_215764584(v1 - 248);
  _Unwind_Resume(a1);
}

void sub_2158CAD84(uint64_t a1, long long *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384))
  {
    void v19[3] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(v19);
      LODWORD(v16) = v19[0].denom;
      LODWORD(v15) = v19[0].numer;
      *(double *)&qword_267890880 = (double)v15 / (double)v16;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info info = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    uint64_t v21 = 2;
    LOBYTE(v22) = 0;
    char v24 = 0;
    LOBYTE(v25) = 0;
    char v27 = 0;
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v34 = 0;
    v35[0] = 0;
    v35[24] = 0;
    sub_2158F72E4();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    v19[0] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v17) = info.numer;
      LODWORD(v18) = info.denom;
      *(double *)&qword_267890880 = (double)v17 / (double)v18;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      LOBYTE(v21) = v4;
      LOBYTE(v22) = 0;
      char v24 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v22, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v22 = *a2;
          uint64_t v23 = *((void *)a2 + 2);
        }
        char v24 = 1;
        LOBYTE(v25) = 0;
        char v27 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_23:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v25, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v25 = a2[6];
            uint64_t v26 = *((void *)a2 + 14);
          }
          char v27 = 1;
          LOBYTE(v28) = 0;
          char v29 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_15:
            LOBYTE(v30) = 0;
            char v34 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v30, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v30 = a2[2];
                uint64_t v31 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v32 = _X0;
              uint64_t v33 = 0;
              char v34 = 1;
            }
            sub_215746DAC((uint64_t)v35, (uint64_t)(a2 + 11));
            sub_2158F72E4();
          }
LABEL_14:
          long long v28 = a2[8];
          char v29 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v28) = 0;
        char v29 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v25) = 0;
      char v27 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info info = v3;
  LOBYTE(v21) = v4;
  LOBYTE(v22) = 0;
  char v24 = 0;
  goto LABEL_12;
}

void sub_2158CB1CC(_Unwind_Exception *a1)
{
}

void sub_2158CB1E4(_Unwind_Exception *a1)
{
}

void sub_2158CB1FC(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
    {
      operator delete((void *)STACK[0x240]);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2158CB2DC(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v4 = (const void *)*((void *)a1 + 53);
  int v5 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_15:
      uint64_t v33 = 0;
      char v34 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v7 = *((void *)a1 + 53);
  uint64_t v8 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v33 = v7;
  char v34 = v8;
  if (!v7)
  {
LABEL_16:
    uint64_t v14 = sub_215AB5250(1u);
    unint64_t v15 = v14;
    if (v14[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v14, *((void *)v14 + 1));
    }
    else
    {
      long long v16 = *(_OWORD *)v14;
      uint64_t v36 = *((void *)v14 + 2);
      long long __dst = v16;
    }
    int v37 = *((_DWORD *)v15 + 6);
    sub_2157C3E6C(&v32, (uint64_t)&__dst, 1uLL);
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v29, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v29 = *a1;
      uint64_t v30 = *((void *)a1 + 2);
    }
    int v31 = *((_DWORD *)a1 + 6);
    uint64_t v26 = (char *)operator new(0x20uLL);
    long long v27 = xmmword_215EB32C0;
    strcpy(v26, "cannot return data as VZImage");
    char v28 = 1;
    sub_215964570(&v32, (uint64_t)&v29, (uint64_t)&v26);
  }
  uint64_t v9 = *(void *)(v7 + 16);
  long long v10 = *(std::__shared_weak_count **)(v7 + 24);
  if (v10)
  {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
  }
  *(void *)&long long v18 = v9;
  *((void *)&v18 + 1) = v10;
  *(_DWORD *)&v19[8] = *(_DWORD *)(v7 + 40);
  *(void *)char v19 = *(void *)(v7 + 32);
  *(void *)&v19[16] = v11;
  *(_DWORD *)&v19[24] = v12;
  *(_WORD *)&unsigned char v19[28] = v13;
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v20[0] = &unk_26C66ADA8;
  v20[1] = &unk_26C657100;
  v20[2] = 0;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v19;
  *(_OWORD *)&v21[14] = *(_OWORD *)&v19[14];
  LOBYTE(v22) = 0;
  char v23 = 0;
  char v24 = 0;
  char v25 = 0;
  *(void *)a2 = &unk_26C66ADA8;
  *(void *)(a2 + 8) = &unk_26C657100;
  void v20[3] = 0;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 46) = *(_OWORD *)&v19[14];
  *(unsigned char *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 120) = 0;
  *(unsigned char *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 152) = 0;
  *(unsigned char *)(a2 + 160) = 1;
  sub_2158CA328((uint64_t)v20);
  unint64_t v17 = v34;
  if (v34)
  {
    if (!atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
}

void sub_2158CB880(_Unwind_Exception *a1)
{
  sub_2157C3C78((void **)(v1 - 136));
  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    sub_215733368(v1 - 112);
    _Unwind_Resume(a1);
  }
  sub_215733368(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2158CB904()
{
}

void sub_2158CB918(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  sub_2158CBC40((uint64_t)&v16, **(_DWORD **)v1, *(void *)(v1 + 8));
  if (!v18)
  {
    int v2 = SHIBYTE(v17);
    if (SHIBYTE(v17) < 0)
    {
      sub_215738B0C(v3, (void *)v16, *((unint64_t *)&v16 + 1));
    }
    else
    {
      *(_OWORD *)mach_timebase_info v3 = v16;
      uint64_t v4 = v17;
    }
    char v5 = 1;
    sub_2159644BC((long long *)v3, (uint64_t)&v6);
    sub_2158CBAB8(*(void *)(v1 + 16), &v6);
    if (v15)
    {
      if (v14)
      {
        if (v13 < 0) {
          operator delete(__p);
        }
        if (v11 < 0) {
          operator delete(v10);
        }
      }
      if (v9 && v8 < 0) {
        operator delete(v7);
      }
    }
    if (v5 && SHIBYTE(v4) < 0) {
      operator delete(v3[0]);
    }
    if (v2 < 0) {
      operator delete((void *)v16);
    }
  }
}

void sub_2158CBA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,int a40,__int16 a41,char a42,char a43)
{
  operator delete(v43);
  _Unwind_Resume(a1);
}

uint64_t sub_2158CBAB8(uint64_t a1, long long *a2)
{
  long long v5 = *a2;
  LOBYTE(v6[0]) = 0;
  char v15 = 0;
  if (*((unsigned char *)a2 + 112))
  {
    char v8 = 0;
    if (*((unsigned char *)a2 + 40))
    {
      *(_OWORD *)long long v6 = a2[1];
      uint64_t v7 = *((void *)a2 + 4);
      *((void *)a2 + 3) = 0;
      *((void *)a2 + 4) = 0;
      *((void *)a2 + 2) = 0;
      char v8 = 1;
    }
    LOBYTE(v9) = 0;
    char v14 = 0;
    if (*((unsigned char *)a2 + 104))
    {
      uint64_t v3 = *((void *)a2 + 9);
      uint64_t v10 = *((void *)a2 + 8);
      long long v9 = a2[3];
      *((void *)a2 + 7) = 0;
      *((void *)a2 + 8) = 0;
      *((void *)a2 + 6) = 0;
      uint64_t v11 = v3;
      *(_OWORD *)long long __p = a2[5];
      uint64_t v13 = *((void *)a2 + 12);
      *((void *)a2 + 10) = 0;
      *((void *)a2 + 11) = 0;
      *((void *)a2 + 12) = 0;
      char v14 = 1;
    }
    char v15 = 1;
  }
  char v16 = 0;
  sub_2158D9420((uint64_t)&v5, a1);
  if (v16)
  {
    (*(void (**)(long long *))v5)(&v5);
    return a1;
  }
  if (!v15) {
    return a1;
  }
  if (v14)
  {
    if (SHIBYTE(v13) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10) < 0) {
      operator delete((void *)v9);
    }
  }
  if (!v8 || (SHIBYTE(v7) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(v6[0]);
  return a1;
}

void sub_2158CBC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158CBC40(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  switch(a2)
  {
    case 1:
      sub_2158D5EB0(*(unsigned int **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51) {
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 2:
      sub_2158D9F3C(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51) {
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 3:
      sub_2158DAB24(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51) {
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 4:
      sub_2158DB70C(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51) {
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 5:
      sub_2158DC2FC(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v24 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v24 << 32) | 2;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 6:
      sub_2158DCD78(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v27 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v27 << 32) | 2;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 7:
      sub_2158DD96C(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v20 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v20 << 32) | 2;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 8:
      sub_2158DE560(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v30 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v30 << 32) | 2;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 9:
      sub_2158DF158(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v16 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v16 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 10:
      sub_2158DFBEC(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v29 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v29 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 11:
      sub_2158E07FC(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v13 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v13 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 12:
      sub_2158E140C(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v15 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v15 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 13:
      sub_2158E2020(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v26 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v26 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 14:
      sub_2158E2AA0(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v11 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v11 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 15:
      sub_2158E3694(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v19 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v19 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 16:
      sub_2158E4288(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v10 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v10 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 17:
      sub_2158E4E80(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v22 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v22 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 18:
      sub_2158E5914(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v28 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v28 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 19:
      sub_2158E6524(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v35 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v35 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 20:
      sub_2158E7134(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v23 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v23 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 21:
      sub_2158E7D48(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v25 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v25 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 22:
      sub_2158E87DC(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v33 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v33 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 23:
      sub_2158E93EC(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v36 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v36 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 24:
      sub_2158E9FFC(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v18 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v18 << 32) | 3;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 25:
      sub_2158EAC10(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v17 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v17 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 26:
      sub_2158EB690(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v40 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v40 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if ((_BYTE)v61)
      {
        if (BYTE8(v60))
        {
          if (SBYTE7(v60) < 0) {
            operator delete((void *)__p);
          }
          if (SBYTE7(v58) < 0) {
            operator delete((void *)v57);
          }
        }
        if (BYTE8(v56) && SBYTE7(v56) < 0) {
          goto LABEL_349;
        }
      }
      goto LABEL_431;
    case 27:
      sub_2158EC284(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v8 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v8 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 28:
      sub_2158ECE78(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v37 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v37 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 29:
      sub_2158EDA70(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v38 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v38 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 30:
      sub_2158EE4F0(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v31 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v31 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if (!(_BYTE)v61) {
        goto LABEL_431;
      }
      if (BYTE8(v60))
      {
        if (SBYTE7(v60) < 0) {
          operator delete((void *)__p);
        }
        if (SBYTE7(v58) < 0) {
          operator delete((void *)v57);
        }
      }
      if (!BYTE8(v56) || (SBYTE7(v56) & 0x80000000) == 0) {
        goto LABEL_431;
      }
      goto LABEL_349;
    case 31:
      sub_2158EF0E4(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v21 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v21 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 32:
      sub_2158EFCD8(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v32 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v32 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 33:
      sub_2158F08D0(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v12 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v12 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 34:
      sub_2158F1350(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v9 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v9 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 35:
      sub_2158F1F44(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v6 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v6 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 36:
      sub_2158F2B38(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v7 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v7 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 37:
      sub_2158F3730(*(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          uint64_t v5 = **(unsigned int **)(a3 + 16);
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v5 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 38:
      sub_2158F41B0(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v39 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v39 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 39:
      sub_2158F4DA4(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v34 = (unint64_t)**(unsigned int **)(a3 + 16) >> 1;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v34 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
      goto LABEL_341;
    case 40:
      sub_2158F5998(**(void **)a3, *(_DWORD **)(a3 + 8), **(_DWORD **)(a3 + 16), (uint64_t)&v41);
      if (v51)
      {
        if (**(void **)(a3 + 8))
        {
          unint64_t v14 = (unint64_t)**(unsigned int **)(a3 + 16) >> 2;
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = (v14 << 32) | 4;
        }
        else
        {
          LODWORD(v54) = 1;
          *(void *)((char *)&v54 + 4) = 0;
        }
        operator new();
      }
LABEL_341:
      long long v54 = v41;
      sub_215741BFC(&v55, &v42);
      sub_2158CBAB8(*(void *)(a3 + 24), &v54);
      if ((_BYTE)v61)
      {
        if (BYTE8(v60))
        {
          if (SBYTE7(v60) < 0) {
            operator delete((void *)__p);
          }
          if (SBYTE7(v58) < 0) {
            operator delete((void *)v57);
          }
        }
        if (BYTE8(v56) && SBYTE7(v56) < 0) {
LABEL_349:
        }
          operator delete((void *)v55);
      }
LABEL_431:
      if (!v51 && v50)
      {
        if (v49)
        {
          if (v48 < 0) {
            operator delete(v47);
          }
          if (v46 < 0) {
            operator delete(v45);
          }
        }
        if (v44 && SHIBYTE(v43) < 0) {
          operator delete((void *)v42);
        }
      }
      *(unsigned char *)(a1 + 24) = 1;
      return;
    default:
      long long v60 = xmmword_215EBD0DC;
      long long v61 = unk_215EBD0EC;
      long long v62 = xmmword_215EBD0FC;
      long long v63 = unk_215EBD10C;
      long long v56 = xmmword_215EBD09C;
      long long v57 = unk_215EBD0AC;
      long long v58 = xmmword_215EBD0BC;
      long long __p = unk_215EBD0CC;
      long long v54 = xmmword_215EBD07C;
      long long v55 = unk_215EBD08C;
      int v53 = 0;
      sub_2157D55B8(&v52, "Invalid runtime format ");
      sub_215806C64();
  }
}

void sub_2158D2F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,int a43,char a44,int a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  if (a76)
  {
    if (a75)
    {
      if (a74 < 0) {
        operator delete(__p);
      }
      if (a72 < 0) {
        operator delete(a67);
      }
    }
    if (a66 && a65 < 0) {
      operator delete(a60);
    }
  }
  if (!a46 && a44)
  {
    if (a42)
    {
      if (a41 < 0) {
        operator delete(a36);
      }
      if (a34 < 0) {
        operator delete(a29);
      }
    }
    if (a28)
    {
      if (a27 < 0)
      {
        operator delete(a22);
        _Unwind_Resume(a1);
      }
    }
  }
  _Unwind_Resume(a1);
}

void sub_2158D5DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_2158D5EB0(unsigned int *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v7 = 1;
  unsigned int v8 = a2;
  if (*a1 > a2 && *a1 != 0 && a1[1] != 0)
  {
    unsigned int v5 = *a1;
    int v6 = 1;
    sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)&v7, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158D6090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a28 && a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158D60C4(uint64_t a1, uint64_t a2)
{
  v8[0] = &unk_26C66ADA8;
  v8[1] = &unk_26C657100;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(_OWORD *)unint64_t v9 = v3;
  *(_OWORD *)unint64_t v10 = v4;
  *(_OWORD *)&v10[14] = *(_OWORD *)(a2 + 46);
  LOBYTE(v11) = 0;
  char v14 = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    unint64_t v11 = &unk_26C657170;
    long long v5 = *(_OWORD *)(a2 + 72);
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0;
    long long v6 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)long long __p = v5;
    *(_OWORD *)unint64_t v13 = v6;
    *(_OWORD *)&v13[14] = *(_OWORD *)(a2 + 102);
    char v14 = 1;
  }
  LOBYTE(v15) = 0;
  char v17 = 0;
  if (*(unsigned char *)(a2 + 152))
  {
    unint64_t v15 = &off_26C67D770;
    long long v16 = *(_OWORD *)(a2 + 136);
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 144) = 0;
    char v17 = 1;
  }
  char v18 = 1;
  sub_2158D9420((uint64_t)v8, a1);
  if (v18)
  {
    (*(void (**)(void *))v8[0])(v8);
    return a1;
  }
  if (!v13[24]) {
    return a1;
  }
  if (v13[16])
  {
    if ((v13[15] & 0x80000000) != 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(v11) < 0) {
      operator delete(*(void **)&v10[16]);
    }
  }
  if (!v10[8] || (v10[7] & 0x80000000) == 0) {
    return a1;
  }
  operator delete(v9[0]);
  return a1;
}

void sub_2158D6280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215764584((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_2158D6294(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C667A50;
  int v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158D632C(char *__s, unsigned int *a2, std::string *a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v16 = 0;
  sub_2158C2970(v15, __s);
  std::to_string(&v17, *a2);
  unint64_t v19 = v15;
  unint64_t v20 = &v17;
  unint64_t v21 = v15;
  uint64_t v22 = &v17;
  unint64_t v23 = &v17;
  if (v16 != -1)
  {
    char v18 = &v19;
    ((void (*)(_DWORD ***, _DWORD *))off_26C667920[v16])(&v18, v15);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
    unint64_t v19 = v15;
    unint64_t v20 = a3;
    unint64_t v21 = v15;
    uint64_t v22 = a3;
    unint64_t v23 = a3;
    if (v16 != -1)
    {
      v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
      ((void (*)(std::string *, _DWORD *))off_26C667938[v16])(&v17, v15);
      sub_2158D6CDC();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2158D673C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void sub_2158D67B4(char *__s, unsigned int *a2, std::string *a3)
{
  int v6 = 0;
  sub_2158C2970(v5, __s);
  std::to_string(&v7, *a2);
  unint64_t v9 = v5;
  unint64_t v10 = &v7;
  unint64_t v11 = v5;
  uint64_t v12 = &v7;
  unint64_t v13 = &v7;
  if (v6 != -1)
  {
    unsigned int v8 = &v9;
    ((void (*)(_DWORD ***, _DWORD *))off_26C667920[v6])(&v8, v5);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v7.__r_.__value_.__l.__data_);
    }
    unint64_t v9 = v5;
    unint64_t v10 = a3;
    unint64_t v11 = v5;
    uint64_t v12 = a3;
    unint64_t v13 = a3;
    if (v6 != -1)
    {
      v7.__r_.__value_.__r.__words[0] = (std::string::size_type)&v9;
      ((void (*)(std::string *, _DWORD *))off_26C6679F8[v6])(&v7, v5);
      sub_215806C64();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2158D6A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void sub_2158D6A70(char *__s, void *a2, uint64_t a3)
{
  int v7 = 0;
  sub_2158C2354(v6, __s);
  sub_215748F40((uint64_t)&v5, (uint64_t)v6, a2);
  v9[0] = v6;
  v9[1] = a3;
  _OWORD v9[2] = v6;
  void v9[3] = a3;
  v9[4] = a3;
  if (v7 != -1)
  {
    v8.__r_.__value_.__r.__words[0] = (std::string::size_type)v9;
    ((void (*)(std::string *, _DWORD *))off_26C6679F8[v7])(&v8, v6);
    sub_215806C64();
  }
  sub_215742D4C();
}

void sub_2158D6C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void sub_2158D6CDC()
{
}

void sub_2158D6EC8(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2158D6EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158D6F30(void *a1, unsigned int *a2)
{
  int v10 = 0;
  sub_2158D7060((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1) {
    sub_215742D4C();
  }
  uint64_t v12 = &v11;
  ((void (*)(void **__return_ptr, char **, unsigned char *))off_26C6679E0[v10])(__p, &v12, v9);
  if (v10 != -1) {
    ((void (*)(char **, unsigned char *))off_26C667908[v10])(&v12, v9);
  }
  if ((v8 & 0x80u) == 0) {
    long long v3 = __p;
  }
  else {
    long long v3 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    uint64_t v4 = v8;
  }
  else {
    uint64_t v4 = (uint64_t)__p[1];
  }
  BOOL result = sub_215731D94(a1, (uint64_t)v3, v4);
  int v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_2158D701C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158D7038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158D704C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158D7060(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v12 = a2;
  unint64_t v13 = (std::string *)"{";
  uint64_t v14 = a2;
  unint64_t v15 = (std::string *)"{";
  int v16 = (std::string *)"{";
  uint64_t v3 = *(unsigned int *)(a2 + 24);
  if (v3 == -1) {
    goto LABEL_11;
  }
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_26C667968[v3])(&v11);
  std::to_string(&v11, *a3);
  uint64_t v12 = a2;
  unint64_t v13 = &v11;
  uint64_t v14 = a2;
  unint64_t v15 = &v11;
  int v16 = &v11;
  uint64_t v6 = *(unsigned int *)(a2 + 24);
  if (v6 == -1) {
    sub_215742D4C();
  }
  std::string v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_26C667920[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  uint64_t v12 = a2;
  unint64_t v13 = (std::string *)",";
  uint64_t v14 = a2;
  unint64_t v15 = (std::string *)",";
  int v16 = (std::string *)",";
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  if (v7 == -1) {
    goto LABEL_11;
  }
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_26C667968[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  uint64_t v12 = a2;
  unint64_t v13 = &v11;
  uint64_t v14 = a2;
  unint64_t v15 = &v11;
  int v16 = &v11;
  uint64_t v8 = *(unsigned int *)(a2 + 24);
  if (v8 == -1) {
    sub_215742D4C();
  }
  std::string v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_26C667920[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  uint64_t v12 = a2;
  unint64_t v13 = (std::string *)"}";
  uint64_t v14 = a2;
  unint64_t v15 = (std::string *)"}";
  int v16 = (std::string *)"}";
  uint64_t v9 = *(unsigned int *)(a2 + 24);
  if (v9 == -1) {
LABEL_11:
  }
    sub_215742D4C();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_26C667968[v9])(&v11, a2);
}

void sub_2158D71FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2158D7220(_DWORD ***a1)
{
  return sub_2158D723C(**a1, (char *)(*a1)[1]);
}

void sub_2158D722C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158D723C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C667908[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158D7330(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158D74E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158D752C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    BOOL result = sub_2158D7628((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  BOOL result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158D7620(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158D7628(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158D7828(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158D783C(_DWORD ***a1)
{
  return sub_2157D4E8C(**a1, (char *)(*a1)[1]);
}

void sub_2158D7848(uint64_t a1, uint64_t a2)
{
}

void sub_2158D7858(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  unint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158D7A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158D7A54(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    BOOL result = sub_2158D7B50((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  BOOL result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158D7B48(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158D7B50(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158D7D50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158D7D64(_DWORD ***a1)
{
  return sub_2158353B0(**a1, (char *)(*a1)[1]);
}

void sub_2158D7D70(uint64_t a1, uint64_t a2)
{
}

void sub_2158D7D80(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  unint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158D7F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158D7F7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    BOOL result = sub_2158D8078((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  BOOL result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158D8070(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158D8078(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158D8278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158D828C(_DWORD ***a1)
{
  return sub_2158D82A8(**a1, (char *)(*a1)[1]);
}

void sub_2158D8298(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158D82A8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C667908[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158D839C(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158D8554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158D8598(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    BOOL result = sub_2158D8694((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  BOOL result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158D868C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158D8694(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158D8894(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158D88A8(_DWORD ***a1)
{
  return sub_2157D6C54(**a1, (char *)(*a1)[1]);
}

void sub_2158D88B4(uint64_t a1, uint64_t a2)
{
}

void sub_2158D88C4(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  unint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158D8A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158D8AC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    BOOL result = sub_2158D8BBC((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  BOOL result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158D8BB4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158D8BBC(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  unint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158D8DBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158D8DD0(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C667A50;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v6, 0, 1);
  uint64_t v3 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  *(void *)(a1 + 40) = v3;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_2158D8FE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158D9004(void *a1)
{
  *a1 = &unk_26C667A50;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158D90AC()
{
  return 1;
}

uint64_t sub_2158D90B4(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158D90BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_2158D90D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158D9164(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158D919C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 104);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 104) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 40);
      if (v2)
      {
        v2(*(void *)(v1 + 32), *(void *)(v1 + 24));
        LODWORD(v2) = *(_DWORD *)(v1 + 104);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661348[v2])(&v3, v1 + 24);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158D9254(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE1EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE1EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158D92C8(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  unint64_t v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a2 + 4), 2, (uint64_t)(a2 + 5), 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 1;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  size_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158D940C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158D9420(uint64_t a1, uint64_t a2)
{
  v47[2] = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a1 + 160)) {
    BOOL v6 = *(unsigned char *)(a2 + 160) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    *(void *)&long long v35 = &unk_26C66ADA8;
    *((void *)&v35 + 1) = &unk_26C657100;
    long long v14 = *(_OWORD *)(a1 + 16);
    long long v15 = *(_OWORD *)(a1 + 32);
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    long long v36 = v14;
    v37[0] = v15;
    *(_OWORD *)((char *)v37 + 14) = *(_OWORD *)(a1 + 46);
    LOBYTE(v38) = 0;
    char v41 = 0;
    if (*(unsigned char *)(a1 + 120))
    {
      uint64_t v38 = &unk_26C657170;
      long long v39 = *(_OWORD *)(a1 + 72);
      *(void *)(a1 + 72) = 0;
      *(void *)(a1 + 80) = 0;
      v40[0] = *(_OWORD *)(a1 + 88);
      *(_OWORD *)((char *)v40 + 14) = *(_OWORD *)(a1 + 102);
      char v41 = 1;
    }
    LOBYTE(v42) = 0;
    char v44 = 0;
    if (*(unsigned char *)(a1 + 152))
    {
      long long v42 = &off_26C67D770;
      long long v43 = *(_OWORD *)(a1 + 136);
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      char v44 = 1;
    }
    sub_2158D9BF0(a1, a2);
    sub_2158D9BF0(a2, (uint64_t)&v35);
LABEL_18:
    sub_2158CA328((uint64_t)&v35);
    return;
  }
  if (*(unsigned char *)(a1 + 160))
  {
    if (!*(unsigned char *)(a2 + 160))
    {
      long long v35 = *(_OWORD *)a2;
      int v7 = *(unsigned __int8 *)(a2 + 112);
      if (*(unsigned char *)(a2 + 112))
      {
        uint64_t v8 = (void **)(a2 + 16);
        int v9 = *(unsigned __int8 *)(a2 + 40);
        if (*(unsigned char *)(a2 + 40))
        {
          uint64_t v10 = *(void **)(a2 + 16);
          v47[0] = *(void *)(a2 + 24);
          *(void *)((char *)v47 + 7) = *(void *)(a2 + 31);
          char v2 = *(unsigned char *)(a2 + 39);
          *(void *)(a2 + 24) = 0;
          *(void *)(a2 + 32) = 0;
          *uint64_t v8 = 0;
          int v11 = 1;
          if (*(unsigned char *)(a2 + 104)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v10 = 0;
          int v11 = 0;
          if (*(unsigned char *)(a2 + 104))
          {
LABEL_11:
            uint64_t v12 = *(void *)(a2 + 48);
            v46[0] = *(void *)(a2 + 56);
            *(void *)((char *)v46 + 7) = *(void *)(a2 + 63);
            char v3 = *(unsigned char *)(a2 + 71);
            *(void *)(a2 + 56) = 0;
            *(void *)(a2 + 64) = 0;
            *(void *)(a2 + 48) = 0;
            uint64_t v33 = *(void *)(a2 + 72);
            uint64_t v34 = v12;
            uint64_t v31 = *(void *)(a2 + 80);
            v45[0] = *(void *)(a2 + 88);
            *(void *)((char *)v45 + 7) = *(void *)(a2 + 95);
            char v32 = *(unsigned char *)(a2 + 103);
            *(void *)(a2 + 88) = 0;
            *(void *)(a2 + 96) = 0;
            int v13 = 1;
            *(void *)(a2 + 80) = 0;
            if (!v9) {
              goto LABEL_52;
            }
LABEL_50:
            if (*(char *)(a2 + 39) < 0) {
              operator delete(*v8);
            }
            goto LABEL_52;
          }
        }
        int v13 = 0;
        uint64_t v34 = 0;
        if (v9) {
          goto LABEL_50;
        }
      }
      else
      {
        int v11 = 0;
        uint64_t v10 = 0;
        int v13 = 0;
      }
LABEL_52:
      *(void *)a2 = &unk_26C66ADA8;
      *(void *)(a2 + 8) = &unk_26C657100;
      *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 16) = 0;
      long long v25 = *(_OWORD *)(a1 + 32);
      long long v26 = *(_OWORD *)(a1 + 46);
      *(unsigned char *)(a2 + 64) = 0;
      *(_OWORD *)(a2 + 46) = v26;
      *(_OWORD *)(a2 + 32) = v25;
      *(unsigned char *)(a2 + 120) = 0;
      if (*(unsigned char *)(a1 + 120))
      {
        *(void *)(a2 + 64) = &unk_26C657170;
        *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
        *(void *)(a1 + 72) = 0;
        *(void *)(a1 + 80) = 0;
        long long v27 = *(_OWORD *)(a1 + 88);
        *(_OWORD *)(a2 + 102) = *(_OWORD *)(a1 + 102);
        *(_OWORD *)(a2 + 88) = v27;
        *(unsigned char *)(a2 + 120) = 1;
      }
      *(unsigned char *)(a2 + 128) = 0;
      *(unsigned char *)(a2 + 152) = 0;
      if (*(unsigned char *)(a1 + 152))
      {
        *(void *)(a2 + 128) = &off_26C67D770;
        *(_OWORD *)(a2 + 136) = *(_OWORD *)(a1 + 136);
        *(void *)(a1 + 136) = 0;
        *(void *)(a1 + 144) = 0;
        *(unsigned char *)(a2 + 152) = 1;
      }
      (**(void (***)(uint64_t))a1)(a1);
      *(_OWORD *)a1 = v35;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v7)
      {
        *(unsigned char *)(a1 + 40) = 0;
        if (v11)
        {
          *(void *)(a1 + 16) = v10;
          *(void *)(a1 + 24) = v47[0];
          *(void *)(a1 + 31) = *(void *)((char *)v47 + 7);
          *(unsigned char *)(a1 + 39) = v2;
          *(unsigned char *)(a1 + 40) = 1;
          uint64_t v10 = 0;
          char v2 = 0;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v13)
        {
          uint64_t v28 = v46[0];
          *(void *)(a1 + 48) = v34;
          *(void *)(a1 + 56) = v28;
          *(void *)(a1 + 63) = *(void *)((char *)v46 + 7);
          *(unsigned char *)(a1 + 71) = v3;
          *(void *)(a1 + 72) = v33;
          *(void *)(a1 + 80) = v31;
          *(void *)(a1 + 88) = v45[0];
          *(void *)(a1 + 95) = *(void *)((char *)v45 + 7);
          *(unsigned char *)(a1 + 103) = v32;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        char v29 = *(unsigned char *)(a1 + 160);
        *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
        *(unsigned char *)(a2 + 160) = v29;
        if (v11 && v2 < 0) {
          operator delete(v10);
        }
      }
      else
      {
        char v30 = *(unsigned char *)(a1 + 160);
        *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
        *(unsigned char *)(a2 + 160) = v30;
      }
      return;
    }
  }
  else if (*(unsigned char *)(a2 + 160))
  {
    *(void *)&long long v35 = &unk_26C66ADA8;
    *((void *)&v35 + 1) = &unk_26C657100;
    long long v16 = *(_OWORD *)(a2 + 16);
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    long long v17 = *(_OWORD *)(a2 + 32);
    long long v36 = v16;
    v37[0] = v17;
    *(_OWORD *)((char *)v37 + 14) = *(_OWORD *)(a2 + 46);
    LOBYTE(v38) = 0;
    char v41 = 0;
    if (*(unsigned char *)(a2 + 120))
    {
      uint64_t v38 = &unk_26C657170;
      long long v39 = *(_OWORD *)(a2 + 72);
      *(void *)(a2 + 72) = 0;
      *(void *)(a2 + 80) = 0;
      v40[0] = *(_OWORD *)(a2 + 88);
      *(_OWORD *)((char *)v40 + 14) = *(_OWORD *)(a2 + 102);
      char v41 = 1;
    }
    LOBYTE(v42) = 0;
    char v44 = 0;
    if (*(unsigned char *)(a2 + 152))
    {
      long long v42 = &off_26C67D770;
      long long v43 = *(_OWORD *)(a2 + 136);
      *(void *)(a2 + 136) = 0;
      *(void *)(a2 + 144) = 0;
      char v44 = 1;
    }
    (**(void (***)(uint64_t))a2)(a2);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (*(unsigned char *)(a1 + 112))
    {
      long long v18 = (void **)(a1 + 16);
      *(unsigned char *)(a2 + 40) = 0;
      if (*(unsigned char *)(a1 + 40))
      {
        long long v19 = *(_OWORD *)v18;
        *(void *)(a2 + 32) = *(void *)(a1 + 32);
        *(_OWORD *)(a2 + 16) = v19;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 32) = 0;
        *long long v18 = 0;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (*(unsigned char *)(a1 + 104))
      {
        long long v20 = *(_OWORD *)(a1 + 48);
        *(void *)(a2 + 64) = *(void *)(a1 + 64);
        *(_OWORD *)(a2 + 48) = v20;
        *(void *)(a1 + 56) = 0;
        *(void *)(a1 + 64) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a2 + 72) = *(void *)(a1 + 72);
        long long v21 = *(_OWORD *)(a1 + 80);
        *(void *)(a2 + 96) = *(void *)(a1 + 96);
        *(_OWORD *)(a2 + 80) = v21;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 96) = 0;
        *(void *)(a1 + 80) = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      if (*(unsigned char *)(a1 + 112))
      {
        if (*(unsigned char *)(a1 + 104))
        {
          if (*(char *)(a1 + 103) < 0) {
            operator delete(*(void **)(a1 + 80));
          }
          if (*(char *)(a1 + 71) < 0) {
            operator delete(*(void **)(a1 + 48));
          }
        }
        if (*(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
          operator delete(*v18);
        }
      }
    }
    *(void *)a1 = &unk_26C66ADA8;
    *(void *)(a1 + 8) = &unk_26C657100;
    long long v22 = v36;
    long long v36 = 0uLL;
    long long v23 = v37[0];
    *(_OWORD *)(a1 + 16) = v22;
    *(_OWORD *)(a1 + 32) = v23;
    *(_OWORD *)(a1 + 46) = *(_OWORD *)((char *)v37 + 14);
    *(unsigned char *)(a1 + 64) = 0;
    *(unsigned char *)(a1 + 120) = 0;
    if (v41)
    {
      *(void *)(a1 + 64) = &unk_26C657170;
      *(_OWORD *)(a1 + 72) = v39;
      long long v39 = 0uLL;
      *(_OWORD *)(a1 + 88) = v40[0];
      *(_OWORD *)(a1 + 102) = *(_OWORD *)((char *)v40 + 14);
      *(unsigned char *)(a1 + 120) = 1;
    }
    *(unsigned char *)(a1 + 128) = 0;
    *(unsigned char *)(a1 + 152) = 0;
    if (v44)
    {
      *(void *)(a1 + 128) = &off_26C67D770;
      *(_OWORD *)(a1 + 136) = v43;
      long long v43 = 0uLL;
      *(unsigned char *)(a1 + 152) = 1;
    }
    char v24 = *(unsigned char *)(a1 + 160);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(unsigned char *)(a2 + 160) = v24;
    goto LABEL_18;
  }

  sub_215741728((long long *)a1, (long long *)a2);
}

uint64_t sub_2158D9BF0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 32) = v6;
  sub_2158D9DD4(a1 + 64, a2 + 64);
  int v7 = *(unsigned __int8 *)(a1 + 152);
  if (v7 == *(unsigned __int8 *)(a2 + 152))
  {
    if (*(unsigned char *)(a1 + 152)
      && (long long v8 = *(_OWORD *)(a2 + 136),
          *(void *)(a2 + 136) = 0,
          *(void *)(a2 + 144) = 0,
          int v9 = *(std::__shared_weak_count **)(a1 + 144),
          *(_OWORD *)(a1 + 136) = v8,
          v9)
      && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      return a1;
    }
    else
    {
      return a1;
    }
  }
  else
  {
    *(void *)(a1 + 128) = &off_26C67D770;
    if (v7)
    {
      int v11 = *(std::__shared_weak_count **)(a1 + 144);
      if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        *(unsigned char *)(a1 + 152) = 0;
        return a1;
      }
      else
      {
        *(unsigned char *)(a1 + 152) = 0;
        return a1;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a2 + 136) = 0;
      *(void *)(a2 + 144) = 0;
      *(unsigned char *)(a1 + 152) = 1;
      return a1;
    }
  }
}

void sub_2158D9DD4(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 == *(unsigned __int8 *)(a2 + 56))
  {
    if (*(unsigned char *)(a1 + 56))
    {
      long long v5 = *(_OWORD *)(a2 + 8);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      long long v6 = *(std::__shared_weak_count **)(a1 + 16);
      *(_OWORD *)(a1 + 8) = v5;
      if (v6)
      {
        if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      long long v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 38) = *(_OWORD *)(a2 + 38);
      *(_OWORD *)(a1 + 24) = v7;
    }
  }
  else
  {
    *(void *)a1 = &unk_26C657170;
    if (v4)
    {
      long long v8 = *(std::__shared_weak_count **)(a1 + 16);
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
        *(unsigned char *)(a1 + 56) = 0;
      }
      else
      {
        *(unsigned char *)(a1 + 56) = 0;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      long long v9 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 38) = *(_OWORD *)(a2 + 38);
      *(_OWORD *)(a1 + 24) = v9;
      *(unsigned char *)(a1 + 56) = 1;
    }
  }
}

uint64_t sub_2158D9F3C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 2;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (2 * *a2 > a3)
    {
      int v5 = 2 * *a2;
      int v6 = 2;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if (a3)
    {
      int v6 = 2;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 2;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DA3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DA43C(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C667B98;
  char v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DA4D4(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C667B98;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v6, 0, 2);
  uint64_t v3 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  *(void *)(a1 + 40) = v3;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  BOOL v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_2158DA6EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DA708(void *a1)
{
  *a1 = &unk_26C667B98;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DA7B0()
{
  return 2;
}

uint64_t sub_2158DA7B8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158DA7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_2158DA7DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DA868(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DA8A0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 104);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 104) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 40);
      if (v2)
      {
        v2(*(void *)(v1 + 32), *(void *)(v1 + 24));
        LODWORD(v2) = *(_DWORD *)(v1 + 104);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661368[v2])(&v3, v1 + 24);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DA958(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE2EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE2EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DA9CC(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  BOOL v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a2 + 4), 2, (uint64_t)(a2 + 5), 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 2;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  long long v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DAB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DAB24@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 2;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (2 * *a2 > a3)
    {
      int v5 = 2 * *a2;
      int v6 = 3;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if (a3)
    {
      int v6 = 3;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 3;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DAFB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DB024(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C667CE0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DB0BC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C667CE0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v6, 0, 3);
  uint64_t v3 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  *(void *)(a1 + 40) = v3;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  BOOL v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_2158DB2D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DB2F0(void *a1)
{
  *a1 = &unk_26C667CE0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DB398()
{
  return 3;
}

uint64_t sub_2158DB3A0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158DB3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_2158DB3C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DB450(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DB488(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 104);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 104) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 40);
      if (v2)
      {
        v2(*(void *)(v1 + 32), *(void *)(v1 + 24));
        LODWORD(v2) = *(_DWORD *)(v1 + 104);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661388[v2])(&v3, v1 + 24);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DB540(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE3EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE3EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DB5B4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  BOOL v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a2 + 4), 2, (uint64_t)(a2 + 5), 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 3;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  long long v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DB6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DB70C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 4;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (4 * *a2 > a3)
    {
      int v5 = 4 * *a2;
      int v6 = 4;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 3) != 0)
    {
      int v6 = 4;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 4;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DBBA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DBC14(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C667E28;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DBCAC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C667E28;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v6, 0, 4);
  uint64_t v3 = *(void *)(v6 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  *(void *)(a1 + 40) = v3;
  uint64_t v6 = 0;
  MEMORY[0x2166C4D20]();
  BOOL v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_2158DBEC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DBEE0(void *a1)
{
  *a1 = &unk_26C667E28;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DBF88()
{
  return 4;
}

uint64_t sub_2158DBF90(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158DBF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_2158DBFB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DC040(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DC078(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 104);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 104) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 40);
      if (v2)
      {
        v2(*(void *)(v1 + 32), *(void *)(v1 + 24));
        LODWORD(v2) = *(_DWORD *)(v1 + 104);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6613A8[v2])(&v3, v1 + 24);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DC130(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE4EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE4EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DC1A4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  BOOL v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a2 + 4), 2, (uint64_t)(a2 + 5), 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 4;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  long long v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DC2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DC2FC(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 2;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (2 * *a1 > a2)
    {
      int v4 = 2 * *a1;
      int v5 = 5;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if (a2)
    {
      int v5 = 5;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158DC63C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DC68C(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C667F70;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DC724(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C667F70;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 5);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158DC940(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DC95C(void *a1)
{
  *a1 = &unk_26C667F70;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DCA04()
{
  return 5;
}

uint64_t sub_2158DCA0C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158DCA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158DCA30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DCABC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DCAF4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6613C8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DCBAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE5EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE5EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DCC20(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 5;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DCD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DCD78@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 4;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (4 * *a2 > a3)
    {
      int v5 = 4 * *a2;
      int v6 = 6;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 3) != 0)
    {
      int v6 = 6;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 6;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DD214(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DD280(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C6680B8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DD318(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6680B8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 6);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158DD534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DD550(void *a1)
{
  *a1 = &unk_26C6680B8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DD5F8()
{
  return 6;
}

uint64_t sub_2158DD600(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158DD608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158DD624(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DD6B0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DD6E8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6613E8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DD7A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE6EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE6EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE6EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE6EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DD814(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 6;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DD958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DD96C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 4;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (4 * *a2 > a3)
    {
      int v5 = 4 * *a2;
      int v6 = 7;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 3) != 0)
    {
      int v6 = 7;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 7;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DDE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DDE74(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C668200;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DDF0C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668200;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 7);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158DE128(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DE144(void *a1)
{
  *a1 = &unk_26C668200;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DE1EC()
{
  return 7;
}

uint64_t sub_2158DE1F4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158DE1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158DE218(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DE2A4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DE2DC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661408[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DE394(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE7EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE7EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DE408(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 7;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DE54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DE560@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 8;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 8;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 8;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158DEA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DEA6C(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C668348;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DEB04(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668348;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 8);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158DED20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DED3C(void *a1)
{
  *a1 = &unk_26C668348;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DEDE4()
{
  return 8;
}

uint64_t sub_2158DEDEC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158DEDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158DEE10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DEE9C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DEED4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661428[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DEF8C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE8EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE8EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DF000(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 8;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DF144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DF158(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 3;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (3 * *a1 > a2)
    {
      int v4 = 3 * *a1;
      int v5 = 9;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if (-1431655765 * a2 >= 0x55555556)
    {
      int v5 = 9;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158DF4B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158DF500(void *result)
{
  uint64_t v1 = result;
  *BOOL result = &unk_26C668490;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158DF598(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668490;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 9);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158DF7B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158DF7D0(void *a1)
{
  *a1 = &unk_26C668490;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158DF878()
{
  return 9;
}

uint64_t sub_2158DF880(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158DF888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158DF8A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158DF930(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}