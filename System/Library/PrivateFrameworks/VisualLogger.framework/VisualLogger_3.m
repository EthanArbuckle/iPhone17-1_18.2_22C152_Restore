uint64_t sub_2158DF968(uint64_t result)
{
  uint64_t v1;
  void (*v2)(void, void);
  char v3;
  uint64_t vars8;

  v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661448[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158DFA20(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE9EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE9EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE9EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE9EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158DFA94(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 9;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158DFBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158DFBEC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 10;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 10;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 10;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E00A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E0110(void *result)
{
  v1 = result;
  *result = &unk_26C6685D8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E01A8(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6685D8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 10);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E03C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E03E0(void *a1)
{
  *a1 = &unk_26C6685D8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E0488()
{
  return 10;
}

uint64_t sub_2158E0490(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E0498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E04B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E0540(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E0578(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661468[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E0630(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE10EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE10EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE10EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE10EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E06A4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 10;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E07E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E07FC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 11;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 11;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 11;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E0CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E0D20(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668720;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E0DB8(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668720;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 11);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E0FD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E0FF0(void *a1)
{
  *a1 = &unk_26C668720;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E1098()
{
  return 11;
}

uint64_t sub_2158E10A0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E10A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E10C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E1150(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E1188(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661488[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E1240(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE11EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE11EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE11EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE11EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E12B4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 11;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E13F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E140C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 4;
  unsigned int v9 = a3;
  v8[0] = 12;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (12 * *a2 > a3)
    {
      int v6 = 12 * *a2;
      int v7 = 12;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 2) >= 0x15555556)
    {
      int v7 = 12;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v7 = 12;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E18C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E1934(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668868;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E19CC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668868;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 12);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E1BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E1C04(void *a1)
{
  *a1 = &unk_26C668868;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E1CAC()
{
  return 12;
}

uint64_t sub_2158E1CB4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E1CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158E1CD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E1D64(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E1D9C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6614A8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E1E54(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE12EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE12EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE12EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE12EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E1EC8(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 12;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E200C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E2020(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 4;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (4 * *a1 > a2)
    {
      int v4 = 4 * *a1;
      int v5 = 13;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if ((a2 & 3) != 0)
    {
      int v5 = 13;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158E2364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E23B4(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C6689B0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E244C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6689B0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 13);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E2668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E2684(void *a1)
{
  *a1 = &unk_26C6689B0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E272C()
{
  return 13;
}

uint64_t sub_2158E2734(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E273C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158E2758(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E27E4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E281C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6614C8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E28D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE13EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE13EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE13EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE13EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E2948(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 13;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E2A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E2AA0@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 14;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 14;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 14;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E2F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E2FA8(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668AF8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E3040(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668AF8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 14);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E325C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E3278(void *a1)
{
  *a1 = &unk_26C668AF8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E3320()
{
  return 14;
}

uint64_t sub_2158E3328(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E3330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E334C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E33D8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E3410(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6614E8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E34C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE14EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE14EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE14EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE14EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E353C(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 14;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E3680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E3694@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 15;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 15;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 15;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E3B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E3B9C(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668C40;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E3C34(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668C40;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 15);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E3E50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E3E6C(void *a1)
{
  *a1 = &unk_26C668C40;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E3F14()
{
  return 15;
}

uint64_t sub_2158E3F1C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E3F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E3F40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E3FCC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E4004(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661508[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E40BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE15EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE15EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE15EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE15EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E4130(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 15;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E4274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E4288@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 16;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (16 * *a2 > a3)
    {
      int v5 = 16 * *a2;
      int v6 = 16;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 0xF) != 0)
    {
      int v6 = 16;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 16;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E4728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E4794(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668D88;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E482C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668D88;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 16);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E4A48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E4A64(void *a1)
{
  *a1 = &unk_26C668D88;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E4B0C()
{
  return 16;
}

uint64_t sub_2158E4B14(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E4B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158E4B38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E4BC4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E4BFC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661528[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E4CB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE16EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE16EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE16EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE16EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E4D28(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 16;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E4E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E4E80(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 3;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (3 * *a1 > a2)
    {
      int v4 = 3 * *a1;
      int v5 = 17;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if (-1431655765 * a2 >= 0x55555556)
    {
      int v5 = 17;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158E51D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E5228(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C668ED0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E52C0(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C668ED0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 17);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E54DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E54F8(void *a1)
{
  *a1 = &unk_26C668ED0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E55A0()
{
  return 17;
}

uint64_t sub_2158E55A8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E55B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158E55CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E5658(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E5690(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661548[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E5748(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE17EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE17EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE17EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE17EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E57BC(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 17;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E5900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E5914@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 18;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 18;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 18;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E5DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E5E38(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669018;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E5ED0(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669018;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 18);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E60EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E6108(void *a1)
{
  *a1 = &unk_26C669018;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E61B0()
{
  return 18;
}

uint64_t sub_2158E61B8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E61C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E61DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E6268(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E62A0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661568[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E6358(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE18EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE18EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE18EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE18EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E63CC(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 18;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E6510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E6524@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 19;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 19;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 19;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E69DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E6A48(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669160;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E6AE0(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669160;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 19);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E6CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E6D18(void *a1)
{
  *a1 = &unk_26C669160;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E6DC0()
{
  return 19;
}

uint64_t sub_2158E6DC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E6DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E6DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E6E78(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E6EB0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661588[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E6F68(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE19EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE19EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE19EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE19EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E6FDC(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 19;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E7120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E7134@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 4;
  unsigned int v9 = a3;
  v8[0] = 12;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (12 * *a2 > a3)
    {
      int v6 = 12 * *a2;
      int v7 = 20;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 2) >= 0x15555556)
    {
      int v7 = 20;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v7 = 20;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E75F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E765C(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C6692A8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E76F4(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6692A8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 20);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E7910(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E792C(void *a1)
{
  *a1 = &unk_26C6692A8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E79D4()
{
  return 20;
}

uint64_t sub_2158E79DC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E79E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158E7A00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E7A8C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E7AC4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6615A8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E7B7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE20EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE20EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE20EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE20EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E7BF0(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 20;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E7D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E7D48(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 3;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (3 * *a1 > a2)
    {
      int v4 = 3 * *a1;
      int v5 = 21;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if (-1431655765 * a2 >= 0x55555556)
    {
      int v5 = 21;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158E80A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E80F0(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C6693F0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E8188(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6693F0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 21);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E83A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E83C0(void *a1)
{
  *a1 = &unk_26C6693F0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E8468()
{
  return 21;
}

uint64_t sub_2158E8470(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E8478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158E8494(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E8520(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E8558(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6615C8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E8610(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE21EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE21EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E8684(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 21;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E87C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E87DC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 22;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 22;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 22;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E8C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E8D00(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669538;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E8D98(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669538;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 22);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E8FB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E8FD0(void *a1)
{
  *a1 = &unk_26C669538;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E9078()
{
  return 22;
}

uint64_t sub_2158E9080(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E9088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E90A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E9130(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E9168(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6615E8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E9220(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE22EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE22EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E9294(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 22;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E93D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E93EC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 2;
  unsigned int v9 = a3;
  v8[0] = 6;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (6 * *a2 > a3)
    {
      int v6 = 6 * *a2;
      int v7 = 23;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 1) >= 0x2AAAAAAB)
    {
      int v7 = 23;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v7 = 23;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158E98A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158E9910(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669680;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158E99A8(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669680;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 23);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158E9BC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158E9BE0(void *a1)
{
  *a1 = &unk_26C669680;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E9C88()
{
  return 23;
}

uint64_t sub_2158E9C90(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158E9C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158E9CB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158E9D40(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158E9D78(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661608[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158E9E30(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE23EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE23EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE23EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE23EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158E9EA4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 23;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158E9FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158E9FFC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = result;
  v8[1] = 4;
  unsigned int v9 = a3;
  v8[0] = 12;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (12 * *a2 > a3)
    {
      int v6 = 12 * *a2;
      int v7 = 24;
      sub_2158D632C("Image row byte stride ", &v9, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v7, (int)". It must be at least: pixel byte size (", (int)v8, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v6, (uint64_t)".");
    }
    HIDWORD(v5) = -1431655765 * a3;
    LODWORD(v5) = -1431655765 * a3;
    if ((v5 >> 2) >= 0x15555556)
    {
      int v7 = 24;
      sub_2158D67B4("Image row byte stride ", &v9, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v7 = 24;
      sub_2158D6A70("Image base address ", &v10, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158EA4B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EA524(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C6697C8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EA5BC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C6697C8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 24);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  int v7 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EA7D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EA7F4(void *a1)
{
  *a1 = &unk_26C6697C8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EA89C()
{
  return 24;
}

uint64_t sub_2158EA8A4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EA8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158EA8C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EA954(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EA98C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661628[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EAA44(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE24EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE24EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE24EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE24EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EAAB8(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 24;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EABFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EAC10(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 4;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (4 * *a1 > a2)
    {
      int v4 = 4 * *a1;
      int v5 = 25;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if ((a2 & 3) != 0)
    {
      int v5 = 25;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158EAF54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EAFA4(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669910;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EB03C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669910;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 25);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EB258(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EB274(void *a1)
{
  *a1 = &unk_26C669910;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EB31C()
{
  return 25;
}

uint64_t sub_2158EB324(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EB32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158EB348(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EB3D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EB40C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661648[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EB4C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE25EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE25EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EB538(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 25;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EB67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158EB690@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 26;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 26;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 26;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158EBB2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EBB98(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669A58;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EBC30(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669A58;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 26);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EBE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EBE68(void *a1)
{
  *a1 = &unk_26C669A58;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EBF10()
{
  return 26;
}

uint64_t sub_2158EBF18(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EBF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158EBF3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EBFC8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EC000(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661668[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EC0B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE26EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE26EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE26EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE26EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EC12C(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 26;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EC270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158EC284@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 27;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 27;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 27;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158EC720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EC78C(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669BA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EC824(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669BA0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 27);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158ECA40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158ECA5C(void *a1)
{
  *a1 = &unk_26C669BA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158ECB04()
{
  return 27;
}

uint64_t sub_2158ECB0C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158ECB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158ECB30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158ECBBC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158ECBF4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661688[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158ECCAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE27EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE27EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE27EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE27EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158ECD20(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 27;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158ECE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158ECE78@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 16;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (16 * *a2 > a3)
    {
      int v5 = 16 * *a2;
      int v6 = 28;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 0xF) != 0)
    {
      int v6 = 28;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 28;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158ED318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158ED384(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669CE8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158ED41C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669CE8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 28);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158ED638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158ED654(void *a1)
{
  *a1 = &unk_26C669CE8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158ED6FC()
{
  return 28;
}

uint64_t sub_2158ED704(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158ED70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158ED728(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158ED7B4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158ED7EC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6616A8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158ED8A4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE28EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE28EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE28EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE28EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158ED918(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 28;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EDA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EDA70(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 4;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (4 * *a1 > a2)
    {
      int v4 = 4 * *a1;
      int v5 = 29;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if ((a2 & 3) != 0)
    {
      int v5 = 29;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158EDDB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EDE04(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669E30;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EDE9C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669E30;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 29);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EE0B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EE0D4(void *a1)
{
  *a1 = &unk_26C669E30;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EE17C()
{
  return 29;
}

uint64_t sub_2158EE184(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EE18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158EE1A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EE234(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EE26C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6616C8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EE324(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE29EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE29EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE29EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE29EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EE398(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 29;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EE4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158EE4F0@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 30;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 30;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 30;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158EE98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EE9F8(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C669F78;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EEA90(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C669F78;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 30);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EECAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EECC8(void *a1)
{
  *a1 = &unk_26C669F78;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EED70()
{
  return 30;
}

uint64_t sub_2158EED78(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EED80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158EED9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EEE28(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EEE60(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6616E8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EEF18(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE30EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE30EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE30EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE30EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EEF8C(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 30;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EF0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158EF0E4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 31;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 31;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 31;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158EF580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158EF5EC(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A0C0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158EF684(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A0C0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 31);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158EF8A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158EF8BC(void *a1)
{
  *a1 = &unk_26C66A0C0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EF964()
{
  return 31;
}

uint64_t sub_2158EF96C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158EF974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158EF990(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158EFA1C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158EFA54(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661708[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158EFB0C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE31EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE31EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158EFB80(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 31;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158EFCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158EFCD8@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 16;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (16 * *a2 > a3)
    {
      int v5 = 16 * *a2;
      int v6 = 32;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 0xF) != 0)
    {
      int v6 = 32;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 32;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F0178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F01E4(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A208;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F027C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A208;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 32);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F0498(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F04B4(void *a1)
{
  *a1 = &unk_26C66A208;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F055C()
{
  return 32;
}

uint64_t sub_2158F0564(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F056C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158F0588(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F0614(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F064C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661728[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F0704(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE32EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE32EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F0778(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 32;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F08BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F08D0(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 4;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (4 * *a1 > a2)
    {
      int v4 = 4 * *a1;
      int v5 = 33;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if ((a2 & 3) != 0)
    {
      int v5 = 33;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158F0C14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F0C64(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A350;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F0CFC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A350;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 33);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F0F18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F0F34(void *a1)
{
  *a1 = &unk_26C66A350;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F0FDC()
{
  return 33;
}

uint64_t sub_2158F0FE4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F0FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158F1008(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F1094(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F10CC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661748[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F1184(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE33EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE33EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F11F8(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 33;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F133C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F1350@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 34;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 34;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 34;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F17EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F1858(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A498;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F18F0(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A498;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 34);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F1B0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F1B28(void *a1)
{
  *a1 = &unk_26C66A498;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F1BD0()
{
  return 34;
}

uint64_t sub_2158F1BD8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F1BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158F1BFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F1C88(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F1CC0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661768[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F1D78(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE34EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE34EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE34EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE34EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F1DEC(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 34;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F1F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F1F44@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 35;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 35;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 35;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F23E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F244C(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A5E0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F24E4(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A5E0;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 35);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F2700(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F271C(void *a1)
{
  *a1 = &unk_26C66A5E0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F27C4()
{
  return 35;
}

uint64_t sub_2158F27CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F27D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158F27F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F287C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F28B4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661788[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F296C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE35EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE35EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE35EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE35EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F29E0(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 35;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F2B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F2B38@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 16;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (16 * *a2 > a3)
    {
      int v5 = 16 * *a2;
      int v6 = 36;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 0xF) != 0)
    {
      int v6 = 36;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 36;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F2FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F3044(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A728;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F30DC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A728;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 36);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F32F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F3314(void *a1)
{
  *a1 = &unk_26C66A728;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F33BC()
{
  return 36;
}

uint64_t sub_2158F33C4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F33CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158F33E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F3474(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F34AC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6617A8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F3564(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE36EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE36EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE36EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE36EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F35D8(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 36;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F371C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F3730(_DWORD *a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = 4;
  unsigned int v7 = a2;
  if (*a1) {
    BOOL v3 = a1[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (4 * *a1 > a2)
    {
      int v4 = 4 * *a1;
      int v5 = 37;
      sub_2158D632C("Image row byte stride ", &v7, (std::string *)" is invalid for the given size ", (int)a1, (int)" and pixel format ", (int)&v5, (int)". It must be at least: pixel byte size (", (int)&v6, (uint64_t)") x width (", (uint64_t)a1, (uint64_t)") = ", (uint64_t)&v4, (uint64_t)".");
    }
    if ((a2 & 3) != 0)
    {
      int v5 = 37;
      sub_2158D67B4("Image row byte stride ", &v7, (std::string *)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a3 + 120) = 1;
}

void sub_2158F3A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F3AC4(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A870;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F3B5C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A870;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 37);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F3D78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F3D94(void *a1)
{
  *a1 = &unk_26C66A870;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F3E3C()
{
  return 37;
}

uint64_t sub_2158F3E44(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F3E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2158F3E68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F3EF4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F3F2C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6617C8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F3FE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE37EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE37EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F4058(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 1);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 37;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F419C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F41B0@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 38;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 38;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 38;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F464C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F46B8(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66A9B8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F4750(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66A9B8;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 38);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F496C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F4988(void *a1)
{
  *a1 = &unk_26C66A9B8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F4A30()
{
  return 38;
}

uint64_t sub_2158F4A38(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F4A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158F4A5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F4AE8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F4B20(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C6617E8[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F4BD8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE38EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE38EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F4C4C(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 38;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F4D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F4DA4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 2;
  unsigned int v8 = a3;
  v7[0] = 8;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (8 * *a2 > a3)
    {
      int v5 = 8 * *a2;
      int v6 = 39;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 7) != 0)
    {
      int v6 = 39;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if (result)
    {
      int v6 = 39;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F5240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F52AC(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66AB00;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F5344(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66AB00;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 39);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F5560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F557C(void *a1)
{
  *a1 = &unk_26C66AB00;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F5624()
{
  return 39;
}

uint64_t sub_2158F562C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F5634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158F5650(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F56DC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F5714(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661808[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F57CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE39EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE39EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE39EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE39EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F5840(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 2);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 39;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F5984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F5998@<X0>(uint64_t result@<X0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = result;
  v7[1] = 4;
  unsigned int v8 = a3;
  v7[0] = 16;
  if (*a2) {
    BOOL v4 = a2[1] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (16 * *a2 > a3)
    {
      int v5 = 16 * *a2;
      int v6 = 40;
      sub_2158D632C("Image row byte stride ", &v8, (std::string *)" is invalid for the given size ", (int)a2, (int)" and pixel format ", (int)&v6, (int)". It must be at least: pixel byte size (", (int)v7, (uint64_t)") x width (", (uint64_t)a2, (uint64_t)") = ", (uint64_t)&v5, (uint64_t)".");
    }
    if ((a3 & 0xF) != 0)
    {
      int v6 = 40;
      sub_2158D67B4("Image row byte stride ", &v8, (std::string *)" is invalid for pixel format ");
    }
    if ((result & 3) != 0)
    {
      int v6 = 40;
      sub_2158D6A70("Image base address ", &v9, (uint64_t)" is invalid for pixel format ");
    }
  }
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_2158F5E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2158F5EA4(void *result)
{
  uint64_t v1 = result;
  *result = &unk_26C66AC48;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158F5F3C(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26C66AC48;
  if (*a2) {
    operator new();
  }
  *a2 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 72))(&v7, 0, 40);
  long long v4 = v7[1];
  long long v3 = v7[2];
  *(_OWORD *)(a1 + 24) = *v7;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 56) = v3;
  unsigned int v7 = 0;
  MEMORY[0x2166C4D20]();
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_2158F6158(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F6174(void *a1)
{
  *a1 = &unk_26C66AC48;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F621C()
{
  return 40;
}

uint64_t sub_2158F6224(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158F622C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158F6248(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158F62D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F630C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    LODWORD(v2) = *(_DWORD *)(v1 + 160);
    if (v2)
    {
      if (v2 == -1)
      {
LABEL_9:
        *(_DWORD *)(v1 + 160) = -1;
        JUMPOUT(0x2166C4D20);
      }
    }
    else
    {
      uint64_t v2 = *(void (**)(void, void))(v1 + 64);
      if (v2)
      {
        v2(*(void *)(v1 + 56), *(void *)(v1 + 48));
        LODWORD(v2) = *(_DWORD *)(v1 + 160);
        if (v2 == -1) {
          goto LABEL_9;
        }
      }
    }
    ((void (*)(char *, uint64_t))off_26C661828[v2])(&v3, v1 + 48);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2158F63C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE40EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE40EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE40EEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d2vl13visual_logger14ExternalBufferILNS1_3kit3img6FormatE40EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_2158F6438(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[1];
  long long v4 = (std::__shared_weak_count *)a2[2];
  uint64_t v10 = v5;
  v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a2 + 4), 3, (uint64_t)a2 + 44, 4);
  uint64_t v6 = a2[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(_DWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = 40;
  *(_WORD *)(a1 + 44) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  unsigned int v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2158F657C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158F6590(_DWORD ***a1)
{
  return sub_2158F65AC(**a1, (char *)(*a1)[1]);
}

void sub_2158F659C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158F65AC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C667908[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    unsigned int v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    unsigned int v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158F66A0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  v13 = v3;
  *(void *)v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C667908[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158F6858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2158F689C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    result = sub_2158F6998((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158F6990(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2158F6998(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2158F6B98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2158F6BAC(uint64_t result, uint64_t a2)
{
  *(unsigned char *)result = 0;
  int v2 = *(unsigned __int8 *)(a2 + 160);
  *(unsigned char *)(result + 160) = v2;
  if (!v2)
  {
    *(_OWORD *)result = *(_OWORD *)a2;
    *(unsigned char *)(result + 16) = 0;
    *(unsigned char *)(result + 112) = 0;
    unint64_t v6 = (unsigned char *)(result + 112);
    if (!*(unsigned char *)(a2 + 112)) {
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (*(unsigned char *)(a2 + 40))
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(void *)(result + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(result + 16) = v7;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      *(unsigned char *)(result + 40) = 1;
    }
    *(unsigned char *)(result + 48) = 0;
    *(unsigned char *)(result + 104) = 0;
    if (*(unsigned char *)(a2 + 104))
    {
      long long v8 = *(_OWORD *)(a2 + 48);
      *(void *)(result + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(result + 48) = v8;
      *(void *)(a2 + 56) = 0;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 48) = 0;
      *(void *)(result + 72) = *(void *)(a2 + 72);
      long long v9 = *(_OWORD *)(a2 + 80);
      *(void *)(result + 96) = *(void *)(a2 + 96);
      *(_OWORD *)(result + 80) = v9;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 80) = 0;
      *(unsigned char *)(result + 104) = 1;
    }
    goto LABEL_11;
  }
  *(void *)result = &unk_26C66ADA8;
  *(void *)(result + 8) = &unk_26C657100;
  *(_OWORD *)(result + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 46);
  *(unsigned char *)(result + 64) = 0;
  *(_OWORD *)(result + 46) = v4;
  *(_OWORD *)(result + 32) = v3;
  *(unsigned char *)(result + 120) = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    *(void *)(result + 64) = &unk_26C657170;
    *(_OWORD *)(result + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0;
    long long v5 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(result + 102) = *(_OWORD *)(a2 + 102);
    *(_OWORD *)(result + 88) = v5;
    *(unsigned char *)(result + 120) = 1;
  }
  *(unsigned char *)(result + 128) = 0;
  *(unsigned char *)(result + 152) = 0;
  unint64_t v6 = (unsigned char *)(result + 152);
  if (*(unsigned char *)(a2 + 152))
  {
    *(void *)(result + 128) = off_26C67D770;
    *(_OWORD *)(result + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 144) = 0;
LABEL_11:
    *unint64_t v6 = 1;
  }
  return result;
}

BOOL sub_2158F6D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if (v2 != *(_DWORD *)(a2 + 48)) {
    return 0;
  }
  long long v4 = (uint64_t *)(a1 + 24);
  if (*(_DWORD *)(a1 + 24)) {
    BOOL v5 = *(_DWORD *)(a1 + 28) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  long long v7 = (unint64_t *)(a2 + 24);
  if (!*(_DWORD *)(a2 + 24))
  {
    if (v6)
    {
      BOOL v8 = 1;
      goto LABEL_13;
    }
    return 0;
  }
  BOOL v8 = *(_DWORD *)(a2 + 28) == 0;
  if ((v6 ^ v8)) {
    return 0;
  }
LABEL_13:
  if ((v6 & v8) == 1)
  {
    uint64_t v10 = *v4;
    if (v10 == *v7) {
      return HIDWORD(v10) == HIDWORD(*v7);
    }
    return 0;
  }
  v31[0] = &unk_26C65F5B0;
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (v12)
  {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = *(void *)(a1 + 40);
    int v14 = *(_DWORD *)(a1 + 48);
    __int16 v15 = *(_WORD *)(a1 + 52);
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 40);
    __int16 v15 = *(_WORD *)(a1 + 52);
    int v14 = v2;
  }
  v31[1] = v11;
  v32 = v12;
  uint64_t v33 = *v4;
  int v34 = *(_DWORD *)(a1 + 32);
  uint64_t v35 = v13;
  int v36 = v14;
  __int16 v37 = v15;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v24[0] = &unk_26C65F5B0;
  uint64_t v16 = *(void *)(a2 + 8);
  unint64_t v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v18 = *(void *)(a2 + 40);
    int v19 = *(_DWORD *)(a2 + 48);
    __int16 v20 = *(_WORD *)(a2 + 52);
    atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 40);
    int v19 = *(_DWORD *)(a2 + 48);
    __int16 v20 = *(_WORD *)(a2 + 52);
  }
  v24[1] = v16;
  v25 = v17;
  unint64_t v26 = *v7;
  int v27 = *((_DWORD *)v7 + 2);
  uint64_t v28 = v18;
  int v29 = v19;
  __int16 v30 = v20;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
  uint64_t v21 = sub_215D3CC24(v2, v31, v24);
  v22 = v25;
  if (v25 && !atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  v23 = v32;
  if (!v32 || atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v21;
  }
  ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
  std::__shared_weak_count::__release_weak(v23);
  return v21;
}

void sub_2158F7088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
}

void sub_2158F70A4()
{
  char v1 = 0;
  uint64_t v2 = 0;
  long long v3 = 0;
  sub_215DA3CC4((size_t *)&v0, &v2, &v3, 1, (uint64_t)&v1, 1, 0);
  operator new();
}

void sub_2158F71D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a16) {
    free(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158F71F0()
{
}

void sub_2158F7208(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158F7240(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_2158F7270(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img12IImageBufferEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img12IImageBufferEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img12IImageBufferEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img12IImageBufferEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2158F72E4()
{
}

void sub_2158F7554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  sub_215821460(&a9);
  _Unwind_Resume(a1);
}

void sub_2158F7590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  *(void *)(v2 + 8) = v3;
  BOOL v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_215764BDC((uint64_t *)va);
  MEMORY[0x2166C4D20](v2, 0x10F3C4035895BD5);
  _Unwind_Resume(a1);
}

void sub_2158F7608(int a1@<W0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, unsigned int a4@<W3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  if (a4 < 3)
  {
    if (a3 - 1 >= 0x28)
    {
      sub_2158F90A0(a3, (uint64_t)&v33);
      *(_OWORD *)a7 = v33;
      *(unsigned char *)(a7 + 16) = 0;
      *(unsigned char *)(a7 + 112) = 0;
      if (v43)
      {
        *(unsigned char *)(a7 + 40) = 0;
        int v10 = v36;
        if ((_BYTE)v36)
        {
          *(_OWORD *)(a7 + 16) = *(_OWORD *)__p;
          *(void *)(a7 + 32) = v35;
          __p[1] = 0;
          uint64_t v35 = 0;
          __p[0] = 0;
          *(unsigned char *)(a7 + 40) = 1;
        }
        *(unsigned char *)(a7 + 48) = 0;
        *(unsigned char *)(a7 + 104) = 0;
        if (v42)
        {
          uint64_t v11 = v39;
          *(void *)(a7 + 64) = v38;
          *(_OWORD *)(a7 + 48) = *(_OWORD *)v37;
          v37[0] = 0;
          v37[1] = 0;
          *(void *)(a7 + 72) = v11;
          *(_OWORD *)(a7 + 80) = *(_OWORD *)v40;
          *(void *)(a7 + 96) = v41;
          uint64_t v38 = 0;
          v40[0] = 0;
          v40[1] = 0;
          uint64_t v41 = 0;
          *(unsigned char *)(a7 + 104) = 1;
        }
        *(unsigned char *)(a7 + 112) = 1;
        *(unsigned char *)(a7 + 160) = 0;
        if (v10 && SHIBYTE(v35) < 0)
        {
          char v12 = (char *)__p[0];
LABEL_33:
          operator delete(v12);
        }
      }
      else
      {
        *(unsigned char *)(a7 + 160) = 0;
      }
    }
    else
    {
      if (a1 == 1)
      {
        unsigned int v46 = a4;
        unsigned int v47 = a3;
        v45 = a5;
        int v44 = a6;
        if (a3 <= 0x26 && ((1 << a3) & 0x63A26201BELL) != 0)
        {
          char v13 = 0;
          uint64_t v14 = 0;
          switch(a3)
          {
            case 1u:
              goto LABEL_56;
            case 2u:
              char v13 = 0;
              uint64_t v14 = 1;
              goto LABEL_56;
            case 3u:
              char v13 = 0;
              uint64_t v14 = 2;
              goto LABEL_56;
            case 4u:
              char v13 = 0;
              uint64_t v14 = 3;
              goto LABEL_56;
            case 5u:
              char v13 = 0;
              uint64_t v14 = 4;
LABEL_56:
              unint64_t v17 = (void **)((char *)&__p[-2] + 4 * v14);
LABEL_57:
              if ((v13 & 1) == 0 && (char *)v17 - (char *)&v33 != 56) {
                sub_2158C9E3C();
              }
              long long v29 = xmmword_215EBD240;
              *(_OWORD *)__int16 v30 = unk_215EBD250;
              long long v31 = xmmword_215EBD260;
              v32 = (void *)0x2600000025;
              int v49 = 0;
              sub_2158C2970(&v48, "invalid image format '");
              sub_215806C64();
            default:
              unint64_t v17 = &v37[1];
              break;
          }
        }
        else
        {
          unint64_t v17 = &v37[1];
          char v13 = 1;
        }
        uint64_t v14 = 5;
        switch(a3)
        {
          case 7u:
            goto LABEL_56;
          case 8u:
            uint64_t v14 = 6;
            goto LABEL_56;
          case 0x15u:
            uint64_t v14 = 7;
            goto LABEL_56;
          case 0x16u:
            uint64_t v14 = 8;
            goto LABEL_56;
          case 0x19u:
            uint64_t v14 = 9;
            goto LABEL_56;
          case 0x1Fu:
            uint64_t v14 = 10;
            goto LABEL_56;
          case 0x20u:
            uint64_t v14 = 11;
            goto LABEL_56;
          case 0x25u:
            uint64_t v14 = 12;
            goto LABEL_56;
          case 0x26u:
            uint64_t v14 = 13;
            goto LABEL_56;
          default:
            goto LABEL_57;
        }
      }
      if (!a1)
      {
        v24[0] = a5;
        LODWORD(v28) = a6;
        if (a4 != 1)
        {
          if (!a4)
          {
            v25[0] = a2;
            sub_215D71244(a3, v25);
          }
          sub_2158C9E3C();
        }
        v25[0] = a2;
        sub_215D7A484(a3, v25);
      }
      uint64_t v18 = (char *)operator new(0x20uLL);
      long long v19 = xmmword_215E9AD40;
      strcpy(v18, "invalid VZBufferType value");
      char v20 = 1;
      sub_2159644BC((long long *)&v18, (uint64_t)&v33);
      *(_OWORD *)a7 = v33;
      *(unsigned char *)(a7 + 16) = 0;
      *(unsigned char *)(a7 + 112) = 0;
      if (v43)
      {
        *(unsigned char *)(a7 + 40) = 0;
        int v15 = v36;
        if ((_BYTE)v36)
        {
          *(_OWORD *)(a7 + 16) = *(_OWORD *)__p;
          *(void *)(a7 + 32) = v35;
          __p[1] = 0;
          uint64_t v35 = 0;
          __p[0] = 0;
          *(unsigned char *)(a7 + 40) = 1;
        }
        *(unsigned char *)(a7 + 48) = 0;
        *(unsigned char *)(a7 + 104) = 0;
        if (v42)
        {
          uint64_t v16 = v39;
          *(void *)(a7 + 64) = v38;
          *(_OWORD *)(a7 + 48) = *(_OWORD *)v37;
          v37[0] = 0;
          v37[1] = 0;
          *(void *)(a7 + 72) = v16;
          *(_OWORD *)(a7 + 80) = *(_OWORD *)v40;
          *(void *)(a7 + 96) = v41;
          uint64_t v38 = 0;
          v40[0] = 0;
          v40[1] = 0;
          uint64_t v41 = 0;
          *(unsigned char *)(a7 + 104) = 1;
        }
        *(unsigned char *)(a7 + 112) = 1;
        *(unsigned char *)(a7 + 160) = 0;
        if (v15 && SHIBYTE(v35) < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        *(unsigned char *)(a7 + 160) = 0;
      }
      if (v20 && SHIBYTE(v19) < 0)
      {
        char v12 = v18;
        goto LABEL_33;
      }
    }
  }
  else
  {
    LODWORD(v30[1]) = 0;
    if (LODWORD(v30[1]) == -1) {
      sub_215742D4C();
    }
    v25[0] = v24;
    ((void (*)(long long *__return_ptr, _DWORD **, long long *))off_26C66AE88[LODWORD(v30[1])])(&v26, v25, &v29);
    if (LODWORD(v30[1]) != -1) {
      ((void (*)(_DWORD **, long long *))off_26C66AE40[LODWORD(v30[1])])(v25, &v29);
    }
    *(_OWORD *)uint64_t v21 = v26;
    v22 = v27;
    long long v26 = 0uLL;
    int v27 = 0;
    char v23 = 1;
    sub_2159644BC((long long *)v21, (uint64_t)&v33);
    *(_OWORD *)a7 = v33;
    *(unsigned char *)(a7 + 16) = 0;
    *(unsigned char *)(a7 + 112) = 0;
    if (v43)
    {
      *(unsigned char *)(a7 + 40) = 0;
      int v8 = v36;
      if ((_BYTE)v36)
      {
        *(_OWORD *)(a7 + 16) = *(_OWORD *)__p;
        *(void *)(a7 + 32) = v35;
        __p[1] = 0;
        uint64_t v35 = 0;
        __p[0] = 0;
        *(unsigned char *)(a7 + 40) = 1;
      }
      *(unsigned char *)(a7 + 48) = 0;
      *(unsigned char *)(a7 + 104) = 0;
      if (v42)
      {
        uint64_t v9 = v39;
        *(void *)(a7 + 64) = v38;
        *(_OWORD *)(a7 + 48) = *(_OWORD *)v37;
        v37[0] = 0;
        v37[1] = 0;
        *(void *)(a7 + 72) = v9;
        *(_OWORD *)(a7 + 80) = *(_OWORD *)v40;
        *(void *)(a7 + 96) = v41;
        uint64_t v38 = 0;
        v40[0] = 0;
        v40[1] = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a7 + 104) = 1;
      }
      *(unsigned char *)(a7 + 112) = 1;
      *(unsigned char *)(a7 + 160) = 0;
      if (v8 && SHIBYTE(v35) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      *(unsigned char *)(a7 + 160) = 0;
    }
    if (v23)
    {
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (SHIBYTE(v27) < 0)
    {
      char v12 = (char *)v26;
      goto LABEL_33;
    }
  }
}

void sub_2158F8DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (*(char *)(v65 - 137) < 0) {
    operator delete(*(void **)(v65 - 160));
  }
  __cxa_guard_abort(&qword_26788E528);
  sub_2157407D4((uint64_t)&a65);
  sub_215764584((uint64_t)&STACK[0x240]);
  _Unwind_Resume(a1);
}

void sub_2158F8F24(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 105) < 0)
  {
    operator delete(*(void **)(v1 - 128));
    sub_215742CF0(v1 - 160);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2158F8FFCLL);
}

void sub_2158F8F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2158F8F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v46 = a44;
  a44 = 0;
  if (v46)
  {
    sub_215E15464((uint64_t)&a44, v46);
    sub_215742CF0(v44 - 160);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2158F8FFCLL);
}

void sub_2158F8F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (a19 && a18 < 0) {
    operator delete(__p);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  _Unwind_Resume(a1);
}

void sub_2158F8FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_2158F8FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_2158F8FF8(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 160);
  _Unwind_Resume(a1);
}

void sub_2158F90A0(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v3 = a1;
  sub_2158F9180("invalid VZPixelFormat value '", &v3, (std::string *)"'");
  *(_OWORD *)__p = *(_OWORD *)v4;
  uint64_t v7 = v5;
  v4[1] = 0;
  uint64_t v5 = 0;
  v4[0] = 0;
  char v8 = 1;
  sub_2159644BC((long long *)__p, a2);
  if (v8 && SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v5) < 0) {
    operator delete(v4[0]);
  }
}

void sub_2158F914C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22 && a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158F9180(char *__s, unsigned int *a2, std::string *a3)
{
  int v7 = 0;
  sub_2158353B0(v6, __s);
  std::to_string(&v8, *a2);
  int v10 = (std::string *)v6;
  uint64_t v11 = &v8;
  char v12 = v6;
  char v13 = &v8;
  uint64_t v14 = &v8;
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v9 = &v10;
  ((void (*)(std::string ***, _DWORD *))off_26C66AE58[v7])(&v9, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  int v10 = (std::string *)v6;
  uint64_t v11 = a3;
  char v12 = v6;
  char v13 = a3;
  uint64_t v14 = a3;
  if (v7 == -1) {
    sub_215742D4C();
  }
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  ((void (*)(std::string *, _DWORD *))off_26C66AE70[v7])(&v8, v6);
  if (v7 == -1) {
    sub_215742D4C();
  }
  int v10 = &v8;
  uint64_t result = ((uint64_t (*)(std::string **, _DWORD *))off_26C66AE88[v7])(&v10, v6);
  if (v7 != -1) {
    return ((uint64_t (*)(std::string **, _DWORD *))off_26C66AE40[v7])(&v10, v6);
  }
  return result;
}

void sub_2158F92D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158F92F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2158F92E0);
}

void sub_2158F9314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v3 = *(std::__shared_weak_count **)(a2 + 16);
  uint64_t v14 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    char v13 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v5 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 32);
    int v12 = *(_DWORD *)(a2 + 40);
    int v6 = *(_DWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    char v13 = 0;
    uint64_t v5 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 32);
    int v12 = *(_DWORD *)(a2 + 40);
    int v6 = *(_DWORD *)(a2 + 56);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = v6;
  if (v4)
  {
    if (v3)
    {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
    if ((v7 & 0xFFFFFFu) <= 0x10000) {
      unsigned __int8 v8 = 0;
    }
    else {
      unsigned __int8 v8 = v7;
    }
    __int16 v9 = v7 & 0xFF00;
    if ((v7 & 0xFF0000) == 0) {
      __int16 v9 = 0;
    }
    unsigned int v3 = v13;
    *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
    if (!v13) {
      goto LABEL_17;
    }
  }
  else
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v3) {
      goto LABEL_17;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    int v10 = v14;
    if (!v14) {
      return;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v10 = v14;
  if (!v14) {
    return;
  }
LABEL_18:
  if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
}

void sub_2158F9524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2158F9548(int a1, uint64_t **a2)
{
  switch(a1)
  {
    case 0:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
    case 1:
      sub_2158D5EB0((unsigned int *)a2[1], *(_DWORD *)a2[2], (uint64_t)&v266);
      if (!v276) {
        goto LABEL_490;
      }
      uint64_t v3 = a2[1];
      uint64_t v4 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C66C138;
      int v5 = *(_DWORD *)v3;
      if (*((_DWORD *)v3 + 1)) {
        BOOL v6 = v5 == 0;
      }
      else {
        BOOL v6 = 1;
      }
      uint64_t v7 = v4 << 32;
      if (v6) {
        uint64_t v7 = 0;
      }
      *(void *)&long long v293 = v7 | (v5 != 0);
      sub_2158FFE18(&v280, v3, (uint64_t *)&v293, (uint64_t)&v291);
      *(void *)&long long v293 = &unk_26C66BFF0;
      sub_215900340((uint64_t)&v290, (uint64_t)&v293 + 8);
      v277 = &unk_26C657170;
      sub_215900B0C((uint64_t)&v278, &v293);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      unsigned __int8 v8 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      sub_215733368((uint64_t)&v293 + 8);
      __int16 v9 = v292;
      if (!v292) {
        goto LABEL_499;
      }
      goto LABEL_57;
    case 2:
      sub_2158D9F3C(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v266);
      if (!v276) {
        goto LABEL_490;
      }
      uint64_t v18 = a2[1];
      uint64_t v19 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C66C3B0;
      int v20 = *(_DWORD *)v18;
      if (*((_DWORD *)v18 + 1)) {
        BOOL v21 = v20 == 0;
      }
      else {
        BOOL v21 = 1;
      }
      uint64_t v22 = (v19 << 31) & 0x7FFFFFFF00000000;
      if (v21) {
        uint64_t v22 = 0;
      }
      *(void *)&long long v293 = v22 | (v20 != 0);
      sub_215900E40(&v280, v18, (uint64_t *)&v293, (uint64_t)&v291);
      *(void *)&long long v293 = &unk_26C66C230;
      sub_215901368((uint64_t)&v290, (uint64_t)&v293 + 8);
      v277 = &unk_26C657170;
      sub_215901AF4((uint64_t)&v278, &v293);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      char v23 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
      sub_215733368((uint64_t)&v293 + 8);
      __int16 v9 = v292;
      if (!v292) {
        goto LABEL_499;
      }
      goto LABEL_57;
    case 3:
      sub_2158DAB24(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v266);
      if (!v276) {
        goto LABEL_490;
      }
      v24 = a2[1];
      uint64_t v25 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C66C628;
      int v26 = *(_DWORD *)v24;
      if (*((_DWORD *)v24 + 1)) {
        BOOL v27 = v26 == 0;
      }
      else {
        BOOL v27 = 1;
      }
      uint64_t v28 = (v25 << 31) & 0x7FFFFFFF00000000;
      if (v27) {
        uint64_t v28 = 0;
      }
      *(void *)&long long v293 = v28 | (v26 != 0);
      sub_215901E28(&v280, v24, (uint64_t *)&v293, (uint64_t)&v291);
      *(void *)&long long v293 = &unk_26C66C4A8;
      sub_215902350((uint64_t)&v290, (uint64_t)&v293 + 8);
      v277 = &unk_26C657170;
      sub_215902B00((uint64_t)&v278, &v293);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      long long v29 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
      sub_215733368((uint64_t)&v293 + 8);
      __int16 v9 = v292;
      if (!v292) {
        goto LABEL_499;
      }
      goto LABEL_57;
    case 4:
      sub_2158DB70C(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v266);
      if (v276)
      {
        __int16 v30 = a2[1];
        uint64_t v31 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C66C8A0;
        int v32 = *(_DWORD *)v30;
        if (*((_DWORD *)v30 + 1)) {
          BOOL v33 = v32 == 0;
        }
        else {
          BOOL v33 = 1;
        }
        uint64_t v34 = (v31 << 30) & 0x3FFFFFFF00000000;
        if (v33) {
          uint64_t v34 = 0;
        }
        *(void *)&long long v293 = v34 | (v32 != 0);
        sub_215902E34(&v280, v30, (uint64_t *)&v293, (uint64_t)&v291);
        *(void *)&long long v293 = &unk_26C66C720;
        sub_21590335C((uint64_t)&v290, (uint64_t)&v293 + 8);
        v277 = &unk_26C657170;
        sub_215903AE8((uint64_t)&v278, &v293);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        uint64_t v35 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
        sub_215733368((uint64_t)&v293 + 8);
        __int16 v9 = v292;
        if (v292)
        {
LABEL_57:
          if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
      }
      else
      {
LABEL_490:
        long long v280 = v266;
        sub_215741BFC(v281, &v267);
        sub_2158CBAB8((uint64_t)a2[3], &v280);
        if (v289)
        {
          if (v288)
          {
            if (v287 < 0) {
              operator delete(__p);
            }
            if (v285 < 0) {
              operator delete(v284);
            }
          }
          if (v283 && v282 < 0) {
            operator delete(v281[0]);
          }
        }
      }
LABEL_499:
      if (!v276 && v275)
      {
        if (v274)
        {
          if (v273 < 0) {
            operator delete(v272);
          }
          if (v271 < 0) {
            operator delete(v270);
          }
        }
        if (v269)
        {
          if (v268 < 0) {
            operator delete((void *)v267);
          }
        }
      }
      return;
    case 5:
      sub_2158DC2FC(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        int v36 = a2[1];
        uint64_t v37 = **a2;
        uint64_t v38 = a2[2];
        v290 = &unk_26C66CB18;
        int v39 = *(_DWORD *)v36;
        if (*((_DWORD *)v36 + 1)) {
          BOOL v40 = v39 == 0;
        }
        else {
          BOOL v40 = 1;
        }
        unint64_t v41 = (unint64_t)*(unsigned int *)v38 << 32;
        if (v40) {
          unint64_t v41 = 0;
        }
        sub_215903E1C((BOOL)&v291, v37, v36, v41 | (2 * (v39 != 0)));
        *(void *)&long long v266 = &unk_26C66C998;
        sub_2159041F4((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215904A08((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        char v42 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 6:
      sub_2158DCD78(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        char v43 = a2[1];
        uint64_t v44 = **a2;
        uint64_t v45 = *(unsigned int *)a2[2];
        v290 = &unk_26C66CD90;
        int v46 = *(_DWORD *)v43;
        if (*((_DWORD *)v43 + 1)) {
          BOOL v47 = v46 == 0;
        }
        else {
          BOOL v47 = 1;
        }
        uint64_t v48 = (v45 << 31) & 0x7FFFFFFF00000000;
        if (v47) {
          uint64_t v48 = 0;
        }
        sub_215904D3C((BOOL)&v291, v44, v43, v48 | (2 * (v46 != 0)));
        *(void *)&long long v266 = &unk_26C66CC10;
        sub_215905114((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215905930((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        int v49 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 7:
      sub_2158DD96C(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v50 = a2[1];
        uint64_t v51 = **a2;
        uint64_t v52 = *(unsigned int *)a2[2];
        v290 = &unk_26C66D008;
        int v53 = *(_DWORD *)v50;
        if (*((_DWORD *)v50 + 1)) {
          BOOL v54 = v53 == 0;
        }
        else {
          BOOL v54 = 1;
        }
        uint64_t v55 = (v52 << 31) & 0x7FFFFFFF00000000;
        if (v54) {
          uint64_t v55 = 0;
        }
        sub_215905C64((BOOL)&v291, v51, v50, v55 | (2 * (v53 != 0)));
        *(void *)&long long v266 = &unk_26C66CE88;
        sub_21590603C((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590681C((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v56 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 8:
      sub_2158DE560(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v57 = a2[1];
        uint64_t v58 = **a2;
        uint64_t v59 = *(unsigned int *)a2[2];
        v290 = &unk_26C66D280;
        int v60 = *(_DWORD *)v57;
        if (*((_DWORD *)v57 + 1)) {
          BOOL v61 = v60 == 0;
        }
        else {
          BOOL v61 = 1;
        }
        uint64_t v62 = (v59 << 30) & 0x3FFFFFFF00000000;
        if (v61) {
          uint64_t v62 = 0;
        }
        sub_215906B50((BOOL)&v291, v58, v57, v62 | (2 * (v60 != 0)));
        *(void *)&long long v266 = &unk_26C66D100;
        sub_215906F28((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215907744((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v63 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 9:
      sub_2158DF158(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v64 = a2[1];
        uint64_t v65 = **a2;
        v66 = a2[2];
        v290 = &unk_26C66D4F8;
        uint64_t v67 = 3;
        if (!*(_DWORD *)v64) {
          uint64_t v67 = 0;
        }
        if (*((_DWORD *)v64 + 1)) {
          BOOL v68 = *(_DWORD *)v64 == 0;
        }
        else {
          BOOL v68 = 1;
        }
        unint64_t v69 = (unint64_t)*(unsigned int *)v66 << 32;
        if (v68) {
          unint64_t v69 = 0;
        }
        sub_215907A78((BOOL)&v291, v65, v64, v69 | v67);
        *(void *)&long long v266 = &unk_26C66D378;
        sub_215907E50((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215908670((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v70 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 10:
      sub_2158DFBEC(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v201 = a2[1];
        uint64_t v202 = **a2;
        uint64_t v203 = *(unsigned int *)a2[2];
        v290 = &unk_26C66D770;
        uint64_t v204 = 3;
        if (!*(_DWORD *)v201) {
          uint64_t v204 = 0;
        }
        if (*((_DWORD *)v201 + 1)) {
          BOOL v205 = *(_DWORD *)v201 == 0;
        }
        else {
          BOOL v205 = 1;
        }
        uint64_t v206 = (v203 << 31) & 0x7FFFFFFF00000000;
        if (v205) {
          uint64_t v206 = 0;
        }
        sub_2159089A4((BOOL)&v291, v202, v201, v206 | v204);
        *(void *)&long long v266 = &unk_26C66D5F0;
        sub_215908D7C((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_2159095FC((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v207 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
          std::__shared_weak_count::__release_weak(v207);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 11:
      sub_2158E07FC(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v208 = a2[1];
        uint64_t v209 = **a2;
        uint64_t v210 = *(unsigned int *)a2[2];
        v290 = &unk_26C66D9E8;
        uint64_t v211 = 3;
        if (!*(_DWORD *)v208) {
          uint64_t v211 = 0;
        }
        if (*((_DWORD *)v208 + 1)) {
          BOOL v212 = *(_DWORD *)v208 == 0;
        }
        else {
          BOOL v212 = 1;
        }
        uint64_t v213 = (v210 << 31) & 0x7FFFFFFF00000000;
        if (v212) {
          uint64_t v213 = 0;
        }
        sub_215909930((BOOL)&v291, v209, v208, v213 | v211);
        *(void *)&long long v266 = &unk_26C66D868;
        sub_215909D08((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590A4E8((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v214 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 12:
      sub_2158E140C(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v71 = a2[1];
        uint64_t v72 = **a2;
        uint64_t v73 = *(unsigned int *)a2[2];
        v290 = &unk_26C66DC60;
        uint64_t v74 = 3;
        if (!*(_DWORD *)v71) {
          uint64_t v74 = 0;
        }
        if (*((_DWORD *)v71 + 1)) {
          BOOL v75 = *(_DWORD *)v71 == 0;
        }
        else {
          BOOL v75 = 1;
        }
        uint64_t v76 = (v73 << 30) & 0x3FFFFFFF00000000;
        if (v75) {
          uint64_t v76 = 0;
        }
        sub_21590A81C((BOOL)&v291, v72, v71, v76 | v74);
        *(void *)&long long v266 = &unk_26C66DAE0;
        sub_21590ABF4((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590B5BC((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v77 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
          std::__shared_weak_count::__release_weak(v77);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 13:
      sub_2158E2020(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v78 = a2[1];
        uint64_t v79 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C66DED8;
        int v80 = *(_DWORD *)v78;
        if (*((_DWORD *)v78 + 1)) {
          BOOL v81 = v80 == 0;
        }
        else {
          BOOL v81 = 1;
        }
        uint64_t v82 = v79 << 32;
        if (v81) {
          uint64_t v82 = 0;
        }
        *(void *)&long long v266 = v82 | (4 * (v80 != 0));
        sub_21590B8F0((uint64_t *)&v280, v78, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C66DD58;
        sub_21590BE7C((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590C69C((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v83 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 14:
      sub_2158E2AA0(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v84 = a2[1];
        uint64_t v85 = **a2;
        uint64_t v86 = *(unsigned int *)a2[2];
        v290 = &unk_26C66E150;
        int v87 = *(_DWORD *)v84;
        if (*((_DWORD *)v84 + 1)) {
          BOOL v88 = v87 == 0;
        }
        else {
          BOOL v88 = 1;
        }
        uint64_t v89 = (v86 << 31) & 0x7FFFFFFF00000000;
        if (v88) {
          uint64_t v89 = 0;
        }
        sub_21590C9D0((BOOL)&v291, v85, v84, v89 | (4 * (v87 != 0)));
        *(void *)&long long v266 = &unk_26C66DFD0;
        sub_21590CDA8((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590D628((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v90 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
          std::__shared_weak_count::__release_weak(v90);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 15:
      sub_2158E3694(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v215 = a2[1];
        uint64_t v216 = **a2;
        uint64_t v217 = *(unsigned int *)a2[2];
        v290 = &unk_26C66E3C8;
        int v218 = *(_DWORD *)v215;
        if (*((_DWORD *)v215 + 1)) {
          BOOL v219 = v218 == 0;
        }
        else {
          BOOL v219 = 1;
        }
        uint64_t v220 = (v217 << 31) & 0x7FFFFFFF00000000;
        if (v219) {
          uint64_t v220 = 0;
        }
        sub_21590D95C((BOOL)&v291, v216, v215, v220 | (4 * (v218 != 0)));
        *(void *)&long long v266 = &unk_26C66E248;
        sub_21590DD34((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590E514((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v221 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
          std::__shared_weak_count::__release_weak(v221);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (!v289) {
        break;
      }
      if (v288)
      {
        if (v287 < 0) {
          operator delete(__p);
        }
        if (v285 < 0) {
          operator delete(v284);
        }
      }
      if (!v283 || (v282 & 0x80000000) == 0) {
        break;
      }
      goto LABEL_713;
    case 16:
      sub_2158E4288(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v91 = a2[1];
        uint64_t v92 = **a2;
        uint64_t v93 = *(unsigned int *)a2[2];
        v290 = &unk_26C66E640;
        int v94 = *(_DWORD *)v91;
        if (*((_DWORD *)v91 + 1)) {
          BOOL v95 = v94 == 0;
        }
        else {
          BOOL v95 = 1;
        }
        uint64_t v96 = (v93 << 30) & 0x3FFFFFFF00000000;
        if (v95) {
          uint64_t v96 = 0;
        }
        sub_21590E848((BOOL)&v291, v92, v91, v96 | (4 * (v94 != 0)));
        *(void *)&long long v266 = &unk_26C66E4C0;
        sub_21590EC20((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21590F4A0((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v97 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
          std::__shared_weak_count::__release_weak(v97);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 17:
      sub_2158E4E80(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v222 = a2[1];
        uint64_t v223 = **a2;
        v224 = a2[2];
        v290 = &unk_26C66E8B8;
        uint64_t v225 = 3;
        if (!*(_DWORD *)v222) {
          uint64_t v225 = 0;
        }
        if (*((_DWORD *)v222 + 1)) {
          BOOL v226 = *(_DWORD *)v222 == 0;
        }
        else {
          BOOL v226 = 1;
        }
        unint64_t v227 = (unint64_t)*(unsigned int *)v224 << 32;
        if (v226) {
          unint64_t v227 = 0;
        }
        sub_21590F7D4((BOOL)&v291, v223, v222, v227 | v225);
        *(void *)&long long v266 = &unk_26C66E738;
        sub_21590FBAC((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_2159103CC((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v228 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v228->__on_zero_shared)(v228);
          std::__shared_weak_count::__release_weak(v228);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (v292) {
          goto LABEL_478;
        }
      }
      else
      {
        long long v280 = v293;
        sub_215741BFC(v281, &v294);
        sub_2158CBAB8((uint64_t)a2[3], &v280);
        if (v289)
        {
          if (v288)
          {
            if (v287 < 0) {
              operator delete(__p);
            }
            if (v285 < 0) {
              operator delete(v284);
            }
          }
          if (v283 && v282 < 0) {
            goto LABEL_713;
          }
        }
      }
      break;
    case 18:
      sub_2158E5914(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v98 = a2[1];
        uint64_t v99 = **a2;
        uint64_t v100 = *(unsigned int *)a2[2];
        v290 = &unk_26C66EB30;
        uint64_t v101 = 3;
        if (!*(_DWORD *)v98) {
          uint64_t v101 = 0;
        }
        if (*((_DWORD *)v98 + 1)) {
          BOOL v102 = *(_DWORD *)v98 == 0;
        }
        else {
          BOOL v102 = 1;
        }
        uint64_t v103 = (v100 << 31) & 0x7FFFFFFF00000000;
        if (v102) {
          uint64_t v103 = 0;
        }
        sub_215910700((BOOL)&v291, v99, v98, v103 | v101);
        *(void *)&long long v266 = &unk_26C66E9B0;
        sub_215910AD8((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215911358((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v104 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
          std::__shared_weak_count::__release_weak(v104);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 19:
      sub_2158E6524(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v105 = a2[1];
        uint64_t v106 = **a2;
        uint64_t v107 = *(unsigned int *)a2[2];
        v290 = &unk_26C66EDA8;
        uint64_t v108 = 3;
        if (!*(_DWORD *)v105) {
          uint64_t v108 = 0;
        }
        if (*((_DWORD *)v105 + 1)) {
          BOOL v109 = *(_DWORD *)v105 == 0;
        }
        else {
          BOOL v109 = 1;
        }
        uint64_t v110 = (v107 << 31) & 0x7FFFFFFF00000000;
        if (v109) {
          uint64_t v110 = 0;
        }
        sub_21591168C((BOOL)&v291, v106, v105, v110 | v108);
        *(void *)&long long v266 = &unk_26C66EC28;
        sub_215911A64((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215912244((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v111 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 20:
      sub_2158E7134(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v229 = a2[1];
      uint64_t v230 = **a2;
      uint64_t v231 = *(unsigned int *)a2[2];
      v290 = &unk_26C66F020;
      uint64_t v232 = 3;
      if (!*(_DWORD *)v229) {
        uint64_t v232 = 0;
      }
      if (*((_DWORD *)v229 + 1)) {
        BOOL v233 = *(_DWORD *)v229 == 0;
      }
      else {
        BOOL v233 = 1;
      }
      uint64_t v234 = (v231 << 30) & 0x3FFFFFFF00000000;
      if (v233) {
        uint64_t v234 = 0;
      }
      sub_215912578((BOOL)&v291, v230, v229, v234 | v232);
      *(void *)&long long v266 = &unk_26C66EEA0;
      sub_215912950((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_2159131D0((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v235 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v235->__on_zero_shared)(v235);
        std::__shared_weak_count::__release_weak(v235);
      }
      sub_215733368((uint64_t)&v266 + 8);
      unint64_t v17 = v292;
      if (!v292) {
        break;
      }
      goto LABEL_478;
    case 21:
      sub_2158E7D48(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v236 = a2[1];
      uint64_t v237 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C66F298;
      uint64_t v238 = 3;
      if (!*(_DWORD *)v236) {
        uint64_t v238 = 0;
      }
      if (*((_DWORD *)v236 + 1)) {
        BOOL v239 = *(_DWORD *)v236 == 0;
      }
      else {
        BOOL v239 = 1;
      }
      uint64_t v240 = v237 << 32;
      if (v239) {
        uint64_t v240 = 0;
      }
      *(void *)&long long v266 = v240 | v238;
      sub_215913504((uint64_t *)&v280, v236, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C66F118;
      sub_215913A90((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_2159142B0((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v241 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
        std::__shared_weak_count::__release_weak(v241);
      }
      sub_215733368((uint64_t)&v266 + 8);
      unint64_t v17 = v292;
      if (!v292) {
        break;
      }
      goto LABEL_478;
    case 22:
      sub_2158E87DC(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v112 = a2[1];
        uint64_t v113 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C66F510;
        uint64_t v114 = 3;
        if (!*(_DWORD *)v112) {
          uint64_t v114 = 0;
        }
        if (*((_DWORD *)v112 + 1)) {
          BOOL v115 = *(_DWORD *)v112 == 0;
        }
        else {
          BOOL v115 = 1;
        }
        uint64_t v116 = (v113 << 31) & 0x7FFFFFFF00000000;
        if (v115) {
          uint64_t v116 = 0;
        }
        *(void *)&long long v266 = v116 | v114;
        sub_2159145E4((uint64_t *)&v280, v112, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C66F390;
        sub_215914B70((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_2159153F0((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v117 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 23:
      sub_2158E93EC(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v242 = a2[1];
      uint64_t v243 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C66F788;
      uint64_t v244 = 3;
      if (!*(_DWORD *)v242) {
        uint64_t v244 = 0;
      }
      if (*((_DWORD *)v242 + 1)) {
        BOOL v245 = *(_DWORD *)v242 == 0;
      }
      else {
        BOOL v245 = 1;
      }
      uint64_t v246 = (v243 << 31) & 0x7FFFFFFF00000000;
      if (v245) {
        uint64_t v246 = 0;
      }
      *(void *)&long long v266 = v246 | v244;
      sub_215915724((uint64_t *)&v280, v242, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C66F608;
      sub_215915CB0((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215916490((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v247 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
        std::__shared_weak_count::__release_weak(v247);
      }
      sub_215733368((uint64_t)&v266 + 8);
      unint64_t v17 = v292;
      if (!v292) {
        break;
      }
      goto LABEL_478;
    case 24:
      sub_2158E9FFC(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v118 = a2[1];
        uint64_t v119 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C66FA00;
        uint64_t v120 = 3;
        if (!*(_DWORD *)v118) {
          uint64_t v120 = 0;
        }
        if (*((_DWORD *)v118 + 1)) {
          BOOL v121 = *(_DWORD *)v118 == 0;
        }
        else {
          BOOL v121 = 1;
        }
        uint64_t v122 = (v119 << 30) & 0x3FFFFFFF00000000;
        if (v121) {
          uint64_t v122 = 0;
        }
        *(void *)&long long v266 = v122 | v120;
        sub_2159167C4((uint64_t *)&v280, v118, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C66F880;
        sub_215916D50((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_2159175D0((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v123 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
          std::__shared_weak_count::__release_weak(v123);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 25:
      sub_2158EAC10(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v124 = a2[1];
        uint64_t v125 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C66FC78;
        int v126 = *(_DWORD *)v124;
        if (*((_DWORD *)v124 + 1)) {
          BOOL v127 = v126 == 0;
        }
        else {
          BOOL v127 = 1;
        }
        uint64_t v128 = v125 << 32;
        if (v127) {
          uint64_t v128 = 0;
        }
        *(void *)&long long v266 = v128 | (4 * (v126 != 0));
        sub_215917904((uint64_t *)&v280, v124, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C66FAF8;
        sub_215917E90((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_2159186B0((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v129 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
          std::__shared_weak_count::__release_weak(v129);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 26:
      sub_2158EB690(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v130 = a2[1];
        uint64_t v131 = **a2;
        uint64_t v132 = *(unsigned int *)a2[2];
        v290 = &unk_26C66FEF0;
        int v133 = *(_DWORD *)v130;
        if (*((_DWORD *)v130 + 1)) {
          BOOL v134 = v133 == 0;
        }
        else {
          BOOL v134 = 1;
        }
        uint64_t v135 = (v132 << 31) & 0x7FFFFFFF00000000;
        if (v134) {
          uint64_t v135 = 0;
        }
        sub_2159189E4((BOOL)&v291, v131, v130, v135 | (4 * (v133 != 0)));
        *(void *)&long long v266 = &unk_26C66FD70;
        sub_215918DBC((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21591963C((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v136 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
          std::__shared_weak_count::__release_weak(v136);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 27:
      sub_2158EC284(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        int v10 = a2[1];
        uint64_t v11 = **a2;
        uint64_t v12 = *(unsigned int *)a2[2];
        v290 = &unk_26C670168;
        int v13 = *(_DWORD *)v10;
        if (*((_DWORD *)v10 + 1)) {
          BOOL v14 = v13 == 0;
        }
        else {
          BOOL v14 = 1;
        }
        uint64_t v15 = (v12 << 31) & 0x7FFFFFFF00000000;
        if (v14) {
          uint64_t v15 = 0;
        }
        sub_215919970((BOOL)&v291, v11, v10, v15 | (4 * (v13 != 0)));
        *(void *)&long long v266 = &unk_26C66FFE8;
        sub_215919D48((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21591A528((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        uint64_t v16 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 28:
      sub_2158ECE78(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v137 = a2[1];
        uint64_t v138 = **a2;
        uint64_t v139 = *(unsigned int *)a2[2];
        v290 = &unk_26C6703E0;
        int v140 = *(_DWORD *)v137;
        if (*((_DWORD *)v137 + 1)) {
          BOOL v141 = v140 == 0;
        }
        else {
          BOOL v141 = 1;
        }
        uint64_t v142 = (v139 << 30) & 0x3FFFFFFF00000000;
        if (v141) {
          uint64_t v142 = 0;
        }
        sub_21591A85C((BOOL)&v291, v138, v137, v142 | (4 * (v140 != 0)));
        *(void *)&long long v266 = &unk_26C670260;
        sub_21591AC34((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21591B4B4((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v143 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
          std::__shared_weak_count::__release_weak(v143);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 29:
      sub_2158EDA70(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v144 = a2[1];
        uint64_t v145 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C670658;
        int v146 = *(_DWORD *)v144;
        if (*((_DWORD *)v144 + 1)) {
          BOOL v147 = v146 == 0;
        }
        else {
          BOOL v147 = 1;
        }
        uint64_t v148 = v145 << 32;
        if (v147) {
          uint64_t v148 = 0;
        }
        *(void *)&long long v266 = v148 | (4 * (v146 != 0));
        sub_21591B7E8((uint64_t *)&v280, v144, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C6704D8;
        sub_21591BD74((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_21591C594((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v149 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (!v292 || atomic_fetch_add(&v292->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
        goto LABEL_479;
      }
      long long v280 = v293;
      sub_215741BFC(v281, &v294);
      sub_2158CBAB8((uint64_t)a2[3], &v280);
      if (v289)
      {
        if (v288)
        {
          if (v287 < 0) {
            operator delete(__p);
          }
          if (v285 < 0) {
            operator delete(v284);
          }
        }
        if (v283 && v282 < 0) {
          goto LABEL_713;
        }
      }
      break;
    case 30:
      sub_2158EE4F0(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v150 = a2[1];
      uint64_t v151 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C6708D0;
      int v152 = *(_DWORD *)v150;
      if (*((_DWORD *)v150 + 1)) {
        BOOL v153 = v152 == 0;
      }
      else {
        BOOL v153 = 1;
      }
      uint64_t v154 = (v151 << 31) & 0x7FFFFFFF00000000;
      if (v153) {
        uint64_t v154 = 0;
      }
      *(void *)&long long v266 = v154 | (4 * (v152 != 0));
      sub_21591C8C8((uint64_t *)&v280, v150, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C670750;
      sub_21591CE54((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_21591D6D4((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v155 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
        std::__shared_weak_count::__release_weak(v155);
      }
      sub_215733368((uint64_t)&v266 + 8);
      unint64_t v17 = v292;
      if (!v292) {
        break;
      }
      goto LABEL_478;
    case 31:
      sub_2158EF0E4(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v156 = a2[1];
      uint64_t v157 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C670B48;
      int v158 = *(_DWORD *)v156;
      if (*((_DWORD *)v156 + 1)) {
        BOOL v159 = v158 == 0;
      }
      else {
        BOOL v159 = 1;
      }
      uint64_t v160 = (v157 << 31) & 0x7FFFFFFF00000000;
      if (v159) {
        uint64_t v160 = 0;
      }
      *(void *)&long long v266 = v160 | (4 * (v158 != 0));
      sub_21591DA08((uint64_t *)&v280, v156, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C6709C8;
      sub_21591DF94((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_21591E774((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v161 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
        std::__shared_weak_count::__release_weak(v161);
      }
      goto LABEL_477;
    case 32:
      sub_2158EFCD8(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v162 = a2[1];
      uint64_t v163 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C670DC0;
      int v164 = *(_DWORD *)v162;
      if (*((_DWORD *)v162 + 1)) {
        BOOL v165 = v164 == 0;
      }
      else {
        BOOL v165 = 1;
      }
      uint64_t v166 = (v163 << 30) & 0x3FFFFFFF00000000;
      if (v165) {
        uint64_t v166 = 0;
      }
      *(void *)&long long v266 = v166 | (4 * (v164 != 0));
      sub_21591EAA8((uint64_t *)&v280, v162, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C670C40;
      sub_21591F034((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_21591F8B4((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v167 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
        std::__shared_weak_count::__release_weak(v167);
      }
      goto LABEL_477;
    case 33:
      sub_2158F08D0(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v248 = a2[1];
      uint64_t v249 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C671038;
      int v250 = *(_DWORD *)v248;
      if (*((_DWORD *)v248 + 1)) {
        BOOL v251 = v250 == 0;
      }
      else {
        BOOL v251 = 1;
      }
      uint64_t v252 = v249 << 32;
      if (v251) {
        uint64_t v252 = 0;
      }
      *(void *)&long long v266 = v252 | (4 * (v250 != 0));
      sub_21591FBE8((uint64_t *)&v280, v248, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C670EB8;
      sub_215920174((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215920994((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v253 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
        std::__shared_weak_count::__release_weak(v253);
      }
      goto LABEL_477;
    case 34:
      sub_2158F1350(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v168 = a2[1];
      uint64_t v169 = **a2;
      uint64_t v170 = *(unsigned int *)a2[2];
      v290 = &unk_26C6712B0;
      int v171 = *(_DWORD *)v168;
      if (*((_DWORD *)v168 + 1)) {
        BOOL v172 = v171 == 0;
      }
      else {
        BOOL v172 = 1;
      }
      uint64_t v173 = (v170 << 31) & 0x7FFFFFFF00000000;
      if (v172) {
        uint64_t v173 = 0;
      }
      sub_215920CC8((BOOL)&v291, v169, v168, v173 | (4 * (v171 != 0)));
      *(void *)&long long v266 = &unk_26C671130;
      sub_2159210A0((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215921920((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v174 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
        std::__shared_weak_count::__release_weak(v174);
      }
      goto LABEL_477;
    case 35:
      sub_2158F1F44(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v175 = a2[1];
      uint64_t v176 = **a2;
      uint64_t v177 = *(unsigned int *)a2[2];
      v290 = &unk_26C671528;
      int v178 = *(_DWORD *)v175;
      if (*((_DWORD *)v175 + 1)) {
        BOOL v179 = v178 == 0;
      }
      else {
        BOOL v179 = 1;
      }
      uint64_t v180 = (v177 << 31) & 0x7FFFFFFF00000000;
      if (v179) {
        uint64_t v180 = 0;
      }
      sub_215921C54((BOOL)&v291, v176, v175, v180 | (4 * (v178 != 0)));
      *(void *)&long long v266 = &unk_26C6713A8;
      sub_21592202C((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_21592280C((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v181 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
        std::__shared_weak_count::__release_weak(v181);
      }
      goto LABEL_477;
    case 36:
      sub_2158F2B38(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v182 = a2[1];
      uint64_t v183 = **a2;
      uint64_t v184 = *(unsigned int *)a2[2];
      v290 = &unk_26C6717A0;
      int v185 = *(_DWORD *)v182;
      if (*((_DWORD *)v182 + 1)) {
        BOOL v186 = v185 == 0;
      }
      else {
        BOOL v186 = 1;
      }
      uint64_t v187 = (v184 << 30) & 0x3FFFFFFF00000000;
      if (v186) {
        uint64_t v187 = 0;
      }
      sub_215922B40((BOOL)&v291, v183, v182, v187 | (4 * (v185 != 0)));
      *(void *)&long long v266 = &unk_26C671620;
      sub_215922F18((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215923798((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v188 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
        std::__shared_weak_count::__release_weak(v188);
      }
      goto LABEL_477;
    case 37:
      sub_2158F3730(a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v254 = a2[1];
      uint64_t v255 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C671A18;
      int v256 = *(_DWORD *)v254;
      if (*((_DWORD *)v254 + 1)) {
        BOOL v257 = v256 == 0;
      }
      else {
        BOOL v257 = 1;
      }
      uint64_t v258 = v255 << 32;
      if (v257) {
        uint64_t v258 = 0;
      }
      *(void *)&long long v266 = v258 | (4 * (v256 != 0));
      sub_215923ACC((uint64_t *)&v280, v254, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C671898;
      sub_215924058((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215924878((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v259 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
        std::__shared_weak_count::__release_weak(v259);
      }
      goto LABEL_477;
    case 38:
      sub_2158F41B0(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v260 = a2[1];
      uint64_t v261 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C671C90;
      int v262 = *(_DWORD *)v260;
      if (*((_DWORD *)v260 + 1)) {
        BOOL v263 = v262 == 0;
      }
      else {
        BOOL v263 = 1;
      }
      uint64_t v264 = (v261 << 31) & 0x7FFFFFFF00000000;
      if (v263) {
        uint64_t v264 = 0;
      }
      *(void *)&long long v266 = v264 | (4 * (v262 != 0));
      sub_215924BAC((uint64_t *)&v280, v260, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C671B10;
      sub_215925138((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_2159259B8((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v265 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v265->__on_zero_shared)(v265);
        std::__shared_weak_count::__release_weak(v265);
      }
      goto LABEL_477;
    case 39:
      sub_2158F4DA4(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (!v303) {
        goto LABEL_705;
      }
      v189 = a2[1];
      uint64_t v190 = *(unsigned int *)a2[2];
      *(void *)&long long v280 = **a2;
      v290 = &unk_26C671F08;
      int v191 = *(_DWORD *)v189;
      if (*((_DWORD *)v189 + 1)) {
        BOOL v192 = v191 == 0;
      }
      else {
        BOOL v192 = 1;
      }
      uint64_t v193 = (v190 << 31) & 0x7FFFFFFF00000000;
      if (v192) {
        uint64_t v193 = 0;
      }
      *(void *)&long long v266 = v193 | (4 * (v191 != 0));
      sub_215925CEC((uint64_t *)&v280, v189, &v266, (uint64_t)&v291);
      *(void *)&long long v266 = &unk_26C671D88;
      sub_215926278((uint64_t)&v290, (uint64_t)&v266 + 8);
      v277 = &unk_26C657170;
      sub_215926A58((uint64_t)&v278, &v266);
      sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
      sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
      sub_2158CA328((uint64_t)&v280);
      v277 = &unk_26C657170;
      v194 = v279;
      if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
        std::__shared_weak_count::__release_weak(v194);
      }
      goto LABEL_477;
    case 40:
      sub_2158F5998(**a2, a2[1], *(_DWORD *)a2[2], (uint64_t)&v293);
      if (v303)
      {
        v195 = a2[1];
        uint64_t v196 = *(unsigned int *)a2[2];
        *(void *)&long long v280 = **a2;
        v290 = &unk_26C672180;
        int v197 = *(_DWORD *)v195;
        if (*((_DWORD *)v195 + 1)) {
          BOOL v198 = v197 == 0;
        }
        else {
          BOOL v198 = 1;
        }
        uint64_t v199 = (v196 << 30) & 0x3FFFFFFF00000000;
        if (v198) {
          uint64_t v199 = 0;
        }
        *(void *)&long long v266 = v199 | (4 * (v197 != 0));
        sub_215926D8C((uint64_t *)&v280, v195, &v266, (uint64_t)&v291);
        *(void *)&long long v266 = &unk_26C672000;
        sub_215927318((uint64_t)&v290, (uint64_t)&v266 + 8);
        v277 = &unk_26C657170;
        sub_215927B98((uint64_t)&v278, &v266);
        sub_2158CA1D4((uint64_t)&v280, (uint64_t)&v277);
        sub_2158D60C4((uint64_t)a2[3], (uint64_t)&v280);
        sub_2158CA328((uint64_t)&v280);
        v277 = &unk_26C657170;
        v200 = v279;
        if (v279 && !atomic_fetch_add(&v279->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
          std::__shared_weak_count::__release_weak(v200);
        }
LABEL_477:
        sub_215733368((uint64_t)&v266 + 8);
        unint64_t v17 = v292;
        if (v292)
        {
LABEL_478:
          if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_479:
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
      }
      else
      {
LABEL_705:
        long long v280 = v293;
        sub_215741BFC(v281, &v294);
        sub_2158CBAB8((uint64_t)a2[3], &v280);
        if (v289)
        {
          if (v288)
          {
            if (v287 < 0) {
              operator delete(__p);
            }
            if (v285 < 0) {
              operator delete(v284);
            }
          }
          if (v283 && v282 < 0) {
LABEL_713:
          }
            operator delete(v281[0]);
        }
      }
      break;
    default:
      return;
  }
  if (!v303 && v302)
  {
    if (v301)
    {
      if (v300 < 0) {
        operator delete(v299);
      }
      if (v298 < 0) {
        operator delete(v297);
      }
    }
    if (v296 && v295 < 0) {
      operator delete((void *)v294);
    }
  }
}

void sub_2158FDCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,char a55,int a56,char a57)
{
  if (a57)
  {
    if (a55)
    {
      if (a54 < 0) {
        operator delete(__p);
      }
      if (a47 < 0) {
        operator delete(a42);
      }
    }
    if (a41 && a40 < 0) {
      operator delete(a35);
    }
  }
  if (!*(unsigned char *)(v57 - 40) && *(unsigned char *)(v57 - 48))
  {
    if (*(unsigned char *)(v57 - 56))
    {
      if (*(char *)(v57 - 57) < 0) {
        operator delete(*(void **)(v57 - 80));
      }
      if (*(char *)(v57 - 89) < 0) {
        operator delete(*(void **)(v57 - 112));
      }
    }
    if (*(unsigned char *)(v57 - 120))
    {
      if (*(char *)(v57 - 121) < 0)
      {
        operator delete(*(void **)(v57 - 144));
        _Unwind_Resume(a1);
      }
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2158FFD20(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2158FFD9C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158FFE18(void *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  if (a2[1]) {
    BOOL v5 = *a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = *(void *)a2;
  if (v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *a3;
  *(void *)&long long v9 = *a1;
  *((void *)&v9 + 1) = v6;
  uint64_t v10 = v7;
  if (HIDWORD(v6) * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215900084(a4, &v11, &v9);
  unsigned __int8 v8 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2158FFF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158FFF3C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158FFFC8()
{
  return 1;
}

uint64_t sub_2158FFFD0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158FFFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_2158FFFF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215900084(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  BOOL v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    *(void *)(result + 32) = *((void *)a3 + 2);
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      unsigned __int8 v8 = (_WORD *)(result + 40);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 41) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v9 = *a3;
  *(void *)(result + 32) = *((void *)a3 + 2);
  *(_OWORD *)(result + 16) = v9;
  if (!v4) {
    goto LABEL_12;
  }
  unsigned __int8 v8 = (_WORD *)(result + 40);
LABEL_7:
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v11 = 0;
  }
  __int16 v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0) {
    __int16 v12 = 0;
  }
  *unsigned __int8 v8 = v12 & 0xFF00 | v11;
  return v3;
}

void sub_2159001AC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215900200(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590028C()
{
  return 1;
}

uint64_t sub_215900294(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_21590029C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 1);
}

uint64_t sub_2159002B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215900340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 48)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159006BC(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v15, v5);
  if (v15) {
    operator new();
  }
  uint64_t v15 = 0;
  __int16 v11 = *(_WORD *)(a1 + 48);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v16, 0, 1);
  uint64_t v12 = v16;
  uint64_t v13 = *(void *)(v16 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v16;
  *(void *)(a2 + 40) = v13;
  uint64_t v16 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 48) = *(void *)(a2 + 24);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a2 + 72) = v11;
  uint64_t result = v15;
  uint64_t v15 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215900668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159006BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  v2[10] = &unk_26C66AE18;
  sub_215D92D74(&v1, (uint64_t)v2);
  operator new();
}

void sub_215900924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215900940(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159009A0((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215900974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215900988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  if (a20) {
    free(a20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2159009A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 48);
    if (v3) {
      free(v3);
    }
    *(void *)(v2 + 48) = 0;
    MEMORY[0x2166C4D20](v2, 0x1091C406A8758A4);
  }
  return a1;
}

void sub_2159009FC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215900A34(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 48);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 48) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215900A98(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE1EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE1EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215900B0C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    BOOL v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    BOOL v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 1;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215900D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215900D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215900D48(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215900DC4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215900E40(void *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  int v12 = 0;
  if (a2[1]) {
    BOOL v5 = *a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = *(void *)a2;
  if (v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *a3;
  *(void *)&long long v9 = *a1;
  *((void *)&v9 + 1) = v6;
  uint64_t v10 = v7;
  if (HIDWORD(v6) * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_2159010AC(a4, &v11, &v9);
  unsigned __int8 v8 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_215900F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215900F64(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215900FF0()
{
  return 2;
}

uint64_t sub_215900FF8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215901000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_21590101C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_2159010AC(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  BOOL v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    *(void *)(result + 32) = *((void *)a3 + 2);
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      unsigned __int8 v8 = (_WORD *)(result + 40);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 41) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v9 = *a3;
  *(void *)(result + 32) = *((void *)a3 + 2);
  *(_OWORD *)(result + 16) = v9;
  if (!v4) {
    goto LABEL_12;
  }
  unsigned __int8 v8 = (_WORD *)(result + 40);
LABEL_7:
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v11 = 0;
  }
  __int16 v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0) {
    __int16 v12 = 0;
  }
  *unsigned __int8 v8 = v12 & 0xFF00 | v11;
  return v3;
}

void sub_2159011D4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215901228(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159012B4()
{
  return 2;
}

uint64_t sub_2159012BC(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2159012C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_2159012E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215901368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 48)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159016E4(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v15, v5);
  if (v15) {
    operator new();
  }
  uint64_t v15 = 0;
  __int16 v11 = *(_WORD *)(a1 + 48);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v16, 0, 2);
  uint64_t v12 = v16;
  uint64_t v13 = *(void *)(v16 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v16;
  *(void *)(a2 + 40) = v13;
  uint64_t v16 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 48) = *(void *)(a2 + 24);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a2 + 72) = v11;
  uint64_t result = v15;
  uint64_t v15 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215901690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159016E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  v2[10] = &unk_26C66C328;
  sub_215D92FBC(&v1, (uint64_t)v2);
  operator new();
}

void sub_21590194C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215901968(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159009A0((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590199C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159019B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  if (a20) {
    free(a20);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159019CC()
{
}

void sub_2159019E4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215901A1C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 48);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 48) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215901A80(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215901AF4(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    BOOL v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    BOOL v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 2;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215901CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215901D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215901D30(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215901DAC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215901E28(void *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  int v12 = 0;
  if (a2[1]) {
    BOOL v5 = *a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = *(void *)a2;
  if (v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *a3;
  *(void *)&long long v9 = *a1;
  *((void *)&v9 + 1) = v6;
  uint64_t v10 = v7;
  if (HIDWORD(v6) * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215902094(a4, &v11, &v9);
  unsigned __int8 v8 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_215901F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215901F4C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215901FD8()
{
  return 3;
}

uint64_t sub_215901FE0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215901FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215902004(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215902094(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  BOOL v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    *(void *)(result + 32) = *((void *)a3 + 2);
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      unsigned __int8 v8 = (_WORD *)(result + 40);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 41) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v9 = *a3;
  *(void *)(result + 32) = *((void *)a3 + 2);
  *(_OWORD *)(result + 16) = v9;
  if (!v4) {
    goto LABEL_12;
  }
  unsigned __int8 v8 = (_WORD *)(result + 40);
LABEL_7:
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v11 = 0;
  }
  __int16 v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0) {
    __int16 v12 = 0;
  }
  *unsigned __int8 v8 = v12 & 0xFF00 | v11;
  return v3;
}

void sub_2159021BC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215902210(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590229C()
{
  return 3;
}

uint64_t sub_2159022A4(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2159022AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_2159022C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215902350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 48)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159026CC(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v15, v5);
  if (v15) {
    operator new();
  }
  uint64_t v15 = 0;
  __int16 v11 = *(_WORD *)(a1 + 48);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v16, 0, 3);
  uint64_t v12 = v16;
  uint64_t v13 = *(void *)(v16 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v16;
  *(void *)(a2 + 40) = v13;
  uint64_t v16 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 48) = *(void *)(a2 + 24);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a2 + 72) = v11;
  uint64_t result = v15;
  uint64_t v15 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215902678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159026CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  v2[10] = &unk_26C66C5A0;
  sub_215D932B0(&v1, (uint64_t)v2);
  operator new();
}

void sub_215902930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159029A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590294C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159029A8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215902980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159029A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215902994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D7D7C4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2159029A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D7D7C4(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C406A8758A4);
  }
  return a1;
}

void sub_2159029F4()
{
}

void sub_215902A0C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215902A44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D7D7C4(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215902A8C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215902B00(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    BOOL v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    BOOL v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 3;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215902CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215902D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215902D3C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215902DB8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215902E34(void *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  int v12 = 0;
  if (a2[1]) {
    BOOL v5 = *a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = *(void *)a2;
  if (v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *a3;
  *(void *)&long long v9 = *a1;
  *((void *)&v9 + 1) = v6;
  uint64_t v10 = v7;
  if (HIDWORD(v6) * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_2159030A0(a4, &v11, &v9);
  unsigned __int8 v8 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_215902F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215902F58(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215902FE4()
{
  return 4;
}

uint64_t sub_215902FEC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215902FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_215903010(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_2159030A0(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  BOOL v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    *(void *)(result + 32) = *((void *)a3 + 2);
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      unsigned __int8 v8 = (_WORD *)(result + 40);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 41) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v9 = *a3;
  *(void *)(result + 32) = *((void *)a3 + 2);
  *(_OWORD *)(result + 16) = v9;
  if (!v4) {
    goto LABEL_12;
  }
  unsigned __int8 v8 = (_WORD *)(result + 40);
LABEL_7:
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v11 = 0;
  }
  __int16 v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0) {
    __int16 v12 = 0;
  }
  *unsigned __int8 v8 = v12 & 0xFF00 | v11;
  return v3;
}

void sub_2159031C8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21590321C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159032A8()
{
  return 4;
}

uint64_t sub_2159032B0(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2159032B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 4);
}

uint64_t sub_2159032D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590335C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 48)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159036D8(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v15, v5);
  if (v15) {
    operator new();
  }
  uint64_t v15 = 0;
  __int16 v11 = *(_WORD *)(a1 + 48);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v16, 0, 4);
  uint64_t v12 = v16;
  uint64_t v13 = *(void *)(v16 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v16;
  *(void *)(a2 + 40) = v13;
  uint64_t v16 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 48) = *(void *)(a2 + 24);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a2 + 72) = v11;
  uint64_t result = v15;
  uint64_t v15 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215903684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159036D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  v2[10] = &unk_26C66C818;
  sub_215D934B8(&v1, (uint64_t)v2);
  operator new();
}

void sub_215903940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590395C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159009A0((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215903990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159009A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159039A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  if (a20) {
    free(a20);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159039C0()
{
}

void sub_2159039D8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215903A10(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 48);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 48) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215903A74(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215903AE8(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    BOOL v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    BOOL v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 4;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215903CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215903D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215903D24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215903DA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215903E1C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 2;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215903F58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215903F6C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215903FF8()
{
  return 5;
}

uint64_t sub_215904000(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215904008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215904024(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2159040B4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215904140()
{
  return 5;
}

uint64_t sub_215904148(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215904150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21590416C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2159041F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590457C(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 5);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215904528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590457C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66CA90;
  sub_215D93938(&v1, (uint64_t)v2);
  operator new();
}

void sub_215904808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215904824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215904858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590486C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215904884(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 72);
    if (v3) {
      free(v3);
    }
    *(void *)(v2 + 72) = 0;
    MEMORY[0x2166C4D20](v2, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_2159048E0()
{
}

void sub_2159048F8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215904930(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215904994(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215904A08(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 5;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215904C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215904C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215904C44(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215904CC0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215904D3C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 2;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215904E78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215904E8C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215904F18()
{
  return 6;
}

uint64_t sub_215904F20(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215904F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215904F44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215904FD4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215905060()
{
  return 6;
}

uint64_t sub_215905068(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215905070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21590508C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215905114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590549C(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 6);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215905448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590549C(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66CD08;
  sub_215DAB130((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C663CE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215905788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159057A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159057D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159057EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215905808()
{
}

void sub_215905820(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215905858(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159058BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215905930(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 6;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215905B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215905B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215905B6C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215905BE8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215905C64(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 2;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215905DA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215905DB4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215905E40()
{
  return 7;
}

uint64_t sub_215905E48(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215905E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215905E6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215905EFC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215905F88()
{
  return 7;
}

uint64_t sub_215905F90(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215905F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215905FB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590603C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159063C4(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 7);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215906370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159063C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66CF80;
  sub_215D94178(&v1, (uint64_t)v2);
  operator new();
}

void sub_21590664C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159066C4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215906668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159066C4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590669C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159066C4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159066B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D7F440((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2159066C4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D7F440(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_215906710()
{
}

void sub_215906728(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215906760(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D7F440(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159067A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590681C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 7;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215906A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215906A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215906A58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215906AD4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215906B50(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 2;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215906C8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215906CA0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215906D2C()
{
  return 8;
}

uint64_t sub_215906D34(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215906D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215906D58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215906DE8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215906E74()
{
  return 8;
}

uint64_t sub_215906E7C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215906E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_215906EA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215906F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159072B0(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 8);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590725C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159072B0(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66D1F8;
  sub_215DAB2F0((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C663DE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21590759C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159075B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159075EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215907600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590761C()
{
}

void sub_215907634(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590766C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159076D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215907744(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 8;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215907940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215907964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215907980(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159079FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215907A78(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215907BB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215907BC8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215907C54()
{
  return 9;
}

uint64_t sub_215907C5C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215907C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215907C80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215907D10(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215907D9C()
{
  return 9;
}

uint64_t sub_215907DA4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215907DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215907DC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215907E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159081D8(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 9);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215908184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159081D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66D470;
  sub_215D949B4(&v1, (uint64_t)v2);
  operator new();
}

void sub_2159084C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159084E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215908518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590852C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215908548()
{
}

void sub_215908560(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215908598(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159085FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215908670(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 9;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590886C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215908890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159088AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215908928(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2159089A4(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215908AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215908AF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215908B80()
{
  return 10;
}

uint64_t sub_215908B88(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215908B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215908BAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215908C3C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215908CC8()
{
  return 10;
}

uint64_t sub_215908CD0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215908CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215908CF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215908D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215909104(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 10);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159090B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215909104(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66D6E8;
  sub_215DAB4B4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C663EE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215909454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215909470(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159094A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159094B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159094D4()
{
}

void sub_2159094EC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215909524(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215909588(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159095FC(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 10;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159097F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590981C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215909838(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159098B4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215909930(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215909A6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215909A80(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215909B0C()
{
  return 11;
}

uint64_t sub_215909B14(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215909B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215909B38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215909BC8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215909C54()
{
  return 11;
}

uint64_t sub_215909C5C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215909C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215909C80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215909D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590A090(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 11);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590A03C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590A090(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66D960;
  sub_215D951E8(&v1, (uint64_t)v2);
  operator new();
}

void sub_21590A318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_21590A390((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590A334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_21590A390((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590A368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21590A390((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590A37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D81984((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_21590A390(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D81984(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_21590A3DC()
{
}

void sub_21590A3F4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590A42C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D81984(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590A474(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590A4E8(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 11;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590A6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590A708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590A724(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590A7A0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21590A81C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21590A958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590A96C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590A9F8()
{
  return 12;
}

uint64_t sub_21590AA00(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590AA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21590AA24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21590AAB4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590AB40()
{
  return 12;
}

uint64_t sub_21590AB48(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590AB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_21590AB6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590ABF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590AF7C(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 12);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590AF28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590AF7C(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66DBD8;
  sub_215DAB66C((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C663FE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21590B2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590B2E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590B31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590B330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590B34C()
{
}

void sub_21590B364(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590B39C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590B400(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

float sub_21590B474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 12);
  int v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5 && v4 != 0)
  {
    int v7 = v3 - 1;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    uint64_t v9 = *(unsigned int *)(a3 + 24);
    uint64_t v10 = *(float **)a2;
    __int16 v11 = *(float **)a3;
    int v12 = v4 - 1;
    if (v12)
    {
      uint64_t v13 = *(unsigned int *)(a3 + 28);
      uint64_t v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          float *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        float *v11 = *v10;
        v11[1] = v10[1];
        float result = v10[2];
        v11[2] = result;
        return result;
      }
      int v15 = 0;
      uint64_t v16 = v11 + 2;
      uint64_t v17 = v10 + 2;
      do
      {
        uint64_t v18 = v17;
        uint64_t v19 = v16;
        int v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *uint64_t v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *uint64_t v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      float *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_21590B5BC(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  int v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 12;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590B7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590B7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590B7F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590B874(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21590B8F0(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21590BBC0(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21590BA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590BA78(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590BB04()
{
  return 13;
}

uint64_t sub_21590BB0C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590BB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21590BB30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21590BBC0(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)float result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)float result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21590BCE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21590BD3C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590BDC8()
{
  return 13;
}

uint64_t sub_21590BDD0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590BDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21590BDF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590BE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590C204(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 13);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590C1B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590C204(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66DE50;
  sub_215D95A1C(&v1, (uint64_t)v2);
  operator new();
}

void sub_21590C4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590C510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590C544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590C558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590C574()
{
}

void sub_21590C58C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590C5C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590C628(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590C69C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 13;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590C898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590C8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590C8D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590C954(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21590C9D0(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21590CB0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590CB20(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590CBAC()
{
  return 14;
}

uint64_t sub_21590CBB4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590CBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21590CBD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21590CC68(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590CCF4()
{
  return 14;
}

uint64_t sub_21590CCFC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590CD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21590CD20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590CDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590D130(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 14);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590D0DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590D130(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66E0C8;
  sub_215DAB824((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6640E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21590D480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590D49C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590D4E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590D500()
{
}

void sub_21590D518(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590D550(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590D5B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590D628(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 14;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590D824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590D848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590D864(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590D8E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21590D95C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21590DA98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590DAAC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590DB38()
{
  return 15;
}

uint64_t sub_21590DB40(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590DB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21590DB64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21590DBF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590DC80()
{
  return 15;
}

uint64_t sub_21590DC88(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590DC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21590DCAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590DD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590E0BC(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 15);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590E068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590E0BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66E340;
  sub_215D96268(&v1, (uint64_t)v2);
  operator new();
}

void sub_21590E344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_21590E3BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590E360(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_21590E3BC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590E394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21590E3BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590E3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D83E30((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_21590E3BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D83E30(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_21590E408()
{
}

void sub_21590E420(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590E458(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D83E30(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590E4A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590E514(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 15;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590E710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590E734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590E750(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590E7CC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21590E848(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21590E984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590E998(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590EA24()
{
  return 16;
}

uint64_t sub_21590EA2C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590EA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21590EA50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21590EAE0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590EB6C()
{
  return 16;
}

uint64_t sub_21590EB74(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590EB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_21590EB98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590EC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590EFA8(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 16);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590EF54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590EFA8(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66E5B8;
  sub_215DAB9E4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6641E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21590F2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590F314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21590F348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21590F35C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590F378()
{
}

void sub_21590F390(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590F3C8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21590F42C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21590F4A0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 16;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21590F69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21590F6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21590F6DC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21590F758(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21590F7D4(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21590F910(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21590F924(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590F9B0()
{
  return 17;
}

uint64_t sub_21590F9B8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21590F9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21590F9DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21590FA6C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21590FAF8()
{
  return 17;
}

uint64_t sub_21590FB00(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21590FB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21590FB24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21590FBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21590FF34(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 17);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21590FEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21590FF34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66E830;
  sub_215D96AA4(&v1, (uint64_t)v2);
  operator new();
}

void sub_215910224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215910240(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215910274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215910288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159102A4()
{
}

void sub_2159102BC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159102F4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215910358(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE17EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE17EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE17EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE17EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159103CC(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 17;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159105C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159105EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215910608(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215910684(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215910700(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21591083C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215910850(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159108DC()
{
  return 18;
}

uint64_t sub_2159108E4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2159108EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215910908(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215910998(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215910A24()
{
  return 18;
}

uint64_t sub_215910A2C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215910A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215910A50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215910AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215910E60(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 18);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215910E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215910E60(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66EAA8;
  sub_215DAB4B4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6642E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_2159111B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159111CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215911200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215911214(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215911230()
{
}

void sub_215911248(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215911280(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159112E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215911358(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 18;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215911554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215911578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215911594(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215911610(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21591168C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_2159117C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159117DC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215911868()
{
  return 19;
}

uint64_t sub_215911870(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215911878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215911894(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215911924(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159119B0()
{
  return 19;
}

uint64_t sub_2159119B8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159119C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2159119DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215911A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215911DEC(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 19);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215911D98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215911DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66ED20;
  sub_215D972D8(&v1, (uint64_t)v2);
  operator new();
}

void sub_215912074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159120EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215912090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159120EC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159120C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159120EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159120D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D863C0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2159120EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D863C0(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_215912138()
{
}

void sub_215912150(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215912188(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D863C0(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159121D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215912244(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 19;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215912440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215912464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215912480(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159124FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215912578(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 3;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_2159126B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159126C8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215912754()
{
  return 20;
}

uint64_t sub_21591275C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215912764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215912780(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215912810(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591289C()
{
  return 20;
}

uint64_t sub_2159128A4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159128AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2159128C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215912950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215912CD8(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 20);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215912C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215912CD8(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66EF98;
  sub_215DAB66C((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6643E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215913028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215913044(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215913078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591308C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159130A8()
{
}

void sub_2159130C0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159130F8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591315C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159131D0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 20;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159133CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159133F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591340C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215913488(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215913504(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 3;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_2159137D4(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215913678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591368C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215913718()
{
  return 21;
}

uint64_t sub_215913720(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215913728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215913744(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_2159137D4(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_2159138FC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215913950(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159139DC()
{
  return 21;
}

uint64_t sub_2159139E4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159139EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215913A08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215913A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215913E18(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 21);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215913DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215913E18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66F210;
  sub_215D97B04(&v1, (uint64_t)v2);
  operator new();
}

void sub_215914108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215914124(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215914158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591416C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215914188()
{
}

void sub_2159141A0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159141D8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591423C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE21EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE21EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159142B0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 21;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159144AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159144D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159144EC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215914568(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2159145E4(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 3;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_2159148B4(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215914758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591476C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159147F8()
{
  return 22;
}

uint64_t sub_215914800(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215914808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215914824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_2159148B4(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_2159149DC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215914A30(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215914ABC()
{
  return 22;
}

uint64_t sub_215914AC4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215914ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215914AE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215914B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215914EF8(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 22);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215914EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215914EF8(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C66F488;
  sub_215DAB4B4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6644E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215915248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215915264(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215915298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159152AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159152C8()
{
}

void sub_2159152E0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215915318(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591537C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159153F0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 22;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159155EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215915610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591562C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159156A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215915724(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 3;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_2159159F4(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215915898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159158AC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215915938()
{
  return 23;
}

uint64_t sub_215915940(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215915948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215915964(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_2159159F4(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215915B1C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215915B70(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215915BFC()
{
  return 23;
}

uint64_t sub_215915C04(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215915C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215915C28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215915CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215916038(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 23);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215915FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215916038(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66F700;
  sub_215D98338(&v1, (uint64_t)v2);
  operator new();
}

void sub_2159162C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215916338((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159162DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215916338((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215916310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215916338((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215916324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D88A5C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_215916338(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D88A5C(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_215916384()
{
}

void sub_21591639C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159163D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D88A5C(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591641C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE23EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE23EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE23EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE23EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215916490(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 23;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591668C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159166B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159166CC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215916748(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2159167C4(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 3;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215916A94(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215916938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591694C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159169D8()
{
  return 24;
}

uint64_t sub_2159169E0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2159169E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215916A04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215916A94(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215916BBC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215916C10(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215916C9C()
{
  return 24;
}

uint64_t sub_215916CA4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215916CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_215916CC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215916D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159170D8(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 24);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215917084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159170D8(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C66F978;
  sub_215DAB66C((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6645E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215917428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215917444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215917478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591748C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159174A8()
{
}

void sub_2159174C0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159174F8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591755C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE24EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE24EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE24EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE24EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159175D0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 24;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159177CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159177F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591780C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215917888(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215917904(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215917BD4(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215917A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215917A8C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215917B18()
{
  return 25;
}

uint64_t sub_215917B20(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215917B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215917B44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215917BD4(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215917CFC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215917D50(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215917DDC()
{
  return 25;
}

uint64_t sub_215917DE4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215917DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215917E08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215917E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215918218(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 25);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159181C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215918218(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C66FBF0;
  sub_215D98B6C(&v1, (uint64_t)v2);
  operator new();
}

void sub_215918508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215918524(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215918558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591856C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215918588()
{
}

void sub_2159185A0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159185D8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591863C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE25EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE25EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159186B0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 25;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159188AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159188D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159188EC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215918968(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2159189E4(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215918B20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215918B34(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215918BC0()
{
  return 26;
}

uint64_t sub_215918BC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215918BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215918BEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215918C7C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215918D08()
{
  return 26;
}

uint64_t sub_215918D10(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215918D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215918D34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215918DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215919144(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 26);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159190F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215919144(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C66FE68;
  sub_215DAB824((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6646E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215919494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159194B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159194E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159194F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215919514()
{
}

void sub_21591952C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215919564(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159195C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591963C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 26;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215919838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591985C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215919878(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159198F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215919970(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215919AAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215919AC0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215919B4C()
{
  return 27;
}

uint64_t sub_215919B54(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215919B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215919B78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215919C08(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215919C94()
{
  return 27;
}

uint64_t sub_215919C9C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215919CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215919CC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215919D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591A0D0(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 27);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591A07C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591A0D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C6700E0;
  sub_215D993B8(&v1, (uint64_t)v2);
  operator new();
}

void sub_21591A358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_21591A3D0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591A374(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_21591A3D0((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591A3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21591A3D0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591A3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D8AF08((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_21591A3D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D8AF08(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_21591A41C()
{
}

void sub_21591A434(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591A46C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D8AF08(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591A4B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591A528(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 27;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591A724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591A748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591A764(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591A7E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21591A85C(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_21591A998(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591A9AC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591AA38()
{
  return 28;
}

uint64_t sub_21591AA40(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591AA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21591AA64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21591AAF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591AB80()
{
  return 28;
}

uint64_t sub_21591AB88(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21591AB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_21591ABAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21591AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591AFBC(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 28);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591AF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591AFBC(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C670358;
  sub_215DAB9E4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6647E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21591B30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591B328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591B35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591B370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591B38C()
{
}

void sub_21591B3A4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591B3DC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591B440(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591B4B4(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 28;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591B6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591B6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591B6F0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591B76C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21591B7E8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21591BAB8(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21591B95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591B970(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591B9FC()
{
  return 29;
}

uint64_t sub_21591BA04(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591BA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21591BA28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21591BAB8(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21591BBE0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21591BC34(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591BCC0()
{
  return 29;
}

uint64_t sub_21591BCC8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21591BCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21591BCEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21591BD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591C0FC(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 29);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591C0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591C0FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C6705D0;
  sub_215D99BFC(&v1, (uint64_t)v2);
  operator new();
}

void sub_21591C3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591C408(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591C43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591C450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591C46C()
{
}

void sub_21591C484(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591C4BC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591C520(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE29EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE29EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE29EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE29EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591C594(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 29;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591C790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591C7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591C7D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591C84C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21591C8C8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21591CB98(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21591CA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591CA50(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591CADC()
{
  return 30;
}

uint64_t sub_21591CAE4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591CAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21591CB08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21591CB98(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21591CCC0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21591CD14(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591CDA0()
{
  return 30;
}

uint64_t sub_21591CDA8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21591CDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21591CDCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21591CE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591D1DC(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 30);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591D188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591D1DC(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C670848;
  sub_215DAB824((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6648E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21591D52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591D548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591D57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591D590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591D5AC()
{
}

void sub_21591D5C4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591D5FC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591D660(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591D6D4(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 30;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591D8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591D8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591D910(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591D98C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21591DA08(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21591DCD8(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21591DB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591DB90(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591DC1C()
{
  return 31;
}

uint64_t sub_21591DC24(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591DC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21591DC48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21591DCD8(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21591DE00(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21591DE54(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591DEE0()
{
  return 31;
}

uint64_t sub_21591DEE8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21591DEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21591DF0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21591DF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591E31C(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 31);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591E2C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591E31C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C670AC0;
  sub_215D9A448(&v1, (uint64_t)v2);
  operator new();
}

void sub_21591E5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_21591E61C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591E5C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_21591E61C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591E5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21591E61C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591E608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D8D2A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_21591E61C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D8D2A8(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_21591E668()
{
}

void sub_21591E680(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591E6B8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D8D2A8(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591E700(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE31EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE31EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591E774(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 31;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591E970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591E994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591E9B0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591EA2C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21591EAA8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21591ED78(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21591EC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591EC30(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591ECBC()
{
  return 32;
}

uint64_t sub_21591ECC4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21591ECE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21591ED78(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21591EEA0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21591EEF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591EF80()
{
  return 32;
}

uint64_t sub_21591EF88(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21591EF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_21591EFAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21591F034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_21591F3BC(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 32);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21591F368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591F3BC(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C670D38;
  sub_215DAB9E4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C6649E0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_21591F70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591F728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21591F75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21591F770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21591F78C()
{
}

void sub_21591F7A4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591F7DC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21591F840(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE32EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE32EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21591F8B4(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 32;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21591FAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21591FAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21591FAF0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21591FB6C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21591FBE8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21591FEB8(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21591FD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21591FD70(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21591FDFC()
{
  return 33;
}

uint64_t sub_21591FE04(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21591FE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21591FE28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21591FEB8(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_21591FFE0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215920034(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159200C0()
{
  return 33;
}

uint64_t sub_2159200C8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159200D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2159200EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215920174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159204FC(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 33);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159204A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159204FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C670FB0;
  sub_215D9AC8C(&v1, (uint64_t)v2);
  operator new();
}

void sub_2159207EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215920808(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21592083C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215920850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_21592086C()
{
}

void sub_215920884(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159208BC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215920920(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215920994(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 33;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215920B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215920BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215920BD0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215920C4C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215920CC8(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215920E04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215920E18(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215920EA4()
{
  return 34;
}

uint64_t sub_215920EAC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215920EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215920ED0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215920F60(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215920FEC()
{
  return 34;
}

uint64_t sub_215920FF4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215920FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215921018(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2159210A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215921428(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 34);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159213D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215921428(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C671228;
  sub_215DAB824((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C664AE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215921778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215921794(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159217C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159217DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159217F8()
{
}

void sub_215921810(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215921848(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159218AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215921920(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 34;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215921B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215921B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215921B5C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215921BD8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215921C54(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215921D90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215921DA4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215921E30()
{
  return 35;
}

uint64_t sub_215921E38(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215921E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215921E5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215921EEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215921F78()
{
  return 35;
}

uint64_t sub_215921F80(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215921F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215921FA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_21592202C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159223B4(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 35);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_215922360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159223B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C6714A0;
  sub_215D9B4D8(&v1, (uint64_t)v2);
  operator new();
}

void sub_21592263C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_2159226B4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215922658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_2159226B4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21592268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2159226B4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159226A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D8F648((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2159226B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D8F648(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_215922700()
{
}

void sub_215922718(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215922750(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D8F648(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215922798(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21592280C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 35;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215922A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215922A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215922A48(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215922AC4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215922B40(BOOL result, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t v6 = result;
  if (a3[1]) {
    BOOL v7 = *a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  unint64_t v8 = *(void *)a3;
  if (v7) {
    unint64_t v8 = 0;
  }
  LODWORD(v13) = 4;
  HIDWORD(v13) = v8;
  unint64_t v9 = v8;
  uint64_t v10 = v13;
  unint64_t v11 = HIDWORD(v8);
  LODWORD(v14) = 1;
  HIDWORD(v14) = a4;
  unint64_t v12 = HIDWORD(a4);
  if (HIDWORD(v8) * HIDWORD(a4) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = v10;
  *(_DWORD *)(v6 + 32) = v11;
  *(void *)(v6 + 36) = v14;
  *(_DWORD *)(v6 + 44) = v12;
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = a4;
  *(_WORD *)(v6 + 64) = 0;
  return result;
}

void sub_215922C7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215922C90(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215922D1C()
{
  return 36;
}

uint64_t sub_215922D24(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215922D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215922D48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215922DD8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215922E64()
{
  return 36;
}

uint64_t sub_215922E6C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215922E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_215922E90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215922F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159232A0(v8);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    BOOL v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 36);
  unint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21592324C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159232A0(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  uint64_t v10 = &unk_26C671718;
  sub_215DAB9E4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C664BE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_2159235F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21592360C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215923640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215923654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215923670()
{
}

void sub_215923688(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159236C0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215923724(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215923798(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 36;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215923994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159239B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159239D4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215923A50(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215923ACC(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215923D9C(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215923C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215923C54(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215923CE0()
{
  return 37;
}

uint64_t sub_215923CE8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215923CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215923D0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215923D9C(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215923EC4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215923F18(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215923FA4()
{
  return 37;
}

uint64_t sub_215923FAC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215923FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215923FD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215924058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159243E0(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 37);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21592438C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159243E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C671990;
  sub_215D9BD1C(&v1, (uint64_t)v2);
  operator new();
}

void sub_2159246D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159246EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215924720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215924734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215924750()
{
}

void sub_215924768(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159247A0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215924804(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215924878(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 37;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215924A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215924A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215924AB4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215924B30(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215924BAC(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215924E7C(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215924D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215924D34(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215924DC0()
{
  return 38;
}

uint64_t sub_215924DC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215924DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215924DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215924E7C(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215924FA4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215924FF8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215925084()
{
  return 38;
}

uint64_t sub_21592508C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215925094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2159250B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215925138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159254C0(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 38);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21592546C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159254C0(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C671C08;
  sub_215DAB824((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C664CE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_215925810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21592582C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215925860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215925874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215925890()
{
}

void sub_2159258A8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159258E0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215925944(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_2159259B8(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 38;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215925BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215925BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215925BF4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215925C70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215925CEC(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_215925FBC(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215925E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215925E74(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215925F00()
{
  return 39;
}

uint64_t sub_215925F08(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215925F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215925F2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_215925FBC(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_2159260E4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215926138(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159261C4()
{
  return 39;
}

uint64_t sub_2159261CC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159261D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2159261F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215926278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_215926600(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 39);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_2159265AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_215926600(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 12);
  v2[14] = &unk_26C671E80;
  sub_215D9C568(&v1, (uint64_t)v2);
  operator new();
}

void sub_215926888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215926900((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159268A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215926900((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159268D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215926900((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159268EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215D919E8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_215926900(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_215D919E8(v2);
    MEMORY[0x2166C4D20](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_21592694C()
{
}

void sub_215926964(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21592699C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_215D919E8(result);
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2159269E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215926A58(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 39;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215926C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215926C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215926C94(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215926D10(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215926D8C(uint64_t *a1@<X0>, _DWORD *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v5 = *a1;
  if (a2[1]) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)a2;
  if (v6) {
    uint64_t v7 = 0;
  }
  *(void *)&v18[4] = v7;
  *(_DWORD *)uint64_t v18 = 4;
  uint64_t v8 = *(void *)v18;
  *(_DWORD *)uint64_t v18 = 1;
  *(void *)&v18[4] = *a3;
  *(void *)&long long v10 = v5;
  *((void *)&v10 + 1) = v8;
  int v11 = HIDWORD(v7);
  uint64_t v12 = *(void *)v18;
  int v13 = *(_DWORD *)&v18[8];
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)&v18[4];
  if (*(_DWORD *)&v18[8] * HIDWORD(v7) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21592705C(a4, &v16, &v10);
  __int16 v9 = v17;
  if (v17)
  {
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215926F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215926F14(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215926FA0()
{
  return 40;
}

uint64_t sub_215926FA8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215926FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215926FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21592705C(uint64_t result, uint64_t *a2, long long *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = &v5->__shared_owners_;
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)uint64_t result = v4;
    *(void *)(result + 8) = v5;
    long long v7 = *a3;
    long long v8 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v7;
    if (v4)
    {
      __int16 v9 = (_WORD *)(result + 64);
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_7;
    }
LABEL_12:
    *(_WORD *)(result + 64) = 0;
    *(unsigned char *)(result + 65) = 0;
    return result;
  }
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = 0;
  long long v10 = *a3;
  long long v11 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v11;
  *(_OWORD *)(result + 16) = v10;
  if (!v4) {
    goto LABEL_12;
  }
  __int16 v9 = (_WORD *)(result + 64);
LABEL_7:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  unsigned __int8 v13 = v12;
  if ((v12 & 0xFFFFFF) <= 0x10000) {
    unsigned __int8 v13 = 0;
  }
  __int16 v14 = v12 & 0xFF00;
  if ((v12 & 0xFF0000) == 0) {
    __int16 v14 = 0;
  }
  *__int16 v9 = v14 & 0xFF00 | v13;
  return v3;
}

void sub_215927184(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2159271D8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215927264()
{
  return 40;
}

uint64_t sub_21592726C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215927274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_215927290(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_215927318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    uint64_t v8 = a1 + 24;
    if (*(unsigned char *)(a1 + 72)) {
      BOOL v9 = *(void *)(a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      long long v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
    }
    sub_2159276A0(v8);
  }
  BOOL v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v5 = *(void *)(a1 + 8);
    long long v7 = *(std::__shared_weak_count **)(a1 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 32))(&v17, v5);
  if (v17) {
    operator new();
  }
  uint64_t v17 = 0;
  __int16 v11 = *(_WORD *)(a1 + 72);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, void, uint64_t))(MEMORY[0] + 64))(&v18, 0, 40);
  uint64_t v12 = v18;
  long long v14 = v18[1];
  long long v13 = v18[2];
  *(_OWORD *)(a2 + 24) = *v18;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v13;
  uint64_t v18 = 0;
  MEMORY[0x2166C4D20](v12, 0xC400A2AC0F1);
  *(void *)(a2 + 72) = *(void *)(a2 + 24);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v15;
  *(void *)(a2 + 112) = *(void *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v11;
  uint64_t result = v17;
  uint64_t v17 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21592764C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159276A0(uint64_t a1)
{
  v1[0] = *(void *)(a1 + 12);
  long long v10 = &unk_26C6720F8;
  sub_215DAB9E4((uint64_t)v11, v1);
  long long v2 = v11[0];
  long long v3 = v11[1];
  v1[2] = &unk_26C664DE0;
  long long v4 = v11[2];
  uint64_t v5 = v12;
  long long v6 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = v16;
  long long v8 = v15;
  operator new();
}

void sub_2159279F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368(v5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215927A0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  sub_215733368((uint64_t)va);
  sub_215904884((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215927A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215904884((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215927A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a23) {
    free(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_215927A70()
{
}

void sub_215927A88(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215927AC0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2) {
      free(v2);
    }
    *(void *)(v1 + 72) = 0;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215927B24(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215927B98(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  unint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 40;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  long long v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215927D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215927DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

_DWORD *sub_215927DD4(_DWORD ***a1)
{
  return sub_2157C4454(**a1, (char *)(*a1)[1]);
}

void sub_215927DE0(uint64_t a1, uint64_t a2)
{
}

void sub_215927DF0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  uint64_t v5 = __p;
  uint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  unsigned __int8 v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C66AE40[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215927FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215927FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2159280E8((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2159280E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2159280E8(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  unsigned __int8 v8 = &v7[24 * v3];
  BOOL v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)unsigned __int8 v8 = v17;
    unsigned __int8 v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *unsigned __int8 v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2159282E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2159282FC(_DWORD ***a1)
{
  return sub_2158210E8(**a1, (char *)(*a1)[1]);
}

void sub_215928308(uint64_t a1, uint64_t a2)
{
}

void sub_215928318(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  unint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  unsigned __int8 v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C66AE40[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2159284D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215928514(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215928610((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215928608(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215928610(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  unsigned __int8 v8 = &v7[24 * v3];
  BOOL v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)unsigned __int8 v8 = v17;
    unsigned __int8 v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *unsigned __int8 v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215928810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215928828()
{
}

void sub_21592883C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int v2 = **(_DWORD **)v1;
  long long v3 = *(_OWORD *)(v1 + 24);
  v4[0] = *(_OWORD *)(v1 + 8);
  v4[1] = v3;
  uint64_t v5 = *(void *)(v1 + 40);
  sub_215928880(v2, (int **)v4);
}

void sub_215928880(int a1, int **a2)
{
  v179[2] = *MEMORY[0x263EF8340];
  switch(a1)
  {
    case 0:
    case 6:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 23:
    case 24:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 39:
    case 40:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
    case 1:
      int v3 = **a2;
      if (v3 == 1)
      {
        uint64_t v51 = a2[2];
        *(void *)&long long v138 = &unk_26C65E3A0;
        sub_215931B5C(v51);
      }
      if (!v3)
      {
        unint64_t v4 = a2[2];
        *(void *)&long long v149 = &unk_26C65E3A0;
        v179[0] = &unk_26C66BCE0;
        LODWORD(v5) = *v4;
        int v6 = v4[1];
        BOOL v7 = *v4 != 0;
        if (*v4 <= 0x20) {
          LODWORD(v5) = 32;
        }
        unsigned __int8 v8 = *(void **)v4;
        *(void *)&long long v138 = &unk_26C67BCE8;
        if (v6) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = 32;
        }
        uint64_t v160 = v8;
        uint64_t v161 = v7 | (v5 << 32);
        sub_215B2DEF0((uint64_t)&v138, 0, 1, &v160, 0);
        *(void *)&long long v138 = &unk_26C67BCE8;
        operator new();
      }
      sub_2158D5EB0((unsigned int *)a2[2], *a2[4], (uint64_t)&v138);
      if (v148)
      {
        uint64_t v52 = a2[2];
        uint64_t v53 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        uint64_t v160 = &unk_26C66C138;
        int v54 = *v52;
        if (v52[1]) {
          BOOL v55 = v54 == 0;
        }
        else {
          BOOL v55 = 1;
        }
        uint64_t v56 = v53 << 32;
        if (v55) {
          uint64_t v56 = 0;
        }
        *(void *)&long long v149 = v56 | (v54 != 0);
        sub_2158FFE18(&v162, v52, (uint64_t *)&v149, (uint64_t)&v161);
        *(void *)&long long v149 = &unk_26C66AF40;
        sub_215931E1C((uint64_t)&v149 + 8, (uint64_t)&v160);
      }
      goto LABEL_192;
    case 2:
      int v37 = **a2;
      if (v37 == 1)
      {
        uint64_t v107 = a2[2];
        *(void *)&long long v138 = &unk_26C65E4E8;
        sub_215932B4C(v107);
      }
      if (!v37)
      {
        uint64_t v38 = a2[2];
        LOWORD(v173) = 0;
        *(void *)&long long v149 = &unk_26C65E4E8;
        BOOL v172 = &unk_26C66BD18;
        sub_215B55D00(v38, (__int16 *)&v173, (uint64_t)&v138);
        operator new();
      }
      sub_2158D9F3C(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v138);
      if (v148)
      {
        uint64_t v108 = a2[2];
        uint64_t v109 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        uint64_t v160 = &unk_26C66C3B0;
        int v110 = *v108;
        if (v108[1]) {
          BOOL v111 = v110 == 0;
        }
        else {
          BOOL v111 = 1;
        }
        uint64_t v112 = v109 << 32;
        if (v111) {
          uint64_t v112 = 0;
        }
        *(void *)&long long v149 = v112 | (v110 != 0);
        sub_215900E40(&v162, v108, (uint64_t *)&v149, (uint64_t)&v161);
        *(void *)&long long v149 = &unk_26C66B038;
        sub_215932E0C((uint64_t)&v149 + 8, (uint64_t)&v160);
      }
      goto LABEL_192;
    case 3:
      int v15 = **a2;
      if (v15 == 1)
      {
        v63 = a2[2];
        *(void *)&long long v138 = &unk_26C65E630;
        sub_215933B2C(v63);
      }
      if (!v15)
      {
        uint64_t v16 = a2[2];
        *(void *)&long long v149 = &unk_26C65E630;
        BOOL v172 = &unk_26C66BD50;
        sub_215B55EB0(v16, word_215EF88C8, (uint64_t)&v138);
        operator new();
      }
      sub_2158DAB24(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v138);
      if (v148)
      {
        v64 = a2[2];
        uint64_t v65 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        uint64_t v160 = &unk_26C66C628;
        int v66 = *v64;
        if (v64[1]) {
          BOOL v67 = v66 == 0;
        }
        else {
          BOOL v67 = 1;
        }
        uint64_t v68 = v65 << 32;
        if (v67) {
          uint64_t v68 = 0;
        }
        *(void *)&long long v149 = v68 | (v66 != 0);
        sub_215901E28(&v162, v64, (uint64_t *)&v149, (uint64_t)&v161);
        *(void *)&long long v149 = &unk_26C66B130;
        sub_215933DEC((uint64_t)&v149 + 8, (uint64_t)&v160);
      }
      goto LABEL_192;
    case 4:
      int v17 = **a2;
      if (v17 == 1)
      {
        unint64_t v69 = a2[2];
        *(void *)&long long v138 = &unk_26C65E778;
        sub_215934B1C(v69);
      }
      if (!v17)
      {
        long long v18 = a2[2];
        LODWORD(v173) = 0;
        *(void *)&long long v149 = &unk_26C65E778;
        BOOL v172 = &unk_26C66BD88;
        sub_215B56060(v18, (int *)&v173, (uint64_t)&v138);
        operator new();
      }
      sub_2158DB70C(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v138);
      if (v148)
      {
        v70 = a2[2];
        uint64_t v71 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        uint64_t v160 = &unk_26C66C8A0;
        int v72 = *v70;
        if (v70[1]) {
          BOOL v73 = v72 == 0;
        }
        else {
          BOOL v73 = 1;
        }
        uint64_t v74 = v71 << 32;
        if (v73) {
          uint64_t v74 = 0;
        }
        *(void *)&long long v149 = v74 | (v72 != 0);
        sub_215902E34(&v162, v70, (uint64_t *)&v149, (uint64_t)&v161);
        *(void *)&long long v149 = &unk_26C66B228;
        sub_215934DDC((uint64_t)&v149 + 8, (uint64_t)&v160);
      }
LABEL_192:
      long long v162 = v138;
      sub_215741BFC(&v163, &v139);
      sub_2158CBAB8((uint64_t)a2[1], &v162);
      if (v171)
      {
        if (v170)
        {
          if (v169 < 0) {
            operator delete(__p);
          }
          if (v167 < 0) {
            operator delete(v166);
          }
        }
        if ((_BYTE)v165 && v164 < 0) {
          operator delete(v163);
        }
      }
      if (!v148 && v147)
      {
        if (v146)
        {
          if (v145 < 0) {
            operator delete(v144);
          }
          if (SBYTE7(v143) < 0) {
            operator delete(v142[0]);
          }
        }
        if ((_BYTE)v141 && v140 < 0) {
          operator delete((void *)v139);
        }
      }
      return;
    case 5:
      int v19 = **a2;
      if (v19 == 1)
      {
        BOOL v75 = a2[2];
        *(void *)&long long v138 = &unk_26C65E8C0;
        sub_215935AFC(v75);
      }
      if (!v19)
      {
        int v20 = a2[2];
        LOBYTE(v173) = 0;
        *(void *)&long long v149 = &unk_26C65E8C0;
        BOOL v172 = &unk_26C66BDC0;
        sub_215B56210(v20, (char *)&v173, (unint64_t)&v138);
        operator new();
      }
      sub_2158DC2FC(a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        uint64_t v76 = a2[2];
        uint64_t v77 = *(void *)a2[3];
        v78 = (unsigned int *)a2[4];
        *(void *)v174 = &unk_26C66CB18;
        int v79 = *v76;
        if (v76[1]) {
          BOOL v80 = v79 == 0;
        }
        else {
          BOOL v80 = 1;
        }
        unint64_t v81 = (unint64_t)*v78 << 32;
        if (v80) {
          unint64_t v81 = 0;
        }
        sub_215903E1C((BOOL)&v174[8], v77, v76, v81 | (2 * (v79 != 0)));
        *(void *)&long long v138 = &unk_26C66B320;
        sub_215935E44((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 7:
      int v21 = **a2;
      if (v21 == 1)
      {
        uint64_t v82 = a2[2];
        *(void *)&long long v138 = &unk_26C65EA08;
        sub_215936C18(v82);
      }
      if (!v21)
      {
        uint64_t v22 = a2[2];
        *(void *)&long long v149 = &unk_26C65EA08;
        BOOL v172 = &unk_26C66BDF8;
        sub_215B56460(v22, word_215EF88C8, (unint64_t)&v138);
        operator new();
      }
      sub_2158DD96C(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        v83 = a2[2];
        uint64_t v84 = *(void *)a2[3];
        uint64_t v85 = (unsigned int *)a2[4];
        *(void *)v174 = &unk_26C66D008;
        int v86 = *v83;
        if (v83[1]) {
          BOOL v87 = v86 == 0;
        }
        else {
          BOOL v87 = 1;
        }
        unint64_t v88 = (unint64_t)*v85 << 32;
        if (v87) {
          unint64_t v88 = 0;
        }
        sub_215905C64((BOOL)&v174[8], v84, v83, v88 | (2 * (v86 != 0)));
        *(void *)&long long v138 = &unk_26C66B418;
        sub_215936F60((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 8:
      int v39 = **a2;
      if (v39 == 1)
      {
        uint64_t v113 = a2[2];
        *(void *)&long long v138 = &unk_26C65EB50;
        sub_215937D34(v113);
      }
      if (!v39)
      {
        BOOL v40 = a2[2];
        *(void *)&long long v149 = &unk_26C65EB50;
        uint64_t v173 = &unk_26C66BE30;
        int v41 = v40[1];
        uint64_t v42 = 2 * (*v40 != 0);
        LODWORD(v43) = v42 * *v40;
        if (v43 <= 8) {
          LODWORD(v43) = 8;
        }
        uint64_t v44 = *(void *)v40;
        *(void *)&long long v138 = &unk_26C67C048;
        if (v41) {
          unint64_t v43 = v43;
        }
        else {
          unint64_t v43 = 8;
        }
        *(void *)&v174[4] = v44;
        *(_DWORD *)v174 = 2;
        LODWORD(v179[0]) = 1;
        *(void *)((char *)v179 + 4) = v42 & 0x1FFFFFFFFLL | ((unint64_t)(v43 >> 1) << 33);
        uint64_t v175 = v179[0];
        int v176 = v43;
        uint64_t v177 = v44;
        uint64_t v178 = *(void *)((char *)v179 + 4);
        sub_215B3FBB4((uint64_t)&v138, 0, 8, (uint64_t)v174, 0.0);
        *(void *)&long long v138 = &unk_26C67C048;
        operator new();
      }
      sub_2158DE560(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        BOOL v127 = a2[2];
        uint64_t v128 = *(void *)a2[3];
        v129 = (unsigned int *)a2[4];
        *(void *)v174 = &unk_26C66D280;
        int v130 = *v127;
        if (v127[1]) {
          BOOL v131 = v130 == 0;
        }
        else {
          BOOL v131 = 1;
        }
        unint64_t v132 = (unint64_t)*v129 << 32;
        if (v131) {
          unint64_t v132 = 0;
        }
        sub_215906B50((BOOL)&v174[8], v128, v127, v132 | (2 * (v130 != 0)));
        *(void *)&long long v138 = &unk_26C66B510;
        sub_21593807C((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 21:
      int v23 = **a2;
      if (v23 == 1)
      {
        uint64_t v89 = a2[2];
        *(void *)&long long v138 = &unk_26C65EC98;
        sub_215938E50(v89);
      }
      if (!v23)
      {
        v24 = a2[2];
        LOBYTE(v173) = 0;
        *(void *)&long long v149 = &unk_26C65EC98;
        BOOL v172 = &unk_26C66BE68;
        sub_215B566B0(v24, (char *)&v173, (uint64_t)&v138);
        operator new();
      }
      sub_2158E7D48(a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        v90 = a2[2];
        uint64_t v91 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C66F298;
        uint64_t v92 = 3;
        if (!*v90) {
          uint64_t v92 = 0;
        }
        if (v90[1]) {
          BOOL v93 = *v90 == 0;
        }
        else {
          BOOL v93 = 1;
        }
        uint64_t v94 = v91 << 32;
        if (v93) {
          uint64_t v94 = 0;
        }
        *(void *)&long long v138 = v94 | v92;
        sub_215913504((uint64_t *)&v162, v90, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66B608;
        sub_215939190((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 22:
      int v45 = **a2;
      if (v45 == 1)
      {
        uint64_t v114 = a2[2];
        *(void *)&long long v138 = &unk_26C65EDE0;
        sub_21593A0E0(v114);
      }
      if (!v45)
      {
        int v46 = a2[2];
        LOWORD(v173) = 0;
        *(void *)&long long v149 = &unk_26C65EDE0;
        BOOL v172 = &unk_26C66BEA0;
        sub_215B568F8(v46, (__int16 *)&v173, (uint64_t)&v138);
        operator new();
      }
      sub_2158E87DC(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        int v133 = a2[2];
        uint64_t v134 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C66F510;
        uint64_t v135 = 3;
        if (!*v133) {
          uint64_t v135 = 0;
        }
        if (v133[1]) {
          BOOL v136 = *v133 == 0;
        }
        else {
          BOOL v136 = 1;
        }
        uint64_t v137 = v134 << 32;
        if (v136) {
          uint64_t v137 = 0;
        }
        *(void *)&long long v138 = v137 | v135;
        sub_2159145E4((uint64_t *)&v162, v133, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66B700;
        sub_21593A420((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 25:
      int v47 = **a2;
      if (v47 == 1)
      {
        BOOL v115 = a2[2];
        *(void *)&long long v138 = &unk_26C65EF28;
        sub_21593B388(v115);
      }
      if (!v47)
      {
        uint64_t v48 = a2[2];
        LOBYTE(v173) = 0;
        *(void *)&long long v149 = &unk_26C65EF28;
        BOOL v172 = &unk_26C66BED8;
        sub_215B56B40(v48, (char *)&v173, (unint64_t)&v138);
        operator new();
      }
      sub_2158EAC10(a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        uint64_t v116 = a2[2];
        uint64_t v117 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C66FC78;
        int v118 = *v116;
        if (v116[1]) {
          BOOL v119 = v118 == 0;
        }
        else {
          BOOL v119 = 1;
        }
        uint64_t v120 = v117 << 32;
        if (v119) {
          uint64_t v120 = 0;
        }
        *(void *)&long long v138 = v120 | (4 * (v118 != 0));
        sub_215917904((uint64_t *)&v162, v116, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66B7F8;
        sub_21593B6D0((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 31:
      int v25 = **a2;
      if (v25 == 1)
      {
        BOOL v95 = a2[2];
        *(void *)&long long v138 = &unk_26C65F070;
        sub_21593C540(v95);
      }
      if (!v25)
      {
        int v26 = a2[2];
        *(void *)&long long v149 = &unk_26C65F070;
        uint64_t v173 = &unk_26C66BF10;
        int v27 = v26[1];
        uint64_t v28 = 4 * (*v26 != 0);
        LODWORD(v29) = v28 * *v26;
        if (v29 <= 0x10) {
          LODWORD(v29) = 16;
        }
        uint64_t v30 = *(void *)v26;
        *(void *)&long long v138 = &unk_26C67C288;
        if (v27) {
          unint64_t v29 = v29;
        }
        else {
          unint64_t v29 = 16;
        }
        *(void *)&v174[4] = v30;
        *(_DWORD *)v174 = 4;
        LODWORD(v179[0]) = 1;
        *(void *)((char *)v179 + 4) = v28 & 0x3FFFFFFFFLL | ((unint64_t)(v29 >> 2) << 34);
        uint64_t v175 = v179[0];
        int v176 = v29;
        uint64_t v177 = v30;
        uint64_t v178 = *(void *)((char *)v179 + 4);
        sub_215B3C7A0((uint64_t)&v138, 0, 31, (uint64_t)v174, 0);
        *(void *)&long long v138 = &unk_26C67C288;
        operator new();
      }
      sub_2158EF0E4(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        uint64_t v96 = a2[2];
        uint64_t v97 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C670B48;
        int v98 = *v96;
        if (v96[1]) {
          BOOL v99 = v98 == 0;
        }
        else {
          BOOL v99 = 1;
        }
        uint64_t v100 = v97 << 32;
        if (v99) {
          uint64_t v100 = 0;
        }
        *(void *)&long long v138 = v100 | (4 * (v98 != 0));
        sub_21591DA08((uint64_t *)&v162, v96, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66B8F0;
        sub_21593C888((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 32:
      int v31 = **a2;
      if (v31 == 1)
      {
        uint64_t v101 = a2[2];
        *(void *)&long long v138 = &unk_26C65F1B8;
        sub_21593D65C(v101);
      }
      if (!v31)
      {
        int v32 = a2[2];
        *(void *)&long long v149 = &unk_26C65F1B8;
        uint64_t v173 = &unk_26C66BF48;
        int v33 = v32[1];
        uint64_t v34 = 4 * (*v32 != 0);
        LODWORD(v35) = v34 * *v32;
        if (v35 <= 8) {
          LODWORD(v35) = 8;
        }
        uint64_t v36 = *(void *)v32;
        *(void *)&long long v138 = &unk_26C67C318;
        if (v33) {
          unint64_t v35 = v35;
        }
        else {
          unint64_t v35 = 8;
        }
        *(void *)&v174[4] = v36;
        *(_DWORD *)v174 = 4;
        LODWORD(v179[0]) = 1;
        *(void *)((char *)v179 + 4) = v34 & 0x3FFFFFFFFLL | ((unint64_t)(v35 >> 2) << 34);
        uint64_t v175 = v179[0];
        int v176 = v35;
        uint64_t v177 = v36;
        uint64_t v178 = *(void *)((char *)v179 + 4);
        sub_215B4172C((uint64_t)&v138, 0, 32, (uint64_t)v174, 0.0);
        *(void *)&long long v138 = &unk_26C67C318;
        operator new();
      }
      sub_2158EFCD8(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        BOOL v102 = a2[2];
        uint64_t v103 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C670DC0;
        int v104 = *v102;
        if (v102[1]) {
          BOOL v105 = v104 == 0;
        }
        else {
          BOOL v105 = 1;
        }
        uint64_t v106 = v103 << 32;
        if (v105) {
          uint64_t v106 = 0;
        }
        *(void *)&long long v138 = v106 | (4 * (v104 != 0));
        sub_21591EAA8((uint64_t *)&v162, v102, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66B9E8;
        sub_21593D9A4((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 37:
      int v49 = **a2;
      if (v49 == 1)
      {
        BOOL v121 = a2[2];
        *(void *)&long long v138 = &unk_26C65F300;
        sub_21593E814(v121);
      }
      if (!v49)
      {
        v50 = a2[2];
        LOBYTE(v173) = 0;
        *(void *)&long long v149 = &unk_26C65F300;
        BOOL v172 = &unk_26C66BF80;
        sub_215B56D90(v50, (char *)&v173, (unint64_t)&v138);
        operator new();
      }
      sub_2158F3730(a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        uint64_t v122 = a2[2];
        uint64_t v123 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C671A18;
        int v124 = *v122;
        if (v122[1]) {
          BOOL v125 = v124 == 0;
        }
        else {
          BOOL v125 = 1;
        }
        uint64_t v126 = v123 << 32;
        if (v125) {
          uint64_t v126 = 0;
        }
        *(void *)&long long v138 = v126 | (4 * (v124 != 0));
        sub_215923ACC((uint64_t *)&v162, v122, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66BAE0;
        sub_21593EB5C((uint64_t)&v138 + 8, (uint64_t)v174);
      }
      goto LABEL_211;
    case 38:
      int v9 = **a2;
      if (v9 == 1)
      {
        uint64_t v57 = a2[2];
        *(void *)&long long v138 = &unk_26C65F448;
        sub_21593F9CC(v57);
      }
      if (!v9)
      {
        size_t v10 = a2[2];
        *(void *)&long long v149 = &unk_26C65F448;
        uint64_t v173 = &unk_26C66BFB8;
        int v11 = v10[1];
        uint64_t v12 = 4 * (*v10 != 0);
        LODWORD(v13) = v12 * *v10;
        if (v13 <= 0x10) {
          LODWORD(v13) = 16;
        }
        uint64_t v14 = *(void *)v10;
        *(void *)&long long v138 = &unk_26C67C438;
        if (v11) {
          unint64_t v13 = v13;
        }
        else {
          unint64_t v13 = 16;
        }
        *(void *)&v174[4] = v14;
        *(_DWORD *)v174 = 4;
        LODWORD(v179[0]) = 1;
        *(void *)((char *)v179 + 4) = v12 & 0x3FFFFFFFFLL | ((unint64_t)(v13 >> 2) << 34);
        uint64_t v175 = v179[0];
        int v176 = v13;
        uint64_t v177 = v14;
        uint64_t v178 = *(void *)((char *)v179 + 4);
        sub_215B37BF4((uint64_t)&v138, 0, 38, (uint64_t)v174, 0);
        *(void *)&long long v138 = &unk_26C67C438;
        operator new();
      }
      sub_2158F41B0(*(void *)a2[3], a2[2], *a2[4], (uint64_t)&v149);
      if (v159)
      {
        uint64_t v58 = a2[2];
        uint64_t v59 = *a2[4];
        *(void *)&long long v162 = *(void *)a2[3];
        *(void *)v174 = &unk_26C671C90;
        int v60 = *v58;
        if (v58[1]) {
          BOOL v61 = v60 == 0;
        }
        else {
          BOOL v61 = 1;
        }
        uint64_t v62 = v59 << 32;
        if (v61) {
          uint64_t v62 = 0;
        }
        *(void *)&long long v138 = v62 | (4 * (v60 != 0));
        sub_215924BAC((uint64_t *)&v162, v58, &v138, (uint64_t)&v174[8]);
        *(void *)&long long v138 = &unk_26C66BBD8;
        sub_21593FD14((uint64_t)&v138 + 8, (uint64_t)v174);
      }
LABEL_211:
      long long v162 = v149;
      sub_215741BFC(&v163, &v150);
      sub_2158CBAB8((uint64_t)a2[1], &v162);
      if (v171)
      {
        if (v170)
        {
          if (v169 < 0) {
            operator delete(__p);
          }
          if (v167 < 0) {
            operator delete(v166);
          }
        }
        if ((_BYTE)v165 && v164 < 0) {
          operator delete(v163);
        }
      }
      if (!v159 && v158)
      {
        if (v157)
        {
          if (v156 < 0) {
            operator delete(v155);
          }
          if (v154 < 0) {
            operator delete(v153);
          }
        }
        if (v152 && v151 < 0) {
          operator delete((void *)v150);
        }
      }
      break;
    default:
      return;
  }
}

void sub_215930174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,char a55,int a56,char a57,int a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (LOBYTE(STACK[0x220]))
  {
    if (LOBYTE(STACK[0x218]))
    {
      if (SLOBYTE(STACK[0x217]) < 0) {
        operator delete((void *)STACK[0x200]);
      }
      if (a76 < 0) {
        operator delete(a75);
      }
    }
    if (a74 && a73 < 0) {
      operator delete(a72);
    }
  }
  if (!a59 && a57)
  {
    if (a55)
    {
      if (a54 < 0) {
        operator delete(a49);
      }
      if (a47 < 0) {
        operator delete(a42);
      }
    }
    if (a41)
    {
      if (a40 < 0)
      {
        operator delete(a35);
        _Unwind_Resume(a1);
      }
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21593183C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_2159318B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B598;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_215931958()
{
}

__n128 sub_21593196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = off_26C67D770;
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  return result;
}

__n128 sub_215931998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = &unk_26C67D730;
  return result;
}

__n128 sub_2159319C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = &unk_26C67D750;
  return result;
}

__n128 sub_2159319F0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  *a2 = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

void sub_215931A00(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  unint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  int v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 1);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 1;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  BOOL v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215931B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215931B5C(_DWORD *a1)
{
  LODWORD(v1) = *a1;
  BOOL v2 = *a1 != 0;
  if (a1[1]) {
    uint64_t v1 = v1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)a1;
  v4[8] = &unk_26C66BCE0;
  v5[0] = v3;
  v5[1] = v2 | (v1 << 32);
  sub_215B42A14((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215931CC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B2E01C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215931CDC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215931D68()
{
  return 1;
}

uint64_t sub_215931D70(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_215931D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 1);
}

uint64_t sub_215931D94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215931E1C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8))
  {
    unint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      unint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      unint64_t v11 = *(void *)(a2 + 8);
      uint64_t v12 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      unint64_t v4 = 0;
      unint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    (*(void (**)(void **__return_ptr))(*(void *)v5 + 72))(&v13);
    uint64_t v10 = v13[2];
    long long v15 = *(_OWORD *)v13;
    uint64_t v16 = v10;
    unint64_t v13 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v14 = *((void *)&v15 + 1);
    sub_215931B5C(&v14);
  }
  if (*(unsigned char *)(a2 + 48)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    BOOL v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 32);
  unint64_t v13 = &unk_26C66BCE0;
  uint64_t v9 = v8 << 32;
  if (!HIDWORD(v8)) {
    uint64_t v9 = 0;
  }
  unint64_t v11 = v8;
  uint64_t v12 = (std::__shared_weak_count *)(v9 | (v8 != 0));
  sub_215B42A14((uint64_t)&v15, (uint64_t)&v11);
  operator new();
}

void sub_215932524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215733368(v10);
  sub_2159318B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215932540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_215733368(v5);
  if (!atomic_fetch_add(v7, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  sub_215733368((uint64_t)va);
  sub_2159318B8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159325A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_2159318B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159325B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_215B2E01C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159325C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159318B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159325DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  unint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_2159318B8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215932648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159318B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593265C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215932670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159318B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215932684(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 1;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215932880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159328A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159328C0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593293C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B7D8;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_2159329DC()
{
}

void sub_2159329F0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 2;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215932B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215932B4C(_DWORD *a1)
{
  LODWORD(v1) = *a1;
  BOOL v2 = *a1 != 0;
  if (a1[1]) {
    uint64_t v1 = v1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)a1;
  v4[8] = &unk_26C66BD18;
  v5[0] = v3;
  v5[1] = v2 | (v1 << 32);
  sub_215B43E84((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215932CB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B34764((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215932CCC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215932D58()
{
  return 2;
}

uint64_t sub_215932D60(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_215932D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_215932D84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215932E0C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      unint64_t v11 = *(void *)(a2 + 8);
      int v12 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      unint64_t v11 = 0;
      int v12 = 0;
    }
    (*(void (**)(void **__return_ptr))(*(void *)v5 + 72))(&v16);
    uint64_t v10 = v16[2];
    long long v14 = *(_OWORD *)v16;
    uint64_t v15 = v10;
    uint64_t v16 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v16 = (void *)*((void *)&v14 + 1);
    uint64_t v13 = 0;
    sub_215932B4C(&v16);
  }
  if (*(unsigned char *)(a2 + 48)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    uint64_t v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 32);
  uint64_t v16 = &unk_26C66BD18;
  uint64_t v9 = v8 << 32;
  if (!HIDWORD(v8)) {
    uint64_t v9 = 0;
  }
  unint64_t v11 = v8;
  int v12 = (std::__shared_weak_count *)(v9 | (v8 != 0));
  sub_215B43E84((uint64_t)&v14, (uint64_t)&v11);
  operator new();
}

void sub_21593350C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368(v8);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215933528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v12 = va_arg(va1, void);
  sub_215733368(v8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  sub_215733368((uint64_t)va1);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215933588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593359C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215B34764((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159335B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159335C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593293C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215933628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593363C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215933650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593293C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215933664(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 2);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 2;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215933860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215933884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2159338A0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593391C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B988;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_2159339BC()
{
}

void sub_2159339D0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 3;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215933B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215933B2C(_DWORD *a1)
{
  LODWORD(v1) = *a1;
  BOOL v2 = *a1 != 0;
  if (a1[1]) {
    uint64_t v1 = v1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)a1;
  v4[8] = &unk_26C66BD50;
  v5[0] = v3;
  v5[1] = v2 | (v1 << 32);
  sub_215B452F0((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215933C98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B39534((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215933CAC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215933D38()
{
  return 3;
}

uint64_t sub_215933D40(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_215933D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_215933D64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215933DEC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      unint64_t v11 = *(void *)(a2 + 8);
      int v12 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      unint64_t v11 = 0;
      int v12 = 0;
    }
    (*(void (**)(void **__return_ptr))(*(void *)v5 + 72))(&v13);
    uint64_t v10 = v13[2];
    long long v15 = *(_OWORD *)v13;
    uint64_t v16 = v10;
    uint64_t v13 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v14 = *((void *)&v15 + 1);
    sub_215933B2C(&v14);
  }
  if (*(unsigned char *)(a2 + 48)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    uint64_t v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 32);
  uint64_t v13 = &unk_26C66BD50;
  uint64_t v9 = v8 << 32;
  if (!HIDWORD(v8)) {
    uint64_t v9 = 0;
  }
  unint64_t v11 = v8;
  int v12 = (std::__shared_weak_count *)(v9 | (v8 != 0));
  sub_215B452F0((uint64_t)&v15, (uint64_t)&v11);
  operator new();
}

void sub_2159344F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215733368(v10);
  sub_21593391C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215934510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_215733368(v5);
  if (!atomic_fetch_add(v7, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  sub_215733368((uint64_t)va);
  sub_21593391C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215934570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_21593391C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215934584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_215B39534((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215934598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593391C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159345AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_21593391C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215934618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593391C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593462C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215934640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593391C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215934654(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    uint64_t v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 3;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215934850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215934874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215934890(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593490C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67BB38;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_2159349AC()
{
}

void sub_2159349C0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 4);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 4;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215934B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215934B1C(_DWORD *a1)
{
  LODWORD(v1) = *a1;
  BOOL v2 = *a1 != 0;
  if (a1[1]) {
    uint64_t v1 = v1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)a1;
  v4[8] = &unk_26C66BD88;
  v5[0] = v3;
  v5[1] = v2 | (v1 << 32);
  sub_215B46764((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215934C88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B3E214((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215934C9C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215934D28()
{
  return 4;
}

uint64_t sub_215934D30(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_215934D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 64, 2, a1 + 72, 4);
}

uint64_t sub_215934D54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215934DDC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      unint64_t v11 = *(void *)(a2 + 8);
      int v12 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      unint64_t v11 = 0;
      int v12 = 0;
    }
    (*(void (**)(void **__return_ptr))(*(void *)v5 + 72))(&v16);
    uint64_t v10 = v16[2];
    long long v14 = *(_OWORD *)v16;
    uint64_t v15 = v10;
    uint64_t v16 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v16 = (void *)*((void *)&v14 + 1);
    uint64_t v13 = 0;
    sub_215934B1C(&v16);
  }
  if (*(unsigned char *)(a2 + 48)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    uint64_t v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 32);
  uint64_t v16 = &unk_26C66BD88;
  uint64_t v9 = v8 << 32;
  if (!HIDWORD(v8)) {
    uint64_t v9 = 0;
  }
  unint64_t v11 = v8;
  int v12 = (std::__shared_weak_count *)(v9 | (v8 != 0));
  sub_215B46764((uint64_t)&v14, (uint64_t)&v11);
  operator new();
}

void sub_2159354DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_215733368(v8);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159354F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v12 = va_arg(va1, void);
  sub_215733368(v8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  sub_215733368((uint64_t)va1);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215935558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593556C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215B3E214((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215935580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215935594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593490C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2159355F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593560C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215935620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_21593490C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215935634(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 2, (uint64_t)(a2 + 8), 2, (uint64_t)(a2 + 9), 4);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 4;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215935830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215935854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215935870(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_2159358EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B628;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593598C()
{
}

void sub_2159359A0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 5;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215935AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215935AFC(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 2 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 2;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BDC0;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x1FFFFFFFFLL | ((unint64_t)(v2 >> 1) << 33);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B47BD0((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215935CD0(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215935D04(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215935D90()
{
  return 5;
}

uint64_t sub_215935D98(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215935DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215935DBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215935E44(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_215935AFC(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v9 = 2 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 2;
  uint64_t v15 = &unk_26C66BDC0;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x1FFFFFFFFLL | ((unint64_t)(v10 >> 1) << 33);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B47BD0((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_2159365C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215936694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159358EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159366A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_2159358EC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215936714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159358EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215936728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21593673C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2159358EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215936750(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 5;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593694C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215936970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593698C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_215936A08(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67BA18;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_215936AA8()
{
}

void sub_215936ABC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 7;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215936C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215936C18(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 2 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 2;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BDF8;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x1FFFFFFFFLL | ((unint64_t)(v2 >> 1) << 33);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B4922C((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215936DEC(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215936E20(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215936EAC()
{
  return 7;
}

uint64_t sub_215936EB4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215936EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_215936ED8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215936F60(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_215936C18(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v9 = 2 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 2;
  uint64_t v15 = &unk_26C66BDF8;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x1FFFFFFFFLL | ((unint64_t)(v10 >> 1) << 33);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B4922C((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_2159376E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159377B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215936A08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159377C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_215936A08((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215937830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215936A08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215937844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_215937858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215936A08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593786C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 7;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215937A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215937A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215937AA8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_215937B24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67BBC8;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_215937BC4()
{
}

void sub_215937BD8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 4);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 8;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215937D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215937D34(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 2 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 2;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BE30;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x1FFFFFFFFLL | ((unint64_t)(v2 >> 1) << 33);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B4A888((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_215937F08(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215937F3C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215937FC8()
{
  return 8;
}

uint64_t sub_215937FD0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_215937FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_215937FF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593807C(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_215937D34(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v9 = 2 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 2;
  uint64_t v15 = &unk_26C66BE30;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x1FFFFFFFFLL | ((unint64_t)(v10 >> 1) << 33);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B4A888((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_215938800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159388CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215937B24((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159388E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_215937B24((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593894C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215937B24((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215938960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_215938974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215937B24((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215938988(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 8;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215938B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215938BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215938BC4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_215938C40(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B6B8;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_215938CE0()
{
}

void sub_215938CF4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 21;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_215938E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215938E50(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v1 = 3;
  }
  else {
    uint64_t v1 = 0;
  }
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    uint64_t v2 = v2;
  }
  else {
    uint64_t v2 = 0;
  }
  v5[0] = 3;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BE68;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 | (v2 << 32);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B4BEE0((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593901C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215939050(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159390DC()
{
  return 21;
}

uint64_t sub_2159390E4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2159390EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_215939108(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215939190(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_215938E50(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  if (v8) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 0;
  }
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    uint64_t v10 = v10;
  }
  else {
    uint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 3;
  uint64_t v15 = &unk_26C66BE68;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 | (v10 << 32);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B4BEE0((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_215939A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215939B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215938C40((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215939B78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_215938C40((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215939BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215938C40((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215939BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_215939C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215938C40((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215939C18(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 21;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215939E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215939E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_215939E54(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_215939ED0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B868;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_215939F70()
{
}

void sub_215939F84(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 22;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593A0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593A0E0(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  if (*a1) {
    uint64_t v1 = 3;
  }
  else {
    uint64_t v1 = 0;
  }
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    uint64_t v2 = v2;
  }
  else {
    uint64_t v2 = 0;
  }
  v5[0] = 3;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BEA0;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 | (v2 << 32);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B4D580((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593A2AC(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593A2E0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593A36C()
{
  return 22;
}

uint64_t sub_21593A374(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593A37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21593A398(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593A420(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_21593A0E0(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  if (v8) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 0;
  }
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    uint64_t v10 = v10;
  }
  else {
    uint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 3;
  uint64_t v15 = &unk_26C66BEA0;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 | (v10 << 32);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B4D580((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_21593AD40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593AE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215939ED0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593AE20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_215939ED0((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593AE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215939ED0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593AE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21593AEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215939ED0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593AEC0(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 22;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  uint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593B0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21593B0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593B0FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593B178(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B748;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593B218()
{
}

void sub_21593B22C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 25;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593B374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593B388(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 4 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 4;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BED8;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x3FFFFFFFFLL | ((unint64_t)(v2 >> 2) << 34);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B4EC40((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593B55C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593B590(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593B61C()
{
  return 25;
}

uint64_t sub_21593B624(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593B62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21593B648(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593B6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      *(void *)int v17 = *(void *)(a2 + 8);
      *(void *)&v17[8] = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      *(void *)int v17 = 0;
      *(void *)&v17[8] = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)long long v14 = **(_OWORD **)v21;
    *(_OWORD *)&v14[16] = v12;
    long long v15 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v13 = *(void *)&v14[12];
    sub_21593B388(&v13);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v16 = &unk_26C66BED8;
  uint64_t v9 = 4 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  *(void *)&v17[4] = v8;
  *(_DWORD *)int v17 = 4;
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x3FFFFFFFFLL | ((unint64_t)(v10 >> 2) << 34);
  *(void *)&unsigned char v17[12] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B4EC40((uint64_t)v14, (uint64_t)v17);
  operator new();
}

void sub_21593BEF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593BFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593B178((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593BFD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593B178((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593C03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593B178((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593C050(_Unwind_Exception *a1)
{
  sub_215733368(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_21593C064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593B178((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593C078(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 25;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593C274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21593C298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593C2B4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593C330(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67BAA8;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593C3D0()
{
}

void sub_21593C3E4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 31;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593C52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593C540(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 4 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 4;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BF10;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x3FFFFFFFFLL | ((unint64_t)(v2 >> 2) << 34);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B502E0((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593C714(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593C748(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593C7D4()
{
  return 31;
}

uint64_t sub_21593C7DC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593C7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21593C800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593C888(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)int v17 = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v16 = 0;
      *(void *)int v17 = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)uint64_t v13 = **(_OWORD **)v21;
    *(_OWORD *)&v13[16] = v12;
    long long v14 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v15 = *(void **)&v13[12];
    sub_21593C540(&v15);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v9 = 4 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  HIDWORD(v16) = *(void *)(a2 + 36);
  LODWORD(v16) = 4;
  uint64_t v15 = &unk_26C66BF10;
  *(_DWORD *)int v17 = HIDWORD(v8);
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x3FFFFFFFFLL | ((unint64_t)(v10 >> 2) << 34);
  *(void *)&v17[4] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B502E0((uint64_t)v13, (uint64_t)&v16);
  operator new();
}

void sub_21593D00C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593D0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593C330((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593D0EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v4 = v3;
  sub_215733368(v2);
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_215733368((uint64_t)va);
  sub_21593C330((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593D158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593C330((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593D16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21593D180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593C330((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593D194(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  uint64_t v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 31;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  uint64_t v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593D390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21593D3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593D3D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593D44C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67BC58;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593D4EC()
{
}

void sub_21593D500(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 4);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 32;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593D648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593D65C(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 4 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 4;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BF48;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x3FFFFFFFFLL | ((unint64_t)(v2 >> 2) << 34);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B51938((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593D830(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593D864(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593D8F0()
{
  return 32;
}

uint64_t sub_21593D8F8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593D900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_21593D91C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593D9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      *(void *)int v17 = *(void *)(a2 + 8);
      *(void *)&v17[8] = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      *(void *)int v17 = 0;
      *(void *)&v17[8] = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)long long v14 = **(_OWORD **)v21;
    *(_OWORD *)&v14[16] = v12;
    long long v15 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v13 = *(void *)&v14[12];
    sub_21593D65C(&v13);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v16 = &unk_26C66BF48;
  uint64_t v9 = 4 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  *(void *)&v17[4] = v8;
  *(_DWORD *)int v17 = 4;
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x3FFFFFFFFLL | ((unint64_t)(v10 >> 2) << 34);
  *(void *)&unsigned char v17[12] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B51938((uint64_t)v14, (uint64_t)v17);
  operator new();
}

void sub_21593E1CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593E298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593D44C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593E2AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593D44C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593E310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593D44C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593E324(_Unwind_Exception *a1)
{
  sub_215733368(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_21593E338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593D44C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593E34C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 4);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 32;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593E548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21593E56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593E588(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593E604(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B748;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593E6A4()
{
}

void sub_21593E6B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 37;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593E800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593E814(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 4 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 4;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BF80;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x3FFFFFFFFLL | ((unint64_t)(v2 >> 2) << 34);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B52FCC((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593E9E8(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593EA1C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593EAA8()
{
  return 37;
}

uint64_t sub_21593EAB0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593EAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_21593EAD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593EB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      *(void *)int v17 = *(void *)(a2 + 8);
      *(void *)&v17[8] = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      *(void *)int v17 = 0;
      *(void *)&v17[8] = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)long long v14 = **(_OWORD **)v21;
    *(_OWORD *)&v14[16] = v12;
    long long v15 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v13 = *(void *)&v14[12];
    sub_21593E814(&v13);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v16 = &unk_26C66BF80;
  uint64_t v9 = 4 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  *(void *)&v17[4] = v8;
  *(_DWORD *)int v17 = 4;
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x3FFFFFFFFLL | ((unint64_t)(v10 >> 2) << 34);
  *(void *)&unsigned char v17[12] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B52FCC((uint64_t)v14, (uint64_t)v17);
  operator new();
}

void sub_21593F384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593F450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593E604((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593F464(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593E604((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21593F4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593E604((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593F4DC(_Unwind_Exception *a1)
{
  sub_215733368(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_21593F4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593E604((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21593F504(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 1);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 37;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_21593F700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21593F724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21593F740(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_21593F7BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C67B8F8;
    uint64_t v3 = *(unsigned int *)(v2 + 40);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v3])(&v5, v2 + 16);
    }
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x2166C4D20](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_21593F85C()
{
}

void sub_21593F870(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215DC93A4((uint64_t)&v8, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  uint64_t v6 = a1[3];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v6;
  *(_DWORD *)(a2 + 40) = 38;
  *(_WORD *)(a2 + 44) = 256;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_21593F9B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21593F9CC(_DWORD *a1)
{
  v10[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = 4 * (*a1 != 0);
  LODWORD(v2) = v1 * *a1;
  if (a1[1]) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = 0;
  }
  v5[0] = 4;
  uint64_t v3 = *(void *)a1;
  v5[1] = *(void *)a1;
  v4[11] = &unk_26C66BFB8;
  void v5[2] = HIDWORD(v3);
  LODWORD(v10[0]) = 1;
  *(void *)((char *)v10 + 4) = v1 & 0x3FFFFFFFFLL | ((unint64_t)(v2 >> 2) << 34);
  uint64_t v6 = v10[0];
  int v7 = v2;
  uint64_t v8 = v3;
  uint64_t v9 = *(void *)((char *)v10 + 4);
  sub_215B5466C((uint64_t)v4, (uint64_t)v5);
  operator new();
}

void sub_21593FBA0(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21593FBD4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21593FC60()
{
  return 38;
}

uint64_t sub_21593FC68(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_21593FC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_21593FC8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21593FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(a2 + 16);
    }
    uint64_t v5 = *(void *)(a2 + 8);
    if (v5)
    {
      *(void *)int v17 = *(void *)(a2 + 8);
      *(void *)&v17[8] = v4;
      if (v4) {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v4 = 0;
      *(void *)int v17 = 0;
      *(void *)&v17[8] = 0;
    }
    (*(void (**)(unsigned char *__return_ptr))(*(void *)v5 + 72))(v21);
    long long v12 = *(_OWORD *)(*(void *)v21 + 16);
    long long v11 = *(_OWORD *)(*(void *)v21 + 32);
    *(_OWORD *)long long v14 = **(_OWORD **)v21;
    *(_OWORD *)&v14[16] = v12;
    long long v15 = v11;
    *(void *)int v21 = 0;
    MEMORY[0x2166C4D20]();
    if (v4)
    {
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    uint64_t v13 = *(void *)&v14[12];
    sub_21593F9CC(&v13);
  }
  if (*(unsigned char *)(a2 + 72)) {
    BOOL v6 = *(void *)(a2 + 24) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    int v7 = *(std::__shared_weak_count **)(a2 + 16);
    if (v7)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    (*(void (**)(void, void, const char *))(v2 + 88))(0, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
  unint64_t v8 = *(void *)(a2 + 36);
  uint64_t v16 = &unk_26C66BFB8;
  uint64_t v9 = 4 * (v8 != 0);
  LODWORD(v10) = v9 * v8;
  if (HIDWORD(v8)) {
    unint64_t v10 = v10;
  }
  else {
    unint64_t v10 = 0;
  }
  *(void *)&v17[4] = v8;
  *(_DWORD *)int v17 = 4;
  *(_DWORD *)int v21 = 1;
  *(void *)&v21[4] = v9 & 0x3FFFFFFFFLL | ((unint64_t)(v10 >> 2) << 34);
  *(void *)&unsigned char v17[12] = *(void *)v21;
  int v18 = v10;
  unint64_t v19 = v8;
  uint64_t v20 = *(void *)&v21[4];
  sub_215B5466C((uint64_t)v14, (uint64_t)v17);
  operator new();
}

void sub_21594053C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215940608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593F7BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21594061C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v2);
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_215733368((uint64_t)va);
  sub_21593F7BC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215940680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593F7BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215940694(_Unwind_Exception *a1)
{
  sub_215733368(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_2159406A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21593F7BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159406BC(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v3 = (std::__shared_weak_count *)a2[2];
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v13 = v4;
    long long v14 = v3;
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v13 = v4;
    long long v14 = 0;
  }
  uint64_t v5 = a2[4];
  sub_215DC93A4((uint64_t)&v11, 3, (uint64_t)(a2 + 11), 3, (uint64_t)a2 + 100, 2);
  BOOL v6 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = 38;
  if (!v4)
  {
    *(_WORD *)(a1 + 44) = 0;
    if (!v6) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 104))(v4);
  if ((v7 & 0xFFFFFFu) <= 0x10000) {
    unsigned __int8 v8 = 0;
  }
  else {
    unsigned __int8 v8 = v7;
  }
  __int16 v9 = v7 & 0xFF00;
  if ((v7 & 0xFF0000) == 0) {
    __int16 v9 = 0;
  }
  BOOL v6 = v14;
  *(_WORD *)(a1 + 44) = v9 & 0xFF00 | v8;
  if (v6)
  {
LABEL_18:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_20:
  unint64_t v10 = v16;
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2159408B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215733368(v3);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159408DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2159408F8(void *a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v33 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EC134(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 1:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EEAB4(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 2:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EEBA4(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 3:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EEC94(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 5:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EED84(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 6:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EEE74(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 7:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EEF64(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 8:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EF054(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 11:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EF144(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 12:
        v11[0] = (void *)(4 * a2);
        v11[1] = a1;
        sub_2157EF234(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      default:
        sub_215E097D8(a3);
    }
    __int16 v9 = (std::__shared_weak_count *)v5;
    *((void *)v5 + 1) = 0;
    *((void *)v5 + 2) = 0;
    *(void *)uint64_t v5 = &unk_26C672278;
    *(_OWORD *)(v5 + 24) = *(_OWORD *)__p;
    unint64_t v10 = (std::__shared_weak_count *)v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    *(void *)a4 = v5 + 24;
    *(void *)(a4 + 8) = v5;
    *(unsigned char *)(a4 + 120) = 1;
    if (!atomic_fetch_add((atomic_ullong *volatile)v5 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(char *))(*(void *)v5 + 16))(v5);
      std::__shared_weak_count::__release_weak(v9);
    }
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    if (!a2)
    {
      uint64_t v6 = operator new(0x28uLL);
      v6[1] = 0;
      v6[2] = 0;
      *uint64_t v6 = &unk_26C672278;
      __p[0] = 0;
      __p[1] = 0;
      *(void *)&long long v23 = 0;
      sub_215D0E244();
    }
    sub_215940E64((uint64_t)v11, &v33);
    if (SHIBYTE(v12) < 0)
    {
      sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v11;
      uint64_t v14 = v12;
    }
    char v15 = 1;
    LOBYTE(v16) = 0;
    char v20 = 0;
    char v21 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)__p);
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v32)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v7 = v25;
      if (v25)
      {
        *(_OWORD *)(a4 + 16) = v23;
        *(void *)(a4 + 32) = v24;
        uint64_t v24 = 0;
        long long v23 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v31)
      {
        uint64_t v8 = v28;
        *(void *)(a4 + 64) = v27;
        *(_OWORD *)(a4 + 48) = v26;
        long long v26 = 0uLL;
        *(void *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v29;
        *(void *)(a4 + 96) = v30;
        uint64_t v27 = 0;
        long long v29 = 0uLL;
        uint64_t v30 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v7 && SHIBYTE(v24) < 0) {
        operator delete((void *)v23);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v21)
    {
      if (v20)
      {
        if (v19 < 0) {
          operator delete(v18);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(v11[0]);
    }
  }
}

void sub_215940D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_215940DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215940E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215940E64(uint64_t a1, unint64_t *a2)
{
  int v5 = 0;
  sub_2158210E8(v4, "data pointer is null but num_lines is ");
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  _DWORD v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C672360[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C672378[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C672348[v5])(v7, v4);
  }
  return result;
}

void sub_215940F68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215940F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215940F74);
}

void sub_215940FA8(void *a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v33 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157EF324(__p, (size_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 1:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1688(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 2:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1778(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 3:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1868(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 5:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1958(__p, (size_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 6:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1A48(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 7:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1B38(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 8:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1C28(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 11:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1D18(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      case 12:
        v11[0] = (void *)(6 * a2);
        v11[1] = a1;
        sub_2157F1E08(__p, (uint64_t *)v11);
        int v5 = (char *)operator new(0x28uLL);
        break;
      default:
        sub_215E097D8(a3);
    }
    __int16 v9 = (std::__shared_weak_count *)v5;
    *((void *)v5 + 1) = 0;
    *((void *)v5 + 2) = 0;
    *(void *)int v5 = &unk_26C6722C8;
    *(_OWORD *)(v5 + 24) = *(_OWORD *)__p;
    unint64_t v10 = (std::__shared_weak_count *)v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    *(void *)a4 = v5 + 24;
    *(void *)(a4 + 8) = v5;
    *(unsigned char *)(a4 + 120) = 1;
    if (!atomic_fetch_add((atomic_ullong *volatile)v5 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(char *))(*(void *)v5 + 16))(v5);
      std::__shared_weak_count::__release_weak(v9);
    }
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    if (!a2)
    {
      std::string v6 = operator new(0x28uLL);
      v6[1] = 0;
      v6[2] = 0;
      *std::string v6 = &unk_26C6722C8;
      __p[0] = 0;
      __p[1] = 0;
      *(void *)&long long v23 = 0;
      sub_215D0E824();
    }
    sub_215940E64((uint64_t)v11, &v33);
    if (SHIBYTE(v12) < 0)
    {
      sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v11;
      uint64_t v14 = v12;
    }
    char v15 = 1;
    LOBYTE(v16) = 0;
    char v20 = 0;
    char v21 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)__p);
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v32)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v7 = v25;
      if (v25)
      {
        *(_OWORD *)(a4 + 16) = v23;
        *(void *)(a4 + 32) = v24;
        uint64_t v24 = 0;
        long long v23 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v31)
      {
        uint64_t v8 = v28;
        *(void *)(a4 + 64) = v27;
        *(_OWORD *)(a4 + 48) = v26;
        long long v26 = 0uLL;
        *(void *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v29;
        *(void *)(a4 + 96) = v30;
        uint64_t v27 = 0;
        long long v29 = 0uLL;
        uint64_t v30 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v7 && SHIBYTE(v24) < 0) {
        operator delete((void *)v23);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v21)
    {
      if (v20)
      {
        if (v19 < 0) {
          operator delete(v18);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(v11[0]);
    }
  }
}

void sub_215941468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_2159414A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159414F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21594153C()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  uint64_t v0 = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  sub_215D0E244();
}

void sub_2159422B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159423C8()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  uint64_t v0 = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  sub_215D0E824();
}

void sub_2159432D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159433E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AAA8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      uint64_t v92 = 0;
      BOOL v93 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(unsigned __int8 ***)(a1 + 424);
  int v7 = *(atomic_ullong **)(a1 + 432);
  if (!v7)
  {
    uint64_t v92 = *(unsigned __int8 ***)(a1 + 424);
    BOOL v93 = 0;
    if (v8)
    {
      unint64_t v81 = 0;
      long long v82 = 0uLL;
      __dst[0] = v8;
      __dst[1] = 0;
      goto LABEL_23;
    }
LABEL_14:
    unint64_t v10 = sub_215AB5250(0xCu);
    uint64_t v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      BOOL v95 = (long long *)*((void *)v10 + 2);
      *(_OWORD *)__dst = v12;
    }
    int v96 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v91, (uint64_t)__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v88, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)unint64_t v88 = *(_OWORD *)a1;
      uint64_t v89 = *(void *)(a1 + 16);
    }
    int v90 = *(_DWORD *)(a1 + 24);
    LODWORD(v82) = 2;
    sub_215944998((uint64_t)v83, (unsigned int *)&v82);
    *(_OWORD *)__p = *(_OWORD *)v83;
    uint64_t v86 = v84;
    v83[1] = 0;
    uint64_t v84 = 0;
    v83[0] = 0;
    char v87 = 1;
    sub_215964570((long long **)&v91, (uint64_t)v88, (uint64_t)__p);
  }
  __int16 v9 = v7 + 1;
  atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
  uint64_t v92 = v8;
  BOOL v93 = (std::__shared_weak_count *)v7;
  if (!v8) {
    goto LABEL_14;
  }
  unint64_t v81 = (std::__shared_weak_count *)v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
  long long v82 = 0uLL;
  __dst[0] = v8;
  __dst[1] = v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
LABEL_23:
  uint64_t v13 = v8 + 1;
  uint64_t v14 = v8[1];
  BOOL v95 = &v82;
  int v15 = *v14;
  switch(v15)
  {
    case 0:
      unint64_t v16 = sub_215D15FDC(v13);
      unint64_t v18 = v16;
      uint64_t v19 = v17;
      if (!v17 && v16 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_28;
      }
      if (v16 < 4)
      {
        unint64_t v20 = 0;
LABEL_110:
        uint64_t v19 = 0;
        goto LABEL_111;
      }
      unint64_t v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v17)
      {
LABEL_28:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_110;
      }
LABEL_111:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D154A0(v88, 0, &v97, v20, v19);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      uint64_t v68 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      goto LABEL_195;
    case 1:
      unint64_t v31 = sub_215D160E4(v13);
      unint64_t v33 = v31;
      uint64_t v34 = v32;
      if (!v32 && v31 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_47;
      }
      if (v31 < 4)
      {
        unint64_t v35 = 0;
LABEL_121:
        uint64_t v34 = 0;
        goto LABEL_122;
      }
      unint64_t v35 = v31 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v32)
      {
LABEL_47:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_121;
      }
LABEL_122:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D156FC(v88, 1, &v97, v35, v34);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      unint64_t v69 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_195;
    case 2:
      unint64_t v21 = sub_215D161EC(v13);
      unint64_t v23 = v21;
      uint64_t v24 = v22;
      if (!v22 && v21 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_35;
      }
      if (v21 < 4)
      {
        unint64_t v25 = 0;
LABEL_88:
        uint64_t v24 = 0;
        goto LABEL_89;
      }
      unint64_t v25 = v21 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v22)
      {
LABEL_35:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_88;
      }
LABEL_89:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D1591C(v88, 2, &v97, v25, v24);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      int v66 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
      goto LABEL_195;
    case 3:
      unint64_t v46 = sub_215D162F4(v13);
      unint64_t v48 = v46;
      uint64_t v49 = v47;
      if (!v47 && v46 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_66;
      }
      if (v46 < 4)
      {
        unint64_t v50 = 0;
LABEL_154:
        uint64_t v49 = 0;
        goto LABEL_155;
      }
      unint64_t v50 = v46 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v47)
      {
LABEL_66:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_154;
      }
LABEL_155:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D15B3C(v88, 3, &v97, v50, v49);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      int v72 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      goto LABEL_195;
    case 5:
      unint64_t v51 = sub_215D15F58(v13);
      unint64_t v53 = v51;
      uint64_t v54 = v52;
      if (!v52 && v51 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_72;
      }
      if (v51 < 4)
      {
        unint64_t v55 = 0;
LABEL_165:
        uint64_t v54 = 0;
        goto LABEL_166;
      }
      unint64_t v55 = v51 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v52)
      {
LABEL_72:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_165;
      }
LABEL_166:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D15354(v88, 5, &v97, v55, v54);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      BOOL v73 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
        std::__shared_weak_count::__release_weak(v73);
      }
      goto LABEL_195;
    case 6:
      unint64_t v26 = sub_215D16060(v13);
      unint64_t v28 = v26;
      uint64_t v29 = v27;
      if (!v27 && v26 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_41;
      }
      if (v26 < 4)
      {
        unint64_t v30 = 0;
LABEL_99:
        uint64_t v29 = 0;
        goto LABEL_100;
      }
      unint64_t v30 = v26 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v27)
      {
LABEL_41:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_99;
      }
LABEL_100:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D155EC(v88, 6, &v97, v30, v29);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      BOOL v67 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
      goto LABEL_195;
    case 7:
      unint64_t v36 = sub_215D16168(v13);
      unint64_t v38 = v36;
      uint64_t v39 = v37;
      if (!v37 && v36 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_53;
      }
      if (v36 < 4)
      {
        unint64_t v40 = 0;
LABEL_132:
        uint64_t v39 = 0;
        goto LABEL_133;
      }
      unint64_t v40 = v36 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v37)
      {
LABEL_53:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_132;
      }
LABEL_133:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D1580C(v88, 7, &v97, v40, v39);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      v70 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
      goto LABEL_195;
    case 8:
      unint64_t v41 = sub_215D16270(v13);
      unint64_t v43 = v41;
      uint64_t v44 = v42;
      if (!v42 && v41 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_59;
      }
      if (v41 < 4)
      {
        unint64_t v45 = 0;
LABEL_143:
        uint64_t v44 = 0;
        goto LABEL_144;
      }
      unint64_t v45 = v41 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v42)
      {
LABEL_59:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_143;
      }
LABEL_144:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D15A2C(v88, 8, &v97, v45, v44);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      uint64_t v71 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      goto LABEL_195;
    case 11:
      unint64_t v61 = sub_215D16378(v13);
      unint64_t v63 = v61;
      uint64_t v64 = v62;
      if (!v62 && v61 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v65 = v63 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_84;
      }
      if (v61 < 4)
      {
        unint64_t v65 = 0;
LABEL_187:
        uint64_t v64 = 0;
        goto LABEL_188;
      }
      unint64_t v65 = v61 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v62)
      {
LABEL_84:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_187;
      }
LABEL_188:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D15C4C(v88, 11, &v97, v65, v64);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      BOOL v75 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
      goto LABEL_195;
    case 12:
      unint64_t v56 = sub_215D163FC(v13);
      unint64_t v58 = v56;
      uint64_t v59 = v57;
      if (!v57 && v56 >= 4)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v60 = v58 & 0xFFFFFFFFFFFFFFFCLL;
        goto LABEL_78;
      }
      if (v56 < 4)
      {
        unint64_t v60 = 0;
LABEL_176:
        uint64_t v59 = 0;
        goto LABEL_177;
      }
      unint64_t v60 = v56 & 0xFFFFFFFFFFFFFFFCLL;
      if (!v57)
      {
LABEL_78:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
LABEL_85:
          abort();
        }
        goto LABEL_176;
      }
LABEL_177:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946408;
      sub_215D15D5C(v88, 12, &v97, v60, v59);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E078((uint64_t)v83, (uint64_t)v88);
      uint64_t v74 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
LABEL_195:
      uint64_t v76 = (char *)operator new(0x28uLL);
      *((void *)v76 + 2) = 0;
      *(_OWORD *)(v76 + 24) = *(_OWORD *)v83;
      *(void *)uint64_t v76 = &unk_26C672278;
      *((void *)v76 + 1) = 0;
      v83[0] = 0;
      v83[1] = 0;
      uint64_t v77 = (std::__shared_weak_count *)*((void *)&v82 + 1);
      *(void *)&long long v82 = v76 + 24;
      *((void *)&v82 + 1) = v76;
      if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
      v78 = (std::__shared_weak_count *)v83[1];
      if (v83[1] && !atomic_fetch_add((atomic_ullong *volatile)v83[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
      int v79 = (std::__shared_weak_count *)__dst[1];
      if (__dst[1] && !atomic_fetch_add((atomic_ullong *volatile)__dst[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
      *(_OWORD *)a2 = v82;
      long long v82 = 0uLL;
      *(unsigned char *)(a2 + 120) = 1;
      if (v81 && !atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
      BOOL v80 = v93;
      if (v93)
      {
        if (!atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      return;
    default:
      sub_215E097D8(v15);
  }
}

void sub_2159447F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215944998(uint64_t a1, unsigned int *a2)
{
  int v5 = 0;
  sub_2158353B0(v4, "cannot return data as VZLines");
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  _DWORD v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C672360[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C672378[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C672348[v5])(v7, v4);
  }
  return result;
}

void sub_215944A9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215944AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215944AA8);
}

void sub_215944ADC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AB78, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      uint64_t v92 = 0;
      BOOL v93 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(unsigned __int8 ***)(a1 + 424);
  int v7 = *(atomic_ullong **)(a1 + 432);
  if (!v7)
  {
    uint64_t v92 = *(unsigned __int8 ***)(a1 + 424);
    BOOL v93 = 0;
    if (v8)
    {
      unint64_t v81 = 0;
      long long v82 = 0uLL;
      __dst[0] = v8;
      __dst[1] = 0;
      goto LABEL_23;
    }
LABEL_14:
    unint64_t v10 = sub_215AB5250(0xDu);
    uint64_t v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      BOOL v95 = (long long *)*((void *)v10 + 2);
      *(_OWORD *)__dst = v12;
    }
    int v96 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v91, (uint64_t)__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v88, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)unint64_t v88 = *(_OWORD *)a1;
      uint64_t v89 = *(void *)(a1 + 16);
    }
    int v90 = *(_DWORD *)(a1 + 24);
    LODWORD(v82) = 3;
    sub_215944998((uint64_t)v83, (unsigned int *)&v82);
    *(_OWORD *)__p = *(_OWORD *)v83;
    uint64_t v86 = v84;
    v83[1] = 0;
    uint64_t v84 = 0;
    v83[0] = 0;
    char v87 = 1;
    sub_215964570((long long **)&v91, (uint64_t)v88, (uint64_t)__p);
  }
  __int16 v9 = v7 + 1;
  atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
  uint64_t v92 = v8;
  BOOL v93 = (std::__shared_weak_count *)v7;
  if (!v8) {
    goto LABEL_14;
  }
  unint64_t v81 = (std::__shared_weak_count *)v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
  long long v82 = 0uLL;
  __dst[0] = v8;
  __dst[1] = v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
LABEL_23:
  uint64_t v13 = v8 + 1;
  uint64_t v14 = v8[1];
  BOOL v95 = &v82;
  int v15 = *v14;
  switch(v15)
  {
    case 0:
      unint64_t v16 = sub_215D15FDC(v13);
      unint64_t v18 = v16;
      uint64_t v19 = v17;
      if (!v17 && v16 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v20 = 6 * (v18 / 6);
        goto LABEL_28;
      }
      if (v16 < 6)
      {
        uint64_t v20 = 0;
LABEL_110:
        uint64_t v19 = 0;
        goto LABEL_111;
      }
      uint64_t v20 = 6 * (v16 / 6);
      if (!v17)
      {
LABEL_28:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_110;
      }
LABEL_111:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D154A0(v88, 0, &v97, v20, v19);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      uint64_t v68 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      goto LABEL_195;
    case 1:
      unint64_t v31 = sub_215D160E4(v13);
      unint64_t v33 = v31;
      uint64_t v34 = v32;
      if (!v32 && v31 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v35 = 6 * (v33 / 6);
        goto LABEL_47;
      }
      if (v31 < 6)
      {
        uint64_t v35 = 0;
LABEL_121:
        uint64_t v34 = 0;
        goto LABEL_122;
      }
      uint64_t v35 = 6 * (v31 / 6);
      if (!v32)
      {
LABEL_47:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_121;
      }
LABEL_122:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D156FC(v88, 1, &v97, v35, v34);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      unint64_t v69 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_195;
    case 2:
      unint64_t v21 = sub_215D161EC(v13);
      unint64_t v23 = v21;
      uint64_t v24 = v22;
      if (!v22 && v21 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v25 = 6 * (v23 / 6);
        goto LABEL_35;
      }
      if (v21 < 6)
      {
        uint64_t v25 = 0;
LABEL_88:
        uint64_t v24 = 0;
        goto LABEL_89;
      }
      uint64_t v25 = 6 * (v21 / 6);
      if (!v22)
      {
LABEL_35:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_88;
      }
LABEL_89:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D1591C(v88, 2, &v97, v25, v24);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      int v66 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
      goto LABEL_195;
    case 3:
      unint64_t v46 = sub_215D162F4(v13);
      unint64_t v48 = v46;
      uint64_t v49 = v47;
      if (!v47 && v46 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v50 = 6 * (v48 / 6);
        goto LABEL_66;
      }
      if (v46 < 6)
      {
        uint64_t v50 = 0;
LABEL_154:
        uint64_t v49 = 0;
        goto LABEL_155;
      }
      uint64_t v50 = 6 * (v46 / 6);
      if (!v47)
      {
LABEL_66:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_154;
      }
LABEL_155:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D15B3C(v88, 3, &v97, v50, v49);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      int v72 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      goto LABEL_195;
    case 5:
      unint64_t v51 = sub_215D15F58(v13);
      unint64_t v53 = v51;
      uint64_t v54 = v52;
      if (!v52 && v51 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v55 = 6 * (v53 / 6);
        goto LABEL_72;
      }
      if (v51 < 6)
      {
        uint64_t v55 = 0;
LABEL_165:
        uint64_t v54 = 0;
        goto LABEL_166;
      }
      uint64_t v55 = 6 * (v51 / 6);
      if (!v52)
      {
LABEL_72:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_165;
      }
LABEL_166:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D15354(v88, 5, &v97, v55, v54);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      BOOL v73 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
        std::__shared_weak_count::__release_weak(v73);
      }
      goto LABEL_195;
    case 6:
      unint64_t v26 = sub_215D16060(v13);
      unint64_t v28 = v26;
      uint64_t v29 = v27;
      if (!v27 && v26 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v30 = 6 * (v28 / 6);
        goto LABEL_41;
      }
      if (v26 < 6)
      {
        uint64_t v30 = 0;
LABEL_99:
        uint64_t v29 = 0;
        goto LABEL_100;
      }
      uint64_t v30 = 6 * (v26 / 6);
      if (!v27)
      {
LABEL_41:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_99;
      }
LABEL_100:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D155EC(v88, 6, &v97, v30, v29);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      BOOL v67 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
      goto LABEL_195;
    case 7:
      unint64_t v36 = sub_215D16168(v13);
      unint64_t v38 = v36;
      uint64_t v39 = v37;
      if (!v37 && v36 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v40 = 6 * (v38 / 6);
        goto LABEL_53;
      }
      if (v36 < 6)
      {
        uint64_t v40 = 0;
LABEL_132:
        uint64_t v39 = 0;
        goto LABEL_133;
      }
      uint64_t v40 = 6 * (v36 / 6);
      if (!v37)
      {
LABEL_53:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_132;
      }
LABEL_133:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D1580C(v88, 7, &v97, v40, v39);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      v70 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
      goto LABEL_195;
    case 8:
      unint64_t v41 = sub_215D16270(v13);
      unint64_t v43 = v41;
      uint64_t v44 = v42;
      if (!v42 && v41 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v45 = 6 * (v43 / 6);
        goto LABEL_59;
      }
      if (v41 < 6)
      {
        uint64_t v45 = 0;
LABEL_143:
        uint64_t v44 = 0;
        goto LABEL_144;
      }
      uint64_t v45 = 6 * (v41 / 6);
      if (!v42)
      {
LABEL_59:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_143;
      }
LABEL_144:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D15A2C(v88, 8, &v97, v45, v44);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      uint64_t v71 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      goto LABEL_195;
    case 11:
      unint64_t v61 = sub_215D16378(v13);
      unint64_t v63 = v61;
      uint64_t v64 = v62;
      if (!v62 && v61 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v65 = 6 * (v63 / 6);
        goto LABEL_84;
      }
      if (v61 < 6)
      {
        uint64_t v65 = 0;
LABEL_187:
        uint64_t v64 = 0;
        goto LABEL_188;
      }
      uint64_t v65 = 6 * (v61 / 6);
      if (!v62)
      {
LABEL_84:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_187;
      }
LABEL_188:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D15C4C(v88, 11, &v97, v65, v64);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      BOOL v75 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
      goto LABEL_195;
    case 12:
      unint64_t v56 = sub_215D163FC(v13);
      unint64_t v58 = v56;
      uint64_t v59 = v57;
      if (!v57 && v56 >= 6)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v60 = 6 * (v58 / 6);
        goto LABEL_78;
      }
      if (v56 < 6)
      {
        uint64_t v60 = 0;
LABEL_176:
        uint64_t v59 = 0;
        goto LABEL_177;
      }
      uint64_t v60 = 6 * (v56 / 6);
      if (!v57)
      {
LABEL_78:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
LABEL_85:
          abort();
        }
        goto LABEL_176;
      }
LABEL_177:
      int v98 = v8;
      BOOL v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v97 = (void (*)(uint64_t))sub_215946738;
      sub_215D15D5C(v88, 12, &v97, v60, v59);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D0E150((uint64_t)v83, (uint64_t)v88);
      uint64_t v74 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
LABEL_195:
      uint64_t v76 = (char *)operator new(0x28uLL);
      *((void *)v76 + 2) = 0;
      *(_OWORD *)(v76 + 24) = *(_OWORD *)v83;
      *(void *)uint64_t v76 = &unk_26C6722C8;
      *((void *)v76 + 1) = 0;
      v83[0] = 0;
      v83[1] = 0;
      uint64_t v77 = (std::__shared_weak_count *)*((void *)&v82 + 1);
      *(void *)&long long v82 = v76 + 24;
      *((void *)&v82 + 1) = v76;
      if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
      v78 = (std::__shared_weak_count *)v83[1];
      if (v83[1] && !atomic_fetch_add((atomic_ullong *volatile)v83[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
      int v79 = (std::__shared_weak_count *)__dst[1];
      if (__dst[1] && !atomic_fetch_add((atomic_ullong *volatile)__dst[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
      *(_OWORD *)a2 = v82;
      long long v82 = 0uLL;
      *(unsigned char *)(a2 + 120) = 1;
      if (v81 && !atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
      BOOL v80 = v93;
      if (v93)
      {
        if (!atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      return;
    default:
      sub_215E097D8(v15);
  }
}

void sub_215946078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215946220(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672278;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215946240(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672278;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215946294(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215946314(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6722C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215946334(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6722C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215946388(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void *sub_215946408(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672308;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215946408;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215946408;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj2EEENS3_7PackageELj12EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj2EEENS3_7PackageELj12EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj2EEENS3_7PackageELj12EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj2EEENS3_7PackageELj12EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE408)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_2159465A0(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672318;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_2159465A0;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_2159465A0;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj2EEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj2EEEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE440)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_215946738(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672328;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215946738;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215946738;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj3EEENS3_7PackageELj13EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj3EEENS3_7PackageELj13EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj3EEENS3_7PackageELj13EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con5LinesILj3EEENS3_7PackageELj13EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE4A4)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_2159468D0(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672338;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_2159468D0;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_2159468D0;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj3EEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj3EEEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con5LinesILj3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE4DC)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

uint64_t **sub_215946A68(uint64_t a1)
{
  if (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire))
  {
    int v2 = 0;
    do
    {
      if (v2)
      {
        timespec __rqtp = (timespec)xmmword_215E98470;
        nanosleep(&__rqtp, 0);
      }
      --v2;
    }
    while (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire));
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(atomic_uint **)(a1 + 24);
  if (v3)
  {
    atomic_fetch_add_explicit(v3 + 2, 1u, memory_order_relaxed);
    atomic_store(0, (unsigned __int8 *)(a1 + 32));
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
    if (!v4)
    {
LABEL_13:
      int v10 = 0;
      sub_215947348();
    }
  }
  else
  {
    atomic_store(0, (unsigned __int8 *)(a1 + 32));
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire))
  {
    int v5 = 0;
    do
    {
      if (v5)
      {
        timespec __rqtp = (timespec)xmmword_215E98470;
        nanosleep(&__rqtp, 0);
      }
      --v5;
    }
    while (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire));
  }
  BOOL v6 = *(uint64_t ***)(a1 + 16);
  int v7 = *(atomic_uint **)(a1 + 24);
  if (v7) {
    atomic_fetch_add_explicit(v7 + 2, 1u, memory_order_relaxed);
  }
  atomic_store(0, (unsigned __int8 *)(a1 + 32));
  if (*((char *)v6 + 23) < 0)
  {
    BOOL v6 = (uint64_t **)*v6;
    if (!v7) {
      return v6;
    }
  }
  else if (!v7)
  {
    return v6;
  }
  if (atomic_fetch_add(v7 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v7 + 16))(v7);
    if (atomic_fetch_add(v7 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v7 + 24))(v7);
    }
  }
  return v6;
}

void sub_215946ED8()
{
}

void sub_215946EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215946F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215946F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215946F54()
{
}

void sub_2159472C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215947348()
{
}

void sub_215947590(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2159475B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2159475F8(uint64_t a1)
{
  *(void *)a1 = &unk_26C6723E8;
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_215947654(uint64_t a1)
{
  *(void *)a1 = &unk_26C6723E8;
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    *(unsigned char *)(a1 + 24) = 0;
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2159476D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    *(unsigned char *)(a1 + 24) = 0;
  }
}

uint64_t sub_21594770C(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_215947738(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterIKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterIKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterIKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterIKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

uint64_t sub_2159477A8()
{
  return 0;
}

uint64_t sub_2159477B0(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_2159477B8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 64))
  {
    *(unsigned char *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 40) = -1;
    uint64_t v4 = *(unsigned int *)(a2 + 56);
    if (v4 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C672458[v4])(v9, a1 + 8, a2 + 24);
      *(_DWORD *)(a1 + 40) = v4;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  uint64_t v5 = *(void *)(a2 + 72);
  int v6 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 104) = 0;
  if (*(unsigned char *)(a2 + 168))
  {
    *(unsigned char *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 96) = -1;
    uint64_t v7 = *(unsigned int *)(a2 + 160);
    if (v7 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C672478[v7])(v10, a1 + 72, a2 + 136);
      *(_DWORD *)(a1 + 96) = v7;
    }
    *(unsigned char *)(a1 + 104) = 1;
  }
  return a1;
}

void sub_2159478A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 96);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C672468[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 96) = -1;
  sub_21577AD78(v13);
  _Unwind_Resume(a1);
}

void sub_2159478EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t v15 = *(unsigned int *)(v12 + 40);
  if (v15 != -1) {
    ((void (*)(char *, uint64_t))off_26C672448[v15])(&a12, v13);
  }
  *(_DWORD *)(v12 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_215947928@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  v8[0] = 0;
  char v11 = 0;
  if (*(unsigned char *)(a1 + 48))
  {
    v9[0] = 0;
    int v10 = -1;
    uint64_t v4 = *(unsigned int *)(a1 + 40);
    if (v4 != -1)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))off_26C672458[v4])(v7, v9, a1 + 8);
      int v10 = v4;
    }
    char v11 = 1;
  }
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  char v14 = 0;
  char v15 = 0;
  v16[0] = 0;
  char v18 = 0;
  if (*(unsigned char *)(a1 + 104))
  {
    int v17 = -1;
    uint64_t v5 = *(unsigned int *)(a1 + 96);
    if (v5 != -1)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))off_26C672478[v5])(v7, v16, a1 + 72);
      int v17 = v5;
    }
    char v18 = 1;
  }
  char v19 = 0;
  char v20 = 0;
  char v21 = 0;
  char v22 = 0;
  char v23 = 0;
  char v24 = 0;
  char v25 = 0;
  char v26 = 0;
  char v27 = 0;
  char v28 = 0;
  char v29 = 0;
  char v30 = 0;
  char v31 = 0;
  char v32 = 0;
  char v33 = 0;
  char v34 = 0;
  char v35 = 0;
  char v36 = 0;
  *a2 = off_26C678AE8;
  sub_2158B0D70((uint64_t)(a2 + 2), (uint64_t)v8);
  return sub_215948050((uint64_t)v8);
}

void sub_215947AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v37 = *(unsigned int *)(v35 + 144);
  if (v37 != -1) {
    ((void (*)(char *, uint64_t))off_26C672468[v37])(&a13, v34);
  }
  *(_DWORD *)(v35 + 144) = -1;
  if ((_BYTE)a32 && a30 && a28 < 0) {
    operator delete(__p);
  }
  sub_21577AD78((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void sub_215947B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215947B7C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_215738B0C(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a2;
      uint64_t v5 = *(void *)(a2 + 16);
    }
    sub_215947C5C(a1, (long long *)__p);
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
  }
  else if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 40);
    if (v3 != -1) {
      ((void (*)(void **, uint64_t))off_26C672448[v3])(__p, a1 + 8);
    }
    *(_DWORD *)(a1 + 40) = -1;
    *(unsigned char *)(a1 + 48) = 0;
  }
}

void sub_215947C40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215947C5C(uint64_t a1, long long *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v3 = (unsigned char *)(a1 + 8);
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(v3, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v4 = *a2;
      *(void *)(a1 + 24) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v3 = v4;
    }
    *(_DWORD *)(a1 + 40) = 1;
    *(unsigned char *)(a1 + 48) = 1;
    return a1;
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(&v10, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v10 = *a2;
    uint64_t v11 = *((void *)a2 + 2);
  }
  unsigned int v12 = 1;
  uint64_t v5 = (void **)(a1 + 8);
  uint64_t v6 = *(unsigned int *)(a1 + 40);
  if (v6 == -1) {
    goto LABEL_14;
  }
  if (v6 != 1)
  {
    ((void (*)(char *, uint64_t))off_26C672448[v6])(&v9, a1 + 8);
LABEL_14:
    *(_OWORD *)uint64_t v5 = v10;
    *(void *)(a1 + 24) = v11;
    uint64_t v11 = 0;
    long long v10 = 0uLL;
    *(_DWORD *)(a1 + 40) = 1;
    uint64_t v7 = v12;
    if (v12 == -1) {
      return a1;
    }
LABEL_15:
    ((void (*)(char *, long long *))off_26C672448[v7])(&v9, &v10);
    return a1;
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*v5);
  }
  *(_OWORD *)uint64_t v5 = v10;
  *(void *)(a1 + 24) = v11;
  HIBYTE(v11) = 0;
  LOBYTE(v10) = 0;
  uint64_t v7 = v12;
  if (v12 != -1) {
    goto LABEL_15;
  }
  return a1;
}

void sub_215947DE4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

void sub_215947DFC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_215738B0C(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a2;
      uint64_t v5 = *(void *)(a2 + 16);
    }
    sub_215947EDC((void **)(a1 + 72), (long long *)__p);
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
  }
  else if (*(unsigned char *)(a1 + 104))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 96);
    if (v3 != -1) {
      ((void (*)(void **, uint64_t))off_26C672468[v3])(__p, a1 + 72);
    }
    *(_DWORD *)(a1 + 96) = -1;
    *(unsigned char *)(a1 + 104) = 0;
  }
}

void sub_215947EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void **sub_215947EDC(void **__dst, long long *a2)
{
  if (*((unsigned char *)__dst + 32))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(&v7, *(void **)a2, *((void *)a2 + 1));
      unsigned int v9 = 1;
      uint64_t v3 = *((unsigned int *)__dst + 6);
      if (v3 == -1) {
        goto LABEL_14;
      }
    }
    else
    {
      long long v7 = *a2;
      uint64_t v8 = (void *)*((void *)a2 + 2);
      unsigned int v9 = 1;
      uint64_t v3 = *((unsigned int *)__dst + 6);
      if (v3 == -1) {
        goto LABEL_14;
      }
    }
    if (v3 == 1)
    {
      if (*((char *)__dst + 23) < 0) {
        operator delete(*__dst);
      }
      *(_OWORD *)__dst = v7;
      __dst[2] = v8;
      HIBYTE(v8) = 0;
      LOBYTE(v7) = 0;
      uint64_t v5 = v9;
      if (v9 == -1) {
        return __dst;
      }
      goto LABEL_15;
    }
    ((void (*)(char *, void **))off_26C672468[v3])(&v10, __dst);
LABEL_14:
    *(_OWORD *)__dst = v7;
    __dst[2] = v8;
    uint64_t v8 = 0;
    long long v7 = 0uLL;
    *((_DWORD *)__dst + 6) = 1;
    uint64_t v5 = v9;
    if (v9 == -1) {
      return __dst;
    }
LABEL_15:
    ((void (*)(char *, long long *))off_26C672468[v5])(&v10, &v7);
    return __dst;
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = (void *)*((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  *((_DWORD *)__dst + 6) = 1;
  *((unsigned char *)__dst + 32) = 1;
  return __dst;
}

uint64_t sub_215948050(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 680))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 672);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C672448[v2])(&v14, a1 + 640);
    }
    *(_DWORD *)(a1 + 672) = -1;
  }
  if (*(unsigned char *)(a1 + 624))
  {
    if (*(unsigned char *)(a1 + 616))
    {
      uint64_t v3 = *(void *)(a1 + 592);
      if (v3)
      {
        uint64_t v4 = *(void *)(a1 + 600);
        uint64_t v5 = *(void **)(a1 + 592);
        if (v4 == v3)
        {
LABEL_19:
          *(void *)(a1 + 600) = v3;
          operator delete(v5);
          goto LABEL_20;
        }
        while (1)
        {
          if (*(unsigned char *)(v4 - 16) && *(char *)(v4 - 41) < 0)
          {
            operator delete(*(void **)(v4 - 64));
            if (*(unsigned char *)(v4 - 72))
            {
LABEL_14:
              if (*(char *)(v4 - 73) < 0) {
                operator delete(*(void **)(v4 - 96));
              }
            }
          }
          else if (*(unsigned char *)(v4 - 72))
          {
            goto LABEL_14;
          }
          v4 -= 96;
          if (v4 == v3)
          {
            uint64_t v5 = *(void **)(a1 + 592);
            goto LABEL_19;
          }
        }
      }
    }
  }
LABEL_20:
  if (*(unsigned char *)(a1 + 576))
  {
    uint64_t v6 = *(unsigned int *)(a1 + 560);
    if (v6 != -1) {
      ((void (*)(char *, uint64_t))off_26C6724A8[v6])(&v15, a1 + 448);
    }
    *(_DWORD *)(a1 + 560) = -1;
  }
  if (*(unsigned char *)(a1 + 416))
  {
    uint64_t v7 = *(unsigned int *)(a1 + 400);
    if (v7 != -1) {
      ((void (*)(char *, uint64_t))off_26C672498[v7])(&v16, a1 + 336);
    }
    *(_DWORD *)(a1 + 400) = -1;
  }
  if (*(unsigned char *)(a1 + 312))
  {
    uint64_t v8 = *(unsigned int *)(a1 + 304);
    if (v8 != -1) {
      ((void (*)(char *, uint64_t))off_26C672448[v8])(&v17, a1 + 272);
    }
    *(_DWORD *)(a1 + 304) = -1;
  }
  if (*(unsigned char *)(a1 + 256)
    && (unsigned int v9 = *(std::__shared_weak_count **)(a1 + 248)) != 0
    && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (!*(unsigned char *)(a1 + 224)) {
      goto LABEL_39;
    }
  }
  else if (!*(unsigned char *)(a1 + 224))
  {
    goto LABEL_39;
  }
  uint64_t v10 = *(unsigned int *)(a1 + 216);
  if (v10 != -1) {
    ((void (*)(char *, uint64_t))off_26C672488[v10])(&v18, a1 + 160);
  }
  *(_DWORD *)(a1 + 216) = -1;
LABEL_39:
  if (*(unsigned char *)(a1 + 152))
  {
    uint64_t v11 = *(unsigned int *)(a1 + 144);
    if (v11 != -1) {
      ((void (*)(char *, uint64_t))off_26C672468[v11])(&v19, a1 + 120);
    }
    *(_DWORD *)(a1 + 144) = -1;
  }
  if (*(unsigned char *)(a1 + 112) && *(unsigned char *)(a1 + 104) && *(char *)(a1 + 95) < 0)
  {
    operator delete(*(void **)(a1 + 72));
    if (!*(unsigned char *)(a1 + 48)) {
      return a1;
    }
  }
  else if (!*(unsigned char *)(a1 + 48))
  {
    return a1;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 40);
  if (v12 != -1) {
    ((void (*)(char *, uint64_t))off_26C672448[v12])(&v20, a1 + 8);
  }
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_215948318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v37[2] = *MEMORY[0x263EF8340];
  LOBYTE(v30) = 0;
  char v32 = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    sub_215793FD0(&v30, (uint64_t *)a2);
    char v32 = 1;
    uint64_t v6 = v30;
    uint64_t v5 = v31;
    memset(__p, 0, sizeof(__p));
    uint64_t v7 = (char *)v31 - (char *)v30;
    if (v31 == v30)
    {
      unsigned int v9 = 0;
      uint64_t v8 = 0;
    }
    else
    {
      if (v7 < 0) {
        sub_215738AC0();
      }
      uint64_t v8 = (char *)operator new((unint64_t)v7 >> 1);
      unsigned int v9 = &v8[16 * (v7 >> 5)];
      __p[0] = v8;
      __p[1] = v8;
      __p[2] = v9;
      if (v5 != v6)
      {
        uint64_t v28 = a3;
        while (1)
        {
          long long v10 = *v6;
          uint64_t v11 = (std::__shared_weak_count *)*((void *)v6 + 1);
          if (v11) {
            atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v12 = (std::__shared_weak_count *)*((void *)v6 + 3);
          if (v12) {
            atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          if (v11) {
            atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v13 = (std::__shared_weak_count *)__p[1];
          if (__p[1] >= __p[2])
          {
            shared_weak_owners = (std::__shared_weak_count *)__p[0];
            int64_t v15 = ((char *)__p[1] - (char *)__p[0]) >> 4;
            unint64_t v16 = v15 + 1;
            if ((unint64_t)(v15 + 1) >> 60) {
              sub_215738AC0();
            }
            long long v29 = v10;
            int64_t v17 = (char *)__p[2] - (char *)__p[0];
            if (((char *)__p[2] - (char *)__p[0]) >> 3 > v16) {
              unint64_t v16 = v17 >> 3;
            }
            if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v18 = v16;
            }
            if (v18 >> 60) {
              sub_215738AD8();
            }
            char v19 = (char *)operator new(16 * v18);
            char v20 = &v19[16 * v15];
            char v21 = &v19[16 * v18];
            *(_OWORD *)char v20 = v29;
            p_shared_weak_owners = (uint64_t *)(v20 + 16);
            if (v13 == shared_weak_owners)
            {
              __p[0] = v20;
              __p[1] = v20 + 16;
              __p[2] = &v19[16 * v18];
            }
            else
            {
              do
              {
                long long v22 = *(_OWORD *)&v13[-1].__shared_owners_;
                uint64_t v13 = (std::__shared_weak_count *)((char *)v13 - 16);
                *((_OWORD *)v20 - 1) = v22;
                v20 -= 16;
                v13->__vftable = 0;
                v13->__shared_owners_ = 0;
              }
              while (v13 != shared_weak_owners);
              uint64_t v13 = (std::__shared_weak_count *)__p[0];
              char v23 = (std::__shared_weak_count *)__p[1];
              __p[0] = v20;
              __p[1] = p_shared_weak_owners;
              __p[2] = v21;
              while (v23 != v13)
              {
                shared_weak_owners = (std::__shared_weak_count *)v23[-1].__shared_weak_owners_;
                if (shared_weak_owners
                  && !atomic_fetch_add(&shared_weak_owners->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))shared_weak_owners->__on_zero_shared)(shared_weak_owners);
                  std::__shared_weak_count::__release_weak(shared_weak_owners);
                }
                char v23 = (std::__shared_weak_count *)((char *)v23 - 16);
              }
            }
            if (v13) {
              operator delete(v13);
            }
          }
          else
          {
            *(void *)__p[1] = v10;
            v13->__shared_owners_ = (uint64_t)v11;
            p_shared_weak_owners = &v13->__shared_weak_owners_;
          }
          __p[1] = p_shared_weak_owners;
          if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
            if (v11)
            {
LABEL_36:
              if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
                std::__shared_weak_count::__release_weak(v11);
              }
            }
          }
          else if (v11)
          {
            goto LABEL_36;
          }
          v6 += 2;
          if (v6 == v5)
          {
            int64x2_t v24 = *(int64x2_t *)__p;
            unsigned int v9 = (char *)__p[2];
            a3 = v28;
            goto LABEL_44;
          }
        }
      }
    }
    int64x2_t v24 = vdupq_n_s64((unint64_t)v8);
LABEL_44:
    *(int64x2_t *)char v33 = v24;
    uint64_t v34 = v9;
  }
  else
  {
    v33[0] = 0;
    v33[1] = 0;
    uint64_t v34 = 0;
  }
  char v25 = operator new(0x38uLL);
  v25[1] = 0;
  v25[2] = 0;
  void *v25 = &unk_26C672508;
  int v26 = *(unsigned __int8 *)(a3 + 24);
  if (*(unsigned char *)(a3 + 24))
  {
    char v27 = *(void **)a3;
    v37[0] = *(void *)(a3 + 8);
    *(void *)((char *)v37 + 7) = *(void *)(a3 + 15);
    LOBYTE(shared_weak_owners) = *(unsigned char *)(a3 + 23);
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 0;
  }
  else
  {
    char v27 = 0;
  }
  v25[3] = &unk_26C67B2D8;
  v25[4] = &unk_26C67B388;
  LOBYTE(__p[0]) = 0;
  char v36 = 0;
  if (v26)
  {
    __p[0] = v27;
    __p[1] = (void *)v37[0];
    *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v37 + 7);
    HIBYTE(__p[2]) = (_BYTE)shared_weak_owners;
    v37[0] = 0;
    *(void *)((char *)v37 + 7) = 0;
    char v36 = 1;
  }
  sub_215B2B85C((uint64_t)__p, v25 + 5);
}

void sub_2159487E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (a16)
  {
    __p = &a13;
    sub_21576B254((void ***)&__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215948A3C(char *__s@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  if (__s && *__s)
  {
    LOBYTE(v17) = 0;
    char v19 = 0;
    if (*((unsigned char *)a2 + 24))
    {
      long long v17 = *a2;
      uint64_t v18 = *((void *)a2 + 2);
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
      char v19 = 1;
    }
    size_t v5 = strlen(__s);
    if (v5 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v6 = v5;
    if (v5 >= 0x17)
    {
      uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v10 = v5 | 7;
      }
      uint64_t v11 = v10 + 1;
      p_dst = (long long *)operator new(v10 + 1);
      *((void *)&__dst + 1) = v6;
      unint64_t v13 = v11 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v13) = v5;
      p_dst = &__dst;
      if (!v5)
      {
LABEL_30:
        *((unsigned char *)p_dst + v6) = 0;
        *(_OWORD *)char v14 = __dst;
        unint64_t v15 = v13;
        char v16 = 1;
        sub_215948318((uint64_t)&v29, (uint64_t)&v17, (uint64_t)v14);
      }
    }
    memcpy(p_dst, __s, v6);
    goto LABEL_30;
  }
  sub_2157CFEA8((uint64_t)__p, "namespace must not be empty");
  char v28 = 1;
  sub_21573FCF8(0xAu, (long long *)__p, (uint64_t)&v29);
  *(_OWORD *)a3 = v29;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v39)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v28) {
      return;
    }
LABEL_20:
    if (!v27) {
      goto LABEL_23;
    }
    if (v26 < 0)
    {
      operator delete(v25);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v22) {
          return;
        }
LABEL_24:
        if (v21 < 0) {
          operator delete(__p[0]);
        }
        return;
      }
    }
    else if ((v24 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v23);
    if (!v22) {
      return;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v8 = v32;
  if (v32)
  {
    *(_OWORD *)(a3 + 16) = v30;
    *(void *)(a3 + 32) = v31;
    uint64_t v31 = 0;
    long long v30 = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v38)
  {
    uint64_t v9 = v35;
    *(void *)(a3 + 64) = v34;
    *(_OWORD *)(a3 + 48) = v33;
    long long v33 = 0uLL;
    *(void *)(a3 + 72) = v9;
    *(_OWORD *)(a3 + 80) = v36;
    *(void *)(a3 + 96) = v37;
    uint64_t v34 = 0;
    long long v36 = 0uLL;
    uint64_t v37 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v8 && SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  if (v28) {
    goto LABEL_20;
  }
}

void sub_215948D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28)
{
  if (a19 && a18 < 0) {
    operator delete(__p);
  }
  if (a26)
  {
    a10 = &a21;
    sub_21576B254((void ***)&a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215948D60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (a3)
  {
    sub_21577A1A0((uint64_t)&v16, a2);
    long long v11 = *(_OWORD *)(a2 + 48);
    long long v17 = *(_OWORD *)(a2 + 32);
    long long v18 = v11;
    char v19 = 1;
    LOBYTE(v23[0]) = 0;
    char v25 = 0;
    if (!*(unsigned char *)(a4 + 32)) {
      goto LABEL_14;
    }
    uint64_t v12 = *(void *)(a4 + 24);
    if (v12)
    {
      if (v12 == a4)
      {
        char v24 = v23;
        (*(void (**)(uint64_t, void *))(*(void *)a4 + 24))(a4, v23);
        goto LABEL_13;
      }
      uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 16))(v12);
    }
    char v24 = (void *)v12;
LABEL_13:
    char v25 = 1;
LABEL_14:
    sub_2158AB5C0(a1, (uint64_t)&v16, (uint64_t)v23, a5, a6);
  }
  LOBYTE(__p) = 0;
  char v15 = 0;
  LOBYTE(v20[0]) = 0;
  char v22 = 0;
  if (!*(unsigned char *)(a4 + 32)) {
LABEL_17:
  }
    sub_2158AB5C0(a1, (uint64_t)&__p, (uint64_t)v20, a5, a6);
  uint64_t v13 = *(void *)(a4 + 24);
  if (v13)
  {
    if (v13 == a4)
    {
      char v21 = v20;
      (*(void (**)(uint64_t, void *))(*(void *)a4 + 24))(a4, v20);
      goto LABEL_16;
    }
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 16))(v13);
  }
  char v21 = (void *)v13;
LABEL_16:
  char v22 = 1;
  goto LABEL_17;
}

void sub_2159494FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char *a29)
{
  if (*(unsigned char *)(v29 - 136))
  {
    uint64_t v31 = *(void *)(v29 - 144);
    if (v31 == v29 - 168)
    {
      (*(void (**)(uint64_t))(*(void *)(v29 - 168) + 32))(v29 - 168);
      sub_215775F70(&a29);
      _Unwind_Resume(a1);
    }
    if (v31)
    {
      (*(void (**)(uint64_t))(*(void *)v31 + 40))(v31);
      sub_215775F70(&a29);
      _Unwind_Resume(a1);
    }
  }
  sub_215775F70(&a29);
  _Unwind_Resume(a1);
}

void sub_215949644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, int a16, __int16 a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a28)
  {
    a67 = (uint64_t)&a25;
    sub_21576B254((void ***)&a67);
  }
  a67 = (uint64_t)&a22;
  sub_21576B254((void ***)&a67);
  a67 = (uint64_t)&a19;
  sub_21576B254((void ***)&a67);
  sub_21574FA18((uint64_t)&a69);
  sub_215733368((uint64_t)&a17);
  sub_215755968((uint64_t)&a51);
  _Unwind_Resume(a1);
}

void sub_2159496D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

void sub_2159496F4()
{
  sub_215754968(v0 - 128);
  JUMPOUT(0x215949700);
}

void sub_215949714(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215949720);
  }
  sub_215731D80(a1);
}

void sub_215949730(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2[1];
  uint64_t v31 = *a2;
  unsigned __int8 v32 = (std::__shared_weak_count *)v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  BOOL v6 = sub_215B2C0DC(v4, &v31);
  BOOL v7 = v6;
  int v8 = v32;
  if (v32 && !atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (v7) {
      goto LABEL_6;
    }
  }
  else if (v6)
  {
LABEL_6:
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  sub_2157CFEA8((uint64_t)v11, "destination to add is already contained in the logger");
  char v19 = 1;
  sub_21573FCF8(0xDu, (long long *)v11, (uint64_t)&v20);
  *(_OWORD *)a3 = v20;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v30)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v19) {
      return;
    }
LABEL_20:
    if (!v18) {
      goto LABEL_23;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v13) {
          return;
        }
        goto LABEL_24;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v14);
    if (!v13) {
      return;
    }
LABEL_24:
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    return;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v9 = v23;
  if (v23)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v22;
    uint64_t v22 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v29)
  {
    uint64_t v10 = v26;
    *(void *)(a3 + 64) = v25;
    *(_OWORD *)(a3 + 48) = v24;
    long long v24 = 0uLL;
    *(void *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v27;
    *(void *)(a3 + 96) = v28;
    uint64_t v25 = 0;
    long long v27 = 0uLL;
    uint64_t v28 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v22) < 0) {
    operator delete((void *)__p);
  }
  if (v19) {
    goto LABEL_20;
  }
}

void sub_21594994C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215949960(_Unwind_Exception *a1)
{
  sub_215733368(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_215949974(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_215B2C2B8(*a1, *a2))
  {
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  sub_2157CFEA8((uint64_t)v6, "destination to remove was not found in the logger");
  char v14 = 1;
  sub_21573FCF8(0xDu, (long long *)v6, (uint64_t)&v15);
  *(_OWORD *)a3 = v15;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v25)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v14) {
      return;
    }
LABEL_15:
    if (!v13) {
      goto LABEL_18;
    }
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_18:
        if (!v8) {
          return;
        }
        goto LABEL_19;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_18;
    }
    operator delete(v9);
    if (!v8) {
      return;
    }
LABEL_19:
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    return;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v4 = v18;
  if (v18)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v17;
    uint64_t v17 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v24)
  {
    uint64_t v5 = v21;
    *(void *)(a3 + 64) = v20;
    *(_OWORD *)(a3 + 48) = v19;
    long long v19 = 0uLL;
    *(void *)(a3 + 72) = v5;
    *(_OWORD *)(a3 + 80) = v22;
    *(void *)(a3 + 96) = v23;
    uint64_t v20 = 0;
    long long v22 = 0uLL;
    uint64_t v23 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v4 && SHIBYTE(v17) < 0) {
    operator delete((void *)__p);
  }
  if (v14) {
    goto LABEL_15;
  }
}

void sub_215949B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215949B3C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_215B2C6E8(*a1, &__p);
  long long v29 = 0uLL;
  uint64_t v28 = 0;
  sub_215832348((uint64_t)&v28, ((char *)v25 - (unsigned char *)__p) >> 4);
  uint64_t v3 = (uint64_t *)__p;
  int v4 = v25;
  if (__p != v25)
  {
    do
    {
      uint64_t v5 = *v3;
      BOOL v6 = (std::__shared_weak_count *)v3[1];
      if (v6)
      {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v32[0] = v5;
      v32[1] = (uint64_t)v6;
      sub_215831860(&v30, v32);
      if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
        char v7 = (_OWORD *)v29;
        if ((unint64_t)v29 < *((void *)&v29 + 1))
        {
LABEL_9:
          _OWORD *v7 = v30;
          long long v30 = 0uLL;
          v7[1] = v31;
          long long v31 = 0uLL;
          *(void *)&long long v29 = v7 + 2;
          char v8 = (std::__shared_weak_count *)*((void *)&v30 + 1);
          if (*((void *)&v30 + 1)) {
            goto LABEL_15;
          }
          goto LABEL_17;
        }
      }
      else
      {
        char v7 = (_OWORD *)v29;
        if ((unint64_t)v29 < *((void *)&v29 + 1)) {
          goto LABEL_9;
        }
      }
      int v9 = sub_2158324C8((void **)&v28, &v30);
      char v10 = (std::__shared_weak_count *)*((void *)&v31 + 1);
      *(void *)&long long v29 = v9;
      if (*((void *)&v31 + 1)
        && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v31 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
        char v8 = (std::__shared_weak_count *)*((void *)&v30 + 1);
        if (*((void *)&v30 + 1))
        {
LABEL_15:
          if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
      }
      else
      {
        char v8 = (std::__shared_weak_count *)*((void *)&v30 + 1);
        if (*((void *)&v30 + 1)) {
          goto LABEL_15;
        }
      }
LABEL_17:
      if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v3 += 2;
    }
    while (v3 != v4);
  }
  long long v11 = v28;
  uint64_t v26 = v28;
  uint64_t v23 = (char *)v29;
  long long v27 = v29;
  long long v29 = 0uLL;
  uint64_t v28 = 0;
  *(void *)&long long v30 = &v28;
  sub_21576B254((void ***)&v30);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *(void *)&long long v30 = a2;
  BYTE8(v30) = 0;
  uint64_t v12 = v23 - v11;
  if (v23 != v11)
  {
    if (v12 < 0) {
      sub_215738AC0();
    }
    char v13 = (char *)operator new(v23 - v11);
    uint64_t v14 = 0;
    *a2 = v13;
    a2[1] = v13;
    a2[2] = &v13[32 * (v12 >> 5)];
    do
    {
      long long v15 = &v11[v14];
      uint64_t v16 = &v13[v14];
      *(void *)uint64_t v16 = *(void *)&v11[v14];
      uint64_t v17 = *(void *)&v11[v14 + 8];
      *((void *)v16 + 1) = v17;
      if (v17) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
      }
      *((void *)v16 + 2) = *((void *)v15 + 2);
      uint64_t v18 = *((void *)v15 + 3);
      *((void *)v16 + 3) = v18;
      if (v18) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
      }
      v14 += 32;
    }
    while (v15 + 32 != v23);
    a2[1] = &v13[v14];
  }
  *(void *)&long long v30 = &v26;
  sub_21576B254((void ***)&v30);
  long long v19 = (uint64_t *)__p;
  if (__p)
  {
    uint64_t v20 = v25;
    uint64_t v21 = __p;
    if (v25 != __p)
    {
      do
      {
        long long v22 = (std::__shared_weak_count *)*(v20 - 1);
        if (v22)
        {
          if (!atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        v20 -= 2;
      }
      while (v20 != v19);
      uint64_t v21 = __p;
    }
    char v25 = v19;
    operator delete(v21);
  }
}

void sub_215949ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v5 = va_arg(va1, void *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_21576B254((void ***)va1);
  sub_2157361F0((void **)va);
  _Unwind_Resume(a1);
}

void sub_215949EF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_21576B254((void ***)va);
  sub_215731D80(a1);
}

void sub_215949F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,void **a21,std::__shared_weak_count *a22,uint64_t a23,std::__shared_weak_count *a24)
{
  uint64_t v26 = a24;
  if (a24 && !atomic_fetch_add(&a24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  long long v27 = a22;
  if (a22 && !atomic_fetch_add(&a22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  if (v24)
  {
    if (!atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  a21 = (void **)&a18;
  sub_21576B254(&a21);
  sub_2157361F0(&a12);
  _Unwind_Resume(a1);
}

void sub_21594A01C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  int v4 = (std::__shared_weak_count *)a1[1];
  uint64_t v6 = *a1;
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v6 = *a1;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v4;
  uint64_t v7 = (const void *)(*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 48))(v6 + 8);
  *a2 = &unk_26C6724C8;
  a2[1] = v7;
  a2[2] = *((void *)__dynamic_cast(v7, (const struct __class_type_info *)&unk_26C678C88, (const struct __class_type_info *)&unk_26C678FD8, 0)+ 5);
  a2[3] = v8;
  a2[4] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_21594A1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_21594A1EC(uint64_t *a1, const char *a2)
{
  uint64_t v2 = *a1;
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = (const char *)&unk_215E8C33A;
  }
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  uint64_t v6 = v2 + 8;
  if (v4 >= 0x17)
  {
    uint64_t v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v8 = v4 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    size_t v16 = v5;
    int64_t v17 = v9 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v17) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_11:
  }
    memcpy(p_dst, v3, v5);
  *((unsigned char *)p_dst + v5) = 0;
  if (v17 >= 0) {
    uint64_t v10 = (void **)&__dst;
  }
  else {
    uint64_t v10 = __dst;
  }
  if (v17 >= 0) {
    size_t v11 = HIBYTE(v17);
  }
  else {
    size_t v11 = v16;
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t, void **, size_t))(*(void *)v6 + 48))(v6, v10, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 32))(v12);
  if (SHIBYTE(v17) < 0) {
    operator delete(__dst);
  }
  return v13;
}

void sub_21594A334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21594A350(uint64_t *a1, const char *a2)
{
  uint64_t v2 = *a1;
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = (const char *)&unk_215E8C33A;
  }
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  uint64_t v6 = v2 + 8;
  if (v4 >= 0x17)
  {
    uint64_t v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v8 = v4 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    size_t v14 = v5;
    int64_t v15 = v9 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v15) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_11:
  }
    memcpy(p_dst, v3, v5);
  *((unsigned char *)p_dst + v5) = 0;
  if (v15 >= 0) {
    uint64_t v10 = (void **)&__dst;
  }
  else {
    uint64_t v10 = __dst;
  }
  if (v15 >= 0) {
    size_t v11 = HIBYTE(v15);
  }
  else {
    size_t v11 = v14;
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t, void **, size_t))(*(void *)v6 + 48))(v6, v10, v11);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 40))(v12, 1);
  if (SHIBYTE(v15) < 0) {
    operator delete(__dst);
  }
}

void sub_21594A4AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21594A4C8(uint64_t *a1, const char *a2)
{
  uint64_t v2 = *a1;
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = (const char *)&unk_215E8C33A;
  }
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  uint64_t v6 = v2 + 8;
  if (v4 >= 0x17)
  {
    uint64_t v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v8 = v4 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    size_t v14 = v5;
    int64_t v15 = v9 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v15) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_11:
  }
    memcpy(p_dst, v3, v5);
  *((unsigned char *)p_dst + v5) = 0;
  if (v15 >= 0) {
    uint64_t v10 = (void **)&__dst;
  }
  else {
    uint64_t v10 = __dst;
  }
  if (v15 >= 0) {
    size_t v11 = HIBYTE(v15);
  }
  else {
    size_t v11 = v14;
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t, void **, size_t))(*(void *)v6 + 48))(v6, v10, v11);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 40))(v12, 2);
  if (SHIBYTE(v15) < 0) {
    operator delete(__dst);
  }
}

void sub_21594A624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21594A640(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3) {
    uint64_t v7 = a3;
  }
  else {
    uint64_t v7 = (const char *)&unk_215E8C33A;
  }
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v9 = v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    p_dst = (void **)operator new(v11 + 1);
    size_t v35 = v9;
    int64_t v36 = v12 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v36) = v8;
  p_dst = (void **)&__dst;
  if (v8) {
LABEL_11:
  }
    memcpy(p_dst, v7, v9);
  *((unsigned char *)p_dst + v9) = 0;
  if (v36 >= 0) {
    size_t v13 = HIBYTE(v36);
  }
  else {
    size_t v13 = v35;
  }
  if (!a2 && !v13)
  {
    sub_21583927C((uint64_t)&v23);
    *(_OWORD *)a4 = v23;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (!v33)
    {
      *(unsigned char *)(a4 + 120) = 0;
      if ((SHIBYTE(v36) & 0x80000000) == 0) {
        return;
      }
      goto LABEL_45;
    }
    *(unsigned char *)(a4 + 40) = 0;
    int v14 = v26;
    if (v26)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v25;
      uint64_t v25 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v32)
    {
      *(_OWORD *)(a4 + 48) = v27;
      *(void *)(a4 + 64) = v28;
      uint64_t v28 = 0;
      long long v27 = 0uLL;
      *(void *)(a4 + 72) = v29;
      *(_OWORD *)(a4 + 80) = v30;
      *(void *)(a4 + 96) = v31;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v14 && SHIBYTE(v25) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v36) & 0x80000000) == 0) {
        return;
      }
      goto LABEL_45;
    }
LABEL_44:
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_45;
  }
  if (a2 < 3)
  {
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)(*(void *)a1 + 8) + 48))();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 40))(v15, a2);
    *(unsigned char *)(a4 + 120) = 1;
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_45;
  }
  unsigned __int8 v17 = a2;
  sub_21594AA58((uint64_t)v18, &v17);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v18;
  uint64_t v21 = v19;
  v18[1] = 0;
  uint64_t v19 = 0;
  v18[0] = 0;
  char v22 = 1;
  sub_2159644BC((long long *)v20, (uint64_t)&v23);
  *(_OWORD *)a4 = v23;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v33)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v16 = v26;
    if (v26)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v25;
      uint64_t v25 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v32)
    {
      *(_OWORD *)(a4 + 48) = v27;
      *(void *)(a4 + 64) = v28;
      uint64_t v28 = 0;
      long long v27 = 0uLL;
      *(void *)(a4 + 72) = v29;
      *(_OWORD *)(a4 + 80) = v30;
      *(void *)(a4 + 96) = v31;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v16 && SHIBYTE(v25) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v22 && SHIBYTE(v21) < 0) {
    operator delete(v20[0]);
  }
  if ((SHIBYTE(v19) & 0x80000000) == 0) {
    goto LABEL_44;
  }
  operator delete(v18[0]);
  if (SHIBYTE(v36) < 0) {
LABEL_45:
  }
    operator delete(__dst);
}

void sub_21594A9EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0) {
      operator delete(__p);
    }
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((*(char *)(v23 - 81) & 0x80000000) == 0) {
LABEL_6:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v23 - 81) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(v22 + 120));
  _Unwind_Resume(exception_object);
}

uint64_t sub_21594AA58(uint64_t a1, unsigned __int8 *a2)
{
  int v5 = 0;
  sub_21594B828(v4, "invalid EnableState value '");
  std::to_string(&v6, *a2);
  size_t v8 = (std::string *)v4;
  size_t v9 = &v6;
  uint64_t v10 = v4;
  uint64_t v11 = &v6;
  uint64_t v12 = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v7 = &v8;
  ((void (*)(std::string ***, _DWORD *))off_26C672560[v5])(&v7, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  size_t v8 = (std::string *)v4;
  size_t v9 = (std::string *)"'";
  uint64_t v10 = v4;
  uint64_t v11 = (std::string *)"'";
  uint64_t v12 = (std::string *)"'";
  if (v5 == -1) {
    sub_215742D4C();
  }
  v6.__r_.__value_.__r.__words[0] = (std::string::size_type)&v8;
  ((void (*)(std::string *, _DWORD *))off_26C672578[v5])(&v6, v4);
  if (v5 == -1) {
    sub_215742D4C();
  }
  size_t v8 = &v6;
  uint64_t result = ((uint64_t (*)(std::string **, _DWORD *))off_26C672590[v5])(&v8, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(std::string **, _DWORD *))off_26C672548[v5])(&v8, v4);
  }
  return result;
}

void sub_21594ABA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21594ABC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x21594ABB8);
}

void sub_21594ABEC(uint64_t *a1, const char *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  if (a2) {
    int v5 = a2;
  }
  else {
    int v5 = (const char *)&unk_215E8C33A;
  }
  size_t v6 = strlen(v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, const char *, size_t))(*(void *)(v4 + 8) + 48))(v4 + 8, v5, v6);
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 24))(v7))
  {
    size_t v8 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
    uint64_t v10 = *(void *)(a3 + 424);
    size_t v9 = *(std::__shared_weak_count **)(a3 + 432);
    v12[0] = &unk_26C678D20;
    v12[1] = v10;
    size_t v13 = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_21594B91C(v4, v8, (uint64_t)v12);
    uint64_t v11 = v13;
    if (v13)
    {
      if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
}

void sub_21594AD60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215AEFACC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21594AD74(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_215B2D030(*a1, (uint64_t)v27);
  if (v37)
  {
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  sub_2157D8F38(v27, (uint64_t)&v6);
  long long v16 = v6;
  uint64_t v3 = sub_215741BFC(&__p, &v7);
  *(_OWORD *)a2 = v16;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v3;
      *(void *)(a2 + 32) = *((void *)v3 + 2);
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
      *(void *)uint64_t v3 = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v25)
    {
      uint64_t v5 = v22;
      *(void *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a2 + 72) = v5;
      *(_OWORD *)(a2 + 80) = v23;
      *(void *)(a2 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v4 && v18 < 0) {
      operator delete(__p);
    }
    if (!v15) {
      goto LABEL_23;
    }
    goto LABEL_15;
  }
  *(unsigned char *)(a2 + 120) = 0;
  if (v15)
  {
LABEL_15:
    if (v14)
    {
      if (v13 < 0) {
        operator delete(v12);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete((void *)v7);
    }
  }
LABEL_23:
  if (!v37 && v36)
  {
    if (v35)
    {
      if (v34 < 0) {
        operator delete(v33);
      }
      if (v32 < 0) {
        operator delete(v31);
      }
    }
    if (v30)
    {
      if (v29 < 0) {
        operator delete(v28);
      }
    }
  }
}

void sub_21594AF60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_21594AF7C(_Unwind_Exception *a1)
{
  sub_2157407D4(v1 - 160);
  _Unwind_Resume(a1);
}

void *sub_21594AF90(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C6724C8;
  uint64_t v2 = (std::__shared_weak_count *)result[4];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21594B028(void *a1)
{
  *a1 = &unk_26C6724C8;
  uint64_t v1 = (std::__shared_weak_count *)a1[4];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21594B0D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    if (a2 >= 3)
    {
      unsigned __int8 v12 = a2;
      sub_21594AA58((uint64_t)v13, &v12);
      *(_OWORD *)char v15 = *(_OWORD *)v13;
      uint64_t v16 = v14;
      v13[1] = 0;
      uint64_t v14 = 0;
      v13[0] = 0;
      char v17 = 1;
      sub_2159644BC((long long *)v15, (uint64_t)&v18);
      *(_OWORD *)a3 = v18;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (v28)
      {
        *(unsigned char *)(a3 + 40) = 0;
        int v6 = v21;
        if (v21)
        {
          *(_OWORD *)(a3 + 16) = __p;
          *(void *)(a3 + 32) = v20;
          uint64_t v20 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v27)
        {
          uint64_t v7 = v24;
          *(void *)(a3 + 64) = v23;
          *(_OWORD *)(a3 + 48) = v22;
          uint64_t v23 = 0;
          long long v22 = 0uLL;
          *(void *)(a3 + 72) = v7;
          *(_OWORD *)(a3 + 80) = v25;
          *(void *)(a3 + 96) = v26;
          long long v25 = 0uLL;
          uint64_t v26 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 120) = 0;
        if (v6 && SHIBYTE(v20) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a3 + 120) = 0;
      }
      if (v17 && SHIBYTE(v16) < 0) {
        operator delete(v15[0]);
      }
      if (SHIBYTE(v14) < 0) {
        operator delete(v13[0]);
      }
      return;
    }
LABEL_14:
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8), a2);
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  if (v9) {
    goto LABEL_14;
  }
  sub_21583927C((uint64_t)&v18);
  *(_OWORD *)a3 = v18;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v28)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v10 = v21;
    if (v21)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v20;
      uint64_t v20 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v27)
    {
      uint64_t v11 = v24;
      *(void *)(a3 + 64) = v23;
      *(_OWORD *)(a3 + 48) = v22;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      *(void *)(a3 + 72) = v11;
      *(_OWORD *)(a3 + 80) = v25;
      *(void *)(a3 + 96) = v26;
      long long v25 = 0uLL;
      uint64_t v26 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v10 && SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
}

void sub_21594B3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22 && a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21594B3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
  uint64_t v7 = *v5;
  int v6 = (std::__shared_weak_count *)v5[1];
  char v15 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t v8 = *(std::__shared_weak_count **)(a3 + 16);
  uint64_t v14 = v8;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v16 = v7;
  char v17 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v18 = &unk_26C678D20;
  uint64_t v19 = v9;
  uint64_t v20 = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 16))(a1, &v16);
  uint64_t v11 = v20;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  unsigned __int8 v12 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  if (!v15 || atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v10;
  }
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  return v10;
}

void sub_21594B640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14)
{
}

uint64_t sub_21594B664(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_21594B734(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672508;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21594B754(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672508;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21594B7A8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

_DWORD *sub_21594B828(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C672548[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t sub_21594B91C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  unsigned __int8 v12 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *(void *)(a3 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a3 + 16);
  char v11 = v5;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v13 = v4;
  uint64_t v14 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  char v15 = &unk_26C678D20;
  uint64_t v16 = v6;
  char v17 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 16))(a1, &v13);
  uint64_t v8 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = v14;
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  if (!v12 || atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v7;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return v7;
}

void sub_21594BB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14)
{
}

uint64_t sub_21594BB58(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  if (v2 >= 0xD || ((0x19EFu >> v2) & 1) == 0) {
    sub_215E097D8(v2);
  }
  return *((void *)a1 + 1) / qword_215ECE750[(char)v2];
}

void sub_21594BC28()
{
  sub_215731D80(v0);
}

uint64_t sub_21594BC34(void *a1, void *a2, uint64_t a3)
{
  if (a1[2] != a3) {
    return 0;
  }
  size_t v5 = (void *)*a1;
  uint64_t v3 = a1 + 1;
  uint64_t v4 = v5;
  if (v5 != v3)
  {
    while (*((unsigned __int16 *)v4 + 16) == *((unsigned __int16 *)a2 + 16))
    {
      if (*((unsigned __int8 *)v4 + 40) != *((unsigned __int8 *)a2 + 40)) {
        break;
      }
      uint64_t v6 = v4[6];
      uint64_t v7 = a2[6];
      if (v6 != v7) {
        break;
      }
      if (v6)
      {
        uint64_t v8 = v6 - 1;
        uint64_t v9 = v7 - 1;
        uint64_t v10 = (unsigned __int8 *)v4[7];
        char v11 = (unsigned __int8 *)a2[7];
        while (*v10 == *v11)
        {
          ++v10;
          ++v11;
          if (v8)
          {
            --v8;
            if (v9--) {
              continue;
            }
          }
          goto LABEL_13;
        }
        return 0;
      }
      char v11 = (unsigned __int8 *)a2[7];
      uint64_t v10 = (unsigned __int8 *)v4[7];
LABEL_13:
      uint64_t v13 = 0;
      if (v10 == (unsigned __int8 *)(v4[7] + v6) && v11 == (unsigned __int8 *)(a2[7] + v7))
      {
        uint64_t v14 = (void *)v4[1];
        char v15 = v4;
        if (v14)
        {
          do
          {
            uint64_t v4 = v14;
            uint64_t v14 = (void *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            uint64_t v4 = (void *)v15[2];
            BOOL v16 = *v4 == (void)v15;
            char v15 = v4;
          }
          while (!v16);
        }
        char v17 = (void *)a2[1];
        if (v17)
        {
          do
          {
            long long v18 = v17;
            char v17 = (void *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            long long v18 = (void *)a2[2];
            BOOL v16 = *v18 == (void)a2;
            a2 = v18;
          }
          while (!v16);
        }
        uint64_t v13 = 1;
        a2 = v18;
        if (v4 != v3) {
          continue;
        }
      }
      return v13;
    }
    return 0;
  }
  return 1;
}

void *sub_21594BD70(void *a1, void *a2)
{
  sub_215731D94(a1, (uint64_t)"{", 1);
  uint64_t v4 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    size_t v5 = sub_215731D94(a1, (uint64_t)"{label = ", 9);
    int v6 = *((unsigned __int16 *)v4 + 16);
    switch(v6)
    {
      case 'f':
        uint64_t v7 = "Confidence";
        uint64_t v8 = 10;
        break;
      case 'e':
        uint64_t v7 = "Material";
        uint64_t v8 = 8;
        break;
      case 'd':
        uint64_t v7 = "Semantic";
        uint64_t v8 = 8;
        break;
      default:
        uint64_t v7 = "unknown label";
        uint64_t v8 = 13;
        break;
    }
    uint64_t v9 = sub_215731D94(v5, (uint64_t)v7, v8);
    sub_215731D94(v9, (uint64_t)", list = ", 9);
    sub_215731D94(a1, (uint64_t)"{value_type = ", 14);
    sub_2157E3DE8();
  }

  return sub_215731D94(a1, (uint64_t)"}", 1);
}

void sub_21594D914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,int a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,int a32,int a33,__int16 a34,char a35,char a36,char a37,uint64_t a38,uint64_t a39,int a40)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_21594DDD8(BOOL result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6 = result;
  uint64_t v13 = a6;
  if (a3 == 2)
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a2 - result) >> 2);
    if (v8) {
      uint64_t v9 = 3;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9 * v8 == -1)
    {
      uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
      a4 = a5;
      if (result) {
        goto LABEL_17;
      }
    }
    else
    {
      a4 = a5;
    }
  }
  else
  {
    if (a3 != 1)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_215953208((uint64_t)&v12, (const char *)&v13);
      std::logic_error::logic_error(exception, &v12);
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a2 - result) >> 2);
    if (v8) {
      uint64_t v9 = 3;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9 * v8 == -1)
    {
      uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
      if (result) {
LABEL_17:
      }
        abort();
    }
  }
  *(void *)a4 = v6;
  *(void *)(a4 + 8) = (v8 << 32) | 3;
  *(void *)(a4 + 16) = (v9 << 32) | 1;
  *(_DWORD *)(a4 + 24) = v8;
  *(_DWORD *)(a4 + 28) = v9;
  return result;
}

void sub_21594DF98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t *sub_21594DFD0(uint64_t *result, uint64_t *a2, uint64_t a3, int a4, unsigned int a5)
{
  unint64_t v8 = (void **)result;
  __int16 v23 = a5;
  if (a4 != 2)
  {
    if (a4 != 1)
    {
      __cxa_allocate_exception(0x10uLL);
      sub_2159539A4();
    }
    if (a2
      || !a3
      || (uint64_t result = (uint64_t *)sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8), !result))
    {
      uint64_t v9 = (uint64_t *)(a3 - (void)a2);
      char v11 = v8 + 25;
      uint64_t v10 = v8[25];
      if (!v10)
      {
        std::string v12 = v8 + 25;
LABEL_13:
        uint64_t v14 = operator new(0x40uLL);
        v14[16] = a5;
        *((void *)v14 + 6) = 0;
        *((void *)v14 + 7) = 0;
        *((void *)v14 + 5) = 0;
        *(void *)uint64_t v14 = 0;
        *((void *)v14 + 1) = 0;
        *((void *)v14 + 2) = v12;
        unsigned __int8 *v11 = (uint64_t *)v14;
        int v15 = (void *)*v8[24];
        BOOL v16 = (uint64_t *)v14;
        if (v15)
        {
          v8[24] = v15;
          BOOL v16 = *v11;
        }
        uint64_t result = sub_21573B048(v8[25], v16);
        char v17 = v8 + 26;
LABEL_29:
        ++*v17;
        std::string v12 = (uint64_t **)v14;
        goto LABEL_30;
      }
      while (1)
      {
        while (1)
        {
          std::string v12 = (uint64_t **)v10;
          unsigned int v13 = *((unsigned __int16 *)v10 + 16);
          if (v13 <= a5) {
            break;
          }
          uint64_t v10 = *v12;
          char v11 = v12;
          if (!*v12) {
            goto LABEL_13;
          }
        }
        if (v13 >= a5) {
          goto LABEL_30;
        }
        uint64_t v10 = v12[1];
        if (!v10)
        {
          char v11 = v12 + 1;
          goto LABEL_13;
        }
      }
    }
LABEL_32:
    abort();
  }
  if (!a2)
  {
    if (a3)
    {
      uint64_t result = (uint64_t *)sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8);
      if (result) {
        goto LABEL_32;
      }
    }
  }
  uint64_t v9 = (uint64_t *)(a3 - (void)a2);
  uint64_t v19 = v8 + 28;
  long long v18 = v8[28];
  if (!v18)
  {
    std::string v12 = v8 + 28;
LABEL_26:
    uint64_t v14 = operator new(0x40uLL);
    v14[16] = a5;
    *((void *)v14 + 6) = 0;
    *((void *)v14 + 7) = 0;
    *((void *)v14 + 5) = 0;
    *(void *)uint64_t v14 = 0;
    *((void *)v14 + 1) = 0;
    *((void *)v14 + 2) = v12;
    *uint64_t v19 = (uint64_t *)v14;
    unsigned __int8 v21 = (void *)*v8[27];
    long long v22 = (uint64_t *)v14;
    if (v21)
    {
      v8[27] = v21;
      long long v22 = *v19;
    }
    uint64_t result = sub_21573B048(v8[28], v22);
    char v17 = v8 + 29;
    goto LABEL_29;
  }
  while (1)
  {
    while (1)
    {
      std::string v12 = (uint64_t **)v18;
      unsigned int v20 = *((unsigned __int16 *)v18 + 16);
      if (v20 <= a5) {
        break;
      }
      long long v18 = *v12;
      uint64_t v19 = v12;
      if (!*v12) {
        goto LABEL_26;
      }
    }
    if (v20 >= a5) {
      break;
    }
    long long v18 = v12[1];
    if (!v18)
    {
      uint64_t v19 = v12 + 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  *((unsigned char *)v12 + 40) = 0;
  v12[6] = v9;
  v12[7] = a2;
  return result;
}

void sub_21594E268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

uint64_t sub_21594E2C8(uint64_t a1)
{
  return a1;
}

double sub_21594E304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)a1 = a2;
      *(void *)(a1 + 8) = (a3 << 32) | 3;
      *(void *)(a1 + 16) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 24) = a3;
      *(_DWORD *)(a1 + 28) = v6;
    }
    else
    {
      *(void *)a1 = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 8) = xmmword_215E99670;
      *(void *)(a1 + 24) = 0;
    }
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 8) = xmmword_215E99670;
    *(void *)(a1 + 24) = 0;
  }
  return result;
}

double sub_21594E418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)(a1 + 32) = a2;
      *(void *)(a1 + 40) = (a3 << 32) | 3;
      *(void *)(a1 + 48) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 56) = a3;
      *(_DWORD *)(a1 + 60) = v6;
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 40) = xmmword_215E99670;
      *(void *)(a1 + 56) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 40) = xmmword_215E99670;
    *(void *)(a1 + 56) = 0;
  }
  return result;
}

double sub_21594E52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)(a1 + 64) = a2;
      *(void *)(a1 + 72) = (a3 << 32) | 3;
      *(void *)(a1 + 80) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 88) = a3;
      *(_DWORD *)(a1 + 92) = v6;
    }
    else
    {
      *(void *)(a1 + 64) = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 72) = xmmword_215E99670;
      *(void *)(a1 + 88) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 72) = xmmword_215E99670;
    *(void *)(a1 + 88) = 0;
  }
  return result;
}

double sub_21594E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)(a1 + 96) = a2;
      *(void *)(a1 + 104) = (a3 << 32) | 3;
      *(void *)(a1 + 112) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 120) = a3;
      *(_DWORD *)(a1 + 124) = v6;
    }
    else
    {
      *(void *)(a1 + 96) = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 104) = xmmword_215E99670;
      *(void *)(a1 + 120) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 96) = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 104) = xmmword_215E99670;
    *(void *)(a1 + 120) = 0;
  }
  return result;
}

double sub_21594E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)(a1 + 128) = a2;
      *(void *)(a1 + 136) = (a3 << 32) | 3;
      *(void *)(a1 + 144) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 152) = a3;
      *(_DWORD *)(a1 + 156) = v6;
    }
    else
    {
      *(void *)(a1 + 128) = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 136) = xmmword_215E99670;
      *(void *)(a1 + 152) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 128) = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 136) = xmmword_215E99670;
    *(void *)(a1 + 152) = 0;
  }
  return result;
}

double sub_21594E868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (a3)
    {
      if (a3) {
        int v6 = 3;
      }
      else {
        int v6 = 0;
      }
      if (a3) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6 * a3 == -1
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      *(void *)(a1 + 160) = a2;
      *(void *)(a1 + 168) = (a3 << 32) | 3;
      *(void *)(a1 + 176) = (v7 << 32) | 1;
      *(_DWORD *)(a1 + 184) = a3;
      *(_DWORD *)(a1 + 188) = v6;
    }
    else
    {
      *(void *)(a1 + 160) = 0;
      *(void *)&double result = 3;
      *(_OWORD *)(a1 + 168) = xmmword_215E99670;
      *(void *)(a1 + 184) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 160) = 0;
    *(void *)&double result = 3;
    *(_OWORD *)(a1 + 168) = xmmword_215E99670;
    *(void *)(a1 + 184) = 0;
  }
  return result;
}

uint64_t sub_21594E97C(uint64_t ***a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5)
{
  __int16 v5 = a4;
  if (a2)
  {
    if (a3)
    {
      char v8 = a5;
      if (a5 >= 0xD || ((0x19EFu >> a5) & 1) == 0) {
        sub_215E097D8(a5);
      }
      uint64_t v10 = qword_215ECE750[(char)a5] * a3;
      std::string v12 = (uint64_t **)(a1 + 1);
      char v11 = (unsigned __int16 *)a1[1];
      if (v11)
      {
        while (1)
        {
          while (1)
          {
            unsigned int v13 = v11;
            unsigned int v14 = v11[16];
            if (v14 <= a4) {
              break;
            }
            char v11 = (unsigned __int16 *)*v13;
            std::string v12 = (uint64_t **)v13;
            if (!*v13) {
              goto LABEL_12;
            }
          }
          if (v14 >= a4) {
            break;
          }
          char v11 = (unsigned __int16 *)v13[1];
          if (!v11)
          {
            std::string v12 = (uint64_t **)(v13 + 1);
            goto LABEL_12;
          }
        }
      }
      else
      {
        unsigned int v13 = a1 + 1;
LABEL_12:
        int v15 = v13;
        unsigned int v13 = operator new(0x40uLL);
        *((_WORD *)v13 + 16) = v5;
        v13[6] = 0;
        v13[7] = 0;
        v13[5] = 0;
        void *v13 = 0;
        v13[1] = 0;
        v13[2] = v15;
        *std::string v12 = v13;
        BOOL v16 = **a1;
        char v17 = v13;
        if (v16)
        {
          *a1 = (uint64_t **)v16;
          char v17 = *v12;
        }
        sub_21573B048((uint64_t *)a1[1], v17);
        a1[2] = (uint64_t **)((char *)a1[2] + 1);
      }
      *((unsigned char *)v13 + 40) = v8;
      uint64_t result = 1;
      v13[6] = v10;
      v13[7] = a2;
    }
    else
    {
      char v28 = (uint64_t **)(a1 + 1);
      uint64_t result = (uint64_t)a1[1];
      if (result)
      {
        char v29 = (uint64_t **)(a1 + 1);
        char v30 = (uint64_t *)a1[1];
        do
        {
          unsigned int v31 = *((unsigned __int16 *)v30 + 16);
          BOOL v32 = v31 >= a4;
          if (v31 >= a4) {
            char v33 = (uint64_t **)v30;
          }
          else {
            char v33 = (uint64_t **)(v30 + 1);
          }
          if (v32) {
            char v29 = (uint64_t **)v30;
          }
          char v30 = *v33;
        }
        while (*v33);
        if (v29 != v28 && *((unsigned __int16 *)v29 + 16) <= a4)
        {
          char v34 = v29[1];
          if (v34)
          {
            do
            {
              char v35 = v34;
              char v34 = (uint64_t *)*v34;
            }
            while (v34);
          }
          else
          {
            char v38 = v29;
            do
            {
              char v35 = v38[2];
              BOOL v37 = *v35 == (void)v38;
              char v38 = (uint64_t **)v35;
            }
            while (!v37);
          }
          if (*a1 == v29) {
            *a1 = (uint64_t **)v35;
          }
          a1[2] = (uint64_t **)((char *)a1[2] - 1);
          sub_21573B1FC((uint64_t *)result, (uint64_t *)v29);
          operator delete(v29);
        }
        return 0;
      }
    }
  }
  else
  {
    unsigned int v20 = (uint64_t **)(a1 + 1);
    uint64_t v19 = (uint64_t *)a1[1];
    if (v19)
    {
      unsigned __int8 v21 = (uint64_t **)(a1 + 1);
      int v22 = (uint64_t *)a1[1];
      do
      {
        unsigned int v23 = *((unsigned __int16 *)v22 + 16);
        BOOL v24 = v23 >= a4;
        if (v23 >= a4) {
          long long v25 = (uint64_t **)v22;
        }
        else {
          long long v25 = (uint64_t **)(v22 + 1);
        }
        if (v24) {
          unsigned __int8 v21 = (uint64_t **)v22;
        }
        int v22 = *v25;
      }
      while (*v25);
      if (v21 != v20 && *((unsigned __int16 *)v21 + 16) <= a4)
      {
        uint64_t v26 = v21[1];
        if (v26)
        {
          do
          {
            char v27 = v26;
            uint64_t v26 = (uint64_t *)*v26;
          }
          while (v26);
        }
        else
        {
          char v36 = v21;
          do
          {
            char v27 = v36[2];
            BOOL v37 = *v27 == (void)v36;
            char v36 = (uint64_t **)v27;
          }
          while (!v37);
        }
        if (*a1 == v21) {
          *a1 = (uint64_t **)v27;
        }
        a1[2] = (uint64_t **)((char *)a1[2] - 1);
        sub_21573B1FC(v19, (uint64_t *)v21);
        operator delete(v21);
      }
    }
    return a3 == 0;
  }
  return result;
}

void sub_21594EC1C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v3 = a2;
  unint64_t v5 = *(void *)(a1 + 208);
  if (v5 > a2)
  {
    int v6 = *(void **)(a1 + 192);
    if ((a2 & 0x8000000000000000) != 0)
    {
      do
      {
        std::string v12 = (void *)*v6;
        if (*v6)
        {
          do
          {
            uint64_t v7 = v12;
            std::string v12 = (void *)v12[1];
          }
          while (v12);
        }
        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v10 = *v7 == (void)v6;
            int v6 = v7;
          }
          while (v10);
        }
        int v6 = v7;
      }
      while (!__CFADD__(v3++, 1));
    }
    else if (a2)
    {
      do
      {
        uint64_t v9 = (void *)v6[1];
        if (v9)
        {
          do
          {
            uint64_t v7 = v9;
            uint64_t v9 = (void *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v10 = *v7 == (void)v6;
            int v6 = v7;
          }
          while (!v10);
        }
        int v6 = v7;
      }
      while (v3-- > 1);
    }
    else
    {
      uint64_t v7 = *(void **)(a1 + 192);
    }
    *(_WORD *)a3 = *((_WORD *)v7 + 16);
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  int v38 = 0;
  sub_2158386B8(v37, "given index is ");
  std::to_string(&v39, v3);
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = &v39;
  unint64_t v43 = v37;
  uint64_t v44 = &v39;
  uint64_t v45 = &v39;
  if (v38 == -1) {
    sub_215742D4C();
  }
  uint64_t v40 = &v41;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v38])(&v40, v37);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = (std::string *)" but mesh contains only ";
  unint64_t v43 = v37;
  uint64_t v44 = (std::string *)" but mesh contains only ";
  uint64_t v45 = (std::string *)" but mesh contains only ";
  if (v38 == -1) {
    sub_215742D4C();
  }
  v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
  ((void (*)(std::string *, _DWORD *))off_26C672748[v38])(&v39, v37);
  std::to_string(&v39, v5);
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = &v39;
  unint64_t v43 = v37;
  uint64_t v44 = &v39;
  uint64_t v45 = &v39;
  if (v38 == -1) {
    sub_215742D4C();
  }
  uint64_t v40 = &v41;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v38])(&v40, v37);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = (std::string *)" vertex label lists";
  unint64_t v43 = v37;
  uint64_t v44 = (std::string *)" vertex label lists";
  uint64_t v45 = (std::string *)" vertex label lists";
  if (v38 == -1) {
    sub_215742D4C();
  }
  v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
  ((void (*)(std::string *, _DWORD *))off_26C672760[v38])(&v39, v37);
  if (v38 == -1) {
    sub_215742D4C();
  }
  unint64_t v41 = &v39;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C6725F0[v38])(v15, &v41, v37);
  if (v38 != -1) {
    ((void (*)(std::string **, _DWORD *))off_26C6725A8[v38])(&v41, v37);
  }
  if (SHIBYTE(v16) < 0)
  {
    sub_215738B0C(__dst, v15[0], (unint64_t)v15[1]);
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)v15;
    uint64_t v18 = v16;
  }
  char v19 = 1;
  LOBYTE(v20) = 0;
  char v24 = 0;
  char v25 = 1;
  sub_21573FCF8(0x11u, (long long *)__dst, (uint64_t)&v26);
  *(_OWORD *)a3 = v26;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v36)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v13 = v29;
    if (v29)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v28;
      uint64_t v28 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v35)
    {
      uint64_t v14 = v32;
      *(void *)(a3 + 64) = v31;
      *(_OWORD *)(a3 + 48) = v30;
      long long v30 = 0uLL;
      *(void *)(a3 + 72) = v14;
      *(_OWORD *)(a3 + 80) = v33;
      *(void *)(a3 + 96) = v34;
      uint64_t v31 = 0;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v13 && SHIBYTE(v28) < 0) {
      operator delete((void *)__p);
    }
    if (!v25) {
      goto LABEL_51;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v25) {
      goto LABEL_51;
    }
  }
  if (!v24) {
    goto LABEL_48;
  }
  if (v23 < 0)
  {
    operator delete(v22);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_48:
      if (v19) {
        goto LABEL_49;
      }
      goto LABEL_51;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_48;
  }
  operator delete(v20);
  if (v19)
  {
LABEL_49:
    if (SHIBYTE(v18) < 0) {
      operator delete(__dst[0]);
    }
  }
LABEL_51:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
}

void sub_21594F064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21594F094(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 152);
  _Unwind_Resume(a1);
}

void sub_21594F0E4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v3 = a2;
  unint64_t v5 = *(void *)(a1 + 232);
  if (v5 > a2)
  {
    int v6 = *(void **)(a1 + 216);
    if ((a2 & 0x8000000000000000) != 0)
    {
      do
      {
        std::string v12 = (void *)*v6;
        if (*v6)
        {
          do
          {
            uint64_t v7 = v12;
            std::string v12 = (void *)v12[1];
          }
          while (v12);
        }
        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v10 = *v7 == (void)v6;
            int v6 = v7;
          }
          while (v10);
        }
        int v6 = v7;
      }
      while (!__CFADD__(v3++, 1));
    }
    else if (a2)
    {
      do
      {
        uint64_t v9 = (void *)v6[1];
        if (v9)
        {
          do
          {
            uint64_t v7 = v9;
            uint64_t v9 = (void *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v10 = *v7 == (void)v6;
            int v6 = v7;
          }
          while (!v10);
        }
        int v6 = v7;
      }
      while (v3-- > 1);
    }
    else
    {
      uint64_t v7 = *(void **)(a1 + 216);
    }
    *(_WORD *)a3 = *((_WORD *)v7 + 16);
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  int v38 = 0;
  sub_2158386B8(v37, "given index is ");
  std::to_string(&v39, v3);
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = &v39;
  unint64_t v43 = v37;
  uint64_t v44 = &v39;
  uint64_t v45 = &v39;
  if (v38 == -1) {
    sub_215742D4C();
  }
  uint64_t v40 = &v41;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v38])(&v40, v37);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = (std::string *)" but mesh contains only ";
  unint64_t v43 = v37;
  uint64_t v44 = (std::string *)" but mesh contains only ";
  uint64_t v45 = (std::string *)" but mesh contains only ";
  if (v38 == -1) {
    sub_215742D4C();
  }
  v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
  ((void (*)(std::string *, _DWORD *))off_26C672748[v38])(&v39, v37);
  std::to_string(&v39, v5);
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = &v39;
  unint64_t v43 = v37;
  uint64_t v44 = &v39;
  uint64_t v45 = &v39;
  if (v38 == -1) {
    sub_215742D4C();
  }
  uint64_t v40 = &v41;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v38])(&v40, v37);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  unint64_t v41 = (std::string *)v37;
  uint64_t v42 = (std::string *)" face label lists";
  unint64_t v43 = v37;
  uint64_t v44 = (std::string *)" face label lists";
  uint64_t v45 = (std::string *)" face label lists";
  if (v38 == -1) {
    sub_215742D4C();
  }
  v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
  ((void (*)(std::string *, _DWORD *))off_26C672778[v38])(&v39, v37);
  if (v38 == -1) {
    sub_215742D4C();
  }
  unint64_t v41 = &v39;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C6725F0[v38])(v15, &v41, v37);
  if (v38 != -1) {
    ((void (*)(std::string **, _DWORD *))off_26C6725A8[v38])(&v41, v37);
  }
  if (SHIBYTE(v16) < 0)
  {
    sub_215738B0C(__dst, v15[0], (unint64_t)v15[1]);
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)v15;
    uint64_t v18 = v16;
  }
  char v19 = 1;
  LOBYTE(v20) = 0;
  char v24 = 0;
  char v25 = 1;
  sub_21573FCF8(0x11u, (long long *)__dst, (uint64_t)&v26);
  *(_OWORD *)a3 = v26;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v36)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v13 = v29;
    if (v29)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v28;
      uint64_t v28 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v35)
    {
      uint64_t v14 = v32;
      *(void *)(a3 + 64) = v31;
      *(_OWORD *)(a3 + 48) = v30;
      long long v30 = 0uLL;
      *(void *)(a3 + 72) = v14;
      *(_OWORD *)(a3 + 80) = v33;
      *(void *)(a3 + 96) = v34;
      uint64_t v31 = 0;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v13 && SHIBYTE(v28) < 0) {
      operator delete((void *)__p);
    }
    if (!v25) {
      goto LABEL_51;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v25) {
      goto LABEL_51;
    }
  }
  if (!v24) {
    goto LABEL_48;
  }
  if (v23 < 0)
  {
    operator delete(v22);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_48:
      if (v19) {
        goto LABEL_49;
      }
      goto LABEL_51;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_48;
  }
  operator delete(v20);
  if (v19)
  {
LABEL_49:
    if (SHIBYTE(v18) < 0) {
      operator delete(__dst[0]);
    }
  }
LABEL_51:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
}

void sub_21594F52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21594F55C(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 152);
  _Unwind_Resume(a1);
}

uint64_t sub_21594F5AC(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  if (v2 != *(_DWORD *)(a2 + 8)) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 12);
  if (v5 != *(_DWORD *)(a2 + 12)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 24))
  {
    int v6 = v2 - 1;
    uint64_t v7 = *(unsigned int *)(a1 + 16);
    uint64_t v8 = *(unsigned int *)(a2 + 16);
    uint64_t v9 = *(float **)a1;
    BOOL v10 = *(float **)a2;
    int v11 = v5 - 1;
    if (v11)
    {
      uint64_t v12 = *(unsigned int *)(a1 + 20);
      uint64_t v13 = *(unsigned int *)(a2 + 20);
      if (v6)
      {
        int v14 = 0;
        uint64_t v15 = 4 * v12;
        uint64_t v16 = 4 * v13;
LABEL_7:
        char v17 = v10;
        uint64_t v18 = v9;
        int v19 = v6;
        while (*v18 == *v17)
        {
          v18 += v7;
          v17 += v8;
          if (!--v19)
          {
            if (*v18 != *v17) {
              return 0;
            }
            uint64_t v9 = (float *)((char *)v9 + v15);
            BOOL v10 = (float *)((char *)v10 + v16);
            if (++v14 != v11) {
              goto LABEL_7;
            }
            goto LABEL_12;
          }
        }
      }
      else
      {
        while (*v9 == *v10)
        {
          v9 += v12;
          v10 += v13;
          if (!--v11) {
            goto LABEL_20;
          }
        }
      }
      return 0;
    }
LABEL_12:
    if (v6)
    {
      while (*v9 == *v10)
      {
        v9 += v7;
        v10 += v8;
        if (!--v6) {
          goto LABEL_20;
        }
      }
      return 0;
    }
LABEL_20:
    if (*v9 != *v10) {
      return 0;
    }
  }
  else if (*(_DWORD *)(a2 + 24))
  {
    return 0;
  }
  int v20 = *(_DWORD *)(a1 + 40);
  if (v20 != *(_DWORD *)(a2 + 40)) {
    return 0;
  }
  int v21 = *(_DWORD *)(a1 + 44);
  if (v21 != *(_DWORD *)(a2 + 44)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 56))
  {
    int v22 = v20 - 1;
    uint64_t v23 = *(unsigned int *)(a1 + 48);
    uint64_t v24 = *(unsigned int *)(a2 + 48);
    char v25 = *(_DWORD **)(a1 + 32);
    long long v26 = *(_DWORD **)(a2 + 32);
    int v27 = v21 - 1;
    if (v27)
    {
      uint64_t v28 = *(unsigned int *)(a1 + 52);
      uint64_t v29 = *(unsigned int *)(a2 + 52);
      if (v22)
      {
        int v30 = 0;
        uint64_t v31 = 4 * v28;
        uint64_t v32 = 4 * v29;
LABEL_27:
        long long v33 = v26;
        uint64_t v34 = v25;
        int v35 = v22;
        while (*v34 == *v33)
        {
          v34 += v23;
          v33 += v24;
          if (!--v35)
          {
            if (*v34 != *v33) {
              return 0;
            }
            char v25 = (_DWORD *)((char *)v25 + v31);
            long long v26 = (_DWORD *)((char *)v26 + v32);
            if (++v30 != v27) {
              goto LABEL_27;
            }
            goto LABEL_32;
          }
        }
      }
      else
      {
        while (*v25 == *v26)
        {
          v25 += v28;
          v26 += v29;
          if (!--v27) {
            goto LABEL_40;
          }
        }
      }
      return 0;
    }
LABEL_32:
    if (v22)
    {
      while (*v25 == *v26)
      {
        v25 += v23;
        v26 += v24;
        if (!--v22) {
          goto LABEL_40;
        }
      }
      return 0;
    }
LABEL_40:
    if (*v25 != *v26) {
      return 0;
    }
  }
  else if (*(_DWORD *)(a2 + 56))
  {
    return 0;
  }
  int v36 = *(_DWORD *)(a1 + 136);
  if (v36 != *(_DWORD *)(a2 + 136)) {
    return 0;
  }
  int v37 = *(_DWORD *)(a1 + 140);
  if (v37 != *(_DWORD *)(a2 + 140)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 152))
  {
    int v38 = v36 - 1;
    uint64_t v39 = *(unsigned int *)(a1 + 144);
    uint64_t v40 = *(unsigned int *)(a2 + 144);
    unint64_t v41 = *(float **)(a1 + 128);
    uint64_t v42 = *(float **)(a2 + 128);
    int v43 = v37 - 1;
    if (v43)
    {
      uint64_t v44 = *(unsigned int *)(a1 + 148);
      uint64_t v45 = *(unsigned int *)(a2 + 148);
      if (v38)
      {
        int v46 = 0;
        uint64_t v47 = 4 * v44;
        uint64_t v48 = 4 * v45;
LABEL_47:
        uint64_t v49 = v42;
        uint64_t v50 = v41;
        int v51 = v38;
        while (*v50 == *v49)
        {
          v50 += v39;
          v49 += v40;
          if (!--v51)
          {
            if (*v50 != *v49) {
              return 0;
            }
            unint64_t v41 = (float *)((char *)v41 + v47);
            uint64_t v42 = (float *)((char *)v42 + v48);
            if (++v46 != v43) {
              goto LABEL_47;
            }
            goto LABEL_52;
          }
        }
      }
      else
      {
        while (*v41 == *v42)
        {
          v41 += v44;
          v42 += v45;
          if (!--v43) {
            goto LABEL_60;
          }
        }
      }
      return 0;
    }
LABEL_52:
    if (v38)
    {
      while (*v41 == *v42)
      {
        v41 += v39;
        v42 += v40;
        if (!--v38) {
          goto LABEL_60;
        }
      }
      return 0;
    }
LABEL_60:
    if (*v41 != *v42) {
      return 0;
    }
  }
  else if (*(_DWORD *)(a2 + 152))
  {
    return 0;
  }
  int v52 = *(_DWORD *)(a1 + 168);
  if (v52 != *(_DWORD *)(a2 + 168)) {
    return 0;
  }
  int v53 = *(_DWORD *)(a1 + 172);
  if (v53 != *(_DWORD *)(a2 + 172)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 184))
  {
    int v54 = v52 - 1;
    uint64_t v55 = *(unsigned int *)(a1 + 176);
    uint64_t v56 = *(unsigned int *)(a2 + 176);
    uint64_t v57 = *(float **)(a1 + 160);
    unint64_t v58 = *(float **)(a2 + 160);
    int v59 = v53 - 1;
    if (v59)
    {
      uint64_t v60 = 4 * *(unsigned int *)(a1 + 180);
      uint64_t v61 = 4 * *(unsigned int *)(a2 + 180);
      if (v54)
      {
        int v62 = 0;
LABEL_67:
        unint64_t v63 = v58;
        uint64_t v64 = v57;
        int v65 = v54;
        while (*v64 == *v63)
        {
          v64 += v55;
          v63 += v56;
          if (!--v65)
          {
            if (*v64 != *v63) {
              return 0;
            }
            uint64_t v57 = (float *)((char *)v57 + v60);
            unint64_t v58 = (float *)((char *)v58 + v61);
            if (++v62 != v59) {
              goto LABEL_67;
            }
            goto LABEL_72;
          }
        }
      }
      else
      {
        while (*v57 == *v58)
        {
          uint64_t v57 = (float *)((char *)v57 + v60);
          unint64_t v58 = (float *)((char *)v58 + v61);
          if (!--v59) {
            goto LABEL_75;
          }
        }
      }
      return 0;
    }
LABEL_72:
    if (v54)
    {
      while (*v57 == *v58)
      {
        v57 += v55;
        v58 += v56;
        if (!--v54) {
          goto LABEL_75;
        }
      }
      return 0;
    }
LABEL_75:
    if (*v57 != *v58) {
      return 0;
    }
  }
  else if (*(_DWORD *)(a2 + 184))
  {
    return 0;
  }
  int v66 = *(_DWORD *)(a1 + 72);
  if (v66 != *(_DWORD *)(a2 + 72)) {
    return 0;
  }
  int v67 = *(_DWORD *)(a1 + 76);
  if (v67 != *(_DWORD *)(a2 + 76)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 88))
  {
    int v68 = v66 - 1;
    uint64_t v69 = *(unsigned int *)(a1 + 80);
    uint64_t v70 = *(unsigned int *)(a2 + 80);
    uint64_t v71 = *(float **)(a1 + 64);
    int v72 = *(float **)(a2 + 64);
    int v73 = v67 - 1;
    if (v73)
    {
      uint64_t v74 = *(unsigned int *)(a1 + 84);
      uint64_t v75 = *(unsigned int *)(a2 + 84);
      if (v68)
      {
        int v76 = 0;
        uint64_t v77 = 4 * v74;
        uint64_t v78 = 4 * v75;
LABEL_87:
        int v79 = v72;
        BOOL v80 = v71;
        int v81 = v68;
        while (*v80 == *v79)
        {
          v80 += v69;
          v79 += v70;
          if (!--v81)
          {
            if (*v80 != *v79) {
              return 0;
            }
            uint64_t v71 = (float *)((char *)v71 + v77);
            int v72 = (float *)((char *)v72 + v78);
            if (++v76 != v73) {
              goto LABEL_87;
            }
            goto LABEL_92;
          }
        }
      }
      else
      {
        while (*v71 == *v72)
        {
          v71 += v74;
          v72 += v75;
          if (!--v73) {
            goto LABEL_100;
          }
        }
      }
      return 0;
    }
LABEL_92:
    if (v68)
    {
      while (*v71 == *v72)
      {
        v71 += v69;
        v72 += v70;
        if (!--v68) {
          goto LABEL_100;
        }
      }
      return 0;
    }
LABEL_100:
    if (*v71 != *v72) {
      return 0;
    }
  }
  else if (*(_DWORD *)(a2 + 88))
  {
    return 0;
  }
  int v82 = *(_DWORD *)(a1 + 104);
  if (v82 != *(_DWORD *)(a2 + 104)) {
    return 0;
  }
  int v83 = *(_DWORD *)(a1 + 108);
  if (v83 != *(_DWORD *)(a2 + 108)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 120))
  {
    int v84 = v82 - 1;
    uint64_t v85 = *(unsigned int *)(a1 + 112);
    uint64_t v86 = *(unsigned int *)(a2 + 112);
    char v87 = *(float **)(a1 + 96);
    unint64_t v88 = *(float **)(a2 + 96);
    int v89 = v83 - 1;
    if (v89)
    {
      uint64_t v90 = *(unsigned int *)(a1 + 116);
      uint64_t v91 = *(unsigned int *)(a2 + 116);
      if (v84)
      {
        int v92 = 0;
        uint64_t v93 = 4 * v90;
        uint64_t v94 = 4 * v91;
LABEL_107:
        BOOL v95 = v88;
        int v96 = v87;
        int v97 = v84;
        while (*v96 == *v95)
        {
          v96 += v85;
          v95 += v86;
          if (!--v97)
          {
            if (*v96 != *v95) {
              return 0;
            }
            char v87 = (float *)((char *)v87 + v93);
            unint64_t v88 = (float *)((char *)v88 + v94);
            if (++v92 != v89) {
              goto LABEL_107;
            }
            goto LABEL_112;
          }
        }
      }
      else
      {
        while (*v87 == *v88)
        {
          v87 += v90;
          v88 += v91;
          if (!--v89) {
            goto LABEL_120;
          }
        }
      }
      return 0;
    }
LABEL_112:
    if (v84)
    {
      while (*v87 == *v88)
      {
        v87 += v85;
        v88 += v86;
        if (!--v84) {
          goto LABEL_120;
        }
      }
      return 0;
    }
LABEL_120:
    if (*v87 == *v88) {
      goto LABEL_121;
    }
    return 0;
  }
  if (*(_DWORD *)(a2 + 120)) {
    return 0;
  }
LABEL_121:
  if (!sub_21594BC34((void *)(a1 + 192), *(void **)(a2 + 192), *(void *)(a2 + 208))) {
    return 0;
  }
  int v98 = *(void **)(a2 + 216);
  uint64_t v99 = *(void *)(a2 + 232);

  return sub_21594BC34((void *)(a1 + 216), v98, v99);
}

void *sub_21594FCF8(int *a1, uint64_t a2)
{
  v30[4] = xmmword_26425A670;
  v30[5] = *(_OWORD *)&off_26425A680;
  v30[6] = xmmword_26425A690;
  v30[7] = *(_OWORD *)&off_26425A6A0;
  v30[0] = xmmword_26425A630;
  v30[1] = *(_OWORD *)&off_26425A640;
  v30[2] = xmmword_26425A650;
  v30[3] = *(_OWORD *)&off_26425A660;
  int v29 = 0;
  sub_215731D94(a1, (uint64_t)"{", 1);
  v28[0] = &v29;
  v28[1] = a1;
  v28[2] = (int *)v30;
  sub_215953CEC(v28, a2);
  int v4 = v29;
  if (v29)
  {
    sub_215731D94(a1, (uint64_t)", ", 2);
    int v4 = v29;
  }
  int v29 = v4 + 1;
  sub_215731D94(a1, *(void *)&v30[v4], *((void *)&v30[v4] + 1));
  sub_215731D94(a1, (uint64_t)" = ", 3);
  v31[0] = 3;
  v31[1] = 0x1000000008;
  void v31[2] = 1;
  sub_215731D94(a1, (uint64_t)"{", 1);
  int v5 = operator new(0x10uLL);
  *int v5 = ",";
  v5[1] = ";";
  if (!*(_DWORD *)(a2 + 56)) {
    goto LABEL_54;
  }
  unsigned int v6 = 0;
  unint64_t v7 = *(void *)(a2 + 40);
  uint64_t v39 = v5 + 2;
  unint64_t v40 = v7;
  int v37 = v5;
  int v38 = v5 + 2;
  uint64_t v35 = 0;
  uint64_t v36 = 1;
  v34[0] = &v35;
  v34[1] = &v40;
  v34[2] = &v37;
  v34[3] = &v36;
  v34[4] = v31;
  unsigned int v8 = -1;
  if (v7)
  {
    unint64_t v9 = HIDWORD(v7);
    if (v9)
    {
      BOOL v10 = *(unsigned int **)(a2 + 32);
      int v11 = v9 - 1;
      if (v9 == 1)
      {
        unsigned int v12 = 0;
      }
      else
      {
        unsigned int v12 = 0;
        unsigned int v8 = -1;
        do
        {
          unsigned int v13 = v10[1];
          if (v12 <= *v10) {
            unsigned int v12 = *v10;
          }
          if (*v10 < v8) {
            unsigned int v8 = *v10;
          }
          if (v12 <= v13) {
            unsigned int v12 = v10[1];
          }
          if (v13 < v8) {
            unsigned int v8 = v10[1];
          }
          unsigned int v14 = v10[2];
          if (v12 <= v14) {
            unsigned int v12 = v10[2];
          }
          if (v14 < v8) {
            unsigned int v8 = v10[2];
          }
          v10 += *(unsigned int *)(a2 + 52);
          --v11;
        }
        while (v11);
      }
      unsigned int v15 = v10[1];
      if (v12 <= *v10) {
        unsigned int v12 = *v10;
      }
      if (*v10 < v8) {
        unsigned int v8 = *v10;
      }
      if (v12 <= v15) {
        unsigned int v12 = v10[1];
      }
      if (v15 < v8) {
        unsigned int v8 = v10[1];
      }
      unsigned int v16 = v10[2];
      if (v12 <= v16) {
        unsigned int v6 = v10[2];
      }
      else {
        unsigned int v6 = v12;
      }
      if (v16 < v8) {
        unsigned int v8 = v16;
      }
      if (!v8)
      {
        unsigned __int8 v17 = 0;
        unsigned __int8 v19 = 0;
        if (!v6) {
          goto LABEL_41;
        }
        goto LABEL_40;
      }
    }
  }
  unsigned __int8 v17 = 0;
  do
  {
    ++v17;
    BOOL v18 = v8 > 9;
    v8 /= 0xAu;
  }
  while (v18);
  unsigned __int8 v19 = 0;
  if (v6)
  {
    do
    {
LABEL_40:
      ++v19;
      BOOL v18 = v6 > 9;
      v6 /= 0xAu;
    }
    while (v18);
  }
LABEL_41:
  LODWORD(v20) = v17;
  if (v19 > v17) {
    LODWORD(v20) = v19;
  }
  if (v20 <= 1) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = v20;
  }
  v33[0] = v20;
  v33[1] = 0;
  v32[0] = a1;
  v32[1] = v33;
  v41[0] = 0;
  sub_215954574((uint64_t)v31, a1, (unsigned int *)v41, 1u, 1u);
  v41[0] = v32;
  v41[1] = v34;
  v41[2] = a1;
  if (*(_DWORD *)(a2 + 40))
  {
    int v21 = *(_DWORD *)(a2 + 44);
    if (v21)
    {
      int v22 = *(unsigned int **)(a2 + 32);
      int v23 = v21 - 1;
      if (v21 != 1)
      {
        uint64_t v24 = 4 * *(unsigned int *)(a2 + 52);
        do
        {
          sub_215954AAC((uint64_t)v41, v22);
          sub_215954AAC((uint64_t)v41, v22 + 1);
          sub_215954AAC((uint64_t)v41, v22 + 2);
          int v22 = (unsigned int *)((char *)v22 + v24);
          --v23;
        }
        while (v23);
      }
      sub_215954AAC((uint64_t)v41, v22);
      sub_215954AAC((uint64_t)v41, v22 + 1);
      sub_215954AAC((uint64_t)v41, v22 + 2);
    }
  }
  int v5 = v37;
  if (v37)
  {
    int v38 = v37;
LABEL_54:
    operator delete(v5);
  }
  sub_215731D94(a1, (uint64_t)"}", 1);
  sub_215953CEC(v28, a2 + 64);
  sub_215953CEC(v28, a2 + 96);
  sub_215953CEC(v28, a2 + 128);
  sub_215953CEC(v28, a2 + 160);
  int v25 = v29;
  if (v29)
  {
    sub_215731D94(a1, (uint64_t)", ", 2);
    int v25 = v29;
  }
  int v29 = v25 + 1;
  sub_215731D94(a1, *(void *)&v30[v25], *((void *)&v30[v25] + 1));
  sub_215731D94(a1, (uint64_t)" = ", 3);
  sub_21594BD70(a1, (void *)(a2 + 192));
  int v26 = v29;
  if (v29)
  {
    sub_215731D94(a1, (uint64_t)", ", 2);
    int v26 = v29;
  }
  int v29 = v26 + 1;
  sub_215731D94(a1, *(void *)&v30[v26], *((void *)&v30[v26] + 1));
  sub_215731D94(a1, (uint64_t)" = ", 3);
  sub_21594BD70(a1, (void *)(a2 + 216));
  return sub_215731D94(a1, (uint64_t)"}", 1);
}

void sub_21595017C(_Unwind_Exception *exception_object)
{
  int64_t v3 = *(void **)(v1 - 120);
  if (v3)
  {
    *(void *)(v1 - 112) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_21595019C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v140 = *MEMORY[0x263EF8340];
  unint64_t v5 = sub_215CEE350(1uLL);
  sub_215CEC2A8((uint64_t)&v95, v5);
  if (*(_DWORD *)(a1 + 24))
  {
    unint64_t v6 = *(unsigned int *)(a1 + 12);
    uint64_t v7 = v95;
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v96 - v95) >> 2);
    if (v6 <= v8)
    {
      if (v6 < v8) {
        uint64_t v96 = v95 + 12 * v6;
      }
    }
    else
    {
      sub_215954C34((uint64_t)&v95, v6 - v8);
      uint64_t v7 = v95;
      unint64_t v6 = *(unsigned int *)(a1 + 12);
    }
    if (v6) {
      int v9 = 3;
    }
    else {
      int v9 = 0;
    }
    if (v6) {
      uint64_t v10 = 3;
    }
    else {
      uint64_t v10 = 0;
    }
    *(void *)&long long v128 = v7;
    *((void *)&v128 + 1) = (v6 << 32) | 3;
    *(void *)&long long v129 = (v10 << 32) | 1;
    *((void *)&v129 + 1) = __PAIR64__(v9, v6);
    if (v9 * v6 == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    sub_215954F78((_DWORD *)a1, (char **)&v128);
  }
  uint64_t v93 = a2;
  uint64_t v11 = v95;
  uint64_t v12 = v96;
  if (!*(_DWORD *)(a1 + 56)) {
    goto LABEL_49;
  }
  unint64_t v13 = *(unsigned int *)(a1 + 44);
  unsigned int v14 = __dst;
  unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v102 - (unsigned char *)__dst) >> 2);
  if (v13 <= v15)
  {
    if (v13 < v15) {
      BOOL v102 = (char *)__dst + 12 * v13;
    }
  }
  else
  {
    sub_2159551D8((uint64_t)&__dst, v13 - v15);
    unsigned int v14 = __dst;
    LODWORD(v13) = *(_DWORD *)(a1 + 44);
  }
  if (v13) {
    uint64_t v16 = 3;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v16 * v13 == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
LABEL_46:
    abort();
  }
  if (*(_DWORD *)(a1 + 48) != 1)
  {
    if (!*(_DWORD *)(a1 + 40)) {
      goto LABEL_49;
    }
    int v21 = *(_DWORD *)(a1 + 44);
    if (!v21) {
      goto LABEL_49;
    }
    int v22 = *(_DWORD **)(a1 + 32);
    int v23 = v21 - 1;
    if (v23)
    {
      uint64_t v24 = 4 * *(unsigned int *)(a1 + 52);
      do
      {
        *unsigned int v14 = *v22;
        v14[1] = v22[1];
        v14[2] = v22[2];
        int v22 = (_DWORD *)((char *)v22 + v24);
        v14 += v16;
        --v23;
      }
      while (v23);
    }
    *unsigned int v14 = *v22;
    v14[1] = v22[1];
    v14[2] = v22[2];
    int v25 = (char *)__dst;
    uint64_t v26 = v102 - (unsigned char *)__dst;
    if (v102 != __dst) {
      goto LABEL_50;
    }
    goto LABEL_55;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 52);
  uint64_t v18 = *(unsigned int *)(a1 + 40);
  if (v17 != v16 || v17 != v18)
  {
    if (!v18) {
      goto LABEL_49;
    }
    int v27 = *(_DWORD *)(a1 + 44);
    if (!v27) {
      goto LABEL_49;
    }
    uint64_t v28 = *(char **)(a1 + 32);
    size_t v29 = 4 * v18;
    int v30 = v27 - 1;
    if (v27 != 1)
    {
      uint64_t v31 = 4 * v17;
      uint64_t v32 = 4 * v16;
      while (v28
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        memmove(v14, v28, v29);
        v28 += v31;
        unsigned int v14 = (_DWORD *)((char *)v14 + v32);
        if (!--v30) {
          goto LABEL_110;
        }
      }
      goto LABEL_46;
    }
LABEL_110:
    if (!v28
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_46;
    }
    memmove(v14, v28, v29);
    int v25 = (char *)__dst;
    uint64_t v26 = v102 - (unsigned char *)__dst;
    if (v102 != __dst) {
      goto LABEL_50;
    }
LABEL_55:
    if (*(_DWORD *)(a1 + 152) && *(_DWORD *)(a1 + 184))
    {
      sub_2159514DC((uint64_t)&v128, (uint64_t)"normals");
      goto LABEL_61;
    }
    if (*(_DWORD *)(a1 + 88) && *(_DWORD *)(a1 + 120))
    {
      sub_2159514DC((uint64_t)&v128, (uint64_t)"colors");
      goto LABEL_61;
    }
    sub_2159517AC((uint64_t)&v128, &v95, (_DWORD *)(a1 + 128), (_DWORD *)(a1 + 160), v99, &v100, (uint64_t)"normals");
    if (v139
      || (sub_2159517AC((uint64_t)&v128, &v95, (_DWORD *)(a1 + 64), (_DWORD *)(a1 + 96), v97, &v98, (uint64_t)"colors"),
          v139))
    {
      long long __p = v128;
      int v43 = sub_215741BFC(&v112, &v129);
      *(_OWORD *)a3 = __p;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (v122)
      {
        *(unsigned char *)(a3 + 40) = 0;
        int v44 = v115;
        if (v115)
        {
          *(_OWORD *)(a3 + 16) = *(_OWORD *)v43;
          *(void *)(a3 + 32) = *((void *)v43 + 2);
          *((void *)v43 + 1) = 0;
          *((void *)v43 + 2) = 0;
          *(void *)int v43 = 0;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v121)
        {
          uint64_t v45 = v118;
          *(void *)(a3 + 64) = v117;
          *(_OWORD *)(a3 + 48) = v116;
          long long v116 = 0uLL;
          *(void *)(a3 + 72) = v45;
          *(_OWORD *)(a3 + 80) = v119;
          *(void *)(a3 + 96) = v120;
          uint64_t v117 = 0;
          long long v119 = 0uLL;
          uint64_t v120 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 528) = 0;
        if (v44 && SHIBYTE(v114) < 0) {
          operator delete(v112);
        }
        if (!v139) {
          return sub_215956690(&v95);
        }
      }
      else
      {
        *(unsigned char *)(a3 + 528) = 0;
        if (!v139) {
          return sub_215956690(&v95);
        }
      }
LABEL_221:
      if (!v138) {
        return sub_215956690(&v95);
      }
      if (v137)
      {
        if (SHIBYTE(v136) < 0) {
          operator delete((void *)v135);
        }
        if (SHIBYTE(v133) < 0) {
          operator delete((void *)v132);
        }
      }
      if (!v131) {
        return sub_215956690(&v95);
      }
      goto LABEL_103;
    }
    sub_215951AD4((char *)&v128, a1, &v95, 0x64u, (uint64_t)&v103, &v104);
    if (!v139 || (sub_215951AD4((char *)&v128, a1, &v95, 0x65u, (uint64_t)&v105, &v106), !v139))
    {
LABEL_210:
      long long __p = v128;
      int v84 = sub_215741BFC(&v112, &v129);
      *(_OWORD *)a3 = __p;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (v122)
      {
        *(unsigned char *)(a3 + 40) = 0;
        int v85 = v115;
        if (v115)
        {
          *(_OWORD *)(a3 + 16) = *(_OWORD *)v84;
          *(void *)(a3 + 32) = *((void *)v84 + 2);
          *((void *)v84 + 1) = 0;
          *((void *)v84 + 2) = 0;
          *(void *)int v84 = 0;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v121)
        {
          uint64_t v86 = v118;
          *(void *)(a3 + 64) = v117;
          *(_OWORD *)(a3 + 48) = v116;
          long long v116 = 0uLL;
          *(void *)(a3 + 72) = v86;
          *(_OWORD *)(a3 + 80) = v119;
          *(void *)(a3 + 96) = v120;
          uint64_t v117 = 0;
          long long v119 = 0uLL;
          uint64_t v120 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 528) = 0;
        if (v85 && SHIBYTE(v114) < 0) {
          operator delete(v112);
        }
        if (v139) {
          return sub_215956690(&v95);
        }
      }
      else
      {
        *(unsigned char *)(a3 + 528) = 0;
        if (v139) {
          return sub_215956690(&v95);
        }
      }
      goto LABEL_221;
    }
    unsigned int v46 = 102;
    unsigned __int16 v123 = 102;
    uint64_t v48 = v95;
    uint64_t v47 = v96;
    uint64_t v50 = __dst;
    uint64_t v49 = v102;
    *(void *)&long long v109 = &v123;
    p_p = &v109;
    v126.__r_.__value_.__r.__words[0] = (std::string::size_type)&p_p;
    v126.__r_.__value_.__l.__size_ = (std::string::size_type)&v107;
    int v52 = (uint64_t *)(a1 + 200);
    uint64_t v51 = *(void *)(a1 + 200);
    if (v51)
    {
      uint64_t v53 = a1 + 200;
      do
      {
        unsigned int v54 = *(unsigned __int16 *)(v51 + 32);
        BOOL v55 = v54 >= 0x66;
        if (v54 >= 0x66) {
          uint64_t v56 = (uint64_t *)v51;
        }
        else {
          uint64_t v56 = (uint64_t *)(v51 + 8);
        }
        if (v55) {
          uint64_t v53 = v51;
        }
        uint64_t v51 = *v56;
      }
      while (*v56);
      if ((uint64_t *)v53 == v52 || *(unsigned __int16 *)(v53 + 32) > 0x66u)
      {
        unint64_t v57 = 0;
        unsigned int v46 = 102;
      }
      else
      {
        uint64_t v58 = sub_21594BB58((unsigned __int8 *)(v53 + 40));
        if (v59) {
          unint64_t v57 = v58;
        }
        else {
          unint64_t v57 = 0;
        }
        unsigned int v46 = v123;
      }
    }
    else
    {
      unint64_t v57 = 0;
    }
    uint64_t v61 = (uint64_t *)(a1 + 224);
    uint64_t v60 = *(void *)(a1 + 224);
    if (!v60) {
      goto LABEL_162;
    }
    unint64_t v62 = 0xAAAAAAAAAAAAAAABLL * ((v49 - v50) >> 2);
    uint64_t v63 = a1 + 224;
    do
    {
      unsigned int v64 = *(unsigned __int16 *)(v60 + 32);
      BOOL v65 = v64 >= v46;
      if (v64 >= v46) {
        int v66 = (uint64_t *)v60;
      }
      else {
        int v66 = (uint64_t *)(v60 + 8);
      }
      if (v65) {
        uint64_t v63 = v60;
      }
      uint64_t v60 = *v66;
    }
    while (*v66);
    if ((uint64_t *)v63 != v61 && *(unsigned __int16 *)(v63 + 32) <= v46)
    {
      uint64_t v72 = sub_21594BB58((unsigned __int8 *)(v63 + 40));
      if (v73) {
        unint64_t v74 = v72;
      }
      else {
        unint64_t v74 = 0;
      }
      if (v57 && v74) {
        sub_215957AFC();
      }
      if (v57) {
        goto LABEL_163;
      }
      if (v74)
      {
        if (v74 > v62) {
          sub_215957AFC();
        }
        int v108 = 2;
        uint64_t v89 = *v61;
        if (!*v61) {
          goto LABEL_250;
        }
        uint64_t v68 = a1 + 224;
        do
        {
          unsigned int v90 = *(unsigned __int16 *)(v89 + 32);
          BOOL v91 = v90 >= v123;
          if (v90 >= v123) {
            int v92 = (uint64_t *)v89;
          }
          else {
            int v92 = (uint64_t *)(v89 + 8);
          }
          if (v91) {
            uint64_t v68 = v89;
          }
          uint64_t v89 = *v92;
        }
        while (*v92);
        if ((uint64_t *)v68 == v61 || v123 < *(unsigned __int16 *)(v68 + 32)) {
LABEL_250:
        }
          uint64_t v68 = a1 + 224;
        goto LABEL_177;
      }
    }
    else
    {
LABEL_162:
      if (v57)
      {
LABEL_163:
        if (v57 > 0xAAAAAAAAAAAAAAABLL * ((v47 - v48) >> 2)) {
          sub_215957AFC();
        }
        int v108 = 1;
        uint64_t v67 = *v52;
        if (!*v52) {
          goto LABEL_176;
        }
        uint64_t v68 = a1 + 200;
        do
        {
          unsigned int v69 = *(unsigned __int16 *)(v67 + 32);
          BOOL v70 = v69 >= v123;
          if (v69 >= v123) {
            uint64_t v71 = (uint64_t *)v67;
          }
          else {
            uint64_t v71 = (uint64_t *)(v67 + 8);
          }
          if (v70) {
            uint64_t v68 = v67;
          }
          uint64_t v67 = *v71;
        }
        while (*v71);
        if ((uint64_t *)v68 == v52 || v123 < *(unsigned __int16 *)(v68 + 32)) {
LABEL_176:
        }
          uint64_t v68 = a1 + 200;
LABEL_177:
        sub_2159580FC((uint64_t)&v128, (uint64_t)&v126, v68 + 40);
        goto LABEL_189;
      }
    }
    char v139 = 1;
LABEL_189:
    if (v139)
    {
      uint64_t v75 = *(uint64_t **)(a1 + 192);
      if (v75 == v52)
      {
LABEL_200:
        BOOL v80 = *(uint64_t **)(a1 + 216);
        if (v80 == v61) {
LABEL_229:
        }
          sub_2159522E0((uint64_t)&v128, (uint64_t)&v95, v93);
        while (1)
        {
          int v81 = *((unsigned __int16 *)v80 + 16);
          if ((unsigned __int16)(v81 - 103) <= 0xFFFCu) {
            break;
          }
          int v82 = (uint64_t *)v80[1];
          if (v82)
          {
            do
            {
              int v83 = v82;
              int v82 = (uint64_t *)*v82;
            }
            while (v82);
          }
          else
          {
            do
            {
              int v83 = (uint64_t *)v80[2];
              BOOL v79 = *v83 == (void)v80;
              BOOL v80 = v83;
            }
            while (!v79);
          }
          BOOL v80 = v83;
          if (v83 == v61) {
            goto LABEL_229;
          }
        }
        sub_21595204C((uint64_t)&v128, v81);
        *(_OWORD *)a3 = v128;
        *(unsigned char *)(a3 + 16) = 0;
        *(unsigned char *)(a3 + 112) = 0;
        if (!v138)
        {
          *(unsigned char *)(a3 + 528) = 0;
          return sub_215956690(&v95);
        }
        *(unsigned char *)(a3 + 40) = 0;
        int v87 = v131;
        if (v131)
        {
          *(_OWORD *)(a3 + 16) = v129;
          *(void *)(a3 + 32) = v130;
          uint64_t v130 = 0;
          long long v129 = 0uLL;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v137)
        {
          uint64_t v88 = v134;
          *(void *)(a3 + 64) = v133;
          *(_OWORD *)(a3 + 48) = v132;
          long long v132 = 0uLL;
          *(void *)(a3 + 72) = v88;
          *(_OWORD *)(a3 + 80) = v135;
          *(void *)(a3 + 96) = v136;
          uint64_t v133 = 0;
          long long v135 = 0uLL;
          uint64_t v136 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 528) = 0;
        if (!v87) {
          return sub_215956690(&v95);
        }
        goto LABEL_103;
      }
      while (1)
      {
        int v76 = *((unsigned __int16 *)v75 + 16);
        if ((unsigned __int16)(v76 - 103) <= 0xFFFCu) {
          break;
        }
        uint64_t v77 = (uint64_t *)v75[1];
        if (v77)
        {
          do
          {
            uint64_t v78 = v77;
            uint64_t v77 = (uint64_t *)*v77;
          }
          while (v77);
        }
        else
        {
          do
          {
            uint64_t v78 = (uint64_t *)v75[2];
            BOOL v79 = *v78 == (void)v75;
            uint64_t v75 = v78;
          }
          while (!v79);
        }
        uint64_t v75 = v78;
        if (v78 == v52) {
          goto LABEL_200;
        }
      }
      sub_21595204C((uint64_t)&v128, v76);
LABEL_61:
      *(_OWORD *)a3 = v128;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (!v138)
      {
        *(unsigned char *)(a3 + 528) = 0;
        return sub_215956690(&v95);
      }
      *(unsigned char *)(a3 + 40) = 0;
      int v38 = v131;
      if (v131)
      {
        *(_OWORD *)(a3 + 16) = v129;
        *(void *)(a3 + 32) = v130;
        uint64_t v130 = 0;
        long long v129 = 0uLL;
        *(unsigned char *)(a3 + 40) = 1;
      }
      *(unsigned char *)(a3 + 48) = 0;
      *(unsigned char *)(a3 + 104) = 0;
      if (v137)
      {
        uint64_t v39 = v134;
        *(void *)(a3 + 64) = v133;
        *(_OWORD *)(a3 + 48) = v132;
        long long v132 = 0uLL;
        *(void *)(a3 + 72) = v39;
        *(_OWORD *)(a3 + 80) = v135;
        *(void *)(a3 + 96) = v136;
        uint64_t v133 = 0;
        long long v135 = 0uLL;
        uint64_t v136 = 0;
        *(unsigned char *)(a3 + 104) = 1;
      }
      *(unsigned char *)(a3 + 112) = 1;
      *(unsigned char *)(a3 + 528) = 0;
      if (!v38) {
        return sub_215956690(&v95);
      }
LABEL_103:
      if (SHIBYTE(v130) < 0) {
        operator delete((void *)v129);
      }
      return sub_215956690(&v95);
    }
    goto LABEL_210;
  }
  uint64_t v19 = (*(_DWORD *)(a1 + 44) * v16);
  uint64_t v20 = *(const void **)(a1 + 32);
  if (!v19 || v20)
  {
    if (!v19) {
      goto LABEL_49;
    }
  }
  else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    goto LABEL_46;
  }
  memmove(v14, v20, 4 * v19);
LABEL_49:
  int v25 = (char *)__dst;
  uint64_t v26 = v102 - (unsigned char *)__dst;
  if (v102 == __dst) {
    goto LABEL_55;
  }
LABEL_50:
  unint64_t v33 = 0;
  unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 2);
  uint64_t v35 = v26 / 12;
  uint64_t v36 = (unsigned int *)(v25 + 8);
  unint64_t v37 = 1;
  while (1)
  {
    if (v34 <= *(v36 - 2))
    {
      unint64_t v37 = 0;
      goto LABEL_70;
    }
    if (v34 <= *(v36 - 1)) {
      goto LABEL_70;
    }
    if (v34 <= *v36) {
      break;
    }
    ++v33;
    v36 += 3;
    if (v35 == v33) {
      goto LABEL_55;
    }
  }
  unint64_t v37 = 2;
LABEL_70:
  int v125 = 0;
  sub_2158C2F8C(v124, "Mesh face ");
  std::to_string(&v126, v33);
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = &v126;
  uint64_t v112 = v124;
  uint64_t v113 = &v126;
  uint64_t v114 = &v126;
  if (v125 == -1) {
    sub_215742D4C();
  }
  p_p = &__p;
  ((void (*)(long long **, _DWORD *))off_26C6725D8[v125])(&p_p, v124);
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v126.__r_.__value_.__l.__data_);
  }
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = " coordinate ";
  uint64_t v112 = v124;
  uint64_t v113 = (std::string *)" coordinate ";
  uint64_t v114 = " coordinate ";
  if (v125 == -1) {
    sub_215742D4C();
  }
  v126.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
  ((void (*)(std::string *, _DWORD *))off_26C672608[v125])(&v126, v124);
  std::to_string(&v126, v37);
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = &v126;
  uint64_t v112 = v124;
  uint64_t v113 = &v126;
  uint64_t v114 = &v126;
  if (v125 == -1) {
    sub_215742D4C();
  }
  p_p = &__p;
  ((void (*)(long long **, _DWORD *))off_26C6725D8[v125])(&p_p, v124);
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v126.__r_.__value_.__l.__data_);
  }
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = " refers to a vertex which does not exist in the mesh (has only ";
  uint64_t v112 = v124;
  uint64_t v113 = (std::string *)" refers to a vertex which does not exist in the mesh (has only ";
  uint64_t v114 = " refers to a vertex which does not exist in the mesh (has only ";
  if (v125 == -1) {
    sub_215742D4C();
  }
  v126.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
  ((void (*)(std::string *, _DWORD *))off_26C6726C0[v125])(&v126, v124);
  std::to_string(&v126, v34);
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = &v126;
  uint64_t v112 = v124;
  uint64_t v113 = &v126;
  uint64_t v114 = &v126;
  if (v125 == -1) {
    sub_215742D4C();
  }
  p_p = &__p;
  ((void (*)(long long **, _DWORD *))off_26C6725D8[v125])(&p_p, v124);
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v126.__r_.__value_.__l.__data_);
  }
  *(void *)&long long __p = v124;
  *((void *)&__p + 1) = " vertices)";
  uint64_t v112 = v124;
  uint64_t v113 = (std::string *)" vertices)";
  uint64_t v114 = " vertices)";
  if (v125 == -1) {
    sub_215742D4C();
  }
  v126.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
  ((void (*)(std::string *, _DWORD *))off_26C6726A8[v125])(&v126, v124);
  if (v125 == -1) {
    sub_215742D4C();
  }
  *(void *)&long long __p = &v126;
  ((void (*)(long long *__return_ptr, long long *, _DWORD *))off_26C6725F0[v125])(&v109, &__p, v124);
  if (v125 != -1) {
    ((void (*)(long long *, _DWORD *))off_26C6725A8[v125])(&__p, v124);
  }
  if (SHIBYTE(v110) < 0)
  {
    sub_215738B0C(&__p, (void *)v109, *((unint64_t *)&v109 + 1));
  }
  else
  {
    long long __p = v109;
    uint64_t v112 = v110;
  }
  LOBYTE(v113) = 1;
  LOBYTE(v114) = 0;
  BYTE8(v119) = 0;
  LOBYTE(v120) = 1;
  sub_21573FCF8(0x20u, &__p, (uint64_t)&v128);
  if ((_BYTE)v120)
  {
    if (!BYTE8(v119)) {
      goto LABEL_92;
    }
    if (SBYTE7(v119) < 0)
    {
      operator delete(v117);
      if ((SBYTE7(v116) & 0x80000000) == 0)
      {
LABEL_92:
        if (!(_BYTE)v113) {
          goto LABEL_95;
        }
LABEL_93:
        if (SHIBYTE(v112) < 0) {
          operator delete((void *)__p);
        }
        goto LABEL_95;
      }
    }
    else if ((SBYTE7(v116) & 0x80000000) == 0)
    {
      goto LABEL_92;
    }
    operator delete(v114);
    if (!(_BYTE)v113) {
      goto LABEL_95;
    }
    goto LABEL_93;
  }
LABEL_95:
  if (SHIBYTE(v110) < 0) {
    operator delete((void *)v109);
  }
  *(_OWORD *)a3 = v128;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v138)
  {
    *(unsigned char *)(a3 + 528) = 0;
    return sub_215956690(&v95);
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v40 = v131;
  if (v131)
  {
    *(_OWORD *)(a3 + 16) = v129;
    *(void *)(a3 + 32) = v130;
    uint64_t v130 = 0;
    long long v129 = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v137)
  {
    uint64_t v41 = v134;
    *(void *)(a3 + 64) = v133;
    *(_OWORD *)(a3 + 48) = v132;
    long long v132 = 0uLL;
    *(void *)(a3 + 72) = v41;
    *(_OWORD *)(a3 + 80) = v135;
    *(void *)(a3 + 96) = v136;
    uint64_t v133 = 0;
    long long v135 = 0uLL;
    uint64_t v136 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 528) = 0;
  if (v40) {
    goto LABEL_103;
  }
  return sub_215956690(&v95);
}

void sub_2159513B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (SLOBYTE(STACK[0x247]) < 0) {
    operator delete((void *)STACK[0x230]);
  }
  sub_215956690((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2159514DC(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  int v17 = 0;
  sub_2157FD010(v16, "Mesh has both vertex and face ");
  if (a2)
  {
    uint64_t v18 = (void **)v16;
    uint64_t v19 = (const char *)&v15;
    uint64_t v20 = v16;
    int v21 = (const char *)&v15;
    int v22 = (const char *)&v15;
    if (v17 != -1)
    {
      int v23 = &v18;
      ((void (*)(void **, _DWORD *))off_26C672638[v17])(&v23, v16);
      goto LABEL_6;
    }
LABEL_25:
    sub_215742D4C();
  }
  uint64_t v18 = (void **)v16;
  uint64_t v19 = "nullptr";
  uint64_t v20 = v16;
  int v21 = "nullptr";
  int v22 = "nullptr";
  if (v17 == -1) {
    goto LABEL_25;
  }
  int v23 = &v18;
  ((void (*)(void **, _DWORD *))off_26C672620[v17])(&v23, v16);
LABEL_6:
  uint64_t v18 = (void **)v16;
  uint64_t v19 = " but may only have one of the two";
  uint64_t v20 = v16;
  int v21 = " but may only have one of the two";
  int v22 = " but may only have one of the two";
  if (v17 == -1) {
    sub_215742D4C();
  }
  int v23 = &v18;
  ((void (*)(void **, _DWORD *))off_26C6726F0[v17])(&v23, v16);
  if (v17 == -1) {
    sub_215742D4C();
  }
  uint64_t v18 = &v23;
  ((void (*)(void **__return_ptr, void ***, _DWORD *))off_26C6725F0[v17])(v4, &v18, v16);
  if (v17 != -1) {
    ((void (*)(void ***, _DWORD *))off_26C6725A8[v17])(&v18, v16);
  }
  if (SHIBYTE(v5) < 0)
  {
    sub_215738B0C(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v4;
    uint64_t v7 = v5;
  }
  char v8 = 1;
  LOBYTE(v9) = 0;
  char v13 = 0;
  char v14 = 1;
  sub_21573FCF8(0x21u, (long long *)__p, a1);
  if (v14)
  {
    if (!v13) {
      goto LABEL_17;
    }
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_17:
        if (!v8) {
          goto LABEL_20;
        }
LABEL_18:
        if (SHIBYTE(v7) < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_20;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_17;
    }
    operator delete(v9);
    if (!v8) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
LABEL_20:
  if (SHIBYTE(v5) < 0) {
    operator delete(v4[0]);
  }
}

void sub_21595172C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595175C(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_215951770(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_215951784(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_215951798(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2159517AC(uint64_t a1, void *a2, _DWORD *a3, _DWORD *a4, uint64_t *a5, int *a6, uint64_t a7)
{
  if (a3[6])
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 2);
    unint64_t v12 = a3[3];
    if (v11 == v12)
    {
      uint64_t v13 = *a5;
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((a5[1] - *a5) >> 2);
      if (v11 <= v14)
      {
        if (v11 < v14) {
          a5[1] = v13 + 4 * ((uint64_t)(a2[1] - *a2) >> 2);
        }
      }
      else
      {
        sub_215954C34((uint64_t)a5, v11 - v14);
        uint64_t v13 = *a5;
        unint64_t v11 = a3[3];
        LODWORD(v12) = a3[3];
      }
      if (v12) {
        int v20 = 3;
      }
      else {
        int v20 = 0;
      }
      if (v12) {
        uint64_t v21 = 3;
      }
      else {
        uint64_t v21 = 0;
      }
      *(void *)&long long v25 = v13;
      *((void *)&v25 + 1) = (v11 << 32) | 3;
      v26[0] = (void *)((v21 << 32) | 1);
      v26[1] = (void *)__PAIR64__(v20, v12);
      if (v20 * v12 != -1
        || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        sub_215954F78(a3, (char **)&v25);
        int v22 = 1;
LABEL_43:
        *a6 = v22;
        goto LABEL_44;
      }
      goto LABEL_45;
    }
    sub_215956C5C((uint64_t)&v25, (uint64_t)"vertices", a7, v12, v11);
    *(_OWORD *)a1 = v25;
    sub_215741BFC((unsigned char *)(a1 + 16), (long long *)v26);
  }
  else
  {
    if (!a4[6])
    {
LABEL_44:
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 120) = 0;
      return;
    }
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[15] - a2[14]) >> 2);
    unint64_t v17 = a4[3];
    if (v16 == v17)
    {
      uint64_t v18 = *a5;
      unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((a5[1] - *a5) >> 2);
      if (v16 <= v19)
      {
        if (v16 < v19) {
          a5[1] = v18 + 4 * ((uint64_t)(a2[15] - a2[14]) >> 2);
        }
      }
      else
      {
        sub_215954C34((uint64_t)a5, v16 - v19);
        uint64_t v18 = *a5;
        unint64_t v16 = a4[3];
        LODWORD(v17) = a4[3];
      }
      if (v17) {
        int v23 = 3;
      }
      else {
        int v23 = 0;
      }
      if (v17) {
        uint64_t v24 = 3;
      }
      else {
        uint64_t v24 = 0;
      }
      *(void *)&long long v25 = v18;
      *((void *)&v25 + 1) = (v16 << 32) | 3;
      v26[0] = (void *)((v24 << 32) | 1);
      v26[1] = (void *)__PAIR64__(v23, v17);
      if (v23 * v17 != -1
        || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
      {
        sub_215954F78(a4, (char **)&v25);
        int v22 = 2;
        goto LABEL_43;
      }
LABEL_45:
      abort();
    }
    sub_215956C5C((uint64_t)&v25, (uint64_t)"faces", a7, v17, v16);
    *(_OWORD *)a1 = v25;
    sub_215741BFC((unsigned char *)(a1 + 16), (long long *)v26);
  }
  *(unsigned char *)(a1 + 120) = 1;
  if (v34)
  {
    if (v33)
    {
      if (v32 < 0) {
        operator delete(__p);
      }
      if (v30 < 0) {
        operator delete(v29);
      }
    }
    if (v28 && v27 < 0) {
      operator delete(v26[0]);
    }
  }
}

void sub_215951AAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215951AC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_215951AD4(char *result, uint64_t a2, uint64_t *a3, unsigned int a4, uint64_t a5, _DWORD *a6)
{
  uint64_t v8 = (uint64_t)result;
  unsigned __int16 v43 = a4;
  uint64_t v10 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v12 = a3[14];
  uint64_t v11 = a3[15];
  uint64_t v42 = &v43;
  v40[1] = a5;
  uint64_t v41 = &v42;
  v40[0] = &v41;
  unint64_t v14 = (unsigned __int8 *)(a2 + 200);
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13) {
    goto LABEL_12;
  }
  uint64_t v15 = a2 + 200;
  do
  {
    unsigned int v16 = *(unsigned __int16 *)(v13 + 32);
    BOOL v17 = v16 >= a4;
    if (v16 >= a4) {
      uint64_t v18 = (uint64_t *)v13;
    }
    else {
      uint64_t v18 = (uint64_t *)(v13 + 8);
    }
    if (v17) {
      uint64_t v15 = v13;
    }
    uint64_t v13 = *v18;
  }
  while (*v18);
  if ((unsigned __int8 *)v15 != v14 && *(unsigned __int16 *)(v15 + 32) <= a4)
  {
    uint64_t result = (char *)sub_21594BB58((unsigned __int8 *)(v15 + 40));
    if (v29) {
      unint64_t v19 = (unint64_t)result;
    }
    else {
      unint64_t v19 = 0;
    }
    a4 = v43;
    uint64_t v30 = *(void *)(a2 + 224);
    uint64_t v21 = (unsigned __int8 *)(a2 + 224);
    uint64_t v20 = v30;
    if (!v30) {
      goto LABEL_33;
    }
  }
  else
  {
LABEL_12:
    unint64_t v19 = 0;
    uint64_t v21 = (unsigned __int8 *)(a2 + 224);
    uint64_t v20 = *(void *)(a2 + 224);
    if (!v20) {
      goto LABEL_33;
    }
  }
  unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v11 - v12) >> 2);
  int v23 = v21;
  do
  {
    unsigned int v24 = *(unsigned __int16 *)(v20 + 32);
    BOOL v25 = v24 >= a4;
    if (v24 >= a4) {
      uint64_t v26 = (uint64_t *)v20;
    }
    else {
      uint64_t v26 = (uint64_t *)(v20 + 8);
    }
    if (v25) {
      int v23 = (unsigned __int8 *)v20;
    }
    uint64_t v20 = *v26;
  }
  while (*v26);
  if (v23 == v21 || *((unsigned __int16 *)v23 + 16) > a4)
  {
LABEL_33:
    if (!v19) {
      goto LABEL_53;
    }
LABEL_34:
    if (v19 > 0xAAAAAAAAAAAAAAABLL * ((v9 - v10) >> 2)) {
      sub_215957AFC();
    }
    *a6 = 1;
    uint64_t v31 = *(void *)v14;
    if (!*(void *)v14) {
      goto LABEL_47;
    }
    char v32 = v14;
    do
    {
      unsigned int v33 = *(unsigned __int16 *)(v31 + 32);
      BOOL v34 = v33 >= v43;
      if (v33 >= v43) {
        uint64_t v35 = (uint64_t *)v31;
      }
      else {
        uint64_t v35 = (uint64_t *)(v31 + 8);
      }
      if (v34) {
        char v32 = (unsigned __int8 *)v31;
      }
      uint64_t v31 = *v35;
    }
    while (*v35);
    if (v32 == v14 || v43 < *((unsigned __int16 *)v32 + 16)) {
LABEL_47:
    }
      char v32 = v14;
    return sub_2159577C8(v8, (uint64_t)v40, (uint64_t)(v32 + 40));
  }
  uint64_t result = (char *)sub_21594BB58(v23 + 40);
  if (v27) {
    char v28 = result;
  }
  else {
    char v28 = 0;
  }
  if (v19 && v28) {
    sub_215957AFC();
  }
  if (v19) {
    goto LABEL_34;
  }
  if (v28)
  {
    if ((unint64_t)v28 > v22) {
      sub_215957AFC();
    }
    *a6 = 2;
    uint64_t v36 = *(void *)v21;
    if (!*(void *)v21) {
      goto LABEL_66;
    }
    char v32 = v21;
    do
    {
      unsigned int v37 = *(unsigned __int16 *)(v36 + 32);
      BOOL v38 = v37 >= v43;
      if (v37 >= v43) {
        uint64_t v39 = (uint64_t *)v36;
      }
      else {
        uint64_t v39 = (uint64_t *)(v36 + 8);
      }
      if (v38) {
        char v32 = (unsigned __int8 *)v36;
      }
      uint64_t v36 = *v39;
    }
    while (*v39);
    if (v32 == v21 || v43 < *((unsigned __int16 *)v32 + 16)) {
LABEL_66:
    }
      char v32 = v21;
    return sub_2159577C8(v8, (uint64_t)v40, (uint64_t)(v32 + 40));
  }
LABEL_53:
  *(unsigned char *)(v8 + 120) = 1;
  return result;
}

void sub_215952008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595204C(uint64_t a1, int a2)
{
  int v16 = 0;
  sub_21595659C(v15, "Mesh has labels of unsupported type '");
  std::to_string(&v17, a2);
  unint64_t v19 = (std::string *)v15;
  uint64_t v20 = &v17;
  uint64_t v21 = v15;
  unint64_t v22 = &v17;
  int v23 = &v17;
  if (v16 == -1) {
    sub_215742D4C();
  }
  uint64_t v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  unint64_t v19 = (std::string *)v15;
  uint64_t v20 = (std::string *)"'";
  uint64_t v21 = v15;
  unint64_t v22 = (std::string *)"'";
  int v23 = (std::string *)"'";
  if (v16 == -1) {
    sub_215742D4C();
  }
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_26C6725C0[v16])(&v17, v15);
  if (v16 == -1) {
    sub_215742D4C();
  }
  unint64_t v19 = &v17;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C6725F0[v16])(v4, &v19, v15);
  if (v16 != -1) {
    ((void (*)(std::string **, _DWORD *))off_26C6725A8[v16])(&v19, v15);
  }
  if (SHIBYTE(v5) < 0)
  {
    sub_215738B0C(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v4;
    uint64_t v7 = v5;
  }
  char v8 = 1;
  LOBYTE(v9) = 0;
  char v13 = 0;
  char v14 = 1;
  sub_21573FCF8(0x21u, (long long *)__p, a1);
  if (v14)
  {
    if (!v13) {
      goto LABEL_15;
    }
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        if (!v8) {
          goto LABEL_18;
        }
LABEL_16:
        if (SHIBYTE(v7) < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_18;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete(v9);
    if (!v8) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_18:
  if (SHIBYTE(v5) < 0) {
    operator delete(v4[0]);
  }
}

void sub_21595226C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595229C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2159522BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    sub_215742CF0((uint64_t)&a26);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2159522ACLL);
}

void sub_2159522E0(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a3 + 384))
  {
    uint64_t v21 = &unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v16) = info.numer;
      LODWORD(v17) = info.denom;
      *(double *)&qword_267890880 = (double)v16 / (double)v17;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v22 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    uint64_t v23 = 2;
    LOBYTE(v24) = 0;
    char v26 = 0;
    LOBYTE(v27) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v31 = 0;
    LOBYTE(v32) = 0;
    char v36 = 0;
    v37[0] = 0;
    v37[24] = 0;
    sub_2159586FC();
  }
  if (*((unsigned char *)a3 + 168))
  {
    mach_timebase_info v4 = (mach_timebase_info)*((void *)a3 + 19);
    uint64_t v5 = *((void *)a3 + 20);
    if (*((unsigned char *)a3 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    mach_timebase_info info = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v8 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&v22);
      LODWORD(v18) = v22.numer;
      LODWORD(v19) = v22.denom;
      *(double *)&qword_267890880 = (double)v18 / (double)v19;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v4 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v8);
    LOBYTE(v5) = 2;
    if (*((unsigned char *)a3 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a3, 1000000000);
      int v6 = *((unsigned __int8 *)a3 + 24);
      mach_timebase_info v22 = v4;
      LOBYTE(v23) = v5;
      LOBYTE(v24) = 0;
      char v26 = 0;
      if (v6)
      {
        if (*((char *)a3 + 23) < 0)
        {
          sub_215738B0C(&v24, *(void **)a3, *((void *)a3 + 1));
        }
        else
        {
          long long v24 = *a3;
          uint64_t v25 = *((void *)a3 + 2);
        }
        char v26 = 1;
        LOBYTE(v27) = 0;
        char v29 = 0;
        if (*((unsigned char *)a3 + 120))
        {
LABEL_23:
          if (*((char *)a3 + 119) < 0)
          {
            sub_215738B0C(&v27, *((void **)a3 + 12), *((void *)a3 + 13));
          }
          else
          {
            long long v27 = a3[6];
            uint64_t v28 = *((void *)a3 + 14);
          }
          char v29 = 1;
          LOBYTE(v30) = 0;
          char v31 = 0;
          if (!*((unsigned char *)a3 + 144))
          {
LABEL_15:
            LOBYTE(v32) = 0;
            char v36 = 0;
            if (*((unsigned char *)a3 + 80))
            {
              if (*((char *)a3 + 55) < 0)
              {
                sub_215738B0C(&v32, *((void **)a3 + 4), *((void *)a3 + 5));
              }
              else
              {
                long long v32 = a3[2];
                uint64_t v33 = *((void *)a3 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v34 = _X0;
              uint64_t v35 = 0;
              char v36 = 1;
            }
            sub_215746DAC((uint64_t)v37, (uint64_t)(a3 + 11));
            sub_2159586FC();
          }
LABEL_14:
          long long v30 = a3[8];
          char v31 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v30) = 0;
        char v31 = 0;
        if (!*((unsigned char *)a3 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v27) = 0;
      char v29 = 0;
      if (*((unsigned char *)a3 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info v22 = v4;
  LOBYTE(v23) = v5;
  LOBYTE(v24) = 0;
  char v26 = 0;
  goto LABEL_12;
}

void sub_2159526FC(_Unwind_Exception *a1)
{
}

void sub_215952714(_Unwind_Exception *a1)
{
}

void sub_21595272C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  if (a25)
  {
    if (a24 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2159527F8(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  mach_timebase_info v4 = (const void *)*((void *)a1 + 53);
  uint64_t v5 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6728B0, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_57:
      uint64_t v82 = 0;
      int v83 = 0;
      goto LABEL_58;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_57;
  }
LABEL_9:
  uint64_t v7 = *((void *)a1 + 53);
  uint64_t v8 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v82 = v7;
  int v83 = v8;
  if (!v7)
  {
LABEL_58:
    uint64_t v41 = sub_215AB5250(7u);
    uint64_t v42 = v41;
    if (v41[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v41, *((void *)v41 + 1));
    }
    else
    {
      long long v43 = *(_OWORD *)v41;
      __dst.__r_.__value_.__r.__words[2] = *((void *)v41 + 2);
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v43;
    }
    int v86 = *((_DWORD *)v42 + 6);
    sub_2157C3E6C(&v81, (uint64_t)&__dst, 1uLL);
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v78, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v78 = *a1;
      uint64_t v79 = *((void *)a1 + 2);
    }
    int v80 = *((_DWORD *)a1 + 6);
    uint64_t v75 = operator new(0x20uLL);
    long long v76 = xmmword_215E9AB80;
    strcpy((char *)v75, "cannot return data as VZMesh");
    char v77 = 1;
    sub_215964570(&v81, (uint64_t)&v78, (uint64_t)&v75);
  }
  uint64_t v9 = *(uint64_t **)(v7 + 8);
  *(void *)uint64_t v63 = 0;
  *(_OWORD *)&v63[8] = xmmword_215E99670;
  *(void *)&v63[24] = 0;
  *(void *)unsigned int v64 = 0;
  *(_OWORD *)&v64[8] = xmmword_215E99670;
  *(void *)&v64[24] = 0;
  *(void *)BOOL v65 = 0;
  *(_OWORD *)&v65[8] = xmmword_215E99670;
  *(void *)&v65[24] = 0;
  *(void *)int v66 = 0;
  *(_OWORD *)&v66[8] = xmmword_215E99670;
  *(void *)&v66[24] = 0;
  *(void *)uint64_t v67 = 0;
  *(_OWORD *)&v67[8] = xmmword_215E99670;
  *(void *)&v67[24] = 0;
  *(void *)uint64_t v68 = 0;
  *(_OWORD *)&v68[8] = xmmword_215E99670;
  BOOL v70 = 0;
  uint64_t v71 = 0;
  *(void *)&v68[24] = 0;
  unsigned int v69 = &v70;
  char v73 = 0;
  uint64_t v74 = 0;
  uint64_t v72 = &v73;
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  if (*v9 != v10)
  {
    uint64_t v12 = (v10 - v11) >> 2;
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * v12;
    if (-1431655765 * v12) {
      int v14 = 3;
    }
    else {
      int v14 = 0;
    }
    if (-1431655765 * v12) {
      uint64_t v15 = 3;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v14 * v13 == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    *(void *)uint64_t v63 = v11;
    *(void *)&v63[8] = (v13 << 32) | 3;
    *(void *)&v63[16] = (v15 << 32) | 1;
    *(_DWORD *)&v63[24] = v13;
    *(_DWORD *)&v63[28] = v14;
  }
  uint64_t v17 = v9[14];
  uint64_t v16 = v9[15];
  if (v17 != v16)
  {
    uint64_t v18 = (v16 - v17) >> 2;
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * v18;
    if (-1431655765 * v18) {
      int v20 = 3;
    }
    else {
      int v20 = 0;
    }
    if (-1431655765 * v18) {
      uint64_t v21 = 3;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v20 * v19 == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    *(void *)unsigned int v64 = v17;
    *(void *)&v64[8] = (v19 << 32) | 3;
    *(void *)&v64[16] = (v21 << 32) | 1;
    *(_DWORD *)&v64[24] = v19;
    *(_DWORD *)&v64[28] = v20;
  }
  uint64_t v22 = v9[9];
  uint64_t v23 = v9[10];
  if (v22 != v23) {
    sub_21594DDD8(v22, v23, *((_DWORD *)v9 + 26), (uint64_t)v67, (uint64_t)v68, (uint64_t)"normals");
  }
  uint64_t v24 = v9[4];
  uint64_t v25 = v9[5];
  if (v24 != v25) {
    sub_21594DDD8(v24, v25, *((_DWORD *)v9 + 16), (uint64_t)v65, (uint64_t)v66, (uint64_t)"colors");
  }
  char v26 = (uint64_t *)v9[30];
  uint64_t v27 = v9[31];
  if (v26 != (uint64_t *)v27) {
    sub_21594DFD0((uint64_t *)v63, v26, v27, *((_DWORD *)v9 + 68), 0x64u);
  }
  uint64_t v28 = (uint64_t *)v9[35];
  uint64_t v29 = v9[36];
  if (v28 != (uint64_t *)v29) {
    sub_21594DFD0((uint64_t *)v63, v28, v29, *((_DWORD *)v9 + 78), 0x65u);
  }
  long long v30 = (uint64_t *)v9[40];
  char v31 = (uint64_t *)v9[41];
  if (v30 != v31)
  {
    int v32 = *((_DWORD *)v9 + 88);
    __int16 v84 = 102;
    if (v32 == 2)
    {
      if (v30
        || !v31
        || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        uint64_t v33 = (uint64_t *)((char *)v31 - (char *)v30);
        int v44 = v73;
        uint64_t v45 = &v73;
        char v36 = &v73;
        if (v73)
        {
          while (1)
          {
            while (1)
            {
              char v36 = (uint64_t **)v44;
              unsigned int v46 = *((unsigned __int16 *)v44 + 16);
              if (v46 < 0x67) {
                break;
              }
              int v44 = *v36;
              uint64_t v45 = v36;
              if (!*v36) {
                goto LABEL_75;
              }
            }
            if (v46 == 102) {
              goto LABEL_79;
            }
            int v44 = v36[1];
            if (!v44)
            {
              uint64_t v45 = v36 + 1;
              break;
            }
          }
        }
LABEL_75:
        uint64_t v38 = operator new(0x40uLL);
        v38[16] = 102;
        *((void *)v38 + 6) = 0;
        *((void *)v38 + 7) = 0;
        *((void *)v38 + 5) = 0;
        *(void *)uint64_t v38 = 0;
        *((void *)v38 + 1) = 0;
        *((void *)v38 + 2) = v36;
        std::string *v45 = (uint64_t *)v38;
        uint64_t v47 = (uint64_t *)v38;
        if (*v72)
        {
          uint64_t v72 = (uint64_t **)*v72;
          uint64_t v47 = *v45;
        }
        sub_21573B048(v73, v47);
        int v40 = &v74;
        goto LABEL_78;
      }
    }
    else
    {
      if (v32 != 1)
      {
        __cxa_allocate_exception(0x10uLL);
        sub_2159539A4();
      }
      if (v30
        || !v31
        || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        uint64_t v33 = (uint64_t *)((char *)v31 - (char *)v30);
        uint64_t v34 = v70;
        uint64_t v35 = &v70;
        char v36 = &v70;
        if (v70)
        {
          while (1)
          {
            while (1)
            {
              char v36 = (uint64_t **)v34;
              unsigned int v37 = *((unsigned __int16 *)v34 + 16);
              if (v37 < 0x67) {
                break;
              }
              uint64_t v34 = *v36;
              uint64_t v35 = v36;
              if (!*v36) {
                goto LABEL_53;
              }
            }
            if (v37 == 102) {
              goto LABEL_79;
            }
            uint64_t v34 = v36[1];
            if (!v34)
            {
              uint64_t v35 = v36 + 1;
              break;
            }
          }
        }
LABEL_53:
        uint64_t v38 = operator new(0x40uLL);
        v38[16] = 102;
        *((void *)v38 + 6) = 0;
        *((void *)v38 + 7) = 0;
        *((void *)v38 + 5) = 0;
        *(void *)uint64_t v38 = 0;
        *((void *)v38 + 1) = 0;
        *((void *)v38 + 2) = v36;
        *uint64_t v35 = (uint64_t *)v38;
        uint64_t v39 = (uint64_t *)v38;
        if (*v69)
        {
          unsigned int v69 = (uint64_t **)*v69;
          uint64_t v39 = *v35;
        }
        sub_21573B048(v70, v39);
        int v40 = &v71;
LABEL_78:
        ++*v40;
        char v36 = (uint64_t **)v38;
LABEL_79:
        *((unsigned char *)v36 + 40) = 11;
        v36[6] = v33;
        v36[7] = v30;
        goto LABEL_80;
      }
    }
    abort();
  }
LABEL_80:
  long long v48 = *(_OWORD *)&v67[16];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)v67;
  *(_OWORD *)(a2 + 144) = v48;
  long long v49 = *(_OWORD *)&v68[16];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)v68;
  *(_OWORD *)(a2 + 176) = v49;
  long long v50 = *(_OWORD *)&v65[16];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)v65;
  *(_OWORD *)(a2 + 80) = v50;
  long long v51 = *(_OWORD *)&v66[16];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)v66;
  *(_OWORD *)(a2 + 112) = v51;
  long long v52 = *(_OWORD *)&v63[16];
  *(_OWORD *)a2 = *(_OWORD *)v63;
  *(_OWORD *)(a2 + 16) = v52;
  long long v53 = *(_OWORD *)&v64[16];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)v64;
  *(_OWORD *)(a2 + 48) = v53;
  BOOL v55 = v69;
  unsigned int v54 = v70;
  *(void *)(a2 + 200) = v70;
  uint64_t v56 = a2 + 200;
  *(void *)(a2 + 192) = v55;
  uint64_t v57 = v71;
  *(void *)(a2 + 208) = v71;
  if (v57)
  {
    v54[2] = v56;
    unsigned int v69 = &v70;
    BOOL v70 = 0;
    uint64_t v71 = 0;
  }
  else
  {
    *(void *)(a2 + 192) = v56;
  }
  char v59 = v72;
  uint64_t v58 = v73;
  *(void *)(a2 + 224) = v73;
  uint64_t v60 = a2 + 224;
  *(void *)(a2 + 216) = v59;
  uint64_t v61 = v74;
  *(void *)(a2 + 232) = v74;
  if (v61)
  {
    v58[2] = v60;
    uint64_t v58 = 0;
    uint64_t v72 = &v73;
    char v73 = 0;
    uint64_t v74 = 0;
  }
  else
  {
    *(void *)(a2 + 216) = v60;
  }
  *(unsigned char *)(a2 + 240) = 1;
  sub_215798700((uint64_t)&v72, v58);
  sub_215798700((uint64_t)&v69, v70);
  unint64_t v62 = v83;
  if (v83)
  {
    if (!atomic_fetch_add(&v83->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
}

void sub_215953108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45)
{
  if (*(char *)(v47 - 121) < 0) {
    operator delete(*(void **)(v47 - 144));
  }
  if (*(char *)(v47 - 201) < 0)
  {
    operator delete(*(void **)(v47 - 224));
    if ((v46 & 1) == 0)
    {
LABEL_8:
      sub_21594E2C8((uint64_t)&a9);
      sub_215733368(v47 - 168);
      _Unwind_Resume(a1);
    }
  }
  else if (!v46)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v45);
  goto LABEL_8;
}

uint64_t sub_215953208(uint64_t a1, const char *a2)
{
  int v5 = 0;
  sub_21574F544(v4, "TriMeshData ");
  if (*(void *)a2)
  {
    BOOL v6 = (void **)v4;
    uint64_t v7 = a2;
    uint64_t v8 = v4;
    uint64_t v9 = a2;
    uint64_t v10 = a2;
    if (v5 != -1)
    {
      uint64_t v11 = &v6;
      ((void (*)(void **, _DWORD *))off_26C672638[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_11:
    sub_215742D4C();
  }
  BOOL v6 = (void **)v4;
  uint64_t v7 = "nullptr";
  uint64_t v8 = v4;
  uint64_t v9 = "nullptr";
  uint64_t v10 = "nullptr";
  if (v5 == -1) {
    goto LABEL_11;
  }
  uint64_t v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C672620[v5])(&v11, v4);
LABEL_6:
  BOOL v6 = (void **)v4;
  uint64_t v7 = " must specify PerVertex or PerFace";
  uint64_t v8 = v4;
  uint64_t v9 = " must specify PerVertex or PerFace";
  uint64_t v10 = " must specify PerVertex or PerFace";
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C672650[v5])(&v11, v4);
  if (v5 == -1) {
    sub_215742D4C();
  }
  BOOL v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C6725F0[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C6725A8[v5])(&v6, v4);
  }
  return result;
}

void sub_215953388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21595339C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2159533B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2159533C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_DWORD *sub_2159533D8(_DWORD ***a1)
{
  return sub_2157D02BC(**a1, (char *)(*a1)[1]);
}

void sub_2159533E4(uint64_t a1, uint64_t a2)
{
}

void sub_2159533F4(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  int64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)int v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  int v5 = __p;
  BOOL v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    int v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6725A8[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2159535AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2159535F0(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2159536EC((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2159536E4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2159536EC(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      int v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  int v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  int v14 = (void **)*a1;
  unint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2159538EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215953900(std::string *a1, uint64_t *a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  v4[0] = "TriMeshData label field ";
  v4[1] = 24;
  uint64_t v2 = *((unsigned __int8 *)a2 + 23);
  if ((v2 & 0x80u) == 0) {
    unint64_t v3 = a2;
  }
  else {
    unint64_t v3 = (uint64_t *)*a2;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = a2[1];
  }
  _OWORD v4[2] = v3;
  v4[3] = v2;
  v4[4] = " must specify PerVertex or PerFace";
  v4[5] = 34;
  sub_2157430CC((uint64_t)v4, (uint64_t)&v5, 0, 0, a1);
}

void sub_2159539A4()
{
  int v0 = 0;
  sub_215953A60();
}

void sub_215953A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215953A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215953A60()
{
}

void sub_215953C84(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215953CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215953CEC(int **a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  int v5 = **a1;
  if (v5)
  {
    sub_215731D94(a1[1], (uint64_t)", ", 2);
    unint64_t v4 = *a1;
    int v5 = **a1;
  }
  size_t v7 = a1[1];
  unint64_t v6 = a1[2];
  int *v4 = v5 + 1;
  sub_215731D94(v7, *(void *)&v6[4 * v5], *(void *)&v6[4 * v5 + 2]);
  sub_215731D94(v7, (uint64_t)" = ", 3);
  v37[0] = 3;
  v37[1] = 0x1000000008;
  unint64_t v38 = 1;
  sub_215731D94(a1[1], (uint64_t)"{", 1);
  uint64_t v8 = a1[1];
  size_t v9 = operator new(0x10uLL);
  *size_t v9 = ",";
  v9[1] = ";";
  if (!*(_DWORD *)(a2 + 24)) {
    goto LABEL_59;
  }
  uint64_t v49 = *(void *)(a2 + 8);
  int v46 = v9;
  uint64_t v47 = v9 + 2;
  long long v48 = v9 + 2;
  uint64_t v44 = 0;
  uint64_t v45 = 1;
  v43[0] = &v44;
  v43[1] = &v49;
  v43[2] = &v46;
  v43[3] = &v45;
  v43[4] = v37;
  sub_21595410C(&__p, (HIDWORD(v49) * v49));
  size_t v10 = (void **)__p;
  int v11 = *(_DWORD *)(a2 + 12);
  if (*(_DWORD *)(a2 + 8)) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  char v13 = v12;
  char v36 = v13;
  if (v12) {
    int v14 = 0;
  }
  else {
    int v14 = *(_DWORD *)(a2 + 12);
  }
  if (v12) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = 3;
  }
  int v16 = v14 * v15;
  int v17 = *(_DWORD *)(a2 + 12);
  if (v16 != -1)
  {
    if (!*(_DWORD *)(a2 + 8)) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  int v17 = *(_DWORD *)(a2 + 12);
  if (*(_DWORD *)(a2 + 8))
  {
LABEL_21:
    if (v17)
    {
      long long v18 = *(float **)a2;
      int v19 = v17 - 1;
      if (v17 == 1)
      {
        uint64_t v21 = (uint64_t)v10;
      }
      else
      {
        uint64_t v20 = 4 * *(unsigned int *)(a2 + 20);
        uint64_t v21 = (uint64_t)v10;
        do
        {
          sub_21595420C(v18, v21);
          sub_21595420C(v18 + 1, v21 + 24);
          sub_21595420C(v18 + 2, v21 + 48);
          long long v18 = (float *)((char *)v18 + v20);
          v21 += 24 * v15;
          --v19;
        }
        while (v19);
      }
      sub_21595420C(v18, v21);
      sub_21595420C(v18 + 1, v21 + 24);
      sub_21595420C(v18 + 2, v21 + 48);
    }
  }
LABEL_28:
  v54[0] = 0;
  v39[0] = 0;
  long long v50 = v54;
  long long v51 = v39;
  if (v36)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 1;
  }
  else
  {
    uint64_t v24 = (uint64_t)v10;
    int v25 = v11 - 1;
    if (v11 != 1)
    {
      uint64_t v24 = (uint64_t)v10;
      do
      {
        sub_215954300(&v50, v24);
        v24 += 24 * v15;
        --v25;
      }
      while (v25);
    }
    sub_215954300(&v50, v24);
    uint64_t v22 = v54[0];
    uint64_t v23 = v39[0] + 1;
  }
  char v26 = (char *)v22 + v23;
  uint64_t v27 = v37[0];
  if (v37[0] >= (unint64_t)v26) {
    uint64_t v27 = (uint64_t)v26;
  }
  if (v26) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 1;
  }
  if (v38 >= (unint64_t)v22) {
    uint64_t v29 = (uint64_t)v22;
  }
  else {
    uint64_t v29 = v38;
  }
  if (v22) {
    uint64_t v30 = v29;
  }
  else {
    uint64_t v30 = 1;
  }
  v40[0] = v28;
  v40[1] = v30;
  v39[0] = v8;
  v39[1] = v40;
  long long v50 = 0;
  sub_215954574((uint64_t)v37, v8, (unsigned int *)&v50, 1u, v45);
  long long v50 = (void ***)v39;
  long long v51 = v43;
  long long v52 = v8;
  if ((v36 & 1) == 0)
  {
    long long v53 = &v50;
    v54[0] = 0;
    v54[1] = 0;
    int v31 = v11 - 1;
    if (v11 != 1)
    {
      do
      {
        v54[0] = v10;
        sub_215954858((uint64_t ****)&v53, v54);
        v10 += 3 * v15;
        --v31;
      }
      while (v31);
    }
    v54[0] = v10;
    sub_215954858((uint64_t ****)&v53, v54);
  }
  int v32 = (void **)__p;
  if (__p)
  {
    uint64_t v33 = v42;
    uint64_t v34 = __p;
    if (v42 != __p)
    {
      do
      {
        if (*((char *)v33 - 1) < 0) {
          operator delete(*(v33 - 3));
        }
        v33 -= 3;
      }
      while (v33 != v32);
      uint64_t v34 = __p;
    }
    uint64_t v42 = v32;
    operator delete(v34);
  }
  size_t v9 = v46;
  if (v46)
  {
    uint64_t v47 = v46;
LABEL_59:
    operator delete(v9);
  }
  return sub_215731D94(a1[1], (uint64_t)"}", 1);
}

void sub_2159540D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21595410C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    unint64_t v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_2159541B8(_Unwind_Exception *exception_object)
{
  unint64_t v3 = (void **)*v1;
  if (*v1)
  {
    unint64_t v4 = (void **)v1[1];
    size_t v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        if (*((char *)v4 - 1) < 0) {
          operator delete(*(v4 - 3));
        }
        v4 -= 3;
      }
      while (v4 != v3);
      size_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

double sub_21595420C(float *a1, uint64_t a2)
{
  int v7 = 0;
  sub_2157D208C((uint64_t)&v4, (uint64_t)v6, a1);
  if (v7 == -1) {
    sub_215742D4C();
  }
  v9[0] = &v8;
  ((void (*)(long long *__return_ptr, void *, unsigned char *))off_26C6725F0[v7])(&v4, v9, v6);
  if (v7 != -1) {
    ((void (*)(void *, unsigned char *))off_26C6725A8[v7])(v9, v6);
  }
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  return result;
}

void sub_2159542C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, int a15)
{
  if (a15 != -1) {
    ((void (*)(uint64_t, char *))off_26C6725A8[a15])(v15 - 17, &a12);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_215954300(unsigned char *result, uint64_t a2)
{
  unint64_t v3 = (uint64_t **)result;
  long long v4 = (unint64_t **)(result + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v6 = *(void *)(a2 + 8);
  }
  if (v5 >= 0) {
    int v7 = (unsigned char *)a2;
  }
  else {
    int v7 = *(unsigned char **)a2;
  }
  if (v6 >= 1)
  {
    char v8 = &v7[v6];
    size_t v9 = v6;
    double result = v7;
    do
    {
      double result = memchr(result, 46, v9);
      if (!result) {
        break;
      }
      if (*result == 46)
      {
        if (result == v8) {
          break;
        }
        unint64_t v27 = result - v7;
        size_t v10 = v3;
        if (result - v7 != -1)
        {
          uint64_t v28 = (unsigned char *)**v3;
          if ((unint64_t)v28 <= v27) {
            uint64_t v28 = (unsigned char *)(result - v7);
          }
          **unint64_t v3 = (uint64_t)v28;
          uint64_t v29 = *(unsigned __int8 *)(a2 + 23);
          if ((v29 & 0x80u) != 0) {
            uint64_t v29 = *(void *)(a2 + 8);
          }
          uint64_t v6 = v29 + ~v27;
          size_t v10 = (uint64_t **)v4;
        }
        goto LABEL_13;
      }
      ++result;
      size_t v9 = v8 - result;
    }
    while (v8 - result >= 1);
  }
  size_t v10 = v3;
LABEL_13:
  int v11 = *v10;
  uint64_t v12 = *v11;
  if (*v11 <= (unint64_t)v6) {
    uint64_t v12 = v6;
  }
  uint64_t *v11 = v12;
  int v13 = *(char *)(a2 + 47);
  if (v13 >= 0) {
    uint64_t v14 = *(unsigned __int8 *)(a2 + 47);
  }
  else {
    uint64_t v14 = *(void *)(a2 + 32);
  }
  if (v13 >= 0) {
    uint64_t v15 = (unsigned char *)(a2 + 24);
  }
  else {
    uint64_t v15 = *(unsigned char **)(a2 + 24);
  }
  if (v14 >= 1)
  {
    int v16 = &v15[v14];
    size_t v17 = v14;
    double result = v15;
    do
    {
      double result = memchr(result, 46, v17);
      if (!result) {
        break;
      }
      if (*result == 46)
      {
        if (result == v16) {
          break;
        }
        unint64_t v30 = result - v15;
        long long v18 = v3;
        if (result - v15 != -1)
        {
          int v31 = (unsigned char *)**v3;
          if ((unint64_t)v31 <= v30) {
            int v31 = (unsigned char *)(result - v15);
          }
          **unint64_t v3 = (uint64_t)v31;
          uint64_t v32 = *(unsigned __int8 *)(a2 + 47);
          if ((v32 & 0x80u) != 0) {
            uint64_t v32 = *(void *)(a2 + 32);
          }
          uint64_t v14 = v32 + ~v30;
          long long v18 = (uint64_t **)v4;
        }
        goto LABEL_27;
      }
      ++result;
      size_t v17 = v16 - result;
    }
    while (v16 - result >= 1);
  }
  long long v18 = v3;
LABEL_27:
  int v19 = *v18;
  uint64_t v20 = *v19;
  if (*v19 <= (unint64_t)v14) {
    uint64_t v20 = v14;
  }
  *int v19 = v20;
  int v21 = *(char *)(a2 + 71);
  if (v21 >= 0) {
    uint64_t v22 = *(unsigned __int8 *)(a2 + 71);
  }
  else {
    uint64_t v22 = *(void *)(a2 + 56);
  }
  if (v21 >= 0) {
    uint64_t v23 = (unsigned char *)(a2 + 48);
  }
  else {
    uint64_t v23 = *(unsigned char **)(a2 + 48);
  }
  if (v22 >= 1)
  {
    uint64_t v24 = &v23[v22];
    size_t v25 = v22;
    double result = v23;
    do
    {
      double result = memchr(result, 46, v25);
      if (!result) {
        break;
      }
      if (*result == 46)
      {
        if (result == v24) {
          break;
        }
        unint64_t v33 = result - v23;
        if (result - v23 == -1) {
          break;
        }
        uint64_t v34 = (unsigned char *)**v3;
        if ((unint64_t)v34 <= v33) {
          uint64_t v34 = (unsigned char *)(result - v23);
        }
        **unint64_t v3 = (uint64_t)v34;
        uint64_t v35 = *(unsigned __int8 *)(a2 + 71);
        if ((v35 & 0x80u) != 0) {
          uint64_t v35 = *(void *)(a2 + 56);
        }
        uint64_t v22 = v35 + ~v33;
        goto LABEL_41;
      }
      ++result;
      size_t v25 = v24 - result;
    }
    while (v24 - result >= 1);
  }
  long long v4 = (unint64_t **)v3;
LABEL_41:
  unint64_t v26 = **v4;
  if (v26 <= v22) {
    unint64_t v26 = v22;
  }
  *char *v4 = v26;
  return result;
}

void *sub_215954574(uint64_t a1, void *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  if (a4 > a5)
  {
    unsigned int v6 = a4;
    uint64_t v9 = a4;
    do
    {
      uint64_t v15 = *(void *)a3;
      ++*(_DWORD *)((char *)&v15 + v9 * 4);
      sub_215731D94(a2, (uint64_t)"[", 1);
      std::to_string(&v16, v6);
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v11 = &v16;
      }
      else {
        int v11 = (std::string *)v16.__r_.__value_.__r.__words[0];
      }
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v16.__r_.__value_.__l.__size_;
      }
      sub_215731D94(a2, (uint64_t)v11, size);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      sub_215731D94(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v16, a3[v9]);
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = &v16;
      }
      else {
        int v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
      }
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v14 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v14 = v16.__r_.__value_.__l.__size_;
      }
      sub_215731D94(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      sub_215731D94(a2, (uint64_t)": ", 2);
      sub_215954728(a2, a3);
      sub_215731D94(a2, (uint64_t)" to ", 4);
      sub_215954728(a2, (unsigned int *)&v15);
      double result = sub_215731D94(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_215954708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215954728(void *a1, unsigned int *a2)
{
  int v10 = 0;
  sub_2158D7060((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1) {
    sub_215742D4C();
  }
  uint64_t v12 = &v11;
  ((void (*)(void **__return_ptr, char **, unsigned char *))off_26C6725F0[v10])(__p, &v12, v9);
  if (v10 != -1) {
    ((void (*)(char **, unsigned char *))off_26C6725A8[v10])(&v12, v9);
  }
  if ((v8 & 0x80u) == 0) {
    unint64_t v3 = __p;
  }
  else {
    unint64_t v3 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    uint64_t v4 = v8;
  }
  else {
    uint64_t v4 = (uint64_t)__p[1];
  }
  double result = sub_215731D94(a1, (uint64_t)v3, v4);
  unsigned int v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_215954814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215954830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215954844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_215954858(uint64_t ****a1, void ***a2)
{
  uint64_t v4 = *a1;
  sub_215E0D5E0(***a1, *a2, *(unsigned __int8 *)(**a1)[1], *((unsigned __int8 *)(**a1)[1] + 8));
  unsigned int v6 = v4[1];
  char v5 = v4[2];
  uint64_t v7 = (uint64_t)v6[4];
  unsigned __int8 v8 = (unsigned int *)*v6;
  uint64_t v9 = v6[1];
  int v10 = *(_DWORD *)*v6 + 1;
  *(_DWORD *)*unsigned int v6 = v10;
  if (v10 == *(_DWORD *)v9)
  {
    int v11 = v8[1] + 1;
    *unsigned __int8 v8 = 0;
    v8[1] = v11;
    if (v11 == *((_DWORD *)v9 + 1)) {
      goto LABEL_6;
    }
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v12 = 0;
  }
  size_t v13 = strlen(*(const char **)(*v6[2] + 8 * v12));
  sub_215731D94(v5, *(void *)(*v6[2] + 8 * v12), v13);
  sub_215954574(v7, v5, (unsigned int *)*v6, v12, *(_DWORD *)v6[3]);
LABEL_6:
  std::string::size_type v14 = *a1;
  sub_215E0D5E0(***a1, *a2 + 3, *(unsigned __int8 *)(**a1)[1], *((unsigned __int8 *)(**a1)[1] + 8));
  std::string v16 = v14[1];
  uint64_t v15 = v14[2];
  uint64_t v17 = (uint64_t)v16[4];
  long long v18 = (unsigned int *)*v16;
  int v19 = v16[1];
  int v20 = *(_DWORD *)*v16 + 1;
  *(_DWORD *)*std::string v16 = v20;
  if (v20 == *(_DWORD *)v19)
  {
    int v21 = v18[1] + 1;
    *long long v18 = 0;
    v18[1] = v21;
    if (v21 == *((_DWORD *)v19 + 1)) {
      goto LABEL_11;
    }
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v22 = 0;
  }
  size_t v23 = strlen(*(const char **)(*v16[2] + 8 * v22));
  sub_215731D94(v15, *(void *)(*v16[2] + 8 * v22), v23);
  sub_215954574(v17, v15, (unsigned int *)*v16, v22, *(_DWORD *)v16[3]);
LABEL_11:
  uint64_t v24 = *a1;
  double result = sub_215E0D5E0(**v24, *a2 + 6, *(unsigned __int8 *)(*v24)[1], *((unsigned __int8 *)(*v24)[1] + 8));
  unint64_t v27 = v24[1];
  unint64_t v26 = v24[2];
  uint64_t v28 = (uint64_t)v27[4];
  uint64_t v29 = (unsigned int *)*v27;
  unint64_t v30 = v27[1];
  int v31 = *(_DWORD *)*v27 + 1;
  *(_DWORD *)*unint64_t v27 = v31;
  if (v31 == *(_DWORD *)v30)
  {
    int v32 = v29[1] + 1;
    *uint64_t v29 = 0;
    v29[1] = v32;
    if (v32 == *((_DWORD *)v30 + 1)) {
      return result;
    }
    uint64_t v33 = 1;
  }
  else
  {
    uint64_t v33 = 0;
  }
  size_t v34 = strlen(*(const char **)(*v27[2] + 8 * v33));
  sub_215731D94(v26, *(void *)(*v27[2] + 8 * v33), v34);
  uint64_t v35 = (unsigned int *)*v27;
  unsigned int v36 = *(_DWORD *)v27[3];

  return sub_215954574(v28, v26, v35, v33, v36);
}

void sub_215954AAC(uint64_t a1, unsigned int *a2)
{
  unint64_t v3 = **(uint64_t ***)a1;
  uint64_t v4 = **(unsigned __int8 **)(*(void *)a1 + 8);
  sub_2158229B4(a2);
  uint64_t v5 = *v3;
  *(uint64_t *)((char *)v3 + *(void *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(void *)(v5 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v18 & 0x80u) == 0) {
    unsigned int v6 = __p;
  }
  else {
    unsigned int v6 = (void **)__p[0];
  }
  if ((v18 & 0x80u) == 0) {
    uint64_t v7 = v18;
  }
  else {
    uint64_t v7 = (uint64_t)__p[1];
  }
  sub_215731D94(v3, (uint64_t)v6, v7);
  if ((char)v18 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  unsigned __int8 v8 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(v9 + 32);
  int v11 = *(unsigned int **)v9;
  uint64_t v12 = *(_DWORD **)(v9 + 8);
  int v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)uint64_t v9 = v13;
  if (v13 == *v12)
  {
    int v14 = v11[1] + 1;
    unsigned int *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1]) {
      return;
    }
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v15 = 0;
  }
  size_t v16 = strlen(*(const char **)(**(void **)(v9 + 16) + 8 * v15));
  sub_215731D94(v8, *(void *)(**(void **)(v9 + 16) + 8 * v15), v16);
  sub_215954574(v10, v8, *(unsigned int **)v9, v15, **(_DWORD **)(v9 + 24));
}

void sub_215954C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215954C34(uint64_t result, unint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  uint64_t v5 = *(void *)(result + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 2) >= a2)
  {
    *(void *)(result + 8) = v4 + 12 * (12 * a2 / 0xC);
  }
  else
  {
    unsigned int v6 = *(void ***)result;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *(void *)result) >> 2);
    unint64_t v8 = v7 + a2;
    if (v7 + a2 > 0x1555555555555555) {
      sub_215738AC0();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (uint64_t)v6) >> 2);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0xAAAAAAAAAAAAAAALL) {
      uint64_t v10 = 0x1555555555555555;
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      LODWORD(v21) = v10;
      uint64_t v11 = *(unsigned int *)(result + 28);
      if (v11 == -1) {
        sub_215742D4C();
      }
      int v19 = &v21;
      double result = ((uint64_t (*)(void ***, uint64_t))off_26C672668[v11])(&v19, result + 24);
      unsigned int v6 = *(void ***)v3;
      uint64_t v4 = *(void *)(v3 + 8);
    }
    else
    {
      double result = 0;
      uint64_t v12 = 0;
    }
    unint64_t v13 = result + 12 * v7;
    unint64_t v14 = v13 + 12 * (12 * a2 / 0xC);
    if ((void **)v4 != v6)
    {
      do
      {
        uint64_t v15 = *(void *)(v4 - 12);
        v4 -= 12;
        int v16 = *(_DWORD *)(v4 + 8);
        *(void *)(v13 - 12) = v15;
        v13 -= 12;
        *(_DWORD *)(v13 + 8) = v16;
      }
      while ((void **)v4 != v6);
      unsigned int v6 = *(void ***)v3;
    }
    *(void *)uint64_t v3 = v13;
    *(void *)(v3 + 8) = v14;
    uint64_t v17 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = result + 12 * v12;
    if (v6)
    {
      int v19 = v6;
      int v20 = -1431655765 * ((unint64_t)(v17 - (void)v6) >> 2);
      uint64_t v18 = *(unsigned int *)(v3 + 28);
      if (v18 == -1) {
        sub_215742D4C();
      }
      int v21 = &v19;
      return ((uint64_t (*)(void **, uint64_t))off_26C672678[v18])(&v21, v3 + 24);
    }
  }
  return result;
}

void *sub_215954E14(unsigned int **a1)
{
  return operator new(12 * **a1);
}

vm_address_t sub_215954E48(unsigned int **a1)
{
  uint64_t v1 = (((12 * **a1 + 4095) & 0x1FFFFFF000) * (unsigned __int128)0x1555555555555556uLL) >> 64;
  vm_address_t address = 0;
  if (vm_allocate(*MEMORY[0x263EF8960], &address, 12 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    uint64_t v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  return address;
}

void sub_215954EEC(void ***a1)
{
}

uint64_t sub_215954EF8(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, 12 * *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

_DWORD *sub_215954F78(_DWORD *result, char **a2)
{
  if (result[4] != 1 || *((_DWORD *)a2 + 4) != 1)
  {
    int v4 = result[3];
    if (result[2]) {
      BOOL v5 = v4 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
      unsigned int v6 = *(_DWORD **)result;
      unint64_t v7 = *a2;
      int v8 = v4 - 1;
      if (v8)
      {
        uint64_t v9 = 4 * result[5];
        uint64_t v10 = 4 * *((unsigned int *)a2 + 5);
        do
        {
          _DWORD *v7 = *v6;
          v7[1] = v6[1];
          unsigned char v7[2] = v6[2];
          unsigned int v6 = (_DWORD *)((char *)v6 + v9);
          unint64_t v7 = (_DWORD *)((char *)v7 + v10);
          --v8;
        }
        while (v8);
      }
      _DWORD *v7 = *v6;
      v7[1] = v6[1];
      unsigned char v7[2] = v6[2];
    }
    return result;
  }
  uint64_t v11 = result[5];
  uint64_t v12 = *((unsigned int *)a2 + 5);
  uint64_t v13 = result[2];
  if (v11 == v12 && v11 == v13)
  {
    uint64_t v23 = (result[3] * v11);
    uint64_t v24 = *(const void **)result;
    if (v23) {
      BOOL v25 = v24 == 0;
    }
    else {
      BOOL v25 = 0;
    }
    if (v25)
    {
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_26;
      }
    }
    else if (!v23)
    {
      return result;
    }
    unint64_t v26 = *a2;
    size_t v27 = 4 * v23;
    uint64_t v28 = v24;
  }
  else
  {
    int v15 = result[3];
    if (v13) {
      BOOL v16 = v15 == 0;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return result;
    }
    uint64_t v17 = *a2;
    uint64_t v18 = *(char **)result;
    size_t v19 = 4 * v13;
    int v20 = v15 - 1;
    if (v15 != 1)
    {
      uint64_t v21 = 4 * v11;
      uint64_t v22 = 4 * v12;
      while (v18
           || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        memmove(v17, v18, v19);
        v18 += v21;
        v17 += v22;
        if (!--v20) {
          goto LABEL_35;
        }
      }
LABEL_26:
      abort();
    }
LABEL_35:
    if (!v18
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_26;
    }
    unint64_t v26 = v17;
    uint64_t v28 = v18;
    size_t v27 = v19;
  }

  return memmove(v26, v28, v27);
}

uint64_t sub_2159551D8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  uint64_t v5 = *(void *)(result + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 2) >= a2)
  {
    *(void *)(result + 8) = v4 + 12 * (12 * a2 / 0xC);
  }
  else
  {
    unsigned int v6 = *(void ***)result;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *(void *)result) >> 2);
    unint64_t v8 = v7 + a2;
    if (v7 + a2 > 0x1555555555555555) {
      sub_215738AC0();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (uint64_t)v6) >> 2);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0xAAAAAAAAAAAAAAALL) {
      uint64_t v10 = 0x1555555555555555;
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      LODWORD(v21) = v10;
      uint64_t v11 = *(unsigned int *)(result + 28);
      if (v11 == -1) {
        sub_215742D4C();
      }
      size_t v19 = &v21;
      uint64_t result = ((uint64_t (*)(void ***, uint64_t))off_26C672688[v11])(&v19, result + 24);
      unsigned int v6 = *(void ***)v3;
      uint64_t v4 = *(void *)(v3 + 8);
    }
    else
    {
      uint64_t result = 0;
      uint64_t v12 = 0;
    }
    unint64_t v13 = result + 12 * v7;
    unint64_t v14 = v13 + 12 * (12 * a2 / 0xC);
    if ((void **)v4 != v6)
    {
      do
      {
        uint64_t v15 = *(void *)(v4 - 12);
        v4 -= 12;
        int v16 = *(_DWORD *)(v4 + 8);
        *(void *)(v13 - 12) = v15;
        v13 -= 12;
        *(_DWORD *)(v13 + 8) = v16;
      }
      while ((void **)v4 != v6);
      unsigned int v6 = *(void ***)v3;
    }
    *(void *)uint64_t v3 = v13;
    *(void *)(v3 + 8) = v14;
    uint64_t v17 = *(void *)(v3 + 16);
    *(void *)(v3 + 16) = result + 12 * v12;
    if (v6)
    {
      size_t v19 = v6;
      int v20 = -1431655765 * ((unint64_t)(v17 - (void)v6) >> 2);
      uint64_t v18 = *(unsigned int *)(v3 + 28);
      if (v18 == -1) {
        sub_215742D4C();
      }
      uint64_t v21 = &v19;
      return ((uint64_t (*)(void **, uint64_t))off_26C672698[v18])(&v21, v3 + 24);
    }
  }
  return result;
}

void *sub_2159553B8(unsigned int **a1)
{
  return operator new(12 * **a1);
}

vm_address_t sub_2159553EC(unsigned int **a1)
{
  uint64_t v1 = (((12 * **a1 + 4095) & 0x1FFFFFF000) * (unsigned __int128)0x1555555555555556uLL) >> 64;
  vm_address_t address = 0;
  if (vm_allocate(*MEMORY[0x263EF8960], &address, 12 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    uint64_t v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  return address;
}

void sub_215955490(void ***a1)
{
}

uint64_t sub_21595549C(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, 12 * *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

size_t sub_21595551C(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6725A8[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    unsigned int v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    unsigned int v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_21595560C(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  uint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  unsigned int v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    unsigned int v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6725A8[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_2159557C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595580C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  uint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    int v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)uint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    int v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *uint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      size_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215955AA0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215955AB8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_215955AC0(_DWORD ***a1)
{
  return sub_2157FD010(**a1, (char *)(*a1)[1]);
}

void sub_215955ACC(uint64_t a1, uint64_t a2)
{
}

void sub_215955ADC(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  char v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    char v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6725A8[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215955C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215955CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    size_t result = sub_215955DD4((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  size_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215955DCC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215955DD4(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  size_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)size_t v8 = v17;
    size_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *size_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  size_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215955FD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_215955FE8(_DWORD ***a1)
{
  return sub_2159564A8(**a1, (char *)(*a1)[1]);
}

void sub_215955FF4(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  unint64_t v6 = __p;
  size_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    unint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6725A8[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_2159561B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159561F4(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    int v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    int v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      size_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215956488(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159564A0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_2159564A8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6725A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_21595659C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6725A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t *sub_215956690(uint64_t *a1)
{
  uint64_t v2 = a1[40];
  if (v2)
  {
    a1[41] = v2;
    unint64_t v3 = (unint64_t)(a1[42] - v2) >> 2;
    uint64_t v33 = v2;
    int v34 = v3;
    uint64_t v4 = *((unsigned int *)a1 + 87);
    if (v4 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672708[v4])(&v35, a1 + 43);
  }
  uint64_t v5 = a1[35];
  if (v5)
  {
    a1[36] = v5;
    int v6 = *((_DWORD *)a1 + 74) - v5;
    uint64_t v33 = v5;
    int v34 = v6;
    uint64_t v7 = *((unsigned int *)a1 + 77);
    if (v7 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672718[v7])(&v35, a1 + 38);
  }
  uint64_t v8 = a1[30];
  if (v8)
  {
    a1[31] = v8;
    int v9 = *((_DWORD *)a1 + 64) - v8;
    uint64_t v33 = v8;
    int v34 = v9;
    uint64_t v10 = *((unsigned int *)a1 + 67);
    if (v10 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672718[v10])(&v35, a1 + 33);
  }
  uint64_t v11 = a1[26];
  if (v11)
  {
    a1[27] = v11;
    int v12 = -1431655765 * ((unint64_t)(a1[28] - v11) >> 2);
    uint64_t v33 = v11;
    int v34 = v12;
    uint64_t v13 = *((unsigned int *)a1 + 59);
    if (v13 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672698[v13])(&v35, a1 + 29);
  }
  uint64_t v14 = a1[22];
  if (v14)
  {
    a1[23] = v14;
    unint64_t v15 = (unint64_t)(a1[24] - v14) >> 3;
    uint64_t v33 = v14;
    int v34 = v15;
    uint64_t v16 = *((unsigned int *)a1 + 51);
    if (v16 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672728[v16])(&v35, a1 + 25);
  }
  uint64_t v17 = a1[18];
  if (v17)
  {
    a1[19] = v17;
    unint64_t v18 = (unint64_t)(a1[20] - v17) >> 3;
    uint64_t v33 = v17;
    int v34 = v18;
    uint64_t v19 = *((unsigned int *)a1 + 43);
    if (v19 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672738[v19])(&v35, a1 + 21);
  }
  uint64_t v20 = a1[14];
  if (v20)
  {
    a1[15] = v20;
    int v21 = -1431655765 * ((unint64_t)(a1[16] - v20) >> 2);
    uint64_t v33 = v20;
    int v34 = v21;
    uint64_t v22 = *((unsigned int *)a1 + 35);
    if (v22 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672698[v22])(&v35, a1 + 17);
  }
  uint64_t v23 = a1[9];
  if (v23)
  {
    a1[10] = v23;
    int v24 = -1431655765 * ((unint64_t)(a1[11] - v23) >> 2);
    uint64_t v33 = v23;
    int v34 = v24;
    uint64_t v25 = *((unsigned int *)a1 + 25);
    if (v25 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672678[v25])(&v35, a1 + 12);
  }
  uint64_t v26 = a1[4];
  if (v26)
  {
    a1[5] = v26;
    int v27 = -1431655765 * ((unint64_t)(a1[6] - v26) >> 2);
    uint64_t v33 = v26;
    int v34 = v27;
    uint64_t v28 = *((unsigned int *)a1 + 15);
    if (v28 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672678[v28])(&v35, a1 + 7);
  }
  uint64_t v29 = *a1;
  if (*a1)
  {
    a1[1] = v29;
    int v30 = -1431655765 * ((unint64_t)(a1[2] - v29) >> 2);
    uint64_t v33 = v29;
    int v34 = v30;
    uint64_t v31 = *((unsigned int *)a1 + 7);
    if (v31 == -1) {
      sub_215742D4C();
    }
    uint64_t v35 = &v33;
    ((void (*)(uint64_t **, uint64_t *))off_26C672678[v31])(&v35, a1 + 3);
  }
  return a1;
}

void sub_215956A40(void ***a1)
{
}

uint64_t sub_215956A4C(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, 4 * *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

void sub_215956AC8(void ***a1)
{
}

uint64_t sub_215956AD4(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

void sub_215956B4C(void ***a1)
{
}

uint64_t sub_215956B58(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, 8 * *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

void sub_215956BD4(void ***a1)
{
}

uint64_t sub_215956BE0(void **a1)
{
  uint64_t result = MEMORY[0x2166C5410](*MEMORY[0x263EF8960], **a1, 8 * *((unsigned int *)*a1 + 2));
  if (result)
  {
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Memory/include/Kit/Memory/VMAllocator.hpp", 81, (uint64_t)"", 0, (uint64_t)"Illegal or non-allocated address specified.", 43, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  return result;
}

void sub_215956C5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  int v22 = 0;
  sub_2157E58C8(v21, "Mesh has ");
  std::to_string(&v23, a4);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = &v23;
  int v27 = v21;
  uint64_t v28 = &v23;
  uint64_t v29 = &v23;
  if (v22 == -1) {
    sub_215742D4C();
  }
  int v24 = &v25;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v22])(&v24, v21);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" ";
  uint64_t v29 = (std::string *)" ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C6725C0[v22])(&v23, v21);
  if (v19)
  {
    uint64_t v25 = (std::string *)v21;
    uint64_t v26 = (std::string *)&v19;
    int v27 = v21;
    uint64_t v28 = (std::string *)&v19;
    uint64_t v29 = (std::string *)&v19;
    if (v22 != -1)
    {
      v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
      ((void (*)(std::string *, _DWORD *))off_26C672638[v22])(&v23, v21);
      goto LABEL_10;
    }
LABEL_42:
    sub_215742D4C();
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)"nullptr";
  int v27 = v21;
  uint64_t v28 = (std::string *)"nullptr";
  uint64_t v29 = (std::string *)"nullptr";
  if (v22 == -1) {
    goto LABEL_42;
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672620[v22])(&v23, v21);
LABEL_10:
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" which does not match the ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" which does not match the ";
  uint64_t v29 = (std::string *)" which does not match the ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672790[v22])(&v23, v21);
  std::to_string(&v23, a5);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = &v23;
  int v27 = v21;
  uint64_t v28 = &v23;
  uint64_t v29 = &v23;
  if (v22 == -1) {
    sub_215742D4C();
  }
  int v24 = &v25;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v22])(&v24, v21);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" ";
  uint64_t v29 = (std::string *)" ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C6725C0[v22])(&v23, v21);
  if (v20)
  {
    uint64_t v25 = (std::string *)v21;
    uint64_t v26 = (std::string *)&v20;
    int v27 = v21;
    uint64_t v28 = (std::string *)&v20;
    uint64_t v29 = (std::string *)&v20;
    if (v22 != -1)
    {
      v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
      ((void (*)(std::string *, _DWORD *))off_26C672638[v22])(&v23, v21);
      goto LABEL_20;
    }
LABEL_46:
    sub_215742D4C();
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)"nullptr";
  int v27 = v21;
  uint64_t v28 = (std::string *)"nullptr";
  uint64_t v29 = (std::string *)"nullptr";
  if (v22 == -1) {
    goto LABEL_46;
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672620[v22])(&v23, v21);
LABEL_20:
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" they correspond to";
  int v27 = v21;
  uint64_t v28 = (std::string *)" they correspond to";
  uint64_t v29 = (std::string *)" they correspond to";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672760[v22])(&v23, v21);
  if (v22 == -1) {
    sub_215742D4C();
  }
  uint64_t v25 = &v23;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C6725F0[v22])(v8, &v25, v21);
  if (v22 != -1) {
    ((void (*)(std::string **, _DWORD *))off_26C6725A8[v22])(&v25, v21);
  }
  if (SHIBYTE(v9) < 0)
  {
    sub_215738B0C(__p, v8[0], (unint64_t)v8[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v8;
    uint64_t v11 = v9;
  }
  char v12 = 1;
  LOBYTE(v13) = 0;
  char v17 = 0;
  char v18 = 1;
  sub_21573FCF8(0x20u, (long long *)__p, a1);
  if (v18)
  {
    if (!v17) {
      goto LABEL_31;
    }
    if (v16 < 0)
    {
      operator delete(v15);
      if ((v14 & 0x80000000) == 0)
      {
LABEL_31:
        if (!v12) {
          goto LABEL_34;
        }
LABEL_32:
        if (SHIBYTE(v11) < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete(v13);
    if (!v12) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
LABEL_34:
  if (SHIBYTE(v9) < 0) {
    operator delete(v8[0]);
  }
}

void sub_2159570D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215957108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_215957168(uint64_t a1, uint64_t *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  v14[0] = "Mesh has both vertex and face ";
  v14[1] = 30;
  uint64_t v3 = *((unsigned __int8 *)a2 + 23);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = (uint64_t *)*a2;
  }
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = a2[1];
  }
  v14[2] = v4;
  v14[3] = v3;
  v14[4] = " but may only have one of the two";
  v14[5] = 33;
  sub_2157430CC((uint64_t)v14, (uint64_t)&v15, 0, 0, &v5);
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__p, v5.__r_.__value_.__l.__data_, v5.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v5;
  }
  char v7 = 1;
  LOBYTE(v8) = 0;
  char v12 = 0;
  char v13 = 1;
  sub_21573FCF8(0x21u, (long long *)&__p, a1);
  if (v13)
  {
    if (!v12) {
      goto LABEL_13;
    }
    if (v11 < 0)
    {
      operator delete(v10);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v7) {
          goto LABEL_16;
        }
LABEL_14:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_16;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v8);
    if (!v7) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_16:
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
}

void sub_2159572CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215957304(uint64_t a1, uint64_t a2, std::string *a3, unint64_t a4, unint64_t a5)
{
  uint64_t v20 = a2;
  int v22 = 0;
  sub_2157E58C8(v21, "Mesh has ");
  std::to_string(&v23, a4);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = &v23;
  int v27 = v21;
  uint64_t v28 = &v23;
  uint64_t v29 = &v23;
  if (v22 == -1) {
    sub_215742D4C();
  }
  int v24 = &v25;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v22])(&v24, v21);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" ";
  uint64_t v29 = (std::string *)" ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C6725C0[v22])(&v23, v21);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = a3;
  int v27 = v21;
  uint64_t v28 = a3;
  uint64_t v29 = a3;
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C6727C0[v22])(&v23, v21);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" which does not match the ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" which does not match the ";
  uint64_t v29 = (std::string *)" which does not match the ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672790[v22])(&v23, v21);
  std::to_string(&v23, a5);
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = &v23;
  int v27 = v21;
  uint64_t v28 = &v23;
  uint64_t v29 = &v23;
  if (v22 == -1) {
    sub_215742D4C();
  }
  int v24 = &v25;
  ((void (*)(std::string ***, _DWORD *))off_26C6725D8[v22])(&v24, v21);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" ";
  int v27 = v21;
  uint64_t v28 = (std::string *)" ";
  uint64_t v29 = (std::string *)" ";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C6725C0[v22])(&v23, v21);
  if (v20)
  {
    uint64_t v25 = (std::string *)v21;
    uint64_t v26 = (std::string *)&v20;
    int v27 = v21;
    uint64_t v28 = (std::string *)&v20;
    uint64_t v29 = (std::string *)&v20;
    if (v22 != -1)
    {
      v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
      ((void (*)(std::string *, _DWORD *))off_26C672638[v22])(&v23, v21);
      goto LABEL_16;
    }
LABEL_42:
    sub_215742D4C();
  }
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)"nullptr";
  int v27 = v21;
  uint64_t v28 = (std::string *)"nullptr";
  uint64_t v29 = (std::string *)"nullptr";
  if (v22 == -1) {
    goto LABEL_42;
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672620[v22])(&v23, v21);
LABEL_16:
  uint64_t v25 = (std::string *)v21;
  uint64_t v26 = (std::string *)" they correspond to";
  int v27 = v21;
  uint64_t v28 = (std::string *)" they correspond to";
  uint64_t v29 = (std::string *)" they correspond to";
  if (v22 == -1) {
    sub_215742D4C();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
  ((void (*)(std::string *, _DWORD *))off_26C672760[v22])(&v23, v21);
  if (v22 == -1) {
    sub_215742D4C();
  }
  uint64_t v25 = &v23;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C6725F0[v22])(v9, &v25, v21);
  if (v22 != -1) {
    ((void (*)(std::string **, _DWORD *))off_26C6725A8[v22])(&v25, v21);
  }
  if (SHIBYTE(v10) < 0)
  {
    sub_215738B0C(__p, v9[0], (unint64_t)v9[1]);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)v9;
    uint64_t v12 = v10;
  }
  char v13 = 1;
  LOBYTE(v14) = 0;
  char v18 = 0;
  char v19 = 1;
  sub_21573FCF8(0x20u, (long long *)__p, a1);
  if (v19)
  {
    if (!v18) {
      goto LABEL_27;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_27:
        if (!v13) {
          goto LABEL_30;
        }
LABEL_28:
        if (SHIBYTE(v12) < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_30;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_30:
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[0]);
  }
}

void sub_215957738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215957768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

char *sub_2159577C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a3)
  {
    unsigned __int8 v12 = *(unsigned char *)a3;
    sub_215957AFC();
  }
  std::string v5 = *(const void **)(a3 + 16);
  uint64_t v6 = sub_21594BB58((unsigned __int8 *)a3);
  size_t v7 = v6;
  if (v5) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0;
  }
  if (!v8
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  char v9 = *(char ***)(a2 + 8);
  uint64_t result = *v9;
  unint64_t v11 = v9[1] - *v9;
  if (v7 > v11)
  {
    sub_215957E5C(*(void *)(a2 + 8), v7 - v11);
    uint64_t result = **(char ***)(a2 + 8);
LABEL_13:
    uint64_t result = (char *)memmove(result, v5, v7);
    goto LABEL_14;
  }
  if (v7 < v11) {
    v9[1] = &result[v7];
  }
  if (v7) {
    goto LABEL_13;
  }
LABEL_14:
  *(unsigned char *)(a1 + 120) = 1;
  return result;
}

void sub_215957AA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a36 < 0)
  {
    operator delete(__p);
    if ((a30 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a30 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a25);
  _Unwind_Resume(exception_object);
}

void sub_215957AFC()
{
  v0[6] = 0;
  sub_2157491FC(v0, "'");
  sub_215953A60();
}

void sub_215957BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215957C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215957C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215957C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215957C4C(uint64_t a1, const char *a2)
{
  int v4 = 0;
  sub_2157E4C90(v3, "Mesh ");
  std::string v5 = v3;
  uint64_t v6 = a2;
  size_t v7 = v3;
  BOOL v8 = a2;
  char v9 = a2;
  if (v4 != -1)
  {
    uint64_t v10 = &v5;
    ((void (*)(void **, _DWORD *))off_26C6727C0[v4])(&v10, v3);
    std::string v5 = v3;
    uint64_t v6 = " have unsupported value type '";
    size_t v7 = v3;
    BOOL v8 = " have unsupported value type '";
    char v9 = " have unsupported value type '";
    if (v4 != -1)
    {
      uint64_t v10 = &v5;
      ((void (*)(void **, _DWORD *))off_26C6726D8[v4])(&v10, v3);
      sub_2157E3DE8();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_215957DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215957E5C(uint64_t a1, size_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero(*(void **)(a1 + 8), a2);
      v5 += a2;
    }
    *(void *)(a1 + 8) = v5;
  }
  else
  {
    uint64_t v6 = *(void ***)a1;
    uint64_t v7 = v5 - *(void *)a1;
    unint64_t v8 = v7 + a2;
    if ((uint64_t)(v7 + a2) < 0) {
      sub_215738AC0();
    }
    unint64_t v9 = v4 - (void)v6;
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    BOOL v10 = v9 >= 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    if (!v10) {
      uint64_t v11 = v8;
    }
    if (v11)
    {
      LODWORD(v30) = v11;
      uint64_t v12 = *(unsigned int *)(a1 + 28);
      if (v12 == -1) {
        sub_215742D4C();
      }
      uint64_t v28 = &v30;
      uint64_t v14 = ((uint64_t (*)(void ***, uint64_t))off_26C6727D8[v12])(&v28, a1 + 24);
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v13 = 0;
    }
    uint64_t v15 = v14 + v7;
    uint64_t v16 = v14 + v13;
    bzero((void *)(v14 + v7), a2);
    char v17 = *(void ***)a1;
    char v18 = *(void ***)(a1 + 8);
    unint64_t v19 = (unint64_t)v18 - *(void *)a1;
    if (v18 != *(void ***)a1)
    {
      if (v19 < 0x20) {
        goto LABEL_31;
      }
      if ((void **)((char *)v18 + (void)((char *)v6 - v14 - v5)) < (void **)0x20) {
        goto LABEL_31;
      }
      uint64_t v20 = (void **)((char *)v18 - (v19 & 0xFFFFFFFFFFFFFFE0));
      v15 -= v19 & 0xFFFFFFFFFFFFFFE0;
      int v21 = (_OWORD *)(v7 + v14 - 16);
      int v22 = (long long *)(v18 - 2);
      unint64_t v23 = v19 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v24 = *v22;
        *(v21 - 1) = *(v22 - 1);
        _OWORD *v21 = v24;
        v21 -= 2;
        v22 -= 2;
        v23 -= 32;
      }
      while (v23);
      char v18 = v20;
      if (v19 != (v19 & 0xFFFFFFFFFFFFFFE0))
      {
LABEL_31:
        do
        {
          char v25 = *((unsigned char *)v18 - 1);
          char v18 = (void **)((char *)v18 - 1);
          *(unsigned char *)--uint64_t v15 = v25;
        }
        while (v18 != v17);
      }
      char v18 = *(void ***)a1;
    }
    *(void *)a1 = v15;
    *(void *)(a1 + 8) = v14 + v7 + a2;
    uint64_t v26 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v16;
    if (v18)
    {
      uint64_t v28 = v18;
      int v29 = v26 - v18;
      uint64_t v27 = *(unsigned int *)(a1 + 28);
      if (v27 == -1) {
        sub_215742D4C();
      }
      int v30 = &v28;
      ((void (*)(void **, uint64_t))off_26C672718[v27])(&v30, a1 + 24);
    }
  }
}

void *sub_215958044(unsigned int **a1)
{
  return operator new(**a1);
}

vm_address_t sub_215958074(unsigned int **a1)
{
  vm_size_t v1 = (**a1 + 4095) & 0x1FFFFF000;
  vm_address_t address = 0;
  if (vm_allocate(*MEMORY[0x263EF8960], &address, v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    uint64_t v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  return address;
}

char *sub_2159580FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a3 != 11) {
    sub_215957AFC();
  }
  uint64_t v5 = *(const void **)(a3 + 16);
  uint64_t v6 = sub_21594BB58((unsigned __int8 *)a3);
  unint64_t v7 = v6;
  if (v5) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0;
  }
  if (!v8
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v9 = *(char ***)(a2 + 8);
  uint64_t result = *v9;
  unint64_t v11 = (v9[1] - *v9) >> 2;
  if (v7 > v11)
  {
    sub_215958438(*(void *)(a2 + 8), v7 - v11);
    uint64_t result = **(char ***)(a2 + 8);
LABEL_13:
    uint64_t result = (char *)memmove(result, v5, 4 * v7);
    goto LABEL_14;
  }
  if (v7 < v11) {
    v9[1] = &result[4 * v7];
  }
  if (v7) {
    goto LABEL_13;
  }
LABEL_14:
  *(unsigned char *)(a1 + 120) = 1;
  return result;
}

void sub_2159583DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a36 < 0)
  {
    operator delete(__p);
    if ((a30 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a30 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a25);
  _Unwind_Resume(exception_object);
}

void sub_215958438(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(char **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (a2 > (v4 - (uint64_t)v5) >> 2)
  {
    uint64_t v6 = *(char **)a1;
    uint64_t v7 = (uint64_t)&v5[-*(void *)a1];
    uint64_t v8 = v7 >> 2;
    unint64_t v9 = (v7 >> 2) + a2;
    if (v9 >> 62) {
      sub_215738AC0();
    }
    uint64_t v10 = v4 - (void)v6;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    BOOL v11 = (unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL;
    uint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v11) {
      uint64_t v12 = v9;
    }
    if (v12)
    {
      LODWORD(v33) = v12;
      uint64_t v13 = *(unsigned int *)(a1 + 28);
      if (v13 == -1) {
        sub_215742D4C();
      }
      uint64_t v31 = (char *)&v33;
      uint64_t v15 = ((uint64_t (*)(char **, uint64_t))off_26C6727E8[v13])(&v31, a1 + 24);
      uint64_t v6 = *(char **)a1;
      uint64_t v5 = *(char **)(a1 + 8);
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v14 = 0;
    }
    uint64_t v16 = (char *)(v15 + 4 * v8);
    size_t v17 = 4 * a2;
    uint64_t v18 = v15 + 4 * v14;
    bzero(v16, v17);
    unint64_t v19 = &v16[v17];
    if (v5 == v6) {
      goto LABEL_23;
    }
    unint64_t v20 = v5 - v6 - 4;
    if (v20 >= 0x2C)
    {
      if ((unint64_t)&v5[-v15 - v7] >= 0x20)
      {
        uint64_t v22 = (v20 >> 2) + 1;
        uint64_t v23 = 4 * (v22 & 0x7FFFFFFFFFFFFFF8);
        int v21 = &v5[-v23];
        v16 -= v23;
        long long v24 = (_OWORD *)(v15 + 4 * v8 - 16);
        char v25 = (long long *)(v5 - 16);
        uint64_t v26 = v22 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v27 = *v25;
          *(v24 - 1) = *(v25 - 1);
          _OWORD *v24 = v27;
          v24 -= 2;
          v25 -= 2;
          v26 -= 8;
        }
        while (v26);
        if (v22 == (v22 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_23:
          *(void *)a1 = v16;
          *(void *)(a1 + 8) = v19;
          uint64_t v29 = *(void *)(a1 + 16);
          *(void *)(a1 + 16) = v18;
          if (v6)
          {
            uint64_t v31 = v6;
            int v32 = (unint64_t)(v29 - (void)v6) >> 2;
            uint64_t v30 = *(unsigned int *)(a1 + 28);
            if (v30 == -1) {
              sub_215742D4C();
            }
            uint64_t v33 = &v31;
            ((void (*)(char ***, uint64_t))off_26C672708[v30])(&v33, a1 + 24);
          }
          return;
        }
      }
      else
      {
        int v21 = v5;
      }
    }
    else
    {
      int v21 = v5;
    }
    do
    {
      int v28 = *((_DWORD *)v21 - 1);
      v21 -= 4;
      *((_DWORD *)v16 - 1) = v28;
      v16 -= 4;
    }
    while (v21 != v6);
    goto LABEL_23;
  }
  if (a2)
  {
    bzero(*(void **)(a1 + 8), 4 * a2);
    v5 += 4 * a2;
  }
  *(void *)(a1 + 8) = v5;
}

void *sub_215958644(unsigned int **a1)
{
  return operator new(4 * **a1);
}

vm_address_t sub_215958674(unsigned int **a1)
{
  uint64_t v1 = (**a1 + 1023) & 0x1FFFFFC00;
  vm_address_t address = 0;
  if (vm_allocate(*MEMORY[0x263EF8960], &address, 4 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    uint64_t v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  return address;
}

void sub_2159586FC()
{
}

void sub_2159587E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8))(a10);
  }
  _Unwind_Resume(a1);
}

void sub_215958844()
{
}

void sub_215958968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, int a16, __int16 a17, char a18, char a19)
{
  sub_215733368(v20);
  sub_215733368((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  MEMORY[0x2166C4D20](v19, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2159589BC(void *a1)
{
  *a1 = &unk_26C672858;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_215958A58(void *a1)
{
  *a1 = &unk_26C672858;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215958B04(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215958B0C(float ***a1, float ***lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C672898, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      return sub_215B29E7C(a1 + 1, (float ***)(result + 8));
    }
  }
  return result;
}

void sub_215958BAC()
{
}

void sub_215958C48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215958C64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888120))
  {
    int v0 = sub_215959B08();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      int v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267888108, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267888118 = *(void *)(v5 - 8);
      xmmword_267888108 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888108, &dword_21572C000);
    __cxa_guard_release(&qword_267888120);
  }
  sub_21595A0FC(&xmmword_267888108, (uint64_t)"{");
}

void sub_215958D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_215958DA0(_Unwind_Exception *a1)
{
}

void sub_215958DB8(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 7;
}

void sub_215958DE4(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_215958E34(void *a1)
{
  *a1 = &unk_26C672858;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_215958ED0(void *a1)
{
  *a1 = &unk_26C672858;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215958F7C()
{
  int v0 = sub_21595955C();
  sub_2159590D8(v0, (uint64_t)"{");
}

void sub_215958FD8()
{
  int v0 = 0;
  sub_215959308();
}

void sub_215959074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C6725A8[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159590AC(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2159590D8(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  _DWORD v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_215959308();
}

void sub_215959278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215959290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159592A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159592B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159592CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159592E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159592F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215959308()
{
}

void sub_2159594F4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215959518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_21595955C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267887FE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267887FE0))
  {
    return &xmmword_267887FC8;
  }
  uint64_t v1 = sub_215959644();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267887FC8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267887FD8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267887FC8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267887FC8, &dword_21572C000);
  __cxa_guard_release(&qword_267887FE0);
  return &xmmword_267887FC8;
}

void sub_21595962C(_Unwind_Exception *a1)
{
}

std::string *sub_215959644()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888000, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888000))
  {
    return &stru_267887FE8;
  }
  sub_2159598F8((uint64_t)__p);
  sub_215959740(__p, &stru_267887FE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267887FE8, &dword_21572C000);
  __cxa_guard_release(&qword_267888000);
  return &stru_267887FE8;
}

void sub_215959700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888000);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888000);
  _Unwind_Resume(a1);
}

void sub_215959740(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_215959B08();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    BOOL v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    uint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2159598A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2159598F8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888080))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::TriMesh>]", qword_267888068);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888068, &dword_21572C000);
    __cxa_guard_release(&qword_267888080);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678880A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678880A0))
  {
    size_t v3 = sub_215747D98(qword_267888068, "<", 0);
    sub_215747C90(qword_267888068, 0, v3, qword_267888088);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888088, &dword_21572C000);
    __cxa_guard_release(&qword_2678880A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678880C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678880C0))
  {
    sub_215E19DF4((uint64_t)qword_267888088, (uint64_t)&xmmword_2678880A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678880A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678880C0);
  }
  if (byte_2678880BF < 0)
  {
    long long v2 = xmmword_2678880A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678880A8;
    *(void *)(a1 + 16) = unk_2678880B8;
  }
}

void sub_215959AC0(_Unwind_Exception *a1)
{
}

void sub_215959AD8(_Unwind_Exception *a1)
{
}

void sub_215959AF0(_Unwind_Exception *a1)
{
}

long long *sub_215959B08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888020, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888020))
  {
    return &xmmword_267888008;
  }
  uint64_t v1 = (char *)sub_215959BF0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888008, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888018 = *((void *)v1 + 2);
    xmmword_267888008 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888008, &dword_21572C000);
  __cxa_guard_release(&qword_267888020);
  return &xmmword_267888008;
}

void sub_215959BD8(_Unwind_Exception *a1)
{
}

void *sub_215959BF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888040, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888040))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::TriMesh]", qword_267888028);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888028, &dword_21572C000);
    __cxa_guard_release(&qword_267888040);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888060))
  {
    return &unk_267888048;
  }
  sub_215E19DF4((uint64_t)qword_267888028, (uint64_t)&unk_267888048);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888048, &dword_21572C000);
  __cxa_guard_release(&qword_267888060);
  return &unk_267888048;
}

void sub_215959CF4(_Unwind_Exception *a1)
{
}

void sub_215959D0C(_Unwind_Exception *a1)
{
}

std::string *sub_215959D24()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678880E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678880E0))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_215959B08();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)uint64_t v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_215959FF8();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)std::string __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_2678880C8, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678880C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678880E0);
        return &stru_2678880C8;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_2678880C8;
}

void sub_215959F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2678880E0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2678880E0);
  _Unwind_Resume(a1);
}

std::string *sub_215959FF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888100, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888100))
  {
    return &stru_2678880E8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 7U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678880E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678880E8, &dword_21572C000);
  __cxa_guard_release(&qword_267888100);
  return &stru_2678880E8;
}

void sub_21595A0BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888100);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888100);
  _Unwind_Resume(a1);
}

void sub_21595A0FC(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  _DWORD v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_215959308();
}

void sub_21595A240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21595A258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21595A26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21595A280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21595A294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21595A2A8(char *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v45 = a2;
  if (a1)
  {
    int v21 = 0;
    uint64_t v22 = 0;
    switch(a2)
    {
      case 0:
        char v4 = *a1;
        int v5 = operator new(1uLL);
        *int v5 = v4;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 1);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        LOBYTE(v6[1].__vftable) = 0;
        int64x2_t v8 = (uint64_t *)&v6[1];
        goto LABEL_52;
      case 1:
        if (a1) {
          goto LABEL_46;
        }
        __int16 v14 = *(_WORD *)a1;
        int v5 = operator new(2uLL);
        *(_WORD *)int v5 = v14;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 2);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 1;
        break;
      case 2:
        if ((a1 & 3) != 0) {
          goto LABEL_46;
        }
        int v11 = *(_DWORD *)a1;
        int v5 = operator new(4uLL);
        *(_DWORD *)int v5 = v11;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 4);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 2;
        break;
      case 3:
        if ((a1 & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v17 = *(void *)a1;
        int v5 = operator new(8uLL);
        *(void *)int v5 = v17;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 8);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 3;
        break;
      case 5:
        char v18 = *a1;
        int v5 = operator new(1uLL);
        *int v5 = v18;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 1);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 5;
        break;
      case 6:
        if (a1) {
          goto LABEL_46;
        }
        __int16 v13 = *(_WORD *)a1;
        int v5 = operator new(2uLL);
        *(_WORD *)int v5 = v13;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 2);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 6;
        break;
      case 7:
        if ((a1 & 3) != 0) {
          goto LABEL_46;
        }
        int v15 = *(_DWORD *)a1;
        int v5 = operator new(4uLL);
        *(_DWORD *)int v5 = v15;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 4);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 7;
        break;
      case 8:
        if ((a1 & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v16 = *(void *)a1;
        int v5 = operator new(8uLL);
        *(void *)int v5 = v16;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 8);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 8;
        break;
      case 11:
        if ((a1 & 3) != 0) {
          goto LABEL_46;
        }
        int v20 = *(_DWORD *)a1;
        int v5 = operator new(4uLL);
        *(_DWORD *)int v5 = v20;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 4);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 11;
        break;
      case 12:
        if ((a1 & 7) != 0)
        {
LABEL_46:
          int v47 = 0;
          sub_2158C402C(v46, "data pointer is not aligned with given value type ");
          sub_2157E3DE8();
        }
        uint64_t v19 = *(void *)a1;
        int v5 = operator new(8uLL);
        *(void *)int v5 = v19;
        int8x16_t v6 = (std::__shared_weak_count *)operator new(0x38uLL);
        v6->__shared_owners_ = 0;
        v6->__shared_weak_owners_ = 0;
        uint64_t v7 = (std::__shared_weak_count_vtbl *)(v5 + 8);
        v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
        char v12 = 12;
        break;
      default:
        sub_215E097D8(a2);
    }
    LOBYTE(v6[1].__vftable) = v12;
    int64x2_t v8 = (uint64_t *)&v6[1];
LABEL_52:
    v6[1].__shared_owners_ = (uint64_t)v5;
    v6[1].__shared_weak_owners_ = (uint64_t)v7;
    v6[2].__vftable = v7;
    int v21 = v8;
    uint64_t v22 = v6;
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a3 = v8;
    *(void *)(a3 + 8) = v6;
    *(unsigned char *)(a3 + 120) = 1;
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    if (v22)
    {
      if (!atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    return;
  }
  int v47 = 0;
  sub_2157E4058(v46, "data pointer is null");
  if (v47 == -1) {
    sub_215742D4C();
  }
  int v21 = &v48;
  ((void (*)(void **__return_ptr, uint64_t **, _DWORD *))off_26C672930[v47])(v23, &v21, v46);
  if (v47 != -1) {
    ((void (*)(uint64_t **, _DWORD *))off_26C672918[v47])(&v21, v46);
  }
  if (SHIBYTE(v24) < 0)
  {
    sub_215738B0C(&__dst, v23[0], (unint64_t)v23[1]);
  }
  else
  {
    long long __dst = *(_OWORD *)v23;
    uint64_t v26 = v24;
  }
  char v27 = 1;
  LOBYTE(v28) = 0;
  char v32 = 0;
  char v33 = 1;
  sub_21573FCF8(0xAu, &__dst, (uint64_t)&v34);
  *(_OWORD *)a3 = v34;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v44)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v9 = v37;
    if (v37)
    {
      *(_OWORD *)(a3 + 16) = v35;
      *(void *)(a3 + 32) = v36;
      uint64_t v36 = 0;
      long long v35 = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v43)
    {
      uint64_t v10 = v40;
      *(void *)(a3 + 64) = v39;
      *(_OWORD *)(a3 + 48) = v38;
      long long v38 = 0uLL;
      *(void *)(a3 + 72) = v10;
      *(_OWORD *)(a3 + 80) = v41;
      *(void *)(a3 + 96) = v42;
      uint64_t v39 = 0;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v9 && SHIBYTE(v36) < 0) {
      operator delete((void *)v35);
    }
    if (!v33) {
      goto LABEL_47;
    }
    goto LABEL_21;
  }
  *(unsigned char *)(a3 + 120) = 0;
  if (v33)
  {
LABEL_21:
    if (v32)
    {
      if (v31 < 0) {
        operator delete(__p);
      }
      if (v29 < 0) {
        operator delete(v28);
      }
    }
    if (v27 && SHIBYTE(v26) < 0) {
      operator delete((void *)__dst);
    }
  }
LABEL_47:
  if (SHIBYTE(v24) < 0) {
    operator delete(v23[0]);
  }
}

void sub_21595AB08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  operator delete(v30);
  sub_215733368((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void sub_21595ABD8(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_21595AC20(uint64_t a1, long long *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384))
  {
    void v19[3] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(v19);
      LODWORD(v16) = v19[0].denom;
      LODWORD(v15) = v19[0].numer;
      *(double *)&qword_267890880 = (double)v15 / (double)v16;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info info = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    uint64_t v21 = 2;
    LOBYTE(v22) = 0;
    char v24 = 0;
    LOBYTE(v25) = 0;
    char v27 = 0;
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v34 = 0;
    v35[0] = 0;
    v35[24] = 0;
    sub_21595B770();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    v19[0] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v17) = info.numer;
      LODWORD(v18) = info.denom;
      *(double *)&qword_267890880 = (double)v17 / (double)v18;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      LOBYTE(v21) = v4;
      LOBYTE(v22) = 0;
      char v24 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v22, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v22 = *a2;
          uint64_t v23 = *((void *)a2 + 2);
        }
        char v24 = 1;
        LOBYTE(v25) = 0;
        char v27 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_23:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v25, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v25 = a2[6];
            uint64_t v26 = *((void *)a2 + 14);
          }
          char v27 = 1;
          LOBYTE(v28) = 0;
          char v29 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_15:
            LOBYTE(v30) = 0;
            char v34 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v30, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v30 = a2[2];
                uint64_t v31 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v32 = _X0;
              uint64_t v33 = 0;
              char v34 = 1;
            }
            sub_215746DAC((uint64_t)v35, (uint64_t)(a2 + 11));
            sub_21595B770();
          }
LABEL_14:
          long long v28 = a2[8];
          char v29 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v28) = 0;
        char v29 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v25) = 0;
      char v27 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info info = v3;
  LOBYTE(v21) = v4;
  LOBYTE(v22) = 0;
  char v24 = 0;
  goto LABEL_12;
}

void sub_21595B068(_Unwind_Exception *a1)
{
}

void sub_21595B080(_Unwind_Exception *a1)
{
}

void sub_21595B098(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
    {
      operator delete((void *)STACK[0x240]);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_21595B178(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A768, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(void *)(a1 + 424);
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 432);
  if (v7)
  {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v25 = v8;
    uint64_t v26 = v7;
    if (v8)
    {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      goto LABEL_22;
    }
LABEL_14:
    int v9 = sub_215AB5250(8u);
    uint64_t v10 = v9;
    if (v9[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v9, *((void *)v9 + 1));
    }
    else
    {
      long long v11 = *(_OWORD *)v9;
      uint64_t v28 = *((void *)v9 + 2);
      long long __dst = v11;
    }
    int v29 = *((_DWORD *)v10 + 6);
    sub_2157C3E6C(&v24, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v21, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)a1;
      uint64_t v22 = *(void *)(a1 + 16);
    }
    int v23 = *(_DWORD *)(a1 + 24);
    unint64_t v18 = operator new(0x20uLL);
    long long v19 = xmmword_215E9AD50;
    strcpy((char *)v18, "cannot return data as VZNumber");
    char v20 = 1;
    sub_215964570((long long **)&v24, (uint64_t)v21, (uint64_t)&v18);
  }
  uint64_t v25 = *(void *)(a1 + 424);
  uint64_t v26 = 0;
  if (!v8) {
    goto LABEL_14;
  }
LABEL_22:
  char v12 = operator new(0x38uLL);
  v12[1] = 0;
  void v12[2] = 0;
  *char v12 = &unk_26C6728D8;
  *((unsigned char *)v12 + 24) = *(unsigned char *)(v8 + 8);
  v12[4] = 0;
  v12[5] = 0;
  v12[6] = 0;
  __int16 v14 = *(unsigned char **)(v8 + 16);
  __int16 v13 = *(unsigned char **)(v8 + 24);
  size_t v15 = v13 - v14;
  if (v13 != v14)
  {
    if ((v15 & 0x8000000000000000) != 0) {
      sub_215738AC0();
    }
    unint64_t v16 = (char *)operator new(v13 - v14);
    v12[4] = v16;
    v12[5] = v16;
    unint64_t v17 = &v16[v15];
    v12[6] = &v16[v15];
    memcpy(v16, v14, v15);
    v12[5] = v17;
  }
  *(void *)a2 = v12 + 3;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 120) = 1;
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  if (v26)
  {
    if (!atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_21595B620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25)
{
  sub_2157C3C78(&a25);
  if (*(char *)(v25 - 89) < 0)
  {
    operator delete(*(void **)(v25 - 112));
    sub_215733368(v25 - 128);
    _Unwind_Resume(a1);
  }
  sub_215733368(v25 - 128);
  _Unwind_Resume(a1);
}

void sub_21595B6E0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21595B700(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6728D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21595B754(uint64_t a1)
{
  char v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
}

void sub_21595B770()
{
}

void sub_21595B8BC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_21595B8F0(_Unwind_Exception *a1)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 24) = v4;
    operator delete(v4);
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C402343F4F0);
  _Unwind_Resume(a1);
}

void sub_21595B928(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E5EC8((size_t *)&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 1:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E80EC(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 2:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E82AC(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 3:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E8454(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 5:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E85FC((size_t *)&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 6:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E87A0(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 7:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E8948(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 8:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E8AF0(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 11:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E8C98(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      case 12:
        uint64_t v36 = a2;
        uint64_t v37 = a1;
        sub_2157E8E40(&v36, __p);
        int v5 = __p[0];
        BOOL v6 = __p[1];
        v13[0] = __p[0];
        v13[1] = __p[1];
        uint64_t v7 = (atomic_ullong *)operator new(0x28uLL);
        break;
      default:
        sub_215E097D8(a3);
    }
    long long v11 = (std::__shared_weak_count *)v7;
    v7[1] = 0;
    unsigned char v7[2] = 0;
    atomic_ullong *v7 = (atomic_ullong)&unk_26C672958;
    v7[3] = (atomic_ullong)v5;
    v7[4] = (atomic_ullong)v6;
    char v12 = (std::__shared_weak_count *)v7;
    atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
    *(void *)a4 = v7 + 3;
    *(void *)(a4 + 8) = v7;
    *(unsigned char *)(a4 + 120) = 1;
    if (!atomic_fetch_add(v7 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(atomic_ullong *))(*v7 + 16))(v7);
      std::__shared_weak_count::__release_weak(v11);
    }
    if (v12)
    {
      if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else if (a2)
  {
    sub_2157C2FA0("data pointer is null but num_values is ", (unint64_t *)&v35);
    if (SHIBYTE(v14) < 0)
    {
      sub_215738B0C(__dst, v13[0], (unint64_t)v13[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v13;
      uint64_t v16 = v14;
    }
    char v17 = 1;
    LOBYTE(v18) = 0;
    char v22 = 0;
    char v23 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)__p);
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v34)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v9 = v27;
      if (v27)
      {
        *(_OWORD *)(a4 + 16) = v25;
        *(void *)(a4 + 32) = v26;
        uint64_t v26 = 0;
        long long v25 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v33)
      {
        uint64_t v10 = v30;
        *(void *)(a4 + 64) = v29;
        *(_OWORD *)(a4 + 48) = v28;
        long long v28 = 0uLL;
        *(void *)(a4 + 72) = v10;
        *(_OWORD *)(a4 + 80) = v31;
        *(void *)(a4 + 96) = v32;
        uint64_t v29 = 0;
        long long v31 = 0uLL;
        uint64_t v32 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v9 && SHIBYTE(v26) < 0) {
        operator delete((void *)v25);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v23)
    {
      if (v22)
      {
        if (v21 < 0) {
          operator delete(v20);
        }
        if (v19 < 0) {
          operator delete(v18);
        }
      }
      if (v17 && SHIBYTE(v16) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(v14) < 0) {
      operator delete(v13[0]);
    }
  }
  else
  {
    uint64_t v8 = (char *)operator new(0x28uLL);
    *((void *)v8 + 1) = 0;
    *((void *)v8 + 2) = 0;
    *(void *)uint64_t v8 = &unk_26C672958;
    __p[0] = 0;
    __p[1] = 0;
    *(void *)&long long v25 = 0;
    sub_215D1482C(v13, 7, (uint64_t)__p);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)v13;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    *(void *)a4 = v8 + 24;
    *(void *)(a4 + 8) = v8;
    *(unsigned char *)(a4 + 120) = 1;
  }
}

void sub_21595BE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_21595BE44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595BE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21595BED8(unsigned __int8 ***a1, long long *a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  long long v41 = 0;
  uint64_t v42 = 0;
  char v43 = 0;
  sub_215D1482C(&v40, 7, (uint64_t)&v41);
  uint64_t v4 = (std::__shared_weak_count *)*((void *)&v40 + 1);
  long long v39 = v40;
  if (v41)
  {
    uint64_t v42 = v41;
    operator delete(v41);
  }
  int v5 = *a1;
  switch(***a1)
  {
    case 0u:
      uint64_t v7 = sub_215D15FDC(v5);
      uint64_t v8 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v8 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D154A0(&v40, 0, &v41, v7, v6);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 1u:
      unint64_t v11 = sub_215D160E4(v5);
      char v12 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v12;
      if (v12) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v12 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D156FC(&v40, 1, &v41, v11, v10);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 2u:
      unint64_t v14 = sub_215D161EC(v5);
      size_t v15 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v15;
      if (v15) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v15 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D1591C(&v40, 2, &v41, v14, v13);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 3u:
      unint64_t v17 = sub_215D162F4(v5);
      unint64_t v18 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v18;
      if (v18) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v18 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D15B3C(&v40, 3, &v41, v17, v16);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 5u:
      uint64_t v20 = sub_215D15F58(v5);
      char v21 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v21;
      if (v21) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v21 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D15354(&v40, 5, &v41, v20, v19);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 6u:
      unint64_t v23 = sub_215D16060(v5);
      char v24 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v24;
      if (v24) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v24 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D155EC(&v40, 6, &v41, v23, v22);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 7u:
      unint64_t v26 = sub_215D16168(v5);
      unsigned __int8 v27 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v27;
      if (v27) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v27 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D1580C(&v40, 7, &v41, v26, v25);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 8u:
      unint64_t v29 = sub_215D16270(v5);
      uint64_t v30 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v30;
      if (v30) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v30 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D15A2C(&v40, 8, &v41, v29, v28);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 0xBu:
      unint64_t v35 = sub_215D16378(v5);
      uint64_t v36 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v36;
      if (v36) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v36 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D15C4C(&v40, 11, &v41, v35, v34);
      int v9 = v41;
      if (v41) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 0xCu:
      unint64_t v32 = sub_215D163FC(v5);
      char v33 = a1[1];
      uint64_t v42 = (void (*)(uint64_t))*a1;
      char v43 = v33;
      if (v33) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v33 + 1, 1uLL, memory_order_relaxed);
      }
      long long v41 = (void (*)(uint64_t))sub_21595D6BC;
      sub_215D15D5C(&v40, 12, &v41, v32, v31);
      int v9 = v41;
      if (v41) {
LABEL_44:
      }
        ((void (*)(void, void (**)(uint64_t), void, void, void))v9)(0, &v41, 0, 0, 0);
LABEL_45:
      long long v37 = v40;
      long long v40 = 0uLL;
      long long v39 = v37;
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      long long v38 = (std::__shared_weak_count *)*((void *)&v40 + 1);
      if (*((void *)&v40 + 1))
      {
        if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v40 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      sub_2157F21BC((uint64_t)&v39, a2);
    default:
      sub_215E097D8(***a1);
  }
}

void sub_21595C4D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595C6E8(_Unwind_Exception *a1)
{
  mach_timebase_info v3 = *(void **)(v1 - 88);
  if (v3)
  {
    *(void *)(v1 - 80) = v3;
    operator delete(v3);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x21595C6E0);
}

void sub_21595C738(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A838, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      uint64_t v49 = 0;
      long long v50 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(unsigned __int8 ***)(a1 + 424);
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 432);
  if (v7)
  {
    p_shared_owners = &v7->__shared_owners_;
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v49 = v8;
    long long v50 = v7;
    if (v8)
    {
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      long long v41 = 0uLL;
      __dst[0] = v8;
      __dst[1] = v7;
      atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
      goto LABEL_23;
    }
LABEL_14:
    uint64_t v10 = sub_215AB5250(2u);
    unint64_t v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      long long v52 = (long long *)*((void *)v10 + 2);
      *(_OWORD *)long long __dst = v12;
    }
    int v53 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v48, (uint64_t)__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v45, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)char v45 = *(_OWORD *)a1;
      uint64_t v46 = *(void *)(a1 + 16);
    }
    int v47 = *(_DWORD *)(a1 + 24);
    uint64_t v42 = operator new(0x20uLL);
    long long v43 = xmmword_215EAF320;
    strcpy((char *)v42, "cannot return data as VZNumbers");
    char v44 = 1;
    sub_215964570((long long **)&v48, (uint64_t)v45, (uint64_t)&v42);
  }
  uint64_t v49 = *(unsigned __int8 ***)(a1 + 424);
  long long v50 = 0;
  if (!v8) {
    goto LABEL_14;
  }
  long long v41 = 0uLL;
  __dst[0] = v8;
  __dst[1] = 0;
LABEL_23:
  uint64_t v13 = v8 + 1;
  unint64_t v14 = v8[1];
  long long v52 = &v41;
  int v15 = *v14;
  switch(v15)
  {
    case 0:
      uint64_t v17 = sub_215D15FDC(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D154A0(v45, 0, &v54, v17, v16);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 1:
      unint64_t v19 = sub_215D160E4(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D156FC(v45, 1, &v54, v19, v18);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 2:
      unint64_t v21 = sub_215D161EC(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D1591C(v45, 2, &v54, v21, v20);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 3:
      unint64_t v23 = sub_215D162F4(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D15B3C(v45, 3, &v54, v23, v22);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 5:
      uint64_t v25 = sub_215D15F58(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D15354(v45, 5, &v54, v25, v24);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 6:
      unint64_t v27 = sub_215D16060(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D155EC(v45, 6, &v54, v27, v26);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 7:
      unint64_t v29 = sub_215D16168(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D1580C(v45, 7, &v54, v29, v28);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 8:
      unint64_t v31 = sub_215D16270(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D15A2C(v45, 8, &v54, v31, v30);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 11:
      unint64_t v35 = sub_215D16378(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D15C4C(v45, 11, &v54, v35, v34);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    case 12:
      unint64_t v33 = sub_215D163FC(v13);
      BOOL v55 = v8;
      std::string __p = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      unsigned int v54 = (void (*)(uint64_t))sub_21595D524;
      sub_215D15D5C(v45, 12, &v54, v33, v32);
      if (v54) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v54)(0, &v54, 0, 0, 0);
      }
      break;
    default:
      sub_215E097D8(v15);
  }
  uint64_t v36 = (char *)operator new(0x28uLL);
  *((void *)v36 + 2) = 0;
  *(_OWORD *)(v36 + 24) = *(_OWORD *)v45;
  *(void *)uint64_t v36 = &unk_26C672958;
  *((void *)v36 + 1) = 0;
  v45[0] = 0;
  v45[1] = 0;
  long long v37 = (std::__shared_weak_count *)*((void *)&v41 + 1);
  *(void *)&long long v41 = v36 + 24;
  *((void *)&v41 + 1) = v36;
  if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
    std::__shared_weak_count::__release_weak(v37);
  }
  long long v38 = (std::__shared_weak_count *)v45[1];
  if (v45[1] && !atomic_fetch_add((atomic_ullong *volatile)v45[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  long long v39 = (std::__shared_weak_count *)__dst[1];
  if (__dst[1] && !atomic_fetch_add((atomic_ullong *volatile)__dst[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
    std::__shared_weak_count::__release_weak(v39);
  }
  *(_OWORD *)a2 = v41;
  long long v41 = 0uLL;
  *(unsigned char *)(a2 + 120) = 1;
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  long long v40 = v50;
  if (v50)
  {
    if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
}

void sub_21595D108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595D430(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672958;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21595D450(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672958;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21595D4A4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void *sub_21595D524(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672998;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_21595D524;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_21595D524;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con7NumbersENS3_7PackageELj2EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con7NumbersENS3_7PackageELj2EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con7NumbersENS3_7PackageELj2EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con7NumbersENS3_7PackageELj2EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE8BC)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_21595D6BC(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C6729A8;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_21595D6BC;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_21595D6BC;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con7NumbersEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con7NumbersEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con7NumbersEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con7NumbersEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE8F0)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void sub_21595D854(void *a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v33 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E38D4(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 1:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E7FFC(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 2:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E81BC(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 3:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E8364(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 5:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E850C(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 6:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E86B0(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 7:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E8858(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 8:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E8A00(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 11:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E8BA8(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 12:
        v11[0] = (void *)(2 * a2);
        v11[1] = a1;
        sub_2157E8D50(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      default:
        sub_215E097D8(a3);
    }
    uint64_t v9 = (std::__shared_weak_count *)v5;
    *((void *)v5 + 1) = 0;
    *((void *)v5 + 2) = 0;
    *(void *)uint64_t v5 = &unk_26C6729C8;
    *(_OWORD *)(v5 + 24) = *(_OWORD *)__p;
    unint64_t v10 = (std::__shared_weak_count *)v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    *(void *)a4 = v5 + 24;
    *(void *)(a4 + 8) = v5;
    *(unsigned char *)(a4 + 120) = 1;
    if (!atomic_fetch_add((atomic_ullong *volatile)v5 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(char *))(*(void *)v5 + 16))(v5);
      std::__shared_weak_count::__release_weak(v9);
    }
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    if (!a2)
    {
      BOOL v6 = operator new(0x28uLL);
      v6[1] = 0;
      v6[2] = 0;
      *BOOL v6 = &unk_26C6729C8;
      __p[0] = 0;
      __p[1] = 0;
      *(void *)&long long v23 = 0;
      sub_215D17DD8();
    }
    sub_2157C2FA0("data pointer is null but num_points is ", &v33);
    if (SHIBYTE(v12) < 0)
    {
      sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v11;
      uint64_t v14 = v12;
    }
    char v15 = 1;
    LOBYTE(v16) = 0;
    char v20 = 0;
    char v21 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)__p);
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v32)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v7 = v25;
      if (v25)
      {
        *(_OWORD *)(a4 + 16) = v23;
        *(void *)(a4 + 32) = v24;
        uint64_t v24 = 0;
        long long v23 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v31)
      {
        uint64_t v8 = v28;
        *(void *)(a4 + 64) = v27;
        *(_OWORD *)(a4 + 48) = v26;
        long long v26 = 0uLL;
        *(void *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v29;
        *(void *)(a4 + 96) = v30;
        uint64_t v27 = 0;
        long long v29 = 0uLL;
        uint64_t v30 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v7 && SHIBYTE(v24) < 0) {
        operator delete((void *)v23);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v21)
    {
      if (v20)
      {
        if (v19 < 0) {
          operator delete(v18);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(v11[0]);
    }
  }
}

void sub_21595DCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_21595DD34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595DD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21595DDC8(void *a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v33 = a2;
  if (a1)
  {
    switch(a3)
    {
      case 0:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157E8EF8(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 1:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB388(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 2:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB478(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 3:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB568(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 5:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB658(__p, (size_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 6:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB748(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 7:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB838(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 8:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EB928(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 11:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EBA18(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      case 12:
        v11[0] = (void *)(3 * a2);
        v11[1] = a1;
        sub_2157EBB08(__p, (uint64_t *)v11);
        uint64_t v5 = (char *)operator new(0x28uLL);
        break;
      default:
        sub_215E097D8(a3);
    }
    uint64_t v9 = (std::__shared_weak_count *)v5;
    *((void *)v5 + 1) = 0;
    *((void *)v5 + 2) = 0;
    *(void *)uint64_t v5 = &unk_26C672A18;
    *(_OWORD *)(v5 + 24) = *(_OWORD *)__p;
    unint64_t v10 = (std::__shared_weak_count *)v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit((atomic_ullong *volatile)v5 + 1, 1uLL, memory_order_relaxed);
    *(void *)a4 = v5 + 24;
    *(void *)(a4 + 8) = v5;
    *(unsigned char *)(a4 + 120) = 1;
    if (!atomic_fetch_add((atomic_ullong *volatile)v5 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(char *))(*(void *)v5 + 16))(v5);
      std::__shared_weak_count::__release_weak(v9);
    }
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    if (!a2)
    {
      BOOL v6 = operator new(0x28uLL);
      v6[1] = 0;
      v6[2] = 0;
      *BOOL v6 = &unk_26C672A18;
      __p[0] = 0;
      __p[1] = 0;
      *(void *)&long long v23 = 0;
      sub_215D1835C();
    }
    sub_2157C2FA0("data pointer is null but num_points is ", &v33);
    if (SHIBYTE(v12) < 0)
    {
      sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v11;
      uint64_t v14 = v12;
    }
    char v15 = 1;
    LOBYTE(v16) = 0;
    char v20 = 0;
    char v21 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)__p);
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v32)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v7 = v25;
      if (v25)
      {
        *(_OWORD *)(a4 + 16) = v23;
        *(void *)(a4 + 32) = v24;
        uint64_t v24 = 0;
        long long v23 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v31)
      {
        uint64_t v8 = v28;
        *(void *)(a4 + 64) = v27;
        *(_OWORD *)(a4 + 48) = v26;
        long long v26 = 0uLL;
        *(void *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v29;
        *(void *)(a4 + 96) = v30;
        uint64_t v27 = 0;
        long long v29 = 0uLL;
        uint64_t v30 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v7 && SHIBYTE(v24) < 0) {
        operator delete((void *)v23);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v21)
    {
      if (v20)
      {
        if (v19 < 0) {
          operator delete(v18);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(v11[0]);
    }
  }
}

void sub_21595E268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_21595E2A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595E2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21595E33C()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  uint64_t v0 = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  sub_215D17DD8();
}

void sub_21595F0B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21595F1C8()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  uint64_t v0 = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  sub_215D1835C();
}

void sub_215960080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215960194(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A908, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      int v92 = 0;
      uint64_t v93 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(unsigned __int8 ***)(a1 + 424);
  int v7 = *(atomic_ullong **)(a1 + 432);
  if (!v7)
  {
    int v92 = *(unsigned __int8 ***)(a1 + 424);
    uint64_t v93 = 0;
    if (v8)
    {
      int v81 = 0;
      long long v82 = 0uLL;
      __dst[0] = v8;
      __dst[1] = 0;
      goto LABEL_23;
    }
LABEL_14:
    unint64_t v10 = sub_215AB5250(3u);
    unint64_t v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      uint64_t v95 = (long long *)*((void *)v10 + 2);
      *(_OWORD *)long long __dst = v12;
    }
    int v96 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v91, (uint64_t)__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v88, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)uint64_t v88 = *(_OWORD *)a1;
      uint64_t v89 = *(void *)(a1 + 16);
    }
    int v90 = *(_DWORD *)(a1 + 24);
    LODWORD(v82) = 2;
    sub_215961748((uint64_t)v83, (unsigned int *)&v82);
    *(_OWORD *)std::string __p = *(_OWORD *)v83;
    uint64_t v86 = v84;
    v83[1] = 0;
    uint64_t v84 = 0;
    v83[0] = 0;
    char v87 = 1;
    sub_215964570((long long **)&v91, (uint64_t)v88, (uint64_t)__p);
  }
  uint64_t v9 = v7 + 1;
  atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
  int v92 = v8;
  uint64_t v93 = (std::__shared_weak_count *)v7;
  if (!v8) {
    goto LABEL_14;
  }
  int v81 = (std::__shared_weak_count *)v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
  long long v82 = 0uLL;
  __dst[0] = v8;
  __dst[1] = v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
LABEL_23:
  uint64_t v13 = v8 + 1;
  uint64_t v14 = v8[1];
  uint64_t v95 = &v82;
  int v15 = *v14;
  switch(v15)
  {
    case 0:
      unint64_t v16 = sub_215D15FDC(v13);
      unint64_t v18 = v16;
      uint64_t v19 = v17;
      if (!v17 && v16 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_28;
      }
      if (v16 < 2)
      {
        unint64_t v20 = 0;
LABEL_110:
        uint64_t v19 = 0;
        goto LABEL_111;
      }
      unint64_t v20 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if (!v17)
      {
LABEL_28:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_110;
      }
LABEL_111:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D154A0(v88, 0, &v97, v20, v19);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v68 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      goto LABEL_195;
    case 1:
      unint64_t v31 = sub_215D160E4(v13);
      unint64_t v33 = v31;
      uint64_t v34 = v32;
      if (!v32 && v31 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_47;
      }
      if (v31 < 2)
      {
        unint64_t v35 = 0;
LABEL_121:
        uint64_t v34 = 0;
        goto LABEL_122;
      }
      unint64_t v35 = v31 & 0xFFFFFFFFFFFFFFFELL;
      if (!v32)
      {
LABEL_47:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_121;
      }
LABEL_122:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D156FC(v88, 1, &v97, v35, v34);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      unsigned int v69 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_195;
    case 2:
      unint64_t v21 = sub_215D161EC(v13);
      unint64_t v23 = v21;
      uint64_t v24 = v22;
      if (!v22 && v21 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_35;
      }
      if (v21 < 2)
      {
        unint64_t v25 = 0;
LABEL_88:
        uint64_t v24 = 0;
        goto LABEL_89;
      }
      unint64_t v25 = v21 & 0xFFFFFFFFFFFFFFFELL;
      if (!v22)
      {
LABEL_35:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_88;
      }
LABEL_89:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D1591C(v88, 2, &v97, v25, v24);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      int v66 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
      goto LABEL_195;
    case 3:
      unint64_t v46 = sub_215D162F4(v13);
      unint64_t v48 = v46;
      uint64_t v49 = v47;
      if (!v47 && v46 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_66;
      }
      if (v46 < 2)
      {
        unint64_t v50 = 0;
LABEL_154:
        uint64_t v49 = 0;
        goto LABEL_155;
      }
      unint64_t v50 = v46 & 0xFFFFFFFFFFFFFFFELL;
      if (!v47)
      {
LABEL_66:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_154;
      }
LABEL_155:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D15B3C(v88, 3, &v97, v50, v49);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v72 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      goto LABEL_195;
    case 5:
      unint64_t v51 = sub_215D15F58(v13);
      unint64_t v53 = v51;
      uint64_t v54 = v52;
      if (!v52 && v51 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_72;
      }
      if (v51 < 2)
      {
        unint64_t v55 = 0;
LABEL_165:
        uint64_t v54 = 0;
        goto LABEL_166;
      }
      unint64_t v55 = v51 & 0xFFFFFFFFFFFFFFFELL;
      if (!v52)
      {
LABEL_72:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_165;
      }
LABEL_166:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D15354(v88, 5, &v97, v55, v54);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      char v73 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
        std::__shared_weak_count::__release_weak(v73);
      }
      goto LABEL_195;
    case 6:
      unint64_t v26 = sub_215D16060(v13);
      unint64_t v28 = v26;
      uint64_t v29 = v27;
      if (!v27 && v26 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_41;
      }
      if (v26 < 2)
      {
        unint64_t v30 = 0;
LABEL_99:
        uint64_t v29 = 0;
        goto LABEL_100;
      }
      unint64_t v30 = v26 & 0xFFFFFFFFFFFFFFFELL;
      if (!v27)
      {
LABEL_41:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_99;
      }
LABEL_100:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D155EC(v88, 6, &v97, v30, v29);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v67 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
      goto LABEL_195;
    case 7:
      unint64_t v36 = sub_215D16168(v13);
      unint64_t v38 = v36;
      uint64_t v39 = v37;
      if (!v37 && v36 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_53;
      }
      if (v36 < 2)
      {
        unint64_t v40 = 0;
LABEL_132:
        uint64_t v39 = 0;
        goto LABEL_133;
      }
      unint64_t v40 = v36 & 0xFFFFFFFFFFFFFFFELL;
      if (!v37)
      {
LABEL_53:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_132;
      }
LABEL_133:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D1580C(v88, 7, &v97, v40, v39);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      BOOL v70 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
      goto LABEL_195;
    case 8:
      unint64_t v41 = sub_215D16270(v13);
      unint64_t v43 = v41;
      uint64_t v44 = v42;
      if (!v42 && v41 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_59;
      }
      if (v41 < 2)
      {
        unint64_t v45 = 0;
LABEL_143:
        uint64_t v44 = 0;
        goto LABEL_144;
      }
      unint64_t v45 = v41 & 0xFFFFFFFFFFFFFFFELL;
      if (!v42)
      {
LABEL_59:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_143;
      }
LABEL_144:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D15A2C(v88, 8, &v97, v45, v44);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v71 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      goto LABEL_195;
    case 11:
      unint64_t v61 = sub_215D16378(v13);
      unint64_t v63 = v61;
      uint64_t v64 = v62;
      if (!v62 && v61 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v65 = v63 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_84;
      }
      if (v61 < 2)
      {
        unint64_t v65 = 0;
LABEL_187:
        uint64_t v64 = 0;
        goto LABEL_188;
      }
      unint64_t v65 = v61 & 0xFFFFFFFFFFFFFFFELL;
      if (!v62)
      {
LABEL_84:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_187;
      }
LABEL_188:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D15C4C(v88, 11, &v97, v65, v64);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v75 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
      goto LABEL_195;
    case 12:
      unint64_t v56 = sub_215D163FC(v13);
      unint64_t v58 = v56;
      uint64_t v59 = v57;
      if (!v57 && v56 >= 2)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        unint64_t v60 = v58 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_78;
      }
      if (v56 < 2)
      {
        unint64_t v60 = 0;
LABEL_176:
        uint64_t v59 = 0;
        goto LABEL_177;
      }
      unint64_t v60 = v56 & 0xFFFFFFFFFFFFFFFELL;
      if (!v57)
      {
LABEL_78:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
LABEL_85:
          abort();
        }
        goto LABEL_176;
      }
LABEL_177:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963168;
      sub_215D15D5C(v88, 12, &v97, v60, v59);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17C18((uint64_t)v83, (uint64_t)v88);
      uint64_t v74 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
LABEL_195:
      long long v76 = (char *)operator new(0x28uLL);
      *((void *)v76 + 2) = 0;
      *(_OWORD *)(v76 + 24) = *(_OWORD *)v83;
      *(void *)long long v76 = &unk_26C6729C8;
      *((void *)v76 + 1) = 0;
      v83[0] = 0;
      v83[1] = 0;
      char v77 = (std::__shared_weak_count *)*((void *)&v82 + 1);
      *(void *)&long long v82 = v76 + 24;
      *((void *)&v82 + 1) = v76;
      if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
      long long v78 = (std::__shared_weak_count *)v83[1];
      if (v83[1] && !atomic_fetch_add((atomic_ullong *volatile)v83[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
      uint64_t v79 = (std::__shared_weak_count *)__dst[1];
      if (__dst[1] && !atomic_fetch_add((atomic_ullong *volatile)__dst[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
      *(_OWORD *)a2 = v82;
      long long v82 = 0uLL;
      *(unsigned char *)(a2 + 120) = 1;
      if (v81 && !atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
      int v80 = v93;
      if (v93)
      {
        if (!atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      return;
    default:
      sub_215E097D8(v15);
  }
}

void sub_2159615A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215961748(uint64_t a1, unsigned int *a2)
{
  int v5 = 0;
  sub_2157FD010(v4, "cannot return data as VZPoints");
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  unsigned char v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C672AB0[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C672AC8[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C672A98[v5])(v7, v4);
  }
  return result;
}

void sub_21596184C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215961868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215961858);
}

void sub_21596188C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A9D8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_13:
      int v92 = 0;
      uint64_t v93 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v8 = *(unsigned __int8 ***)(a1 + 424);
  int v7 = *(atomic_ullong **)(a1 + 432);
  if (!v7)
  {
    int v92 = *(unsigned __int8 ***)(a1 + 424);
    uint64_t v93 = 0;
    if (v8)
    {
      int v81 = 0;
      long long v82 = 0uLL;
      __dst[0] = v8;
      __dst[1] = 0;
      goto LABEL_23;
    }
LABEL_14:
    unint64_t v10 = sub_215AB5250(4u);
    unint64_t v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      uint64_t v95 = (long long *)*((void *)v10 + 2);
      *(_OWORD *)long long __dst = v12;
    }
    int v96 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v91, (uint64_t)__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v88, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)uint64_t v88 = *(_OWORD *)a1;
      uint64_t v89 = *(void *)(a1 + 16);
    }
    int v90 = *(_DWORD *)(a1 + 24);
    LODWORD(v82) = 3;
    sub_215961748((uint64_t)v83, (unsigned int *)&v82);
    *(_OWORD *)std::string __p = *(_OWORD *)v83;
    uint64_t v86 = v84;
    v83[1] = 0;
    uint64_t v84 = 0;
    v83[0] = 0;
    char v87 = 1;
    sub_215964570((long long **)&v91, (uint64_t)v88, (uint64_t)__p);
  }
  uint64_t v9 = v7 + 1;
  atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
  int v92 = v8;
  uint64_t v93 = (std::__shared_weak_count *)v7;
  if (!v8) {
    goto LABEL_14;
  }
  int v81 = (std::__shared_weak_count *)v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
  long long v82 = 0uLL;
  __dst[0] = v8;
  __dst[1] = v7;
  atomic_fetch_add_explicit(v9, 1uLL, memory_order_relaxed);
LABEL_23:
  uint64_t v13 = v8 + 1;
  uint64_t v14 = v8[1];
  uint64_t v95 = &v82;
  int v15 = *v14;
  switch(v15)
  {
    case 0:
      unint64_t v16 = sub_215D15FDC(v13);
      unint64_t v18 = v16;
      uint64_t v19 = v17;
      if (!v17 && v16 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v20 = 3 * (v18 / 3);
        goto LABEL_28;
      }
      if (v16 < 3)
      {
        uint64_t v20 = 0;
LABEL_110:
        uint64_t v19 = 0;
        goto LABEL_111;
      }
      uint64_t v20 = 3 * (v16 / 3);
      if (!v17)
      {
LABEL_28:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_110;
      }
LABEL_111:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D154A0(v88, 0, &v97, v20, v19);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v68 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      goto LABEL_195;
    case 1:
      unint64_t v31 = sub_215D160E4(v13);
      unint64_t v33 = v31;
      uint64_t v34 = v32;
      if (!v32 && v31 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v35 = 3 * (v33 / 3);
        goto LABEL_47;
      }
      if (v31 < 3)
      {
        uint64_t v35 = 0;
LABEL_121:
        uint64_t v34 = 0;
        goto LABEL_122;
      }
      uint64_t v35 = 3 * (v31 / 3);
      if (!v32)
      {
LABEL_47:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_121;
      }
LABEL_122:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D156FC(v88, 1, &v97, v35, v34);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      unsigned int v69 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_195;
    case 2:
      unint64_t v21 = sub_215D161EC(v13);
      unint64_t v23 = v21;
      uint64_t v24 = v22;
      if (!v22 && v21 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v25 = 3 * (v23 / 3);
        goto LABEL_35;
      }
      if (v21 < 3)
      {
        uint64_t v25 = 0;
LABEL_88:
        uint64_t v24 = 0;
        goto LABEL_89;
      }
      uint64_t v25 = 3 * (v21 / 3);
      if (!v22)
      {
LABEL_35:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_88;
      }
LABEL_89:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D1591C(v88, 2, &v97, v25, v24);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      int v66 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
      goto LABEL_195;
    case 3:
      unint64_t v46 = sub_215D162F4(v13);
      unint64_t v48 = v46;
      uint64_t v49 = v47;
      if (!v47 && v46 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v50 = 3 * (v48 / 3);
        goto LABEL_66;
      }
      if (v46 < 3)
      {
        uint64_t v50 = 0;
LABEL_154:
        uint64_t v49 = 0;
        goto LABEL_155;
      }
      uint64_t v50 = 3 * (v46 / 3);
      if (!v47)
      {
LABEL_66:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_154;
      }
LABEL_155:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D15B3C(v88, 3, &v97, v50, v49);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v72 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      goto LABEL_195;
    case 5:
      unint64_t v51 = sub_215D15F58(v13);
      unint64_t v53 = v51;
      uint64_t v54 = v52;
      if (!v52 && v51 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v55 = 3 * (v53 / 3);
        goto LABEL_72;
      }
      if (v51 < 3)
      {
        uint64_t v55 = 0;
LABEL_165:
        uint64_t v54 = 0;
        goto LABEL_166;
      }
      uint64_t v55 = 3 * (v51 / 3);
      if (!v52)
      {
LABEL_72:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_165;
      }
LABEL_166:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D15354(v88, 5, &v97, v55, v54);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      char v73 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
        std::__shared_weak_count::__release_weak(v73);
      }
      goto LABEL_195;
    case 6:
      unint64_t v26 = sub_215D16060(v13);
      unint64_t v28 = v26;
      uint64_t v29 = v27;
      if (!v27 && v26 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v30 = 3 * (v28 / 3);
        goto LABEL_41;
      }
      if (v26 < 3)
      {
        uint64_t v30 = 0;
LABEL_99:
        uint64_t v29 = 0;
        goto LABEL_100;
      }
      uint64_t v30 = 3 * (v26 / 3);
      if (!v27)
      {
LABEL_41:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_99;
      }
LABEL_100:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D155EC(v88, 6, &v97, v30, v29);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v67 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
      goto LABEL_195;
    case 7:
      unint64_t v36 = sub_215D16168(v13);
      unint64_t v38 = v36;
      uint64_t v39 = v37;
      if (!v37 && v36 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v40 = 3 * (v38 / 3);
        goto LABEL_53;
      }
      if (v36 < 3)
      {
        uint64_t v40 = 0;
LABEL_132:
        uint64_t v39 = 0;
        goto LABEL_133;
      }
      uint64_t v40 = 3 * (v36 / 3);
      if (!v37)
      {
LABEL_53:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_132;
      }
LABEL_133:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D1580C(v88, 7, &v97, v40, v39);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      BOOL v70 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
      goto LABEL_195;
    case 8:
      unint64_t v41 = sub_215D16270(v13);
      unint64_t v43 = v41;
      uint64_t v44 = v42;
      if (!v42 && v41 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v45 = 3 * (v43 / 3);
        goto LABEL_59;
      }
      if (v41 < 3)
      {
        uint64_t v45 = 0;
LABEL_143:
        uint64_t v44 = 0;
        goto LABEL_144;
      }
      uint64_t v45 = 3 * (v41 / 3);
      if (!v42)
      {
LABEL_59:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_143;
      }
LABEL_144:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D15A2C(v88, 8, &v97, v45, v44);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v71 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      goto LABEL_195;
    case 11:
      unint64_t v61 = sub_215D16378(v13);
      unint64_t v63 = v61;
      uint64_t v64 = v62;
      if (!v62 && v61 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v65 = 3 * (v63 / 3);
        goto LABEL_84;
      }
      if (v61 < 3)
      {
        uint64_t v65 = 0;
LABEL_187:
        uint64_t v64 = 0;
        goto LABEL_188;
      }
      uint64_t v65 = 3 * (v61 / 3);
      if (!v62)
      {
LABEL_84:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        goto LABEL_187;
      }
LABEL_188:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D15C4C(v88, 11, &v97, v65, v64);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v75 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
      goto LABEL_195;
    case 12:
      unint64_t v56 = sub_215D163FC(v13);
      unint64_t v58 = v56;
      uint64_t v59 = v57;
      if (!v57 && v56 >= 3)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_85;
        }
        uint64_t v60 = 3 * (v58 / 3);
        goto LABEL_78;
      }
      if (v56 < 3)
      {
        uint64_t v60 = 0;
LABEL_176:
        uint64_t v59 = 0;
        goto LABEL_177;
      }
      uint64_t v60 = 3 * (v56 / 3);
      if (!v57)
      {
LABEL_78:
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
LABEL_85:
          abort();
        }
        goto LABEL_176;
      }
LABEL_177:
      int v98 = v8;
      uint64_t v99 = v7;
      if (v7) {
        atomic_fetch_add_explicit(v7 + 1, 1uLL, memory_order_relaxed);
      }
      int v97 = (void (*)(uint64_t))sub_215963498;
      sub_215D15D5C(v88, 12, &v97, v60, v59);
      if (v97) {
        ((void (*)(void, void (**)(uint64_t), void, void, void))v97)(0, &v97, 0, 0, 0);
      }
      sub_215D17CEC((uint64_t)v83, (uint64_t)v88);
      uint64_t v74 = (std::__shared_weak_count *)v88[1];
      if (v88[1] && !atomic_fetch_add((atomic_ullong *volatile)v88[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
LABEL_195:
      long long v76 = (char *)operator new(0x28uLL);
      *((void *)v76 + 2) = 0;
      *(_OWORD *)(v76 + 24) = *(_OWORD *)v83;
      *(void *)long long v76 = &unk_26C672A18;
      *((void *)v76 + 1) = 0;
      v83[0] = 0;
      v83[1] = 0;
      char v77 = (std::__shared_weak_count *)*((void *)&v82 + 1);
      *(void *)&long long v82 = v76 + 24;
      *((void *)&v82 + 1) = v76;
      if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
      long long v78 = (std::__shared_weak_count *)v83[1];
      if (v83[1] && !atomic_fetch_add((atomic_ullong *volatile)v83[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
      uint64_t v79 = (std::__shared_weak_count *)__dst[1];
      if (__dst[1] && !atomic_fetch_add((atomic_ullong *volatile)__dst[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
      *(_OWORD *)a2 = v82;
      long long v82 = 0uLL;
      *(unsigned char *)(a2 + 120) = 1;
      if (v81 && !atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
      int v80 = v93;
      if (v93)
      {
        if (!atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      return;
    default:
      sub_215E097D8(v15);
  }
}

void sub_215962DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215962F80(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6729C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215962FA0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6729C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215962FF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215963074(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672A18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215963094(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672A18;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2159630E8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void *sub_215963168(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672A58;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215963168;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215963168;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj2EEENS3_7PackageELj3EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj2EEENS3_7PackageELj3EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj2EEENS3_7PackageELj3EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj2EEENS3_7PackageELj3EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECE9F4)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_215963300(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672A68;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215963300;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215963300;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj2EEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj2EEEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECEA2C)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_215963498(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672A78;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215963498;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215963498;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj3EEENS3_7PackageELj4EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj3EEENS3_7PackageELj4EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj3EEENS3_7PackageELj4EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con6PointsILj3EEENS3_7PackageELj4EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECEA90)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_215963630(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C672A88;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215963630;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_215963630;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj3EEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj3EEEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con6PointsILj3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215ECEAC8)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      uint64_t v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

_UNKNOWN **sub_2159637C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E540, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E540))
  {
    return &off_26ACF23F8;
  }
  __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_26ACF23F8, &dword_21572C000);
  __cxa_guard_release(&qword_26788E540);
  return &off_26ACF23F8;
}

const char *sub_215963848()
{
  return "VisualLogger";
}

__n128 sub_215963854@<Q0>(int a1@<W1>, uint64_t a2@<X8>, __n128 result@<Q0>)
{
  switch(a1)
  {
    case 0:
      *(unsigned char *)(a2 + 23) = 8;
      strcpy((char *)a2, "no error");
      return result;
    case 1:
      *(unsigned char *)(a2 + 23) = 13;
      strcpy((char *)a2, "unknown error");
      return result;
    case 2:
      uint64_t v4 = (char *)operator new(0x48uLL);
      *(void *)a2 = v4;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEB50;
      strcpy(v4, "failed to create VZ object, possibly due to an unexpected exception");
      result.n128_u64[0] = *(void *)"ibly due to an unexpected exception";
      return result;
    case 3:
      uint64_t v5 = (char *)operator new(0x58uLL);
      *(void *)a2 = v5;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEB40;
      result.n128_u64[0] = *(void *)"failed to convert or assign to/from VZ object, possibly due to an unexpected exception";
      strcpy(v5, "failed to convert or assign to/from VZ object, possibly due to an unexpected exception");
      return result;
    case 4:
      BOOL v6 = (char *)operator new(0x30uLL);
      *(void *)a2 = v6;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEB30;
      strcpy(v6, "unexpected runtime exception in VZ method");
      result.n128_u64[0] = *(void *)"ion in VZ method";
      return result;
    case 5:
      *(unsigned char *)(a2 + 23) = 9;
      strcpy((char *)a2, "I/O error");
      return result;
    case 10:
      *(unsigned char *)(a2 + 23) = 16;
      result.n128_u64[0] = *(void *)"invalid argument";
      strcpy((char *)a2, "invalid argument");
      return result;
    case 11:
      int v7 = (char *)operator new(0x20uLL);
      *(void *)a2 = v7;
      *(_OWORD *)(a2 + 8) = xmmword_215EB32C0;
      strcpy(v7, "invalid null pointer argument");
      result.n128_u64[0] = *(void *)"pointer argument";
      return result;
    case 12:
      uint64_t v8 = (char *)operator new(0x19uLL);
      *(void *)a2 = v8;
      long long v9 = xmmword_215E975B0;
      unint64_t v10 = "operation not supported";
      goto LABEL_13;
    case 13:
      uint64_t v8 = (char *)operator new(0x19uLL);
      *(void *)a2 = v8;
      long long v9 = xmmword_215E975B0;
      unint64_t v10 = "operation has no effect";
LABEL_13:
      *(_OWORD *)(a2 + 8) = v9;
      uint64_t result = *(__n128 *)v10;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v10;
      *(void *)(v8 + 15) = *(void *)(v10 + 15);
      v8[23] = 0;
      return result;
    case 14:
      *(unsigned char *)(a2 + 23) = 16;
      result.n128_u64[0] = *(void *)"filesystem error";
      strcpy((char *)a2, "filesystem error");
      return result;
    case 15:
      *(unsigned char *)(a2 + 23) = 17;
      result.n128_u64[0] = *(void *)"invalid timestamp";
      strcpy((char *)a2, "invalid timestamp");
      return result;
    case 16:
      unint64_t v11 = "inconsistent timestamp";
      goto LABEL_25;
    case 17:
      *(unsigned char *)(a2 + 23) = 18;
      result.n128_u64[0] = *(void *)"index out of range";
      strcpy((char *)a2, "index out of range");
      return result;
    case 18:
      long long v12 = (char *)operator new(0x20uLL);
      *(void *)a2 = v12;
      long long v13 = xmmword_215ECEB10;
      uint64_t v14 = "information not available";
      goto LABEL_34;
    case 19:
      int v15 = operator new(0x28uLL);
      *(void *)a2 = v15;
      *(_OWORD *)(a2 + 8) = xmmword_215E9BA30;
      __int16 v16 = 29285;
      uint64_t v17 = "data package unknown to serializer";
      goto LABEL_40;
    case 20:
      unint64_t v18 = (char *)operator new(0x20uLL);
      *(void *)a2 = v18;
      long long v19 = xmmword_215E9AB80;
      uint64_t v20 = "data type unknown to package";
      goto LABEL_28;
    case 21:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"failed to load data";
      strcpy((char *)a2, "failed to load data");
      return result;
    case 22:
      *(unsigned char *)(a2 + 23) = 11;
      strcpy((char *)a2, "invalid key");
      return result;
    case 30:
      unint64_t v21 = (char *)operator new(0x58uLL);
      *(void *)a2 = v21;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEB20;
      result.n128_u64[0] = *(void *)"ot inherit its enable-state but must be either enabled or disabled";
      strcpy(v21, "root logger cannot inherit its enable-state but must be either enabled or disabled");
      return result;
    case 31:
      unint64_t v11 = "data export queue full";
LABEL_25:
      uint64_t result = *(__n128 *)v11;
      *(_OWORD *)a2 = *(_OWORD *)v11;
      *(void *)(a2 + 14) = *(void *)(v11 + 14);
      *(_WORD *)(a2 + 22) = 5632;
      return result;
    case 32:
      *(unsigned char *)(a2 + 23) = 17;
      result.n128_u64[0] = *(void *)"inconsistent mesh";
      strcpy((char *)a2, "inconsistent mesh");
      return result;
    case 33:
      unint64_t v18 = (char *)operator new(0x20uLL);
      *(void *)a2 = v18;
      long long v19 = xmmword_215E9AB80;
      uint64_t v20 = "mesh structure not supported";
LABEL_28:
      *(_OWORD *)(a2 + 8) = v19;
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v20;
      uint64_t result = *(__n128 *)(v20 + 12);
      *(__n128 *)(v18 + 12) = result;
      v18[28] = 0;
      return result;
    case 35:
      uint64_t v22 = operator new(0x20uLL);
      *(void *)a2 = v22;
      long long v23 = xmmword_215ECEB00;
      uint64_t v24 = (__n128 *)"server receive exception";
      goto LABEL_36;
    case 36:
      long long v12 = (char *)operator new(0x20uLL);
      *(void *)a2 = v12;
      long long v13 = xmmword_215ECEB10;
      uint64_t v14 = "client can't reach server";
      goto LABEL_34;
    case 37:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"client send failure";
      strcpy((char *)a2, "client send failure");
      return result;
    case 38:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"server send failure";
      strcpy((char *)a2, "server send failure");
      return result;
    case 39:
      long long v12 = (char *)operator new(0x20uLL);
      *(void *)a2 = v12;
      long long v13 = xmmword_215ECEB10;
      uint64_t v14 = "server can't reach client";
LABEL_34:
      *(_OWORD *)(a2 + 8) = v13;
      *(_OWORD *)long long v12 = *(_OWORD *)v14;
      uint64_t result = *(__n128 *)(v14 + 9);
      *(__n128 *)(v12 + 9) = result;
      v12[25] = 0;
      return result;
    case 40:
      uint64_t v22 = operator new(0x20uLL);
      *(void *)a2 = v22;
      long long v23 = xmmword_215ECEB00;
      uint64_t v24 = (__n128 *)"client receive exception";
LABEL_36:
      *(_OWORD *)(a2 + 8) = v23;
      uint64_t result = *v24;
      *(__n128 *)uint64_t v22 = *v24;
      v22[2] = v24[1].n128_u64[0];
      *((unsigned char *)v22 + 24) = 0;
      return result;
    case 41:
      uint64_t v25 = (char *)operator new(0x30uLL);
      *(void *)a2 = v25;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEAF0;
      strcpy(v25, "server cannot serialize data of unknown package");
      result.n128_u64[0] = *(void *)" unknown package";
      return result;
    case 42:
      unint64_t v26 = (char *)operator new(0x20uLL);
      *(void *)a2 = v26;
      long long v27 = xmmword_215ECEAD0;
      unint64_t v28 = "server serialization failed";
      goto LABEL_44;
    case 43:
      int v15 = operator new(0x28uLL);
      *(void *)a2 = v15;
      *(_OWORD *)(a2 + 8) = xmmword_215E9BA30;
      __int16 v16 = 25701;
      uint64_t v17 = "client synchronization is disabled";
LABEL_40:
      v15[16] = v16;
      uint64_t result = *(__n128 *)v17;
      long long v29 = *((_OWORD *)v17 + 1);
      *(_OWORD *)int v15 = *(_OWORD *)v17;
      *((_OWORD *)v15 + 1) = v29;
      *((unsigned char *)v15 + 34) = 0;
      return result;
    case 44:
      uint64_t v30 = (char *)operator new(0x28uLL);
      *(void *)a2 = v30;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEAE0;
      result.n128_u64[0] = *(void *)"timeout waiting for peer response";
      strcpy(v30, "timeout waiting for peer response");
      return result;
    case 45:
      *(unsigned char *)(a2 + 23) = 15;
      strcpy((char *)a2, "invalid peer ID");
      return result;
    case 46:
      unint64_t v26 = (char *)operator new(0x20uLL);
      *(void *)a2 = v26;
      long long v27 = xmmword_215ECEAD0;
      unint64_t v28 = "network configuration issue";
LABEL_44:
      *(_OWORD *)(a2 + 8) = v27;
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v28;
      uint64_t result = *(__n128 *)(v28 + 11);
      *(__n128 *)(v26 + 11) = result;
      v26[27] = 0;
      break;
    default:
      *(unsigned char *)(a2 + 23) = 18;
      result.n128_u64[0] = *(void *)"unknown error code";
      strcpy((char *)a2, "unknown error code");
      break;
  }
  return result;
}

BOOL sub_215964068(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E548, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E548))
  {
    sub_2159637C8();
    uint64_t v8 = (char *)(*((uint64_t (**)(void))off_26ACF23F8 + 2))();
    sub_215732BF4(&qword_26788E550, v8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E550, &dword_21572C000);
    __cxa_guard_release(&qword_26788E548);
  }
  uint64_t v2 = (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  uint64_t v3 = v2;
  if (byte_26788E567 >= 0) {
    size_t v4 = byte_26788E567;
  }
  else {
    size_t v4 = qword_26788E558;
  }
  if (v4 != strlen(v2)) {
    return 0;
  }
  uint64_t v5 = byte_26788E567 >= 0 ? &qword_26788E550 : (uint64_t *)qword_26788E550;
  if (memcmp(v5, v3, v4)) {
    return 0;
  }
  return *(_DWORD *)a1 == 31 || *(_DWORD *)a1 == 41;
}

void sub_2159641C0(_Unwind_Exception *a1)
{
}

void sub_2159641D8(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21596428C(__p, a1);
  sub_21573FCF8(1u, (long long *)__p, a2);
  if (v11)
  {
    if (!v10) {
      goto LABEL_5;
    }
    if (v9 < 0)
    {
      operator delete(v8);
      if ((v7 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v5) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v7 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6);
    if (!v5) {
      return;
    }
LABEL_6:
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215964278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned char *sub_21596428C(unsigned char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[96] = 0;
  if (*((unsigned char *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)long long __dst = v3;
    }
    __dst[24] = 1;
    __dst[32] = 0;
    __dst[88] = 0;
    __dst[96] = 1;
  }
  return __dst;
}

void sub_215964300(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 96))
  {
    if (*(unsigned char *)(v1 + 88))
    {
      if (*(char *)(v1 + 87) < 0) {
        operator delete(*(void **)(v1 + 64));
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    if (*(unsigned char *)(v1 + 24))
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215964354(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21596428C(__p, a1);
  sub_21573FCF8(0xBu, (long long *)__p, a2);
  if (v11)
  {
    if (!v10) {
      goto LABEL_5;
    }
    if (v9 < 0)
    {
      operator delete(v8);
      if ((v7 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v5) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v7 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6);
    if (!v5) {
      return;
    }
LABEL_6:
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_2159643F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215964408(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21596428C(__p, a1);
  sub_21573FCF8(4u, (long long *)__p, a2);
  if (v11)
  {
    if (!v10) {
      goto LABEL_5;
    }
    if (v9 < 0)
    {
      operator delete(v8);
      if ((v7 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v5) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v7 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6);
    if (!v5) {
      return;
    }
LABEL_6:
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_2159644A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2159644BC(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21596428C(__p, a1);
  sub_21573FCF8(0xAu, (long long *)__p, a2);
  if (v11)
  {
    if (!v10) {
      goto LABEL_5;
    }
    if (v9 < 0)
    {
      operator delete(v8);
      if ((v7 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v5) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v7 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6);
    if (!v5) {
      return;
    }
LABEL_6:
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_21596455C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215964570(long long **a1, uint64_t a2, uint64_t a3)
{
  sub_2157328B8((uint64_t)&v11);
  if (*(unsigned char *)(a3 + 24))
  {
    int v5 = *(char *)(a3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = a3;
    }
    else {
      uint64_t v6 = *(void *)a3;
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      uint64_t v7 = *(void *)(a3 + 8);
    }
    uint64_t v8 = sub_215731D94(&v12, v6, v7);
    sub_215731D94(v8, (uint64_t)", ", 2);
  }
  sub_215731D94(&v12, (uint64_t)"required data id = ", 19);
  if ((char *)a1[1] - (char *)*a1 == 32) {
    sub_215964AA8();
  }
  sub_215731D94(&v12, (uint64_t)"any of {", 8);
  char v9 = *a1;
  if (*a1 != a1[1])
  {
    if (*((char *)v9 + 23) < 0)
    {
      sub_215738B0C(&__dst, *(void **)v9, *((void *)v9 + 1));
    }
    else
    {
      long long v10 = *v9;
      uint64_t v14 = *((void *)v9 + 2);
      long long __dst = v10;
    }
    int v15 = *((_DWORD *)v9 + 6);
    sub_215964AA8();
  }
  sub_215731D94(&v12, (uint64_t)"}", 1);
  sub_215731D94(&v12, (uint64_t)", actual data id = ", 19);
  sub_215964AA8();
}

void sub_215964A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  if (*(char *)(v16 - 73) < 0) {
    operator delete(*(void **)(v16 - 96));
  }
  sub_2157351A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215964AA8()
{
}

void sub_215964D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215964DE4(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21596428C(__p, a1);
  sub_21573FCF8(0xEu, (long long *)__p, a2);
  if (v11)
  {
    if (!v10) {
      goto LABEL_5;
    }
    if (v9 < 0)
    {
      operator delete(v8);
      if ((v7 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v5) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v7 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6);
    if (!v5) {
      return;
    }
LABEL_6:
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215964E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215964E98(uint64_t a1, const char *a2)
{
  uint64_t v2 = a2;
  sub_215964FD8(&v2, (uint64_t)" peer with ID ");
}

void sub_215964FAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215964FD8(const char **a1, uint64_t a2)
{
  int v4 = 0;
  if (*a1) {
    sub_215743A68(v3, a1);
  }
  else {
    sub_21574344C(v3, "nullptr");
  }
  v5[0] = v3;
  v5[1] = a2;
  void v5[2] = v3;
  _DWORD v5[3] = a2;
  v5[4] = a2;
  if (v4 != -1)
  {
    uint64_t v6 = v5;
    ((void (*)(void **, _DWORD *))off_26C672B58[v4])(&v6, v3);
    sub_2159651D4();
  }
  sub_215742D4C();
}

void sub_215965138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596514C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215965160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215965174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215965188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596519C(std::error_category *a1)
{
  std::error_category::~error_category(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2159651D4()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_2159653E4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215965408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21596544C()
{
}

void sub_2159654E4()
{
}

void sub_215965584(int a1@<W0>, _DWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>, __n128 a5@<Q1>, long long a6@<Q2>)
{
  if (!a1)
  {
    LODWORD(v12) = *a2;
    DWORD1(v12) = a2[4];
    *((void *)&v12 + 1) = a2[8];
    a5.n128_u32[0] = a2[1];
    a5.n128_u32[1] = a2[5];
    a5.n128_u32[2] = a2[9];
    LODWORD(a6) = a2[2];
    DWORD1(a6) = a2[6];
    DWORD2(a6) = a2[10];
    __asm { FMOV            V3.4S, #1.0 }
    LODWORD(_Q3) = a2[3];
    DWORD1(_Q3) = a2[7];
    DWORD2(_Q3) = a2[11];
    long long v57 = v12;
    __n128 v58 = a5;
    long long v59 = a6;
    long long v60 = _Q3;
    if (a3 > 1) {
      goto LABEL_4;
    }
LABEL_8:
    sub_215B215F0((float32x2_t *)&v57, flt_215ED9230, (uint64_t)&v42);
    if (v53) {
      sub_215B230B4();
    }
    p_p = &__p;
    if (!v52) {
      p_p = (long long *)&unk_215EF9F28;
    }
    LOBYTE(__dst[0]) = 0;
    char v30 = 0;
    if (v52 && v45)
    {
      if (SHIBYTE(v44) < 0)
      {
        sub_215738B0C(__dst, *(void **)p_p, *((unint64_t *)&__p + 1));
      }
      else
      {
        *(_OWORD *)long long __dst = *p_p;
        uint64_t v29 = *((void *)p_p + 2);
      }
      char v30 = 1;
    }
    sub_2159644BC((long long *)__dst, (uint64_t)&v31);
    *(_OWORD *)a4 = v31;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v41)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v23 = v34;
      if (v34)
      {
        *(_OWORD *)(a4 + 16) = v32;
        *(void *)(a4 + 32) = v33;
        uint64_t v33 = 0;
        long long v32 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v40)
      {
        uint64_t v24 = v37;
        *(void *)(a4 + 64) = v36;
        *(_OWORD *)(a4 + 48) = v35;
        long long v35 = 0uLL;
        *(void *)(a4 + 72) = v24;
        *(_OWORD *)(a4 + 80) = v38;
        *(void *)(a4 + 96) = v39;
        uint64_t v36 = 0;
        long long v38 = 0uLL;
        uint64_t v39 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v23 && SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v30 && SHIBYTE(v29) < 0) {
      operator delete(__dst[0]);
    }
    if (!v53 && v52)
    {
      if (v51)
      {
        if (SHIBYTE(v50) < 0) {
          operator delete(v49[0]);
        }
        if (SHIBYTE(v47) < 0) {
          operator delete(v46[0]);
        }
      }
      if (v45 && SHIBYTE(v44) < 0) {
        operator delete((void *)__p);
      }
    }
    return;
  }
  if (a1 == 1)
  {
    long long v7 = *(_OWORD *)a2;
    uint64_t v8 = *(void *)(a2 + 9);
    unsigned int v9 = a2[11];
    v10.n128_u32[3] = 0;
    v10.n128_u32[0] = HIDWORD(*(_OWORD *)a2);
    HIDWORD(v7) = 0;
    *(unint64_t *)((char *)v10.n128_u64 + 4) = *((void *)a2 + 2);
    *(void *)&long long v11 = *((void *)a2 + 3);
    *((void *)&v11 + 1) = a2[8];
    __n128 v58 = v10;
    long long v59 = v11;
    long long v57 = v7;
    *(void *)&long long v60 = v8;
    *((void *)&v60 + 1) = v9 | 0x3F80000000000000;
    if (a3 > 1)
    {
LABEL_4:
      if (a3 == 2) {
        operator new();
      }
      if (a3 == 3) {
        sub_215B25138((uint64_t)&v42, (float32x2_t *)&v57);
      }
      uint64_t v25 = operator new(0x20uLL);
      long long v26 = xmmword_215E9AD40;
      strcpy((char *)v25, "invalid VZArgOptions value");
      char v27 = 1;
      sub_2159644BC((long long *)&v25, (uint64_t)&v42);
      *(_OWORD *)a4 = v42;
      *(unsigned char *)(a4 + 16) = 0;
      *(unsigned char *)(a4 + 112) = 0;
      if (v52)
      {
        *(unsigned char *)(a4 + 40) = 0;
        int v21 = v45;
        if (v45)
        {
          *(_OWORD *)(a4 + 16) = __p;
          *(void *)(a4 + 32) = v44;
          uint64_t v44 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a4 + 40) = 1;
        }
        *(unsigned char *)(a4 + 48) = 0;
        *(unsigned char *)(a4 + 104) = 0;
        if (v51)
        {
          uint64_t v22 = v48;
          *(void *)(a4 + 64) = v47;
          *(_OWORD *)(a4 + 48) = *(_OWORD *)v46;
          v46[0] = 0;
          v46[1] = 0;
          *(void *)(a4 + 72) = v22;
          *(_OWORD *)(a4 + 80) = *(_OWORD *)v49;
          *(void *)(a4 + 96) = v50;
          uint64_t v47 = 0;
          v49[0] = 0;
          v49[1] = 0;
          uint64_t v50 = 0;
          *(unsigned char *)(a4 + 104) = 1;
        }
        *(unsigned char *)(a4 + 112) = 1;
        *(unsigned char *)(a4 + 120) = 0;
        if (v21 && SHIBYTE(v44) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a4 + 120) = 0;
      }
      if (v27)
      {
        if (SHIBYTE(v26) < 0) {
          operator delete(v25);
        }
      }
      return;
    }
    goto LABEL_8;
  }
  long long v57 = xmmword_215ECEB90;
  __n128 v58 = (__n128)unk_215ECEBA0;
  long long v59 = xmmword_215ECEBB0;
  long long v60 = unk_215ECEBC0;
  uint64_t v54 = (char *)operator new(0x20uLL);
  long long v55 = xmmword_215E9AB80;
  strcpy(v54, "invalid VZMatrixLayout value");
  char v56 = 1;
  sub_2159644BC((long long *)&v54, (uint64_t)&v42);
  *(_OWORD *)a4 = v42;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v52)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v18 = v45;
    if (v45)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v44;
      uint64_t v44 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v51)
    {
      uint64_t v19 = v48;
      *(void *)(a4 + 64) = v47;
      *(_OWORD *)(a4 + 48) = *(_OWORD *)v46;
      v46[0] = 0;
      v46[1] = 0;
      *(void *)(a4 + 72) = v19;
      *(_OWORD *)(a4 + 80) = *(_OWORD *)v49;
      *(void *)(a4 + 96) = v50;
      uint64_t v47 = 0;
      v49[0] = 0;
      v49[1] = 0;
      uint64_t v50 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v18 && SHIBYTE(v44) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v56 && SHIBYTE(v55) < 0) {
    operator delete(v54);
  }
}

void sub_215965B74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
    {
      operator delete(__p);
      sub_215731D80(a1);
    }
  }
  sub_215731D80(a1);
}

void sub_215965BA4(int a1@<W0>, int64x2_t *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>, __n128 a5@<Q4>, __n128 a6@<Q5>, __n128 a7@<Q6>)
{
  if (!a1)
  {
    *(void *)&long long v15 = a2->i64[0];
    *(void *)&long long v16 = a2->i64[1];
    *(void *)&long long v17 = a2[1].i64[0];
    *(void *)&long long v18 = a2[1].i64[1];
    *((void *)&v15 + 1) = a2[2].i64[0];
    *((void *)&v16 + 1) = a2[2].i64[1];
    a5.n128_u64[0] = a2[4].u64[0];
    a6.n128_u64[0] = a2[4].u64[1];
    *((void *)&v17 + 1) = a2[3].i64[0];
    *((void *)&v18 + 1) = a2[3].i64[1];
    a7.n128_u64[0] = a2[5].u64[0];
    __asm { FMOV            V7.2D, #1.0 }
    *(void *)&_Q7 = a2[5].i64[1];
    long long v63 = v15;
    __n128 v64 = a5;
    long long v65 = v16;
    __n128 v66 = a6;
    long long v67 = v17;
    __n128 v68 = a7;
    long long v69 = v18;
    long long v70 = _Q7;
    if (a3 > 1) {
      goto LABEL_4;
    }
LABEL_9:
    sub_215B22340((uint64_t)&v63, (uint64_t)&unk_215ED9240, (uint64_t)&v48);
    if (v59) {
      sub_215B24060();
    }
    p_p = &__p;
    if (!v58) {
      p_p = (long long *)&unk_215EF9F28;
    }
    LOBYTE(__dst[0]) = 0;
    char v36 = 0;
    if (v58 && v51)
    {
      if (SHIBYTE(v50) < 0)
      {
        sub_215738B0C(__dst, *(void **)p_p, *((unint64_t *)&__p + 1));
      }
      else
      {
        *(_OWORD *)long long __dst = *p_p;
        uint64_t v35 = *((void *)p_p + 2);
      }
      char v36 = 1;
    }
    sub_2159644BC((long long *)__dst, (uint64_t)&v37);
    *(_OWORD *)a4 = v37;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v47)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v29 = v40;
      if (v40)
      {
        *(_OWORD *)(a4 + 16) = v38;
        *(void *)(a4 + 32) = v39;
        uint64_t v39 = 0;
        long long v38 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v46)
      {
        uint64_t v30 = v43;
        *(void *)(a4 + 64) = v42;
        *(_OWORD *)(a4 + 48) = v41;
        long long v41 = 0uLL;
        *(void *)(a4 + 72) = v30;
        *(_OWORD *)(a4 + 80) = v44;
        *(void *)(a4 + 96) = v45;
        uint64_t v42 = 0;
        long long v44 = 0uLL;
        uint64_t v45 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v29 && SHIBYTE(v39) < 0) {
        operator delete((void *)v38);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v36 && SHIBYTE(v35) < 0) {
      operator delete(__dst[0]);
    }
    if (!v59 && v58)
    {
      if (v57)
      {
        if (SHIBYTE(v56) < 0) {
          operator delete(v55[0]);
        }
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
      }
      if (v51 && SHIBYTE(v50) < 0) {
        operator delete((void *)__p);
      }
    }
    return;
  }
  if (a1 == 1)
  {
    long long v8 = (__int128)*a2;
    uint64_t v9 = a2[5].i64[1];
    long long v10 = *(long long *)((char *)&a2[4] + 8);
    uint64_t v11 = a2[1].i64[0];
    int64x2_t v12 = vdupq_laneq_s64(a2[1], 1);
    uint64_t v13 = a2[2].i64[1];
    int64x2_t v14 = vzip1q_s64(v12, a2[2]);
    v12.i64[0] = a2[4].i64[0];
    long long v67 = (__int128)a2[3];
    __n128 v68 = (__n128)v12;
    long long v63 = v8;
    __n128 v64 = (__n128)(unint64_t)v11;
    long long v65 = (__int128)v14;
    __n128 v66 = (__n128)(unint64_t)v13;
    long long v69 = v10;
    *(void *)&long long v70 = v9;
    *((void *)&v70 + 1) = 0x3FF0000000000000;
    if (a3 > 1)
    {
LABEL_4:
      if (a3 == 2) {
        operator new();
      }
      if (a3 == 3) {
        sub_215B25528((uint64_t)&v48, (float64x2_t *)&v63);
      }
      long long v31 = operator new(0x20uLL);
      long long v32 = xmmword_215E9AD40;
      strcpy((char *)v31, "invalid VZArgOptions value");
      char v33 = 1;
      sub_2159644BC((long long *)&v31, (uint64_t)&v48);
      *(_OWORD *)a4 = v48;
      *(unsigned char *)(a4 + 16) = 0;
      *(unsigned char *)(a4 + 112) = 0;
      if (v58)
      {
        *(unsigned char *)(a4 + 40) = 0;
        int v27 = v51;
        if (v51)
        {
          *(_OWORD *)(a4 + 16) = __p;
          *(void *)(a4 + 32) = v50;
          uint64_t v50 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a4 + 40) = 1;
        }
        *(unsigned char *)(a4 + 48) = 0;
        *(unsigned char *)(a4 + 104) = 0;
        if (v57)
        {
          uint64_t v28 = v54;
          *(void *)(a4 + 64) = v53;
          *(_OWORD *)(a4 + 48) = *(_OWORD *)v52;
          v52[0] = 0;
          v52[1] = 0;
          *(void *)(a4 + 72) = v28;
          *(_OWORD *)(a4 + 80) = *(_OWORD *)v55;
          *(void *)(a4 + 96) = v56;
          uint64_t v53 = 0;
          v55[0] = 0;
          v55[1] = 0;
          uint64_t v56 = 0;
          *(unsigned char *)(a4 + 104) = 1;
        }
        *(unsigned char *)(a4 + 112) = 1;
        *(unsigned char *)(a4 + 120) = 0;
        if (v27 && SHIBYTE(v50) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a4 + 120) = 0;
      }
      if (v33)
      {
        if (SHIBYTE(v32) < 0) {
          operator delete(v31);
        }
      }
      return;
    }
    goto LABEL_9;
  }
  long long v67 = xmmword_215ECEC10;
  __n128 v68 = (__n128)unk_215ECEC20;
  long long v69 = xmmword_215ECEC30;
  long long v70 = unk_215ECEC40;
  long long v63 = xmmword_215ECEBD0;
  __n128 v64 = (__n128)unk_215ECEBE0;
  long long v65 = xmmword_215ECEBF0;
  __n128 v66 = (__n128)unk_215ECEC00;
  long long v60 = (char *)operator new(0x20uLL);
  long long v61 = xmmword_215E9AB80;
  strcpy(v60, "invalid VZMatrixLayout value");
  char v62 = 1;
  sub_2159644BC((long long *)&v60, (uint64_t)&v48);
  *(_OWORD *)a4 = v48;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v58)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v24 = v51;
    if (v51)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v50;
      uint64_t v50 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v57)
    {
      uint64_t v25 = v54;
      *(void *)(a4 + 64) = v53;
      *(_OWORD *)(a4 + 48) = *(_OWORD *)v52;
      v52[0] = 0;
      v52[1] = 0;
      *(void *)(a4 + 72) = v25;
      *(_OWORD *)(a4 + 80) = *(_OWORD *)v55;
      *(void *)(a4 + 96) = v56;
      uint64_t v53 = 0;
      v55[0] = 0;
      v55[1] = 0;
      uint64_t v56 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v24 && SHIBYTE(v50) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v62 && SHIBYTE(v61) < 0) {
    operator delete(v60);
  }
}

void sub_2159661AC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
    {
      operator delete(__p);
      sub_215731D80(a1);
    }
  }
  sub_215731D80(a1);
}

void sub_2159661DC(uint64_t *a1@<X0>, int a2@<W1>, int32x4_t *a3@<X2>, uint64_t a4@<X8>, float64x2_t a5@<Q0>)
{
  if (!a2)
  {
    if (a3)
    {
      sub_215B26044(a1, (uint64_t)&v24, a5);
      v12.i64[0] = vzip1q_s32(v24, *(int32x4_t *)__p).u64[0];
      v12.i64[1] = __PAIR64__(v27.u32[0], v26.u32[0]);
      v13.i64[0] = vtrn2q_s32(v24, *(int32x4_t *)__p).u64[0];
      v13.i64[1] = __PAIR64__(v27.u32[1], v26.u32[1]);
      v14.i64[0] = vzip2q_s32(v24, *(int32x4_t *)__p).u64[0];
      v14.i64[1] = __PAIR64__(v27.u32[2], v26.u32[2]);
      v15.i64[0] = vuzp2q_s32(vuzp2q_s32(v24, *(int32x4_t *)__p), v24).u64[0];
      v15.i64[1] = __PAIR64__(v27.u32[3], v26.u32[3]);
      *a3 = v12;
      a3[1] = v13;
      a3[2] = v14;
      a3[3] = v15;
    }
    goto LABEL_11;
  }
  if (a2 == 1)
  {
    uint64_t v7 = *a1;
    if ((*(unsigned char *)(*a1 + 136) & 0xFE) == 4 && *(unsigned char *)(*a1 + 136) != 5)
    {
      if (*(_DWORD *)(v7 + 128)) {
        sub_215742D4C();
      }
      if (a3)
      {
        int32x4_t v19 = *(int32x4_t *)v7;
        int32x4_t v18 = *(int32x4_t *)(v7 + 16);
        int32x4_t v20 = *(int32x4_t *)(v7 + 48);
        a3[2] = *(int32x4_t *)(v7 + 32);
        a3[3] = v20;
        *a3 = v19;
        a3[1] = v18;
      }
      *(void *)a4 = v7;
      goto LABEL_24;
    }
    sub_215B26044(a1, (uint64_t)&v24, a5);
    int32x4_t v9 = v24;
    int32x4_t v10 = *(int32x4_t *)__p;
    int32x4_t v11 = v27;
    a3[2] = v26;
    a3[3] = v11;
    *a3 = v9;
    a3[1] = v10;
LABEL_11:
    *(void *)a4 = 0;
LABEL_24:
    *(unsigned char *)(a4 + 120) = 1;
    return;
  }
  int v21 = operator new(0x20uLL);
  long long v22 = xmmword_215E9AB80;
  strcpy((char *)v21, "invalid VZMatrixLayout value");
  char v23 = 1;
  sub_2159644BC((long long *)&v21, (uint64_t)&v24);
  *(int32x4_t *)a4 = v24;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v33)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v16 = v26.u8[8];
    if (v26.i8[8])
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)__p;
      *(void *)(a4 + 32) = v26.i64[0];
      __p[1] = 0;
      v26.i64[0] = 0;
      __p[0] = 0;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v32)
    {
      uint64_t v17 = v29;
      *(void *)(a4 + 64) = v28;
      *(int32x4_t *)(a4 + 48) = v27;
      int32x4_t v27 = 0uLL;
      *(void *)(a4 + 72) = v17;
      *(_OWORD *)(a4 + 80) = v30;
      *(void *)(a4 + 96) = v31;
      uint64_t v28 = 0;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v16 && v26.i8[7] < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v23 && SHIBYTE(v22) < 0) {
    operator delete(v21);
  }
}

void sub_215966408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21596642C(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>, float64x2_t a5@<Q0>, float64x2_t a6@<Q2>)
{
  if (!a2)
  {
    if (a3)
    {
      sub_215B26488(a1, (uint64_t)&v39, a5, a6);
      int64x2_t v20 = vzip1q_s64(v43, v45);
      *(void *)&long long v21 = vdupq_laneq_s64(v43, 1).u64[0];
      int64x2_t v22 = vzip2q_s64(v39, v41);
      *((void *)&v21 + 1) = v45.i64[1];
      int64x2_t v23 = vzip1q_s64(*(int64x2_t *)__p, v42);
      int64x2_t v24 = vzip1q_s64(v44, v46);
      int64x2_t v25 = vzip2q_s64(*(int64x2_t *)__p, v42);
      *(void *)&long long v26 = vdupq_laneq_s64(v44, 1).u64[0];
      *((void *)&v26 + 1) = v46.i64[1];
      *(int64x2_t *)a3 = vzip1q_s64(v39, v41);
      *(int64x2_t *)(a3 + 16) = v20;
      *(int64x2_t *)(a3 + 32) = v22;
      *(_OWORD *)(a3 + 48) = v21;
      *(int64x2_t *)(a3 + 64) = v23;
      *(int64x2_t *)(a3 + 80) = v24;
      *(int64x2_t *)(a3 + 96) = v25;
      *(_OWORD *)(a3 + 112) = v26;
    }
    goto LABEL_13;
  }
  if (a2 == 1)
  {
    uint64_t v8 = *a1;
    int v9 = *(unsigned __int8 *)(*a1 + 136);
    BOOL v10 = v9 == 2 || v9 == 5;
    int v11 = v9 & 0xFE;
    if (v10 && v11 == 4)
    {
      if (*(_DWORD *)(v8 + 128) != 1) {
        sub_215742D4C();
      }
      if (a3)
      {
        long long v30 = *(_OWORD *)v8;
        long long v29 = *(_OWORD *)(v8 + 16);
        long long v32 = *(_OWORD *)(v8 + 32);
        long long v31 = *(_OWORD *)(v8 + 48);
        long long v34 = *(_OWORD *)(v8 + 64);
        long long v33 = *(_OWORD *)(v8 + 80);
        long long v35 = *(_OWORD *)(v8 + 112);
        *(_OWORD *)(a3 + 96) = *(_OWORD *)(v8 + 96);
        *(_OWORD *)(a3 + 112) = v35;
        *(_OWORD *)(a3 + 64) = v34;
        *(_OWORD *)(a3 + 80) = v33;
        *(_OWORD *)(a3 + 32) = v32;
        *(_OWORD *)(a3 + 48) = v31;
        *(_OWORD *)a3 = v30;
        *(_OWORD *)(a3 + 16) = v29;
      }
      a4->i64[0] = v8;
      goto LABEL_26;
    }
    sub_215B26488(a1, (uint64_t)&v39, a5, a6);
    int64x2_t v13 = v39;
    long long v14 = *(_OWORD *)__p;
    int64x2_t v15 = v41;
    int64x2_t v16 = v42;
    int64x2_t v17 = v43;
    int64x2_t v18 = v44;
    int64x2_t v19 = v46;
    *(int64x2_t *)(a3 + 96) = v45;
    *(int64x2_t *)(a3 + 112) = v19;
    *(int64x2_t *)(a3 + 64) = v17;
    *(int64x2_t *)(a3 + 80) = v18;
    *(int64x2_t *)(a3 + 32) = v15;
    *(int64x2_t *)(a3 + 48) = v16;
    *(int64x2_t *)a3 = v13;
    *(_OWORD *)(a3 + 16) = v14;
LABEL_13:
    a4->i64[0] = 0;
LABEL_26:
    a4[7].i8[8] = 1;
    return;
  }
  char v36 = operator new(0x20uLL);
  long long v37 = xmmword_215E9AB80;
  strcpy((char *)v36, "invalid VZMatrixLayout value");
  char v38 = 1;
  sub_2159644BC((long long *)&v36, (uint64_t)&v39);
  *a4 = v39;
  a4[1].i8[0] = 0;
  a4[7].i8[0] = 0;
  if (v46.i8[0])
  {
    a4[2].i8[8] = 0;
    int v27 = v41.u8[8];
    if (v41.i8[8])
    {
      a4[1] = *(int64x2_t *)__p;
      a4[2].i64[0] = v41.i64[0];
      __p[1] = 0;
      v41.i64[0] = 0;
      __p[0] = 0;
      a4[2].i8[8] = 1;
    }
    a4[3].i8[0] = 0;
    a4[6].i8[8] = 0;
    if (v45.i8[8])
    {
      uint64_t v28 = v43.i64[1];
      a4[4].i64[0] = v43.i64[0];
      a4[3] = v42;
      int64x2_t v42 = 0uLL;
      a4[4].i64[1] = v28;
      a4[5] = v44;
      a4[6].i64[0] = v45.i64[0];
      v43.i64[0] = 0;
      int64x2_t v44 = 0uLL;
      v45.i64[0] = 0;
      a4[6].i8[8] = 1;
    }
    a4[7].i8[0] = 1;
    a4[7].i8[8] = 0;
    if (v27 && v41.i8[7] < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    a4[7].i8[8] = 0;
  }
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete(v36);
  }
}

void sub_215966680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2159666A4(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float64x2_t a5@<Q0>)
{
  if (!a2)
  {
    if (a3)
    {
      sub_215B26044(a1, (uint64_t)&v19, a5);
      *(void *)&long long v11 = __PAIR64__(__p[0], v19);
      LODWORD(v12) = vdupq_lane_s32(*(int32x2_t *)&v19, 1).u32[0];
      *((void *)&v11 + 1) = __PAIR64__(v22, v21);
      DWORD1(v12) = HIDWORD(__p[0]);
      *((void *)&v12 + 1) = __PAIR64__(DWORD1(v22), DWORD1(v21));
      *(void *)&long long v13 = __PAIR64__(__p[1], DWORD2(v19));
      *((void *)&v13 + 1) = __PAIR64__(DWORD2(v22), DWORD2(v21));
      *(_OWORD *)(a3 + 16) = v12;
      *(_OWORD *)(a3 + 32) = v13;
      *(_OWORD *)a3 = v11;
    }
    goto LABEL_7;
  }
  if (a2 == 1)
  {
    if (a3)
    {
      sub_215B26044(a1, (uint64_t)&v19, a5);
      uint64_t v7 = v19;
      long long v8 = *(_OWORD *)__p;
      long long v9 = v21;
      long long v10 = v22;
      *(_DWORD *)(a3 + 8) = DWORD2(v19);
      *(void *)a3 = v7;
      *(_DWORD *)(a3 + 20) = DWORD2(v8);
      *(_DWORD *)(a3 + 32) = DWORD2(v9);
      *(void *)(a3 + 12) = v8;
      *(void *)(a3 + 24) = v9;
      *(_DWORD *)(a3 + 44) = DWORD2(v10);
      *(void *)(a3 + 36) = v10;
    }
LABEL_7:
    *(unsigned char *)(a4 + 120) = 1;
    return;
  }
  int64x2_t v16 = operator new(0x20uLL);
  long long v17 = xmmword_215E9AB80;
  strcpy((char *)v16, "invalid VZMatrixLayout value");
  char v18 = 1;
  sub_2159644BC((long long *)&v16, (uint64_t)&v19);
  *(_OWORD *)a4 = v19;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v28)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v14 = BYTE8(v21);
    if (BYTE8(v21))
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)__p;
      *(void *)(a4 + 32) = v21;
      __p[1] = 0;
      *(void *)&long long v21 = 0;
      __p[0] = 0;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v27)
    {
      uint64_t v15 = v24;
      *(void *)(a4 + 64) = v23;
      *(_OWORD *)(a4 + 48) = v22;
      long long v22 = 0uLL;
      *(void *)(a4 + 72) = v15;
      *(_OWORD *)(a4 + 80) = v25;
      *(void *)(a4 + 96) = v26;
      uint64_t v23 = 0;
      long long v25 = 0uLL;
      uint64_t v26 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v14 && SBYTE7(v21) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v18 && SHIBYTE(v17) < 0) {
    operator delete(v16);
  }
}

void sub_2159668DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215966900(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float64x2_t a5@<Q0>, float64x2_t a6@<Q2>)
{
  if (!a2)
  {
    if (a3)
    {
      sub_215B26488(a1, (uint64_t)&v26, a5, a6);
      *(void *)&long long v16 = *((void *)&v26 + 1);
      *(void *)&long long v15 = v26;
      *((void *)&v15 + 1) = v28;
      *(void *)&long long v18 = *((void *)&v30 + 1);
      *(void *)&long long v17 = v30;
      *(void *)&long long v19 = __p;
      *((void *)&v17 + 1) = v32;
      *((void *)&v16 + 1) = *((void *)&v28 + 1);
      *(void *)&long long v20 = v31;
      *((void *)&v18 + 1) = *((void *)&v32 + 1);
      *((void *)&v19 + 1) = v29;
      *((void *)&v20 + 1) = v33;
      *(_OWORD *)(a3 + 64) = v19;
      *(_OWORD *)(a3 + 80) = v20;
      *(_OWORD *)(a3 + 32) = v16;
      *(_OWORD *)(a3 + 48) = v18;
      *(_OWORD *)a3 = v15;
      *(_OWORD *)(a3 + 16) = v17;
    }
    goto LABEL_7;
  }
  if (a2 == 1)
  {
    if (a3)
    {
      sub_215B26488(a1, (uint64_t)&v26, a5, a6);
      long long v8 = v26;
      long long v9 = v28;
      uint64_t v10 = v29;
      long long v11 = v30;
      uint64_t v12 = v31;
      long long v13 = v32;
      uint64_t v14 = v33;
      *(void *)(a3 + 16) = __p;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 40) = v10;
      *(_OWORD *)(a3 + 24) = v9;
      *(void *)(a3 + 64) = v12;
      *(_OWORD *)(a3 + 48) = v11;
      *(void *)(a3 + 88) = v14;
      *(_OWORD *)(a3 + 72) = v13;
    }
LABEL_7:
    *(unsigned char *)(a4 + 120) = 1;
    return;
  }
  uint64_t v23 = operator new(0x20uLL);
  long long v24 = xmmword_215E9AB80;
  strcpy((char *)v23, "invalid VZMatrixLayout value");
  char v25 = 1;
  sub_2159644BC((long long *)&v23, (uint64_t)&v26);
  *(_OWORD *)a4 = v26;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if ((_BYTE)v33)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v21 = BYTE8(v28);
    if (BYTE8(v28))
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v28;
      *(void *)&long long v28 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (BYTE8(v32))
    {
      uint64_t v22 = *((void *)&v30 + 1);
      *(void *)(a4 + 64) = v30;
      *(_OWORD *)(a4 + 48) = v29;
      long long v29 = 0uLL;
      *(void *)(a4 + 72) = v22;
      *(_OWORD *)(a4 + 80) = v31;
      *(void *)(a4 + 96) = v32;
      *(void *)&long long v30 = 0;
      long long v31 = 0uLL;
      *(void *)&long long v32 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 120) = 0;
    if (v21 && SBYTE7(v28) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 120) = 0;
  }
  if (v25 && SHIBYTE(v24) < 0) {
    operator delete(v23);
  }
}

void sub_215966B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215966B54(uint64_t a1)
{
  LOBYTE(v8) = 0;
  char v9 = 0;
  char v10 = 1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E568, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E568))
  {
    uint64_t v7 = sub_215990AC4(1);
    sub_2157BB1A4(qword_26788E588, v7);
    __cxa_atexit((void (*)(void *))sub_215831280, qword_26788E588, &dword_21572C000);
    __cxa_guard_release(&qword_26788E568);
  }
  sub_2157BB1A4(&__p, qword_26788E588);
  char v13 = 1;
  int v14 = 0;
  sub_215966CE4(a1, &v8);
  if (v13)
  {
    uint64_t v2 = (char *)__p;
    if (__p)
    {
      long long v3 = v12;
      int v4 = __p;
      if (v12 != __p)
      {
        do
        {
          char v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        int v4 = __p;
      }
      uint64_t v12 = v2;
      operator delete(v4);
    }
  }
  return a1;
}

void sub_215966CB8(_Unwind_Exception *a1)
{
}

void sub_215966CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157B6CA8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215966CE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  if (*((unsigned char *)a2 + 40))
  {
    sub_2157BB1A4((void *)(a1 + 16), a2 + 2);
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(unsigned char *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 128) = 0;
  return a1;
}

void sub_215966D74(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 40))
  {
    uint64_t v4 = (char *)*v2;
    if (*v2)
    {
      char v5 = *(char **)(v1 + 24);
      uint64_t v6 = *v2;
      if (v5 != v4)
      {
        do
        {
          uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 1);
          if (v7)
          {
            if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
          v5 -= 16;
        }
        while (v5 != v4);
        uint64_t v6 = *v2;
      }
      *(void *)(v1 + 24) = v4;
      operator delete(v6);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215966E08(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + 12) = a2;
  if (a2 < 3)
  {
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  unsigned __int8 v6 = a2;
  sub_2157D8BD0("invalid VZServerSyncType ", &v6);
  if (SHIBYTE(v8) < 0)
  {
    sub_215738B0C(__p, v7[0], (unint64_t)v7[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v7;
    uint64_t v10 = v8;
  }
  char v11 = 1;
  LOBYTE(v12) = 0;
  char v16 = 0;
  char v17 = 1;
  sub_21573FCF8(0xAu, (long long *)__p, (uint64_t)&v18);
  *(_OWORD *)a3 = v18;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v28)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v4 = v21;
    if (v21)
    {
      *(_OWORD *)(a3 + 16) = v19;
      *(void *)(a3 + 32) = v20;
      uint64_t v20 = 0;
      long long v19 = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v27)
    {
      uint64_t v5 = v24;
      *(void *)(a3 + 64) = v23;
      *(_OWORD *)(a3 + 48) = v22;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      *(void *)(a3 + 72) = v5;
      *(_OWORD *)(a3 + 80) = v25;
      *(void *)(a3 + 96) = v26;
      long long v25 = 0uLL;
      uint64_t v26 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v4 && SHIBYTE(v20) < 0) {
      operator delete((void *)v19);
    }
    if (!v17) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v17) {
      goto LABEL_24;
    }
  }
  if (!v16) {
    goto LABEL_21;
  }
  if (v15 < 0)
  {
    operator delete(v14);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_21:
      if (v11) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(v12);
  if (v11)
  {
LABEL_22:
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_24:
  if (SHIBYTE(v8) < 0) {
    operator delete(v7[0]);
  }
}

void sub_215967004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215967030(void *a1, void *a2)
{
  v12[3] = *MEMORY[0x263EF8340];
  if (*((unsigned char *)a1 + 32))
  {
    long long v3 = (void *)a2[3];
    if (v3)
    {
      if (v3 == a2)
      {
        char v11 = v10;
        (*(void (**)(void *, void *))(*a2 + 24))(a2, v10);
      }
      else
      {
        char v11 = (void *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
      }
    }
    else
    {
      char v11 = 0;
    }
    if (v10 != a1)
    {
      uint64_t v5 = v11;
      unsigned __int8 v6 = (void *)a1[3];
      if (v11 == v10)
      {
        if (v6 != a1)
        {
          (*(void (**)(void *, void *))(v10[0] + 24))(v10, a1);
          (*(void (**)(void *))(*v11 + 32))(v11);
          char v11 = (void *)a1[3];
          uint64_t v8 = v11;
          a1[3] = a1;
          uint64_t v7 = v8;
          if (v8 == v10) {
            goto LABEL_27;
          }
          goto LABEL_21;
        }
        (*(void (**)(void *, void *))(v10[0] + 24))(v10, v12);
        (*(void (**)(void *))(*v11 + 32))(v11);
        char v11 = 0;
        (*(void (**)(void, void *))(*(void *)a1[3] + 24))(a1[3], v10);
        (*(void (**)(void))(*(void *)a1[3] + 32))(a1[3]);
        a1[3] = 0;
        char v11 = v10;
        (*(void (**)(void *, void *))(v12[0] + 24))(v12, a1);
        (*(void (**)(void *))(v12[0] + 32))(v12);
        a1[3] = a1;
        uint64_t v7 = v11;
        if (v11 != v10)
        {
LABEL_21:
          if (v7) {
            (*(void (**)(void *))(*v7 + 40))(v7);
          }
          return a1;
        }
LABEL_27:
        (*(void (**)(void *))(v10[0] + 32))(v10);
        return a1;
      }
      if (v6 != a1)
      {
        char v11 = (void *)a1[3];
        a1[3] = v5;
        uint64_t v7 = v6;
        if (v6 == v10) {
          goto LABEL_27;
        }
        goto LABEL_21;
      }
      (*(void (**)(void *, void *))(*a1 + 24))(a1, v10);
      (*(void (**)(void))(*(void *)a1[3] + 32))(a1[3]);
      a1[3] = v11;
      char v11 = v10;
    }
    uint64_t v7 = v11;
    if (v11 != v10) {
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  int v4 = (void *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], a1);
    }
    else
    {
      a1[3] = (*(uint64_t (**)(void *))(*v4 + 16))(v4);
    }
  }
  else
  {
    a1[3] = 0;
  }
  *((unsigned char *)a1 + 32) = 1;
  return a1;
}

void sub_215967468(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

void *sub_215967474(void *a1, void *a2)
{
  v12[3] = *MEMORY[0x263EF8340];
  if (*((unsigned char *)a1 + 32))
  {
    long long v3 = (void *)a2[3];
    if (v3)
    {
      if (v3 == a2)
      {
        char v11 = v10;
        (*(void (**)(void *, void *))(*a2 + 24))(a2, v10);
      }
      else
      {
        char v11 = (void *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
      }
    }
    else
    {
      char v11 = 0;
    }
    if (v10 != a1)
    {
      uint64_t v5 = v11;
      unsigned __int8 v6 = (void *)a1[3];
      if (v11 == v10)
      {
        if (v6 != a1)
        {
          (*(void (**)(void *, void *))(v10[0] + 24))(v10, a1);
          (*(void (**)(void *))(*v11 + 32))(v11);
          char v11 = (void *)a1[3];
          uint64_t v8 = v11;
          a1[3] = a1;
          uint64_t v7 = v8;
          if (v8 == v10) {
            goto LABEL_27;
          }
          goto LABEL_21;
        }
        (*(void (**)(void *, void *))(v10[0] + 24))(v10, v12);
        (*(void (**)(void *))(*v11 + 32))(v11);
        char v11 = 0;
        (*(void (**)(void, void *))(*(void *)a1[3] + 24))(a1[3], v10);
        (*(void (**)(void))(*(void *)a1[3] + 32))(a1[3]);
        a1[3] = 0;
        char v11 = v10;
        (*(void (**)(void *, void *))(v12[0] + 24))(v12, a1);
        (*(void (**)(void *))(v12[0] + 32))(v12);
        a1[3] = a1;
        uint64_t v7 = v11;
        if (v11 != v10)
        {
LABEL_21:
          if (v7) {
            (*(void (**)(void *))(*v7 + 40))(v7);
          }
          return a1;
        }
LABEL_27:
        (*(void (**)(void *))(v10[0] + 32))(v10);
        return a1;
      }
      if (v6 != a1)
      {
        char v11 = (void *)a1[3];
        a1[3] = v5;
        uint64_t v7 = v6;
        if (v6 == v10) {
          goto LABEL_27;
        }
        goto LABEL_21;
      }
      (*(void (**)(void *, void *))(*a1 + 24))(a1, v10);
      (*(void (**)(void))(*(void *)a1[3] + 32))(a1[3]);
      a1[3] = v11;
      char v11 = v10;
    }
    uint64_t v7 = v11;
    if (v11 != v10) {
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  int v4 = (void *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], a1);
    }
    else
    {
      a1[3] = (*(uint64_t (**)(void *))(*v4 + 16))(v4);
    }
  }
  else
  {
    a1[3] = 0;
  }
  *((unsigned char *)a1 + 32) = 1;
  return a1;
}

void sub_2159678AC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

void *sub_2159678B8(void *a1, uint64_t a2)
{
  uint64_t v10 = a1;
  sub_215731D94(a1, (uint64_t)"{", 1);
  v9[0] = (unsigned __int16 *)a2;
  v9[1] = (unsigned __int16 *)(a2 + 56);
  void v9[2] = (unsigned __int16 *)(a2 + 96);
  sub_215731D94(a1, (uint64_t)"{", 1);
  v12[0] = 1;
  char v13 = &v10;
  int v14 = &v11;
  sub_21596CF70(v9, (uint64_t)v12);
  sub_215731D94(v10, (uint64_t)"}", 1);
  sub_215731D94(v10, (uint64_t)",", 1);
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v4 = *(void *)(a2 + 80);
    if (v4) {
      uint64_t v5 = "f(){*}";
    }
    else {
      uint64_t v5 = "f(){nullptr}";
    }
    unsigned __int8 v6 = v10;
    if (v4) {
      uint64_t v7 = 6;
    }
    else {
      uint64_t v7 = 12;
    }
  }
  else
  {
    unsigned __int8 v6 = v10;
    uint64_t v5 = "nullopt";
    uint64_t v7 = 7;
  }
  sub_215731D94(v6, (uint64_t)v5, v7);
  sub_215731D94(v10, (uint64_t)"}", 1);
  return v10;
}

void sub_2159679D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 16) + 16))(v27);
  if (v36)
  {
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  sub_2157D8F38((int *)v27, (uint64_t)&v6);
  long long v16 = v6;
  long long v3 = sub_215741BFC(&__p, &v7);
  *(_OWORD *)a2 = v16;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v3;
      *(void *)(a2 + 32) = *((void *)v3 + 2);
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
      *(void *)long long v3 = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v25)
    {
      uint64_t v5 = v22;
      *(void *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a2 + 72) = v5;
      *(_OWORD *)(a2 + 80) = v23;
      *(void *)(a2 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v4 && v18 < 0) {
      operator delete(__p);
    }
    if (!v15) {
      goto LABEL_23;
    }
    goto LABEL_15;
  }
  *(unsigned char *)(a2 + 120) = 0;
  if (v15)
  {
LABEL_15:
    if (v14)
    {
      if (v13 < 0) {
        operator delete(v12);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete((void *)v7);
    }
  }
LABEL_23:
  if (!v36 && v35)
  {
    if (v34)
    {
      if (v33 < 0) {
        operator delete(v32);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
    }
    if (v29)
    {
      if (v28 < 0) {
        operator delete((void *)v27[2]);
      }
    }
  }
}

void sub_215967BDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_215967BF8(_Unwind_Exception *a1)
{
  sub_2157407D4(v1 - 160);
  _Unwind_Resume(a1);
}

void sub_215967C0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 16) + 24))(v27);
  if (v36)
  {
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  sub_2157D8F38((int *)v27, (uint64_t)&v6);
  long long v16 = v6;
  long long v3 = sub_215741BFC(&__p, &v7);
  *(_OWORD *)a2 = v16;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v3;
      *(void *)(a2 + 32) = *((void *)v3 + 2);
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
      *(void *)long long v3 = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v25)
    {
      uint64_t v5 = v22;
      *(void *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a2 + 72) = v5;
      *(_OWORD *)(a2 + 80) = v23;
      *(void *)(a2 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v4 && v18 < 0) {
      operator delete(__p);
    }
    if (!v15) {
      goto LABEL_23;
    }
    goto LABEL_15;
  }
  *(unsigned char *)(a2 + 120) = 0;
  if (v15)
  {
LABEL_15:
    if (v14)
    {
      if (v13 < 0) {
        operator delete(v12);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete((void *)v7);
    }
  }
LABEL_23:
  if (!v36 && v35)
  {
    if (v34)
    {
      if (v33 < 0) {
        operator delete(v32);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
    }
    if (v29)
    {
      if (v28 < 0) {
        operator delete((void *)v27[2]);
      }
    }
  }
}

void sub_215967E18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_215967E34(_Unwind_Exception *a1)
{
  sub_2157407D4(v1 - 160);
  _Unwind_Resume(a1);
}

void sub_215967E48()
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  LOBYTE(v3) = 0;
  char v4 = 0;
  LOBYTE(v1) = 0;
  char v2 = 0;
  uint64_t v5 = &unk_26C67A970;
  LOBYTE(v6) = 0;
  char v7 = 0;
  LOBYTE(v8) = 0;
  char v9 = 0;
  uint64_t v0 = &unk_26C678B80;
  operator new();
}

void sub_215968258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2159682C8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

uint64_t sub_215968360(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void *sub_2159683F8(void *a1, uint64_t *a2)
{
  uint64_t v3 = sub_215731D94(a1, (uint64_t)"SyncControl{server: ", 20);
  uint64_t v9 = *a2;
  int v13 = 0;
  sub_215748F40((uint64_t)&v15, (uint64_t)v12, &v9);
  if (v13 == -1) {
    sub_215742D4C();
  }
  char v15 = &v14;
  ((void (*)(void **__return_ptr, char **, unsigned char *))off_26C672D78[v13])(__p, &v15, v12);
  if (v13 != -1) {
    ((void (*)(char **, unsigned char *))off_26C672D48[v13])(&v15, v12);
  }
  if ((v11 & 0x80u) == 0) {
    char v4 = __p;
  }
  else {
    char v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_215731D94(v3, (uint64_t)v4, v5);
  uint64_t result = sub_215731D94(v6, (uint64_t)"}", 1);
  uint64_t v8 = result;
  if ((char)v11 < 0)
  {
    operator delete(__p[0]);
    return v8;
  }
  return result;
}

void sub_215968510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215968524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215968540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215968554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v27[0] = a2;
  v27[1] = a1;
  v27[2] = a3;
  LOBYTE(v62) = 0;
  char v73 = 0;
  v61[0] = &unk_26C672BC8;
  v61[1] = &v62;
  v61[2] = v27;
  sub_215E12638((uint64_t)v61, (uint64_t)&v50);
  if (v60)
  {
    char v38 = v72;
    if (v72)
    {
      long long v28 = v62;
      long long v62 = 0uLL;
      LOBYTE(v29) = 0;
      LOBYTE(v31) = 0;
      if (!(_BYTE)v65) {
        goto LABEL_19;
      }
      uint64_t v5 = (char *)&v31;
      long long v6 = v63;
      long long v63 = 0uLL;
      long long v29 = v6;
      long long v30 = v64;
    }
    else
    {
      long long v28 = v62;
      LOBYTE(v29) = 0;
      char v37 = 0;
      if (!v71) {
        goto LABEL_19;
      }
      uint64_t v5 = &v37;
      BYTE8(v30) = 0;
      if (BYTE8(v64))
      {
        long long v29 = v63;
        *(void *)&long long v30 = v64;
        *(void *)&long long v64 = 0;
        long long v63 = 0uLL;
        BYTE8(v30) = 1;
      }
      LOBYTE(v31) = 0;
      char v36 = 0;
      if (v70)
      {
        uint64_t v32 = v66;
        long long v31 = v65;
        long long v65 = 0uLL;
        uint64_t v33 = v67;
        long long v34 = v68;
        uint64_t v35 = v69;
        uint64_t v66 = 0;
        long long v68 = 0uLL;
        uint64_t v69 = 0;
        char v36 = 1;
      }
    }
    *uint64_t v5 = 1;
  }
  else
  {
    long long v39 = v50;
    char v7 = sub_215741BFC(&__p, &v51);
    long long v28 = v39;
    LOBYTE(v29) = 0;
    char v37 = 0;
    if (v49)
    {
      BYTE8(v30) = 0;
      int v8 = v42;
      if (v42)
      {
        long long v29 = *(_OWORD *)v7;
        *(void *)&long long v30 = *((void *)v7 + 2);
        *((void *)v7 + 1) = 0;
        *((void *)v7 + 2) = 0;
        *(void *)char v7 = 0;
        BYTE8(v30) = 1;
      }
      LOBYTE(v31) = 0;
      char v36 = 0;
      if (v48)
      {
        uint64_t v32 = v44;
        long long v31 = v43;
        long long v43 = 0uLL;
        uint64_t v33 = v45;
        long long v34 = v46;
        uint64_t v35 = v47;
        uint64_t v44 = 0;
        long long v46 = 0uLL;
        uint64_t v47 = 0;
        char v36 = 1;
      }
      char v37 = 1;
      char v38 = 0;
      if (v8 && v41 < 0) {
        operator delete(__p);
      }
    }
    else
    {
      char v38 = 0;
    }
    if (!v60 && v59)
    {
      if (v58)
      {
        if (v57 < 0) {
          operator delete(v56);
        }
        if (v55 < 0) {
          operator delete(v54);
        }
      }
      if (v53 && v52 < 0) {
        operator delete((void *)v51);
      }
    }
  }
LABEL_19:
  if (v73) {
    sub_2157BBE98((uint64_t)&v62);
  }
  if (v38)
  {
    *(unsigned char *)(a4 + 120) = 1;
    *(_OWORD *)a4 = v28;
    long long v28 = 0uLL;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 48) = 0;
    uint64_t v9 = (unsigned char *)(a4 + 48);
    if ((_BYTE)v31)
    {
      long long v10 = v29;
      long long v11 = v30;
      long long v29 = 0uLL;
      *(_OWORD *)(a4 + 16) = v10;
      *(_OWORD *)(a4 + 32) = v11;
LABEL_24:
      *uint64_t v9 = 1;
    }
  }
  else
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E570, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788E570))
    {
      long long v16 = std::generic_category();
      qword_26788E578 = 22;
      qword_26788E580 = (uint64_t)v16;
      __cxa_guard_release(&qword_26788E570);
    }
    if (v38)
    {
      exception = __cxa_allocate_exception(8uLL);
      void *exception = &unk_26C65A5B0;
      __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
    }
    if (*((void *)&v28 + 1) != qword_26788E580 || v28 != qword_26788E578)
    {
      *(unsigned char *)(a4 + 120) = 0;
      *(_OWORD *)a4 = v28;
      *(unsigned char *)(a4 + 16) = 0;
      *(unsigned char *)(a4 + 112) = 0;
      uint64_t v9 = (unsigned char *)(a4 + 112);
      if (!v37) {
        return sub_2157BBE98((uint64_t)&v28);
      }
      *(unsigned char *)(a4 + 40) = 0;
      if (BYTE8(v30))
      {
        *(_OWORD *)(a4 + 16) = v29;
        *(void *)(a4 + 32) = v30;
        *(void *)&long long v30 = 0;
        long long v29 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v36)
      {
        uint64_t v15 = v33;
        *(void *)(a4 + 64) = v32;
        *(_OWORD *)(a4 + 48) = v31;
        long long v31 = 0uLL;
        *(void *)(a4 + 72) = v15;
        *(_OWORD *)(a4 + 80) = v34;
        *(void *)(a4 + 96) = v35;
        uint64_t v32 = 0;
        long long v34 = 0uLL;
        uint64_t v35 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      goto LABEL_24;
    }
    sub_215741BFC(v18, &v29);
    sub_21573FCF8(0xAu, (long long *)v18, (uint64_t)&v62);
    *(_OWORD *)a4 = v62;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v71)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v13 = BYTE8(v64);
      if (BYTE8(v64))
      {
        *(_OWORD *)(a4 + 16) = v63;
        *(void *)(a4 + 32) = v64;
        *(void *)&long long v64 = 0;
        long long v63 = 0uLL;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v70)
      {
        uint64_t v14 = v67;
        *(void *)(a4 + 64) = v66;
        *(_OWORD *)(a4 + 48) = v65;
        long long v65 = 0uLL;
        *(void *)(a4 + 72) = v14;
        *(_OWORD *)(a4 + 80) = v68;
        *(void *)(a4 + 96) = v69;
        uint64_t v66 = 0;
        long long v68 = 0uLL;
        uint64_t v69 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v13 && SBYTE7(v64) < 0) {
        operator delete((void *)v63);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (v26)
    {
      if (v25)
      {
        if (v24 < 0) {
          operator delete(v23);
        }
        if (v22 < 0) {
          operator delete(v21);
        }
      }
      if (v20 && v19 < 0) {
        operator delete(v18[0]);
      }
    }
  }
  return sub_2157BBE98((uint64_t)&v28);
}

void sub_215968AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

uint64_t sub_215968B30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215968BFC(char *__s@<X2>, uint64_t *a2@<X0>, uint64_t a3@<X1>, unsigned char *a4@<X8>)
{
  uint64_t v6 = *a2;
  if (!__s)
  {
    HIBYTE(v16) = 0;
    LOBYTE(__dst[0]) = 0;
    goto LABEL_12;
  }
  size_t v8 = strlen(__s);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    long long v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    unint64_t v16 = v12 | 0x8000000000000000;
    __dst[0] = v10;
  }
  else
  {
    HIBYTE(v16) = v8;
    long long v10 = __dst;
    if (!v8) {
      goto LABEL_11;
    }
  }
  memcpy(v10, __s, (size_t)v9);
LABEL_11:
  *((unsigned char *)v9 + (void)v10) = 0;
LABEL_12:
  unsigned __int16 v13 = sub_215B19720(*(void *)(v6 + 8), a3, (uint64_t)__dst);
  unsigned __int16 v14 = v13;
  if (SHIBYTE(v16) < 0)
  {
    operator delete(__dst[0]);
    if (v14 < 0x100u) {
LABEL_14:
    }
      sub_215964E98(a3, "client");
  }
  else if (v13 < 0x100u)
  {
    goto LABEL_14;
  }
  *a4 = v14;
  a4[120] = 1;
}

void sub_215968DFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215968E18(char *__s@<X2>, uint64_t *a2@<X0>, uint64_t a3@<X1>, unsigned char *a4@<X8>)
{
  uint64_t v6 = *a2;
  if (!__s)
  {
    HIBYTE(v16) = 0;
    LOBYTE(__dst[0]) = 0;
    goto LABEL_12;
  }
  size_t v8 = strlen(__s);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    long long v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    unint64_t v16 = v12 | 0x8000000000000000;
    __dst[0] = v10;
  }
  else
  {
    HIBYTE(v16) = v8;
    long long v10 = __dst;
    if (!v8) {
      goto LABEL_11;
    }
  }
  memcpy(v10, __s, (size_t)v9);
LABEL_11:
  *((unsigned char *)v9 + (void)v10) = 0;
LABEL_12:
  unsigned __int16 v13 = sub_215B198F4(*(void *)(v6 + 8), a3, __dst);
  unsigned __int16 v14 = v13;
  if (SHIBYTE(v16) < 0)
  {
    operator delete(__dst[0]);
    if (v14 < 0x100u) {
LABEL_14:
    }
      sub_215964E98(a3, "client");
  }
  else if (v13 < 0x100u)
  {
    goto LABEL_14;
  }
  *a4 = v14;
  a4[120] = 1;
}

void sub_215969018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215969034(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_215B19AF0(*(void *)(*(void *)a1 + 8), a2, (uint64_t)&v17);
  if (!v20) {
    sub_215964E98(a2, "client");
  }
  uint64_t v6 = v17;
  uint64_t v5 = v18;
  unsigned __int16 v14 = v17;
  uint64_t v15 = v18;
  unint64_t v16 = v19;
  if (!v19)
  {
    unsigned __int16 v14 = &v15;
    uint64_t v12 = v18;
    long long __p = 0;
LABEL_8:
    uint64_t v11 = &v12;
    *(void *)a3 = &v12;
    *(void *)(a3 + 8) = v5;
    uint64_t v7 = a3 + 8;
    long long v10 = __p;
    *(void *)(a3 + 16) = __p;
    if (!v10) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  *((void *)v18 + 2) = &v15;
  char v17 = &v18;
  char v18 = 0;
  char v19 = 0;
  uint64_t v11 = v6;
  uint64_t v12 = v5;
  long long __p = v16;
  if (!v16) {
    goto LABEL_8;
  }
  *((void *)v5 + 2) = &v12;
  unsigned __int16 v14 = &v15;
  uint64_t v15 = 0;
  unint64_t v16 = 0;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  uint64_t v7 = a3 + 8;
  size_t v8 = __p;
  *(void *)(a3 + 16) = __p;
  if (!v8)
  {
LABEL_5:
    *(void *)a3 = v7;
    uint64_t v9 = v12;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v9 = 0;
  *((void *)v5 + 2) = v7;
  uint64_t v11 = &v12;
  uint64_t v12 = 0;
  long long __p = 0;
LABEL_10:
  *(unsigned char *)(a3 + 120) = 1;
  sub_21573AE84((uint64_t)&v11, v9);
  sub_21573AE84((uint64_t)&v14, v15);
  if (v20) {
    sub_21573AE84((uint64_t)&v17, v18);
  }
}

void sub_215969258(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 - 40)) {
    sub_21573AE84(v1 - 64, *(char **)(v1 - 56));
  }
  _Unwind_Resume(exception_object);
}

void sub_215969278(uint64_t *a1, uint64_t a2, char *__s)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  if (!__s)
  {
    HIBYTE(v14) = 0;
    LOBYTE(__dst[0]) = 0;
    goto LABEL_12;
  }
  size_t v7 = strlen(__s);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v9 = operator new(v10 + 1);
    __dst[1] = v8;
    unint64_t v14 = v11 | 0x8000000000000000;
    __dst[0] = v9;
  }
  else
  {
    HIBYTE(v14) = v7;
    uint64_t v9 = __dst;
    if (!v7) {
      goto LABEL_11;
    }
  }
  memcpy(v9, __s, v8);
LABEL_11:
  *((unsigned char *)v9 + v8) = 0;
LABEL_12:
  uint64_t v12 = a2;
  if (!v5) {
    uint64_t v12 = 0;
  }
  sub_215B1C204(v4, v12 | a2 & 0xFFFFFFFFFFFFFF00, v5, (uint64_t)__dst);
}

void sub_215969540(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 208);
  _Unwind_Resume(a1);
}

void sub_215969564(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215969580(uint64_t *a1, uint64_t a2, char *__s)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  if (!__s)
  {
    HIBYTE(v14) = 0;
    LOBYTE(__dst[0]) = 0;
    goto LABEL_12;
  }
  size_t v7 = strlen(__s);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v9 = operator new(v10 + 1);
    __dst[1] = v8;
    unint64_t v14 = v11 | 0x8000000000000000;
    __dst[0] = v9;
  }
  else
  {
    HIBYTE(v14) = v7;
    uint64_t v9 = __dst;
    if (!v7) {
      goto LABEL_11;
    }
  }
  memcpy(v9, __s, v8);
LABEL_11:
  *((unsigned char *)v9 + v8) = 0;
LABEL_12:
  uint64_t v12 = a2;
  if (!v5) {
    uint64_t v12 = 0;
  }
  sub_215B1C5CC(v4, v12 | a2 & 0xFFFFFFFFFFFFFF00, v5, (uint64_t)__dst);
}

void sub_215969848(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 208);
  _Unwind_Resume(a1);
}

void sub_21596986C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215969888(char *__s@<X2>, uint64_t *a2@<X0>, uint64_t a3@<X1>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  char v5 = a4;
  if (a4 < 3)
  {
    uint64_t v9 = *a2;
    uint64_t v10 = *(unsigned __int8 *)(a3 + 16);
    if (!__s)
    {
      HIBYTE(v20) = 0;
      LOBYTE(__dst[0]) = 0;
      goto LABEL_22;
    }
    size_t v11 = strlen(__s);
    if (v11 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v12 = v11;
    if (v11 >= 0x17)
    {
      uint64_t v16 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17) {
        uint64_t v16 = v11 | 7;
      }
      uint64_t v17 = v16 + 1;
      unsigned __int16 v13 = operator new(v16 + 1);
      __dst[1] = v12;
      unint64_t v20 = v17 | 0x8000000000000000;
      __dst[0] = v13;
    }
    else
    {
      HIBYTE(v20) = v11;
      unsigned __int16 v13 = __dst;
      if (!v11) {
        goto LABEL_21;
      }
    }
    memcpy(v13, __s, v12);
LABEL_21:
    *((unsigned char *)v13 + v12) = 0;
LABEL_22:
    uint64_t v18 = a3;
    if (!v10) {
      uint64_t v18 = 0;
    }
    sub_215B1C6E8(v9, v18 | a3 & 0xFFFFFFFFFFFFFF00, v10, (uint64_t)__dst, v5);
  }
  sub_215836644(a4, (uint64_t)&v21);
  *(_OWORD *)a5 = v21;
  *(unsigned char *)(a5 + 16) = 0;
  *(unsigned char *)(a5 + 112) = 0;
  if (v31)
  {
    *(unsigned char *)(a5 + 40) = 0;
    int v14 = v24;
    if (v24)
    {
      *(_OWORD *)(a5 + 16) = v22;
      *(void *)(a5 + 32) = v23;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      *(unsigned char *)(a5 + 40) = 1;
    }
    *(unsigned char *)(a5 + 48) = 0;
    *(unsigned char *)(a5 + 104) = 0;
    if (v30)
    {
      uint64_t v15 = v27;
      *(void *)(a5 + 64) = v26;
      *(_OWORD *)(a5 + 48) = v25;
      long long v25 = 0uLL;
      *(void *)(a5 + 72) = v15;
      *(_OWORD *)(a5 + 80) = v28;
      *(void *)(a5 + 96) = v29;
      uint64_t v26 = 0;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(a5 + 104) = 1;
    }
    *(unsigned char *)(a5 + 112) = 1;
    *(unsigned char *)(a5 + 120) = 0;
    if (v14 && SHIBYTE(v23) < 0) {
      operator delete((void *)v22);
    }
  }
  else
  {
    *(unsigned char *)(a5 + 120) = 0;
  }
}

void sub_215969C20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 224);
  _Unwind_Resume(a1);
}

void sub_215969C44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215969C60(uint64_t *a1, uint64_t a2, const void ***a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a2;
  if (!*(unsigned char *)(a2 + 16)) {
    uint64_t v4 = 0;
  }
  sub_215B1C320(v3, v4 | a2 & 0xFFFFFFFFFFFFFF00, *(unsigned __int8 *)(a2 + 16), a3);
}

void sub_215969E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_215969E84(_Unwind_Exception *a1)
{
  sub_2157407D4(v1 - 160);
  _Unwind_Resume(a1);
}

void sub_215969E9C()
{
}

void sub_215969EB0(uint64_t a1)
{
  uint64_t v85 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(a1 + 16);
  uint64_t v2 = *v1;
  LOBYTE(v54) = 0;
  char v55 = 0;
  char v56 = 1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E568, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E568))
  {
    long long v34 = sub_215990AC4(1);
    sub_2157BB1A4(qword_26788E588, v34);
    __cxa_atexit((void (*)(void *))sub_215831280, qword_26788E588, &dword_21572C000);
    __cxa_guard_release(&qword_26788E568);
  }
  sub_2157BB1A4(&__p, qword_26788E588);
  char v59 = 1;
  int v60 = 0;
  sub_215966CE4((uint64_t)v61, &v54);
  if (v59)
  {
    uint64_t v3 = (uint64_t *)__p;
    if (__p)
    {
      uint64_t v4 = v58;
      char v5 = __p;
      if (v58 != __p)
      {
        do
        {
          uint64_t v6 = (std::__shared_weak_count *)*(v4 - 1);
          if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
          v4 -= 2;
        }
        while (v4 != v3);
        char v5 = __p;
      }
      char v58 = v3;
      operator delete(v5);
    }
  }
  if (*(unsigned char *)(v2 + 136))
  {
    sub_2157BAE6C((uint64_t)v72, (uint64_t *)v2);
  }
  else
  {
    *(void *)char v72 = *(void *)v61;
    *(void *)&v72[5] = *(void *)&v61[5];
    LOBYTE(v73) = 0;
    char v75 = 0;
    if (v64)
    {
      long long v73 = v62;
      uint64_t v74 = v63;
      uint64_t v63 = 0;
      long long v62 = 0uLL;
      char v75 = 1;
    }
    int v76 = v65;
    char v77 = 0;
    char v79 = 0;
    if (v68)
    {
      if (v67)
      {
        if (v67 == &v66)
        {
          long long v78 = &v77;
          (*(void (**)(void))(v66 + 24))();
        }
        else
        {
          long long v78 = (char *)v67;
          uint64_t v67 = 0;
        }
      }
      else
      {
        long long v78 = 0;
      }
      char v79 = 1;
    }
    char v80 = 0;
    char v82 = 0;
    if (v71)
    {
      if (v70)
      {
        if (v70 == &v69)
        {
          int v81 = &v80;
          (*(void (**)(void))(v69 + 24))();
        }
        else
        {
          int v81 = (char *)v70;
          char v70 = 0;
        }
      }
      else
      {
        int v81 = 0;
      }
      char v82 = 1;
    }
  }
  LOBYTE(v35) = 0;
  char v36 = 0;
  if (v75)
  {
    sub_2157BB1A4(&v35, (uint64_t *)&v73);
    char v36 = 1;
  }
  int v37 = v76;
  uint64_t v7 = v1[1];
  if (!*(unsigned char *)(v7 + 32))
  {
    LOBYTE(v52[0]) = 0;
    char v53 = 0;
    LOBYTE(v49[0]) = 0;
    char v51 = 0;
    uint64_t v10 = *v1;
    if (*(unsigned char *)(*v1 + 136)) {
      goto LABEL_56;
    }
    goto LABEL_38;
  }
  uint64_t v8 = *(void *)(v7 + 24);
  if (v8)
  {
    if (v8 == v7)
    {
      char v58 = &v54;
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v7 + 24))(v7, &v54);
      uint64_t v9 = v58;
      if (!v58) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v9 = (uint64_t *)(*(uint64_t (**)(void))(*(void *)v8 + 16))(*(void *)(v7 + 24));
      char v58 = v9;
      if (!v9) {
        goto LABEL_43;
      }
    }
    if (v9 == &v54)
    {
      long long v50 = v49;
      (*(void (**)(uint64_t *, void *))(v54 + 24))(&v54, v49);
LABEL_44:
      size_t v11 = operator new(0x28uLL);
      size_t v12 = v11;
      void *v11 = &unk_26C672C58;
      unsigned __int16 v13 = v11 + 1;
      if (v50)
      {
        if (v50 == v49)
        {
          v11[4] = v13;
          (*(void (**)(void *))(v49[0] + 24))(v49);
        }
        else
        {
          v11[4] = v50;
          long long v50 = 0;
        }
      }
      else
      {
        v11[4] = 0;
      }
      v52[3] = v12;
      char v53 = 1;
      if (v50 == v49)
      {
        (*(void (**)(void *, void *))(v49[0] + 32))(v49, v13);
        int v14 = v58;
        if (v58 != &v54) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v50) {
          (*(void (**)(void))(*v50 + 40))();
        }
        int v14 = v58;
        if (v58 != &v54)
        {
LABEL_53:
          if (v14) {
            (*(void (**)(uint64_t *, void *))(*v14 + 40))(v14, v13);
          }
          LOBYTE(v49[0]) = 0;
          char v51 = 0;
          uint64_t v10 = *v1;
          if (*(unsigned char *)(*v1 + 136))
          {
LABEL_56:
            if (!*(unsigned char *)(v10 + 88))
            {
              LOBYTE(v47[0]) = 0;
              char v48 = 0;
              goto LABEL_86;
            }
            uint64_t v15 = *(uint64_t **)(v10 + 80);
            if (v15)
            {
              uint64_t v16 = (uint64_t *)(v10 + 56);
              if (v15 == v16)
              {
                char v58 = &v54;
                (*(void (**)(uint64_t *, uint64_t *))(*v16 + 24))(v16, &v54);
                uint64_t v15 = v58;
                if (!v58) {
                  goto LABEL_70;
                }
              }
              else
              {
                uint64_t v15 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v15 + 16))(v15);
                char v58 = v15;
                if (!v15) {
                  goto LABEL_70;
                }
              }
              if (v15 == &v54)
              {
                uint64_t v45 = v44;
                (*(void (**)(uint64_t *, void *))(v54 + 24))(&v54, v44);
LABEL_71:
                uint64_t v17 = operator new(0x28uLL);
                uint64_t v18 = v17;
                *uint64_t v17 = &unk_26C672DB0;
                char v19 = v17 + 1;
                if (v45)
                {
                  if (v45 == v44)
                  {
                    v17[4] = v19;
                    (*(void (**)(void *))(v44[0] + 24))(v44);
                  }
                  else
                  {
                    v17[4] = v45;
                    uint64_t v45 = 0;
                  }
                }
                else
                {
                  v17[4] = 0;
                }
                v47[3] = v18;
                char v48 = 1;
                if (v45 == v44)
                {
                  (*(void (**)(void *, void *))(v44[0] + 32))(v44, v19);
                  unint64_t v20 = v58;
                  if (v58 != &v54) {
                    goto LABEL_80;
                  }
                }
                else
                {
                  if (v45) {
                    (*(void (**)(void))(*v45 + 40))();
                  }
                  unint64_t v20 = v58;
                  if (v58 != &v54)
                  {
LABEL_80:
                    if (v20) {
                      (*(void (**)(uint64_t *, void *))(*v20 + 40))(v20, v19);
                    }
                    uint64_t v10 = *v1;
                    if (!*(unsigned char *)(*v1 + 136)) {
                      goto LABEL_91;
                    }
LABEL_86:
                    if (*(unsigned char *)(v10 + 128))
                    {
                      long long v21 = *(uint64_t **)(v10 + 120);
                      if (v21)
                      {
                        long long v22 = (uint64_t *)(v10 + 96);
                        if (v21 == v22)
                        {
                          char v58 = &v54;
                          (*(void (**)(uint64_t *, uint64_t *))(*v22 + 24))(v22, &v54);
                          long long v21 = v58;
                          if (!v58) {
                            goto LABEL_122;
                          }
                        }
                        else
                        {
                          long long v21 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v21 + 16))(v21);
                          char v58 = v21;
                          if (!v21) {
                            goto LABEL_122;
                          }
                        }
                        if (v21 == &v54)
                        {
                          unsigned __int8 v42 = v41;
                          (*(void (**)(uint64_t *, void *))(v54 + 24))(&v54, v41);
LABEL_123:
                          char v30 = (uint64_t *)operator new(0x28uLL);
                          char v31 = v30;
                          *char v30 = (uint64_t)&unk_26C672E30;
                          uint64_t v32 = v30 + 1;
                          if (v42)
                          {
                            if (v42 == v41)
                            {
                              v30[4] = (uint64_t)v32;
                              (*(void (**)(void *))(v41[0] + 24))(v41);
                            }
                            else
                            {
                              v30[4] = (uint64_t)v42;
                              unsigned __int8 v42 = 0;
                            }
                          }
                          else
                          {
                            v30[4] = 0;
                          }
                          uint64_t v45 = v31;
                          char v46 = 1;
                          if (v42 == v41)
                          {
                            (*(void (**)(void *, void *))(v41[0] + 32))(v41, v32);
                            uint64_t v33 = v58;
                            if (v58 != &v54)
                            {
LABEL_132:
                              if (v33) {
                                (*(void (**)(uint64_t *, void *))(*v33 + 40))(v33, v32);
                              }
LABEL_92:
                              sub_21596C228((uint64_t)&v54, (uint64_t)v52, (uint64_t)v49, (uint64_t)v47, (uint64_t)v44);
                              uint64_t v23 = v1[2];
                              if (!*(unsigned char *)(v23 + 32))
                              {
                                LOBYTE(v41[0]) = 0;
                                char v43 = 0;
                                goto LABEL_118;
                              }
                              uint64_t v24 = *(void *)(v23 + 24);
                              if (v24)
                              {
                                if (v24 != v23)
                                {
                                  long long v25 = (uint64_t *)(*(uint64_t (**)(void))(*(void *)v24 + 16))(*(void *)(v23 + 24));
                                  uint64_t v84 = v25;
                                  if (!v25) {
                                    goto LABEL_99;
                                  }
LABEL_101:
                                  if (v25 == &v83)
                                  {
                                    long long v39 = v38;
                                    (*(void (**)(uint64_t *, void *))(v83 + 24))(&v83, v38);
                                  }
                                  else
                                  {
                                    long long v39 = v25;
                                    uint64_t v84 = 0;
                                  }
                                  goto LABEL_105;
                                }
                                uint64_t v84 = &v83;
                                (*(void (**)(uint64_t, uint64_t *))(*(void *)v23 + 24))(v23, &v83);
                                long long v25 = v84;
                                if (v84) {
                                  goto LABEL_101;
                                }
                              }
                              else
                              {
                                uint64_t v84 = 0;
                              }
LABEL_99:
                              long long v39 = 0;
LABEL_105:
                              unsigned __int8 v42 = 0;
                              uint64_t v26 = (uint64_t *)operator new(0x28uLL);
                              uint64_t v27 = v26;
                              *uint64_t v26 = (uint64_t)&unk_26C672CD8;
                              long long v28 = v26 + 1;
                              if (v39)
                              {
                                if (v39 == v38)
                                {
                                  v26[4] = (uint64_t)v28;
                                  (*(void (**)(void *))(v38[0] + 24))(v38);
                                }
                                else
                                {
                                  v26[4] = (uint64_t)v39;
                                  long long v39 = 0;
                                }
                              }
                              else
                              {
                                v26[4] = 0;
                              }
                              unsigned __int8 v42 = v27;
                              if (v39 == v38)
                              {
                                (*(void (**)(void *, void *))(v38[0] + 32))(v38, v28);
                                char v43 = 1;
                                uint64_t v29 = v84;
                                if (v84 != &v83)
                                {
LABEL_114:
                                  if (v29) {
                                    (*(void (**)(uint64_t *, void *))(*v29 + 40))(v29, v28);
                                  }
LABEL_118:
                                  LOBYTE(v38[0]) = 0;
                                  char v40 = 0;
                                  sub_215B19CFC();
                                }
                              }
                              else
                              {
                                if (v39) {
                                  (*(void (**)(void))(*v39 + 40))();
                                }
                                char v43 = 1;
                                uint64_t v29 = v84;
                                if (v84 != &v83) {
                                  goto LABEL_114;
                                }
                              }
                              (*(void (**)(uint64_t *, void *))(v83 + 32))(&v83, v28);
                              goto LABEL_118;
                            }
                          }
                          else
                          {
                            if (v42) {
                              (*(void (**)(void))(*v42 + 40))();
                            }
                            uint64_t v33 = v58;
                            if (v58 != &v54) {
                              goto LABEL_132;
                            }
                          }
                          (*(void (**)(uint64_t *, void *))(v54 + 32))(&v54, v32);
                          goto LABEL_92;
                        }
                        long long v21 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v21 + 16))(v21);
                      }
                      else
                      {
                        char v58 = 0;
                      }
LABEL_122:
                      unsigned __int8 v42 = v21;
                      goto LABEL_123;
                    }
LABEL_91:
                    LOBYTE(v44[0]) = 0;
                    char v46 = 0;
                    goto LABEL_92;
                  }
                }
                (*(void (**)(uint64_t *, void *))(v54 + 32))(&v54, v19);
                uint64_t v10 = *v1;
                if (!*(unsigned char *)(*v1 + 136)) {
                  goto LABEL_91;
                }
                goto LABEL_86;
              }
              uint64_t v15 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v15 + 16))(v15);
            }
            else
            {
              char v58 = 0;
            }
LABEL_70:
            uint64_t v45 = v15;
            goto LABEL_71;
          }
LABEL_38:
          LOBYTE(v47[0]) = 0;
          char v48 = 0;
          goto LABEL_91;
        }
      }
      (*(void (**)(uint64_t *, void *))(v54 + 32))(&v54, v13);
      LOBYTE(v49[0]) = 0;
      char v51 = 0;
      uint64_t v10 = *v1;
      if (*(unsigned char *)(*v1 + 136)) {
        goto LABEL_56;
      }
      goto LABEL_38;
    }
    uint64_t v9 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v9 + 16))(v9);
  }
  else
  {
    uint64_t v9 = 0;
    char v58 = 0;
  }
LABEL_43:
  long long v50 = v9;
  goto LABEL_44;
}

void sub_21596B1EC(_Unwind_Exception *a1)
{
}

void sub_21596B204(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21596B708(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672C08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21596B728(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672C08;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21596B77C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_21596B7A4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_21596B834(void *a1)
{
  *a1 = &unk_26C672C58;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_21596B8E4(void *a1)
{
  *a1 = &unk_26C672C58;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21596B9A8(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_26C672C58;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_21596BA6C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21596BA80(uint64_t result, void *a2)
{
  *a2 = &unk_26C672C58;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      char v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_21596BB50(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_21596BBB4(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_21596BC68(uint64_t a1, char *a2, std::__shared_weak_count_vtbl **a3)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  v18[0] = *a2;
  long long v19 = *(_OWORD *)(a2 + 8);
  int v20 = *((_DWORD *)a2 + 6);
  LOBYTE(__p) = 0;
  char v23 = 0;
  if (a2[56])
  {
    if (a2[55] < 0)
    {
      sub_215738B0C(&__p, *((void **)a2 + 4), *((void *)a2 + 5));
    }
    else
    {
      long long __p = *((_OWORD *)a2 + 2);
      uint64_t v22 = *((void *)a2 + 6);
    }
    char v23 = 1;
  }
  LOBYTE(v24) = 0;
  char v36 = 0;
  if (a2[208])
  {
    sub_2157B6F84((char *)&v24, (long long *)a2 + 4);
    char v36 = 1;
  }
  long long v37 = *(_OWORD *)(a2 + 216);
  uint64_t v38 = *((void *)a2 + 29);
  uint64_t v6 = (std::__shared_weak_count *)operator new(0x40uLL);
  v6->__shared_owners_ = 0;
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C658088;
  uint64_t v7 = (uint64_t)a3[1];
  v6[1].__vftable = *a3;
  v6[1].__shared_owners_ = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v9 = a3[3];
  uint64_t v8 = (uint64_t)a3[4];
  v6[1].__shared_weak_owners_ = (uint64_t)&unk_26C678D20;
  v6[2].__vftable = v9;
  v6[2].__shared_owners_ = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  unsigned __int16 v13 = &v6[1].__vftable;
  int v14 = v6;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  char v17 = 0;
  uint64_t v10 = *(void *)(a1 + 32);
  if (!v10) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, char *, void **))(*(void *)v10 + 48))(v10, v18, &v13);
  size_t v11 = v16;
  if (v16)
  {
    if (atomic_fetch_add(v16 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v11 + 16))(v11);
      if (atomic_fetch_add(v11 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v11 + 24))(v11);
      }
    }
  }
  size_t v12 = v14;
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  if (!v36) {
    goto LABEL_27;
  }
  if (v35 < 0)
  {
    operator delete(v34);
    if ((v33 & 0x80000000) == 0)
    {
LABEL_23:
      if ((v31 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_33;
    }
  }
  else if ((v33 & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v32);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_34:
    operator delete(v28);
    if ((v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((v25 & 0x80000000) == 0) {
        goto LABEL_27;
      }
LABEL_36:
      operator delete(v24);
      if (!v23) {
        return;
      }
      goto LABEL_28;
    }
    goto LABEL_35;
  }
LABEL_33:
  operator delete(v30);
  if (v29 < 0) {
    goto LABEL_34;
  }
LABEL_25:
  if ((v27 & 0x80000000) == 0) {
    goto LABEL_26;
  }
LABEL_35:
  operator delete(v26);
  if (v25 < 0) {
    goto LABEL_36;
  }
LABEL_27:
  if (!v23) {
    return;
  }
LABEL_28:
  if (SHIBYTE(v22) < 0) {
    operator delete((void *)__p);
  }
}

void sub_21596BFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,char a61)
{
  if (a24)
  {
    if (a23 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21596C158(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger22ForwardReceivedMessageINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoE"
                     "RKNS1_10LogMessageEEEEEENS3_8optionalINS4_IFvS9_RKNS6_11ContextDataEEEEEERNSF_IT_EEEUlS9_SI_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger22ForwardReceivedMessageINSt3__18functionIFvRKNS_3kit3viz14Conn"
                                "ectionInfoERKNS1_10LogMessageEEEEEENS3_8optionalINS4_IFvS9_RKNS6_11ContextDataEEEEEERNSF"
                                "_IT_EEEUlS9_SI_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger22ForwardReceivedMessageINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoERKNS1_10LogMessageEEEEEENS3_8optionalINS4_IFvS9_RKNS6_11ContextDataEEEEEERNSF_IT_EEEUlS9_SI_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger22ForwardReceivedMessageINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoERKNS1_10LogMessageEEEEEENS3_8optionalINS4_IFvS9_RKNS6_11ContextDataEEEEEERNSF_IT_EEEUlS9_SI_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21596C1C8()
{
  return &unk_26C672CB8;
}

uint64_t sub_21596C1D4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 56) || (*(char *)(a1 + 55) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 32));
  return a1;
}

uint64_t sub_21596C228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 32) = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    uint64_t v9 = (void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 24);
    if (v10)
    {
      if (v10 == a2)
      {
        *(void *)(a1 + 24) = a1;
        (*(void (**)(void, uint64_t))(*(void *)*v9 + 24))(*v9, a1);
        goto LABEL_8;
      }
      *(void *)(a1 + 24) = v10;
    }
    else
    {
      uint64_t v9 = (void *)(a1 + 24);
    }
    *uint64_t v9 = 0;
LABEL_8:
    *(unsigned char *)(a1 + 32) = 1;
  }
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  if (!*(unsigned char *)(a3 + 32)) {
    goto LABEL_17;
  }
  uint64_t v11 = a3 + 24;
  uint64_t v12 = *(void *)(a3 + 24);
  if (v12)
  {
    if (v12 == a3)
    {
      *(void *)(a1 + 64) = a1 + 40;
      (*(void (**)(void))(**(void **)v11 + 24))();
      goto LABEL_16;
    }
    *(void *)(a1 + 64) = v12;
  }
  else
  {
    uint64_t v11 = a1 + 64;
  }
  *(void *)uint64_t v11 = 0;
LABEL_16:
  *(unsigned char *)(a1 + 72) = 1;
LABEL_17:
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!*(unsigned char *)(a4 + 32)) {
    goto LABEL_25;
  }
  uint64_t v13 = a4 + 24;
  uint64_t v14 = *(void *)(a4 + 24);
  if (v14)
  {
    if (v14 == a4)
    {
      *(void *)(a1 + 104) = a1 + 80;
      (*(void (**)(void))(**(void **)v13 + 24))();
      goto LABEL_24;
    }
    *(void *)(a1 + 104) = v14;
  }
  else
  {
    uint64_t v13 = a1 + 104;
  }
  *(void *)uint64_t v13 = 0;
LABEL_24:
  *(unsigned char *)(a1 + 112) = 1;
LABEL_25:
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  if (*(unsigned char *)(a5 + 32))
  {
    uint64_t v15 = a5 + 24;
    uint64_t v16 = *(void *)(a5 + 24);
    if (v16)
    {
      if (v16 == a5)
      {
        *(void *)(a1 + 144) = a1 + 120;
        (*(void (**)(void))(**(void **)v15 + 24))();
        goto LABEL_32;
      }
      *(void *)(a1 + 144) = v16;
    }
    else
    {
      uint64_t v15 = a1 + 144;
    }
    *(void *)uint64_t v15 = 0;
LABEL_32:
    *(unsigned char *)(a1 + 152) = 1;
  }
  return a1;
}

void *sub_21596C430(void *a1)
{
  *a1 = &unk_26C672CD8;
  uint64_t v2 = a1 + 1;
  unint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_21596C4E0(void *a1)
{
  *a1 = &unk_26C672CD8;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21596C5A4(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_26C672CD8;
  unint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_21596C668(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21596C67C(uint64_t result, void *a2)
{
  *a2 = &unk_26C672CD8;
  unint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      char v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_21596C74C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_21596C7B0(char *__p)
{
  uint64_t v2 = __p + 8;
  unint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_21596C864(uint64_t a1, uint64_t a2, int *a3)
{
  sub_2157D8F38(a3, (uint64_t)v3);
  _DWORD v4[6] = 0;
  sub_2158B25D8(v4, "in client connection ");
  operator new();
}

void sub_21596CBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,char a53,int a54,char a55)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a55)
  {
    if (a53)
    {
      if (a52 < 0) {
        operator delete(a47);
      }
      if (a45 < 0) {
        operator delete(a40);
      }
    }
    if (a39)
    {
      if (a38 < 0) {
        operator delete(a33);
      }
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21596CD08(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger18ForwardServerErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optional"
                     "INS4_IFvRKNS_3kit3viz14ConnectionInfoES8_EEEEERNSB_IT_EEEUlSG_S8_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger18ForwardServerErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS"
                                "3_8optionalINS4_IFvRKNS_3kit3viz14ConnectionInfoES8_EEEEERNSB_IT_EEEUlSG_S8_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger18ForwardServerErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalINS4_IFvRKNS_3kit3viz14ConnectionInfoES8_EEEEERNSB_IT_EEEUlSG_S8_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger18ForwardServerErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalINS4_IFvRKNS_3kit3viz14ConnectionInfoES8_EEEEERNSB_IT_EEEUlSG_S8_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21596CD78()
{
  return &unk_26C672D90;
}

uint64_t sub_21596CD84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 152))
  {
    uint64_t v2 = a1 + 120;
    uint64_t v3 = *(void *)(a1 + 144);
    if (v3 == a1 + 120)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 120);
      if (!*(unsigned char *)(a1 + 112)) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  if (!*(unsigned char *)(a1 + 112)) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 104);
  if (v4 == a1 + 80)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 80) + 32))(a1 + 80);
  }
  else if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
LABEL_12:
  if (!*(unsigned char *)(a1 + 72)) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5 != a1 + 40)
  {
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
    }
LABEL_16:
    if (*(unsigned char *)(a1 + 32)) {
      goto LABEL_17;
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 32))(a1 + 40);
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
LABEL_17:
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != a1)
  {
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 40))(v6);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void *sub_21596CF70(unsigned __int16 **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  if (!*(unsigned char *)a2) {
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v5 = *(void ***)(a2 + 8);
  sub_215731D94(*v5, (uint64_t)"{", 1);
  if (*((unsigned char *)v4 + 8))
  {
    sub_215731D94(*v5, (uint64_t)"{", 1);
    std::to_string(&v37, *v4);
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v6 = &v37;
    }
    else {
      uint64_t v6 = (std::string *)v37.__r_.__value_.__r.__words[0];
    }
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v37.__r_.__value_.__l.__size_;
    }
    sub_215731D94(*v5, (uint64_t)v6, size);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    sub_215731D94(*v5, (uint64_t)",", 1);
    int v8 = *((_DWORD *)v4 + 1);
    if (v8 == 1)
    {
      uint64_t v9 = "Memory";
      uint64_t v10 = 6;
    }
    else if (v8)
    {
      uint64_t v9 = "invalid network type";
      uint64_t v10 = 20;
    }
    else
    {
      uint64_t v9 = "Socket";
      uint64_t v10 = 6;
    }
    sub_215731D94(*v5, (uint64_t)v9, v10);
    uint64_t v11 = *v5;
    uint64_t v12 = "}";
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v11 = *v5;
    uint64_t v12 = "nullopt";
    uint64_t v13 = 7;
  }
  sub_215731D94(v11, (uint64_t)v12, v13);
  sub_215731D94(*v5, (uint64_t)",", 1);
  sub_215731D94(*v5, (uint64_t)"{", 1);
  int v14 = *((unsigned __int8 *)v4 + 12);
  if (v14 == 2)
  {
    uint64_t v15 = "WaitInitially";
    uint64_t v16 = 13;
  }
  else if (v14 == 1)
  {
    uint64_t v15 = "ProceedInitially";
    uint64_t v16 = 16;
  }
  else if (*((unsigned char *)v4 + 12))
  {
    uint64_t v15 = "invalid server sync type";
    uint64_t v16 = 24;
  }
  else
  {
    uint64_t v15 = "Disabled";
    uint64_t v16 = 8;
  }
  sub_215731D94(*v5, (uint64_t)v15, v16);
  sub_215731D94(*v5, (uint64_t)"}", 1);
  sub_215731D94(*v5, (uint64_t)",", 1);
  if (*((unsigned char *)v4 + 40))
  {
    char v17 = *v5;
    if ((uint64_t)(*((void *)v4 + 3) - *((void *)v4 + 2)) > 15)
    {
      sub_215731D94(v17, (uint64_t)"{", 1);
      uint64_t v20 = *((void *)v4 + 2) + 16;
      std::ostream::operator<<();
      uint64_t v21 = *((void *)v4 + 3);
      while (v20 != v21)
      {
        sub_215731D94(*v5, (uint64_t)",", 1);
        v20 += 16;
        std::ostream::operator<<();
      }
      char v17 = *v5;
      uint64_t v18 = "}";
      uint64_t v19 = 1;
    }
    else
    {
      uint64_t v18 = "{}";
      uint64_t v19 = 2;
    }
  }
  else
  {
    char v17 = *v5;
    uint64_t v18 = "nullopt";
    uint64_t v19 = 7;
  }
  sub_215731D94(v17, (uint64_t)v18, v19);
  sub_215731D94(*v5, (uint64_t)",", 1);
  int v22 = *((_DWORD *)v4 + 12);
  if (v22 == 1)
  {
    char v23 = "IgnoreUnknownPackageData";
    uint64_t v24 = 24;
  }
  else if (v22)
  {
    char v23 = "invalid error reporting value";
    uint64_t v24 = 29;
  }
  else
  {
    char v23 = "Default";
    uint64_t v24 = 7;
  }
  sub_215731D94(*v5, (uint64_t)v23, v24);
  sub_215731D94(*v5, (uint64_t)"}", 1);
  char v25 = a1[1];
  if (!*(unsigned char *)a2) {
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v26 = *(void ***)(a2 + 8);
  if (!*((unsigned char *)v25 + 32))
  {
    sub_215731D94(*v26, (uint64_t)"nullopt", 7);
    char v30 = a1[2];
    if (*(unsigned char *)a2) {
      goto LABEL_48;
    }
LABEL_56:
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
    *(unsigned char *)a2 = 0;
    char v31 = *(void ***)(a2 + 8);
    if (*((unsigned char *)v30 + 32)) {
      goto LABEL_49;
    }
LABEL_57:
    long long v34 = *v31;
    char v33 = "nullopt";
    uint64_t v35 = 7;
    return sub_215731D94(v34, (uint64_t)v33, v35);
  }
  uint64_t v27 = *((void *)v25 + 3);
  if (v27) {
    long long v28 = "f(){*}";
  }
  else {
    long long v28 = "f(){nullptr}";
  }
  if (v27) {
    uint64_t v29 = 6;
  }
  else {
    uint64_t v29 = 12;
  }
  sub_215731D94(*v26, (uint64_t)v28, v29);
  char v30 = a1[2];
  if (!*(unsigned char *)a2) {
    goto LABEL_56;
  }
LABEL_48:
  *(unsigned char *)a2 = 0;
  char v31 = *(void ***)(a2 + 8);
  if (!*((unsigned char *)v30 + 32)) {
    goto LABEL_57;
  }
LABEL_49:
  uint64_t v32 = *((void *)v30 + 3);
  if (v32) {
    char v33 = "f(){*}";
  }
  else {
    char v33 = "f(){nullptr}";
  }
  long long v34 = *v31;
  if (v32) {
    uint64_t v35 = 6;
  }
  else {
    uint64_t v35 = 12;
  }
  return sub_215731D94(v34, (uint64_t)v33, v35);
}

void sub_21596D390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21596D3AC(void *a1)
{
  *a1 = &unk_26C672DB0;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_21596D45C(void *a1)
{
  *a1 = &unk_26C672DB0;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21596D520(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_26C672DB0;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_21596D5E4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21596D5F8(uint64_t result, void *a2)
{
  *a2 = &unk_26C672DB0;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_21596D6C8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_21596D72C(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_21596D7E0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  char v5 = *a3;
  v8[0] = *(unsigned char *)a2;
  long long v9 = *(_OWORD *)(a2 + 8);
  int v10 = *(_DWORD *)(a2 + 24);
  LOBYTE(__p) = 0;
  char v13 = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    if (*(char *)(a2 + 55) < 0)
    {
      sub_215738B0C(&__p, *(void **)(a2 + 32), *(void *)(a2 + 40));
    }
    else
    {
      long long __p = *(_OWORD *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 48);
    }
    char v13 = 1;
  }
  LOBYTE(v14) = 0;
  char v26 = 0;
  if (*(unsigned char *)(a2 + 208))
  {
    sub_2157B6F84((char *)&v14, (long long *)(a2 + 64));
    char v26 = 1;
  }
  long long v27 = *(_OWORD *)(a2 + 216);
  uint64_t v28 = *(void *)(a2 + 232);
  char v7 = v5;
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, unsigned char *, char *))(*(void *)v6 + 48))(v6, v8, &v7);
  if (!v26) {
    goto LABEL_16;
  }
  if (v25 < 0)
  {
    operator delete(v24);
    if ((v23 & 0x80000000) == 0)
    {
LABEL_12:
      if ((v21 & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v23 & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v22);
  if ((v21 & 0x80000000) == 0)
  {
LABEL_13:
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_14;
    }
LABEL_23:
    operator delete(v18);
    if ((v17 & 0x80000000) == 0)
    {
LABEL_15:
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_16;
      }
LABEL_25:
      operator delete(v14);
      if (!v13) {
        return;
      }
      goto LABEL_17;
    }
    goto LABEL_24;
  }
LABEL_22:
  operator delete(v20);
  if (v19 < 0) {
    goto LABEL_23;
  }
LABEL_14:
  if ((v17 & 0x80000000) == 0) {
    goto LABEL_15;
  }
LABEL_24:
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_25;
  }
LABEL_16:
  if (!v13) {
    return;
  }
LABEL_17:
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)__p);
  }
}

void sub_21596D9D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57)
{
  if (a20)
  {
    if (a19 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21596DA98(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger30ForwardConnectionStatusChangedINSt3__18functionIFvRKNS_3kit3viz14Connect"
                     "ionInfoENS6_16ConnectionStatusEEEEEENS3_8optionalISC_EERNSD_IT_EEEUlS9_SA_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger30ForwardConnectionStatusChangedINSt3__18functionIFvRKNS_3kit3v"
                                "iz14ConnectionInfoENS6_16ConnectionStatusEEEEEENS3_8optionalISC_EERNSD_IT_EEEUlS9_SA_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger30ForwardConnectionStatusChangedINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoENS6_16ConnectionStatusEEEEEENS3_8optionalISC_EERNSD_IT_EEEUlS9_SA_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger30ForwardConnectionStatusChangedINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoENS6_16ConnectionStatusEEEEEENS3_8optionalISC_EERNSD_IT_EEEUlS9_SA_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21596DB08()
{
  return &unk_26C672E10;
}

void *sub_21596DB14(void *a1)
{
  *a1 = &unk_26C672E30;
  uint64_t v2 = a1 + 1;
  unint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_21596DBC4(void *a1)
{
  *a1 = &unk_26C672E30;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21596DC88(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  void *v2 = &unk_26C672E30;
  unint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_21596DD4C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21596DD60(uint64_t result, void *a2)
{
  *a2 = &unk_26C672E30;
  unint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      char v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_21596DE30(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_21596DE94(char *__p)
{
  uint64_t v2 = __p + 8;
  unint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_21596DF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  v7[0] = *(unsigned char *)a2;
  long long v8 = *(_OWORD *)(a2 + 8);
  int v9 = *(_DWORD *)(a2 + 24);
  LOBYTE(__p) = 0;
  char v12 = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    if (*(char *)(a2 + 55) < 0)
    {
      sub_215738B0C(&__p, *(void **)(a2 + 32), *(void *)(a2 + 40));
    }
    else
    {
      long long __p = *(_OWORD *)(a2 + 32);
      uint64_t v11 = *(void *)(a2 + 48);
    }
    char v12 = 1;
  }
  LOBYTE(v13) = 0;
  char v25 = 0;
  if (*(unsigned char *)(a2 + 208))
  {
    sub_2157B6F84((char *)&v13, (long long *)(a2 + 64));
    char v25 = 1;
  }
  long long v26 = *(_OWORD *)(a2 + 216);
  uint64_t v27 = *(void *)(a2 + 232);
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)v6 + 48))(v6, v7, a3);
  if (!v25) {
    goto LABEL_16;
  }
  if (v24 < 0)
  {
    operator delete(v23);
    if ((v22 & 0x80000000) == 0)
    {
LABEL_12:
      if ((v20 & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v22 & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v21);
  if ((v20 & 0x80000000) == 0)
  {
LABEL_13:
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_14;
    }
LABEL_23:
    operator delete(v17);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_15:
      if ((v14 & 0x80000000) == 0) {
        goto LABEL_16;
      }
LABEL_25:
      operator delete(v13);
      if (!v12) {
        return;
      }
      goto LABEL_17;
    }
    goto LABEL_24;
  }
LABEL_22:
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_23;
  }
LABEL_14:
  if ((v16 & 0x80000000) == 0) {
    goto LABEL_15;
  }
LABEL_24:
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_25;
  }
LABEL_16:
  if (!v12) {
    return;
  }
LABEL_17:
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)__p);
  }
}

void sub_21596E138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57)
{
  if (a20)
  {
    if (a19 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21596E1FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger27ForwardContextStatusChangedINSt3__18functionIFvRKNS_3kit3viz14Connection"
                     "InfoERKNS6_21UpdateEnabledContextsEEEEEENS3_8optionalISE_EERNSF_IT_EEEUlS9_SC_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger27ForwardContextStatusChangedINSt3__18functionIFvRKNS_3kit3viz1"
                                "4ConnectionInfoERKNS6_21UpdateEnabledContextsEEEEEENS3_8optionalISE_EERNSF_IT_EEEUlS9_SC_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger27ForwardContextStatusChangedINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoERKNS6_21UpdateEnabledContextsEEEEEENS3_8optionalISE_EERNSF_IT_EEEUlS9_SC_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger27ForwardContextStatusChangedINSt3__18functionIFvRKNS_3kit3viz14ConnectionInfoERKNS6_21UpdateEnabledContextsEEEEEENS3_8optionalISE_EERNSF_IT_EEEUlS9_SC_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21596E26C()
{
  return &unk_26C672E90;
}

unint64_t sub_21596E280()
{
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267890888))
  {
    mach_timebase_info(&info);
    LODWORD(v2) = info.numer;
    LODWORD(v3) = info.denom;
    *(double *)&qword_267890880 = (double)v2 / (double)v3;
    __cxa_guard_release(&qword_267890888);
  }
  return llround(*(double *)&qword_267890880 * (double)v0);
}

void sub_21596E330(_Unwind_Exception *a1)
{
}

unint64_t sub_21596E348(unint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267890888))
  {
    mach_timebase_info(&info);
    LODWORD(v3) = info.numer;
    LODWORD(v4) = info.denom;
    *(double *)&qword_267890880 = (double)v3 / (double)v4;
    __cxa_guard_release(&qword_267890888);
  }
  return llround(*(double *)&qword_267890880 * (double)a1);
}

void sub_21596E3D4(_Unwind_Exception *a1)
{
}

void sub_21596E3EC()
{
}

void sub_21596E520(_Unwind_Exception *exception_object)
{
  if (*((unsigned char *)v1 + 64) && *((char *)v1 + 63) < 0) {
    operator delete(*v3);
  }
  if (*((unsigned char *)v1 + 32) && *((char *)v1 + 31) < 0) {
    operator delete(*v2);
  }
  uint64_t v5 = *v1;
  uint64_t *v1 = 0;
  if (v5) {
    MEMORY[0x2166C4D20](v5, 0x1000C4072FAA15ELL);
  }
  _Unwind_Resume(exception_object);
}

void sub_21596E590(int a1, int a2, char *__s, char *a4)
{
  if (!__s)
  {
    LOBYTE(__dst[0]) = 0;
    char v22 = 0;
    if (a4) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  size_t v6 = strlen(__s);
  if (v6 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v10 = v6 | 7;
    }
    uint64_t v11 = v10 + 1;
    long long v8 = operator new(v10 + 1);
    __dst[1] = v7;
    unint64_t v21 = v11 | 0x8000000000000000;
    __dst[0] = v8;
  }
  else
  {
    HIBYTE(v21) = v6;
    long long v8 = __dst;
    if (!v6)
    {
LABEL_12:
      *((unsigned char *)v8 + v7) = 0;
      char v22 = 1;
      if (a4)
      {
LABEL_13:
        size_t v12 = strlen(a4);
        if (v12 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        size_t v13 = v12;
        if (v12 >= 0x17)
        {
          uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v12 | 7) != 0x17) {
            uint64_t v15 = v12 | 7;
          }
          uint64_t v16 = v15 + 1;
          char v14 = operator new(v15 + 1);
          v17[1] = v13;
          unint64_t v18 = v16 | 0x8000000000000000;
          v17[0] = v14;
        }
        else
        {
          HIBYTE(v18) = v12;
          char v14 = v17;
          if (!v12) {
            goto LABEL_21;
          }
        }
        memcpy(v14, a4, v13);
LABEL_21:
        *((unsigned char *)v14 + v13) = 0;
        char v9 = 1;
LABEL_22:
        char v19 = v9;
        operator new();
      }
LABEL_7:
      char v9 = 0;
      LOBYTE(v17[0]) = 0;
      goto LABEL_22;
    }
  }
  memcpy(v8, __s, v7);
  goto LABEL_12;
}

void sub_21596E7E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  MEMORY[0x2166C4D20](v24, 0x1000C4072FAA15ELL);
  if (v23 && a15 < 0) {
    operator delete(__p);
  }
  if (a23)
  {
    if (a22 < 0) {
      operator delete(a17);
    }
  }
  _Unwind_Resume(a1);
}

void sub_21596E844(uint64_t a1, long long *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384))
  {
    void v19[3] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(v19);
      LODWORD(v16) = v19[0].denom;
      LODWORD(v15) = v19[0].numer;
      *(double *)&qword_267890880 = (double)v15 / (double)v16;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info info = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    uint64_t v21 = 2;
    LOBYTE(v22) = 0;
    char v24 = 0;
    LOBYTE(v25) = 0;
    char v27 = 0;
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v34 = 0;
    v35[0] = 0;
    v35[24] = 0;
    sub_21596F398();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    v19[0] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v17) = info.numer;
      LODWORD(v18) = info.denom;
      *(double *)&qword_267890880 = (double)v17 / (double)v18;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      LOBYTE(v21) = v4;
      LOBYTE(v22) = 0;
      char v24 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v22, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v22 = *a2;
          uint64_t v23 = *((void *)a2 + 2);
        }
        char v24 = 1;
        LOBYTE(v25) = 0;
        char v27 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_23:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v25, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v25 = a2[6];
            uint64_t v26 = *((void *)a2 + 14);
          }
          char v27 = 1;
          LOBYTE(v28) = 0;
          char v29 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_15:
            LOBYTE(v30) = 0;
            char v34 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v30, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v30 = a2[2];
                uint64_t v31 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v32 = _X0;
              uint64_t v33 = 0;
              char v34 = 1;
            }
            sub_215746DAC((uint64_t)v35, (uint64_t)(a2 + 11));
            sub_21596F398();
          }
LABEL_14:
          long long v28 = a2[8];
          char v29 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v28) = 0;
        char v29 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v25) = 0;
      char v27 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info info = v3;
  LOBYTE(v21) = v4;
  LOBYTE(v22) = 0;
  char v24 = 0;
  goto LABEL_12;
}

void sub_21596EC8C(_Unwind_Exception *a1)
{
}

void sub_21596ECA4(_Unwind_Exception *a1)
{
}

void sub_21596ECBC(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
    {
      operator delete((void *)STACK[0x240]);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_21596ED9C(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unint64_t v2 = *(const void **)(a1 + 424);
  mach_timebase_info v3 = *(std::__shared_weak_count **)(a1 + 432);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v2)
  {
    BOOL v4 = __dynamic_cast(v2, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C672F78, 0) != 0;
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    BOOL v4 = 0;
    if (!v3) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4) {
      goto LABEL_9;
    }
    goto LABEL_14;
  }
LABEL_8:
  if (v4)
  {
LABEL_9:
    uint64_t v5 = *(void *)(a1 + 424);
    uint64_t v6 = *(void *)(a1 + 432);
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v17 = v5;
    uint64_t v18 = v6;
    if (v5) {
      sub_21596E3EC();
    }
LABEL_15:
    uint64_t v7 = sub_215AB5250(0xBu);
    long long v8 = v7;
    if (v7[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v7, *((void *)v7 + 1));
    }
    else
    {
      long long v9 = *(_OWORD *)v7;
      uint64_t v20 = *((void *)v7 + 2);
      long long __dst = v9;
    }
    int v21 = *((_DWORD *)v8 + 6);
    sub_2157C3E6C(&v16, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v13, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)size_t v13 = *(_OWORD *)a1;
      uint64_t v14 = *(void *)(a1 + 16);
    }
    int v15 = *(_DWORD *)(a1 + 24);
    uint64_t v10 = operator new(0x28uLL);
    long long v11 = xmmword_215E9BA30;
    strcpy((char *)v10, "cannot return data as VZTransform3");
    char v12 = 1;
    sub_215964570((long long **)&v16, (uint64_t)v13, (uint64_t)&v10);
  }
LABEL_14:
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  goto LABEL_15;
}

void sub_21596F278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  sub_2157C3C78(&a23);
  if (*(char *)(v23 - 105) < 0)
  {
    operator delete(*(void **)(v23 - 128));
    sub_215733368(v23 - 144);
    _Unwind_Resume(a1);
  }
  sub_215733368(v23 - 144);
  _Unwind_Resume(a1);
}

uint64_t *sub_21596F318(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 64) && *((char *)a1 + 63) < 0)
  {
    operator delete((void *)a1[5]);
    if (!*((unsigned char *)a1 + 32)) {
      goto LABEL_7;
    }
  }
  else if (!*((unsigned char *)a1 + 32))
  {
    goto LABEL_7;
  }
  if (*((char *)a1 + 31) < 0) {
    operator delete((void *)a1[1]);
  }
LABEL_7:
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }
  return a1;
}

void sub_21596F398()
{
}

void sub_21596F498(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_21596F4CC(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 72) && *(char *)(v1 + 71) < 0) {
    operator delete(*(void **)(v1 + 48));
  }
  if (*(unsigned char *)(v1 + 40) && *(char *)(v1 + 39) < 0) {
    operator delete(*(void **)(v1 + 16));
  }
  uint64_t v4 = *v2;
  uint64_t *v2 = 0;
  if (v4) {
    MEMORY[0x2166C4D20](v4, 0x1000C4072FAA15ELL);
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C404EA979F8);
  _Unwind_Resume(a1);
}

uint64_t sub_21596F548(uint64_t a1)
{
  *(void *)a1 = &unk_26C672FA0;
  sub_2157C6F18(a1 + 80);
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_7:
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }
  return a1;
}

void sub_21596F5E8(uint64_t a1)
{
  *(void *)a1 = &unk_26C672FA0;
  sub_2157C6F18(a1 + 80);
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_7:
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21596F6A8(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_21596F6B0(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C672F60, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      return sub_215B27430((uint64_t)a1 + 8, result + 8);
    }
  }
  return result;
}

void sub_21596F750()
{
}

void sub_21596F7EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21596F808()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888280, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888280))
  {
    uint64_t v0 = sub_2159706C4();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267888268, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267888278 = *(void *)(v5 - 8);
      xmmword_267888268 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888268, &dword_21572C000);
    __cxa_guard_release(&qword_267888280);
  }
  sub_215970CB8(&xmmword_267888268, (uint64_t)"{");
}

void sub_21596F924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_21596F944(_Unwind_Exception *a1)
{
}

void sub_21596F95C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 11;
}

void sub_21596F988(void *lpsrc@<X0>, void *a2@<X8>)
{
}

uint64_t sub_21596F9D8(uint64_t a1)
{
  *(void *)a1 = &unk_26C672FA0;
  sub_2157C6F18(a1 + 80);
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_7:
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }
  return a1;
}

void sub_21596FA78(uint64_t a1)
{
  *(void *)a1 = &unk_26C672FA0;
  sub_2157C6F18(a1 + 80);
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_7:
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21596FB38()
{
  uint64_t v0 = sub_215970118();
  sub_21596FC94(v0, (uint64_t)"{");
}

void sub_21596FB94()
{
  int v0 = 0;
  sub_21596FEC4();
}

void sub_21596FC30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C672EB0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_21596FC68(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_21596FC94(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  _DWORD v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_21596FEC4();
}

void sub_21596FE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21596FEC4()
{
}

void sub_2159700B0(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2159700D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_215970118()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888140, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888140))
  {
    return &xmmword_267888128;
  }
  uint64_t v1 = sub_215970200();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267888128, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267888138 = v1->__r_.__value_.__r.__words[2];
    xmmword_267888128 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888128, &dword_21572C000);
  __cxa_guard_release(&qword_267888140);
  return &xmmword_267888128;
}

void sub_2159701E8(_Unwind_Exception *a1)
{
}

std::string *sub_215970200()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888160, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888160))
  {
    return &stru_267888148;
  }
  sub_2159704B4((uint64_t)__p);
  sub_2159702FC(__p, &stru_267888148);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888148, &dword_21572C000);
  __cxa_guard_release(&qword_267888160);
  return &stru_267888148;
}

void sub_2159702BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888160);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888160);
  _Unwind_Resume(a1);
}

void sub_2159702FC(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2159706C4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    long long v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    uint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_215970464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2159704B4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678881E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678881E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::Transform3>]", qword_2678881C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678881C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678881E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888200, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888200))
  {
    size_t v3 = sub_215747D98(qword_2678881C8, "<", 0);
    sub_215747C90(qword_2678881C8, 0, v3, qword_2678881E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678881E8, &dword_21572C000);
    __cxa_guard_release(&qword_267888200);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888220, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888220))
  {
    sub_215E19DF4((uint64_t)qword_2678881E8, (uint64_t)&xmmword_267888208);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888208, &dword_21572C000);
    __cxa_guard_release(&qword_267888220);
  }
  if (byte_26788821F < 0)
  {
    long long v2 = xmmword_267888208;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267888208;
    *(void *)(a1 + 16) = unk_267888218;
  }
}

void sub_21597067C(_Unwind_Exception *a1)
{
}

void sub_215970694(_Unwind_Exception *a1)
{
}

void sub_2159706AC(_Unwind_Exception *a1)
{
}

long long *sub_2159706C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888180, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888180))
  {
    return &xmmword_267888168;
  }
  uint64_t v1 = (char *)sub_2159707AC();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888168, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888178 = *((void *)v1 + 2);
    xmmword_267888168 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888168, &dword_21572C000);
  __cxa_guard_release(&qword_267888180);
  return &xmmword_267888168;
}

void sub_215970794(_Unwind_Exception *a1)
{
}

void *sub_2159707AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678881A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678881A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::Transform3]", qword_267888188);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888188, &dword_21572C000);
    __cxa_guard_release(&qword_2678881A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678881C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678881C0))
  {
    return &unk_2678881A8;
  }
  sub_215E19DF4((uint64_t)qword_267888188, (uint64_t)&unk_2678881A8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678881A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678881C0);
  return &unk_2678881A8;
}

void sub_2159708B0(_Unwind_Exception *a1)
{
}

void sub_2159708C8(_Unwind_Exception *a1)
{
}

std::string *sub_2159708E0()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888240, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888240))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2159706C4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_215970BB4();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_267888228, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888228, &dword_21572C000);
        __cxa_guard_release(&qword_267888240);
        return &stru_267888228;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_267888228;
}

void sub_215970AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_267888240);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_267888240);
  _Unwind_Resume(a1);
}

std::string *sub_215970BB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888260, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888260))
  {
    return &stru_267888248;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 11U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267888248);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888248, &dword_21572C000);
  __cxa_guard_release(&qword_267888260);
  return &stru_267888248;
}

void sub_215970C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888260);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888260);
  _Unwind_Resume(a1);
}

void sub_215970CB8(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  _DWORD v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_21596FEC4();
}

void sub_215970DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215970E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215970E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215970E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215970E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215970E64(uint64_t a1)
{
  char v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

uint64_t sub_215970E94()
{
  int v0 = operator new(0x58uLL);
  v0[1] = 0;
  v0[2] = 0;
  *int v0 = &unk_26C672FF0;
  uint64_t result = MEMORY[0x2166C46A0](v0 + 3);
  qword_26788E5C0 = result;
  *(void *)algn_26788E5C8 = v0;
  return result;
}

void sub_215970EEC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_215970F04(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_215970F80(uint64_t a1)
{
  if (*(void *)a1)
  {
    char v2 = ***(std::recursive_mutex ****)a1;
    std::recursive_mutex::lock(v2);
    size_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    std::recursive_mutex::unlock(v2);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

uint64_t sub_215971078(uint64_t *a1)
{
  sub_2159729CC(*(void *)(*a1 + 88), (uint64_t **)(*a1 + 152));
  uint64_t v2 = *(void *)(*a1 + 80);
  uint64_t v11 = *(void *)(*a1 + 96);
  uint64_t v12 = v2;
  sub_21597285C(&v12, &v11);
  uint64_t v3 = *(void *)(*a1 + 80);
  uint64_t v9 = *(void *)(*a1 + 104);
  uint64_t v10 = v3;
  sub_215972914(&v10, &v9);
  sub_2159729CC(*(void *)(*a1 + 88), (uint64_t **)(*a1 + 152));
  sub_215736418(*(void *)(*a1 + 88), *(_DWORD *)(*a1 + 136));
  sub_215736418(*(void *)(*a1 + 96), *(_DWORD *)(*a1 + 140));
  uint64_t v4 = *a1;
  if (*(unsigned char *)(*a1 + 148))
  {
    uint64_t v5 = *(void *)(v4 + 104);
    int v6 = *(_DWORD *)(v4 + 144);
    return sub_215736418(v5, v6);
  }
  else
  {
    int64x2_t v8 = *(void **)(v4 + 104);
    return sub_215736960(v8);
  }
}

void sub_215971160(uint64_t *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E5A8))
  {
    sub_215970E94();
    __cxa_atexit((void (*)(void *))sub_215970F04, &xmmword_26788E5C0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5A8);
  }
  long long v1 = xmmword_26788E5C0;
  if (*((void *)&xmmword_26788E5C0 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&xmmword_26788E5C0 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  std::recursive_mutex::lock((std::recursive_mutex *)v1);
  if (*((void *)&v1 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v1 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(void))(**((void **)&v1 + 1) + 16))(*((void *)&v1 + 1));
    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v1 + 1));
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E5A0))
  {
    __cxa_atexit((void (*)(void *))sub_215970E64, &qword_26788E5B0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5A0);
  }
  if (!qword_26788E5B8
    || (uint64_t v5 = std::__shared_weak_count::lock((std::__shared_weak_count *)qword_26788E5B8)) == 0
    || (uint64_t v4 = qword_26788E5B0) == 0)
  {
    operator new();
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E5A0))
  {
    __cxa_atexit((void (*)(void *))sub_215970E64, &qword_26788E5B0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5A0);
  }
  atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  uint64_t v2 = (std::__shared_weak_count *)qword_26788E5B8;
  qword_26788E5B0 = v4;
  qword_26788E5B8 = (uint64_t)v5;
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  *a1 = v4;
  a1[1] = (uint64_t)v5;
  atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  std::recursive_mutex::unlock((std::recursive_mutex *)v1);
}

void sub_21597211C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::recursive_mutex *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  __cxa_guard_abort(&qword_26788E5A8);
  sub_2159722E0(&a32);
  sub_2159722E0((void *)(v33 - 176));
  MEMORY[0x2166C4D20](v32, 0x1060C406F83F42DLL);
  sub_2159722E0(&a24);
  sub_2159722E0(&a28);
  MEMORY[0x2166C4D20](a12, 0x20C4093837F09);
  sub_215733368((uint64_t)&a15);
  std::recursive_mutex::unlock(a10);
  _Unwind_Resume(a1);
}

void *sub_2159722E0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_215972370(std::recursive_mutex ***a1, int a2)
{
  uint64_t v4 = **a1;
  std::recursive_mutex::lock(v4);
  sub_215735FA0((uint64_t)(*a1)[11], &__p);
  uint64_t v5 = *a1;
  uint64_t v7 = (*a1)[22];
  int v6 = (*a1)[23];
  int64x2_t v8 = __p;
  if ((char *)v6 - (char *)v7 == v20 - (unsigned char *)__p)
  {
    if (v7 == v6)
    {
LABEL_5:
      if (*((_DWORD *)v5 + 28) != 2) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    while (v7->__m_.__sig == *v8)
    {
      uint64_t v7 = (std::recursive_mutex *)((char *)v7 + 16);
      v8 += 2;
      if (v7 == v6) {
        goto LABEL_5;
      }
    }
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Log/src/APILogging.cpp", 426, (uint64_t)"priv().initialized_root_appenders_ == current_root_appenders", 60, (uint64_t)"root appenders have been illegally modified between Initialize() and Enable() of APILogging", 91, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v5 = *a1;
  if (*((_DWORD *)*a1 + 28) == 2)
  {
LABEL_9:
    uint64_t v9 = *v5;
    std::recursive_mutex::lock(*v5);
    uint64_t v10 = (uint64_t)(*a1)[10];
    int v21 = (*a1)[12];
    uint64_t v22 = v10;
    sub_21597285C(&v22, (uint64_t *)&v21);
    uint64_t v11 = *a1;
    if (*((unsigned char *)*a1 + 124)) {
      *((unsigned char *)v11 + 124) = 0;
    }
    *((_DWORD *)v11 + 28) = 1;
    std::recursive_mutex::unlock(v9);
    uint64_t v5 = *a1;
  }
LABEL_12:
  uint64_t v18 = v5[12];
  uint64_t v12 = v5[5];
  if (!v12) {
    sub_21573D7DC();
  }
  (*(void (**)(std::recursive_mutex *, std::recursive_mutex **))(v12->__m_.__sig + 48))(v12, &v18);
  sub_215736418((uint64_t)(*a1)[12], a2);
  uint64_t v13 = *a1;
  *((_DWORD *)v13 + 30) = a2;
  *((unsigned char *)v13 + 124) = 1;
  *((_DWORD *)*a1 + 28) = 2;
  long long v14 = (char *)__p;
  if (__p)
  {
    std::string::size_type v15 = v20;
    uint64_t v16 = __p;
    if (v20 != __p)
    {
      do
      {
        uint64_t v17 = (std::__shared_weak_count *)*((void *)v15 - 1);
        if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
        v15 -= 16;
      }
      while (v15 != v14);
      uint64_t v16 = __p;
    }
    uint64_t v20 = v14;
    operator delete(v16);
  }
  std::recursive_mutex::unlock(v4);
}

void sub_2159725B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  std::recursive_mutex::unlock(v11);
  sub_2157361F0(&a10);
  std::recursive_mutex::unlock(v10);
  _Unwind_Resume(a1);
}

void sub_2159725D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157361F0((void **)va);
  std::recursive_mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void sub_215972610(std::recursive_mutex ***a1)
{
  uint64_t v2 = **a1;
  std::recursive_mutex::lock(v2);
  sub_215735FA0((uint64_t)(*a1)[11], &__p);
  uint64_t v3 = *a1;
  uint64_t v5 = (*a1)[22];
  uint64_t v4 = (*a1)[23];
  int v6 = __p;
  if ((char *)v4 - (char *)v5 == v15 - (unsigned char *)__p)
  {
    if (v5 == v4)
    {
LABEL_5:
      if (*((_DWORD *)v3 + 29) != 2) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    while (v5->__m_.__sig == *v6)
    {
      uint64_t v5 = (std::recursive_mutex *)((char *)v5 + 16);
      v6 += 2;
      if (v5 == v4) {
        goto LABEL_5;
      }
    }
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Log/src/APILogging.cpp", 444, (uint64_t)"priv().initialized_root_appenders_ == current_root_appenders", 60, (uint64_t)"root appenders have been illegally modified between Initialize() and EnableInternal() of APILogging", 99, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v3 = *a1;
  if (*((_DWORD *)*a1 + 29) == 2)
  {
LABEL_9:
    uint64_t v7 = *v3;
    std::recursive_mutex::lock(*v3);
    uint64_t v8 = (uint64_t)(*a1)[10];
    uint64_t v16 = (*a1)[13];
    uint64_t v17 = v8;
    sub_215972914(&v17, (uint64_t *)&v16);
    uint64_t v9 = *a1;
    if (*((unsigned char *)*a1 + 132)) {
      *((unsigned char *)v9 + 132) = 0;
    }
    *((_DWORD *)v9 + 29) = 1;
    std::recursive_mutex::unlock(v7);
    uint64_t v3 = *a1;
  }
LABEL_12:
  *((_DWORD *)v3 + 32) = **(_DWORD **)&v3[13]->__m_.__opaque[48];
  *((unsigned char *)v3 + 132) = 1;
  *((_DWORD *)*a1 + 29) = 2;
  uint64_t v10 = (char *)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    uint64_t v12 = __p;
    if (v15 != __p)
    {
      do
      {
        uint64_t v13 = (std::__shared_weak_count *)*((void *)v11 - 1);
        if (v13 && !atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
        v11 -= 16;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    std::string::size_type v15 = v10;
    operator delete(v12);
  }
  std::recursive_mutex::unlock(v2);
}

void sub_215972808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  std::recursive_mutex::unlock(v11);
  sub_2157361F0(&a10);
  std::recursive_mutex::unlock(v10);
  _Unwind_Resume(a1);
}

void sub_21597282C(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215972840(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157361F0((void **)va);
  std::recursive_mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void sub_21597285C(uint64_t *a1, uint64_t *a2)
{
  sub_215735EF4(*a2);
  sub_215736418(*a2, 6);
  sub_215736D64(*a2, (uint64_t)v5);
  uint64_t v4 = *a1;
  sub_215973250(&v4, (uint64_t)v5);
  sub_2159731B8(&v9);
  if ((v8 & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      return;
    }
LABEL_5:
    operator delete(v5[0]);
    return;
  }
  operator delete(__p);
  if (v6 < 0) {
    goto LABEL_5;
  }
}

void sub_215972900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215732E60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215972914(uint64_t *a1, uint64_t *a2)
{
  sub_215735EF4(*a2);
  sub_215736418(*a2, 6);
  sub_215736D64(*a2, (uint64_t)v5);
  uint64_t v4 = *a1;
  sub_215973250(&v4, (uint64_t)v5);
  sub_2159731B8(&v9);
  if ((v8 & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      return;
    }
LABEL_5:
    operator delete(v5[0]);
    return;
  }
  operator delete(__p);
  if (v6 < 0) {
    goto LABEL_5;
  }
}

void sub_2159729B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215732E60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2159729CC(uint64_t a1, uint64_t **a2)
{
  sub_215735EF4(a1);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      char v6 = (std::__shared_weak_count *)v4[1];
      uint64_t v9 = *v4;
      uint64_t v10 = v6;
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      sub_21573573C(a1, &v9);
      uint64_t v7 = v10;
      if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
      v4 += 2;
    }
    while (v4 != v5);
  }
  return sub_215736418(a1, 6);
}

void sub_215972AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215972AB8(std::recursive_mutex ***a1, uint64_t a2, uint64_t a3)
{
  char v6 = **a1;
  std::recursive_mutex::lock(v6);
  uint64_t v7 = *a1;
  if (*((_DWORD *)*a1 + 28) != 2) {
    goto LABEL_23;
  }
  char v8 = v7[10];
  uint64_t v9 = v7[12];
  uint64_t v10 = (const void **)&v9->__m_.__opaque[8];
  unint64_t v11 = v9->__m_.__opaque[31];
  unint64_t v12 = *(void *)&v9->__m_.__opaque[16];
  if ((v11 & 0x80u) == 0) {
    uint64_t v13 = v9->__m_.__opaque[31];
  }
  else {
    uint64_t v13 = *(void *)&v9->__m_.__opaque[16];
  }
  char v14 = *(unsigned char *)(a2 + 23);
  if (v14 >= 0) {
    unint64_t v15 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unint64_t v15 = *(void *)(a2 + 8);
  }
  if (v14 >= 0) {
    uint64_t v16 = (unsigned __int8 *)a2;
  }
  else {
    uint64_t v16 = *(unsigned __int8 **)a2;
  }
  if (v13 == v15)
  {
    if ((v11 & 0x80) != 0)
    {
      uint64_t v20 = (char *)*v10;
      uint64_t v32 = a3;
      uint64_t v22 = v8;
      int v23 = memcmp(*v10, v16, *(void *)&v9->__m_.__opaque[16]);
      char v8 = v22;
      a3 = v32;
      int64_t v21 = v12;
      if (!v23) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (!v9->__m_.__opaque[31]) {
      goto LABEL_30;
    }
    uint64_t v17 = v16;
    uint64_t v18 = &v9->__m_.__opaque[8];
    uint64_t v19 = v9->__m_.__opaque[31];
    while (*v18 == *v17)
    {
      ++v18;
      ++v17;
      if (!--v19) {
        goto LABEL_30;
      }
    }
  }
  uint64_t v20 = &v9->__m_.__opaque[8];
  int64_t v21 = v9->__m_.__opaque[31];
  if ((v11 & 0x80) != 0)
  {
    uint64_t v20 = (char *)*v10;
    int64_t v21 = *(void *)&v9->__m_.__opaque[16];
  }
LABEL_21:
  if (v21 > (uint64_t)v15) {
    goto LABEL_23;
  }
  uint64_t v33 = v8;
  if (memcmp(v16, v20, v21)) {
    goto LABEL_23;
  }
  if ((v11 & 0x80) != 0)
  {
    char v8 = v33;
    if (v15 <= v12) {
      goto LABEL_23;
    }
  }
  else
  {
    unint64_t v12 = v11;
    char v8 = v33;
    if (v15 <= v11) {
      goto LABEL_23;
    }
  }
  if (v16[v12] != 46) {
    goto LABEL_23;
  }
LABEL_30:
  char v34 = v8;
  sub_215733748((void **)&v34, a2, &v35);
  uint64_t v26 = v35;
  if ((a3 & 0xFF00000000) != 0)
  {
    sub_215736418((uint64_t)v35, a3);
LABEL_48:
    uint64_t v24 = 1;
    goto LABEL_24;
  }
  uint64_t v27 = v9->__m_.__opaque[31];
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v9->__m_.__opaque[31];
  }
  else {
    uint64_t v28 = *(void *)&v9->__m_.__opaque[16];
  }
  uint64_t v29 = *(unsigned __int8 *)(a2 + 23);
  int v30 = (char)v29;
  if ((v29 & 0x80u) != 0) {
    uint64_t v29 = *(void *)(a2 + 8);
  }
  if (v28 != v29) {
    goto LABEL_47;
  }
  if (v30 >= 0) {
    uint64_t v31 = (unsigned __int8 *)a2;
  }
  else {
    uint64_t v31 = *(unsigned __int8 **)a2;
  }
  if ((v27 & 0x80) != 0)
  {
    if (!memcmp(*v10, v31, *(void *)&v9->__m_.__opaque[16])) {
      goto LABEL_23;
    }
LABEL_47:
    sub_215736960(v26);
    goto LABEL_48;
  }
  if (v9->__m_.__opaque[31])
  {
    while (*(unsigned __int8 *)v10 == *v31)
    {
      uint64_t v24 = 0;
      uint64_t v10 = (const void **)((char *)v10 + 1);
      ++v31;
      if (!--v27) {
        goto LABEL_24;
      }
    }
    goto LABEL_47;
  }
LABEL_23:
  uint64_t v24 = 0;
LABEL_24:
  std::recursive_mutex::unlock(v6);
  return v24;
}

void sub_215972CF8(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215972D0C(std::recursive_mutex ***a1, uint64_t *a2)
{
  uint64_t v4 = **a1;
  std::recursive_mutex::lock(v4);
  if (*((_DWORD *)*a1 + 28) == 2)
  {
    uint64_t v5 = (uint64_t)(*a1)[12];
    char v6 = (std::__shared_weak_count *)a2[1];
    uint64_t v10 = *a2;
    unint64_t v11 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v7 = sub_21573573C(v5, &v10);
    char v8 = v11;
    if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  std::recursive_mutex::unlock(v4);
  return v7;
}

void sub_215972DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_215733368((uint64_t)&a9);
  std::recursive_mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void sub_215972E00(std::recursive_mutex ***a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = **a1;
  std::recursive_mutex::lock(v4);
  if (*((_DWORD *)*a1 + 28) == 2)
  {
    sub_215735FA0((uint64_t)(*a1)[12], &__p);
    sub_2159732D8(a2, (char *)__p, v10);
    uint64_t v5 = (char *)__p;
    if (__p)
    {
      char v6 = v10;
      uint64_t v7 = __p;
      if (v10 != __p)
      {
        do
        {
          char v8 = (std::__shared_weak_count *)*((void *)v6 - 1);
          if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
          v6 -= 16;
        }
        while (v6 != v5);
        uint64_t v7 = __p;
      }
      uint64_t v10 = v5;
      operator delete(v7);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  std::recursive_mutex::unlock(v4);
}

void sub_215972F08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157361F0((void **)va);
  std::recursive_mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void sub_215972F24(_Unwind_Exception *a1)
{
  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215972F38(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 216));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 208);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = *(void *)(a1 + 176);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 184);
    uint64_t v5 = *(void **)(a1 + 176);
    if (v4 != v3)
    {
      do
      {
        char v6 = *(std::__shared_weak_count **)(v4 - 8);
        if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *(void **)(a1 + 176);
    }
    *(void *)(a1 + 184) = v3;
    operator delete(v5);
  }
  uint64_t v7 = *(void *)(a1 + 152);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 160);
    uint64_t v9 = *(void **)(a1 + 152);
    if (v8 != v7)
    {
      do
      {
        uint64_t v10 = *(std::__shared_weak_count **)(v8 - 8);
        if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
        v8 -= 16;
      }
      while (v8 != v7);
      uint64_t v9 = *(void **)(a1 + 152);
    }
    *(void *)(a1 + 160) = v7;
    operator delete(v9);
  }
  uint64_t v11 = *(void *)(a1 + 72);
  if (v11 == a1 + 48)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 48) + 32))(a1 + 48);
    uint64_t v12 = a1 + 16;
    uint64_t v13 = *(void *)(a1 + 40);
    if (v13 != a1 + 16) {
      goto LABEL_25;
    }
  }
  else
  {
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 40))(v11);
    }
    uint64_t v12 = a1 + 16;
    uint64_t v13 = *(void *)(a1 + 40);
    if (v13 != a1 + 16)
    {
LABEL_25:
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 40))(v13);
      }
      char v14 = *(std::__shared_weak_count **)(a1 + 8);
      if (!v14) {
        return a1;
      }
      goto LABEL_31;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v12 + 32))(v12);
  char v14 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v14) {
    return a1;
  }
LABEL_31:
  if (atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  return a1;
}

void **sub_2159731B8(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    uint64_t v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      sub_2159731B8(v3 - 3);
      if (*((char *)v3 - 33) < 0)
      {
        operator delete(*(v3 - 7));
        if (*((char *)v3 - 57) < 0) {
LABEL_9:
        }
          operator delete(*(v3 - 10));
      }
      else if (*((char *)v3 - 57) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 10;
      if (v3 == v2)
      {
        uint64_t v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

void sub_215973250(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  for (uint64_t i = *(void *)(a2 + 64); v2 != i; v2 += 80)
  {
    char v6 = (void *)*a1;
    sub_215973250(&v6, v2);
    uint64_t v7 = (void *)*a1;
    sub_2157371C4(&v7, v2, &v8);
    uint64_t v5 = v8;
    sub_215736960(v8);
    sub_215735EF4((uint64_t)v5);
  }
}

void *sub_2159732D8(void *a1, char *a2, char *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v4 = a3 - a2;
  if (a3 != a2)
  {
    if (v4 < 0) {
      sub_215738AC0();
    }
    char v6 = a2;
    uint64_t v7 = operator new(a3 - a2);
    *a1 = v7;
    a1[1] = v7;
    for (a1[2] = &v7[2 * (v4 >> 4)]; v6 != a3; v6 += 16)
    {
      uint64_t v8 = *((void *)v6 + 1);
      void *v7 = *(void *)v6;
      v7[1] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 2;
    }
    a1[1] = v7;
  }
  return a1;
}

void sub_215973388(_Unwind_Exception *exception_object)
{
  uint64_t v3 = (char *)*v1;
  if (*v1)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        char v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6)
        {
          if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_215973414(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672FF0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215973434(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C672FF0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215973488(uint64_t a1)
{
}

void sub_215973494(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673040;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2159734B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673040;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215973508(uint64_t a1)
{
  return sub_21597DA00((void *)(a1 + 24));
}

void sub_215973518()
{
}

unsigned char *sub_21597352C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  *(void *)uint64_t result = &unk_26C673090;
  result[8] = *(unsigned char *)(a1 + 8);
  return result;
}

uint64_t sub_215973578(uint64_t result, uint64_t a2)
{
  *(void *)a2 = &unk_26C673090;
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(result + 8);
  return result;
}

void sub_2159735A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*(unsigned __int8 *)(a1 + 8) - 1 <= 1)
  {
    sub_215971160(v13);
    uint64_t v3 = *(void *)v13[0];
    uint64_t v4 = (std::mutex *)(*(void *)v13[0] + 216);
    std::mutex::lock(v4);
    uint64_t v5 = *(std::__shared_weak_count **)(v3 + 208);
    if (v5)
    {
      char v6 = std::__shared_weak_count::lock(v5);
      uint64_t v7 = v6;
      if (v6 && *(void *)(v3 + 200))
      {
        char v14 = *(void **)(v3 + 200);
        unint64_t v15 = v6;
LABEL_15:
        std::mutex::unlock(v4);
        sub_21573573C(v2, &v14);
        uint64_t v12 = v15;
        if (v15)
        {
          if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        sub_215970F80((uint64_t)v13);
        return;
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    uint64_t v10 = (std::__shared_weak_count *)operator new(0x48uLL);
    v10->__shared_owners_ = 0;
    v10->__shared_weak_owners_ = 0;
    v10->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673040;
    sub_21597D240(&v10[1].__vftable, 1);
    atomic_fetch_add_explicit(&v10->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    uint64_t v11 = *(std::__shared_weak_count **)(v3 + 208);
    *(void *)(v3 + 200) = v10 + 1;
    *(void *)(v3 + 208) = v10;
    if (v11) {
      std::__shared_weak_count::__release_weak(v11);
    }
    char v14 = &v10[1].__vftable;
    unint64_t v15 = v10;
    if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    goto LABEL_15;
  }
  uint64_t v8 = (std::__shared_weak_count *)operator new(0x48uLL);
  v8->__shared_owners_ = 0;
  v8->__shared_weak_owners_ = 0;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673040;
  char v14 = sub_21597D240(&v8[1].__vftable, 0);
  unint64_t v15 = v8;
  sub_21573573C(v2, &v14);
  uint64_t v9 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
}

void sub_2159737F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count::~__shared_weak_count(v14);
  operator delete(v16);
  if (v13)
  {
    if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  std::mutex::unlock(v12);
  sub_215970F80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21597392C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn4elog10APILogging20DefaultSetupFunctionE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"N4cv3d3esn4elog10APILogging20DefaultSetupFunctionE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn4elog10APILogging20DefaultSetupFunctionE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn4elog10APILogging20DefaultSetupFunctionE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21597399C()
{
  return &unk_26C673100;
}

void sub_2159739AC()
{
}

unsigned char *sub_2159739C0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  *(void *)uint64_t result = &unk_26C673120;
  result[8] = *(unsigned char *)(a1 + 8);
  return result;
}

uint64_t sub_215973A0C(uint64_t result, uint64_t a2)
{
  *(void *)a2 = &unk_26C673120;
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(result + 8);
  return result;
}

uint64_t sub_215973A40(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn4elog10APILogging28DefaultInternalSetupFunctionE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"N4cv3d3esn4elog10APILogging28DefaultInternalSetupFunctionE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn4elog10APILogging28DefaultInternalSetupFunctionE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn4elog10APILogging28DefaultInternalSetupFunctionE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215973AB0()
{
  return &unk_26C673180;
}

void sub_215973AC0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215973AF8(uint64_t result)
{
  long long v1 = *(uint64_t **)(result + 24);
  if (v1)
  {
    sub_215971078(*(uint64_t **)(result + 24));
    uint64_t v2 = *v1;
    uint64_t *v1 = 0;
    if (v2)
    {
      uint64_t v3 = sub_215972F38(v2);
      MEMORY[0x2166C4D20](v3, 0x1060C406F83F42DLL);
    }
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215973B7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3esn4elog10APILoggingEE27__shared_ptr_default_deleteIS4_S4_EE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3esn4elog10APILoggingEE27__shared_ptr_default_deleteIS4_S4_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3esn4elog10APILoggingEE27__shared_ptr_default_deleteIS4_S4_EE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3esn4elog10APILoggingEE27__shared_ptr_default_deleteIS4_S4_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  }
  return 0;
}

void sub_215973BF0(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5D8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E5D8))
  {
    *a1 = qword_26788E5D0;
  }
  else
  {
    sub_215731B54(&qword_26788E5D0);
    __cxa_atexit((void (*)(void *))nullsub_1, &qword_26788E5D0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5D8);
    *a1 = qword_26788E5D0;
  }
}

void sub_215973C8C(_Unwind_Exception *a1)
{
}

void sub_215973CA4(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E5E8))
  {
    sub_215973BF0(&v4);
    sub_215732BF4(__p, "cv3d");
    sub_2157371C4(&v4, (uint64_t)__p, &qword_26788E5E0);
    if (v3 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit((void (*)(void *))nullsub_3, &qword_26788E5E0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5E8);
  }
  *a1 = qword_26788E5E0;
}

void sub_215973D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788E5E8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788E5E8);
  _Unwind_Resume(a1);
}

void sub_215973DBC(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E5F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E5F8))
  {
    sub_215973BF0(&v4);
    sub_215732BF4(__p, "cv3dapi");
    sub_2157371C4(&v4, (uint64_t)__p, &qword_26788E5F0);
    if (v3 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit((void (*)(void *))nullsub_3, &qword_26788E5F0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E5F8);
  }
  *a1 = qword_26788E5F0;
}

void sub_215973E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788E5F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788E5F8);
  _Unwind_Resume(a1);
}

void sub_215973ED4(std::locale *this)
{
  long long v1 = this;
  locale = (std::__shared_weak_count *)this[6].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::locale::~locale(this);
}

void *sub_215973F70(void *a1)
{
  uint64_t v2 = (void *)a1[1];
  *a1 = &unk_26C6731F0;
  a1[1] = 0;
  if (v2)
  {
    uint64_t v3 = v2[1];
    void *v2 = &unk_26C673978;
    v2[1] = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      uint64_t v4 = v2[1];
      v2[1] = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
    MEMORY[0x2166C4D20](v2, 0xA1C40BD48D6D6);
  }
  return a1;
}

void *sub_215974048(void *a1)
{
  uint64_t v2 = (void *)a1[1];
  *a1 = &unk_26C6731F0;
  a1[1] = 0;
  if (v2)
  {
    uint64_t v3 = v2[1];
    void *v2 = &unk_26C673978;
    v2[1] = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      uint64_t v4 = v2[1];
      v2[1] = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
    MEMORY[0x2166C4D20](v2, 0xA1C40BD48D6D6);
  }
  return a1;
}

void sub_215974120(void *a1)
{
  long long v1 = (void *)a1[1];
  *a1 = &unk_26C6731F0;
  a1[1] = 0;
  if (v1)
  {
    uint64_t v2 = v1[1];
    void *v1 = &unk_26C673978;
    v1[1] = 0;
    if (v2)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
      uint64_t v3 = v1[1];
      v1[1] = 0;
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    MEMORY[0x2166C4D20](v1, 0xA1C40BD48D6D6);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215974218(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C673978;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[1];
    a1[1] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  return a1;
}

void sub_2159742B4(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C673978;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[1];
    a1[1] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))();
}

uint64_t sub_215974398(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))();
}

uint64_t sub_2159743C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))();
}

uint64_t sub_2159743E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))();
}

uint64_t sub_215974410(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))();
}

void sub_215974438()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 17);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597447C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215974490()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 14);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_2159744D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2159744EC()
{
}

void sub_215974500(uint64_t a1, _DWORD *a2)
{
  *a2 = -1000;
}

void sub_215974518(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974550(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_215974580(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 == 0x8000000215ECF960) {
    return a1 + 24;
  }
  if (((v3 & 0x8000000215ECF960 & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x8000000215ECF960)) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x8000000215ECF960 & 0x7FFFFFFFFFFFFFFFLL))) {
    return a1 + 24;
  }
  return 0;
}

void *sub_215974604(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215974670(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159746FC(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_215974710(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_21597477C(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974808(uint64_t a1)
{
  uint64_t v2 = (const std::locale *)MEMORY[0x2166C4AE0]();
  *(void *)(a1 + 8) = std::locale::use_facet(v2, MEMORY[0x263F8C108]);
  *(void *)(a1 + 16) = std::locale::use_facet((const std::locale *)a1, MEMORY[0x263F8C130]);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_215974864(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void sub_215974878()
{
}

void sub_215974948()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 6);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597498C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_2159749A0(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215974A0C(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974A98(uint64_t result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 92))
  {
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_12;
    }
    int v2 = *(unsigned __int8 *)(*(void *)(a2 + 16) - 1);
    if (v2 != 13 && v2 != 10) {
      goto LABEL_12;
    }
LABEL_11:
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 80) = *(void *)(result + 8);
    return result;
  }
  if (*(void *)(a2 + 16) == *(void *)(a2 + 8) && (*(unsigned char *)(a2 + 88) & 1) == 0) {
    goto LABEL_11;
  }
LABEL_12:
  *(_DWORD *)a2 = -993;
  *(void *)(a2 + 80) = 0;
  return result;
}

void *sub_215974AF8(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215974B64(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974BF0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) && (*(unsigned char *)(a2 + 88) & 2) == 0
    || *(unsigned char *)(result + 16) && ((int v3 = *v2, v3 != 13) ? (v4 = v3 == 10) : (v4 = 1), v4))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  else
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  return result;
}

std::locale *sub_215974C40(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673400;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_215974CCC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673400;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215974D78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 8);
  int v3 = *(unsigned __int8 **)(a2 + 24);
  if (v2 == v3) {
    goto LABEL_19;
  }
  BOOL v4 = *(unsigned __int8 **)(a2 + 16);
  if (v4 != v3)
  {
    if (v4 == v2)
    {
      int v5 = *(_DWORD *)(a2 + 88);
      if ((v5 & 0x80) == 0)
      {
        if ((v5 & 4) == 0)
        {
          uint64_t v6 = *v2;
          if (v6 == 95) {
            goto LABEL_17;
          }
          goto LABEL_15;
        }
        goto LABEL_19;
      }
    }
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    if (v7 == 95
      || (v7 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v7) & 0x500) != 0)
    {
      int v9 = 1;
      if (v8 == 95) {
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = 0;
      if (v8 == 95) {
        goto LABEL_24;
      }
    }
    if ((v8 & 0x80) != 0 || (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v8) & 0x500) == 0)
    {
      if (*(unsigned char *)(result + 40) == (v9 != 0)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    }
LABEL_24:
    if (*(unsigned char *)(result + 40) != (v9 != 1)) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if ((*(unsigned char *)(a2 + 88) & 8) == 0)
  {
    uint64_t v6 = *(v3 - 1);
    if (v6 == 95) {
      goto LABEL_17;
    }
LABEL_15:
    if ((v6 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v6) & 0x500) != 0)
    {
LABEL_17:
      if (*(unsigned char *)(result + 40) != 1) {
        goto LABEL_27;
      }
LABEL_20:
      *(_DWORD *)a2 = -993;
      *(void *)(a2 + 80) = 0;
      return result;
    }
  }
LABEL_19:
  if (!*(unsigned char *)(result + 40)) {
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v10 = *(void *)(result + 8);
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = v10;
  return result;
}

std::locale *sub_215974ECC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673448;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    std::locale::~locale(v2);
    a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
    BOOL v4 = a1[1].__locale_;
    if (!v4) {
      return a1;
    }
    goto LABEL_4;
  }
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  BOOL v4 = a1[1].__locale_;
  if (v4) {
LABEL_4:
  }
    (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  return a1;
}

void sub_215974FE0(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673448;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    std::locale::~locale(v2);
    a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
    BOOL v4 = a1[1].__locale_;
    if (!v4)
    {
LABEL_5:
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    std::locale::~locale(a1 + 2);
    a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
    BOOL v4 = a1[1].__locale_;
    if (!v4) {
      goto LABEL_5;
    }
  }
  (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  goto LABEL_5;
}

void sub_215975114(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v25 = 0;
  long long v26 = 0uLL;
  char v27 = 0;
  char v28 = 0;
  uint64_t v29 = 0;
  long long __p = 0;
  uint64_t v19 = 0;
  unint64_t v4 = (*(_DWORD *)(a1 + 44) + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v20 = 0;
  *(void *)&long long v21 = v5;
  *((void *)&v21 + 1) = v5;
  char v22 = 0;
  sub_215975790((uint64_t)&__p, v4, &v21);
  uint64_t v23 = v6;
  uint64_t v24 = v6;
  char v25 = 0;
  long long v26 = v21;
  char v27 = v22;
  uint64_t v29 = v6;
  char v28 = 1;
  uint64_t v7 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 92)) {
    BOOL v8 = v7 == *(void *)(a2 + 8);
  }
  else {
    BOOL v8 = 0;
  }
  char v9 = v8;
  if (*(unsigned __int8 *)(a1 + 84) == sub_2159752A0(a1 + 16, v7, *(void *)(a2 + 24), (uint64_t *)&__p, *(_DWORD *)(a2 + 88) & 0xFBF | 0x40u, v9))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    uint64_t v10 = (char *)__p;
    goto LABEL_13;
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(a1 + 8);
  uint64_t v10 = (char *)__p;
  unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v19 - (unsigned char *)__p) >> 3);
  if (v11 < 2)
  {
LABEL_13:
    if (!v10) {
      return;
    }
    goto LABEL_14;
  }
  int v12 = 0;
  int v13 = *(_DWORD *)(a1 + 80);
  uint64_t v14 = *(void *)(a2 + 32);
  unint64_t v15 = 1;
  do
  {
    uint64_t v16 = &v10[24 * v15];
    uint64_t v17 = v14 + 24 * (v13 + v12);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v16;
    *(unsigned char *)(v17 + 16) = v16[16];
    unint64_t v15 = (v12 + 2);
    ++v12;
  }
  while (v11 > v15);
LABEL_14:
  uint64_t v19 = v10;
  operator delete(v10);
}

void sub_215975280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2159752A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  long long v50 = 0;
  char v51 = 0;
  unint64_t v52 = 0;
  uint64_t v6 = *(void *)(a1 + 40);
  if (!v6) {
    return 0;
  }
  *(void *)&long long v48 = a3;
  *((void *)&v48 + 1) = a3;
  char v49 = 0;
  *(_DWORD *)uint64_t v45 = 0;
  memset(&v45[8], 0, 48);
  *(_OWORD *)long long __p = 0u;
  memset(v47, 0, 21);
  char v51 = sub_215975ABC((void **)&v50, (uint64_t)v45);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (*(void *)&v45[32])
  {
    *(void *)&v45[40] = *(void *)&v45[32];
    operator delete(*(void **)&v45[32]);
  }
  int v13 = v51;
  *((_DWORD *)v51 - 24) = 0;
  *((void *)v13 - 11) = a2;
  *((void *)v13 - 10) = a2;
  *((void *)v13 - 9) = a3;
  uint64_t v14 = *((void *)v13 - 8);
  unint64_t v15 = *(unsigned int *)(a1 + 28);
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((*((void *)v13 - 7) - v14) >> 3);
  if (v15 <= v16)
  {
    if (v15 < v16) {
      *((void *)v13 - 7) = v14 + 24 * v15;
    }
  }
  else
  {
    sub_215975C90((void **)v13 - 8, v15 - v16, &v48);
    int v13 = v51;
  }
  uint64_t v18 = *((void *)v13 - 5);
  unint64_t v19 = *(unsigned int *)(a1 + 32);
  unint64_t v20 = (*((void *)v13 - 4) - v18) >> 4;
  if (v19 <= v20)
  {
    if (v19 < v20) {
      *((void *)v13 - 4) = v18 + 16 * v19;
    }
  }
  else
  {
    sub_215975E44((char **)v13 - 5, v19 - v20);
    int v13 = v51;
  }
  *((void *)v13 - 2) = v6;
  *((_DWORD *)v13 - 2) = a5;
  *(v13 - 4) = a6;
  unsigned int v21 = 1;
  while (2)
  {
    if ((v21 & 0xFFF) == 0 && (int)(v21 >> 12) >= (int)a3 - (int)a2) {
      sub_215975988();
    }
    uint64_t v23 = *((void *)v13 - 2);
    if (v23) {
      (*(void (**)(uint64_t, char *))(*(void *)v23 + 16))(v23, v13 - 96);
    }
    switch(*((_DWORD *)v13 - 24))
    {
      case 0xFFFFFC18:
        uint64_t v24 = *((void *)v13 - 10);
        if ((a5 & 0x20) != 0 && v24 == a2 || (a5 & 0x1000) != 0 && v24 != a3) {
          goto LABEL_27;
        }
        uint64_t v36 = *a4;
        *(void *)uint64_t v36 = a2;
        *(void *)(v36 + 8) = v24;
        *(unsigned char *)(v36 + 16) = 1;
        uint64_t v37 = *((void *)v13 - 8);
        uint64_t v38 = *((void *)v13 - 7) - v37;
        if (v38)
        {
          unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * (v38 >> 3);
          char v40 = (unsigned char *)(v37 + 16);
          unsigned int v41 = 1;
          do
          {
            uint64_t v42 = v36 + 24 * v41;
            *(_OWORD *)uint64_t v42 = *((_OWORD *)v40 - 1);
            char v43 = *v40;
            v40 += 24;
            *(unsigned char *)(v42 + 16) = v43;
          }
          while (v39 > v41++);
        }
        uint64_t v17 = 1;
        char v22 = v50;
        if (!v50) {
          return v17;
        }
        goto LABEL_38;
      case 0xFFFFFC1D:
      case 0xFFFFFC1E:
      case 0xFFFFFC21:
        goto LABEL_17;
      case 0xFFFFFC1F:
LABEL_27:
        char v25 = v51;
        long long v26 = (void *)*((void *)v51 - 5);
        if (v26)
        {
          *((void *)v51 - 4) = v26;
          operator delete(v26);
        }
        char v27 = (void *)*((void *)v25 - 8);
        if (v27)
        {
          *((void *)v25 - 7) = v27;
          operator delete(v27);
        }
        char v51 = v25 - 96;
        goto LABEL_17;
      case 0xFFFFFC20:
        sub_215975F80((uint64_t)v45, (long long *)v13 - 6);
        (*(void (**)(void, uint64_t, char *))(**((void **)v13 - 2) + 24))(*((void *)v13 - 2), 1, v13 - 96);
        (*(void (**)(void, void, unsigned char *))(*(void *)v47[1] + 24))(v47[1], 0, v45);
        char v28 = v51;
        if ((unint64_t)v51 >= v52)
        {
          char v51 = sub_215975ABC((void **)&v50, (uint64_t)v45);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v29 = *(_OWORD *)&v45[16];
          *(_OWORD *)char v51 = *(_OWORD *)v45;
          *((_OWORD *)v28 + 1) = v29;
          *((void *)v28 + 4) = 0;
          *((void *)v28 + 5) = 0;
          *((void *)v28 + 6) = 0;
          *((void *)v28 + 7) = 0;
          *((_OWORD *)v28 + 2) = *(_OWORD *)&v45[32];
          *((void *)v28 + 6) = *(void *)&v45[48];
          memset(&v45[32], 0, 24);
          *((void *)v28 + 8) = 0;
          *((void *)v28 + 9) = 0;
          *(_OWORD *)(v28 + 56) = *(_OWORD *)__p;
          *((void *)v28 + 9) = v47[0];
          __p[0] = 0;
          __p[1] = 0;
          v47[0] = 0;
          uint64_t v30 = v47[1];
          *(void *)(v28 + 85) = *(void *)((char *)&v47[1] + 5);
          *((void *)v28 + 10) = v30;
          char v51 = v28 + 96;
        }
        if (*(void *)&v45[32])
        {
          *(void *)&v45[40] = *(void *)&v45[32];
          operator delete(*(void **)&v45[32]);
        }
LABEL_17:
        char v22 = v50;
        int v13 = v51;
        ++v21;
        if (v50 != v51) {
          continue;
        }
        uint64_t v17 = 0;
        if (v50)
        {
LABEL_38:
          uint64_t v31 = v51;
          uint64_t v32 = v22;
          if (v51 != v22)
          {
            do
            {
              uint64_t v33 = (void *)*((void *)v31 - 5);
              if (v33)
              {
                *((void *)v31 - 4) = v33;
                operator delete(v33);
              }
              char v34 = (void *)*((void *)v31 - 8);
              if (v34)
              {
                *((void *)v31 - 7) = v34;
                operator delete(v34);
              }
              v31 -= 96;
            }
            while (v31 != v22);
            uint64_t v32 = v50;
          }
          char v51 = v22;
          operator delete(v32);
        }
        break;
      default:
        sub_2159759E0();
    }
    return v17;
  }
}

void sub_2159756E4(_Unwind_Exception *a1)
{
  sub_215975A38((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_2159756F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215975944((uint64_t *)va);
  sub_215975A38((void **)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_215975740(_Unwind_Exception *a1)
{
  sub_215975A38((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_215975754(_Unwind_Exception *a1)
{
  sub_215975A38((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void *sub_215975790(uint64_t a1, unint64_t a2, long long *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = *(void **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (uint64_t)result) >> 3) < a2)
  {
    if (result)
    {
      *(void *)(a1 + 8) = result;
      operator delete(result);
      uint64_t v6 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (a2 > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_26;
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
    uint64_t v9 = 2 * v8;
    if (2 * v8 <= a2) {
      uint64_t v9 = a2;
    }
    unint64_t v10 = v8 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v9;
    if (v10 > 0xAAAAAAAAAAAAAAALL) {
LABEL_26:
    }
      sub_21597592C();
    uint64_t v11 = 3 * v10;
    uint64_t result = operator new(24 * v10);
    *(void *)a1 = result;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = &result[v11];
    uint64_t v12 = 24 * a2;
    int v13 = &result[3 * a2];
    do
    {
      *(_OWORD *)uint64_t result = *a3;
      result[2] = *((void *)a3 + 2);
      result += 3;
      v12 -= 24;
    }
    while (v12);
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v15 = (v14 - (uint64_t)result) / 24;
  if (v15 >= a2) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = (v14 - (uint64_t)result) / 24;
  }
  if (v16)
  {
    uint64_t v17 = result;
    do
    {
      *(_OWORD *)uint64_t v17 = *a3;
      *((unsigned char *)v17 + 16) = *((unsigned char *)a3 + 16);
      v17 += 3;
      --v16;
    }
    while (v16);
  }
  if (a2 <= v15)
  {
    int v13 = &result[3 * a2];
LABEL_25:
    *(void *)(a1 + 8) = v13;
    return result;
  }
  uint64_t v18 = v14 + 24 * (a2 - v15);
  uint64_t v19 = 24 * a2 - 24 * v15;
  do
  {
    long long v20 = *a3;
    *(void *)(v14 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v14 = v20;
    v14 += 24;
    v19 -= 24;
  }
  while (v19);
  *(void *)(a1 + 8) = v18;
  return result;
}

void sub_21597592C()
{
}

void *sub_215975944(void *a1)
{
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  int v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_215975988()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 12);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_2159759CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2159759E0()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 16);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_215975A24(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void **sub_215975A38(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    int v3 = (char *)a1[1];
    unint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = (void *)*((void *)v3 - 5);
        if (v5)
        {
          *((void *)v3 - 4) = v5;
          operator delete(v5);
        }
        uint64_t v6 = (void *)*((void *)v3 - 8);
        if (v6)
        {
          *((void *)v3 - 7) = v6;
          operator delete(v6);
        }
        v3 -= 96;
      }
      while (v3 != v2);
      unint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

char *sub_215975ABC(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 5);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_21597592C();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5) >= 0x155555555555555) {
    unint64_t v6 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x2AAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    uint64_t v7 = (char *)operator new(96 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  uint64_t v9 = &v7[96 * v3];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v8;
  unint64_t v10 = &v7[96 * v6];
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a2 + 32);
  *((void *)v9 + 6) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(v9 + 85) = *(void *)(a2 + 85);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  *((void *)v9 + 9) = 0;
  *((void *)v9 + 10) = v12;
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(a2 + 56);
  *((void *)v9 + 9) = v11;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  int v13 = v9 + 96;
  uint64_t v14 = (char *)*a1;
  unint64_t v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v9;
    a1[1] = v13;
    a1[2] = v10;
  }
  else
  {
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v15[v16];
      long long v19 = *(_OWORD *)&v15[v16 - 80];
      *((_OWORD *)v17 - 6) = *(_OWORD *)&v15[v16 - 96];
      *((_OWORD *)v17 - 5) = v19;
      *((void *)v17 - 7) = 0;
      *((void *)v17 - 6) = 0;
      *((_OWORD *)v17 - 4) = *(_OWORD *)&v15[v16 - 64];
      *((void *)v17 - 6) = *(void *)&v15[v16 - 48];
      *((void *)v18 - 8) = 0;
      *((void *)v18 - 7) = 0;
      *((void *)v18 - 6) = 0;
      *((void *)v17 - 4) = 0;
      *((void *)v17 - 3) = 0;
      *(_OWORD *)(v17 - 40) = *(_OWORD *)&v15[v16 - 40];
      *((void *)v17 - 3) = *(void *)&v15[v16 - 24];
      *((void *)v18 - 5) = 0;
      *((void *)v18 - 4) = 0;
      *((void *)v18 - 3) = 0;
      uint64_t v20 = *(void *)&v15[v16 - 16];
      *(void *)(v17 - 11) = *(void *)&v15[v16 - 11];
      *((void *)v17 - 2) = v20;
      v16 -= 96;
    }
    while (&v15[v16] != v14);
    unint64_t v15 = (char *)*a1;
    unsigned int v21 = (char *)a1[1];
    *a1 = &v9[v16];
    a1[1] = v13;
    a1[2] = v10;
    while (v21 != v15)
    {
      char v22 = (void *)*((void *)v21 - 5);
      if (v22)
      {
        *((void *)v21 - 4) = v22;
        operator delete(v22);
      }
      uint64_t v23 = (void *)*((void *)v21 - 8);
      if (v23)
      {
        *((void *)v21 - 7) = v23;
        operator delete(v23);
      }
      v21 -= 96;
    }
  }
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

void sub_215975C90(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v7 = (char *)a1[1];
  unint64_t v6 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      int v13 = &v7[24 * a2];
      uint64_t v14 = 24 * a2;
      do
      {
        long long v15 = *a3;
        *((void *)v7 + 2) = *((void *)a3 + 2);
        *(_OWORD *)uint64_t v7 = v15;
        v7 += 24;
        v14 -= 24;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_21597592C();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v6 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 > 0xAAAAAAAAAAAAAAALL) {
        sub_215738AD8();
      }
      uint64_t v12 = (char *)operator new(24 * v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v16 = &v12[24 * v8];
    uint64_t v17 = 24 * a2;
    uint64_t v18 = &v16[24 * a2];
    long long v19 = v16;
    do
    {
      long long v20 = *a3;
      *((void *)v19 + 2) = *((void *)a3 + 2);
      *(_OWORD *)long long v19 = v20;
      v19 += 24;
      v17 -= 24;
    }
    while (v17);
    unsigned int v21 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        long long v22 = *(_OWORD *)(v7 - 24);
        *((void *)v16 - 1) = *((void *)v7 - 1);
        *(_OWORD *)(v16 - 24) = v22;
        v16 -= 24;
        v7 -= 24;
      }
      while (v7 != v21);
      uint64_t v7 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v18;
    a1[2] = &v12[24 * v11];
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_215975E44(char **a1, unint64_t a2)
{
  uint64_t v5 = a1[1];
  unint64_t v4 = a1[2];
  if (a2 <= (v4 - v5) >> 4)
  {
    if (a2)
    {
      uint64_t v12 = 16 * a2;
      bzero(a1[1], 16 * a2);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    unint64_t v6 = *a1;
    uint64_t v7 = (v5 - *a1) >> 4;
    unint64_t v8 = v7 + a2;
    if ((v7 + a2) >> 60) {
      sub_21597592C();
    }
    uint64_t v9 = v4 - v6;
    if (v9 >> 3 > v8) {
      unint64_t v8 = v9 >> 3;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v10 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10)
    {
      if (v10 >> 60) {
        sub_215738AD8();
      }
      unint64_t v11 = (char *)operator new(16 * v10);
    }
    else
    {
      unint64_t v11 = 0;
    }
    int v13 = &v11[16 * v7];
    size_t v14 = 16 * a2;
    long long v15 = &v11[16 * v10];
    bzero(v13, v14);
    uint64_t v16 = &v13[v14];
    if (v5 != v6)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v5 - 1);
        v13 -= 16;
        v5 -= 16;
      }
      while (v5 != v6);
      uint64_t v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v15;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

uint64_t sub_215975F80(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v7 = (unsigned char *)*((void *)a2 + 4);
  unint64_t v6 = (unsigned char *)*((void *)a2 + 5);
  int64_t v8 = v6 - v7;
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (v8 >> 3) >= 0xAAAAAAAAAAAAAABLL) {
      sub_21597592C();
    }
    uint64_t v9 = (char *)operator new(v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = &v9[8 * (v8 >> 3)];
    size_t v10 = 24 * ((v8 - 24) / 0x18uLL) + 24;
    memcpy(v9, v7, v10);
    *(void *)(a1 + 40) = &v9[v10];
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  uint64_t v12 = (char *)*((void *)a2 + 7);
  unint64_t v11 = (char *)*((void *)a2 + 8);
  uint64_t v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0) {
      sub_21597592C();
    }
    size_t v14 = (char *)operator new(v11 - v12);
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = &v14[16 * (v13 >> 4)];
    unint64_t v15 = v13 - 16;
    if ((unint64_t)(v13 - 16) < 0xF0) {
      goto LABEL_31;
    }
    unint64_t v21 = v15 & 0xFFFFFFFFFFFFFFF0 | 8;
    long long v22 = &v14[v21];
    uint64_t v23 = &v12[v21];
    unint64_t v24 = (v15 & 0xFFFFFFFFFFFFFFF0) + 16;
    BOOL v25 = v14 + 8 >= &v12[v24] || v12 + 8 >= &v14[v24];
    BOOL v26 = !v25;
    if (v12 < v22 && v14 < v23) {
      goto LABEL_31;
    }
    if (v26) {
      goto LABEL_31;
    }
    uint64_t v28 = (v15 >> 4) + 1;
    uint64_t v29 = 16 * (v28 & 0x1FFFFFFFFFFFFFFCLL);
    uint64_t v30 = &v12[v29];
    uint64_t v18 = &v14[v29];
    uint64_t v31 = (double *)(v14 + 32);
    uint64_t v32 = (const double *)(v12 + 32);
    uint64_t v33 = v28 & 0x1FFFFFFFFFFFFFFCLL;
    do
    {
      char v34 = v32 - 4;
      float64x2x2_t v36 = vld2q_f64(v34);
      float64x2x2_t v37 = vld2q_f64(v32);
      uint64_t v35 = v31 - 4;
      vst2q_f64(v35, v36);
      vst2q_f64(v31, v37);
      v31 += 8;
      v32 += 8;
      v33 -= 4;
    }
    while (v33);
    uint64_t v12 = v30;
    size_t v14 = v18;
    if (v28 != (v28 & 0x1FFFFFFFFFFFFFFCLL))
    {
LABEL_31:
      do
      {
        uint64_t v16 = *(void *)v12;
        uint64_t v17 = *((void *)v12 + 1);
        v12 += 16;
        *(void *)size_t v14 = v16;
        *((void *)v14 + 1) = v17;
        v14 += 16;
      }
      while (v12 != v11);
      uint64_t v18 = v14;
    }
    *(void *)(a1 + 64) = v18;
  }
  uint64_t v19 = *((void *)a2 + 10);
  *(void *)(a1 + 85) = *(void *)((char *)a2 + 85);
  *(void *)(a1 + 80) = v19;
  return a1;
}

void sub_215976170(_Unwind_Exception *exception_object)
{
  long long v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 64) = v5;
    operator delete(v5);
  }
  unint64_t v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 40) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_2159761A4()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 11);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_2159761E8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_2159761FC(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215976268(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2159762F4()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 3);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_215976338(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_21597634C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

void sub_2159764C0(_Unwind_Exception *a1)
{
  std::locale::~locale(v2);
  void *v1 = &unk_26C673340;
  uint64_t v4 = v1[1];
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  MEMORY[0x2166C4D20](v1, 0x10E1C4010F5D982);
  _Unwind_Resume(a1);
}

void sub_215976538()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 4);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597657C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215976590(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

std::locale *sub_2159766C0(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6734D8;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_21597674C(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6734D8;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159767F8(uint64_t result, uint64_t a2)
{
  unint64_t v3 = *(char **)(a2 + 16);
  if (v3 == *(char **)(a2 + 24)
    || (uint64_t v4 = result,
        uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(result + 24) + 40))(*(void *)(result + 24), *v3), *(unsigned __int8 *)(v4 + 40) != result))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    ++*(void *)(a2 + 16);
    *(void *)(a2 + 80) = *(void *)(v4 + 8);
  }
  return result;
}

std::locale *sub_215976898(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673520;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_215976924(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673520;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159769D0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 40))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  return result;
}

void *sub_215976A18(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215976A84(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215976B10(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 16))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  return result;
}

std::locale *sub_215976B58(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6735B0;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_215976BE4(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6735B0;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215976C90(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 40) - 1);
  if (!*(unsigned char *)(v3 + 16)
    || (v4 = *(void *)(v3 + 8) - *(void *)v3, uint64_t v5 = *(void *)(a2 + 16), *(void *)(a2 + 24) - v5 < v4))
  {
LABEL_3:
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    return result;
  }
  uint64_t v6 = result;
  if (v4 >= 1)
  {
    uint64_t v7 = 0;
    while (1)
    {
      int v8 = (*(uint64_t (**)(void, void))(**(void **)(v6 + 24) + 40))(*(void *)(v6 + 24), *(char *)(*(void *)v3 + v7));
      uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(v6 + 24) + 40))(*(void *)(v6 + 24), *(char *)(*(void *)(a2 + 16) + v7));
      if (v8 != result) {
        goto LABEL_3;
      }
      if (v4 == ++v7)
      {
        uint64_t v5 = *(void *)(a2 + 16);
        break;
      }
    }
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 16) = v5 + v4;
  *(void *)(a2 + 80) = *(void *)(v6 + 8);
  return result;
}

std::locale *sub_215976DBC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6735F8;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_215976E48(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C6735F8;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215976EF4(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(result + 40) - 1;
  uint64_t v3 = *(void *)(a2 + 32);
  if (!*(unsigned char *)(v3 + 24 * v2 + 16)
    || (uint64_t v4 = (unsigned __int8 **)(v3 + 24 * v2),
        uint64_t v5 = *v4,
        uint64_t v6 = v4[1] - *v4,
        uint64_t v7 = *(void *)(a2 + 16),
        *(void *)(a2 + 24) - v7 < v6))
  {
LABEL_3:
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    return result;
  }
  if (v6 >= 1)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(unsigned __int8 **)(a2 + 16);
    do
    {
      int v11 = *v5++;
      int v10 = v11;
      int v12 = *v9++;
      if (v10 != v12) {
        goto LABEL_3;
      }
    }
    while (--v8);
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 16) = v7 + v6;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_215976F84(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215976FF0(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

unsigned int *sub_21597707C(unsigned int *result, uint64_t a2)
{
  unint64_t v2 = result[4];
  uint64_t v3 = *(void *)(a2 + 32);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a2 + 40) - v3) >> 3) < v2) {
    sub_215976538();
  }
  unsigned int v5 = v2 - 1;
  if (*(unsigned char *)(v3 + 24 * v5 + 16)
    && (uint64_t v6 = result,
        uint64_t v7 = v3 + 24 * v5,
        uint64_t result = *(unsigned int **)v7,
        int64_t v8 = *(void *)(v7 + 8) - *(void *)v7,
        uint64_t v9 = *(void *)(a2 + 16),
        *(void *)(a2 + 24) - v9 >= v8)
    && (uint64_t result = (unsigned int *)memcmp(result, *(const void **)(a2 + 16), v8), !result))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 16) = v9 + v8;
    *(void *)(a2 + 80) = *((void *)v6 + 1);
  }
  else
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  return result;
}

void sub_21597714C(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    uint64_t v6 = (void *)(a1 + 40);
    unsigned int v5 = *(unsigned char **)(a1 + 48);
    unint64_t v16 = *(void *)(a1 + 56);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v16) {
        goto LABEL_24;
      }
      uint64_t v17 = (unsigned char *)*v6;
      unint64_t v18 = (unint64_t)&v5[-*v6];
      unint64_t v19 = v18 + 1;
      if ((uint64_t)(v18 + 1) >= 0)
      {
        unint64_t v20 = v16 - (void)v17;
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v21 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v21 = v19;
        }
        if (v21)
        {
          int v12 = operator new(v21);
          uint64_t v13 = &v12[v18];
          size_t v14 = &v12[v21];
          v12[v18] = v2;
          uint64_t v15 = (uint64_t)&v12[v18 + 1];
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        else
        {
          int v12 = 0;
          uint64_t v13 = &v5[-*v6];
          size_t v14 = 0;
          *(unsigned char *)unint64_t v18 = a2;
          uint64_t v15 = v18 + 1;
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        if (v18 >= 8 && (unint64_t)(v17 - v12) >= 0x20)
        {
          if (v18 >= 0x20)
          {
            unint64_t v28 = v18 & 0xFFFFFFFFFFFFFFE0;
            uint64_t v38 = (long long *)(v5 - 16);
            unint64_t v39 = &v12[v5 - 16 - v17];
            unint64_t v40 = v18 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v41 = *v38;
              *(v39 - 1) = *(v38 - 1);
              *unint64_t v39 = v41;
              v39 -= 2;
              v38 -= 2;
              v40 -= 32;
            }
            while (v40);
            if (v18 == v28) {
              goto LABEL_86;
            }
            if ((v18 & 0x18) == 0)
            {
              v13 -= v28;
              v5 -= v28;
              goto LABEL_80;
            }
          }
          else
          {
            unint64_t v28 = 0;
          }
          v13 -= v18 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v42 = &v5[-v28 - 8];
          char v43 = &v12[v42 - v17];
          unint64_t v44 = v28 - (v18 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v45 = *(void *)v42;
            v42 -= 8;
            *v43-- = v45;
            v44 += 8;
          }
          while (v44);
          v5 -= v18 & 0xFFFFFFFFFFFFFFF8;
          if (v18 == (v18 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_86;
          }
        }
LABEL_80:
        char v56 = v13 - 1;
        do
        {
          char v57 = *--v5;
          *v56-- = v57;
        }
        while (v5 != v17);
        goto LABEL_86;
      }
LABEL_89:
      sub_215738AC0();
    }
    if ((unint64_t)v5 < v16) {
      goto LABEL_24;
    }
    uint64_t v23 = (unsigned char *)*v6;
    unint64_t v24 = (unint64_t)&v5[-*v6];
    unint64_t v25 = v24 + 1;
    if ((uint64_t)(v24 + 1) < 0) {
      goto LABEL_89;
    }
    unint64_t v26 = v16 - (void)v23;
    if (2 * v26 > v25) {
      unint64_t v25 = 2 * v26;
    }
    if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v27 = v25;
    }
    if (v27)
    {
      int v12 = operator new(v27);
      uint64_t v13 = &v12[v24];
      size_t v14 = &v12[v27];
      v12[v24] = v2;
      uint64_t v15 = (uint64_t)&v12[v24 + 1];
      if (v5 == v23)
      {
LABEL_49:
        *(void *)(a1 + 40) = v13;
        *(void *)(a1 + 48) = v15;
        *(void *)(a1 + 56) = v14;
        if (!v5) {
          goto LABEL_88;
        }
        goto LABEL_87;
      }
    }
    else
    {
      int v12 = 0;
      uint64_t v13 = &v5[-*v6];
      size_t v14 = 0;
      *(unsigned char *)unint64_t v24 = a2;
      uint64_t v15 = v24 + 1;
      if (v5 == v23) {
        goto LABEL_49;
      }
    }
    if (v24 >= 8 && (unint64_t)(v23 - v12) >= 0x20)
    {
      if (v24 >= 0x20)
      {
        unint64_t v29 = v24 & 0xFFFFFFFFFFFFFFE0;
        char v46 = (long long *)(v5 - 16);
        uint64_t v47 = &v12[v5 - 16 - v23];
        unint64_t v48 = v24 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          *uint64_t v47 = v49;
          v47 -= 2;
          v46 -= 2;
          v48 -= 32;
        }
        while (v48);
        if (v24 == v29) {
          goto LABEL_86;
        }
        if ((v24 & 0x18) == 0)
        {
          v13 -= v29;
          v5 -= v29;
          goto LABEL_84;
        }
      }
      else
      {
        unint64_t v29 = 0;
      }
      v13 -= v24 & 0xFFFFFFFFFFFFFFF8;
      long long v50 = &v5[-v29 - 8];
      char v51 = &v12[v50 - v23];
      unint64_t v52 = v29 - (v24 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v53 = *(void *)v50;
        v50 -= 8;
        *v51-- = v53;
        v52 += 8;
      }
      while (v52);
      v5 -= v24 & 0xFFFFFFFFFFFFFFF8;
      if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_86;
      }
    }
LABEL_84:
    char v58 = v13 - 1;
    do
    {
      char v59 = *--v5;
      *v58-- = v59;
    }
    while (v5 != v23);
    goto LABEL_86;
  }
  char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  unsigned int v5 = *(unsigned char **)(a1 + 48);
  unint64_t v4 = *(void *)(a1 + 56);
  if ((unint64_t)v5 < v4)
  {
LABEL_24:
    *unsigned int v5 = v2;
    uint64_t v15 = (uint64_t)(v5 + 1);
    goto LABEL_88;
  }
  uint64_t v6 = (void *)(a1 + 40);
  uint64_t v7 = *(unsigned char **)(a1 + 40);
  unint64_t v8 = v5 - v7;
  uint64_t v9 = v5 - v7 + 1;
  if (v9 < 0) {
    goto LABEL_89;
  }
  unint64_t v10 = v4 - (void)v7;
  if (2 * v10 > v9) {
    uint64_t v9 = 2 * v10;
  }
  if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v11 = v9;
  }
  if (v11)
  {
    int v12 = operator new(v11);
    uint64_t v13 = &v12[v8];
    size_t v14 = &v12[v11];
    v12[v8] = v2;
    uint64_t v15 = (uint64_t)&v12[v8 + 1];
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  else
  {
    int v12 = 0;
    uint64_t v13 = (char *)(v5 - v7);
    size_t v14 = 0;
    *(unsigned char *)unint64_t v8 = v2;
    uint64_t v15 = v8 + 1;
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  if (v8 < 8 || (unint64_t)(v7 - v12) < 0x20) {
    goto LABEL_76;
  }
  if (v8 < 0x20)
  {
    unint64_t v22 = 0;
    goto LABEL_55;
  }
  unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFE0;
  uint64_t v30 = (long long *)(v5 - 16);
  uint64_t v31 = &v12[v5 - 16 - v7];
  unint64_t v32 = v8 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v33 = *v30;
    *(v31 - 1) = *(v30 - 1);
    *uint64_t v31 = v33;
    v31 -= 2;
    v30 -= 2;
    v32 -= 32;
  }
  while (v32);
  if (v8 != v22)
  {
    if ((v8 & 0x18) == 0)
    {
      v13 -= v22;
      v5 -= v22;
      goto LABEL_76;
    }
LABEL_55:
    v13 -= v8 & 0xFFFFFFFFFFFFFFF8;
    char v34 = &v5[-v22 - 8];
    uint64_t v35 = &v12[v34 - v7];
    unint64_t v36 = v22 - (v8 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint64_t v37 = *(void *)v34;
      v34 -= 8;
      *v35-- = v37;
      v36 += 8;
    }
    while (v36);
    v5 -= v8 & 0xFFFFFFFFFFFFFFF8;
    if (v8 == (v8 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_86;
    }
LABEL_76:
    uint64_t v54 = v13 - 1;
    do
    {
      char v55 = *--v5;
      *v54-- = v55;
    }
    while (v5 != v7);
  }
LABEL_86:
  unsigned int v5 = (unsigned char *)*v6;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v14;
  if (v5) {
LABEL_87:
  }
    operator delete(v5);
LABEL_88:
  *(void *)(a1 + 48) = v15;
}

uint64_t sub_2159775E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)a1 = &unk_26C673688;
  *(void *)(a1 + 8) = a3;
  size_t v11 = (const std::locale *)(a1 + 16);
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = a4;
  *(unsigned char *)(a1 + 169) = a5;
  *(unsigned char *)(a1 + 170) = a6;
  std::locale::locale(&v16, v11);
  std::locale::name(&v17, &v16);
  std::string::size_type size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v17.__r_.__value_.__l.__size_;
  }
  if (size == 1)
  {
    uint64_t v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v13 = &v17;
    }
    BOOL v14 = v13->__r_.__value_.__s.__data_[0] != 67;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_9;
    }
  }
  else
  {
    BOOL v14 = 1;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
LABEL_9:
    }
      operator delete(v17.__r_.__value_.__l.__data_);
  }
  std::locale::~locale(&v16);
  *(unsigned char *)(a1 + 171) = v14;
  return a1;
}

void sub_21597772C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
  std::locale::~locale(&a9);
  sub_2157352DC((void **)(v9 + 136));
  uint64_t v15 = *(void **)(v9 + 112);
  if (v15)
  {
    *(void *)(v9 + 120) = v15;
    operator delete(v15);
    sub_2159777F0(v12);
    std::locale v16 = *(void **)(v9 + 64);
    if (!v16)
    {
LABEL_3:
      std::string v17 = *v13;
      if (!*v13) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    sub_2159777F0(v12);
    std::locale v16 = *(void **)(v9 + 64);
    if (!v16) {
      goto LABEL_3;
    }
  }
  *(void *)(v9 + 72) = v16;
  operator delete(v16);
  std::string v17 = *v13;
  if (!*v13)
  {
LABEL_4:
    std::locale::~locale(v11);
    *(void *)uint64_t v9 = v10;
    uint64_t v18 = *(void *)(v9 + 8);
    if (!v18) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  *(void *)(v9 + 48) = v17;
  operator delete(v17);
  std::locale::~locale(v11);
  *(void *)uint64_t v9 = v10;
  uint64_t v18 = *(void *)(v9 + 8);
  if (!v18) {
LABEL_5:
  }
    _Unwind_Resume(a1);
LABEL_9:
  (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  _Unwind_Resume(a1);
}

void **sub_2159777F0(void **a1)
{
  char v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    unint64_t v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 1) < 0)
      {
        operator delete(*(v3 - 3));
        if (*((char *)v3 - 25) < 0) {
LABEL_9:
        }
          operator delete(*(v3 - 6));
      }
      else if (*((char *)v3 - 25) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 6;
      if (v3 == v2)
      {
        unint64_t v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

void sub_215977884(std::locale *a1)
{
  sub_215978438(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2159778BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *(char **)(a2 + 16);
  unsigned int v5 = *(char **)(a2 + 24);
  if (v4 == v5)
  {
    uint64_t v25 = 0;
    int v26 = *(unsigned __int8 *)(a1 + 168);
    goto LABEL_245;
  }
  if (!*(unsigned char *)(a1 + 171) || v4 + 1 == v5) {
    goto LABEL_34;
  }
  char v6 = *v4;
  LOBYTE(__src) = *v4;
  char v7 = v4[1];
  HIBYTE(__src) = v7;
  if (*(unsigned char *)(a1 + 169))
  {
    LOBYTE(__src) = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v6);
    HIBYTE(__src) = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v7);
  }
  uint64_t v8 = a1 + 16;
  sub_2159785AC(&__src, a1 + 16, &__p, (uint64_t)&__p);
  if (v142 < 0)
  {
    size_t v27 = __n;
    operator delete(__p);
    if (v27) {
      goto LABEL_8;
    }
LABEL_34:
    int v26 = 0;
    uint64_t v25 = 1;
    unsigned __int8 v28 = **(unsigned char **)(v2 + 16);
    LOBYTE(__src) = v28;
    if (!*(unsigned char *)(a1 + 169)) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (!v142) {
    goto LABEL_34;
  }
LABEL_8:
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 120) - v9;
  if (v10)
  {
    uint64_t v11 = v10 >> 1;
    if ((unint64_t)(v10 >> 1) <= 1) {
      uint64_t v11 = 1;
    }
    int v12 = (unsigned __int8 *)(v9 + 1);
    while (__src != *(v12 - 1) || HIBYTE(__src) != *v12)
    {
      v12 += 2;
      if (!--v11) {
        goto LABEL_17;
      }
    }
    goto LABEL_227;
  }
LABEL_17:
  if (!*(unsigned char *)(a1 + 170) || *(void *)(a1 + 88) == *(void *)(a1 + 96))
  {
    int v26 = 0;
    goto LABEL_167;
  }
  char v142 = 2;
  LOWORD(__p) = __src;
  BYTE2(__p) = 0;
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 32) + 32))(&v136);
  if (v142 < 0) {
    operator delete(__p);
  }
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = v138;
  uint64_t v16 = *(void *)(a1 + 96) - v14;
  if (!v16)
  {
    BOOL v24 = 0;
    int v70 = 0;
    int v69 = 0;
    goto LABEL_164;
  }
  uint64_t v128 = v2;
  uint64_t v17 = 0;
  unint64_t v18 = v16 / 48;
  if (v138 >= 0) {
    unint64_t v19 = &v136;
  }
  else {
    unint64_t v19 = v136;
  }
  char v20 = v138;
  if (v138 >= 0) {
    size_t v21 = v138;
  }
  else {
    size_t v21 = v137;
  }
  if (v18 <= 1) {
    uint64_t v22 = 1;
  }
  else {
    uint64_t v22 = v16 / 48;
  }
  uint64_t v23 = (unsigned __int8 *)(v14 + 47);
  BOOL v24 = 1;
  do
  {
    int v59 = (char)*(v23 - 24);
    if (v59 >= 0) {
      int v60 = (char *)(v23 - 47);
    }
    else {
      int v60 = *(char **)(v23 - 47);
    }
    if (v59 >= 0) {
      size_t v61 = *(v23 - 24);
    }
    else {
      size_t v61 = *(void *)(v23 - 39);
    }
    if (v21 >= v61) {
      size_t v62 = v61;
    }
    else {
      size_t v62 = v21;
    }
    int v63 = memcmp(v60, v19, v62);
    if (v63)
    {
      if ((v63 & 0x80000000) == 0) {
        goto LABEL_98;
      }
    }
    else if (v61 > v21)
    {
      goto LABEL_98;
    }
    int v64 = (char)*v23;
    if (v64 >= 0) {
      int v65 = (char *)(v23 - 23);
    }
    else {
      int v65 = *(char **)(v23 - 23);
    }
    if (v64 >= 0) {
      size_t v66 = *v23;
    }
    else {
      size_t v66 = *(void *)(v23 - 15);
    }
    if (v66 >= v21) {
      size_t v67 = v21;
    }
    else {
      size_t v67 = v66;
    }
    int v68 = memcmp(v19, v65, v67);
    if (v68)
    {
      if (v68 < 0)
      {
LABEL_123:
        int v69 = 1;
        int v70 = 5;
        goto LABEL_162;
      }
    }
    else if (v21 <= v66)
    {
      goto LABEL_123;
    }
LABEL_98:
    BOOL v24 = ++v17 < v18;
    v23 += 48;
  }
  while (v22 != v17);
  int v70 = 0;
  int v69 = 0;
LABEL_162:
  uint64_t v2 = v128;
  uint64_t v8 = a1 + 16;
  char v15 = v20;
LABEL_164:
  if (v15 < 0) {
    operator delete(v136);
  }
  int v26 = v69;
  if (v24) {
    goto LABEL_207;
  }
LABEL_167:
  if (*(void *)(a1 + 136) == *(void *)(a1 + 144)) {
    goto LABEL_209;
  }
  int v133 = v26;
  uint64_t v88 = v2;
  sub_21597885C(&__src, v8, &__p, (uint64_t)&__p);
  uint64_t v89 = *(void *)(a1 + 136);
  int v90 = v142;
  uint64_t v91 = *(void *)(a1 + 144) - v89;
  if (!v91) {
    goto LABEL_188;
  }
  unint64_t v92 = v91 / 24;
  size_t v93 = __n;
  if (v142 >= 0) {
    size_t v94 = v142;
  }
  else {
    size_t v94 = __n;
  }
  if (v142 < 0)
  {
    int v135 = v142;
    uint64_t v103 = 0;
    int v104 = __p;
    if (v92 <= 1) {
      uint64_t v105 = 1;
    }
    else {
      uint64_t v105 = v91 / 24;
    }
    BOOL v97 = 1;
    do
    {
      uint64_t v106 = *(unsigned __int8 *)(v89 + 23);
      int v107 = (char)v106;
      if ((v106 & 0x80u) != 0) {
        uint64_t v106 = *(void *)(v89 + 8);
      }
      if (v94 == v106)
      {
        int v108 = v107 >= 0 ? (const void *)v89 : *(const void **)v89;
        if (!memcmp(v104, v108, v93))
        {
          int v133 = 1;
          int v70 = 5;
          goto LABEL_203;
        }
      }
      BOOL v97 = ++v103 < v92;
      v89 += 24;
    }
    while (v105 != v103);
    int v70 = 0;
LABEL_203:
    uint64_t v2 = v88;
    int v90 = v135;
    goto LABEL_204;
  }
  if (!v142)
  {
    uint64_t v114 = *(unsigned __int8 *)(v89 + 23);
    if ((v114 & 0x80u) != 0) {
      uint64_t v114 = *(void *)(v89 + 8);
    }
    if (v114 != v142)
    {
      unint64_t v119 = 0;
      if (v92 <= 1) {
        uint64_t v120 = 1;
      }
      else {
        uint64_t v120 = v92;
      }
      uint64_t v121 = v120 - 1;
      char v122 = (uint64_t *)(v89 + 32);
      uint64_t v2 = v88;
      while (v121 != v119)
      {
        ++v119;
        uint64_t v123 = *((unsigned __int8 *)v122 + 15);
        uint64_t v125 = *v122;
        v122 += 3;
        uint64_t v124 = v125;
        if ((v123 & 0x80u) != 0) {
          uint64_t v123 = v124;
        }
        if (v94 == v123)
        {
          BOOL v97 = v119 < v92;
          int v133 = 1;
          int v70 = 5;
          goto LABEL_204;
        }
      }
      BOOL v97 = 0;
      int v70 = 0;
      goto LABEL_204;
    }
    uint64_t v2 = v88;
    int v26 = 1;
LABEL_208:
    uint64_t v25 = 2;
    goto LABEL_245;
  }
  uint64_t v95 = 0;
  uint64_t v96 = v92 <= 1 ? 1 : v91 / 24;
  BOOL v97 = 1;
  do
  {
    int v98 = (unsigned __int8 *)(v89 + 24 * v95);
    uint64_t v99 = v98[23];
    int v100 = (char)v99;
    if ((v99 & 0x80u) != 0) {
      uint64_t v99 = *((void *)v98 + 1);
    }
    if (v94 == v99)
    {
      if (v100 < 0) {
        int v98 = *(unsigned __int8 **)v98;
      }
      p_p = &__p;
      uint64_t v102 = v142;
      while (*(unsigned __int8 *)p_p == *v98)
      {
        p_p = (void **)((char *)p_p + 1);
        ++v98;
        if (!--v102)
        {
          int v133 = 1;
          int v70 = 5;
          uint64_t v2 = v88;
          goto LABEL_204;
        }
      }
    }
    BOOL v97 = ++v95 < v92;
  }
  while (v95 != v96);
LABEL_188:
  BOOL v97 = 0;
  int v70 = 0;
  uint64_t v2 = v88;
LABEL_204:
  if (v90 < 0) {
    operator delete(__p);
  }
  int v26 = v133;
  if (!v97)
  {
LABEL_209:
    if ((char)__src < 0)
    {
      int v112 = *(_DWORD *)(a1 + 164);
    }
    else
    {
      int v109 = *(_DWORD *)(a1 + 160);
      uint64_t v110 = *(void *)(*(void *)(a1 + 24) + 16);
      int v111 = *(_DWORD *)(v110 + 4 * __src);
      if (((v111 & v109) != 0 || __src == 95 && (v109 & 0x80) != 0)
        && (SHIBYTE(__src) & 0x80000000) == 0
        && ((*(_DWORD *)(v110 + 4 * HIBYTE(__src)) & v109) != 0 || (v109 & 0x80) != 0 && HIBYTE(__src) == 95))
      {
        goto LABEL_227;
      }
      int v112 = *(_DWORD *)(a1 + 164);
      if ((v112 & v111) != 0 || __src == 95 && (v112 & 0x80) != 0)
      {
LABEL_226:
        int v113 = v26;
LABEL_228:
        int v26 = v113;
        uint64_t v25 = 2;
        goto LABEL_245;
      }
    }
    if ((SHIBYTE(__src) & 0x80000000) == 0)
    {
      if ((*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * HIBYTE(__src)) & v112) == 0)
      {
        int v113 = 1;
        if (HIBYTE(__src) != 95 || (v112 & 0x80) == 0) {
          goto LABEL_228;
        }
      }
      goto LABEL_226;
    }
LABEL_227:
    int v113 = 1;
    goto LABEL_228;
  }
LABEL_207:
  if (v70) {
    goto LABEL_208;
  }
  uint64_t v25 = 2;
  unsigned __int8 v28 = **(unsigned char **)(v2 + 16);
  LOBYTE(__src) = v28;
  if (*(unsigned char *)(a1 + 169))
  {
LABEL_35:
    unsigned __int8 v28 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), (char)v28);
    LOBYTE(__src) = v28;
  }
LABEL_36:
  unint64_t v29 = *(unsigned __int8 **)(a1 + 40);
  unint64_t v30 = *(void *)(a1 + 48) - (void)v29;
  if (v30)
  {
    if (v30 <= 1) {
      unint64_t v30 = 1;
    }
    while (1)
    {
      int v31 = *v29++;
      if (v31 == v28) {
        break;
      }
      if (!--v30) {
        goto LABEL_41;
      }
    }
LABEL_244:
    int v26 = 1;
    goto LABEL_245;
  }
LABEL_41:
  unsigned int v32 = *(_DWORD *)(a1 + 164);
  if (v32 || *(void *)(a1 + 64) != *(void *)(a1 + 72))
  {
    if ((v28 & 0x80) != 0 || (*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * v28) & v32) == 0)
    {
      int v34 = (v32 >> 7) & 1;
      char v33 = v28 == 95 ? v34 : 0;
    }
    else
    {
      char v33 = 1;
    }
    uint64_t v35 = *(void **)(a1 + 72);
    unint64_t v36 = memchr(*(void **)(a1 + 64), (char)v28, (size_t)v35 - *(void *)(a1 + 64));
    uint64_t v37 = v36 ? v36 : v35;
    if ((v33 & 1) == 0 && v37 == v35) {
      goto LABEL_244;
    }
  }
  uint64_t v38 = *(void *)(a1 + 88);
  uint64_t v39 = *(void *)(a1 + 96);
  if (v38 == v39) {
    goto LABEL_128;
  }
  if (!*(unsigned char *)(a1 + 170))
  {
    unsigned int v40 = 1;
    char v138 = 1;
    LOWORD(v136) = v28;
    uint64_t v41 = v39 - v38;
    if (v41) {
      goto LABEL_59;
    }
LABEL_155:
    BOOL v48 = 0;
    if ((v40 & 0x80) != 0) {
      goto LABEL_126;
    }
    goto LABEL_127;
  }
  char v142 = 1;
  LOWORD(__p) = v28;
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 32) + 32))(&v136);
  if (v142 < 0) {
    operator delete(__p);
  }
  uint64_t v38 = *(void *)(a1 + 88);
  unsigned int v40 = v138;
  uint64_t v41 = *(void *)(a1 + 96) - v38;
  if (!v41) {
    goto LABEL_155;
  }
LABEL_59:
  uint64_t v134 = v25;
  int v131 = v26;
  uint64_t v129 = v2;
  uint64_t v42 = 0;
  unint64_t v43 = v41 / 48;
  char v126 = v40;
  if ((v40 & 0x80u) == 0) {
    unint64_t v44 = &v136;
  }
  else {
    unint64_t v44 = v136;
  }
  if ((v40 & 0x80u) == 0) {
    size_t v45 = v40;
  }
  else {
    size_t v45 = v137;
  }
  if (v43 <= 1) {
    uint64_t v46 = 1;
  }
  else {
    uint64_t v46 = v41 / 48;
  }
  uint64_t v47 = (unsigned __int8 *)(v38 + 47);
  BOOL v48 = 1;
  while (2)
  {
    int v49 = (char)*(v47 - 24);
    if (v49 >= 0) {
      long long v50 = (char *)(v47 - 47);
    }
    else {
      long long v50 = *(char **)(v47 - 47);
    }
    if (v49 >= 0) {
      size_t v51 = *(v47 - 24);
    }
    else {
      size_t v51 = *(void *)(v47 - 39);
    }
    if (v45 >= v51) {
      size_t v52 = v51;
    }
    else {
      size_t v52 = v45;
    }
    int v53 = memcmp(v50, v44, v52);
    if (v53)
    {
      if (v53 < 0) {
        goto LABEL_84;
      }
    }
    else if (v51 <= v45)
    {
LABEL_84:
      int v54 = (char)*v47;
      if (v54 >= 0) {
        char v55 = (char *)(v47 - 23);
      }
      else {
        char v55 = *(char **)(v47 - 23);
      }
      if (v54 >= 0) {
        size_t v56 = *v47;
      }
      else {
        size_t v56 = *(void *)(v47 - 15);
      }
      if (v56 >= v45) {
        size_t v57 = v45;
      }
      else {
        size_t v57 = v56;
      }
      int v58 = memcmp(v44, v55, v57);
      if (v58)
      {
        if (v58 < 0)
        {
LABEL_95:
          int v26 = 1;
          uint64_t v2 = v129;
          uint64_t v25 = v134;
          if ((v126 & 0x80) == 0) {
            goto LABEL_127;
          }
          goto LABEL_126;
        }
      }
      else if (v45 <= v56)
      {
        goto LABEL_95;
      }
    }
    BOOL v48 = ++v42 < v43;
    v47 += 48;
    if (v46 != v42) {
      continue;
    }
    break;
  }
  uint64_t v2 = v129;
  int v26 = v131;
  uint64_t v25 = v134;
  if ((v126 & 0x80) == 0) {
    goto LABEL_127;
  }
LABEL_126:
  operator delete(v136);
LABEL_127:
  if (v48) {
    goto LABEL_245;
  }
LABEL_128:
  if (*(void *)(a1 + 136) == *(void *)(a1 + 144))
  {
LABEL_239:
    if ((v28 & 0x80) != 0) {
      goto LABEL_245;
    }
    unsigned int v115 = *(_DWORD *)(a1 + 160);
    if ((*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * v28) & v115) == 0)
    {
      int v116 = (v115 >> 7) & 1;
      if (v28 != 95) {
        int v116 = 0;
      }
      if (v116 != 1) {
        goto LABEL_245;
      }
    }
    goto LABEL_244;
  }
  sub_21597885C(&__src, a1 + 16, (unsigned char *)&__src + 1, (uint64_t)&__p);
  uint64_t v71 = *(void *)(a1 + 136);
  uint64_t v72 = v142;
  uint64_t v73 = *(void *)(a1 + 144) - v71;
  if (!v73)
  {
    if (v142 < 0) {
      operator delete(__p);
    }
LABEL_238:
    unsigned __int8 v28 = __src;
    goto LABEL_239;
  }
  int v132 = v26;
  uint64_t v130 = v2;
  unint64_t v74 = 0;
  unint64_t v75 = v73 / 24;
  int v76 = __p;
  size_t v77 = __n;
  if (v142 >= 0) {
    size_t v78 = v142;
  }
  else {
    size_t v78 = __n;
  }
  if (v75 <= 1) {
    uint64_t v79 = 1;
  }
  else {
    uint64_t v79 = v73 / 24;
  }
  BOOL v80 = 1;
  while (2)
  {
    int v81 = (unsigned __int8 **)(v71 + 24 * v74);
    char v82 = (unsigned __int8 *)*((unsigned __int8 *)v81 + 23);
    int v83 = (char)v82;
    if ((char)v82 < 0) {
      char v82 = v81[1];
    }
    if ((unsigned __int8 *)v78 != v82)
    {
LABEL_149:
      if (++v74 == v79)
      {
        if ((v72 & 0x80) != 0) {
LABEL_236:
        }
          operator delete(__p);
        uint64_t v2 = v130;
        int v26 = v132;
        goto LABEL_238;
      }
      goto LABEL_153;
    }
    if (v83 >= 0) {
      uint64_t v84 = (unsigned __int8 *)(v71 + 24 * v74);
    }
    else {
      uint64_t v84 = *v81;
    }
    if ((v72 & 0x80) == 0)
    {
      if (!v72)
      {
LABEL_157:
        uint64_t v2 = v130;
        int v26 = 1;
        if (!v80) {
          goto LABEL_238;
        }
        goto LABEL_245;
      }
      uint64_t v85 = 0;
      while (*((unsigned __int8 *)&__p + v85) == v84[v85])
      {
        if (v72 == ++v85) {
          goto LABEL_157;
        }
      }
      goto LABEL_149;
    }
    BOOL v127 = v80;
    uint64_t v86 = v76;
    size_t v87 = v77;
    if (memcmp(v76, v84, v77))
    {
      ++v74;
      size_t v77 = v87;
      int v76 = v86;
      if (v74 == v79) {
        goto LABEL_236;
      }
LABEL_153:
      BOOL v80 = v74 < v75;
      continue;
    }
    break;
  }
  operator delete(__p);
  uint64_t v2 = v130;
  int v26 = 1;
  if (!v127) {
    goto LABEL_238;
  }
LABEL_245:
  if (v26 == *(unsigned __int8 *)(a1 + 168))
  {
    uint64_t v117 = 0;
    int v118 = -993;
  }
  else
  {
    *(void *)(v2 + 16) += v25;
    uint64_t v117 = *(void *)(a1 + 8);
    int v118 = -995;
  }
  *(_DWORD *)uint64_t v2 = v118;
  *(void *)(v2 + 80) = v117;
}

void sub_2159783BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2159783DC(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

std::locale *sub_215978438(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)&unk_26C673688;
  locale = a1[17].__locale_;
  if (locale)
  {
    uint64_t v3 = a1[18].__locale_;
    unint64_t v4 = a1[17].__locale_;
    if (v3 != locale)
    {
      do
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*((void **)v3 - 3));
        }
        uint64_t v3 = (std::locale::__imp *)((char *)v3 - 24);
      }
      while (v3 != locale);
      unint64_t v4 = a1[17].__locale_;
    }
    a1[18].__locale_ = locale;
    operator delete(v4);
  }
  unsigned int v5 = a1[14].__locale_;
  if (v5)
  {
    a1[15].__locale_ = v5;
    operator delete(v5);
  }
  char v6 = a1[11].__locale_;
  if (v6)
  {
    char v7 = a1[12].__locale_;
    uint64_t v8 = a1[11].__locale_;
    if (v7 == v6)
    {
LABEL_21:
      a1[12].__locale_ = v6;
      operator delete(v8);
      goto LABEL_22;
    }
    while (1)
    {
      if (*((char *)v7 - 1) < 0)
      {
        operator delete(*((void **)v7 - 3));
        if (*((char *)v7 - 25) < 0) {
LABEL_19:
        }
          operator delete(*((void **)v7 - 6));
      }
      else if (*((char *)v7 - 25) < 0)
      {
        goto LABEL_19;
      }
      char v7 = (std::locale::__imp *)((char *)v7 - 48);
      if (v7 == v6)
      {
        uint64_t v8 = a1[11].__locale_;
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v9 = a1[8].__locale_;
  if (v9)
  {
    a1[9].__locale_ = v9;
    operator delete(v9);
  }
  uint64_t v10 = a1[5].__locale_;
  if (v10)
  {
    a1[6].__locale_ = v10;
    operator delete(v10);
  }
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)&unk_26C673340;
  uint64_t v11 = a1[1].__locale_;
  if (v11) {
    (*(void (**)(std::locale::__imp *))(*(void *)v11 + 8))(v11);
  }
  return a1;
}

void sub_2159785AC(unsigned char *__src@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  size_t v5 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v5 <= 0x16)
  {
    HIBYTE(v21) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = &__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v5);
    p_dst = (long long *)((char *)p_dst + v5);
    goto LABEL_9;
  }
  uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v5 | 7) != 0x17) {
    uint64_t v10 = v5 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (long long *)operator new(v10 + 1);
  *((void *)&__dst + 1) = v5;
  int64_t v21 = v11 | 0x8000000000000000;
  *(void *)&long long __dst = p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  *(unsigned char *)p_dst = 0;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  if (SHIBYTE(v21) < 0)
  {
    if (!*((void *)&__dst + 1)) {
      goto LABEL_17;
    }
    int v12 = (const char *)__dst;
  }
  else
  {
    if (!HIBYTE(v21)) {
      return;
    }
    int v12 = (const char *)&__dst;
  }
  std::__get_collation_name(&v19, v12);
  *(_OWORD *)a4 = *(_OWORD *)&v19.__r_.__value_.__l.__data_;
  unint64_t v13 = v19.__r_.__value_.__r.__words[2];
  *(void *)(a4 + 16) = *((void *)&v19.__r_.__value_.__l + 2);
  unint64_t v14 = HIBYTE(v13);
  if ((v14 & 0x80u) != 0) {
    unint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    goto LABEL_17;
  }
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
    if (HIBYTE(v21) >= 3u) {
      return;
    }
    goto LABEL_23;
  }
  if (*((void *)&__dst + 1) < 3uLL)
  {
LABEL_23:
    (*(void (**)(std::string *__return_ptr))(**(void **)(a2 + 16) + 32))(&v19);
    if (*(char *)(a4 + 23) < 0) {
      operator delete(*(void **)a4);
    }
    *(std::string *)a4 = v19;
    if (*(char *)(a4 + 23) < 0)
    {
      uint64_t v16 = *(void *)(a4 + 8);
      if (v16 == 1 || v16 == 12)
      {
        if (&__dst != (long long *)a4)
        {
          if (v21 >= 0) {
            uint64_t v17 = &__dst;
          }
          else {
            uint64_t v17 = (long long *)__dst;
          }
          if (v21 >= 0) {
            size_t v18 = HIBYTE(v21);
          }
          else {
            size_t v18 = *((void *)&__dst + 1);
          }
          sub_21573ABD0((void **)a4, v17, v18);
        }
      }
      else
      {
        **(unsigned char **)a4 = 0;
        *(void *)(a4 + 8) = 0;
      }
    }
    else
    {
      int v15 = *(unsigned __int8 *)(a4 + 23);
      if (v15 == 1 || v15 == 12)
      {
        if (&__dst != (long long *)a4)
        {
          if (SHIBYTE(v21) < 0)
          {
            sub_21573AB08((void *)a4, (void *)__dst, *((size_t *)&__dst + 1));
          }
          else
          {
            *(_OWORD *)a4 = __dst;
            *(void *)(a4 + 16) = v21;
          }
        }
      }
      else
      {
        *(unsigned char *)a4 = 0;
        *(unsigned char *)(a4 + 23) = 0;
      }
    }
  }
LABEL_17:
  if (SHIBYTE(v21) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_215978818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (*(char *)(v17 + 23) < 0)
  {
    operator delete(*(void **)v17);
    if ((a17 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a17 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_21597885C(unsigned char *__src@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  size_t v5 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v5 <= 0x16)
  {
    HIBYTE(v19) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = (void **)&__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v5);
    p_dst = (void **)((char *)p_dst + v5);
    goto LABEL_9;
  }
  uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v5 | 7) != 0x17) {
    uint64_t v10 = v5 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (void **)operator new(v10 + 1);
  size_t v18 = v5;
  int64_t v19 = v11 | 0x8000000000000000;
  long long __dst = p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  *(unsigned char *)p_dst = 0;
  size_t v12 = HIBYTE(v19);
  if (v19 >= 0) {
    unint64_t v13 = (void **)&__dst;
  }
  else {
    unint64_t v13 = __dst;
  }
  if (v19 < 0) {
    size_t v12 = v18;
  }
  (*(void (**)(void, void **, char *))(**(void **)(a2 + 16) + 32))(*(void *)(a2 + 16), v13, (char *)v13 + v12);
  uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
  int v15 = (char)v14;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14 == 1)
  {
LABEL_25:
    if ((SHIBYTE(v19) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_26;
  }
  if (v14 == 12)
  {
    if (v15 >= 0) {
      uint64_t v16 = (unsigned char *)a4;
    }
    else {
      uint64_t v16 = *(unsigned char **)a4;
    }
    v16[11] = v16[3];
    if (SHIBYTE(v19) < 0) {
      goto LABEL_26;
    }
    return;
  }
  if ((v15 & 0x80000000) == 0)
  {
    *(unsigned char *)a4 = 0;
    *(unsigned char *)(a4 + 23) = 0;
    goto LABEL_25;
  }
  **(unsigned char **)a4 = 0;
  *(void *)(a4 + 8) = 0;
  if (SHIBYTE(v19) < 0) {
LABEL_26:
  }
    operator delete(__dst);
}

void sub_2159789F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215978A0C()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 5);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_215978A50(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215978A64(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = (uint64_t)a2;
  if (!*(unsigned char *)(a1 + 170))
  {
    uint64_t v16 = a2[23];
    if (a2[23] < 0)
    {
      if (*((void *)a2 + 1) != 1) {
        goto LABEL_74;
      }
    }
    else if (v16 != 1)
    {
LABEL_74:
      sub_215979CF0();
    }
    if (*(char *)(a3 + 23) < 0)
    {
      if (*(void *)(a3 + 8) != 1) {
        goto LABEL_74;
      }
    }
    else if (*(unsigned char *)(a3 + 23) != 1)
    {
      goto LABEL_74;
    }
    if (!*(unsigned char *)(a1 + 169))
    {
LABEL_67:
      *(_OWORD *)long long __p = *(_OWORD *)v4;
      uint64_t v49 = *(void *)(v4 + 16);
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      *(void *)uint64_t v4 = 0;
      *(_OWORD *)long long v50 = *(_OWORD *)v3;
      uint64_t v51 = *(void *)(v3 + 16);
      *(void *)(v3 + 8) = 0;
      *(void *)(v3 + 16) = 0;
      *(void *)uint64_t v3 = 0;
      unint64_t v39 = *(void *)(a1 + 96);
      if (v39 < *(void *)(a1 + 104))
      {
        long long v40 = *(_OWORD *)__p;
        *(void *)(v39 + 16) = v49;
        *(_OWORD *)unint64_t v39 = v40;
        __p[1] = 0;
        uint64_t v49 = 0;
        __p[0] = 0;
        uint64_t v41 = v51;
        *(_OWORD *)(v39 + 24) = *(_OWORD *)v50;
        *(void *)(v39 + 40) = v41;
        v50[1] = 0;
        uint64_t v51 = 0;
        v50[0] = 0;
        *(void *)(a1 + 96) = v39 + 48;
        if (SHIBYTE(v49) < 0) {
          goto LABEL_69;
        }
        return;
      }
      uint64_t v42 = sub_215979D48((void **)(a1 + 88), (uint64_t)__p);
      int v43 = SHIBYTE(v51);
      *(void *)(a1 + 96) = v42;
      if ((v43 & 0x80000000) == 0)
      {
        if (SHIBYTE(v49) < 0) {
          goto LABEL_69;
        }
        return;
      }
      operator delete(v50[0]);
      if ((SHIBYTE(v49) & 0x80000000) == 0) {
        return;
      }
LABEL_69:
      operator delete(__p[0]);
      return;
    }
    int v34 = a2;
    if ((v16 & 0x80) != 0) {
      int v34 = *(char **)a2;
    }
    char v35 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v34);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = v35;
      unint64_t v36 = (char *)v3;
      if ((*(char *)(v3 + 23) & 0x80000000) == 0) {
        goto LABEL_64;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = v35;
      unint64_t v36 = (char *)v3;
      if ((*(char *)(v3 + 23) & 0x80000000) == 0)
      {
LABEL_64:
        char v37 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v36);
        uint64_t v38 = (unsigned char *)v3;
        if (*(char *)(v3 + 23) < 0) {
          uint64_t v38 = *(unsigned char **)v3;
        }
        *uint64_t v38 = v37;
        goto LABEL_67;
      }
    }
    unint64_t v36 = *(char **)v3;
    goto LABEL_64;
  }
  if (*(unsigned char *)(a1 + 169))
  {
    for (unint64_t i = 0; ; ++i)
    {
      unint64_t v7 = *(unsigned __int8 *)(v4 + 23);
      if (*(char *)(v4 + 23) < 0)
      {
        if (i >= *(void *)(v4 + 8))
        {
LABEL_13:
          for (unint64_t j = 0; ; ++j)
          {
            unint64_t v12 = *(unsigned __int8 *)(v3 + 23);
            if (*(char *)(v3 + 23) < 0)
            {
              if (j >= *(void *)(v3 + 8)) {
                goto LABEL_44;
              }
            }
            else if (j >= v12)
            {
              goto LABEL_44;
            }
            uint64_t v13 = v3;
            if ((v12 & 0x80) != 0) {
              uint64_t v13 = *(void *)v3;
            }
            char v14 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *(char *)(v13 + j));
            uint64_t v15 = v3;
            if (*(char *)(v3 + 23) < 0) {
              uint64_t v15 = *(void *)v3;
            }
            *(unsigned char *)(v15 + j) = v14;
          }
        }
      }
      else if (i >= v7)
      {
        goto LABEL_13;
      }
      uint64_t v8 = v4;
      if ((v7 & 0x80) != 0) {
        uint64_t v8 = *(void *)v4;
      }
      char v9 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *(char *)(v8 + i));
      uint64_t v10 = v4;
      if (*(char *)(v4 + 23) < 0) {
        uint64_t v10 = *(void *)v4;
      }
      *(unsigned char *)(v10 + i) = v9;
    }
  }
  for (unint64_t k = 0; ; ++k)
  {
    unint64_t v19 = a2[23];
    if (a2[23] < 0) {
      break;
    }
    if (k >= v19) {
      goto LABEL_35;
    }
LABEL_33:
    size_t v18 = a2;
    if ((v19 & 0x80) != 0)
    {
      size_t v18 = *(char **)a2;
      char v20 = *(char **)a2;
    }
    else
    {
      char v20 = a2;
    }
    v20[k] = v18[k];
  }
  if (k < *((void *)a2 + 1)) {
    goto LABEL_33;
  }
LABEL_35:
  for (unint64_t m = 0; ; ++m)
  {
    unint64_t v23 = *(unsigned __int8 *)(a3 + 23);
    if (*(char *)(a3 + 23) < 0) {
      break;
    }
    if (m >= v23) {
      goto LABEL_44;
    }
LABEL_42:
    uint64_t v22 = a3;
    if ((v23 & 0x80) != 0)
    {
      uint64_t v22 = *(void *)a3;
      uint64_t v24 = *(void *)a3;
    }
    else
    {
      uint64_t v24 = a3;
    }
    *(unsigned char *)(v24 + m) = *(unsigned char *)(v22 + m);
  }
  if (m < *(void *)(a3 + 8)) {
    goto LABEL_42;
  }
LABEL_44:
  if (*(char *)(v4 + 23) < 0)
  {
    uint64_t v26 = v4;
    uint64_t v4 = *(void *)v4;
    uint64_t v25 = *(void *)(v26 + 8);
  }
  else
  {
    uint64_t v25 = *(unsigned __int8 *)(v4 + 23);
  }
  sub_215979B44(a1 + 16, v4, (char *)(v4 + v25));
  if (*(char *)(v3 + 23) < 0)
  {
    uint64_t v28 = v3;
    uint64_t v3 = *(void *)v3;
    uint64_t v27 = *(void *)(v28 + 8);
  }
  else
  {
    uint64_t v27 = *(unsigned __int8 *)(v3 + 23);
  }
  sub_215979B44(a1 + 16, v3, (char *)(v3 + v27));
  *(_OWORD *)long long __p = *(_OWORD *)v46;
  uint64_t v49 = v47;
  *(_OWORD *)long long v50 = *(_OWORD *)v44;
  uint64_t v51 = v45;
  unint64_t v29 = *(void *)(a1 + 96);
  if (v29 >= *(void *)(a1 + 104))
  {
    unsigned int v32 = sub_215979D48((void **)(a1 + 88), (uint64_t)__p);
    int v33 = SHIBYTE(v51);
    *(void *)(a1 + 96) = v32;
    if (v33 < 0)
    {
      operator delete(v50[0]);
      if ((SHIBYTE(v49) & 0x80000000) == 0) {
        return;
      }
    }
    else if ((SHIBYTE(v49) & 0x80000000) == 0)
    {
      return;
    }
    goto LABEL_69;
  }
  long long v30 = *(_OWORD *)__p;
  *(void *)(v29 + 16) = v49;
  *(_OWORD *)unint64_t v29 = v30;
  __p[1] = 0;
  uint64_t v49 = 0;
  __p[0] = 0;
  uint64_t v31 = v51;
  *(_OWORD *)(v29 + 24) = *(_OWORD *)v50;
  *(void *)(v29 + 40) = v31;
  v50[1] = 0;
  uint64_t v51 = 0;
  v50[0] = 0;
  *(void *)(a1 + 96) = v29 + 48;
  if (SHIBYTE(v49) < 0) {
    goto LABEL_69;
  }
}

void sub_215978FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_2159783DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215978FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void sub_215978FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 169))
  {
    unsigned __int8 v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
    __int16 v6 = v5 | (unsigned __int16)((*(unsigned __int16 (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a3) << 8);
    uint64_t v8 = *(char **)(a1 + 120);
    unint64_t v7 = *(void *)(a1 + 128);
    if ((unint64_t)v8 >= v7)
    {
      char v9 = (char **)(a1 + 112);
      uint64_t v10 = *(char **)(a1 + 112);
      uint64_t v11 = v8 - v10;
      if (v8 - v10 > -3)
      {
        uint64_t v12 = v11 >> 1;
        unint64_t v13 = v7 - (void)v10;
        if (v13 <= (v11 >> 1) + 1) {
          unint64_t v14 = v12 + 1;
        }
        else {
          unint64_t v14 = v13;
        }
        if (v13 >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v15 = v14;
        }
        if (!v15)
        {
          uint64_t v16 = 0;
          uint64_t v17 = (_WORD *)(2 * v12);
          size_t v18 = 0;
          *(_WORD *)(2 * v12) = v6;
          uint64_t v19 = 2 * v12 + 2;
          char v20 = (char *)(v8 - v10);
          if (v8 == v10) {
            goto LABEL_64;
          }
LABEL_30:
          unint64_t v30 = (unint64_t)(v20 - 2);
          if (v30 < 0x1E) {
            goto LABEL_71;
          }
          if (v8 - v16 - (v11 & 0xFFFFFFFFFFFFFFFELL) < 0x20) {
            goto LABEL_71;
          }
          uint64_t v31 = (v30 >> 1) + 1;
          unint64_t v32 = 2 * (v31 & 0xFFFFFFFFFFFFFFF0);
          int v33 = &v8[-v32];
          uint64_t v17 = (_WORD *)((char *)v17 - v32);
          int v34 = &v16[2 * v12 - 16];
          char v35 = v8 - 16;
          unint64_t v36 = v31 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            long long v37 = *(_OWORD *)v35;
            *(v34 - 1) = *((_OWORD *)v35 - 1);
            *int v34 = v37;
            v34 -= 2;
            v35 -= 32;
            v36 -= 16;
          }
          while (v36);
          uint64_t v8 = v33;
          if (v31 != (v31 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_71:
            do
            {
              __int16 v38 = *((_WORD *)v8 - 1);
              v8 -= 2;
              *--uint64_t v17 = v38;
            }
            while (v8 != v10);
          }
LABEL_63:
          uint64_t v8 = *v9;
          goto LABEL_64;
        }
        if ((v15 & 0x8000000000000000) == 0)
        {
          uint64_t v16 = operator new(2 * v15);
          uint64_t v17 = &v16[2 * v12];
          size_t v18 = &v16[2 * v15];
          *uint64_t v17 = v6;
          uint64_t v19 = (uint64_t)(v17 + 1);
          char v20 = (char *)(v8 - v10);
          if (v8 == v10) {
            goto LABEL_64;
          }
          goto LABEL_30;
        }
LABEL_68:
        sub_215738AD8();
      }
LABEL_67:
      sub_21597592C();
    }
LABEL_28:
    *(_WORD *)uint64_t v8 = v6;
    uint64_t v19 = (uint64_t)(v8 + 2);
    goto LABEL_66;
  }
  char v9 = (char **)(a1 + 112);
  __int16 v6 = a2 | (unsigned __int16)((_WORD)a3 << 8);
  uint64_t v8 = *(char **)(a1 + 120);
  unint64_t v21 = *(void *)(a1 + 128);
  if (*(unsigned char *)(a1 + 170))
  {
    if ((unint64_t)v8 < v21) {
      goto LABEL_28;
    }
    uint64_t v22 = *v9;
    uint64_t v23 = v8 - *v9;
    if (v23 <= -3) {
      goto LABEL_67;
    }
    uint64_t v24 = v23 >> 1;
    unint64_t v25 = v21 - (void)v22;
    if (v25 <= (v23 >> 1) + 1) {
      unint64_t v26 = v24 + 1;
    }
    else {
      unint64_t v26 = v25;
    }
    if (v25 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v27 = v26;
    }
    if (v27)
    {
      if (v27 < 0) {
        goto LABEL_68;
      }
      uint64_t v28 = operator new(2 * v27);
      uint64_t v17 = &v28[2 * v24];
      size_t v18 = &v28[2 * v27];
      *uint64_t v17 = v6;
      uint64_t v19 = (uint64_t)(v17 + 1);
      unint64_t v29 = (char *)(v8 - v22);
      if (v8 == v22) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v17 = (_WORD *)(2 * v24);
      size_t v18 = 0;
      *(_WORD *)(2 * v24) = v6;
      uint64_t v19 = 2 * v24 + 2;
      unint64_t v29 = (char *)(v8 - v22);
      if (v8 == v22) {
        goto LABEL_64;
      }
    }
    unint64_t v47 = (unint64_t)(v29 - 2);
    if (v47 < 0x1E) {
      goto LABEL_72;
    }
    if ((unint64_t)(v8 - &v28[v23 & 0xFFFFFFFFFFFFFFFELL]) < 0x20) {
      goto LABEL_72;
    }
    uint64_t v48 = (v47 >> 1) + 1;
    unint64_t v49 = 2 * (v48 & 0xFFFFFFFFFFFFFFF0);
    long long v50 = &v8[-v49];
    uint64_t v17 = (_WORD *)((char *)v17 - v49);
    uint64_t v51 = &v28[2 * v24 - 16];
    size_t v52 = v8 - 16;
    unint64_t v53 = v48 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      long long v54 = *(_OWORD *)v52;
      *(v51 - 1) = *((_OWORD *)v52 - 1);
      *uint64_t v51 = v54;
      v51 -= 2;
      v52 -= 32;
      v53 -= 16;
    }
    while (v53);
    uint64_t v8 = v50;
    if (v48 != (v48 & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_72:
      do
      {
        __int16 v55 = *((_WORD *)v8 - 1);
        v8 -= 2;
        *--uint64_t v17 = v55;
      }
      while (v8 != v22);
    }
    goto LABEL_63;
  }
  if ((unint64_t)v8 < v21) {
    goto LABEL_28;
  }
  unint64_t v39 = *v9;
  uint64_t v40 = v8 - *v9;
  if (v40 <= -3) {
    goto LABEL_67;
  }
  uint64_t v41 = v40 >> 1;
  unint64_t v42 = v21 - (void)v39;
  if (v42 <= (v40 >> 1) + 1) {
    unint64_t v43 = v41 + 1;
  }
  else {
    unint64_t v43 = v42;
  }
  if (v42 >= 0x7FFFFFFFFFFFFFFELL) {
    uint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v44 = v43;
  }
  if (!v44)
  {
    uint64_t v45 = 0;
    uint64_t v17 = (_WORD *)(2 * v41);
    size_t v18 = 0;
    *(_WORD *)(2 * v41) = v6;
    uint64_t v19 = 2 * v41 + 2;
    uint64_t v46 = (char *)(v8 - v39);
    if (v8 == v39) {
      goto LABEL_64;
    }
    goto LABEL_57;
  }
  if (v44 < 0) {
    goto LABEL_68;
  }
  uint64_t v45 = operator new(2 * v44);
  uint64_t v17 = &v45[2 * v41];
  size_t v18 = &v45[2 * v44];
  *uint64_t v17 = v6;
  uint64_t v19 = (uint64_t)(v17 + 1);
  uint64_t v46 = (char *)(v8 - v39);
  if (v8 != v39)
  {
LABEL_57:
    unint64_t v56 = (unint64_t)(v46 - 2);
    if (v56 < 0x1E) {
      goto LABEL_73;
    }
    if ((unint64_t)(v8 - &v45[v40 & 0xFFFFFFFFFFFFFFFELL]) < 0x20) {
      goto LABEL_73;
    }
    uint64_t v57 = (v56 >> 1) + 1;
    unint64_t v58 = 2 * (v57 & 0xFFFFFFFFFFFFFFF0);
    int v59 = &v8[-v58];
    uint64_t v17 = (_WORD *)((char *)v17 - v58);
    int v60 = &v45[2 * v41 - 16];
    size_t v61 = v8 - 16;
    unint64_t v62 = v57 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      long long v63 = *(_OWORD *)v61;
      *(v60 - 1) = *((_OWORD *)v61 - 1);
      *int v60 = v63;
      v60 -= 2;
      v61 -= 32;
      v62 -= 16;
    }
    while (v62);
    uint64_t v8 = v59;
    if (v57 != (v57 & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_73:
      do
      {
        __int16 v64 = *((_WORD *)v8 - 1);
        v8 -= 2;
        *--uint64_t v17 = v64;
      }
      while (v8 != v39);
    }
    goto LABEL_63;
  }
LABEL_64:
  *(void *)(a1 + 112) = v17;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v18;
  if (v8) {
    operator delete(v8);
  }
LABEL_66:
  *(void *)(a1 + 120) = v19;
}

void sub_2159793F0()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 1);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_215979434(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215979448(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = (unint64_t)&a3[-a2];
  if ((unint64_t)&a3[-a2] >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v5 > 0x16)
  {
    uint64_t v16 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v16 = v5 | 7;
    }
    uint64_t v17 = v16 + 1;
    p_p = operator new(v16 + 1);
    unint64_t v25 = v5;
    int64_t v26 = v17 | 0x8000000000000000;
    long long __p = p_p;
    if ((char *)a2 != a3) {
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v10 = p_p;
    goto LABEL_16;
  }
  HIBYTE(v26) = (_BYTE)a3 - a2;
  p_p = &__p;
  if ((char *)a2 == a3) {
    goto LABEL_13;
  }
LABEL_4:
  if (v5 < 0x20 || (unint64_t)p_p - a2 < 0x20)
  {
    uint64_t v10 = p_p;
    uint64_t v11 = (char *)a2;
  }
  else
  {
    uint64_t v10 = (char *)p_p + (v5 & 0xFFFFFFFFFFFFFFE0);
    uint64_t v11 = (char *)(a2 + (v5 & 0xFFFFFFFFFFFFFFE0));
    uint64_t v12 = (long long *)(a2 + 16);
    unint64_t v13 = p_p + 1;
    unint64_t v14 = v5 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      _OWORD *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 32;
    }
    while (v14);
    if (v5 == (v5 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_16;
    }
  }
  do
  {
    char v18 = *v11++;
    *v10++ = v18;
  }
  while (v11 != a3);
LABEL_16:
  *uint64_t v10 = 0;
  unint64_t v19 = HIBYTE(v26);
  if (v26 >= 0) {
    char v20 = (char *)&__p;
  }
  else {
    char v20 = (char *)__p;
  }
  if (v26 < 0) {
    unint64_t v19 = v25;
  }
  (*(void (**)(void, char *, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v20, &v20[v19]);
  uint64_t v21 = *(unsigned __int8 *)(a4 + 23);
  int v22 = (char)v21;
  if ((v21 & 0x80u) != 0) {
    uint64_t v21 = *(void *)(a4 + 8);
  }
  if (v21 == 1) {
    goto LABEL_32;
  }
  if (v21 != 12)
  {
    if (v22 < 0)
    {
      **(unsigned char **)a4 = 0;
      *(void *)(a4 + 8) = 0;
      if ((SHIBYTE(v26) & 0x80000000) == 0) {
        return;
      }
LABEL_35:
      operator delete(__p);
      return;
    }
    *(unsigned char *)a4 = 0;
    *(unsigned char *)(a4 + 23) = 0;
LABEL_32:
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_35;
  }
  if (v22 >= 0) {
    uint64_t v23 = (unsigned char *)a4;
  }
  else {
    uint64_t v23 = *(unsigned char **)a4;
  }
  v23[11] = v23[3];
  if (SHIBYTE(v26) < 0) {
    goto LABEL_35;
  }
}

void sub_21597963C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215979658()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 2);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597969C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2159796B0(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    __int16 v6 = (void *)(a1 + 64);
    unint64_t v5 = *(unsigned char **)(a1 + 72);
    unint64_t v16 = *(void *)(a1 + 80);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v16) {
        goto LABEL_24;
      }
      uint64_t v17 = (unsigned char *)*v6;
      unint64_t v18 = (unint64_t)&v5[-*v6];
      unint64_t v19 = v18 + 1;
      if ((uint64_t)(v18 + 1) >= 0)
      {
        unint64_t v20 = v16 - (void)v17;
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v21 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v21 = v19;
        }
        if (v21)
        {
          uint64_t v12 = operator new(v21);
          unint64_t v13 = &v12[v18];
          unint64_t v14 = &v12[v21];
          v12[v18] = v2;
          uint64_t v15 = (uint64_t)&v12[v18 + 1];
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v12 = 0;
          unint64_t v13 = &v5[-*v6];
          unint64_t v14 = 0;
          *(unsigned char *)unint64_t v18 = a2;
          uint64_t v15 = v18 + 1;
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        if (v18 >= 8 && (unint64_t)(v17 - v12) >= 0x20)
        {
          if (v18 >= 0x20)
          {
            unint64_t v28 = v18 & 0xFFFFFFFFFFFFFFE0;
            __int16 v38 = (long long *)(v5 - 16);
            unint64_t v39 = &v12[v5 - 16 - v17];
            unint64_t v40 = v18 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v41 = *v38;
              *(v39 - 1) = *(v38 - 1);
              *unint64_t v39 = v41;
              v39 -= 2;
              v38 -= 2;
              v40 -= 32;
            }
            while (v40);
            if (v18 == v28) {
              goto LABEL_86;
            }
            if ((v18 & 0x18) == 0)
            {
              v13 -= v28;
              v5 -= v28;
              goto LABEL_80;
            }
          }
          else
          {
            unint64_t v28 = 0;
          }
          v13 -= v18 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v42 = &v5[-v28 - 8];
          unint64_t v43 = &v12[v42 - v17];
          unint64_t v44 = v28 - (v18 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v45 = *(void *)v42;
            v42 -= 8;
            *v43-- = v45;
            v44 += 8;
          }
          while (v44);
          v5 -= v18 & 0xFFFFFFFFFFFFFFF8;
          if (v18 == (v18 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_86;
          }
        }
LABEL_80:
        unint64_t v56 = v13 - 1;
        do
        {
          char v57 = *--v5;
          *v56-- = v57;
        }
        while (v5 != v17);
        goto LABEL_86;
      }
LABEL_89:
      sub_215738AC0();
    }
    if ((unint64_t)v5 < v16) {
      goto LABEL_24;
    }
    uint64_t v23 = (unsigned char *)*v6;
    unint64_t v24 = (unint64_t)&v5[-*v6];
    unint64_t v25 = v24 + 1;
    if ((uint64_t)(v24 + 1) < 0) {
      goto LABEL_89;
    }
    unint64_t v26 = v16 - (void)v23;
    if (2 * v26 > v25) {
      unint64_t v25 = 2 * v26;
    }
    if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v27 = v25;
    }
    if (v27)
    {
      uint64_t v12 = operator new(v27);
      unint64_t v13 = &v12[v24];
      unint64_t v14 = &v12[v27];
      v12[v24] = v2;
      uint64_t v15 = (uint64_t)&v12[v24 + 1];
      if (v5 == v23)
      {
LABEL_49:
        *(void *)(a1 + 64) = v13;
        *(void *)(a1 + 72) = v15;
        *(void *)(a1 + 80) = v14;
        if (!v5) {
          goto LABEL_88;
        }
        goto LABEL_87;
      }
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v13 = &v5[-*v6];
      unint64_t v14 = 0;
      *(unsigned char *)unint64_t v24 = a2;
      uint64_t v15 = v24 + 1;
      if (v5 == v23) {
        goto LABEL_49;
      }
    }
    if (v24 >= 8 && (unint64_t)(v23 - v12) >= 0x20)
    {
      if (v24 >= 0x20)
      {
        unint64_t v29 = v24 & 0xFFFFFFFFFFFFFFE0;
        uint64_t v46 = (long long *)(v5 - 16);
        unint64_t v47 = &v12[v5 - 16 - v23];
        unint64_t v48 = v24 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          *unint64_t v47 = v49;
          v47 -= 2;
          v46 -= 2;
          v48 -= 32;
        }
        while (v48);
        if (v24 == v29) {
          goto LABEL_86;
        }
        if ((v24 & 0x18) == 0)
        {
          v13 -= v29;
          v5 -= v29;
          goto LABEL_84;
        }
      }
      else
      {
        unint64_t v29 = 0;
      }
      v13 -= v24 & 0xFFFFFFFFFFFFFFF8;
      long long v50 = &v5[-v29 - 8];
      uint64_t v51 = &v12[v50 - v23];
      unint64_t v52 = v29 - (v24 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v53 = *(void *)v50;
        v50 -= 8;
        *v51-- = v53;
        v52 += 8;
      }
      while (v52);
      v5 -= v24 & 0xFFFFFFFFFFFFFFF8;
      if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_86;
      }
    }
LABEL_84:
    unint64_t v58 = v13 - 1;
    do
    {
      char v59 = *--v5;
      *v58-- = v59;
    }
    while (v5 != v23);
    goto LABEL_86;
  }
  char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  unint64_t v5 = *(unsigned char **)(a1 + 72);
  unint64_t v4 = *(void *)(a1 + 80);
  if ((unint64_t)v5 < v4)
  {
LABEL_24:
    *unint64_t v5 = v2;
    uint64_t v15 = (uint64_t)(v5 + 1);
    goto LABEL_88;
  }
  __int16 v6 = (void *)(a1 + 64);
  unint64_t v7 = *(unsigned char **)(a1 + 64);
  unint64_t v8 = v5 - v7;
  uint64_t v9 = v5 - v7 + 1;
  if (v9 < 0) {
    goto LABEL_89;
  }
  unint64_t v10 = v4 - (void)v7;
  if (2 * v10 > v9) {
    uint64_t v9 = 2 * v10;
  }
  if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v11 = v9;
  }
  if (v11)
  {
    uint64_t v12 = operator new(v11);
    unint64_t v13 = &v12[v8];
    unint64_t v14 = &v12[v11];
    v12[v8] = v2;
    uint64_t v15 = (uint64_t)&v12[v8 + 1];
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v13 = (char *)(v5 - v7);
    unint64_t v14 = 0;
    *(unsigned char *)unint64_t v8 = v2;
    uint64_t v15 = v8 + 1;
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  if (v8 < 8 || (unint64_t)(v7 - v12) < 0x20) {
    goto LABEL_76;
  }
  if (v8 < 0x20)
  {
    unint64_t v22 = 0;
    goto LABEL_55;
  }
  unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFE0;
  unint64_t v30 = (long long *)(v5 - 16);
  uint64_t v31 = &v12[v5 - 16 - v7];
  unint64_t v32 = v8 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v33 = *v30;
    *(v31 - 1) = *(v30 - 1);
    *uint64_t v31 = v33;
    v31 -= 2;
    v30 -= 2;
    v32 -= 32;
  }
  while (v32);
  if (v8 != v22)
  {
    if ((v8 & 0x18) == 0)
    {
      v13 -= v22;
      v5 -= v22;
      goto LABEL_76;
    }
LABEL_55:
    v13 -= v8 & 0xFFFFFFFFFFFFFFF8;
    int v34 = &v5[-v22 - 8];
    char v35 = &v12[v34 - v7];
    unint64_t v36 = v22 - (v8 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint64_t v37 = *(void *)v34;
      v34 -= 8;
      *v35-- = v37;
      v36 += 8;
    }
    while (v36);
    v5 -= v8 & 0xFFFFFFFFFFFFFFF8;
    if (v8 == (v8 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_86;
    }
LABEL_76:
    long long v54 = v13 - 1;
    do
    {
      char v55 = *--v5;
      *v54-- = v55;
    }
    while (v5 != v7);
  }
LABEL_86:
  unint64_t v5 = (unsigned char *)*v6;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v14;
  if (v5) {
LABEL_87:
  }
    operator delete(v5);
LABEL_88:
  *(void *)(a1 + 72) = v15;
}

void sub_215979B44(uint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v3 = (unint64_t)&a3[-a2];
  if ((unint64_t)&a3[-a2] >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v3 > 0x16)
  {
    uint64_t v14 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v14 = v3 | 7;
    }
    uint64_t v15 = v14 + 1;
    p_p = operator new(v14 + 1);
    unint64_t v20 = v3;
    int64_t v21 = v15 | 0x8000000000000000;
    long long __p = p_p;
    if ((char *)a2 != a3) {
      goto LABEL_4;
    }
LABEL_13:
    unint64_t v8 = p_p;
    goto LABEL_16;
  }
  HIBYTE(v21) = (_BYTE)a3 - a2;
  p_p = &__p;
  if ((char *)a2 == a3) {
    goto LABEL_13;
  }
LABEL_4:
  if (v3 < 0x20 || (unint64_t)p_p - a2 < 0x20)
  {
    unint64_t v8 = p_p;
    uint64_t v9 = (char *)a2;
  }
  else
  {
    unint64_t v8 = (char *)p_p + (v3 & 0xFFFFFFFFFFFFFFE0);
    uint64_t v9 = (char *)(a2 + (v3 & 0xFFFFFFFFFFFFFFE0));
    unint64_t v10 = (long long *)(a2 + 16);
    size_t v11 = p_p + 1;
    unint64_t v12 = v3 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v13 = *v10;
      *(v11 - 1) = *(v10 - 1);
      _OWORD *v11 = v13;
      v10 += 2;
      v11 += 2;
      v12 -= 32;
    }
    while (v12);
    if (v3 == (v3 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_16;
    }
  }
  do
  {
    char v16 = *v9++;
    *v8++ = v16;
  }
  while (v9 != a3);
LABEL_16:
  *unint64_t v8 = 0;
  unint64_t v17 = HIBYTE(v21);
  if (v21 >= 0) {
    unint64_t v18 = (char *)&__p;
  }
  else {
    unint64_t v18 = (char *)__p;
  }
  if (v21 < 0) {
    unint64_t v17 = v20;
  }
  (*(void (**)(void, char *, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v18, &v18[v17]);
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
}

void sub_215979CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215979CF0()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 9);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_215979D34(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_215979D48(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555) {
    sub_21597592C();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v6 = 0x555555555555555;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x555555555555555) {
      sub_215738AD8();
    }
    unint64_t v7 = (char *)operator new(48 * v6);
  }
  else
  {
    unint64_t v7 = 0;
  }
  unint64_t v8 = &v7[48 * v3];
  *((void *)v8 + 2) = *(void *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  uint64_t v9 = &v7[48 * v6];
  long long v10 = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_OWORD *)(v8 + 24) = v10;
  *((void *)v8 + 5) = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  size_t v11 = v8 + 48;
  unint64_t v12 = (void **)*a1;
  long long v13 = (void **)a1[1];
  if (v13 != *a1)
  {
    do
    {
      long long v14 = *((_OWORD *)v13 - 3);
      *((void *)v8 - 4) = *(v13 - 4);
      *((_OWORD *)v8 - 3) = v14;
      *(v13 - 5) = 0;
      *(v13 - 4) = 0;
      *(v13 - 6) = 0;
      long long v15 = *(_OWORD *)(v13 - 3);
      *((void *)v8 - 1) = *(v13 - 1);
      *(_OWORD *)(v8 - 24) = v15;
      v8 -= 48;
      *(v13 - 2) = 0;
      *(v13 - 1) = 0;
      *(v13 - 3) = 0;
      v13 -= 6;
    }
    while (v13 != v12);
    long long v13 = (void **)*a1;
    char v16 = (void **)a1[1];
    *a1 = v8;
    a1[1] = v11;
    a1[2] = v9;
    while (1)
    {
      if (v16 == v13) {
        goto LABEL_22;
      }
      if (*((char *)v16 - 1) < 0)
      {
        operator delete(*(v16 - 3));
        if ((*((char *)v16 - 25) & 0x80000000) == 0) {
          goto LABEL_14;
        }
      }
      else if ((*((char *)v16 - 25) & 0x80000000) == 0)
      {
        goto LABEL_14;
      }
      operator delete(*(v16 - 6));
LABEL_14:
      v16 -= 6;
    }
  }
  *a1 = v8;
  a1[1] = v11;
  a1[2] = v9;
LABEL_22:
  if (v13) {
    operator delete(v13);
  }
  return v11;
}

void *sub_215979EE8(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215979F54(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215979FE0(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(*(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1)) = *(void *)(a2 + 16);
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_21597A010(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_21597A07C(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21597A108(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  uint64_t v2 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1);
  *(void *)(v2 + 8) = *(void *)(a2 + 16);
  *(unsigned char *)(v2 + 16) = 1;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void sub_21597A140()
{
}

void sub_21597A298(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_21597A2D0()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 8);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597A314(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_21597A328()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 7);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597A36C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_21597A380(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_21597A434(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21597A508(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(result + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  unint64_t v4 = (unint64_t *)(v3 + 16 * v2);
  if (*(_DWORD *)a2 != -991)
  {
    unint64_t *v4 = 0;
    if (!*(void *)(result + 32))
    {
      *(_DWORD *)a2 = -994;
      goto LABEL_28;
    }
    if (*(void *)(result + 24))
    {
      *(_DWORD *)a2 = -994;
      *(void *)(a2 + 80) = *(void *)(result + 8);
      *(void *)(v3 + 16 * v2 + 8) = *(void *)(a2 + 16);
      int v20 = *(_DWORD *)(result + 44);
      int v21 = *(_DWORD *)(result + 48);
      if (v20 == v21) {
        return result;
      }
      uint64_t v22 = (v21 - 1);
      uint64_t v23 = (v20 - 1);
      uint64_t v24 = *(void *)(a2 + 24);
      uint64_t v25 = *(void *)(a2 + 32);
      uint64_t v26 = v22 - v23;
      if ((unint64_t)(v22 - v23) >= 2)
      {
        uint64_t v27 = (v26 & 0xFFFFFFFFFFFFFFFELL) + v23;
        uint64_t v28 = v25 + 24 * v23 + 24;
        unint64_t v29 = v26 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          *(void *)(v28 - 24) = v24;
          *(void *)(v28 - 16) = v24;
          *(void *)uint64_t v28 = v24;
          *(void *)(v28 + 8) = v24;
          *(unsigned char *)(v28 - 8) = 0;
          *(unsigned char *)(v28 + 16) = 0;
          v28 += 48;
          v29 -= 2;
        }
        while (v29);
        if (v26 == (v26 & 0xFFFFFFFFFFFFFFFELL)) {
          return result;
        }
      }
      else
      {
        uint64_t v27 = v23;
      }
      uint64_t v30 = v22 - v27;
      uint64_t v31 = (unsigned char *)(v25 + 24 * v27 + 16);
      do
      {
        *((void *)v31 - 2) = v24;
        *((void *)v31 - 1) = v24;
        *uint64_t v31 = 0;
        v31 += 24;
        --v30;
      }
      while (v30);
      return result;
    }
LABEL_26:
    *(_DWORD *)a2 = -992;
    return result;
  }
  unint64_t v5 = *v4 + 1;
  unint64_t *v4 = v5;
  unint64_t v6 = *(void *)(result + 24);
  unint64_t v7 = *(void *)(result + 32);
  BOOL v8 = v5 < v7;
  if (v5 < v7 && v5 >= v6) {
    BOOL v8 = v5 < v7 && *(void *)(v3 + 16 * v2 + 8) != *(void *)(a2 + 16);
  }
  if (v8 && v5 >= v6) {
    goto LABEL_26;
  }
  *(_DWORD *)a2 = -994;
  if (!v8)
  {
LABEL_28:
    *(void *)(a2 + 80) = *(void *)(result + 16);
    return result;
  }
  *(void *)(a2 + 80) = *(void *)(result + 8);
  *(void *)(v3 + 16 * v2 + 8) = *(void *)(a2 + 16);
  int v12 = *(_DWORD *)(result + 44);
  int v13 = *(_DWORD *)(result + 48);
  if (v12 == v13) {
    return result;
  }
  uint64_t v14 = (v13 - 1);
  uint64_t v15 = (v12 - 1);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 32);
  uint64_t v18 = v14 - v15;
  if ((unint64_t)(v14 - v15) < 2)
  {
    uint64_t v19 = v15;
LABEL_39:
    uint64_t v34 = v14 - v19;
    char v35 = (unsigned char *)(v17 + 24 * v19 + 16);
    do
    {
      *((void *)v35 - 2) = v16;
      *((void *)v35 - 1) = v16;
      *char v35 = 0;
      v35 += 24;
      --v34;
    }
    while (v34);
    return result;
  }
  uint64_t v19 = (v18 & 0xFFFFFFFFFFFFFFFELL) + v15;
  uint64_t v32 = v17 + 24 * v15 + 24;
  unint64_t v33 = v18 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    *(void *)(v32 - 24) = v16;
    *(void *)(v32 - 16) = v16;
    *(void *)uint64_t v32 = v16;
    *(void *)(v32 + 8) = v16;
    *(unsigned char *)(v32 - 8) = 0;
    *(unsigned char *)(v32 + 16) = 0;
    v32 += 48;
    v33 -= 2;
  }
  while (v33);
  if (v18 != (v18 & 0xFFFFFFFFFFFFFFFELL)) {
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_21597A6EC(uint64_t result, int a2, uint64_t a3)
{
  *(_DWORD *)a3 = -994;
  if (*(unsigned __int8 *)(result + 52) == a2)
  {
    *(void *)(a3 + 80) = *(void *)(result + 16);
    return result;
  }
  *(void *)(a3 + 80) = *(void *)(result + 8);
  int v3 = *(_DWORD *)(result + 44);
  *(void *)(*(void *)(a3 + 56) + 16 * *(unsigned int *)(result + 40) + 8) = *(void *)(a3 + 16);
  int v4 = *(_DWORD *)(result + 48);
  if (v3 != v4)
  {
    uint64_t v5 = (v4 - 1);
    uint64_t v6 = (v3 - 1);
    uint64_t v7 = *(void *)(a3 + 24);
    uint64_t v8 = *(void *)(a3 + 32);
    uint64_t v9 = v5 - v6;
    if ((unint64_t)(v5 - v6) < 2)
    {
      uint64_t v10 = v6;
LABEL_9:
      uint64_t v13 = v5 - v10;
      uint64_t v14 = (unsigned char *)(v8 + 24 * v10 + 16);
      do
      {
        *((void *)v14 - 2) = v7;
        *((void *)v14 - 1) = v7;
        *uint64_t v14 = 0;
        v14 += 24;
        --v13;
      }
      while (v13);
      return result;
    }
    uint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFFELL) + v6;
    uint64_t v11 = v8 + 24 * v6 + 24;
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      *(void *)(v11 - 24) = v7;
      *(void *)(v11 - 16) = v7;
      *(void *)uint64_t v11 = v7;
      *(void *)(v11 + 8) = v7;
      *(unsigned char *)(v11 - 8) = 0;
      *(unsigned char *)(v11 + 16) = 0;
      v11 += 48;
      v12 -= 2;
    }
    while (v12);
    if (v9 != (v9 & 0xFFFFFFFFFFFFFFFELL)) {
      goto LABEL_9;
    }
  }
  return result;
}

void *sub_21597A7B4(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_21597A868(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21597A940()
{
}

uint64_t sub_21597A954(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -991;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_21597A968(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_21597AA1C(void *a1)
{
  *a1 = &unk_26C6737C0;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = &unk_26C673340;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21597AAF0(uint64_t a1, _DWORD *a2)
{
  *a2 = -992;
}

uint64_t sub_21597AAFC(uint64_t result, int a2, uint64_t a3)
{
  *(_DWORD *)a3 = -994;
  uint64_t v3 = 8;
  if (a2) {
    uint64_t v3 = 16;
  }
  *(void *)(a3 + 80) = *(void *)(result + v3);
  return result;
}

void sub_21597AB24()
{
}

uint64_t sub_21597AB38(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void sub_21597AB4C()
{
  exception = __cxa_allocate_exception(0x18uLL);
  MEMORY[0x2166C4280](exception, 15);
  __cxa_throw(exception, MEMORY[0x263F8C190], MEMORY[0x263F8C098]);
}

void sub_21597AB90(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_21597ABA4(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_21597AC10(void *a1)
{
  *a1 = &unk_26C673340;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21597AC9C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned char **)(a2 + 16);
  if (v2 == *(unsigned char **)(a2 + 24) || !*v2)
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  return result;
}

uint64_t sub_21597ACDC(uint64_t a1, unsigned __int8 a2)
{
  if (((a2 & 0xF8) == 0x30 || (a2 & 0xFE) == 0x38) && a2 - 49 <= 8)
  {
    if (a2 - 48 <= *(_DWORD *)(a1 + 28)) {
      sub_215976590(a1);
    }
    sub_215976538();
  }
  return 0;
}

uint64_t sub_21597AD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((a5 & 0x80) != 0) {
    int v9 = a5 & 0xFFA;
  }
  else {
    int v9 = a5;
  }
  int v10 = *(_DWORD *)(a1 + 28);
  *(void *)(a4 + 24) = a3;
  uint64_t v11 = (long long *)(a4 + 24);
  *(void *)(a4 + 32) = a3;
  *(unsigned char *)(a4 + 40) = 0;
  sub_215975790(a4, (v10 + 1), (long long *)(a4 + 24));
  *(void *)(a4 + 48) = a2;
  *(void *)(a4 + 56) = a2;
  *(unsigned char *)(a4 + 64) = 0;
  *(_OWORD *)(a4 + 72) = *v11;
  *(unsigned char *)(a4 + 88) = *(unsigned char *)(a4 + 40);
  if ((v9 & 0x800) == 0) {
    *(void *)(a4 + 104) = a2;
  }
  *(unsigned char *)(a4 + 96) = 1;
  if ((*(_WORD *)(a1 + 24) & 0x1F0) == 0)
  {
    if (sub_2159752A0(a1, a2, a3, (uint64_t *)a4, v9, (v9 & 0x800) == 0)) {
      goto LABEL_28;
    }
    goto LABEL_13;
  }
  if (*(_DWORD *)(a1 + 28))
  {
    if (sub_21597B9D0(a1, a2, a3, (uint64_t *)a4, v9, (v9 & 0x800) == 0)) {
      goto LABEL_28;
    }
LABEL_13:
    if (a2 != a3 && (v9 & 0x40) == 0)
    {
      int v12 = v9 | 0x80;
      for (uint64_t i = a2 + 1; i != a3; ++i)
      {
        sub_215975790(a4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3), v11);
        if ((*(_WORD *)(a1 + 24) & 0x1F0) != 0)
        {
          if (*(_DWORD *)(a1 + 28))
          {
            if (sub_21597B9D0(a1, i, a3, (uint64_t *)a4, v12, 0)) {
              goto LABEL_28;
            }
          }
          else if (sub_21597B050(a1, i, a3, (uint64_t *)a4, v12, 0))
          {
            goto LABEL_28;
          }
        }
        else if (sub_2159752A0(a1, i, a3, (uint64_t *)a4, v12, 0))
        {
          goto LABEL_28;
        }
        sub_215975790(a4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3), v11);
      }
      sub_215975790(a4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3), v11);
      if ((*(_WORD *)(a1 + 24) & 0x1F0) != 0)
      {
        if (*(_DWORD *)(a1 + 28))
        {
          if (sub_21597B9D0(a1, a3, a3, (uint64_t *)a4, v12, 0)) {
            goto LABEL_28;
          }
        }
        else if (sub_21597B050(a1, a3, a3, (uint64_t *)a4, v12, 0))
        {
          goto LABEL_28;
        }
      }
      else if (sub_2159752A0(a1, a3, a3, (uint64_t *)a4, v12, 0))
      {
        goto LABEL_28;
      }
    }
    uint64_t result = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    return result;
  }
  if ((sub_21597B050(a1, a2, a3, (uint64_t *)a4, v9, (v9 & 0x800) == 0) & 1) == 0) {
    goto LABEL_13;
  }
LABEL_28:
  if (*(void *)(a4 + 8) == *(void *)a4) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = *(long long **)a4;
  }
  uint64_t v15 = *(void *)v14;
  *(void *)(a4 + 56) = *(void *)v14;
  *(unsigned char *)(a4 + 64) = *(void *)(a4 + 48) != v15;
  uint64_t v16 = *((void *)v14 + 1);
  *(void *)(a4 + 72) = v16;
  *(unsigned char *)(a4 + 88) = v16 != *(void *)(a4 + 80);
  return 1;
}

uint64_t sub_21597B050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  long long v101 = 0u;
  long long v102 = 0u;
  long long v100 = 0u;
  uint64_t v6 = *(void *)(a1 + 40);
  if (!v6)
  {
LABEL_79:
    uint64_t v84 = (void **)*((void *)&v100 + 1);
    uint64_t v85 = (void **)v101;
    *((void *)&v102 + 1) = 0;
    unint64_t v86 = v101 - *((void *)&v100 + 1);
    if ((void)v101 - *((void *)&v100 + 1) < 0x11uLL) {
      goto LABEL_81;
    }
    do
    {
LABEL_80:
      operator delete(*v84);
      uint64_t v85 = (void **)v101;
      uint64_t v84 = (void **)(*((void *)&v100 + 1) + 8);
      *((void *)&v100 + 1) = v84;
      unint64_t v86 = v101 - (void)v84;
    }
    while ((void)v101 - (void)v84 > 0x10uLL);
    goto LABEL_81;
  }
  *(_DWORD *)BOOL v97 = 0;
  memset(&v97[8], 0, 48);
  *(_OWORD *)long long __p = 0uLL;
  memset(v99, 0, 21);
  sub_21597C1F8((uint64_t)&v100);
  unint64_t v11 = *(void *)(*((void *)&v100 + 1) + 8 * (((void)v102 + *((void *)&v102 + 1)) / 0x2AuLL))
      + 96 * (((void)v102 + *((void *)&v102 + 1)) % 0x2AuLL);
  long long v12 = *(_OWORD *)&v97[16];
  *(_OWORD *)unint64_t v11 = *(_OWORD *)v97;
  *(_OWORD *)(v11 + 16) = v12;
  *(void *)(v11 + 40) = 0;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 32) = 0;
  memset(&v97[32], 0, 24);
  *(void *)(v11 + 56) = 0;
  *(void *)(v11 + 64) = 0;
  *(void *)(v11 + 72) = 0;
  __p[0] = 0;
  __p[1] = 0;
  v99[0] = 0;
  uint64_t v13 = v99[1];
  *(void *)(v11 + 85) = *(void *)((char *)&v99[1] + 5);
  *(void *)(v11 + 80) = v13;
  uint64_t v15 = *((void *)&v102 + 1);
  uint64_t v14 = v102;
  uint64_t v16 = ++*((void *)&v102 + 1);
  uint64_t v17 = *((void *)&v100 + 1);
  unint64_t v18 = *(unsigned int *)(a1 + 32);
  unint64_t v19 = v102 + v15;
  unint64_t v20 = 8 * (v19 / 0x2A);
  unint64_t v21 = 96 * (v19 % 0x2A);
  unint64_t v22 = *(void *)(*((void *)&v100 + 1) + v20) + v21;
  *(_DWORD *)unint64_t v22 = 0;
  *(void *)(v22 + 8) = a2;
  *(void *)(*(void *)(v17 + v20) + v21 + 16) = a2;
  *(void *)(*(void *)(v17 + v20) + v21 + 24) = a3;
  unint64_t v23 = *(void *)(v17 + v20) + v21;
  uint64_t v26 = *(void *)(v23 + 56);
  unint64_t v24 = v23 + 56;
  uint64_t v25 = v26;
  unint64_t v27 = (*(void *)(v24 + 8) - v26) >> 4;
  uint64_t v91 = a4;
  if (v18 <= v27)
  {
    if (v18 < v27) {
      *(void *)(v24 + 8) = v25 + 16 * v18;
    }
  }
  else
  {
    sub_215975E44((char **)v24, v18 - v27);
    uint64_t v16 = *((void *)&v102 + 1);
    uint64_t v14 = v102;
    uint64_t v17 = *((void *)&v100 + 1);
  }
  char v94 = 0;
  unsigned int v28 = 0;
  uint64_t v92 = a3;
  uint64_t v93 = 0;
  unint64_t v29 = v14 + v16 - 1;
  unint64_t v30 = 8 * (v29 / 0x2A);
  unint64_t v31 = 96 * (v29 % 0x2A);
  *(void *)(*(void *)(v17 + v30) + v31 + 80) = v6;
  uint64_t v32 = a3 - a2;
  unint64_t v33 = *(void *)(v17 + v30) + v31;
  *(_DWORD *)(v33 + 88) = a5;
  *(unsigned char *)(v33 + 92) = a6;
  while (2)
  {
    if ((++v28 & 0xFFF) == 0 && (int)(v28 >> 12) >= (int)v32) {
      sub_215975988();
    }
    unint64_t v35 = v16 + v102 - 1;
    uint64_t v36 = *(void *)(*((void *)&v100 + 1) + 8 * (v35 / 0x2A));
    unint64_t v37 = v35 % 0x2A;
    uint64_t v38 = v36 + 96 * (v35 % 0x2A);
    unint64_t v40 = (void *)(v38 + 80);
    uint64_t v39 = *(void *)(v38 + 80);
    if (v39) {
      (*(void (**)(uint64_t, unint64_t))(*(void *)v39 + 16))(v39, v36 + 96 * v37);
    }
    switch(*(_DWORD *)v38)
    {
      case 0xFFFFFC18:
        uint64_t v41 = *(void *)(v36 + 96 * v37 + 16);
        if ((a5 & 0x20) != 0 && v41 == a2 || (a5 & 0x1000) != 0 && v41 != v92) {
          goto LABEL_21;
        }
        uint64_t v64 = v41 - *(void *)(v36 + 96 * v37 + 8);
        uint64_t v65 = v93;
        if ((v94 & (v93 >= v64)) == 0) {
          uint64_t v65 = v64;
        }
        if (v65 == v32)
        {
          size_t v66 = (void **)*((void *)&v100 + 1);
          uint64_t v67 = v101;
          if ((void)v101 == *((void *)&v100 + 1))
          {
            *((void *)&v102 + 1) = 0;
            unint64_t v81 = 0;
          }
          else
          {
            int v68 = (void *)(*((void *)&v100 + 1) + 8 * ((unint64_t)v102 / 0x2A));
            int v69 = (void *)(*v68 + 96 * ((unint64_t)v102 % 0x2A));
            unint64_t v70 = *(void *)(*((void *)&v100 + 1) + 8 * ((*((void *)&v102 + 1) + (void)v102) / 0x2AuLL))
                + 96 * ((*((void *)&v102 + 1) + (void)v102) % 0x2AuLL);
            if (v69 != (void *)v70)
            {
              do
              {
                uint64_t v71 = (void *)v69[7];
                if (v71)
                {
                  v69[8] = v71;
                  operator delete(v71);
                }
                uint64_t v72 = (void *)v69[4];
                if (v72)
                {
                  v69[5] = v72;
                  operator delete(v72);
                }
                v69 += 12;
                if ((void *)((char *)v69 - *v68) == (void *)4032)
                {
                  uint64_t v73 = (void *)v68[1];
                  ++v68;
                  int v69 = v73;
                }
              }
              while (v69 != (void *)v70);
              size_t v66 = (void **)*((void *)&v100 + 1);
              uint64_t v67 = v101;
            }
            *((void *)&v102 + 1) = 0;
            unint64_t v81 = v67 - (void)v66;
            if (v81 >= 0x11)
            {
              do
              {
                operator delete(*v66);
                size_t v66 = (void **)(*((void *)&v100 + 1) + 8);
                *((void *)&v100 + 1) = v66;
                unint64_t v81 = v101 - (void)v66;
              }
              while ((void)v101 - (void)v66 > 0x10uLL);
            }
          }
          if (v81 >> 3 == 1)
          {
            uint64_t v82 = 21;
          }
          else
          {
            if (v81 >> 3 != 2)
            {
LABEL_76:
              char v94 = 1;
              uint64_t v93 = v32;
              goto LABEL_8;
            }
            uint64_t v82 = 42;
          }
          *(void *)&long long v102 = v82;
          goto LABEL_76;
        }
        uint64_t v93 = v65;
        unint64_t v74 = *((void *)&v102 + 1) + v102 - 1;
        uint64_t v75 = *(void *)(*((void *)&v100 + 1) + 8 * (v74 / 0x2A));
        unint64_t v76 = v74 % 0x2A;
        size_t v77 = *(void **)(v75 + 96 * (v74 % 0x2A) + 56);
        if (v77)
        {
          *(void *)(v75 + 96 * v76 + 64) = v77;
          operator delete(v77);
        }
        size_t v78 = *(void **)(v75 + 96 * v76 + 32);
        if (v78)
        {
          *(void *)(v75 + 96 * v76 + 40) = v78;
          operator delete(v78);
        }
        uint64_t v79 = 42 * ((uint64_t)(v101 - *((void *)&v100 + 1)) >> 3) - 1;
        long long v80 = v102;
        --*((void *)&v102 + 1);
        if ((void)v101 == *((void *)&v100 + 1)) {
          uint64_t v79 = 0;
        }
        if ((unint64_t)(v79 - (*((void *)&v80 + 1) + v80) + 1) >= 0x54)
        {
          operator delete(*(void **)(v101 - 8));
          *(void *)&long long v101 = v101 - 8;
        }
        char v94 = 1;
LABEL_8:
        uint64_t v16 = *((void *)&v102 + 1);
        if (*((void *)&v102 + 1)) {
          continue;
        }
        if (v94)
        {
          uint64_t v83 = *v91;
          *(void *)uint64_t v83 = a2;
          *(void *)(v83 + 8) = a2 + v93;
          uint64_t v6 = 1;
          *(unsigned char *)(v83 + 16) = 1;
          goto LABEL_79;
        }
        uint64_t v6 = 0;
        uint64_t v84 = (void **)*((void *)&v100 + 1);
        uint64_t v85 = (void **)v101;
        *((void *)&v102 + 1) = 0;
        unint64_t v86 = v101 - *((void *)&v100 + 1);
        if ((void)v101 - *((void *)&v100 + 1) >= 0x11uLL) {
          goto LABEL_80;
        }
LABEL_81:
        unint64_t v87 = v86 >> 3;
        if (v87 == 1)
        {
          uint64_t v88 = 21;
LABEL_85:
          *(void *)&long long v102 = v88;
        }
        else if (v87 == 2)
        {
          uint64_t v88 = 42;
          goto LABEL_85;
        }
        if (v84 != v85)
        {
          do
          {
            uint64_t v89 = *v84++;
            operator delete(v89);
          }
          while (v84 != v85);
          if ((void)v101 != *((void *)&v100 + 1)) {
            *(void *)&long long v101 = v101 + ((*((void *)&v100 + 1) - v101 + 7) & 0xFFFFFFFFFFFFFFF8);
          }
        }
        if ((void)v100) {
          operator delete((void *)v100);
        }
        return v6;
      case 0xFFFFFC19:
      case 0xFFFFFC1E:
      case 0xFFFFFC21:
        goto LABEL_8;
      case 0xFFFFFC1D:
        unint64_t v49 = v102;
        if (!(void)v102)
        {
          sub_21597C7AC((uint64_t)&v100);
          unint64_t v49 = v102;
        }
        long long v50 = (void *)(*((void *)&v100 + 1) + 8 * (v49 / 0x2A));
        uint64_t v51 = *v50 + 96 * (v49 % 0x2A);
        if ((void)v101 == *((void *)&v100 + 1)) {
          uint64_t v51 = 0;
        }
        if (v51 == *v50) {
          uint64_t v51 = *(v50 - 1) + 4032;
        }
        long long v52 = *(_OWORD *)(v38 + 16);
        *(_OWORD *)(v51 - 96) = *(_OWORD *)v38;
        *(_OWORD *)(v51 - 80) = v52;
        uint64_t v53 = v36 + 96 * v37;
        *(void *)(v51 - 56) = 0;
        *(void *)(v51 - 48) = 0;
        *(void *)(v51 - 64) = 0;
        *(_OWORD *)(v51 - 64) = *(_OWORD *)(v53 + 32);
        *(void *)(v51 - 48) = *(void *)(v53 + 48);
        *(void *)(v53 + 32) = 0;
        *(void *)(v53 + 40) = 0;
        *(void *)(v53 + 48) = 0;
        *(void *)(v51 - 40) = 0;
        *(void *)(v51 - 32) = 0;
        *(void *)(v51 - 24) = 0;
        *(_OWORD *)(v51 - 40) = *(_OWORD *)(v53 + 56);
        *(void *)(v51 - 24) = *(void *)(v53 + 72);
        *(void *)(v53 + 56) = 0;
        *(void *)(v53 + 64) = 0;
        *(void *)(v53 + 72) = 0;
        uint64_t v54 = *v40;
        *(void *)(v51 - 11) = *(void *)(v38 + 85);
        *(void *)(v51 - 16) = v54;
        uint64_t v55 = *((void *)&v102 + 1);
        *(void *)&long long v102 = v102 - 1;
        ++*((void *)&v102 + 1);
        uint64_t v56 = v55 + v102;
        unint64_t v57 = (v55 + (uint64_t)v102) / 0x2AuLL;
        uint64_t v43 = *(void *)(*((void *)&v100 + 1) + 8 * v57);
        unint64_t v44 = v56 - 42 * v57;
        uint64_t v45 = *(void **)(v43 + 96 * v44 + 56);
        if (!v45) {
          goto LABEL_23;
        }
        goto LABEL_22;
      case 0xFFFFFC1F:
LABEL_21:
        unint64_t v42 = *((void *)&v102 + 1) + v102 - 1;
        uint64_t v43 = *(void *)(*((void *)&v100 + 1) + 8 * (v42 / 0x2A));
        unint64_t v44 = v42 % 0x2A;
        uint64_t v45 = *(void **)(v43 + 96 * (v42 % 0x2A) + 56);
        if (v45)
        {
LABEL_22:
          *(void *)(v43 + 96 * v44 + 64) = v45;
          operator delete(v45);
        }
LABEL_23:
        uint64_t v46 = *(void **)(v43 + 96 * v44 + 32);
        if (v46)
        {
          *(void *)(v43 + 96 * v44 + 40) = v46;
          operator delete(v46);
        }
        uint64_t v47 = 42 * ((uint64_t)(v101 - *((void *)&v100 + 1)) >> 3) - 1;
        long long v48 = v102;
        --*((void *)&v102 + 1);
        if ((void)v101 == *((void *)&v100 + 1)) {
          uint64_t v47 = 0;
        }
        if ((unint64_t)(v47 - (*((void *)&v48 + 1) + v48) + 1) >= 0x54)
        {
          operator delete(*(void **)(v101 - 8));
          *(void *)&long long v101 = v101 - 8;
        }
        goto LABEL_8;
      case 0xFFFFFC20:
        sub_215975F80((uint64_t)v97, (long long *)(v36 + 96 * v37));
        (*(void (**)(void, uint64_t, unint64_t))(*(void *)*v40 + 24))(*v40, 1, v36 + 96 * v37);
        (*(void (**)(void, void, unsigned char *))(*(void *)v99[1] + 24))(v99[1], 0, v97);
        uint64_t v58 = *((void *)&v100 + 1);
        if ((void)v101 == *((void *)&v100 + 1)) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = 42 * ((uint64_t)(v101 - *((void *)&v100 + 1)) >> 3) - 1;
        }
        unint64_t v60 = *((void *)&v102 + 1) + v102;
        if (v59 == *((void *)&v102 + 1) + (void)v102)
        {
          sub_21597C1F8((uint64_t)&v100);
          uint64_t v58 = *((void *)&v100 + 1);
          unint64_t v60 = *((void *)&v102 + 1) + v102;
        }
        unint64_t v61 = *(void *)(v58 + 8 * (v60 / 0x2A)) + 96 * (v60 % 0x2A);
        long long v62 = *(_OWORD *)&v97[16];
        *(_OWORD *)unint64_t v61 = *(_OWORD *)v97;
        *(_OWORD *)(v61 + 16) = v62;
        *(void *)(v61 + 40) = 0;
        *(void *)(v61 + 48) = 0;
        *(void *)(v61 + 32) = 0;
        *(_OWORD *)(v61 + 32) = *(_OWORD *)&v97[32];
        *(void *)(v61 + 48) = *(void *)&v97[48];
        memset(&v97[32], 0, 24);
        *(void *)(v61 + 56) = 0;
        *(void *)(v61 + 64) = 0;
        *(void *)(v61 + 72) = 0;
        *(_OWORD *)(v61 + 56) = *(_OWORD *)__p;
        *(void *)(v61 + 72) = v99[0];
        __p[0] = 0;
        __p[1] = 0;
        v99[0] = 0;
        uint64_t v63 = v99[1];
        *(void *)(v61 + 85) = *(void *)((char *)&v99[1] + 5);
        *(void *)(v61 + 80) = v63;
        ++*((void *)&v102 + 1);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        if (*(void *)&v97[32])
        {
          *(void *)&v97[40] = *(void *)&v97[32];
          operator delete(*(void **)&v97[32]);
        }
        goto LABEL_8;
      default:
        sub_2159759E0();
    }
  }
}

void sub_21597B924(_Unwind_Exception *a1)
{
  sub_21597C180((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_21597B938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215975944((uint64_t *)va);
  sub_21597C180((void **)(v9 - 144));
  _Unwind_Resume(a1);
}

void sub_21597B980(_Unwind_Exception *a1)
{
  sub_21597C180((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_21597B994(_Unwind_Exception *a1)
{
  sub_21597C180((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

uint64_t sub_21597B9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  unint64_t v70 = 0;
  uint64_t v71 = 0;
  unint64_t v72 = 0;
  *(_DWORD *)uint64_t v67 = 0;
  memset(&v67[8], 0, 32);
  long long v68 = 0u;
  memset(v69, 0, 37);
  uint64_t v6 = *(void *)(a1 + 40);
  if (!v6) {
    goto LABEL_63;
  }
  *(void *)&long long v65 = a3;
  *((void *)&v65 + 1) = a3;
  char v66 = 0;
  *(_DWORD *)long long v62 = 0;
  memset(&v62[8], 0, 48);
  *(_OWORD *)long long __p = 0uLL;
  memset(v64, 0, 21);
  uint64_t v71 = sub_215975ABC((void **)&v70, (uint64_t)v62);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (*(void *)&v62[32])
  {
    *(void *)&v62[40] = *(void *)&v62[32];
    operator delete(*(void **)&v62[32]);
  }
  uint64_t v13 = v71;
  *((_DWORD *)v71 - 24) = 0;
  *((void *)v13 - 11) = a2;
  *((void *)v13 - 10) = a2;
  *((void *)v13 - 9) = a3;
  uint64_t v14 = *((void *)v13 - 8);
  unint64_t v15 = *(unsigned int *)(a1 + 28);
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((*((void *)v13 - 7) - v14) >> 3);
  if (v15 <= v16)
  {
    if (v15 < v16) {
      *((void *)v13 - 7) = v14 + 24 * v15;
    }
  }
  else
  {
    sub_215975C90((void **)v13 - 8, v15 - v16, &v65);
    uint64_t v13 = v71;
  }
  uint64_t v17 = *((void *)v13 - 5);
  unint64_t v18 = *(unsigned int *)(a1 + 32);
  unint64_t v19 = (*((void *)v13 - 4) - v17) >> 4;
  uint64_t v58 = a4;
  if (v18 <= v19)
  {
    if (v18 < v19) {
      *((void *)v13 - 4) = v17 + 16 * v18;
    }
  }
  else
  {
    sub_215975E44((char **)v13 - 5, v18 - v19);
    uint64_t v13 = v71;
  }
  char v61 = 0;
  unsigned int v20 = 0;
  uint64_t v21 = a3 - a2;
  *((void *)v13 - 2) = v6;
  *((_DWORD *)v13 - 2) = a5;
  *(v13 - 4) = a6;
  uint64_t v60 = 0;
  uint64_t v59 = a3;
  do
  {
    BOOL v22 = (++v20 & 0xFFF) != 0 || (int)(v20 >> 12) < (int)v21;
    if (!v22) {
      sub_215975988();
    }
    unint64_t v24 = v13 - 16;
    uint64_t v23 = *((void *)v13 - 2);
    uint64_t v25 = v13 - 96;
    if (v23) {
      (*(void (**)(uint64_t, char *))(*(void *)v23 + 16))(v23, v13 - 96);
    }
    switch(*(_DWORD *)v25)
    {
      case 0xFFFFFC18:
        uint64_t v26 = *((void *)v13 - 10);
        if ((a5 & 0x20) != 0 && v26 == a2 || (a5 & 0x1000) != 0 && v26 != v59) {
          goto LABEL_29;
        }
        uint64_t v33 = v26 - *((void *)v13 - 11);
        uint64_t v34 = v60;
        if ((v61 & (v60 >= v33)) == 0)
        {
          long long v35 = *(_OWORD *)v25;
          *(_OWORD *)&v67[16] = *((_OWORD *)v13 - 5);
          *(_OWORD *)uint64_t v67 = v35;
          if (v67 != v25)
          {
            sub_21597CB78((char **)&v67[32], *((char **)v13 - 8), *((char **)v13 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v13 - 7) - *((void *)v13 - 8)) >> 3));
            sub_21597CD78((double **)v69, *((void *)v13 - 5), *((char **)v13 - 4), (uint64_t)(*((void *)v13 - 4) - *((void *)v13 - 5)) >> 4);
          }
          uint64_t v36 = *(void **)v24;
          *(void **)((char *)&v69[3] + 5) = *(void **)(v13 - 11);
          v69[3] = v36;
          uint64_t v34 = v33;
        }
        unint64_t v37 = v71;
        if (v34 == v21)
        {
          uint64_t v38 = v70;
          while (v37 != v38)
          {
            uint64_t v39 = (void *)*((void *)v37 - 5);
            if (v39)
            {
              *((void *)v37 - 4) = v39;
              operator delete(v39);
            }
            unint64_t v40 = (void *)*((void *)v37 - 8);
            if (v40)
            {
              *((void *)v37 - 7) = v40;
              operator delete(v40);
            }
            v37 -= 96;
          }
          uint64_t v71 = v38;
          char v61 = 1;
          uint64_t v60 = v21;
        }
        else
        {
          uint64_t v41 = v34;
          unint64_t v42 = (void *)*((void *)v71 - 5);
          if (v42)
          {
            *((void *)v71 - 4) = v42;
            operator delete(v42);
          }
          uint64_t v60 = v41;
          uint64_t v43 = (void *)*((void *)v37 - 8);
          if (v43)
          {
            *((void *)v37 - 7) = v43;
            operator delete(v43);
          }
          uint64_t v71 = v37 - 96;
          char v61 = 1;
        }
        break;
      case 0xFFFFFC1D:
      case 0xFFFFFC1E:
      case 0xFFFFFC21:
        break;
      case 0xFFFFFC1F:
LABEL_29:
        unint64_t v27 = v71;
        unsigned int v28 = (void *)*((void *)v71 - 5);
        if (v28)
        {
          *((void *)v71 - 4) = v28;
          operator delete(v28);
        }
        unint64_t v29 = (void *)*((void *)v27 - 8);
        if (v29)
        {
          *((void *)v27 - 7) = v29;
          operator delete(v29);
        }
        uint64_t v71 = v27 - 96;
        break;
      case 0xFFFFFC20:
        sub_215975F80((uint64_t)v62, (long long *)v13 - 6);
        (*(void (**)(void, uint64_t, char *))(**(void **)v24 + 24))(*(void *)v24, 1, v13 - 96);
        (*(void (**)(void, void, unsigned char *))(*(void *)v64[1] + 24))(v64[1], 0, v62);
        unint64_t v30 = v71;
        if ((unint64_t)v71 >= v72)
        {
          uint64_t v71 = sub_215975ABC((void **)&v70, (uint64_t)v62);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v31 = *(_OWORD *)&v62[16];
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v62;
          *((_OWORD *)v30 + 1) = v31;
          *((void *)v30 + 4) = 0;
          *((void *)v30 + 5) = 0;
          *((void *)v30 + 6) = 0;
          *((void *)v30 + 7) = 0;
          *((_OWORD *)v30 + 2) = *(_OWORD *)&v62[32];
          *((void *)v30 + 6) = *(void *)&v62[48];
          memset(&v62[32], 0, 24);
          *((void *)v30 + 8) = 0;
          *((void *)v30 + 9) = 0;
          *(_OWORD *)(v30 + 56) = *(_OWORD *)__p;
          *((void *)v30 + 9) = v64[0];
          __p[0] = 0;
          __p[1] = 0;
          v64[0] = 0;
          uint64_t v32 = v64[1];
          *(void *)(v30 + 85) = *(void *)((char *)&v64[1] + 5);
          *((void *)v30 + 10) = v32;
          uint64_t v71 = v30 + 96;
        }
        if (*(void *)&v62[32])
        {
          *(void *)&v62[40] = *(void *)&v62[32];
          operator delete(*(void **)&v62[32]);
        }
        break;
      default:
        sub_2159759E0();
    }
    uint64_t v13 = v71;
  }
  while (v70 != v71);
  if ((v61 & 1) == 0)
  {
LABEL_63:
    uint64_t v50 = 0;
    uint64_t v51 = v69[0];
    if (!v69[0]) {
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  uint64_t v44 = *v58;
  *(void *)uint64_t v44 = a2;
  *(void *)(v44 + 8) = a2 + v60;
  *(unsigned char *)(v44 + 16) = 1;
  if ((void)v68 != *(void *)&v67[32])
  {
    unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v68 - *(void *)&v67[32]) >> 3);
    uint64_t v46 = (unsigned char *)(*(void *)&v67[32] + 16);
    unsigned int v47 = 1;
    do
    {
      uint64_t v48 = v44 + 24 * v47;
      *(_OWORD *)uint64_t v48 = *((_OWORD *)v46 - 1);
      char v49 = *v46;
      v46 += 24;
      *(unsigned char *)(v48 + 16) = v49;
      BOOL v22 = v45 > v47++;
    }
    while (v22);
  }
  uint64_t v50 = 1;
  uint64_t v51 = v69[0];
  if (v69[0])
  {
LABEL_64:
    v69[1] = v51;
    operator delete(v51);
  }
LABEL_65:
  if (*(void *)&v67[32])
  {
    *(void *)&long long v68 = *(void *)&v67[32];
    operator delete(*(void **)&v67[32]);
  }
  long long v52 = v70;
  if (v70)
  {
    uint64_t v53 = v71;
    uint64_t v54 = v70;
    if (v71 != v70)
    {
      do
      {
        uint64_t v55 = (void *)*((void *)v53 - 5);
        if (v55)
        {
          *((void *)v53 - 4) = v55;
          operator delete(v55);
        }
        uint64_t v56 = (void *)*((void *)v53 - 8);
        if (v56)
        {
          *((void *)v53 - 7) = v56;
          operator delete(v56);
        }
        v53 -= 96;
      }
      while (v53 != v52);
      uint64_t v54 = v70;
    }
    uint64_t v71 = v52;
    operator delete(v54);
  }
  return v50;
}

void sub_21597BFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  sub_215975944(&a33);
  sub_215975A38((void **)(v33 - 120));
  _Unwind_Resume(a1);
}

void sub_21597C024(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    a1[5] = 0;
    unint64_t v11 = 0;
  }
  else
  {
    unint64_t v4 = a1[4];
    uint64_t v5 = &v2[v4 / 0x2A];
    uint64_t v6 = (char *)*v5 + 96 * (v4 % 0x2A);
    unint64_t v7 = (unint64_t)v2[(a1[5] + v4) / 0x2A] + 96 * ((a1[5] + v4) % 0x2A);
    if (v6 != (char *)v7)
    {
      do
      {
        uint64_t v8 = (void *)*((void *)v6 + 7);
        if (v8)
        {
          *((void *)v6 + 8) = v8;
          operator delete(v8);
        }
        uint64_t v9 = (void *)*((void *)v6 + 4);
        if (v9)
        {
          *((void *)v6 + 5) = v9;
          operator delete(v9);
        }
        v6 += 96;
        if (v6 - (unsigned char *)*v5 == 4032)
        {
          int v10 = (char *)v5[1];
          ++v5;
          uint64_t v6 = v10;
        }
      }
      while (v6 != (char *)v7);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
    a1[5] = 0;
    unint64_t v11 = (char *)v3 - (char *)v2;
    if (v11 >= 0x11)
    {
      do
      {
        operator delete(*v2);
        uint64_t v12 = a1[2];
        uint64_t v2 = (void **)(a1[1] + 8);
        a1[1] = v2;
        unint64_t v11 = v12 - (void)v2;
      }
      while (v11 > 0x10);
    }
  }
  if (v11 >> 3 == 1)
  {
    uint64_t v13 = 21;
  }
  else
  {
    if (v11 >> 3 != 2) {
      return;
    }
    uint64_t v13 = 42;
  }
  a1[4] = v13;
}

void **sub_21597C180(void **a1)
{
  sub_21597C024(a1);
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v2 != v3)
  {
    do
    {
      unint64_t v4 = *v2++;
      operator delete(v4);
    }
    while (v2 != v3);
    uint64_t v6 = a1[1];
    uint64_t v5 = a1[2];
    if (v5 != v6) {
      a1[2] = &v5[(v6 - v5 + 7) & 0xFFFFFFFFFFFFFFF8];
    }
  }
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_21597C1F8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = v2 >= 0x2A;
  unint64_t v4 = v2 - 42;
  if (v3)
  {
    *(void *)(a1 + 32) = v4;
    uint64_t v6 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    unint64_t v7 = (char *)(v6 + 1);
    uint64_t v8 = *v6;
    *(void *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_78:
      *(void *)uint64_t v5 = v8;
      *(void *)(a1 + 16) += 8;
      return;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v35 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v35 = 1;
      }
      if (!(v35 >> 61))
      {
        unint64_t v36 = v35 >> 2;
        uint64_t v37 = 8 * v35;
        uint64_t v38 = (char *)operator new(8 * v35);
        uint64_t v39 = &v38[8 * v36];
        unint64_t v40 = &v38[v37];
        int64_t v42 = v5 - v7;
        BOOL v41 = v5 == v7;
        uint64_t v5 = v39;
        if (!v41)
        {
          uint64_t v5 = &v39[v42 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v43 = v42 - 8;
          if ((unint64_t)(v42 - 8) >= 0x38)
          {
            uint64_t v73 = &v38[8 * v36];
            uint64_t v44 = v73;
            if ((unint64_t)(v73 - v7) >= 0x20)
            {
              uint64_t v74 = (v43 >> 3) + 1;
              uint64_t v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
              uint64_t v44 = &v39[v75];
              v7 += v75;
              unint64_t v76 = (long long *)(v6 + 3);
              size_t v77 = v73 + 16;
              uint64_t v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v79 = *v76;
                *(v77 - 1) = *(v76 - 1);
                _OWORD *v77 = v79;
                v76 += 2;
                v77 += 2;
                v78 -= 4;
              }
              while (v78);
              if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_76;
              }
            }
          }
          else
          {
            uint64_t v44 = &v38[8 * v36];
          }
          do
          {
            uint64_t v80 = *(void *)v7;
            v7 += 8;
            *(void *)uint64_t v44 = v80;
            v44 += 8;
          }
          while (v44 != v5);
        }
        goto LABEL_76;
      }
LABEL_87:
      sub_215738AD8();
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    if (v11 >= -1) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = v11 + 2;
    }
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = -v13;
    unint64_t v15 = &v7[-8 * v13];
    int64_t v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      unint64_t v7 = *(char **)(a1 + 8);
    }
    uint64_t v5 = &v15[v16];
    *(void *)(a1 + 8) = &v7[8 * v14];
    *(void *)(a1 + 16) = &v15[v16];
    goto LABEL_78;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = v18 - v19;
  uint64_t v21 = (v18 - v19) >> 3;
  uint64_t v22 = v17 - *(void *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      uint64_t v89 = operator new(0xFC0uLL);
      sub_215739930((char **)a1, &v89);
      return;
    }
    uint64_t v89 = operator new(0xFC0uLL);
    sub_215739AC0((void **)a1, &v89);
    unint64_t v45 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    unint64_t v7 = (char *)(v45 + 1);
    uint64_t v8 = *v45;
    *(void *)(a1 + 8) = v45 + 1;
    if (v5 != *(char **)(a1 + 24)) {
      goto LABEL_78;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v46 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v46 = 1;
      }
      if (!(v46 >> 61))
      {
        unint64_t v47 = v46 >> 2;
        uint64_t v48 = 8 * v46;
        uint64_t v38 = (char *)operator new(8 * v46);
        uint64_t v39 = &v38[8 * v47];
        unint64_t v40 = &v38[v48];
        int64_t v49 = v5 - v7;
        BOOL v41 = v5 == v7;
        uint64_t v5 = v39;
        if (!v41)
        {
          uint64_t v5 = &v39[v49 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v50 = v49 - 8;
          if ((unint64_t)(v49 - 8) >= 0x38)
          {
            unint64_t v81 = &v38[8 * v47];
            uint64_t v51 = v81;
            if ((unint64_t)(v81 - v7) >= 0x20)
            {
              uint64_t v82 = (v50 >> 3) + 1;
              uint64_t v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
              uint64_t v51 = &v39[v83];
              v7 += v83;
              uint64_t v84 = (long long *)(v45 + 3);
              uint64_t v85 = v81 + 16;
              uint64_t v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v87 = *v84;
                *(v85 - 1) = *(v84 - 1);
                *uint64_t v85 = v87;
                v84 += 2;
                v85 += 2;
                v86 -= 4;
              }
              while (v86);
              if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_76;
              }
            }
          }
          else
          {
            uint64_t v51 = &v38[8 * v47];
          }
          do
          {
            uint64_t v88 = *(void *)v7;
            v7 += 8;
            *(void *)uint64_t v51 = v88;
            v51 += 8;
          }
          while (v51 != v5);
        }
LABEL_76:
        *(void *)a1 = v38;
        *(void *)(a1 + 8) = v39;
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v40;
        if (v9)
        {
          operator delete(v9);
          uint64_t v5 = *(char **)(a1 + 16);
        }
        goto LABEL_78;
      }
      goto LABEL_87;
    }
    goto LABEL_5;
  }
  uint64_t v23 = v22 >> 2;
  if (v17 == *(void *)a1) {
    unint64_t v24 = 1;
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >> 61) {
    goto LABEL_87;
  }
  uint64_t v25 = (char *)operator new(8 * v24);
  uint64_t v26 = operator new(0xFC0uLL);
  unint64_t v27 = v26;
  unsigned int v28 = &v25[8 * v21];
  unint64_t v29 = &v25[8 * v24];
  if (v21 == v24)
  {
    if (v20 < 1)
    {
      if (v18 == v19) {
        unint64_t v52 = 1;
      }
      else {
        unint64_t v52 = v20 >> 2;
      }
      if (v52 >> 61) {
        sub_215738AD8();
      }
      unsigned int v28 = (char *)operator new(8 * v52);
      unint64_t v29 = &v28[8 * v52];
      operator delete(v25);
      uint64_t v53 = *(void *)(a1 + 8);
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v25 = v28;
      *(void *)unsigned int v28 = v27;
      long long v31 = v28 + 8;
      if (v18 == v53) {
        goto LABEL_24;
      }
      do
      {
LABEL_51:
        if (v28 == v25)
        {
          if (v31 >= v29)
          {
            if (v29 == v28) {
              unint64_t v58 = 1;
            }
            else {
              unint64_t v58 = (v29 - v28) >> 2;
            }
            if (v58 >> 61) {
              sub_215738AD8();
            }
            uint64_t v59 = (char *)operator new(8 * v58);
            uint64_t v25 = v59;
            unint64_t v60 = (v58 + 3) >> 2;
            uint64_t v54 = &v59[8 * v60];
            uint64_t v33 = v54;
            int64_t v61 = v31 - v28;
            if (v31 != v28)
            {
              uint64_t v33 = &v54[v61 & 0xFFFFFFFFFFFFFFF8];
              unint64_t v62 = v61 - 8;
              uint64_t v63 = &v59[8 * v60];
              uint64_t v64 = v28;
              if (v62 < 0x38) {
                goto LABEL_91;
              }
              uint64_t v65 = 8 * v60;
              uint64_t v63 = &v59[8 * v60];
              uint64_t v64 = v28;
              if ((unint64_t)(v63 - v28) < 0x20) {
                goto LABEL_91;
              }
              uint64_t v66 = (v62 >> 3) + 1;
              uint64_t v67 = 8 * (v66 & 0x3FFFFFFFFFFFFFFCLL);
              uint64_t v63 = &v54[v67];
              uint64_t v64 = &v28[v67];
              long long v68 = (long long *)(v28 + 16);
              int v69 = &v59[v65 + 16];
              uint64_t v70 = v66 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v71 = *v68;
                *((_OWORD *)v69 - 1) = *(v68 - 1);
                *(_OWORD *)int v69 = v71;
                v68 += 2;
                v69 += 32;
                v70 -= 4;
              }
              while (v70);
              if (v66 != (v66 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_91:
                do
                {
                  uint64_t v72 = *(void *)v64;
                  v64 += 8;
                  *(void *)uint64_t v63 = v72;
                  v63 += 8;
                }
                while (v63 != v33);
              }
            }
            unint64_t v29 = &v59[8 * v58];
            operator delete(v28);
          }
          else
          {
            uint64_t v56 = (v29 - v31) >> 3;
            if (v56 >= -1) {
              unint64_t v57 = v56 + 1;
            }
            else {
              unint64_t v57 = v56 + 2;
            }
            uint64_t v33 = &v31[8 * (v57 >> 1)];
            uint64_t v54 = &v28[8 * (v57 >> 1)];
            if (v31 == v28)
            {
              uint64_t v25 = v31;
            }
            else
            {
              memmove(&v28[8 * (v57 >> 1)], v28, v31 - v28);
              uint64_t v25 = v28;
            }
          }
        }
        else
        {
          uint64_t v54 = v28;
          uint64_t v33 = v31;
        }
        uint64_t v55 = *(void *)(v18 - 8);
        v18 -= 8;
        *((void *)v54 - 1) = v55;
        uint64_t v32 = v54 - 8;
        long long v31 = v33;
        unsigned int v28 = v32;
      }
      while (v18 != *(void *)(a1 + 8));
      goto LABEL_25;
    }
    unint64_t v30 = v21 + 2;
    if (v21 >= -1) {
      unint64_t v30 = v21 + 1;
    }
    v28 -= 8 * (v30 >> 1);
  }
  *(void *)unsigned int v28 = v26;
  long long v31 = v28 + 8;
  if (v18 != v19) {
    goto LABEL_51;
  }
LABEL_24:
  uint64_t v32 = v28;
  uint64_t v33 = v31;
LABEL_25:
  uint64_t v34 = *(char **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v32;
  *(void *)(a1 + 16) = v33;
  *(void *)(a1 + 24) = v29;
  if (v34)
  {
    operator delete(v34);
  }
}

void sub_21597C74C(_Unwind_Exception *a1)
{
  operator delete(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21597C768(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21597C77C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21597C794(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21597C7AC(uint64_t a1)
{
  BOOL v3 = *(uint64_t **)(a1 + 8);
  unint64_t v2 = *(uint64_t **)(a1 + 16);
  unint64_t v4 = v2 - v3;
  if (v2 == v3) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = 42 * v4 - 1;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if ((unint64_t)(v5 - (*(void *)(a1 + 40) + v6)) >= 0x2A)
  {
    *(void *)(a1 + 32) = v6 + 42;
    uint64_t v48 = (void *)*(v2 - 1);
    *(void *)(a1 + 16) = v2 - 1;
    sub_215739AC0((void **)a1, &v48);
    return;
  }
  unint64_t v7 = *(uint64_t **)(a1 + 24);
  uint64_t v8 = *(uint64_t **)a1;
  uint64_t v9 = (uint64_t)v7 - *(void *)a1;
  if (v4 < v9 >> 3)
  {
    if (v3 == v8)
    {
      uint64_t v48 = operator new(0xFC0uLL);
      sub_215739930((char **)a1, &v48);
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v48 = *(void **)(v18 - 8);
      *(void *)(a1 + 16) = v18 - 8;
      sub_215739AC0((void **)a1, &v48);
      if (*(void *)(a1 + 16) - *(void *)(a1 + 8) == 8) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v48 = operator new(0xFC0uLL);
      sub_215739AC0((void **)a1, &v48);
      if (*(void *)(a1 + 16) - *(void *)(a1 + 8) == 8)
      {
LABEL_9:
        uint64_t v10 = 21;
LABEL_19:
        *(void *)(a1 + 32) = v10;
        return;
      }
    }
    uint64_t v10 = *(void *)(a1 + 32) + 42;
    goto LABEL_19;
  }
  if (v7 == v8) {
    unint64_t v11 = 1;
  }
  else {
    unint64_t v11 = v9 >> 2;
  }
  if (v11 >> 61) {
    sub_215738AD8();
  }
  uint64_t v12 = (char *)operator new(8 * v11);
  uint64_t v13 = operator new(0xFC0uLL);
  uint64_t v14 = v13;
  if (v11)
  {
    unint64_t v15 = &v12[8 * v11];
    *(void *)uint64_t v12 = v13;
    int64_t v16 = v12 + 8;
    uint64_t v17 = v12;
    if (v3 != v2) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
  uint64_t v19 = (char *)operator new(8uLL);
  unint64_t v15 = v19 + 8;
  operator delete(v12);
  BOOL v3 = *(uint64_t **)(a1 + 8);
  uint64_t v20 = *(uint64_t **)(a1 + 16);
  uint64_t v12 = v19;
  *(void *)uint64_t v19 = v14;
  int64_t v16 = v19 + 8;
  uint64_t v17 = v19;
  if (v3 != v20)
  {
    while (1)
    {
LABEL_29:
      if (v16 == v15)
      {
        if (v12 <= v17)
        {
          if (v16 == v17) {
            unint64_t v32 = 1;
          }
          else {
            unint64_t v32 = (v16 - v17) >> 2;
          }
          if (v32 >> 61) {
            sub_215738AD8();
          }
          uint64_t v33 = (char *)operator new(8 * v32);
          uint64_t v34 = v33;
          unint64_t v35 = v32 >> 2;
          uint64_t v21 = &v33[8 * (v32 >> 2)];
          unint64_t v24 = v21;
          int64_t v36 = v16 - v12;
          if (v16 != v12)
          {
            unint64_t v24 = &v21[v36 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v37 = v36 - 8;
            if (v37 < 0x38 || (uint64_t v38 = 8 * v35, (unint64_t)(&v33[8 * v35] - v12) < 0x20))
            {
              uint64_t v39 = &v33[8 * (v32 >> 2)];
              unint64_t v40 = v12;
              goto LABEL_45;
            }
            uint64_t v42 = (v37 >> 3) + 1;
            uint64_t v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v39 = &v21[v43];
            unint64_t v40 = &v12[v43];
            uint64_t v44 = (long long *)(v12 + 16);
            unint64_t v45 = &v33[v38 + 16];
            uint64_t v46 = v42 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v47 = *v44;
              *((_OWORD *)v45 - 1) = *(v44 - 1);
              *(_OWORD *)unint64_t v45 = v47;
              v44 += 2;
              v45 += 32;
              v46 -= 4;
            }
            while (v46);
            if (v42 != (v42 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_45:
                uint64_t v41 = *(void *)v40;
                v40 += 8;
                *(void *)uint64_t v39 = v41;
                v39 += 8;
              }
              while (v39 != v24);
            }
          }
          int64_t v16 = &v33[8 * v32];
          if (v17) {
            operator delete(v17);
          }
          uint64_t v17 = v34;
          goto LABEL_28;
        }
        uint64_t v26 = (v12 - v17) >> 3;
        if (v26 >= -1) {
          uint64_t v27 = v26 + 1;
        }
        else {
          uint64_t v27 = v26 + 2;
        }
        uint64_t v28 = v27 >> 1;
        unint64_t v29 = &v12[-8 * (v27 >> 1)];
        unint64_t v30 = v16;
        if (v16 != v12)
        {
          memmove(v29, v12, v16 - v12);
          unint64_t v30 = v12;
        }
        uint64_t v31 = -v28;
        unint64_t v24 = &v29[v16 - v12];
        uint64_t v21 = &v30[8 * v31];
      }
      else
      {
        uint64_t v21 = v12;
        unint64_t v24 = v16;
        int64_t v16 = v15;
      }
LABEL_28:
      unint64_t v15 = v16;
      uint64_t v25 = *v3++;
      *(void *)unint64_t v24 = v25;
      uint64_t v22 = v24 + 8;
      int64_t v16 = v22;
      uint64_t v12 = v21;
      if (v3 == *(uint64_t **)(a1 + 16)) {
        goto LABEL_22;
      }
    }
  }
LABEL_21:
  uint64_t v21 = v12;
  uint64_t v22 = v16;
LABEL_22:
  uint64_t v23 = *(void **)a1;
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v21;
  *(void *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v15;
  if (v22 - v21 == 8)
  {
    *(void *)(a1 + 32) = 21;
    if (!v23) {
      return;
    }
  }
  else
  {
    *(void *)(a1 + 32) += 42;
    if (!v23) {
      return;
    }
  }

  operator delete(v23);
}

void sub_21597CB3C(_Unwind_Exception *a1)
{
  operator delete(v1);
  operator delete(v2);
  _Unwind_Resume(a1);
}

char *sub_21597CB78(char **a1, char *a2, char *a3, size_t __sz)
{
  uint64_t v6 = a2;
  uint64_t v8 = (uint64_t)a1[2];
  uint64_t result = *a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)result) >> 3) >= __sz)
  {
    uint64_t v18 = a1[1];
    uint64_t v17 = a1 + 1;
    uint64_t v14 = v18;
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v18 - result) >> 3);
    if (v19 >= __sz)
    {
      unint64_t v24 = result;
      if (a2 != a3)
      {
        uint64_t v25 = result;
        do
        {
          *(_OWORD *)uint64_t v25 = *(_OWORD *)v6;
          v25[16] = v6[16];
          v24 += 24;
          v6 += 24;
          v25 += 24;
        }
        while (v6 != a3);
      }
      int64_t v16 = v24 - result;
      uint64_t v14 = result;
    }
    else
    {
      uint64_t v20 = &a2[24 * v19];
      if (v14 != result)
      {
        do
        {
          *(_OWORD *)uint64_t result = *(_OWORD *)v6;
          result[16] = v6[16];
          v6 += 24;
          result += 24;
        }
        while (v6 != v20);
      }
      uint64_t v21 = v14;
      if (v20 != a3)
      {
        uint64_t v22 = v14;
        do
        {
          long long v23 = *(_OWORD *)v20;
          *((void *)v22 + 2) = *((void *)v20 + 2);
          *(_OWORD *)uint64_t v22 = v23;
          v22 += 24;
          v20 += 24;
          v21 += 24;
        }
        while (v20 != a3);
      }
      int64_t v16 = v21 - v14;
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_26;
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= __sz) {
      uint64_t v11 = __sz;
    }
    unint64_t v12 = v10 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v11;
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
LABEL_26:
    }
      sub_21597592C();
    uint64_t v13 = 24 * v12;
    uint64_t result = (char *)operator new(24 * v12);
    uint64_t v14 = result;
    *a1 = result;
    a1[1] = result;
    a1[2] = &result[v13];
    unint64_t v15 = result;
    if (v6 != a3)
    {
      uint64_t result = (char *)memcpy(result, v6, 24 * ((a3 - v6 - 24) / 0x18uLL) + 24);
      unint64_t v15 = &v14[24 * ((a3 - v6 - 24) / 0x18uLL) + 24];
    }
    int64_t v16 = v15 - v14;
    uint64_t v17 = a1 + 1;
  }
  *uint64_t v17 = &v14[v16];
  return result;
}

double *sub_21597CD78(double **a1, unint64_t a2, char *a3, size_t __sz)
{
  uint64_t v8 = (uint64_t)a1[2];
  uint64_t v9 = *a1;
  unint64_t v10 = *a1;
  if (__sz > (v8 - (uint64_t)*a1) >> 4)
  {
    if (v10)
    {
      a1[1] = v10;
      operator delete(v10);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (__sz >> 60) {
      goto LABEL_85;
    }
    unint64_t v11 = v8 >> 3;
    if (v8 >> 3 <= __sz) {
      unint64_t v11 = __sz;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    if (v11 >> 60) {
LABEL_85:
    }
      sub_21597592C();
    uint64_t v12 = 2 * v11;
    uint64_t result = (double *)operator new(16 * v11);
    *a1 = result;
    uint64_t v14 = a1 + 1;
    a1[2] = &result[v12];
    unint64_t v15 = result;
    if ((char *)a2 == a3) {
      goto LABEL_34;
    }
    unint64_t v16 = (unint64_t)&a3[-a2 - 16];
    if (v16 >= 0x30)
    {
      uint64_t v33 = (v16 >> 4) + 1;
      uint64_t v34 = 2 * (v33 & 0x1FFFFFFFFFFFFFFCLL);
      uint64_t v17 = (char *)(a2 + v34 * 8);
      unint64_t v15 = &result[v34];
      unint64_t v35 = result + 4;
      int64_t v36 = (const double *)(a2 + 32);
      uint64_t v37 = v33 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        uint64_t v38 = v36 - 4;
        float64x2x2_t v80 = vld2q_f64(v38);
        float64x2x2_t v84 = vld2q_f64(v36);
        uint64_t v39 = v35 - 4;
        vst2q_f64(v39, v80);
        vst2q_f64(v35, v84);
        v35 += 8;
        v36 += 8;
        v37 -= 4;
      }
      while (v37);
      if (v33 == (v33 & 0x1FFFFFFFFFFFFFFCLL)) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v17 = (char *)a2;
      unint64_t v15 = result;
    }
    do
    {
      uint64_t v40 = *(void *)v17;
      uint64_t v41 = *((void *)v17 + 1);
      v17 += 16;
      *(void *)unint64_t v15 = v40;
      *((void *)v15 + 1) = v41;
      v15 += 2;
    }
    while (v17 != a3);
LABEL_34:
    *uint64_t v14 = v15;
    return result;
  }
  uint64_t result = a1[1];
  uint64_t v14 = a1 + 1;
  int64_t v18 = (char *)result - (char *)v9;
  unint64_t v19 = ((char *)result - (char *)v9) >> 4;
  if (v19 < __sz)
  {
    uint64_t v20 = (char *)(a2 + 16 * v19);
    if (result == v9) {
      goto LABEL_18;
    }
    if ((unint64_t)(v18 - 16) >= 0xF0)
    {
      unint64_t v42 = (v18 & 0xFFFFFFFFFFFFFFF0) - 8;
      uint64_t v43 = (char *)v9 + v42;
      unint64_t v44 = a2 + v42;
      BOOL v46 = (unint64_t)(v9 + 1) < a2 + (v18 & 0xFFFFFFFFFFFFFFF0)
         && a2 + 8 < (unint64_t)v9 + (v18 & 0xFFFFFFFFFFFFFFF0);
      uint64_t v21 = (char *)a2;
      if (((unint64_t)v43 <= a2 || (unint64_t)v9 >= v44) && !v46)
      {
        unint64_t v48 = ((unint64_t)(v18 - 16) >> 4) + 1;
        uint64_t v49 = 2 * (v48 & 0x1FFFFFFFFFFFFFFCLL);
        unint64_t v10 = &v9[v49];
        uint64_t v21 = (char *)(a2 + v49 * 8);
        unint64_t v50 = (const double *)(a2 + 32);
        uint64_t v51 = v9 + 4;
        uint64_t v52 = v48 & 0x1FFFFFFFFFFFFFFCLL;
        do
        {
          uint64_t v53 = v50 - 4;
          float64x2x2_t v81 = vld2q_f64(v53);
          float64x2x2_t v85 = vld2q_f64(v50);
          uint64_t v54 = v51 - 4;
          vst2q_f64(v54, v81);
          vst2q_f64(v51, v85);
          v50 += 8;
          v51 += 8;
          v52 -= 4;
        }
        while (v52);
        if (v48 == (v48 & 0x1FFFFFFFFFFFFFFCLL))
        {
LABEL_18:
          if (v20 == a3)
          {
            unint64_t v15 = result;
          }
          else
          {
            unint64_t v24 = (char *)(v18 + a2);
            unint64_t v25 = (unint64_t)&a3[-v18 - a2 - 16];
            if (v25 >= 0x170)
            {
              uint64_t v55 = &v24[v25 & 0xFFFFFFFFFFFFFFF0];
              unint64_t v56 = (unint64_t)(v24 + 8);
              BOOL v58 = result + 1 < (double *)v55 + 2 && v56 < (unint64_t)result + (v25 & 0xFFFFFFFFFFFFFFF0) + 16;
              unint64_t v15 = result;
              if ((v20 >= (char *)result + (v25 & 0xFFFFFFFFFFFFFFF0) + 8 || result >= (double *)v55 + 1) && !v58)
              {
                uint64_t v60 = (v25 >> 4) + 1;
                uint64_t v61 = 2 * (v60 & 0x1FFFFFFFFFFFFFFCLL);
                v20 += v61 * 8;
                unint64_t v15 = &result[v61];
                unint64_t v62 = result + 4;
                uint64_t v63 = (const double *)(a2 + 16 * v19 + 32);
                uint64_t v64 = v60 & 0x1FFFFFFFFFFFFFFCLL;
                do
                {
                  uint64_t v65 = v63 - 4;
                  float64x2x2_t v82 = vld2q_f64(v65);
                  float64x2x2_t v86 = vld2q_f64(v63);
                  uint64_t v66 = v62 - 4;
                  vst2q_f64(v66, v82);
                  vst2q_f64(v62, v86);
                  v62 += 8;
                  v63 += 8;
                  v64 -= 4;
                }
                while (v64);
                if (v60 == (v60 & 0x1FFFFFFFFFFFFFFCLL)) {
                  goto LABEL_34;
                }
              }
            }
            else
            {
              unint64_t v15 = result;
            }
            do
            {
              uint64_t v26 = *(void *)v20;
              uint64_t v27 = *((void *)v20 + 1);
              v20 += 16;
              *(void *)unint64_t v15 = v26;
              *((void *)v15 + 1) = v27;
              v15 += 2;
            }
            while (v20 != a3);
          }
          goto LABEL_34;
        }
      }
    }
    else
    {
      uint64_t v21 = (char *)a2;
    }
    do
    {
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *((void *)v21 + 1);
      v21 += 16;
      *(void *)unint64_t v10 = v22;
      *((void *)v10 + 1) = v23;
      v10 += 2;
    }
    while (v21 != v20);
    goto LABEL_18;
  }
  if ((char *)a2 == a3)
  {
    unint64_t v29 = (char *)v10;
  }
  else
  {
    unint64_t v28 = (unint64_t)&a3[-a2 - 16];
    if (v28 < 0xF0
      || ((unint64_t v67 = v28 & 0xFFFFFFFFFFFFFFF0 | 8,
           long long v68 = (char *)v9 + v67,
           unint64_t v69 = a2 + v67,
           unint64_t v70 = (v28 & 0xFFFFFFFFFFFFFFF0) + 16,
           (unint64_t)(v9 + 1) < a2 + v70)
        ? (BOOL v71 = a2 + 8 >= (unint64_t)v9 + v70)
        : (BOOL v71 = 1),
          v71 ? (char v72 = 0) : (char v72 = 1),
          (unint64_t)v68 > a2 ? (BOOL v73 = (unint64_t)v9 >= v69) : (BOOL v73 = 1),
          !v73 || (v72 & 1) != 0))
    {
      unint64_t v29 = (char *)v10;
      unint64_t v30 = (char *)a2;
    }
    else
    {
      uint64_t v74 = (v28 >> 4) + 1;
      uint64_t v75 = 2 * (v74 & 0x1FFFFFFFFFFFFFFCLL);
      unint64_t v29 = (char *)&v9[v75];
      unint64_t v30 = (char *)(a2 + v75 * 8);
      unint64_t v76 = (const double *)(a2 + 32);
      size_t v77 = v9 + 4;
      uint64_t v78 = v74 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        long long v79 = v76 - 4;
        float64x2x2_t v83 = vld2q_f64(v79);
        float64x2x2_t v87 = vld2q_f64(v76);
        uint64_t result = v77 - 4;
        vst2q_f64(result, v83);
        vst2q_f64(v77, v87);
        v76 += 8;
        v77 += 8;
        v78 -= 4;
      }
      while (v78);
      if (v74 == (v74 & 0x1FFFFFFFFFFFFFFCLL)) {
        goto LABEL_36;
      }
    }
    do
    {
      uint64_t v31 = *(void *)v30;
      uint64_t v32 = *((void *)v30 + 1);
      v30 += 16;
      *(void *)unint64_t v29 = v31;
      *((void *)v29 + 1) = v32;
      v29 += 16;
    }
    while (v30 != a3);
  }
LABEL_36:
  *uint64_t v14 = (double *)((char *)v10 + v29 - (char *)v9);
  return result;
}

uint64_t sub_21597D16C(uint64_t a1)
{
  unint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_21597D19C(uint64_t *a1)
{
  unint64_t v2 = (std::mutex *)(a1 + 3);
  std::mutex::lock((std::mutex *)(a1 + 3));
  uint64_t v4 = *a1;
  for (uint64_t i = a1[1]; v4 != i; v4 += 8)
  {
    uint64_t v5 = *(void *)(*(void *)(*(void *)v4 + 8) + 8);
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }

  std::mutex::unlock(v2);
}

void sub_21597D22C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_21597D240(void *a1, int a2)
{
  if (a2) {
    operator new();
  }
  *a1 = &unk_26C6739C0;
  a1[2] = &unk_26C6739F0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  return a1;
}

void sub_21597D87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::thread *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  std::mutex::~mutex(v22);
  unint64_t v24 = *v21;
  if (*v21)
  {
    v20[1].__shared_owners_ = (uint64_t)v24;
    operator delete(v24);
  }
  std::__shared_weak_count::~__shared_weak_count(v20);
  operator delete(v25);
  sub_215733368((uint64_t)&a17);
  std::mutex::unlock(&stru_267888288);
  sub_215733368(v19);
  sub_215973F70(v18);
  nullsub_2(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_21597DA00(void *a1)
{
  uint64_t v2 = a1[4];
  if (v2)
  {
    std::mutex::lock((std::mutex *)(v2 + 24));
    BOOL v3 = a1 + 2;
    uint64_t v4 = *(void **)(v2 + 8);
    uint64_t v5 = *(void **)v2;
    if (*(void **)v2 != v4)
    {
      while ((void *)*v5 != v3)
      {
        if (++v5 == v4)
        {
          uint64_t v5 = *(void **)(v2 + 8);
          break;
        }
      }
    }
    if (v5 != v4)
    {
      uint64_t v6 = v5 + 1;
      if (v5 + 1 != v4)
      {
        do
        {
          if ((void *)*v6 != v3) {
            *v5++ = *v6;
          }
          ++v6;
        }
        while (v6 != v4);
        uint64_t v4 = *(void **)(v2 + 8);
      }
    }
    if (v5 != v4) {
      *(void *)(v2 + 8) = v5;
    }
    std::mutex::unlock((std::mutex *)(v2 + 24));
  }
  unint64_t v7 = (std::__shared_weak_count *)a1[5];
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  uint64_t v8 = (void *)a1[3];
  a1[2] = &unk_26C6731F0;
  a1[3] = 0;
  if (v8)
  {
    uint64_t v9 = v8[1];
    *uint64_t v8 = &unk_26C673978;
    v8[1] = 0;
    if (v9)
    {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
      uint64_t v10 = v8[1];
      v8[1] = 0;
      if (v10) {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      }
    }
    MEMORY[0x2166C4D20](v8, 0xA1C40BD48D6D6);
  }

  return nullsub_2(a1);
}

uint64_t sub_21597DC08(uint64_t a1)
{
  return sub_21597DA00((void *)(a1 - 16));
}

void sub_21597DC10(void *a1)
{
  sub_21597DA00(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21597DC48(uint64_t a1)
{
  sub_21597DA00((void *)(a1 - 16));

  JUMPOUT(0x2166C4D20);
}

const char *sub_21597DC88()
{
  return "OSLogSurrogateAppender";
}

void *sub_21597DC94(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C673978;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[1];
    a1[1] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  return a1;
}

void sub_21597DD30(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C673978;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[1];
    a1[1] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }

  JUMPOUT(0x2166C4D20);
}

void **sub_21597DDEC(void **a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = v2;
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_21597EF8C(v3 - 4);
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_21597DE48(uint64_t a1)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 40);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 40));
  while (1)
  {
    unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 156));
    uint64_t v3 = *(void *)(a1 + 144);
    if (v2)
    {
      if (!v3)
      {
        if (__lk.__owns_) {
          std::mutex::unlock(__lk.__m_);
        }
        return;
      }
LABEL_9:
      *(unsigned char *)(a1 + 157) = 1;
      goto LABEL_14;
    }
    if (v3) {
      goto LABEL_9;
    }
    while (1)
    {
      unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 156));
      if (v4) {
        break;
      }
      std::condition_variable::wait((std::condition_variable *)(a1 + 160), &__lk);
      if (*(void *)(a1 + 144)) {
        goto LABEL_9;
      }
    }
    uint64_t v5 = *(void *)(a1 + 144);
    *(unsigned char *)(a1 + 157) = 1;
    if (v5) {
      break;
    }
LABEL_2:
    *(unsigned char *)(a1 + 157) = 0;
    std::condition_variable::notify_all((std::condition_variable *)(a1 + 256));
  }
  while (1)
  {
LABEL_14:
    uint64_t v6 = *(void *)(a1 + 128);
    uint64_t v7 = *(void *)(a1 + 104);
    uint64_t v8 = (uint64_t *)(v7 + 32 * v6);
    LOBYTE(v37) = 0;
    char v38 = 0;
    if (*((unsigned char *)v8 + 8))
    {
      uint64_t v9 = *v8;
      *uint64_t v8 = 0;
      uint64_t v37 = v9;
      char v38 = 1;
    }
    LOBYTE(v39.__state_) = 0;
    char v40 = 0;
    if (*((unsigned char *)v8 + 24))
    {
      uint64_t v10 = v7 + 32 * v6;
      v39.__state_ = *(std::__assoc_sub_state **)(v10 + 16);
      *(void *)(v10 + 16) = 0;
      char v40 = 1;
    }
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v11 = *(void *)(a1 + 104) + 32 * v6;
    sub_21597ED98(v11, (uint64_t *)&v50);
    int v14 = *(unsigned __int8 *)(v11 + 24);
    uint64_t v13 = (unsigned char *)(v11 + 24);
    int v12 = v14;
    unint64_t v15 = (uint64_t *)(v13 - 8);
    if (v14 != BYTE8(v51))
    {
      if (v12)
      {
        MEMORY[0x2166C4B90](v15);
        unsigned char *v13 = 0;
        if (!BYTE8(v51)) {
          goto LABEL_22;
        }
      }
      else
      {
        *unint64_t v15 = v51;
        *(void *)&long long v51 = 0;
        unsigned char *v13 = 1;
        if (!BYTE8(v51)) {
          goto LABEL_22;
        }
      }
LABEL_21:
      MEMORY[0x2166C4B90](&v51);
      goto LABEL_22;
    }
    if (v12)
    {
      uint64_t v16 = v51;
      *(void *)&long long v51 = 0;
      uint64_t v42 = *v15;
      *unint64_t v15 = v16;
      MEMORY[0x2166C4B90](&v42);
      if (BYTE8(v51)) {
        goto LABEL_21;
      }
    }
LABEL_22:
    if (BYTE8(v50))
    {
      uint64_t v17 = v50;
      *(void *)&long long v50 = 0;
      if (v17)
      {
        int64_t v18 = *(std::__shared_weak_count **)(v17 + 32);
        if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
          uint64_t v19 = *(std::__shared_weak_count **)(v17 + 16);
          if (v19)
          {
LABEL_27:
            if (!atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
              std::__shared_weak_count::__release_weak(v19);
            }
          }
        }
        else
        {
          uint64_t v19 = *(std::__shared_weak_count **)(v17 + 16);
          if (v19) {
            goto LABEL_27;
          }
        }
        MEMORY[0x2166C4D20](v17, 0x10F0C40B62ED6C6);
      }
    }
    unint64_t v20 = (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5;
    unint64_t v21 = *(void *)(a1 + 128) + 1;
    if (v21 < v20) {
      unint64_t v20 = 0;
    }
    *(void *)(a1 + 128) = v21 - v20;
    --*(void *)(a1 + 144);
    std::condition_variable::notify_all((std::condition_variable *)(a1 + 208));
    if (!__lk.__owns_)
    {
      int v35 = 1;
      int64_t v36 = "unique_lock::unlock: not locked";
      goto LABEL_100;
    }
    std::mutex::unlock(__lk.__m_);
    __lk.__owns_ = 0;
    if (v38)
    {
      if (!v37)
      {
LABEL_72:
        if (v40) {
          std::promise<void>::set_value(&v39);
        }
        goto LABEL_74;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883880, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_267883880))
      {
        sub_215E0EFD4((uint64_t)&v50);
        sub_2157420B4("com.apple.cv3d", (unint64_t)&v50, &qword_267883868);
        if (BYTE8(v51) && SBYTE7(v51) < 0) {
          operator delete((void *)v50);
        }
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883868, &dword_21572C000);
        __cxa_guard_release(&qword_267883880);
      }
      if (byte_26788387F >= 0) {
        uint64_t v22 = (const char *)&qword_267883868;
      }
      else {
        uint64_t v22 = (const char *)qword_267883868;
      }
      if (byte_26788387F >= 0) {
        size_t v23 = byte_26788387F;
      }
      else {
        size_t v23 = unk_267883870;
      }
      object = os_log_create(v22, *(const char **)(v37 + 40));
      if (v23 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v23 >= 0x17)
      {
        uint64_t v25 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v23 | 7) != 0x17) {
          uint64_t v25 = v23 | 7;
        }
        uint64_t v26 = v25 + 1;
        unint64_t v24 = operator new(v25 + 1);
        v44[1] = (void *)v23;
        unint64_t v45 = v26 | 0x8000000000000000;
        v44[0] = v24;
      }
      else
      {
        HIBYTE(v45) = v23;
        unint64_t v24 = v44;
        if (!v23)
        {
LABEL_56:
          *((unsigned char *)v24 + v23) = 0;
          char v46 = 1;
          size_t v27 = *(void *)(v37 + 48);
          if (v27 > 0x7FFFFFFFFFFFFFF7) {
            sub_215731CD8();
          }
          unint64_t v28 = *(const void **)(v37 + 40);
          if (v27 >= 0x17)
          {
            uint64_t v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v27 | 7) != 0x17) {
              uint64_t v30 = v27 | 7;
            }
            uint64_t v31 = v30 + 1;
            unint64_t v29 = operator new(v30 + 1);
            __p[1] = (void *)v27;
            unint64_t v48 = v31 | 0x8000000000000000;
            __p[0] = v29;
          }
          else
          {
            HIBYTE(v48) = *(void *)(v37 + 48);
            unint64_t v29 = __p;
            if (!v27)
            {
              LOBYTE(__p[0]) = 0;
              char v49 = 1;
              if ((SHIBYTE(v48) & 0x80000000) == 0) {
                goto LABEL_60;
              }
              goto LABEL_66;
            }
          }
          memmove(v29, v28, v27);
          *((unsigned char *)v29 + v27) = 0;
          char v49 = 1;
          if ((SHIBYTE(v48) & 0x80000000) == 0)
          {
LABEL_60:
            if (!v46) {
              goto LABEL_69;
            }
            goto LABEL_67;
          }
LABEL_66:
          operator delete(__p[0]);
          if (!v46)
          {
LABEL_69:
            if (object) {
              os_release(object);
            }
            os_log_pack_send();
            goto LABEL_72;
          }
LABEL_67:
          if (SHIBYTE(v45) < 0) {
            operator delete(v44[0]);
          }
          goto LABEL_69;
        }
      }
      memmove(v24, v22, v23);
      goto LABEL_56;
    }
LABEL_74:
    if (!__lk.__m_)
    {
      int v35 = 1;
      int64_t v36 = "unique_lock::lock: references null mutex";
      goto LABEL_100;
    }
    if (__lk.__owns_) {
      break;
    }
    std::mutex::lock(__lk.__m_);
    __lk.__owns_ = 1;
    if (v40) {
      MEMORY[0x2166C4B90](&v39);
    }
    if (!v38) {
      goto LABEL_13;
    }
    uint64_t v32 = v37;
    uint64_t v37 = 0;
    if (!v32) {
      goto LABEL_13;
    }
    uint64_t v33 = *(std::__shared_weak_count **)(v32 + 32);
    if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
      uint64_t v34 = *(std::__shared_weak_count **)(v32 + 16);
      if (v34)
      {
LABEL_83:
        if (!atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
    }
    else
    {
      uint64_t v34 = *(std::__shared_weak_count **)(v32 + 16);
      if (v34) {
        goto LABEL_83;
      }
    }
    MEMORY[0x2166C4D20](v32, 0x10F0C40B62ED6C6);
LABEL_13:
    if (!*(void *)(a1 + 144)) {
      goto LABEL_2;
    }
  }
  int v35 = 11;
  int64_t v36 = "unique_lock::lock: already locked";
LABEL_100:
  std::__throw_system_error(v35, v36);
  __break(1u);
}

void sub_21597E594(uint64_t a1)
{
  sub_21597F084(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21597E5CC(uint64_t a1)
{
  uint64_t result = a1 + 16;
  if (*(char *)(a1 + 39) < 0) {
    return *(void *)result;
  }
  return result;
}

void sub_21597E5E8(uint64_t a1)
{
  v2.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 40);
  v2.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 40));
  while (*(unsigned char *)(a1 + 157) || *(void *)(a1 + 144))
    std::condition_variable::wait((std::condition_variable *)(a1 + 256), &v2);
  if (v2.__owns_) {
    std::mutex::unlock(v2.__m_);
  }
}

void sub_21597E658(uint64_t a1, uint64_t *a2)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 40);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 40));
  if (*(void *)(a1 + 144) == (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5) {
    sub_21597F1F4(a1, &__lk);
  }
  std::promise<void>::promise(&v5);
  std::promise<void>::get_future(&v5);
  sub_21597F564((void *)(a1 + 104), a2, (uint64_t *)&v5);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 160));
  if (__lk.__owns_)
  {
    std::mutex::unlock(__lk.__m_);
    __lk.__owns_ = 0;
    std::__assoc_sub_state::wait(v4);
    std::future<void>::~future((std::future<void> *)&v4);
    MEMORY[0x2166C4B90](&v5);
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
  else
  {
    std::__throw_system_error(1, "unique_lock::unlock: not locked");
    __break(1u);
  }
}

void sub_21597E744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21597E788(uint64_t a1, uint64_t *a2)
{
  v4.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 40);
  v4.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 40));
  if (*(void *)(a1 + 144) == (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5) {
    sub_21597F1F4(a1, &v4);
  }
  sub_21597F69C((void *)(a1 + 104), a2);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 160));
  if (v4.__owns_) {
    std::mutex::unlock(v4.__m_);
  }
}

void sub_21597E81C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_21597E838(uint64_t a1, uint64_t *a2)
{
  v4.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 40);
  v4.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 40));
  if (*(void *)(a1 + 144) == (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5) {
    sub_21597F1F4(a1, &v4);
  }
  sub_21597F7BC((void *)(a1 + 104), a2);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 160));
  if (v4.__owns_) {
    std::mutex::unlock(v4.__m_);
  }
}

void sub_21597E8CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21597E8E8(uint64_t a1)
{
  return sub_21597F084(a1 - 8);
}

void sub_21597E8F0(uint64_t a1)
{
  sub_21597F084(a1 - 8);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21597E92C(uint64_t a1)
{
  uint64_t result = a1 + 8;
  if (*(char *)(a1 + 31) < 0) {
    return *(void *)result;
  }
  return result;
}

void sub_21597E948(uint64_t a1)
{
  v2.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  v2.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  while (*(unsigned char *)(a1 + 149) || *(void *)(a1 + 136))
    std::condition_variable::wait((std::condition_variable *)(a1 + 248), &v2);
  if (v2.__owns_) {
    std::mutex::unlock(v2.__m_);
  }
}

void sub_21597E9B8(uint64_t a1, uint64_t *a2)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  if (*(void *)(a1 + 136) == (uint64_t)(*(void *)(a1 + 104) - *(void *)(a1 + 96)) >> 5) {
    sub_21597F1F4(a1 - 8, &__lk);
  }
  std::promise<void>::promise(&v5);
  std::promise<void>::get_future(&v5);
  sub_21597F564((void *)(a1 + 96), a2, (uint64_t *)&v5);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 152));
  if (__lk.__owns_)
  {
    std::mutex::unlock(__lk.__m_);
    __lk.__owns_ = 0;
    std::__assoc_sub_state::wait(v4);
    std::future<void>::~future((std::future<void> *)&v4);
    MEMORY[0x2166C4B90](&v5);
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
  else
  {
    std::__throw_system_error(1, "unique_lock::unlock: not locked");
    __break(1u);
  }
}

void sub_21597EAA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_21597EAE8(uint64_t a1, uint64_t *a2)
{
  v4.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  v4.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  if (*(void *)(a1 + 136) == (uint64_t)(*(void *)(a1 + 104) - *(void *)(a1 + 96)) >> 5) {
    sub_21597F1F4(a1 - 8, &v4);
  }
  sub_21597F69C((void *)(a1 + 96), a2);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 152));
  if (v4.__owns_) {
    std::mutex::unlock(v4.__m_);
  }
}

void sub_21597EB7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_21597EB98(uint64_t a1, uint64_t *a2)
{
  v4.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  v4.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  if (*(void *)(a1 + 136) == (uint64_t)(*(void *)(a1 + 104) - *(void *)(a1 + 96)) >> 5) {
    sub_21597F1F4(a1 - 8, &v4);
  }
  sub_21597F7BC((void *)(a1 + 96), a2);
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 152));
  if (v4.__owns_) {
    std::mutex::unlock(v4.__m_);
  }
}

void sub_21597EC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21597EC48(uint64_t a1)
{
  std::unique_lock<std::mutex> v2 = std::__thread_local_data();
  uint64_t v3 = *(const void **)a1;
  *(void *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  (*(void (**)(void))(a1 + 8))(*(void *)(a1 + 16));
  std::unique_lock<std::mutex> v4 = *(const void **)a1;
  *(void *)a1 = 0;
  if (v4)
  {
    uint64_t v5 = MEMORY[0x2166C4640]();
    MEMORY[0x2166C4D20](v5, 0x20C4093837F09);
  }
  MEMORY[0x2166C4D20](a1, 0xA0C40A8488062);
  return 0;
}

void sub_21597ECD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21597ECE4((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_21597ECE4(uint64_t **a1)
{
  std::unique_lock<std::mutex> v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *v2;
    uint64_t *v2 = 0;
    if (v3)
    {
      uint64_t v4 = MEMORY[0x2166C4640]();
      MEMORY[0x2166C4D20](v4, 0x20C4093837F09);
    }
    MEMORY[0x2166C4D20](v2, 0xA0C40A8488062);
  }
  return a1;
}

uint64_t *sub_21597ED50(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = MEMORY[0x2166C4640]();
    MEMORY[0x2166C4D20](v3, 0x20C4093837F09);
  }
  return a1;
}

uint64_t sub_21597ED98(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = result;
  if (*(unsigned __int8 *)(result + 8) == *((unsigned __int8 *)a2 + 8))
  {
    if (*(unsigned char *)(result + 8))
    {
      uint64_t v3 = *a2;
      *a2 = 0;
      uint64_t v4 = *(void *)result;
      *(void *)uint64_t result = v3;
      if (v4)
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v4 + 32);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        uint64_t v6 = *(std::__shared_weak_count **)(v4 + 16);
        if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
        JUMPOUT(0x2166C4D20);
      }
    }
  }
  else if (*(unsigned char *)(result + 8))
  {
    uint64_t v7 = *(void *)result;
    *(void *)uint64_t result = 0;
    if (v7)
    {
      uint64_t v8 = *(std::__shared_weak_count **)(v7 + 32);
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t v9 = *(std::__shared_weak_count **)(v7 + 16);
      if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      uint64_t result = MEMORY[0x2166C4D20](v7, 0x10F0C40B62ED6C6);
    }
    *(unsigned char *)(v2 + 8) = 0;
  }
  else
  {
    uint64_t v10 = *a2;
    *a2 = 0;
    *(void *)uint64_t result = v10;
    *(unsigned char *)(result + 8) = 1;
  }
  return result;
}

uint64_t *sub_21597EF8C(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 24)) {
    MEMORY[0x2166C4B90](a1 + 2);
  }
  if (*((unsigned char *)a1 + 8))
  {
    uint64_t v2 = *a1;
    *a1 = 0;
    if (v2)
    {
      uint64_t v3 = *(std::__shared_weak_count **)(v2 + 32);
      if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
      uint64_t v4 = *(std::__shared_weak_count **)(v2 + 16);
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      MEMORY[0x2166C4D20](v2, 0x10F0C40B62ED6C6);
    }
  }
  return a1;
}

uint64_t sub_21597F084(uint64_t a1)
{
  *(void *)a1 = &unk_26C673AA8;
  *(void *)(a1 + 8) = &unk_26C673AF0;
  uint64_t v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  atomic_store(1u, (unsigned __int8 *)(a1 + 156));
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 160));
  std::mutex::unlock(v2);
  v7.__m_ = v2;
  v7.__owns_ = 1;
  std::mutex::lock(v2);
  while (*(unsigned char *)(a1 + 157) || *(void *)(a1 + 144))
    std::condition_variable::wait((std::condition_variable *)(a1 + 256), &v7);
  if (v7.__owns_) {
    std::mutex::unlock(v7.__m_);
  }
  std::thread::join((std::thread *)(a1 + 304));
  if (*(unsigned char *)(a1 + 312)) {
    std::thread::~thread((std::thread *)(a1 + 304));
  }
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 256));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 208));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 160));
  uint64_t v3 = *(uint64_t **)(a1 + 104);
  if (v3)
  {
    uint64_t v4 = *(uint64_t **)(a1 + 112);
    uint64_t v5 = *(void **)(a1 + 104);
    if (v4 != v3)
    {
      do
        uint64_t v4 = sub_21597EF8C(v4 - 4);
      while (v4 != v3);
      uint64_t v5 = *(void **)(a1 + 104);
    }
    *(void *)(a1 + 112) = v3;
    operator delete(v5);
  }
  std::mutex::~mutex(v2);
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_21597F1F4(uint64_t a1, std::unique_lock<std::mutex> *__lk)
{
  int v3 = *(_DWORD *)(a1 + 152);
  switch(v3)
  {
    case 2:
      long long v43 = 0u;
      long long v44 = 0u;
      uint64_t v31 = *(void *)(a1 + 104) + 32 * *(void *)(a1 + 128);
      sub_21597ED98(v31, (uint64_t *)&v43);
      int v34 = *(unsigned __int8 *)(v31 + 24);
      uint64_t v33 = (unsigned char *)(v31 + 24);
      int v32 = v34;
      int v35 = (uint64_t *)(v33 - 8);
      if (v34 == BYTE8(v44))
      {
        if (v32)
        {
          uint64_t v36 = v44;
          *(void *)&long long v44 = 0;
          uint64_t v45 = *v35;
          *int v35 = v36;
          MEMORY[0x2166C4B90](&v45);
        }
      }
      else if (v32)
      {
        MEMORY[0x2166C4B90](v35);
        *uint64_t v33 = 0;
      }
      else
      {
        *int v35 = v44;
        *(void *)&long long v44 = 0;
        *uint64_t v33 = 1;
      }
      sub_21597EF8C((uint64_t *)&v43);
      unint64_t v40 = (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5;
      unint64_t v41 = *(void *)(a1 + 128) + 1;
      if (v41 < v40) {
        unint64_t v40 = 0;
      }
      *(void *)(a1 + 128) = v41 - v40;
      --*(void *)(a1 + 144);
      break;
    case 1:
      while (*(void *)(a1 + 144) == (uint64_t)(*(void *)(a1 + 112) - *(void *)(a1 + 104)) >> 5)
        std::condition_variable::wait((std::condition_variable *)(a1 + 208), __lk);
      break;
    case 0:
      uint64_t v5 = *(uint64_t **)(a1 + 104);
      uint64_t v4 = *(uint64_t **)(a1 + 112);
      uint64_t v6 = (char *)v4 - (char *)v5;
      if (v4 == v5)
      {
        uint64_t v11 = 0;
        unint64_t v8 = 0;
        uint64_t v15 = 0;
        unint64_t v14 = 0;
        int v12 = 0;
        uint64_t v10 = 0;
        if (v4) {
          goto LABEL_40;
        }
      }
      else
      {
        if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF1) {
          sub_215738AC0();
        }
        uint64_t v7 = v6 >> 4;
        unint64_t v8 = *(void *)(a1 + 144);
        int64_t v9 = 2 * v6;
        uint64_t v10 = (char *)operator new(2 * v6);
        uint64_t v11 = &v10[32 * v7];
        bzero(v10, v9);
        int v12 = &v10[v9];
        if (v8)
        {
          uint64_t v42 = v11;
          uint64_t v13 = 0;
          unint64_t v14 = 0;
          uint64_t v15 = 0;
          unint64_t v8 = 0;
          unint64_t v16 = v9 >> 5;
          do
          {
            while (1)
            {
              uint64_t v17 = *(void *)(a1 + 104);
              unint64_t v18 = (v13 + *(void *)(a1 + 128)) % (unint64_t)((*(void *)(a1 + 112) - v17) >> 5);
              uint64_t v19 = (uint64_t *)(v17 + 32 * v18);
              LOBYTE(v43) = 0;
              BYTE8(v43) = 0;
              if (*((unsigned char *)v19 + 8))
              {
                uint64_t v20 = *v19;
                *uint64_t v19 = 0;
                *(void *)&long long v43 = v20;
                BYTE8(v43) = 1;
              }
              LOBYTE(v44) = 0;
              BYTE8(v44) = 0;
              if (*((unsigned char *)v19 + 24))
              {
                uint64_t v21 = v17 + 32 * v18;
                *(void *)&long long v44 = *(void *)(v21 + 16);
                *(void *)(v21 + 16) = 0;
                BYTE8(v44) = 1;
              }
              sub_21597ED98((uint64_t)&v10[32 * v15], (uint64_t *)&v43);
              uint64_t v22 = &v10[32 * v15];
              int v25 = v22[24];
              unint64_t v24 = v22 + 24;
              int v23 = v25;
              uint64_t v26 = (uint64_t *)(v24 - 8);
              if (v25 == BYTE8(v44))
              {
                if (v23)
                {
                  uint64_t v27 = v44;
                  *(void *)&long long v44 = 0;
                  uint64_t v45 = *v26;
                  *uint64_t v26 = v27;
                  MEMORY[0x2166C4B90](&v45);
                }
              }
              else if (v23)
              {
                MEMORY[0x2166C4B90](v26);
                unsigned char *v24 = 0;
              }
              else
              {
                *uint64_t v26 = v44;
                *(void *)&long long v44 = 0;
                unsigned char *v24 = 1;
              }
              sub_21597EF8C((uint64_t *)&v43);
              uint64_t v28 = v15 + 1;
              unint64_t v29 = v15 + 1 >= v16 ? v16 : 0;
              if (v8 == v16) {
                break;
              }
              ++v8;
              uint64_t v15 = v28 - v29;
              if (++v13 == *(void *)(a1 + 144)) {
                goto LABEL_27;
              }
            }
            if (v14 + 1 >= v16) {
              unint64_t v30 = v16;
            }
            else {
              unint64_t v30 = 0;
            }
            unint64_t v14 = v14 + 1 - v30;
            unint64_t v8 = v16;
            uint64_t v15 = v28 - v29;
            ++v13;
          }
          while (v13 != *(void *)(a1 + 144));
LABEL_27:
          uint64_t v4 = *(uint64_t **)(a1 + 104);
          uint64_t v11 = v42;
          if (!v4) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }
        uint64_t v15 = 0;
        unint64_t v14 = 0;
        uint64_t v4 = v5;
        if (v5)
        {
LABEL_40:
          char v38 = *(uint64_t **)(a1 + 112);
          std::promise<void> v39 = v4;
          if (v38 != v4)
          {
            do
              char v38 = sub_21597EF8C(v38 - 4);
            while (v38 != v4);
            std::promise<void> v39 = *(uint64_t **)(a1 + 104);
          }
          *(void *)(a1 + 112) = v4;
          operator delete(v39);
        }
      }
LABEL_44:
      *(void *)(a1 + 104) = v10;
      *(void *)(a1 + 112) = v12;
      *(void *)(a1 + 120) = v11;
      *(void *)(a1 + 128) = v14;
      *(void *)(a1 + 136) = v15;
      *(void *)(a1 + 144) = v8;
      break;
  }
}

uint64_t sub_21597F564(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *a1 + 32 * a1[4];
  uint64_t v5 = *a3;
  *a3 = 0;
  char v19 = 1;
  uint64_t v6 = *a2;
  *a2 = 0;
  uint64_t v20 = v6;
  char v21 = 1;
  uint64_t v22 = v5;
  uint64_t v18 = 0;
  unsigned __int8 v23 = 1;
  sub_21597ED98(v4, &v20);
  int v9 = *(unsigned __int8 *)(v4 + 24);
  unint64_t v8 = (unsigned char *)(v4 + 24);
  int v7 = v9;
  uint64_t v10 = (uint64_t *)(v8 - 8);
  if (v9 == v23)
  {
    if (v7)
    {
      uint64_t v11 = v22;
      uint64_t v22 = 0;
      uint64_t v24 = *v10;
      *uint64_t v10 = v11;
      MEMORY[0x2166C4B90](&v24);
    }
  }
  else if (v7)
  {
    MEMORY[0x2166C4B90](v10);
    *unint64_t v8 = 0;
  }
  else
  {
    *uint64_t v10 = v22;
    uint64_t v22 = 0;
    *unint64_t v8 = 1;
  }
  sub_21597EF8C(&v20);
  uint64_t result = MEMORY[0x2166C4B90](&v18);
  unint64_t v13 = (uint64_t)(a1[1] - *a1) >> 5;
  uint64_t v14 = a1[5];
  unint64_t v15 = a1[4] + 1;
  if (v15 >= v13) {
    uint64_t v16 = (uint64_t)(a1[1] - *a1) >> 5;
  }
  else {
    uint64_t v16 = 0;
  }
  a1[4] = v15 - v16;
  if (v14 == v13)
  {
    unint64_t v17 = a1[3] + 1;
    if (v17 < v13) {
      unint64_t v13 = 0;
    }
    a1[3] = v17 - v13;
  }
  else
  {
    a1[5] = v14 + 1;
  }
  return result;
}

uint64_t *sub_21597F69C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a1 + 32 * a1[4];
  uint64_t v4 = *a2;
  *a2 = 0;
  uint64_t v17 = v4;
  char v18 = 1;
  LOBYTE(v19) = 0;
  unsigned __int8 v20 = 0;
  sub_21597ED98(v3, &v17);
  int v7 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v6 = (unsigned char *)(v3 + 24);
  int v5 = v7;
  unint64_t v8 = (uint64_t *)(v6 - 8);
  if (v7 == v20)
  {
    if (v5)
    {
      uint64_t v9 = v19;
      uint64_t v19 = 0;
      uint64_t v21 = *v8;
      *unint64_t v8 = v9;
      MEMORY[0x2166C4B90](&v21);
    }
  }
  else if (v5)
  {
    MEMORY[0x2166C4B90](v8);
    *uint64_t v6 = 0;
  }
  else
  {
    *unint64_t v8 = v19;
    uint64_t v19 = 0;
    *uint64_t v6 = 1;
  }
  uint64_t result = sub_21597EF8C(&v17);
  unint64_t v11 = a1[5];
  uint64_t v12 = a1[1];
  unint64_t v13 = (v12 - *a1) >> 5;
  unint64_t v14 = a1[4] + 1;
  if (v14 >= v13) {
    uint64_t v15 = (v12 - *a1) >> 5;
  }
  else {
    uint64_t v15 = 0;
  }
  a1[4] = v14 - v15;
  if (v11 == v13)
  {
    unint64_t v16 = a1[3] + 1;
    if (v16 < v11) {
      unint64_t v11 = 0;
    }
    a1[3] = v16 - v11;
  }
  else
  {
    a1[5] = v11 + 1;
  }
  return result;
}

uint64_t *sub_21597F7BC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a1 + 32 * a1[4];
  uint64_t v4 = *a2;
  uint64_t v16 = a2[1];
  char v17 = 1;
  uint64_t v18 = v4;
  *a2 = 0;
  a2[1] = 0;
  unsigned __int8 v19 = 1;
  sub_21597ED98(v3, &v16);
  int v7 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v6 = (unsigned char *)(v3 + 24);
  int v5 = v7;
  unint64_t v8 = (uint64_t *)(v6 - 8);
  if (v7 == v19)
  {
    if (v5)
    {
      uint64_t v9 = v18;
      uint64_t v18 = 0;
      uint64_t v20 = *v8;
      *unint64_t v8 = v9;
      MEMORY[0x2166C4B90](&v20);
    }
  }
  else if (v5)
  {
    MEMORY[0x2166C4B90](v8);
    *uint64_t v6 = 0;
  }
  else
  {
    *unint64_t v8 = v18;
    uint64_t v18 = 0;
    *uint64_t v6 = 1;
  }
  uint64_t result = sub_21597EF8C(&v16);
  unint64_t v11 = (uint64_t)(a1[1] - *a1) >> 5;
  uint64_t v12 = a1[5];
  unint64_t v13 = a1[4] + 1;
  if (v13 >= v11) {
    uint64_t v14 = (uint64_t)(a1[1] - *a1) >> 5;
  }
  else {
    uint64_t v14 = 0;
  }
  a1[4] = v13 - v14;
  if (v12 == v11)
  {
    unint64_t v15 = a1[3] + 1;
    if (v15 < v11) {
      unint64_t v11 = 0;
    }
    a1[3] = v15 - v11;
  }
  else
  {
    a1[5] = v12 + 1;
  }
  return result;
}

void sub_21597F8DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673B80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21597F8FC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673B80;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21597F950(uint64_t a1)
{
  sub_215E1AA1C((uint64_t)sub_21597D19C);
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_21597F9BC()
{
}

void sub_21597FA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, void *a17, uint64_t a18)
{
  if (a16 && a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  MEMORY[0x2166C4D20](v18, 0xA1C40BD48D6D6);
  _Unwind_Resume(a1);
}

uint64_t sub_21597FA98(uint64_t a1, uint64_t a2)
{
  v17[0] = a1;
  v17[1] = a2;
  v16[0] = &unk_26C673C70;
  v16[1] = v17;
  sub_215E12638((uint64_t)v16, (uint64_t)v5);
  if (v15) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v4 = *(void *)(a1 + 80);
    if (!v4) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, unsigned char *))(*(void *)v4 + 48))(v4, v5);
    if (v15) {
      return a1;
    }
  }
  if (!v14) {
    return a1;
  }
  if (v13)
  {
    if (v12 < 0) {
      operator delete(__p);
    }
    if (v10 < 0) {
      operator delete(v9);
    }
  }
  if (!v8 || (v7 & 0x80000000) == 0) {
    return a1;
  }
  operator delete(v6);
  return a1;
}

void sub_21597FBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21597FBB8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  *a1 = &unk_26C673C08;
  int v5 = (void *)a2[3];
  if (v5)
  {
    if (v5 == a2)
    {
      uint64_t v20 = v19;
      (*(void (**)(void *, void *))(*a2 + 24))(a2, v19);
    }
    else
    {
      uint64_t v20 = (void *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    uint64_t v20 = 0;
  }
  LOBYTE(v16[0]) = 0;
  char v18 = 0;
  if (*(unsigned char *)(a3 + 32))
  {
    uint64_t v6 = *(void *)(a3 + 24);
    if (v6)
    {
      if (v6 == a3)
      {
        char v17 = v16;
        (*(void (**)(uint64_t, void *))(*(void *)a3 + 24))(a3, v16);
      }
      else
      {
        char v17 = *(void **)(a3 + 24);
        *(void *)(a3 + 24) = 0;
      }
    }
    else
    {
      char v17 = 0;
    }
    int v7 = 1;
    char v18 = 1;
  }
  else
  {
    int v7 = 0;
  }
  char v8 = (char *)operator new(0xC0uLL);
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)char v8 = &unk_26C673CB0;
  if (v20)
  {
    if (v20 == v19)
    {
      int v25 = v24;
      (*(void (**)(void *, void *))(v19[0] + 24))(v19, v24);
      LOBYTE(v21[0]) = 0;
      unsigned __int8 v23 = 0;
      if (!v18) {
        goto LABEL_23;
      }
    }
    else
    {
      int v25 = v20;
      uint64_t v20 = 0;
      LOBYTE(v21[0]) = 0;
      unsigned __int8 v23 = 0;
      if (!v7)
      {
LABEL_23:
        int v9 = 0;
        char v10 = v8 + 24;
        *((void *)v8 + 4) = 0;
        *((void *)v8 + 5) = 0;
        *((void *)v8 + 3) = &unk_26C673BD0;
        unint64_t v11 = v25;
        if (!v25) {
          goto LABEL_24;
        }
        goto LABEL_29;
      }
    }
  }
  else
  {
    int v25 = 0;
    LOBYTE(v21[0]) = 0;
    unsigned __int8 v23 = 0;
    if (!v7) {
      goto LABEL_23;
    }
  }
  if (v17)
  {
    if (v17 == v16)
    {
      uint64_t v22 = v21;
      (*(void (**)(void *, void *))(v16[0] + 24))(v16, v21);
    }
    else
    {
      uint64_t v22 = v17;
      char v17 = 0;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  int v9 = 1;
  unsigned __int8 v23 = 1;
  char v10 = v8 + 24;
  *((void *)v8 + 4) = 0;
  *((void *)v8 + 5) = 0;
  *((void *)v8 + 3) = &unk_26C673BD0;
  unint64_t v11 = v25;
  if (!v25)
  {
LABEL_24:
    *((void *)v8 + 9) = 0;
    v8[80] = 0;
    char v12 = v8 + 80;
    v8[112] = 0;
    if (!v9) {
      goto LABEL_35;
    }
LABEL_31:
    if (v22)
    {
      if (v22 == v21)
      {
        *((void *)v8 + 13) = v12;
        (*(void (**)(void *))(v21[0] + 24))(v21);
        int v15 = v23;
        v8[112] = 1;
        *((void *)v8 + 15) = 0;
        *((void *)v8 + 16) = 850045863;
        *(_OWORD *)(v8 + 136) = 0u;
        *(_OWORD *)(v8 + 152) = 0u;
        *(_OWORD *)(v8 + 168) = 0u;
        *((void *)v8 + 23) = 0;
        if (!v15) {
          goto LABEL_43;
        }
        goto LABEL_38;
      }
      char v13 = &v22;
      *((void *)v8 + 13) = v22;
    }
    else
    {
      char v13 = v8 + 104;
    }
    void *v13 = 0;
    v8[112] = 1;
    *((void *)v8 + 15) = 0;
    *((void *)v8 + 16) = 850045863;
    *(_OWORD *)(v8 + 136) = 0u;
    *(_OWORD *)(v8 + 152) = 0u;
    *(_OWORD *)(v8 + 168) = 0u;
    *((void *)v8 + 23) = 0;
LABEL_38:
    if (v22 == v21)
    {
      (*(void (**)(void *))(v21[0] + 32))(v21);
    }
    else if (v22)
    {
      (*(void (**)(void))(*v22 + 40))();
    }
LABEL_43:
    if (v25 == v24)
    {
      (*(void (**)(void *))(v24[0] + 32))(v24);
    }
    else if (v25)
    {
      (*(void (**)(void))(*v25 + 40))();
    }
    a1[1] = v10;
    a1[2] = v8;
    sub_21597F9BC();
  }
LABEL_29:
  if (v11 == v24)
  {
    *((void *)v8 + 9) = v8 + 48;
    (*(void (**)(void *))(v24[0] + 24))(v24);
    int v14 = v23;
    v8[80] = 0;
    char v12 = v8 + 80;
    v8[112] = 0;
    if (v14) {
      goto LABEL_31;
    }
  }
  else
  {
    *((void *)v8 + 9) = v11;
    int v25 = 0;
    v8[80] = 0;
    char v12 = v8 + 80;
    v8[112] = 0;
    if (v9) {
      goto LABEL_31;
    }
  }
LABEL_35:
  *((void *)v8 + 15) = 0;
  *((void *)v8 + 16) = 850045863;
  *(_OWORD *)(v8 + 136) = 0u;
  *(_OWORD *)(v8 + 152) = 0u;
  *(_OWORD *)(v8 + 168) = 0u;
  *((void *)v8 + 23) = 0;
  goto LABEL_43;
}

void sub_21598023C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21598028C(void *result)
{
  uint64_t v1 = result;
  uint64_t *result = &unk_26C673C08;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215980324(void *a1)
{
  *a1 = &unk_26C673C08;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2159803CC(uint64_t a1, uint64_t a2)
{
  return a1;
}

void sub_2159803FC(uint64_t a1)
{
  sub_2159804B0(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215980440()
{
}

uint64_t sub_215980454(uint64_t a1)
{
  uint64_t v1 = *(void *)(**(void **)(a1 + 8) + 48);
  if (!v1) {
    sub_21573D7DC();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_2159804B0(uint64_t a1)
{
  *(void *)a1 = &unk_26C673BD0;
  std::mutex::~mutex((std::mutex *)(a1 + 104));
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (!*(unsigned char *)(a1 + 88))
  {
LABEL_7:
    uint64_t v4 = a1 + 24;
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5 != a1 + 24) {
      goto LABEL_8;
    }
LABEL_14:
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6) {
      return a1;
    }
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a1 + 80);
  if (v3 != a1 + 56)
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    goto LABEL_7;
  }
  (*(void (**)(uint64_t))(*(void *)(a1 + 56) + 32))(a1 + 56);
  uint64_t v4 = a1 + 24;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5 == a1 + 24) {
    goto LABEL_14;
  }
LABEL_8:
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6) {
LABEL_11:
  }
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_215980614(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673CB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215980634(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C673CB0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215980688(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

std::mutex **sub_2159806B0(std::mutex **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    std::mutex::~mutex(v2);
    MEMORY[0x2166C4D20]();
  }
  return a1;
}

void sub_2159806F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  unint64_t v11 = (char *)operator new(0x4B8uLL);
  *(_OWORD *)(v11 + 8) = 0u;
  *(void *)unint64_t v11 = &unk_26C674180;
  char v12 = v11 + 24;
  char v13 = v11 + 64;
  bzero(v11 + 64, 0x468uLL);
  *((void *)v11 + 3) = &unk_26C673D00;
  *((void *)v11 + 4) = &unk_26C673D68;
  *((void *)v11 + 5) = &unk_26C673DA0;
  v11[104] = 0;
  v11[144] = 0;
  v11[176] = 0;
  v11[472] = 0;
  v11[712] = 0;
  v11[752] = 0;
  v11[64] = 0;
  *((void *)v11 + 101) = 850045863;
  *((_OWORD *)v11 + 51) = 0u;
  *((_OWORD *)v11 + 52) = 0u;
  *((_OWORD *)v11 + 53) = 0u;
  *((void *)v11 + 108) = 0;
  *((void *)v11 + 109) = 1018212795;
  *((_OWORD *)v11 + 55) = 0u;
  *((_OWORD *)v11 + 56) = 0u;
  *((void *)v11 + 114) = 0;
  v11[1128] = 0;
  v11[1184] = 0;
  *(_OWORD *)(v11 + 1192) = 0u;
  *((void *)v11 + 145) = 0;
  *(_OWORD *)(v11 + 1144) = 0u;
  v11[1168] = 0;
  uint64_t v24 = v11 + 24;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v11 + 2, 1uLL, memory_order_relaxed);
  *((void *)v11 + 6) = v11 + 24;
  *((void *)v11 + 7) = v11;
  if (!*(unsigned char *)(a3 + 32))
  {
    int v15 = (void **)(v11 + 104);
    int v16 = v12[112];
    if (v16 == *(unsigned __int8 *)(a4 + 32)) {
      goto LABEL_18;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(a3 + 24);
  if (v14)
  {
    if (v14 == a3)
    {
      *((void *)v11 + 11) = v13;
      (*(void (**)(uint64_t, char *))(*(void *)a3 + 24))(a3, v13);
LABEL_17:
      v11[96] = 1;
      char v12 = v11 + 24;
      int v15 = (void **)(v11 + 104);
      int v16 = v24[112];
      if (v16 == *(unsigned __int8 *)(a4 + 32))
      {
LABEL_18:
        if (!v16) {
          goto LABEL_39;
        }
        uint64_t v19 = *(void *)(a4 + 24);
        if (v19)
        {
          if (v19 == a4)
          {
            p_p = &__p;
            (*(void (**)(uint64_t, void **))(*(void *)a4 + 24))(a4, &__p);
LABEL_25:
            if (&__p != v15)
            {
              uint64_t v20 = p_p;
              uint64_t v21 = (void **)*((void *)v12 + 13);
              if (p_p == &__p)
              {
                if (v21 == v15)
                {
                  (*((void (**)(void **, std::unique_lock<std::mutex> *))__p + 3))(&__p, &__lk);
                  (*((void (**)(void **))*p_p + 4))(p_p);
                  p_p = 0;
                  (*(void (**)(void, void **))(**((void **)v12 + 13) + 24))(*((void *)v12 + 13), &__p);
                  (*(void (**)(void))(**((void **)v12 + 13) + 32))(*((void *)v12 + 13));
                  *((void *)v12 + 13) = 0;
                  p_p = &__p;
                  (*(void (**)(std::unique_lock<std::mutex> *, void **))&__lk.__m_->__m_.__opaque[16])(&__lk, v15);
                  (*(void (**)(std::unique_lock<std::mutex> *))&__lk.__m_->__m_.__opaque[24])(&__lk);
                  *((void *)v12 + 13) = v15;
                  uint64_t v22 = p_p;
                  if (p_p == &__p) {
                    goto LABEL_29;
                  }
                }
                else
                {
                  (*((void (**)(void **, void **))__p + 3))(&__p, v15);
                  (*((void (**)(void **))*p_p + 4))(p_p);
                  p_p = (void **)*((void *)v12 + 13);
                  unsigned __int8 v23 = p_p;
                  *((void *)v12 + 13) = v15;
                  uint64_t v22 = v23;
                  if (v23 == &__p) {
                    goto LABEL_29;
                  }
                }
LABEL_35:
                if (v22) {
                  (*((void (**)(void **))*v22 + 5))(v22);
                }
                goto LABEL_39;
              }
              if (v21 != v15)
              {
                p_p = (void **)*((void *)v12 + 13);
                *((void *)v12 + 13) = v20;
                uint64_t v22 = v21;
                if (v21 == &__p)
                {
LABEL_29:
                  (*((void (**)(void **))__p + 4))(&__p);
                  goto LABEL_39;
                }
                goto LABEL_35;
              }
              (*((void (**)(void **, void **))*v15 + 3))(v15, &__p);
              (*(void (**)(void))(**((void **)v12 + 13) + 32))(*((void *)v12 + 13));
              *((void *)v12 + 13) = p_p;
              p_p = &__p;
            }
            uint64_t v22 = p_p;
            if (p_p == &__p) {
              goto LABEL_29;
            }
            goto LABEL_35;
          }
          uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 16))(v19);
        }
        p_p = (void **)v19;
        goto LABEL_25;
      }
LABEL_6:
      if (v16)
      {
        char v17 = (void **)*((void *)v12 + 13);
        if (v17 == v15)
        {
          (*((void (**)(void **))*v15 + 4))(v15);
          v12[112] = 0;
        }
        else
        {
          if (v17) {
            (*((void (**)(void **))*v17 + 5))(v17);
          }
          v12[112] = 0;
        }
LABEL_39:
        v24[1112] = a9;
        operator new();
      }
      uint64_t v18 = *(void *)(a4 + 24);
      if (v18)
      {
        if (v18 == a4)
        {
          *((void *)v12 + 13) = v15;
          (*(void (**)(void, void **))(**(void **)(a4 + 24) + 24))(*(void *)(a4 + 24), v15);
          goto LABEL_38;
        }
        uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 16))(v18);
      }
      *((void *)v12 + 13) = v18;
LABEL_38:
      v12[112] = 1;
      goto LABEL_39;
    }
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 16))(v14);
  }
  *((void *)v11 + 11) = v14;
  goto LABEL_17;
}

void sub_215982510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,int a57,__int16 a58,char a59,char a60,char a61)
{
}

void sub_21598267C()
{
  MEMORY[0x270FA5388]();
  __token[23] = 12;
  strcpy(__token, "/dev/urandom");
  std::random_device::random_device(&v2, (const std::string *)__token);
  if ((__token[23] & 0x80000000) != 0) {
    operator delete(*(void **)__token);
  }
  for (uint64_t i = 0; i != 2496; i += 4)
    *(_DWORD *)&v6[i] = MEMORY[0x2166C45C0](&v2);
  memcpy(__dst, v6, sizeof(__dst));
  sub_21598BF60(__dst, (uint64_t)__token);
  uint64_t v1 = (char *)operator new(0x9F8uLL);
  *((void *)v1 + 1) = 0;
  *((void *)v1 + 2) = 0;
  *(void *)uint64_t v1 = &unk_26C674310;
  memcpy(v1 + 24, __token, 0x9C8uLL);
  *((void *)v1 + 316) = &unk_26C686198;
  *(_OWORD *)(v1 + 2536) = v4;
  qword_26788E628 = (uint64_t)(v1 + 24);
  *(void *)algn_26788E630 = v1;
  std::random_device::~random_device(&v2);
}

void sub_2159827C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, std::random_device a11, std::random_device a12, int a13, char a14)
{
}

void sub_2159827E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, std::random_device a11, std::random_device a12)
{
}

void sub_2159827FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215982818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, std::random_device a11, std::random_device a12)
{
}

uint64_t sub_21598282C(uint64_t result)
{
  uint64_t v1 = result;
  std::random_device v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2159828A8(uint64_t a1)
{
  std::random_device v2 = *(std::__shared_weak_count **)(a1 + 280);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 264);
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  long long v4 = *(std::__shared_weak_count **)(a1 + 248);
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_2157B69B0(a1 + 64);
  if (!*(unsigned char *)(a1 + 56) || (*(char *)(a1 + 55) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 32));
  return a1;
}

void sub_215982968(unsigned int a1@<W0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_215741BFC(v7, a2);
  sub_21598929C((uint64_t)&v16, a1, (long long *)v7);
  *(_OWORD *)a3 = v16;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v18;
      uint64_t v18 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v25)
    {
      uint64_t v6 = v22;
      *(void *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(void *)(a3 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0) {
      operator delete((void *)__p);
    }
  }
  if (v15)
  {
    if (!v14) {
      goto LABEL_13;
    }
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9) {
      return;
    }
LABEL_14:
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_215982AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215982AE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  int v19 = 9;
  LOBYTE(v20) = 0;
  char v30 = 0;
  LOBYTE(v17) = 0;
  v18[16] = 0;
  int v7 = (std::mutex *)(a2 + 904);
  std::string::size_type v15 = a2 + 152;
  *(_DWORD *)&v18[24] = 0;
  char v16 = 1;
  while (1)
  {
    if (*(unsigned char *)(a2 + 896) == 2)
    {
      sub_215AECA68(v7, (uint64_t)&v35);
      long long v17 = v35;
      *(_OWORD *)uint64_t v18 = v36;
      if (v18[16]) {
        goto LABEL_8;
      }
    }
    else
    {
      LOBYTE(v17) = 0;
      *((void *)&v17 + 1) = 0;
      *(void *)uint64_t v18 = 0;
      char v18[8] = 1;
      if (v18[16])
      {
LABEL_8:
        if (!*(unsigned char *)(a2 + 440)) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    v18[16] = 1;
    if (!*(unsigned char *)(a2 + 440)) {
      goto LABEL_12;
    }
LABEL_11:
    v31[0] = v17;
    v31[1] = *(_OWORD *)v18;
    int v32 = 1;
    char v33 = 1;
    sub_215B15350(v15, (uint64_t)v31, (uint64_t)&v35);
    if (v46) {
      goto LABEL_12;
    }
    sub_215983BB0((uint64_t)&v19, (uint64_t)&v35);
    char v16 = 0;
    if (v46 || !v45) {
      goto LABEL_12;
    }
    if (!v44)
    {
LABEL_23:
      if (!v38) {
        goto LABEL_12;
      }
      goto LABEL_24;
    }
    if (SHIBYTE(v43) < 0)
    {
      operator delete((void *)v42);
      if ((SHIBYTE(v40) & 0x80000000) == 0) {
        goto LABEL_23;
      }
    }
    else if ((SHIBYTE(v40) & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete((void *)v39);
    if (!v38) {
      goto LABEL_12;
    }
LABEL_24:
    if (v37 < 0) {
      operator delete((void *)v36);
    }
LABEL_12:
    if (!*(unsigned char *)(a2 + 144)) {
      goto LABEL_14;
    }
    v34[0] = a2;
    v34[1] = &v17;
    v34[2] = &v19;
    v34[3] = &v16;
    v47[0] = &unk_26C673FC0;
    v47[1] = v34;
    sub_215E12638((uint64_t)v47, (uint64_t)&v35);
    if (v46) {
      goto LABEL_14;
    }
    sub_215983BB0((uint64_t)&v19, (uint64_t)&v35);
    if (v46 || !v45) {
      goto LABEL_14;
    }
    if (v44)
    {
      if (SHIBYTE(v43) < 0)
      {
        operator delete((void *)v42);
        if (SHIBYTE(v40) < 0)
        {
LABEL_38:
          operator delete((void *)v39);
          if (!v38) {
            goto LABEL_14;
          }
          goto LABEL_32;
        }
      }
      else if (SHIBYTE(v40) < 0)
      {
        goto LABEL_38;
      }
    }
    if (!v38) {
      goto LABEL_14;
    }
LABEL_32:
    if (v37 < 0) {
      operator delete((void *)v36);
    }
LABEL_14:
    if (v17 != 1) {
      break;
    }
    v48[0] = &unk_26C674070;
    v48[1] = a2;
    char v49 = v48;
    int v8 = sub_215AECC28((uint64_t)v7, (uint64_t)v48, a3, a4);
    if (v49 == v48)
    {
      (*(void (**)(void *))(v48[0] + 32))(v48);
    }
    else if (v49)
    {
      (*(void (**)(void *))(*v49 + 40))(v49);
    }
    *(_DWORD *)&v18[24] = v8 ^ 1;
    char v16 = v8;
    if ((v8 & 1) == 0) {
      goto LABEL_41;
    }
  }
  char v16 = 0;
LABEL_41:
  if (!v30)
  {
    long long v13 = *(_OWORD *)v18;
    *(_OWORD *)a1 = v17;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 28) = *(_OWORD *)&v18[12];
    *(unsigned char *)(a1 + 120) = 1;
    return;
  }
  if (*(unsigned char *)(a2 + 112))
  {
    uint64_t v9 = *(void *)(a2 + 104);
    if (!v9) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, long long *))(*(void *)v9 + 48))(v9, &v20);
  }
  long long v35 = v20;
  char v10 = sub_215741BFC(&v36, &__p);
  *(_OWORD *)a1 = v35;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v45)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v11 = v38;
    if (v38)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v10;
      *(void *)(a1 + 32) = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)char v10 = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v44)
    {
      uint64_t v12 = v41;
      *(void *)(a1 + 64) = v40;
      *(_OWORD *)(a1 + 48) = v39;
      uint64_t v40 = 0;
      long long v39 = 0uLL;
      *(void *)(a1 + 72) = v12;
      *(_OWORD *)(a1 + 80) = v42;
      *(void *)(a1 + 96) = v43;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v11 && v37 < 0) {
      operator delete((void *)v36);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v30 && v29)
  {
    if (!v28) {
      goto LABEL_60;
    }
    if ((v27 & 0x80000000) == 0)
    {
      if ((v25 & 0x80000000) == 0) {
        goto LABEL_60;
      }
LABEL_65:
      operator delete(v24);
      if (!v23) {
        return;
      }
LABEL_61:
      if (v22 < 0) {
        operator delete((void *)__p);
      }
      return;
    }
    operator delete(v26);
    if (v25 < 0) {
      goto LABEL_65;
    }
LABEL_60:
    if (v23) {
      goto LABEL_61;
    }
  }
}

void sub_215982FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_215984060((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215982FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215983014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_215984060((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215983028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_2159893FC((void *)(v12 - 136));
  sub_215984060((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215983044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_215984060((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215983058(uint64_t result)
{
  if (*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &unk_26C65A5B0;
    __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

uint64_t sub_2159830B4(uint64_t a1)
{
  *(void *)a1 = &unk_26C673D00;
  *(void *)(a1 + 8) = &unk_26C673D68;
  unint64_t v2 = a1 + 16;
  *(void *)(a1 + 16) = &unk_26C673DA0;
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 1176);
  *(_OWORD *)(a1 + 1168) = 0u;
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    long long v4 = *(void **)(a1 + 1120);
    int v5 = (std::mutex *)v4[4];
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    long long v4 = *(void **)(a1 + 1120);
    int v5 = (std::mutex *)v4[4];
    if (v5)
    {
LABEL_4:
      std::mutex::lock(v5);
      uint64_t v7 = v4[5];
      uint64_t v6 = (std::__shared_weak_count *)v4[6];
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      std::mutex::unlock(v5);
      goto LABEL_10;
    }
  }
  uint64_t v7 = v4[5];
  uint64_t v6 = (std::__shared_weak_count *)v4[6];
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
LABEL_10:
  sub_215AF4C44(v7, v2);
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  if (*(unsigned char *)(a1 + 144))
  {
    int v8 = *(std::__shared_weak_count **)(a1 + 136);
    if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    *(unsigned char *)(a1 + 144) = 0;
  }
  if (*(unsigned char *)(a1 + 440))
  {
    sub_215B15684(a1 + 152, 2, (uint64_t)&v21);
    if (!v31)
    {
      if (v30)
      {
        if (v29)
        {
          if (v28 < 0) {
            operator delete(__p);
          }
          if (v26 < 0) {
            operator delete(v25);
          }
        }
        if (v24 && v23 < 0) {
          operator delete(v22);
        }
      }
    }
  }
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 1176);
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  if (*(unsigned char *)(a1 + 1160)) {
    sub_215970F80(a1 + 1144);
  }
  char v10 = *(void **)(a1 + 1120);
  *(void *)(a1 + 1120) = 0;
  if (v10) {
    sub_2159887FC(v10);
  }
  if (*(unsigned char *)(a1 + 1104))
  {
    std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 1056));
    int v11 = *(void **)(a1 + 1032);
    if (v11)
    {
      *(void *)(a1 + 1040) = v11;
      operator delete(v11);
    }
    std::mutex::~mutex((std::mutex *)(a1 + 968));
  }
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 848));
  std::mutex::~mutex((std::mutex *)(a1 + 784));
  if (*(unsigned char *)(a1 + 720))
  {
    uint64_t v12 = *(void *)(a1 + 712);
    if (v12 == a1 + 688)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 688) + 32))(a1 + 688);
      if (!*(unsigned char *)(a1 + 680)) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 40))(v12);
    }
  }
  if (!*(unsigned char *)(a1 + 680)) {
    goto LABEL_40;
  }
LABEL_36:
  sub_2157B69B0(a1 + 504);
  if (*(unsigned char *)(a1 + 496) && *(char *)(a1 + 495) < 0) {
    operator delete(*(void **)(a1 + 472));
  }
LABEL_40:
  if (*(unsigned char *)(a1 + 440))
  {
    long long v13 = *(std::__shared_weak_count **)(a1 + 432);
    if (v13 && !atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    char v14 = *(std::__shared_weak_count **)(a1 + 416);
    if (v14) {
      std::__shared_weak_count::__release_weak(v14);
    }
    std::string::size_type v15 = *(std::__shared_weak_count **)(a1 + 400);
    if (v15) {
      std::__shared_weak_count::__release_weak(v15);
    }
    sub_2157B69B0(a1 + 216);
    if (*(unsigned char *)(a1 + 208) && *(char *)(a1 + 207) < 0) {
      operator delete(*(void **)(a1 + 184));
    }
  }
  if (*(unsigned char *)(a1 + 144))
  {
    char v16 = *(std::__shared_weak_count **)(a1 + 136);
    if (v16)
    {
      if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v17 = *(void *)(a1 + 104);
    if (v17 == a1 + 80)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 80) + 32))(a1 + 80);
      if (!*(unsigned char *)(a1 + 72)) {
        goto LABEL_66;
      }
      goto LABEL_60;
    }
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 40))(v17);
    }
  }
  if (!*(unsigned char *)(a1 + 72)) {
    goto LABEL_66;
  }
LABEL_60:
  uint64_t v18 = *(void *)(a1 + 64);
  if (v18 == a1 + 40)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 32))(a1 + 40);
  }
  else if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 40))(v18);
  }
LABEL_66:
  int v19 = *(std::__shared_weak_count **)(a1 + 32);
  if (v19) {
    std::__shared_weak_count::__release_weak(v19);
  }
  return a1;
}

uint64_t sub_215983604(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

uint64_t sub_2159836A0(uint64_t a1)
{
  return sub_2159830B4(a1 - 8);
}

uint64_t sub_2159836A8(uint64_t a1)
{
  return sub_2159830B4(a1 - 16);
}

void sub_2159836B0(uint64_t a1)
{
  sub_2159830B4(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2159836E8(uint64_t a1)
{
  sub_2159830B4(a1 - 8);

  JUMPOUT(0x2166C4D20);
}

void sub_215983724(uint64_t a1)
{
  sub_2159830B4(a1 - 16);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215983760(uint64_t a1)
{
  return a1 + 8;
}

uint64_t sub_215983768(uint64_t a1)
{
  return a1 + 1128;
}

void sub_215983770(uint64_t a1@<X0>, const void ***a2@<X1>, uint64_t a3@<X8>)
{
  int v10 = 9;
  LOBYTE(v11) = 0;
  char v21 = 0;
  if (*(unsigned char *)(a1 + 440))
  {
    sub_215B1501C(a1 + 152, a2, (uint64_t)&v25);
    if (!v36)
    {
      sub_215983BB0((uint64_t)&v10, (uint64_t)&v25);
      if (!v36)
      {
        if (v35)
        {
          if (v34)
          {
            if (SHIBYTE(v33) < 0) {
              operator delete(v32[0]);
            }
            if (SHIBYTE(v30) < 0) {
              operator delete(v29[0]);
            }
          }
          if (v28 && v27 < 0) {
            operator delete(__p);
          }
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 720))
  {
    uint64_t v22 = a1;
    char v23 = a2;
    char v24 = &v10;
    char v37 = &unk_26C6741D0;
    unsigned __int8 v38 = &v22;
    sub_215E12638((uint64_t)&v37, (uint64_t)&v25);
    if (!v36)
    {
      sub_215983BB0((uint64_t)&v10, (uint64_t)&v25);
      if (!v36)
      {
        if (v35)
        {
          if (v34)
          {
            if (SHIBYTE(v33) < 0) {
              operator delete(v32[0]);
            }
            if (SHIBYTE(v30) < 0) {
              operator delete(v29[0]);
            }
          }
          if (v28 && v27 < 0) {
            operator delete(__p);
          }
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 144))
  {
    uint64_t v22 = a1;
    char v23 = a2;
    char v24 = &v10;
    char v37 = &unk_26C674210;
    unsigned __int8 v38 = &v22;
    sub_215E12638((uint64_t)&v37, (uint64_t)&v25);
    if (!v36)
    {
      sub_215983BB0((uint64_t)&v10, (uint64_t)&v25);
      if (!v36)
      {
        if (v35)
        {
          if (v34)
          {
            if (SHIBYTE(v33) < 0) {
              operator delete(v32[0]);
            }
            if (SHIBYTE(v30) < 0) {
              operator delete(v29[0]);
            }
          }
          if (v28 && v27 < 0) {
            operator delete(__p);
          }
        }
      }
    }
  }
  if (!v21)
  {
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v6 = *(void *)(a1 + 104);
    if (!v6) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, long long *))(*(void *)v6 + 48))(v6, &v11);
  }
  long long v25 = v11;
  uint64_t v7 = sub_215741BFC(&__p, &v12);
  *(_OWORD *)a3 = v25;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v35)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v8 = v28;
    if (v28)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v7;
      *(void *)(a3 + 32) = *((void *)v7 + 2);
      *((void *)v7 + 1) = 0;
      *((void *)v7 + 2) = 0;
      *(void *)uint64_t v7 = 0;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v34)
    {
      uint64_t v9 = v31;
      *(void *)(a3 + 64) = v30;
      *(_OWORD *)(a3 + 48) = *(_OWORD *)v29;
      v29[0] = 0;
      v29[1] = 0;
      *(void *)(a3 + 72) = v9;
      *(_OWORD *)(a3 + 80) = *(_OWORD *)v32;
      *(void *)(a3 + 96) = v33;
      uint64_t v30 = 0;
      v32[0] = 0;
      v32[1] = 0;
      uint64_t v33 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v8 && v27 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
  if (v21 && v20)
  {
    if (!v19) {
      goto LABEL_30;
    }
    if (v18 < 0)
    {
      operator delete(v17);
      if ((v16 & 0x80000000) == 0)
      {
LABEL_30:
        if (!v14) {
          return;
        }
LABEL_31:
        if (v13 < 0) {
          operator delete((void *)v12);
        }
        return;
      }
    }
    else if ((v16 & 0x80000000) == 0)
    {
      goto LABEL_30;
    }
    operator delete(v15);
    if (!v14) {
      return;
    }
    goto LABEL_31;
  }
}

void sub_215983B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_215983B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215983B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215983B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215983B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215983BB0(uint64_t a1, uint64_t a2)
{
  long long v4 = (char *)(a1 + 8);
  if (*(unsigned char *)(a1 + 128)) {
    goto LABEL_2;
  }
  unsigned int v10 = *(_DWORD *)a1;
  LOBYTE(v21) = 0;
  char v29 = 0;
  sub_21598929C((uint64_t)&v30, v10, &v21);
  int v11 = *(unsigned __int8 *)(a1 + 128);
  *(_OWORD *)long long v4 = v30;
  long long v12 = (_OWORD *)(a1 + 24);
  if (!v11)
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 120) = 0;
    int v16 = v40;
    if (v40)
    {
      *(unsigned char *)(a1 + 48) = 0;
      if (v33)
      {
        *long long v12 = __p;
        *(void *)(a1 + 40) = v32;
        uint64_t v32 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a1 + 48) = 1;
      }
      *(unsigned char *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v39)
      {
        uint64_t v17 = v36;
        *(void *)(a1 + 72) = v35;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)v34;
        v34[0] = 0;
        v34[1] = 0;
        *(void *)(a1 + 80) = v17;
        *(_OWORD *)(a1 + 88) = *(_OWORD *)v37;
        *(void *)(a1 + 104) = v38;
        uint64_t v35 = 0;
        v37[0] = 0;
        v37[1] = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 112) = 1;
      }
      *(unsigned char *)(a1 + 120) = 1;
    }
    *(unsigned char *)(a1 + 128) = 1;
    if (!v16) {
      goto LABEL_49;
    }
    goto LABEL_41;
  }
  sub_215741894((uint64_t)v12, &__p);
  if (v40)
  {
LABEL_41:
    if (v39)
    {
      if (SHIBYTE(v38) < 0) {
        operator delete(v37[0]);
      }
      if (SHIBYTE(v35) < 0) {
        operator delete(v34[0]);
      }
    }
    if (v33 && SHIBYTE(v32) < 0) {
      operator delete((void *)__p);
    }
  }
LABEL_49:
  if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
LABEL_2:
  if (*(void *)(a2 + 8) != *(void *)(a1 + 16) || *(_DWORD *)a2 != *(_DWORD *)v4)
  {
    sub_215E10780(a2, &v20);
    sub_215E11614(v4, (void **)&v20.__r_.__value_.__l.__data_, (uint64_t)&v30);
    int v8 = *(unsigned __int8 *)(a1 + 128);
    *(_OWORD *)long long v4 = v30;
    uint64_t v9 = (_OWORD *)(a1 + 24);
    if (v8)
    {
      sub_215741894((uint64_t)v9, &__p);
      if (!v40) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 120) = 0;
      int v13 = v40;
      if (v40)
      {
        *(unsigned char *)(a1 + 48) = 0;
        if (v33)
        {
          *uint64_t v9 = __p;
          *(void *)(a1 + 40) = v32;
          uint64_t v32 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a1 + 48) = 1;
        }
        *(unsigned char *)(a1 + 56) = 0;
        *(unsigned char *)(a1 + 112) = 0;
        if (v39)
        {
          uint64_t v14 = v36;
          *(void *)(a1 + 72) = v35;
          *(_OWORD *)(a1 + 56) = *(_OWORD *)v34;
          v34[0] = 0;
          v34[1] = 0;
          *(void *)(a1 + 80) = v14;
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v37;
          *(void *)(a1 + 104) = v38;
          uint64_t v35 = 0;
          v37[0] = 0;
          v37[1] = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 112) = 1;
        }
        *(unsigned char *)(a1 + 120) = 1;
      }
      *(unsigned char *)(a1 + 128) = 1;
      if (!v13)
      {
LABEL_30:
        if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::size_type v15 = (void *)v20.__r_.__value_.__r.__words[0];
LABEL_33:
          operator delete(v15);
          return;
        }
        return;
      }
    }
    if (!v39) {
      goto LABEL_27;
    }
    if (SHIBYTE(v38) < 0)
    {
      operator delete(v37[0]);
      if ((SHIBYTE(v35) & 0x80000000) == 0)
      {
LABEL_27:
        if (!v33) {
          goto LABEL_30;
        }
LABEL_28:
        if (SHIBYTE(v32) < 0) {
          operator delete((void *)__p);
        }
        goto LABEL_30;
      }
    }
    else if ((SHIBYTE(v35) & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(v34[0]);
    if (!v33) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  if (*(unsigned char *)(a2 + 112)) {
    int v5 = (void **)(a2 + 16);
  }
  else {
    int v5 = (void **)&unk_215EF9F28;
  }
  if (!*((unsigned char *)v5 + 24)) {
    return;
  }
  sub_215E11614(v4, v5, (uint64_t)&v30);
  int v6 = *(unsigned __int8 *)(a1 + 128);
  *(_OWORD *)long long v4 = v30;
  uint64_t v7 = (_OWORD *)(a1 + 24);
  if (v6)
  {
    sub_215741894((uint64_t)v7, &__p);
    if (!v40) {
      return;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 120) = 0;
    int v18 = v40;
    if (v40)
    {
      *(unsigned char *)(a1 + 48) = 0;
      if (v33)
      {
        _OWORD *v7 = __p;
        *(void *)(a1 + 40) = v32;
        uint64_t v32 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a1 + 48) = 1;
      }
      *(unsigned char *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v39)
      {
        uint64_t v19 = v36;
        *(void *)(a1 + 72) = v35;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)v34;
        v34[0] = 0;
        v34[1] = 0;
        *(void *)(a1 + 80) = v19;
        *(_OWORD *)(a1 + 88) = *(_OWORD *)v37;
        *(void *)(a1 + 104) = v38;
        uint64_t v35 = 0;
        v37[0] = 0;
        v37[1] = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 112) = 1;
      }
      *(unsigned char *)(a1 + 120) = 1;
    }
    *(unsigned char *)(a1 + 128) = 1;
    if (!v18) {
      return;
    }
  }
  if (v39)
  {
    if (SHIBYTE(v38) < 0) {
      operator delete(v37[0]);
    }
    if (SHIBYTE(v35) < 0) {
      operator delete(v34[0]);
    }
  }
  if (v33 && SHIBYTE(v32) < 0)
  {
    std::string::size_type v15 = (void *)__p;
    goto LABEL_33;
  }
}

void sub_21598402C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215984044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215984060(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 128) || !*(unsigned char *)(a1 + 120)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 112))
  {
    if ((*(char *)(a1 + 111) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 79) & 0x80000000) == 0) {
        goto LABEL_6;
      }
LABEL_10:
      operator delete(*(void **)(a1 + 56));
      if (!*(unsigned char *)(a1 + 48)) {
        return a1;
      }
      goto LABEL_7;
    }
    operator delete(*(void **)(a1 + 88));
    if (*(char *)(a1 + 79) < 0) {
      goto LABEL_10;
    }
  }
LABEL_6:
  if (!*(unsigned char *)(a1 + 48)) {
    return a1;
  }
LABEL_7:
  if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 24));
  return a1;
}

void sub_2159840F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(unsigned char *)(a1 + 896))
  {
    LOBYTE(v32) = 0;
    char v40 = 0;
    sub_215982968(0xBu, &v32, (uint64_t)&v20);
    *(_OWORD *)a2 = v20;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (v30)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v4 = v23;
      if (v23)
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(void *)(a2 + 32) = v22;
        uint64_t v22 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v29)
      {
        uint64_t v5 = v26;
        *(void *)(a2 + 64) = v25;
        *(_OWORD *)(a2 + 48) = v24;
        long long v24 = 0uLL;
        *(void *)(a2 + 72) = v5;
        *(_OWORD *)(a2 + 80) = v27;
        *(void *)(a2 + 96) = v28;
        uint64_t v25 = 0;
        long long v27 = 0uLL;
        uint64_t v28 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v4 && SHIBYTE(v22) < 0) {
        operator delete((void *)__p);
      }
      if (!v40) {
        return;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 120) = 0;
      if (!v40) {
        return;
      }
    }
    if (v39)
    {
      if (v38 < 0) {
        operator delete(v37);
      }
      if (v36 < 0) {
        operator delete(v35);
      }
    }
    if (v34 && v33 < 0) {
      operator delete((void *)v32);
    }
    return;
  }
  if (!*(unsigned char *)(a1 + 1104))
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 32) = 0;
    goto LABEL_16;
  }
  sub_215982AE4((uint64_t)&v20, a1, 0, 0);
  if (v31)
  {
    long long v3 = __p;
    *(_OWORD *)a2 = v20;
    *(_OWORD *)(a2 + 16) = v3;
    *(void *)(a2 + 32) = v22;
LABEL_16:
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  long long v9 = v20;
  int v6 = sub_215741BFC(&v10, &__p);
  *(_OWORD *)a2 = v9;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v19)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v7 = v12;
    if (v12)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v6;
      *(void *)(a2 + 32) = *((void *)v6 + 2);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v18)
    {
      uint64_t v8 = v15;
      *(void *)(a2 + 64) = v14;
      *(_OWORD *)(a2 + 48) = v13;
      long long v13 = 0uLL;
      *(void *)(a2 + 72) = v8;
      *(_OWORD *)(a2 + 80) = v16;
      *(void *)(a2 + 96) = v17;
      uint64_t v14 = 0;
      long long v16 = 0uLL;
      uint64_t v17 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v7 && v11 < 0) {
      operator delete(v10);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 120) = 0;
  }
  if (!v31 && v30)
  {
    if (v29)
    {
      if (SHIBYTE(v28) < 0) {
        operator delete((void *)v27);
      }
      if (SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v23)
    {
      if (SHIBYTE(v22) < 0) {
        operator delete((void *)__p);
      }
    }
  }
}

void sub_215984414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_2157407D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215984428(_Unwind_Exception *a1)
{
  sub_21573FE74(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_21598443C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 896))
  {
    if (*(unsigned char *)(a1 + 1104))
    {
      sub_215982AE4(a3, a1, a2, 1);
    }
    else
    {
      *(unsigned char *)a3 = 0;
      *(unsigned char *)(a3 + 32) = 0;
      *(_DWORD *)(a3 + 40) = 0;
      *(unsigned char *)(a3 + 120) = 1;
    }
    return;
  }
  LOBYTE(v6) = 0;
  char v14 = 0;
  sub_215982968(0xBu, &v6, (uint64_t)&v15);
  *(_OWORD *)a3 = v15;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v25)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v14) {
      return;
    }
    goto LABEL_18;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v4 = v18;
  if (v18)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v17;
    uint64_t v17 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v24)
  {
    uint64_t v5 = v21;
    *(void *)(a3 + 64) = v20;
    *(_OWORD *)(a3 + 48) = v19;
    long long v19 = 0uLL;
    *(void *)(a3 + 72) = v5;
    *(_OWORD *)(a3 + 80) = v22;
    *(void *)(a3 + 96) = v23;
    uint64_t v20 = 0;
    long long v22 = 0uLL;
    uint64_t v23 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v4 && SHIBYTE(v17) < 0) {
    operator delete((void *)__p);
  }
  if (v14)
  {
LABEL_18:
    if (v13)
    {
      if (v12 < 0) {
        operator delete(v11);
      }
      if (v10 < 0) {
        operator delete(v9);
      }
    }
    if (v8 && v7 < 0) {
      operator delete((void *)v6);
    }
  }
}

void sub_21598461C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215984630(unsigned char *a1, void *a2)
{
  char v7 = a1;
  uint64_t v50 = *MEMORY[0x263EF8340];
  int v21 = 9;
  LOBYTE(v22) = 0;
  unsigned __int8 v32 = 0;
  char v8 = a2 + 1;
  uint64_t v9 = a2[1];
  unsigned __int8 v18 = (char **)*a2;
  long long v19 = (char *)v9;
  if (a2[2])
  {
    *(void *)(v9 + 16) = &v19;
    *a2 = v8;
    *char v8 = 0;
    a2[2] = 0;
    if (!a1[440]) {
      goto LABEL_7;
    }
  }
  else
  {
    unsigned __int8 v18 = &v19;
    if (!a1[440]) {
      goto LABEL_7;
    }
  }
  sub_215B159B8((std::string::size_type)(a1 + 152), &v18, (uint64_t)&v34);
  if (!v46)
  {
    sub_215983BB0((uint64_t)&v21, (uint64_t)&v34);
    if (!v46)
    {
      if (v45)
      {
        if (v44)
        {
          if (SHIBYTE(v43) < 0) {
            operator delete(v41);
          }
          if (SHIBYTE(v40) < 0) {
            operator delete(v38);
          }
        }
        if (v37 && v36 < 0) {
          operator delete(__p);
        }
      }
    }
  }
LABEL_7:
  if (v7[144])
  {
    v33[0] = v7;
    v33[1] = &v18;
    void v33[2] = &v21;
    v47[0] = &unk_26C674250;
    v47[1] = v33;
    sub_215E12638((uint64_t)v47, (uint64_t)&v34);
    if (!v46)
    {
      sub_215983BB0((uint64_t)&v21, (uint64_t)&v34);
      if (!v46)
      {
        if (v45)
        {
          if (v44)
          {
            if (SHIBYTE(v43) < 0) {
              operator delete(v41);
            }
            if (SHIBYTE(v40) < 0) {
              operator delete(v38);
            }
          }
          if (v37 && v36 < 0) {
            operator delete(__p);
          }
        }
      }
    }
  }
  if (v7[112])
  {
    char v10 = (unsigned char *)*((void *)v7 + 13);
    if (v10)
    {
      if (v10 == v7 + 80)
      {
        char v49 = v48;
        (*(void (**)(unsigned char *, void *))(*((void *)v7 + 10) + 24))(v7 + 80, v48);
        char v11 = v49;
        int v12 = v32;
        if (v32)
        {
LABEL_16:
          if (!v11) {
            sub_21573D7DC();
          }
          (*(void (**)(void *, long long *))(*v11 + 48))(v11, &v22);
          long long v34 = v22;
          char v13 = sub_215741BFC(&__p, &v23);
          if (!v45)
          {
            int v17 = 0;
            int v16 = 0;
            char v7 = 0;
            int v15 = 0;
            goto LABEL_30;
          }
          int v14 = v37;
          if (v37)
          {
            char v7 = __p;
            char v4 = v36;
            void *v13 = 0;
            v13[1] = 0;
            int v15 = 1;
            uint64_t v13[2] = 0;
            if (v44) {
              goto LABEL_20;
            }
          }
          else
          {
            char v7 = 0;
            int v15 = 0;
            if (v44)
            {
LABEL_20:
              uint64_t v2 = v38;
              char v5 = HIBYTE(v40);
              char v38 = 0;
              uint64_t v39 = 0;
              long long v3 = v41;
              char v6 = HIBYTE(v43);
              uint64_t v40 = 0;
              uint64_t v41 = 0;
              uint64_t v42 = 0;
              int v16 = 1;
              uint64_t v43 = 0;
              int v17 = 1;
              if (!v14) {
                goto LABEL_30;
              }
              goto LABEL_28;
            }
          }
          int v16 = 0;
          uint64_t v2 = 0;
          int v17 = 1;
          if (!v14) {
            goto LABEL_30;
          }
LABEL_28:
          if (v36 < 0) {
            operator delete(__p);
          }
LABEL_30:
          char v11 = v49;
          if (v49 != v48)
          {
LABEL_31:
            if (v11) {
              (*(void (**)(void *))(*v11 + 40))(v11);
            }
LABEL_33:
            if (!v12 || !v17) {
              goto LABEL_41;
            }
            if (!v16) {
              goto LABEL_38;
            }
            if (v6 < 0)
            {
              operator delete(v3);
              if ((v5 & 0x80) == 0)
              {
LABEL_38:
                if (!v15) {
                  goto LABEL_41;
                }
                goto LABEL_39;
              }
            }
            else if ((v5 & 0x80) == 0)
            {
              goto LABEL_38;
            }
            operator delete(v2);
            if (!v15) {
              goto LABEL_41;
            }
LABEL_39:
            if (v4 < 0) {
              operator delete(v7);
            }
            goto LABEL_41;
          }
LABEL_24:
          (*(void (**)(void *))(v48[0] + 32))(v48);
          goto LABEL_33;
        }
LABEL_23:
        int v17 = 0;
        int v16 = 0;
        int v15 = 0;
        if (v11 != v48) {
          goto LABEL_31;
        }
        goto LABEL_24;
      }
      char v11 = (void *)(*(uint64_t (**)(void))(*(void *)v10 + 16))(*((void *)v7 + 13));
    }
    else
    {
      char v11 = 0;
    }
    char v49 = v11;
    int v12 = v32;
    if (v32) {
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_41:
  sub_21573AE84((uint64_t)&v18, v19);
  if (v32 && v31)
  {
    if (!v30) {
      goto LABEL_46;
    }
    if (v29 < 0)
    {
      operator delete(v28);
      if ((v27 & 0x80000000) == 0)
      {
LABEL_46:
        if (!v25) {
          return;
        }
LABEL_47:
        if (v24 < 0) {
          operator delete((void *)v23);
        }
        return;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
      goto LABEL_46;
    }
    operator delete(v26);
    if (!v25) {
      return;
    }
    goto LABEL_47;
  }
}

void sub_215984ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_215984B28(uint64_t a1, void *a2)
{
}

void sub_215984B30(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v225 = 0;
  BOOL v226 = 0;
  unint64_t v227 = 0;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (*a2 == v6)
  {
LABEL_474:
    if (!*(unsigned char *)(a1 + 72)
      || v225 == v226
      || (*(void *)&long long __s1 = a1,
          *((void *)&__s1 + 1) = &v225,
          v193.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C6740F0,
          v193.__r_.__value_.__l.__size_ = (std::string::size_type)&__s1,
          sub_215E12638((uint64_t)&v193, (uint64_t)&__p),
          v213))
    {
      *(unsigned char *)(v4 + 120) = 1;
    }
    else
    {
      sub_215E10780((uint64_t)&__p, &v193);
      if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0) {
        sub_215738B0C(&__dst, v193.__r_.__value_.__l.__data_, v193.__r_.__value_.__l.__size_);
      }
      else {
        std::string __dst = v193;
      }
      char v195 = 1;
      LOBYTE(v196) = 0;
      char v200 = 0;
      char v201 = 1;
      sub_215982968(8u, (long long *)&__dst, (uint64_t)&__s1);
      *(_OWORD *)uint64_t v4 = __s1;
      *(unsigned char *)(v4 + 16) = 0;
      *(unsigned char *)(v4 + 112) = 0;
      if (v238)
      {
        *(unsigned char *)(v4 + 40) = 0;
        int v184 = v231;
        if (v231)
        {
          *(_OWORD *)(v4 + 16) = v229;
          *(void *)(v4 + 32) = v230;
          uint64_t v230 = 0;
          long long v229 = 0uLL;
          *(unsigned char *)(v4 + 40) = 1;
        }
        *(unsigned char *)(v4 + 48) = 0;
        *(unsigned char *)(v4 + 104) = 0;
        if (v237)
        {
          uint64_t v185 = v234;
          *(void *)(v4 + 64) = v233;
          *(_OWORD *)(v4 + 48) = v232;
          long long v232 = 0uLL;
          *(void *)(v4 + 72) = v185;
          *(_OWORD *)(v4 + 80) = v235;
          *(void *)(v4 + 96) = v236;
          BOOL v233 = 0;
          long long v235 = 0uLL;
          uint64_t v236 = 0;
          *(unsigned char *)(v4 + 104) = 1;
        }
        *(unsigned char *)(v4 + 112) = 1;
        *(unsigned char *)(v4 + 120) = 0;
        if (v184 && SHIBYTE(v230) < 0) {
          operator delete((void *)v229);
        }
      }
      else
      {
        *(unsigned char *)(v4 + 120) = 0;
      }
      if (v201)
      {
        if (v200)
        {
          if (v199 < 0) {
            operator delete(v198);
          }
          if (v197 < 0) {
            operator delete(v196);
          }
        }
        if (v195 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
      }
      if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v193.__r_.__value_.__l.__data_);
      }
      if (!v213 && v212)
      {
        if (v211)
        {
          if (SHIBYTE(v210) < 0) {
            operator delete((void *)v209);
          }
          if (SHIBYTE(v207) < 0) {
            operator delete((void *)v206);
          }
        }
        if (v205 && SHIBYTE(v204) < 0) {
          operator delete((void *)v203);
        }
      }
    }
    goto LABEL_478;
  }
  uint64_t v190 = (_OWORD *)(a1 + 728);
  int v191 = (std::mutex *)(a1 + 784);
  v189 = (std::condition_variable *)(a1 + 848);
  uint64_t v187 = a1 + 904;
  uint64_t v192 = a2[1];
  while (1)
  {
    sub_215AF0948(v5);
    uint64_t v8 = BYTE7(v203);
    if (SBYTE7(v203) < 0) {
      uint64_t v8 = *((void *)&__p + 1);
    }
    if (v8 == 8)
    {
      p_p = (long long *)__p;
      if ((SBYTE7(v203) & 0x80u) == 0) {
        p_p = &__p;
      }
      BOOL v10 = *(void *)"cv3d.net" == *(void *)p_p;
      if ((SBYTE7(v203) & 0x80000000) == 0)
      {
LABEL_12:
        if (!v10) {
          goto LABEL_25;
        }
        goto LABEL_13;
      }
    }
    else
    {
      BOOL v10 = 0;
      if ((SBYTE7(v203) & 0x80000000) == 0) {
        goto LABEL_12;
      }
    }
    operator delete((void *)__p);
    if (!v10)
    {
LABEL_25:
      int v17 = v226;
      if ((unint64_t)v226 < v227) {
        goto LABEL_26;
      }
      goto LABEL_3;
    }
LABEL_13:
    sub_215AF0948(v5);
    BOOL v11 = 0;
    strcpy((char *)&__p, "cv3d.net");
    BYTE7(v203) = 8;
    DWORD2(v203) = 2;
    LOBYTE(v204) = 1;
    char v12 = BYTE7(v229);
    if ((SBYTE7(v229) & 0x80u) == 0) {
      uint64_t v13 = BYTE7(v229);
    }
    else {
      uint64_t v13 = *((void *)&__s1 + 1);
    }
    if (v13 != 8) {
      goto LABEL_32;
    }
    if ((BYTE7(v229) & 0x80) != 0)
    {
      if (!memcmp((const void *)__s1, &__p, *((size_t *)&__s1 + 1)))
      {
LABEL_31:
        BOOL v11 = DWORD2(v229) == 2;
LABEL_32:
        if ((v12 & 0x80) == 0) {
          goto LABEL_33;
        }
        goto LABEL_63;
      }
      operator delete((void *)__s1);
LABEL_64:
      sub_215AF0948(v5);
      BOOL v30 = 0;
      strcpy((char *)&__p, "cv3d.net");
      BYTE7(v203) = 8;
      DWORD2(v203) = 5;
      LOBYTE(v204) = 1;
      char v31 = BYTE7(v229);
      if ((SBYTE7(v229) & 0x80u) == 0) {
        uint64_t v32 = BYTE7(v229);
      }
      else {
        uint64_t v32 = *((void *)&__s1 + 1);
      }
      if (v32 == 8)
      {
        if ((BYTE7(v229) & 0x80) != 0)
        {
          if (memcmp((const void *)__s1, &__p, *((size_t *)&__s1 + 1)))
          {
            operator delete((void *)__s1);
            goto LABEL_105;
          }
        }
        else if (BYTE7(v229))
        {
          p_s1 = &__s1;
          long long v34 = &__p;
          uint64_t v35 = BYTE7(v229);
          while (*(unsigned __int8 *)p_s1 == *(unsigned __int8 *)v34)
          {
            p_s1 = (long long *)((char *)p_s1 + 1);
            long long v34 = (long long *)((char *)v34 + 1);
            if (!--v35) {
              goto LABEL_76;
            }
          }
          BOOL v30 = 0;
          if ((BYTE7(v229) & 0x80) != 0)
          {
LABEL_104:
            operator delete((void *)__s1);
            if (!v30) {
              goto LABEL_105;
            }
LABEL_79:
            char v36 = *(const void **)(v5 + 8);
            unsigned __int8 v37 = *(std::__shared_weak_count **)(v5 + 16);
            if (v37) {
              atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            if (v36)
            {
              BOOL v38 = __dynamic_cast(v36, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674368, 0) != 0;
              if (!v37)
              {
LABEL_86:
                if (v38) {
                  goto LABEL_87;
                }
LABEL_98:
                std::string::size_type size = 0;
                uint64_t v39 = 0;
                long long __p = 0uLL;
                goto LABEL_99;
              }
            }
            else
            {
              BOOL v38 = 0;
              if (!v37) {
                goto LABEL_86;
              }
            }
            if (atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
              goto LABEL_86;
            }
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
            if (!v38) {
              goto LABEL_98;
            }
LABEL_87:
            uint64_t v39 = *(void *)(v5 + 8);
            std::string::size_type size = *(std::__shared_weak_count **)(v5 + 16);
            if (size) {
              atomic_fetch_add_explicit(&size->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            *(void *)&long long __p = v39;
            *((void *)&__p + 1) = size;
LABEL_99:
            std::mutex::lock(v191);
            if (!*(unsigned char *)(a1 + 776))
            {
              v190[1] = 0u;
              v190[2] = 0u;
              *uint64_t v190 = 0u;
              *(unsigned char *)(a1 + 776) = 1;
            }
            long long v41 = *(_OWORD *)(v39 + 8);
            long long v42 = *(_OWORD *)(v39 + 24);
            *(_OWORD *)((char *)v190 + 25) = *(_OWORD *)(v39 + 33);
            *uint64_t v190 = v41;
            v190[1] = v42;
            std::condition_variable::notify_all(v189);
            std::mutex::unlock(v191);
            if (!size)
            {
LABEL_471:
              uint64_t v6 = v192;
              goto LABEL_5;
            }
LABEL_469:
            if (!atomic_fetch_add(&size->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
              std::__shared_weak_count::__release_weak(size);
            }
            goto LABEL_471;
          }
LABEL_78:
          if (v30) {
            goto LABEL_79;
          }
LABEL_105:
          sub_215AF0948(v5);
          BOOL v43 = 0;
          strcpy((char *)&__p, "cv3d.net");
          BYTE7(v203) = 8;
          DWORD2(v203) = 3;
          LOBYTE(v204) = 1;
          char v44 = BYTE7(v229);
          if ((SBYTE7(v229) & 0x80u) == 0) {
            uint64_t v45 = BYTE7(v229);
          }
          else {
            uint64_t v45 = *((void *)&__s1 + 1);
          }
          if (v45 == 8)
          {
            if ((BYTE7(v229) & 0x80) != 0)
            {
              if (memcmp((const void *)__s1, &__p, *((size_t *)&__s1 + 1)))
              {
                operator delete((void *)__s1);
                goto LABEL_140;
              }
            }
            else if (BYTE7(v229))
            {
              char v46 = &__s1;
              long long v47 = &__p;
              uint64_t v48 = BYTE7(v229);
              while (*(unsigned __int8 *)v46 == *(unsigned __int8 *)v47)
              {
                char v46 = (long long *)((char *)v46 + 1);
                long long v47 = (long long *)((char *)v47 + 1);
                if (!--v48) {
                  goto LABEL_117;
                }
              }
              BOOL v43 = 0;
              if ((BYTE7(v229) & 0x80) != 0)
              {
LABEL_139:
                operator delete((void *)__s1);
                if (!v43) {
                  goto LABEL_140;
                }
LABEL_120:
                char v49 = *(const void **)(v5 + 8);
                uint64_t v50 = *(std::__shared_weak_count **)(v5 + 16);
                if (v50) {
                  atomic_fetch_add_explicit(&v50->__shared_owners_, 1uLL, memory_order_relaxed);
                }
                if (v49)
                {
                  BOOL v51 = __dynamic_cast(v49, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6743E8, 0) != 0;
                  if (!v50)
                  {
LABEL_127:
                    if (v51) {
                      goto LABEL_128;
                    }
LABEL_133:
                    std::string::size_type v52 = 0;
                    *(_OWORD *)&v193.__r_.__value_.__l.__data_ = 0uLL;
                    if (*(unsigned char *)(a1 + 1112)) {
                      goto LABEL_131;
                    }
                    goto LABEL_134;
                  }
                }
                else
                {
                  BOOL v51 = 0;
                  if (!v50) {
                    goto LABEL_127;
                  }
                }
                if (atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                  goto LABEL_127;
                }
                ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
                std::__shared_weak_count::__release_weak(v50);
                if (!v51) {
                  goto LABEL_133;
                }
LABEL_128:
                std::string::size_type v52 = *(void *)(v5 + 8);
                std::string::size_type v53 = *(void *)(v5 + 16);
                if (v53) {
                  atomic_fetch_add_explicit((atomic_ullong *volatile)(v53 + 8), 1uLL, memory_order_relaxed);
                }
                v193.__r_.__value_.__r.__words[0] = v52;
                v193.__r_.__value_.__l.__size_ = v53;
                if (*(unsigned char *)(a1 + 1112))
                {
LABEL_131:
                  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
                  sub_215AB99C4();
                }
LABEL_134:
                uint64_t v54 = *(void *)(a1 + 1120);
                uint64_t v55 = *(std::mutex **)(v54 + 32);
                if (v55)
                {
                  std::mutex::lock(*(std::mutex **)(v54 + 32));
                  uint64_t v57 = *(void *)(v54 + 40);
                  unint64_t v56 = *(std::__shared_weak_count **)(v54 + 48);
                  *(void *)&long long __p = v57;
                  *((void *)&__p + 1) = v56;
                  if (v56) {
                    atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                  std::mutex::unlock(v55);
                }
                else
                {
                  uint64_t v57 = *(void *)(v54 + 40);
                  unint64_t v56 = *(std::__shared_weak_count **)(v54 + 48);
                  *(void *)&long long __p = v57;
                  *((void *)&__p + 1) = v56;
                  if (v56) {
                    atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                }
                sub_215AF53E4(v57, (void *)(v52 + 8));
                if (v56 && !atomic_fetch_add(&v56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
                std::string::size_type size = (std::__shared_weak_count *)v193.__r_.__value_.__l.__size_;
                if (!v193.__r_.__value_.__l.__size_) {
                  goto LABEL_471;
                }
                goto LABEL_469;
              }
LABEL_119:
              if (v43) {
                goto LABEL_120;
              }
LABEL_140:
              sub_215AF0948(v5);
              BOOL v58 = 0;
              strcpy((char *)&__p, "cv3d.net");
              BYTE7(v203) = 8;
              DWORD2(v203) = 4;
              LOBYTE(v204) = 1;
              char v59 = BYTE7(v229);
              if ((SBYTE7(v229) & 0x80u) == 0) {
                uint64_t v60 = BYTE7(v229);
              }
              else {
                uint64_t v60 = *((void *)&__s1 + 1);
              }
              if (v60 == 8)
              {
                if ((BYTE7(v229) & 0x80) != 0)
                {
                  if (memcmp((const void *)__s1, &__p, *((size_t *)&__s1 + 1)))
                  {
                    operator delete((void *)__s1);
                    goto LABEL_197;
                  }
                }
                else if (BYTE7(v229))
                {
                  uint64_t v61 = &__s1;
                  unint64_t v62 = &__p;
                  uint64_t v63 = BYTE7(v229);
                  while (*(unsigned __int8 *)v61 == *(unsigned __int8 *)v62)
                  {
                    uint64_t v61 = (long long *)((char *)v61 + 1);
                    unint64_t v62 = (long long *)((char *)v62 + 1);
                    if (!--v63) {
                      goto LABEL_152;
                    }
                  }
                  BOOL v58 = 0;
                  if ((BYTE7(v229) & 0x80) != 0)
                  {
LABEL_196:
                    operator delete((void *)__s1);
                    if (!v58) {
                      goto LABEL_197;
                    }
LABEL_155:
                    uint64_t v64 = *(const void **)(v5 + 8);
                    uint64_t v65 = *(std::__shared_weak_count **)(v5 + 16);
                    if (v65) {
                      atomic_fetch_add_explicit(&v65->__shared_owners_, 1uLL, memory_order_relaxed);
                    }
                    if (v64)
                    {
                      BOOL v66 = __dynamic_cast(v64, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6742E8, 0) != 0;
                      if (!v65)
                      {
LABEL_162:
                        if (v66) {
                          goto LABEL_163;
                        }
LABEL_175:
                        uint64_t v68 = 0;
                        uint64_t v214 = 0;
                        v215 = 0;
                        if (MEMORY[0x38]) {
                          goto LABEL_176;
                        }
                        goto LABEL_290;
                      }
                    }
                    else
                    {
                      BOOL v66 = 0;
                      if (!v65) {
                        goto LABEL_162;
                      }
                    }
                    if (atomic_fetch_add(&v65->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                      goto LABEL_162;
                    }
                    ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                    std::__shared_weak_count::__release_weak(v65);
                    if (!v66) {
                      goto LABEL_175;
                    }
LABEL_163:
                    uint64_t v68 = *(void *)(v5 + 8);
                    unint64_t v67 = *(std::__shared_weak_count **)(v5 + 16);
                    if (v67) {
                      atomic_fetch_add_explicit(&v67->__shared_owners_, 1uLL, memory_order_relaxed);
                    }
                    uint64_t v214 = v68;
                    v215 = v67;
                    if (!*(unsigned char *)(v68 + 56)) {
                      goto LABEL_290;
                    }
LABEL_176:
                    unint64_t v69 = (long long *)(v68 + 32);
                    uint64_t v70 = *(void *)(a1 + 1168);
                    if (v70)
                    {
                      uint64_t v71 = *(unsigned __int8 *)(v70 + 71);
                      size_t v72 = *(void *)(v70 + 56);
                      if ((v71 & 0x80u) == 0) {
                        uint64_t v73 = *(unsigned __int8 *)(v70 + 71);
                      }
                      else {
                        uint64_t v73 = *(void *)(v70 + 56);
                      }
                      uint64_t v74 = *(unsigned __int8 *)(v68 + 55);
                      int v75 = (char)v74;
                      if ((v74 & 0x80u) != 0) {
                        uint64_t v74 = *(void *)(v68 + 40);
                      }
                      if (v73 == v74)
                      {
                        unint64_t v76 = (const void **)(v70 + 48);
                        if (v75 >= 0) {
                          size_t v77 = (unsigned __int8 *)(v68 + 32);
                        }
                        else {
                          size_t v77 = *(unsigned __int8 **)v69;
                        }
                        if ((v71 & 0x80) != 0)
                        {
                          if (!memcmp(*v76, v77, v72)) {
                            goto LABEL_290;
                          }
                        }
                        else
                        {
                          if (!v71) {
                            goto LABEL_290;
                          }
                          while (*(unsigned __int8 *)v76 == *v77)
                          {
                            unint64_t v76 = (const void **)((char *)v76 + 1);
                            ++v77;
                            if (!--v71) {
                              goto LABEL_290;
                            }
                          }
                        }
                      }
                      sub_2157CFEA8((uint64_t)&__s1, "Received a different target destination context during 'update enabled loggers' command. Retargeting of visualized textual log messages is not yet implemented. Command ignored.");
                      LOBYTE(v236) = 1;
                      sub_2157CFD48((uint64_t)&__p, 0x16u, &__s1);
                      if (*(unsigned char *)(a1 + 112))
                      {
                        uint64_t v85 = *(void *)(a1 + 104);
                        if (!v85) {
                          sub_21573D7DC();
                        }
                        (*(void (**)(uint64_t, long long *))(*(void *)v85 + 48))(v85, &__p);
                      }
                      if (v212)
                      {
                        if (v211)
                        {
                          if (SHIBYTE(v210) < 0) {
                            operator delete((void *)v209);
                          }
                          if (SHIBYTE(v207) < 0) {
                            operator delete((void *)v206);
                          }
                        }
                        if (v205 && SHIBYTE(v204) < 0) {
                          operator delete((void *)v203);
                        }
                      }
                      if ((_BYTE)v236)
                      {
                        if (BYTE8(v235))
                        {
                          if (SBYTE7(v235) < 0) {
                            operator delete(v233);
                          }
                          if (SBYTE7(v232) < 0) {
                            operator delete(v230);
                          }
                        }
                        if (BYTE8(v229) && SBYTE7(v229) < 0) {
                          operator delete((void *)__s1);
                        }
                      }
LABEL_290:
                      std::string::size_type v104 = *(void *)(a1 + 1168);
                      uint64_t v105 = *(std::__shared_weak_count **)(a1 + 1176);
                      std::string::size_type v241 = v104;
                      std::string::size_type v242 = (std::string::size_type)v105;
                      if (v105) {
                        atomic_fetch_add_explicit(&v105->__shared_owners_, 1uLL, memory_order_relaxed);
                      }
                      uint64_t v107 = *(void *)(v68 + 8);
                      uint64_t v106 = *(void *)(v68 + 16);
                      if (v107 != v106)
                      {
                        BOOL v186 = v105;
                        while (1)
                        {
                          if (!*(unsigned char *)(a1 + 1160))
                          {
                            sub_215971160((uint64_t *)&__p);
                            uint64_t v108 = __p;
                            if (*(unsigned char *)(a1 + 1160))
                            {
                              uint64_t v109 = *((void *)&__p + 1);
                              long long __p = 0uLL;
                              *(void *)(a1 + 1144) = v108;
                              uint64_t v110 = *(std::__shared_weak_count **)(a1 + 1152);
                              *(void *)(a1 + 1152) = v109;
                              if (v110 && !atomic_fetch_add(&v110->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                              {
                                ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
                                std::__shared_weak_count::__release_weak(v110);
                              }
                            }
                            else
                            {
                              *(_OWORD *)(a1 + 1144) = __p;
                              long long __p = 0uLL;
                              *(unsigned char *)(a1 + 1160) = 1;
                            }
                            sub_215970F80((uint64_t)&__p);
                          }
                          sub_215973CA4(&v239);
                          uint64_t v111 = *(unsigned __int8 *)(v239 + 39);
                          if ((v111 & 0x80u) == 0) {
                            uint64_t v112 = *(unsigned __int8 *)(v239 + 39);
                          }
                          else {
                            uint64_t v112 = *(void *)(v239 + 24);
                          }
                          uint64_t v113 = *(unsigned __int8 *)(v107 + 23);
                          int v114 = (char)v113;
                          if ((v113 & 0x80u) != 0) {
                            uint64_t v113 = *(void *)(v107 + 8);
                          }
                          if (v112 == v113)
                          {
                            unsigned int v115 = (const void **)(v239 + 16);
                            if (v114 >= 0) {
                              int v116 = (unsigned __int8 *)v107;
                            }
                            else {
                              int v116 = *(unsigned __int8 **)v107;
                            }
                            if ((v111 & 0x80) != 0)
                            {
                              if (!memcmp(*v115, v116, *(void *)(v239 + 24))) {
                                goto LABEL_337;
                              }
                            }
                            else
                            {
                              if (!*(unsigned char *)(v239 + 39)) {
                                goto LABEL_337;
                              }
                              while (*(unsigned __int8 *)v115 == *v116)
                              {
                                unsigned int v115 = (const void **)((char *)v115 + 1);
                                ++v116;
                                if (!--v111) {
                                  goto LABEL_337;
                                }
                              }
                            }
                          }
                          sub_215973DBC(v245);
                          uint64_t v117 = *(unsigned __int8 *)(v245[0] + 39);
                          if ((v117 & 0x80u) == 0) {
                            uint64_t v118 = *(unsigned __int8 *)(v245[0] + 39);
                          }
                          else {
                            uint64_t v118 = *(void *)(v245[0] + 24);
                          }
                          uint64_t v119 = *(unsigned __int8 *)(v107 + 23);
                          int v120 = (char)v119;
                          if ((v119 & 0x80u) != 0) {
                            uint64_t v119 = *(void *)(v107 + 8);
                          }
                          if (v118 == v119)
                          {
                            uint64_t v121 = (const void **)(v245[0] + 16);
                            if (v120 >= 0) {
                              char v122 = (unsigned __int8 *)v107;
                            }
                            else {
                              char v122 = *(unsigned __int8 **)v107;
                            }
                            if ((v117 & 0x80) != 0)
                            {
                              BOOL v130 = memcmp(*v121, v122, *(void *)(v245[0] + 24)) == 0;
                            }
                            else
                            {
                              if (!*(unsigned char *)(v245[0] + 39))
                              {
LABEL_337:
                                BOOL v130 = 1;
                                goto LABEL_340;
                              }
                              uint64_t v123 = v117 - 1;
                              do
                              {
                                int v125 = *(unsigned __int8 *)v121;
                                uint64_t v121 = (const void **)((char *)v121 + 1);
                                int v124 = v125;
                                int v127 = *v122++;
                                int v126 = v127;
                                BOOL v129 = v123-- != 0;
                                BOOL v130 = v124 == v126;
                              }
                              while (v124 == v126 && v129);
                            }
                          }
                          else
                          {
                            BOOL v130 = 0;
                          }
LABEL_340:
                          sub_215973CA4(&v244);
                          int v131 = (void *)(v244 + 16);
                          unint64_t v132 = *(unsigned __int8 *)(v244 + 39);
                          unint64_t v133 = *(void *)(v244 + 24);
                          if ((v132 & 0x80u) == 0) {
                            uint64_t v134 = *(unsigned __int8 *)(v244 + 39);
                          }
                          else {
                            uint64_t v134 = *(void *)(v244 + 24);
                          }
                          char v135 = *(unsigned char *)(v107 + 23);
                          if (v135 >= 0) {
                            unint64_t v136 = *(unsigned __int8 *)(v107 + 23);
                          }
                          else {
                            unint64_t v136 = *(void *)(v107 + 8);
                          }
                          if (v135 >= 0) {
                            size_t v137 = (unsigned __int8 *)v107;
                          }
                          else {
                            size_t v137 = *(unsigned __int8 **)v107;
                          }
                          if (v134 != v136) {
                            goto LABEL_356;
                          }
                          if ((v132 & 0x80) == 0)
                          {
                            if (!*(unsigned char *)(v244 + 39)) {
                              goto LABEL_392;
                            }
                            char v138 = v137;
                            char v139 = (unsigned __int8 *)(v244 + 16);
                            uint64_t v140 = *(unsigned __int8 *)(v244 + 39);
                            while (*v139 == *v138)
                            {
                              ++v139;
                              ++v138;
                              if (!--v140) {
                                goto LABEL_392;
                              }
                            }
LABEL_356:
                            if ((v132 & 0x80) != 0)
                            {
                              int v131 = (void *)*v131;
                              int64_t v141 = *(void *)(v244 + 24);
                            }
                            else
                            {
                              int64_t v141 = *(unsigned __int8 *)(v244 + 39);
                            }
                            goto LABEL_360;
                          }
                          int v131 = (void *)*v131;
                          int v142 = memcmp(v131, v137, *(void *)(v244 + 24));
                          int64_t v141 = v133;
                          if (!v142) {
                            goto LABEL_392;
                          }
LABEL_360:
                          if (v141 > (uint64_t)v136 || memcmp(v137, v131, v141)) {
                            goto LABEL_362;
                          }
                          if ((v132 & 0x80) != 0)
                          {
                            if (v136 <= v133) {
                              goto LABEL_362;
                            }
                          }
                          else
                          {
                            unint64_t v133 = v132;
                            if (v136 <= v132) {
                              goto LABEL_362;
                            }
                          }
                          if (v137[v133] == 46)
                          {
LABEL_392:
                            int v155 = 0;
                            unsigned int v156 = *(_DWORD *)(v107 + 24);
                            if (!v130) {
                              goto LABEL_407;
                            }
                            goto LABEL_393;
                          }
LABEL_362:
                          sub_215973DBC(&v243);
                          long long v143 = (void *)(v243 + 16);
                          unint64_t v144 = *(unsigned __int8 *)(v243 + 39);
                          unint64_t v145 = *(void *)(v243 + 24);
                          if ((v144 & 0x80u) == 0) {
                            uint64_t v146 = *(unsigned __int8 *)(v243 + 39);
                          }
                          else {
                            uint64_t v146 = *(void *)(v243 + 24);
                          }
                          char v147 = *(unsigned char *)(v107 + 23);
                          if (v147 >= 0) {
                            unint64_t v148 = *(unsigned __int8 *)(v107 + 23);
                          }
                          else {
                            unint64_t v148 = *(void *)(v107 + 8);
                          }
                          if (v147 >= 0) {
                            long long v149 = (unsigned __int8 *)v107;
                          }
                          else {
                            long long v149 = *(unsigned __int8 **)v107;
                          }
                          if (v146 != v148) {
                            goto LABEL_378;
                          }
                          if ((v144 & 0x80) == 0)
                          {
                            if (!*(unsigned char *)(v243 + 39)) {
                              goto LABEL_406;
                            }
                            long long v150 = v149;
                            char v151 = (unsigned __int8 *)(v243 + 16);
                            uint64_t v152 = *(unsigned __int8 *)(v243 + 39);
                            while (*v151 == *v150)
                            {
                              ++v151;
                              ++v150;
                              if (!--v152) {
                                goto LABEL_406;
                              }
                            }
LABEL_378:
                            if ((v144 & 0x80) != 0)
                            {
                              long long v143 = (void *)*v143;
                              int64_t v153 = *(void *)(v243 + 24);
                            }
                            else
                            {
                              int64_t v153 = *(unsigned __int8 *)(v243 + 39);
                            }
                            goto LABEL_385;
                          }
                          long long v143 = (void *)*v143;
                          int v154 = memcmp(v143, v149, *(void *)(v243 + 24));
                          int64_t v153 = v145;
                          if (!v154) {
                            goto LABEL_406;
                          }
LABEL_385:
                          if (v153 > (uint64_t)v148 || memcmp(v149, v143, v153)) {
                            goto LABEL_296;
                          }
                          if ((v144 & 0x80) != 0)
                          {
                            if (v148 <= v145) {
                              goto LABEL_296;
                            }
                          }
                          else
                          {
                            unint64_t v145 = v144;
                            if (v148 <= v144) {
                              goto LABEL_296;
                            }
                          }
                          if (v149[v145] == 46)
                          {
LABEL_406:
                            int v155 = 1;
                            unsigned int v156 = *(_DWORD *)(v107 + 24);
                            if (!v130)
                            {
LABEL_407:
                              uint64_t v161 = 0x100000001;
                              switch(v156)
                              {
                                case 0u:
                                  uint64_t v166 = 0x100000006;
                                  if (v155) {
                                    goto LABEL_414;
                                  }
                                  goto LABEL_296;
                                case 1u:
                                  if ((v155 & 1) == 0) {
                                    goto LABEL_296;
                                  }
                                  uint64_t v166 = 0;
LABEL_414:
                                  sub_215972AB8(*(std::recursive_mutex ****)(a1 + 1144), v107, v166);
                                  goto LABEL_296;
                                case 2u:
                                  goto LABEL_420;
                                case 3u:
                                  uint64_t v161 = 0x100000002;
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                  uint64_t v163 = *v162;
                                  if (!v155) {
                                    goto LABEL_399;
                                  }
                                  goto LABEL_421;
                                case 4u:
                                  uint64_t v161 = 0x100000003;
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                  uint64_t v163 = *v162;
                                  if (!v155) {
                                    goto LABEL_399;
                                  }
                                  goto LABEL_421;
                                case 5u:
                                  uint64_t v161 = 0x100000004;
LABEL_420:
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                  uint64_t v163 = *v162;
                                  if (v155) {
                                    goto LABEL_421;
                                  }
                                  goto LABEL_399;
                                case 6u:
                                  uint64_t v161 = 0x100000005;
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                  uint64_t v163 = *v162;
                                  if (!v155) {
                                    goto LABEL_399;
                                  }
                                  goto LABEL_421;
                                case 7u:
                                  uint64_t v161 = 0x100000006;
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                  uint64_t v163 = *v162;
                                  if (!v155) {
                                    goto LABEL_399;
                                  }
                                  goto LABEL_421;
                                default:
                                  goto LABEL_539;
                              }
                            }
LABEL_393:
                            if (v156 > 1)
                            {
                              if (v156 - 2 >= 6)
                              {
LABEL_539:
                                sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/Client.cpp", 663, (uint64_t)"", 0, (uint64_t)"invalid argument", 16, (void (*)(void **))sub_215E1ABD8);
LABEL_540:
                                abort();
                              }
                              uint64_t v161 = v156 - 2 + 0x100000001;
                              long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                              uint64_t v163 = *v162;
                              if (v155)
                              {
LABEL_421:
                                if (*((_DWORD *)v163 + 28) != 2)
                                {
                                  sub_215972370(v162, 6);
                                  long long v162 = *(std::recursive_mutex ****)(a1 + 1144);
                                }
                                if ((sub_215972AB8(v162, v107, v161) & 1) == 0
                                  && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/Client.cpp", 702, (uint64_t)"ret == elog::APILogging::Available()", 36, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
                                {
                                  goto LABEL_540;
                                }
                              }
                              else
                              {
LABEL_399:
                                if (*((_DWORD *)v163 + 29) != 2) {
                                  sub_215972610(v162);
                                }
                              }
                            }
                            else
                            {
                              char v157 = *(std::recursive_mutex ****)(a1 + 1144);
                              if (v155)
                              {
                                char v158 = **v157;
                                std::recursive_mutex::lock(v158);
                                char v159 = *v157;
                                *(void *)&long long __p = (*v157)[10];
                                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)v159[12];
                                sub_21597285C((uint64_t *)&__p, (uint64_t *)&v193);
                                uint64_t v160 = *v157;
                                if (*((unsigned char *)*v157 + 124)) {
                                  *((unsigned char *)v160 + 124) = 0;
                                }
                                *((_DWORD *)v160 + 28) = 1;
                              }
                              else
                              {
                                char v158 = **v157;
                                std::recursive_mutex::lock(v158);
                                char v164 = *v157;
                                *(void *)&long long __p = (*v157)[10];
                                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)v164[13];
                                sub_215972914((uint64_t *)&__p, (uint64_t *)&v193);
                                int v165 = *v157;
                                if (*((unsigned char *)*v157 + 132)) {
                                  *((unsigned char *)v165 + 132) = 0;
                                }
                                *((_DWORD *)v165 + 29) = 1;
                              }
                              std::recursive_mutex::unlock(v158);
                            }
                          }
LABEL_296:
                          v107 += 32;
                          if (v107 == v106)
                          {
                            std::string::size_type v104 = v241;
                            uint64_t v105 = v186;
                            break;
                          }
                        }
                      }
                      uint64_t v4 = a3;
                      if (*(unsigned char *)(a1 + 1160) && v104)
                      {
                        char v167 = *(std::recursive_mutex ****)(a1 + 1144);
                        if (*((_DWORD *)*v167 + 28) != 2) {
                          goto LABEL_459;
                        }
                        sub_215972E00(v167, &__p);
                        long long v168 = __p;
                        if ((void)__p == *((void *)&__p + 1))
                        {
                          if ((void)__p)
                          {
                            *((void *)&__p + 1) = __p;
                            operator delete((void *)__p);
                          }
                          goto LABEL_450;
                        }
                        char v169 = v105;
                        uint64_t v170 = *((void *)&__p + 1);
                        char v171 = (void *)__p;
                        while (*v171 != v104)
                        {
                          v171 += 2;
                          if (v171 == *((void **)&__p + 1))
                          {
                            char v171 = (void *)*((void *)&__p + 1);
                            break;
                          }
                        }
                        if ((void)__p)
                        {
                          do
                          {
                            uint64_t v173 = *(std::__shared_weak_count **)(v170 - 8);
                            if (v173 && !atomic_fetch_add(&v173->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                            {
                              ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
                              std::__shared_weak_count::__release_weak(v173);
                            }
                            v170 -= 16;
                          }
                          while (v170 != (void)v168);
                          *((void *)&__p + 1) = v168;
                          operator delete((void *)__p);
                          BOOL v172 = v171 == *((void **)&v168 + 1);
                          uint64_t v105 = v169;
                          if (v172)
                          {
                            std::string::size_type v104 = v241;
                            goto LABEL_450;
                          }
                        }
                        else
                        {
                          BOOL v172 = v171 == *((void **)&__p + 1);
                          uint64_t v105 = v169;
                          if (!v172) {
                            goto LABEL_459;
                          }
LABEL_450:
                          v174 = (std::__shared_weak_count *)v242;
                          v193.__r_.__value_.__r.__words[0] = v104;
                          v193.__r_.__value_.__l.__size_ = v242;
                          if (v242)
                          {
                            atomic_fetch_add_explicit((atomic_ullong *volatile)(v242 + 8), 1uLL, memory_order_relaxed);
                            uint64_t v175 = *(std::recursive_mutex ****)(a1 + 1144);
                            *((void *)&__p + 1) = v174;
                            atomic_fetch_add_explicit(&v174->__shared_owners_, 1uLL, memory_order_relaxed);
                          }
                          else
                          {
                            uint64_t v175 = *(std::recursive_mutex ****)(a1 + 1144);
                            *((void *)&__p + 1) = 0;
                          }
                          *(void *)&long long __p = v104;
                          sub_215972D0C(v175, (uint64_t *)&__p);
                          if (v174 && !atomic_fetch_add(&v174->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
                            std::__shared_weak_count::__release_weak(v174);
                          }
                          int v176 = (std::__shared_weak_count *)v193.__r_.__value_.__l.__size_;
                          if (v193.__r_.__value_.__l.__size_
                            && !atomic_fetch_add((atomic_ullong *volatile)(v193.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
                            std::__shared_weak_count::__release_weak(v176);
                          }
                        }
LABEL_459:
                        if (*(_DWORD *)(**(void **)(a1 + 1144) + 116) == 2)
                        {
                          uint64_t v177 = (std::__shared_weak_count *)v242;
                          if (v242)
                          {
                            atomic_fetch_add_explicit((atomic_ullong *volatile)(v242 + 8), 1uLL, memory_order_relaxed);
                            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
                            if (!atomic_fetch_add(&v177->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                            {
                              ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
                              std::__shared_weak_count::__release_weak(v177);
                            }
                            if (!atomic_fetch_add(&v177->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                            {
                              ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
                              std::__shared_weak_count::__release_weak(v177);
                            }
                          }
                        }
                      }
                      if (v105 && !atomic_fetch_add(&v105->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                      {
                        ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                        std::__shared_weak_count::__release_weak(v105);
                      }
                      std::string::size_type size = v215;
                      if (!v215) {
                        goto LABEL_471;
                      }
                      goto LABEL_469;
                    }
                    uint64_t v78 = *(void *)(a1 + 1120);
                    long long v79 = *(std::mutex **)(v78 + 32);
                    if (v79)
                    {
                      std::mutex::lock(*(std::mutex **)(v78 + 32));
                      float64x2x2_t v80 = *(std::__shared_weak_count **)(v78 + 8);
                      if (v80)
                      {
                        float64x2x2_t v81 = std::__shared_weak_count::lock(v80);
                        if (v81)
                        {
                          std::string::size_type v82 = *(void *)v78;
                          goto LABEL_226;
                        }
                      }
                      else
                      {
                        float64x2x2_t v81 = 0;
                      }
                      std::string::size_type v82 = 0;
LABEL_226:
                      std::mutex::unlock(v79);
LABEL_227:
                      if (v82)
                      {
                        if (!v81) {
                          goto LABEL_246;
                        }
                        atomic_fetch_add_explicit(&v81->__shared_owners_, 1uLL, memory_order_relaxed);
                        atomic_fetch_add_explicit(&v81->__shared_weak_owners_, 1uLL, memory_order_relaxed);
                        if (atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                        {
                          float64x2x2_t v86 = v81;
                          if (!atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                            goto LABEL_245;
                          }
LABEL_246:
                          uint64_t v90 = *(void *)(a1 + 1120);
                          uint64_t v91 = *(std::mutex **)(v90 + 32);
                          if (v91)
                          {
                            std::mutex::lock(*(std::mutex **)(v90 + 32));
                            uint64_t v92 = *(void *)(v90 + 40);
                            uint64_t v93 = *(std::__shared_weak_count **)(v90 + 48);
                            uint64_t v239 = v92;
                            uint64_t v240 = v93;
                            if (v93) {
                              atomic_fetch_add_explicit(&v93->__shared_owners_, 1uLL, memory_order_relaxed);
                            }
                            std::mutex::unlock(v91);
                          }
                          else
                          {
                            uint64_t v92 = *(void *)(v90 + 40);
                            uint64_t v93 = *(std::__shared_weak_count **)(v90 + 48);
                            uint64_t v239 = v92;
                            uint64_t v240 = v93;
                            if (v93) {
                              atomic_fetch_add_explicit(&v93->__shared_owners_, 1uLL, memory_order_relaxed);
                            }
                          }
                          char v94 = operator new(0x70uLL);
                          v94[1] = 0;
                          v94[2] = 0;
                          *char v94 = &unk_26C674290;
                          *(void *)&long long __s1 = v92;
                          *((void *)&__s1 + 1) = v93;
                          uint64_t v239 = 0;
                          uint64_t v240 = 0;
                          v193.__r_.__value_.__r.__words[0] = v82;
                          v193.__r_.__value_.__l.__size_ = (std::string::size_type)v81;
                          if (v81) {
                            atomic_fetch_add_explicit(&v81->__shared_weak_owners_, 1uLL, memory_order_relaxed);
                          }
                          LOBYTE(__p) = 0;
                          BYTE8(v203) = 0;
                          if (*(unsigned char *)(v68 + 56))
                          {
                            if (*(char *)(v68 + 55) < 0)
                            {
                              sub_215738B0C(&__p, *(void **)(v68 + 32), *(void *)(v68 + 40));
                            }
                            else
                            {
                              long long __p = *v69;
                              *(void *)&long long v203 = *(void *)(v68 + 48);
                            }
                            BYTE8(v203) = 1;
                          }
                          std::string::size_type v241 = 0;
                          std::string::size_type v242 = 0;
                          sub_215AB571C((uint64_t)(v94 + 3), &__s1, &v193, &__p, &v241);
                          if (BYTE8(v203) && SBYTE7(v203) < 0) {
                            operator delete((void *)__p);
                          }
                          if (v81) {
                            std::__shared_weak_count::__release_weak(v81);
                          }
                          if (v93 && !atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
                            std::__shared_weak_count::__release_weak(v93);
                          }
                          *(void *)(a1 + 1168) = v94 + 3;
                          uint64_t v95 = *(std::__shared_weak_count **)(a1 + 1176);
                          *(void *)(a1 + 1176) = v94;
                          if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
                            std::__shared_weak_count::__release_weak(v95);
                          }
                          uint64_t v96 = v240;
                          if (v240 && !atomic_fetch_add(&v240->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
                            std::__shared_weak_count::__release_weak(v96);
                          }
                          uint64_t v97 = *(void *)(a1 + 1120);
                          int v98 = *(std::mutex **)(v97 + 32);
                          if (v98)
                          {
                            std::mutex::lock(*(std::mutex **)(v97 + 32));
                            uint64_t v100 = *(void *)(v97 + 40);
                            uint64_t v99 = *(std::__shared_weak_count **)(v97 + 48);
                            *(void *)&long long __p = v100;
                            *((void *)&__p + 1) = v99;
                            if (v99) {
                              atomic_fetch_add_explicit(&v99->__shared_owners_, 1uLL, memory_order_relaxed);
                            }
                            std::mutex::unlock(v98);
                          }
                          else
                          {
                            uint64_t v100 = *(void *)(v97 + 40);
                            uint64_t v99 = *(std::__shared_weak_count **)(v97 + 48);
                            *(void *)&long long __p = v100;
                            *((void *)&__p + 1) = v99;
                            if (v99) {
                              atomic_fetch_add_explicit(&v99->__shared_owners_, 1uLL, memory_order_relaxed);
                            }
                          }
                          int v101 = *(char *)(v68 + 55);
                          if (v101 >= 0) {
                            long long v102 = (char *)(v68 + 32);
                          }
                          else {
                            long long v102 = *(char **)(v68 + 32);
                          }
                          if (v101 >= 0) {
                            size_t v103 = *(unsigned __int8 *)(v68 + 55);
                          }
                          else {
                            size_t v103 = *(void *)(v68 + 40);
                          }
                          sub_215AF52F8(v100, v102, v103, 1);
                          if (v99 && !atomic_fetch_add(&v99->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
                            std::__shared_weak_count::__release_weak(v99);
                          }
                          if (v81) {
                            std::__shared_weak_count::__release_weak(v81);
                          }
                          goto LABEL_290;
                        }
                        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                        std::__shared_weak_count::__release_weak(v81);
                        float64x2x2_t v86 = v81;
                        if (atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                          goto LABEL_246;
                        }
LABEL_245:
                        ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                        std::__shared_weak_count::__release_weak(v86);
                        goto LABEL_246;
                      }
                      float64x2x2_t v86 = v81;
                      float64x2x2_t v87 = *(std::__shared_weak_count **)(a1 + 32);
                      if (v87)
                      {
LABEL_233:
                        uint64_t v88 = *(void *)(a1 + 24);
                        atomic_fetch_add_explicit(&v87->__shared_weak_owners_, 1uLL, memory_order_relaxed);
                        uint64_t v89 = std::__shared_weak_count::lock(v87);
                        float64x2x2_t v81 = v89;
                        if (v89)
                        {
                          if (v88) {
                            std::string::size_type v82 = v88 + 8;
                          }
                          else {
                            std::string::size_type v82 = 0;
                          }
                          atomic_fetch_add_explicit(&v89->__shared_weak_owners_, 1uLL, memory_order_relaxed);
                          std::__shared_weak_count::__release_weak(v87);
                          if (!atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                            float64x2x2_t v87 = v81;
                            goto LABEL_242;
                          }
                        }
                        else
                        {
                          std::string::size_type v82 = 0;
LABEL_242:
                          std::__shared_weak_count::__release_weak(v87);
                        }
LABEL_243:
                        if (!v86 || atomic_fetch_add(&v86->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                          goto LABEL_246;
                        }
                        goto LABEL_245;
                      }
                    }
                    else
                    {
                      float64x2x2_t v83 = *(std::__shared_weak_count **)(v78 + 8);
                      if (v83)
                      {
                        float64x2x2_t v84 = std::__shared_weak_count::lock(v83);
                        if (v84)
                        {
                          float64x2x2_t v81 = v84;
                          std::string::size_type v82 = *(void *)v78;
                          goto LABEL_227;
                        }
                      }
                      float64x2x2_t v86 = 0;
                      float64x2x2_t v87 = *(std::__shared_weak_count **)(a1 + 32);
                      if (v87) {
                        goto LABEL_233;
                      }
                    }
                    std::string::size_type v82 = 0;
                    float64x2x2_t v81 = 0;
                    goto LABEL_243;
                  }
LABEL_154:
                  if (v58) {
                    goto LABEL_155;
                  }
LABEL_197:
                  int v17 = v226;
                  if ((unint64_t)v226 < v227) {
                    goto LABEL_26;
                  }
                  goto LABEL_3;
                }
LABEL_152:
                BOOL v58 = DWORD2(v229) == 4;
              }
              if (v59 < 0) {
                goto LABEL_196;
              }
              goto LABEL_154;
            }
LABEL_117:
            BOOL v43 = DWORD2(v229) == 3;
          }
          if (v44 < 0) {
            goto LABEL_139;
          }
          goto LABEL_119;
        }
LABEL_76:
        BOOL v30 = DWORD2(v229) == 5;
      }
      if (v31 < 0) {
        goto LABEL_104;
      }
      goto LABEL_78;
    }
    if (!BYTE7(v229)) {
      goto LABEL_31;
    }
    int v14 = &__s1;
    int v15 = &__p;
    uint64_t v16 = BYTE7(v229);
    while (*(unsigned __int8 *)v14 == *(unsigned __int8 *)v15)
    {
      int v14 = (long long *)((char *)v14 + 1);
      int v15 = (long long *)((char *)v15 + 1);
      if (!--v16) {
        goto LABEL_31;
      }
    }
    BOOL v11 = 0;
    if ((BYTE7(v229) & 0x80) == 0)
    {
LABEL_33:
      if (!v11) {
        goto LABEL_64;
      }
      goto LABEL_34;
    }
LABEL_63:
    operator delete((void *)__s1);
    if (!v11) {
      goto LABEL_64;
    }
LABEL_34:
    long long v19 = *(const void **)(v5 + 8);
    uint64_t v20 = *(std::__shared_weak_count **)(v5 + 16);
    if (v20) {
      atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v19)
    {
      BOOL v21 = __dynamic_cast(v19, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6744B8, 0) != 0;
      if (!v20) {
        goto LABEL_41;
      }
    }
    else
    {
      BOOL v21 = 0;
      if (!v20) {
        goto LABEL_41;
      }
    }
    if (atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
LABEL_41:
      if (!v21) {
        goto LABEL_49;
      }
      goto LABEL_42;
    }
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!v21)
    {
LABEL_49:
      long long v23 = 0;
      uint64_t v22 = 0;
      long long __s1 = 0uLL;
      if (MEMORY[0x38]) {
        goto LABEL_45;
      }
      goto LABEL_50;
    }
LABEL_42:
    uint64_t v22 = *(void *)(v5 + 8);
    long long v23 = *(std::__shared_weak_count **)(v5 + 16);
    if (v23) {
      atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(void *)&long long __s1 = v22;
    *((void *)&__s1 + 1) = v23;
    if (*(unsigned char *)(v22 + 56))
    {
LABEL_45:
      if (*(_DWORD *)(v22 + 48))
      {
        int v24 = 1;
        char v25 = 1;
        if (!v23) {
          goto LABEL_93;
        }
        goto LABEL_91;
      }
      if (*(unsigned char *)(a1 + 1104))
      {
        long long v29 = *(_OWORD *)(v22 + 8);
        uint64_t v28 = v22 + 8;
        long long __p = v29;
        long long v203 = *(_OWORD *)(v28 + 16);
        uint64_t v204 = *(void *)(v28 + 32);
        sub_215AECEC8(v187, &__p);
      }
      int v24 = 0;
      char v25 = 0;
      if (v23) {
        goto LABEL_91;
      }
      goto LABEL_93;
    }
LABEL_50:
    if (!*(unsigned char *)(a1 + 440))
    {
      char v25 = 0;
      int v24 = 1;
      if (!v23) {
        goto LABEL_93;
      }
LABEL_91:
      if (!atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
      goto LABEL_93;
    }
    uint64_t v27 = *(void *)(a1 + 424);
    uint64_t v26 = *(std::__shared_weak_count **)(a1 + 432);
    *(void *)&long long __p = v27;
    *((void *)&__p + 1) = v26;
    if (v26) {
      atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    std::mutex::lock((std::mutex *)(v27 + 8));
    ++*(void *)v27;
    std::condition_variable::notify_all((std::condition_variable *)(v27 + 72));
    std::mutex::unlock((std::mutex *)(v27 + 8));
    if (v26 && !atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    char v25 = 0;
    int v24 = 1;
    long long v23 = (std::__shared_weak_count *)*((void *)&__s1 + 1);
    if (*((void *)&__s1 + 1)) {
      goto LABEL_91;
    }
LABEL_93:
    if (v25) {
      break;
    }
    uint64_t v6 = v192;
    if (!v24) {
      goto LABEL_5;
    }
    int v17 = v226;
    if ((unint64_t)v226 < v227)
    {
LABEL_26:
      *(void *)int v17 = &unk_26C678D20;
      *((void *)v17 + 1) = *(void *)(v5 + 8);
      uint64_t v18 = *(void *)(v5 + 16);
      *((void *)v17 + 2) = v18;
      if (v18) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
      }
      char v7 = v17 + 24;
      goto LABEL_4;
    }
LABEL_3:
    char v7 = sub_21598B844((char **)&v225, *(void *)(v5 + 8), *(void *)(v5 + 16));
LABEL_4:
    BOOL v226 = v7;
LABEL_5:
    v5 += 24;
    if (v5 == v6) {
      goto LABEL_474;
    }
  }
  sub_2157CFEA8((uint64_t)v216, "Client received invalid sync command from server.");
  char v224 = 1;
  sub_215982968(8u, (long long *)v216, (uint64_t)&__p);
  *(_OWORD *)uint64_t v4 = __p;
  *(unsigned char *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 112) = 0;
  if (v212)
  {
    *(unsigned char *)(v4 + 40) = 0;
    int v182 = v205;
    if (v205)
    {
      *(_OWORD *)(v4 + 16) = v203;
      *(void *)(v4 + 32) = v204;
      uint64_t v204 = 0;
      long long v203 = 0uLL;
      *(unsigned char *)(v4 + 40) = 1;
    }
    *(unsigned char *)(v4 + 48) = 0;
    *(unsigned char *)(v4 + 104) = 0;
    if (v211)
    {
      uint64_t v183 = v208;
      *(void *)(v4 + 64) = v207;
      *(_OWORD *)(v4 + 48) = v206;
      long long v206 = 0uLL;
      *(void *)(v4 + 72) = v183;
      *(_OWORD *)(v4 + 80) = v209;
      *(void *)(v4 + 96) = v210;
      uint64_t v207 = 0;
      long long v209 = 0uLL;
      uint64_t v210 = 0;
      *(unsigned char *)(v4 + 104) = 1;
    }
    *(unsigned char *)(v4 + 112) = 1;
    *(unsigned char *)(v4 + 120) = 0;
    if (v182 && SHIBYTE(v204) < 0) {
      operator delete((void *)v203);
    }
  }
  else
  {
    *(unsigned char *)(v4 + 120) = 0;
  }
  if (v224)
  {
    if (v223)
    {
      if (v222 < 0) {
        operator delete(v221);
      }
      if (v220 < 0) {
        operator delete(v219);
      }
    }
    if (v218 && v217 < 0) {
      operator delete(v216[0]);
    }
  }
LABEL_478:
  uint64_t v178 = (char *)v225;
  if (v225)
  {
    BOOL v179 = v226;
    uint64_t v180 = v225;
    if (v226 != v225)
    {
      do
      {
        v181 = (std::__shared_weak_count *)*((void *)v179 - 1);
        if (v181)
        {
          if (!atomic_fetch_add(&v181->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
            std::__shared_weak_count::__release_weak(v181);
          }
        }
        v179 -= 24;
      }
      while (v179 != v178);
      uint64_t v180 = v225;
    }
    BOOL v226 = v178;
    operator delete(v180);
  }
}