void sub_215A99578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2159A3688((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215A99590(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  (*(void (**)(unsigned char *))(*(void *)a1 + 144))(a1);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 24);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 48);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 72);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 96);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 120);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 56))(a1, a2 + 144);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 152);
  if ((a1[12] & 2) != 0)
  {
    uint64_t v7 = a2 + 176;
    sub_215A99778();
  }
  uint64_t v7 = a2 + 176;
  uint64_t result = sub_215A998A4((uint64_t)a1, &v7);
  if (a3 >= 2)
  {
    uint64_t v7 = *((void *)a1 + 1);
    return sub_215A99B90((int *)&v7, a1, a2 + 192);
  }
  return result;
}

void sub_215A99778()
{
  int v0 = 0;
  sub_2159651D4();
}

void sub_215A99860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9987C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215A99890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215A998A4(uint64_t a1, void *a2)
{
  uint64_t v3 = *a2;
  (*(void (**)(uint64_t, void))(*(void *)a1 + 80))(a1, *a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 11);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 13);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 14);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 80);

  return v4(a1, v3 + 15);
}

uint64_t sub_215A99B90(int *a1, unsigned char *a2, uint64_t a3)
{
  int v7 = 1;
  (*(void (**)(unsigned char *, int *))(*(void *)a2 + 104))(a2, &v7);
  if (*a1 < 1) {
    return sub_215A99CD8(a2, a3);
  }
  if (*a1 == 2)
  {
    int v8 = 1;
    (*(void (**)(unsigned char *, int *))(*(void *)a2 + 104))(a2, &v8);
    if (*a1 <= 0) {
      return sub_215A99CD8(a2, a3);
    }
  }
  (*(void (**)(unsigned char *))(*(void *)a2 + 16))(a2);
  sub_215A99CD8(a2, a3);
  return (*(uint64_t (**)(unsigned char *))(*(void *)a2 + 24))(a2);
}

uint64_t sub_215A99CD8(unsigned char *a1, uint64_t a2)
{
  if ((a1[12] & 2) != 0) {
    sub_215A99E74();
  }
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 4);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 8);
  if ((a1[12] & 2) != 0) {
    sub_215A99E74();
  }
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 12);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 16);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 20);
}

void sub_215A99E74()
{
  int v0 = 0;
  sub_215A96D38();
}

void sub_215A99F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A99F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215A99F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215A99FA0(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v10 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CB8, 0);
  if (v4) {
    sub_215A9A6B0(&v10, (uint64_t)v4);
  }
  uint64_t v10 = a2;
  v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CF0, 0);
  if (v5)
  {
    sub_215A9B94C(&v10, v5);
  }
  else
  {
    uint64_t v10 = a2;
    v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675D78, 0);
    if (v6) {
      sub_215A9C0FC(&v10, (uint64_t)v6);
    }
    uint64_t v10 = a2;
    int v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675DB0, 0);
    if (v7)
    {
      sub_215A9CE64(&v10, (uint64_t)v7);
    }
    else
    {
      uint64_t v10 = a2;
      int v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C683378, 0);
      if (v8) {
        sub_215A9D99C(&v10, v8);
      }
      else {
        sub_215A9A16C(&v9, (void **)a1);
      }
    }
  }
}

uint64_t sub_215A9A16C(uint64_t *a1, void **a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v30);
    sub_2159A3DA4((uint64_t)&v31, v30);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)&v31);
        if (!v46) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v29, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v8;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v37;
    long long v10 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v11;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v12;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v44 + 1);
    v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((void *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v30);
  sub_2159A3DA4((uint64_t)&v31, v30);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v29, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v17;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v37;
    long long v19 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v20;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v21;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v44 + 1);
    v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0) {
    operator delete((void *)v41);
  }
  if (v40 && SHIBYTE(v39) < 0) {
    operator delete((void *)v38);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  sub_2157C6F18((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  v24 = (void (**)(void **, unsigned int *))*a2;
  v30[0] = (uint64_t)a2[1];
  int v25 = v30[0];
  unsigned int v31 = 6;
  v24[13](a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3) {
      sub_2159B6FFC((uint64_t)&v31, a2, v4, v31);
    }
    else {
      sub_2159B71F0(a2, v4, v31);
    }
  }
  else
  {
    sub_2159B6970((int *)v30, a2, v4, v31);
  }
  v26 = (void (**)(void **, unsigned int *))*a2;
  v30[0] = (uint64_t)a2[1];
  int v27 = v30[0];
  unsigned int v31 = 2;
  v26[13](a2, &v31);
  if (v27 < 1) {
    return sub_215A9E7F8(a2, v3 + 200, v31);
  }
  else {
    return sub_215A9E2C4((int *)v30, a2, v3 + 200, v31);
  }
}

void sub_215A9A668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9A6B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF07E4(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF1DC8((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159AC908(a2, v4);
        }
        sub_2159AC714((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215A9AC18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9AC60(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "user_given_name";
  *(void *)(a1 + 96) = 15;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  int v5 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v5, (uint64_t)&v26);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = v26;
  *(void *)(a2 + 16) = v27;
  int v6 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "product_name";
  *(void *)(a1 + 96) = 12;
  if (!v6) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  uint64_t v7 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v7, (uint64_t)&v26);
  uint64_t v8 = (void **)(a2 + 24);
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*v8);
  }
  *(_OWORD *)uint64_t v8 = v26;
  *(void *)(a2 + 40) = v27;
  int v9 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "type";
  *(void *)(a1 + 96) = 4;
  if (!v9) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  long long v10 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v10, (uint64_t)&v26);
  uint64_t v11 = (void **)(a2 + 48);
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*v11);
  }
  *(_OWORD *)uint64_t v11 = v26;
  *(void *)(a2 + 64) = v27;
  int v12 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "serial_number";
  *(void *)(a1 + 96) = 13;
  if (!v12) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  int v13 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v13, (uint64_t)&v26);
  uint64_t v14 = (void **)(a2 + 72);
  if (*(char *)(a2 + 95) < 0) {
    operator delete(*v14);
  }
  *(_OWORD *)uint64_t v14 = v26;
  *(void *)(a2 + 88) = v27;
  int v15 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "os_build_version";
  *(void *)(a1 + 96) = 16;
  if (!v15) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  v16 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v16, (uint64_t)&v26);
  uint64_t v17 = (void **)(a2 + 96);
  if (*(char *)(a2 + 119) < 0) {
    operator delete(*v17);
  }
  *(_OWORD *)uint64_t v17 = v26;
  *(void *)(a2 + 112) = v27;
  int v18 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "os_product_version";
  *(void *)(a1 + 96) = 18;
  if (!v18) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  long long v19 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v19, (uint64_t)&v26);
  uint64_t v20 = (void **)(a2 + 120);
  if (*(char *)(a2 + 143) < 0) {
    operator delete(*v20);
  }
  *(_OWORD *)uint64_t v20 = v26;
  *(void *)(a2 + 136) = v27;
  int v21 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "process_id";
  *(void *)(a1 + 96) = 10;
  if (!v21) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF1D30((void *)a1, (_DWORD *)(a2 + 144));
  int v22 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "process_name";
  *(void *)(a1 + 96) = 12;
  if (!v22) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  uint64_t v23 = (void **)sub_215DF0AA0((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D30C0C(v23, (uint64_t)&v26);
  int v24 = (void **)(a2 + 152);
  if (*(char *)(a2 + 175) < 0) {
    operator delete(*v24);
  }
  *(_OWORD *)int v24 = v26;
  *(void *)(a2 + 168) = v27;
  int v25 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "uuid";
  *(void *)(a1 + 96) = 4;
  if (v25)
  {
    *(void *)&long long v26 = a2 + 176;
    sub_215A9B120((void *)a1);
  }
  *(unsigned char *)(a1 + 104) = 1;
  *(void *)&long long v26 = a2 + 176;
  sub_215A9B120((void *)a1);
}

void sub_215A9B0E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9B120(void *a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  v2 = (void **)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D30C0C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215A9B230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v22 = a15;
  a15 = 0;
  if (v22) {
    sub_215E15464((uint64_t)&a15, v22);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215A9B2A4(uint64_t *a1, _OWORD *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v8 = 0;
  sub_215A9B3F0(a1, (uint64_t)__p);
  sub_215E08D00((unint64_t)__p, (uint64_t)&v9);
  if (!v10)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::runtime_error::runtime_error(exception, &v6);
    __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  *a2 = v9;
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_215A9B39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v21 & 1) == 0)
    {
LABEL_6:
      if (a20 < 0) {
        operator delete(a15);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v20);
  goto LABEL_6;
}

uint64_t *sub_215A9B3F0(uint64_t *a1, uint64_t a2)
{
  MEMORY[0x2166C43A0](&v31, a1, 0);
  if (!v31) {
    return a1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    **(unsigned char **)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
  }
  uint64_t v4 = *(void *)(*a1 - 24);
  uint64_t v5 = *(uint64_t *)((char *)a1 + v4 + 24);
  if (v5 <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = *(uint64_t *)((char *)a1 + v4 + 24);
  }
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + v4));
  char v29 = std::locale::use_facet(&v30, MEMORY[0x263F8C108]);
  std::locale::~locale(&v30);
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 5;
  if (v5 >= 1) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 0x7FFFFFFFFFFFFFF7;
  }
  while (1)
  {
    char v10 = *(void **)((char *)v8 + *(void *)(*a1 - 24));
    uint64_t v11 = (unsigned __int8 *)v10[3];
    if (v11 == (unsigned __int8 *)v10[4]) {
      break;
    }
    unsigned __int8 v12 = *v11;
LABEL_16:
    if ((v12 & 0x80) == 0 && (*((_DWORD *)&v29[1].~facet + v12) & 0x4000) != 0)
    {
      int v26 = 0;
      goto LABEL_44;
    }
    int v14 = *(char *)(a2 + 23);
    if (v14 < 0)
    {
      uint64_t v17 = *(void *)(a2 + 16) & 0x7FFFFFFFFFFFFFFFLL;
      size_t v16 = v17 - 1;
      if (*(void *)(a2 + 8) == v17 - 1)
      {
        if (v17 == 0x7FFFFFFFFFFFFFF8) {
          sub_215731CD8();
        }
        int v15 = *(unsigned char **)a2;
        size_t v18 = 0x7FFFFFFFFFFFFFF7;
        if (v16 <= 0x3FFFFFFFFFFFFFF2)
        {
LABEL_24:
          if (v16 + 1 > 2 * v16) {
            unint64_t v19 = v16 + 1;
          }
          else {
            unint64_t v19 = 2 * v16;
          }
          uint64_t v20 = (v19 & 0x7FFFFFFFFFFFFFF8) + 8;
          if ((v19 | 7) != 0x17) {
            uint64_t v20 = v19 | 7;
          }
          if (v19 >= 0x17) {
            size_t v18 = v20 + 1;
          }
          else {
            size_t v18 = 23;
          }
        }
        int v21 = operator new(v18);
        uint64_t v22 = v21;
        if (!v16 || (memmove(v21, v15, v16), v16 != 22)) {
          operator delete(v15);
        }
        *(void *)a2 = v22;
        *(void *)(a2 + 16) = v18 | 0x8000000000000000;
      }
      else
      {
        uint64_t v22 = *(unsigned char **)a2;
        size_t v16 = *(void *)(a2 + 8);
      }
      *(void *)(a2 + 8) = v16 + 1;
      goto LABEL_39;
    }
    if (*(unsigned char *)(a2 + 23) == 22)
    {
      int v15 = (unsigned char *)a2;
      size_t v16 = 22;
      goto LABEL_24;
    }
    size_t v16 = *(unsigned __int8 *)(a2 + 23);
    *(unsigned char *)(a2 + 23) = (v14 + 1) & 0x7F;
    uint64_t v22 = (unsigned char *)a2;
LABEL_39:
    uint64_t v23 = &v22[v16];
    *uint64_t v23 = v12;
    v23[1] = 0;
    int v24 = *(void **)((char *)v8 + *(void *)(*a1 - 24));
    uint64_t v25 = v24[3];
    if (v25 == v24[4]) {
      (*(void (**)(void *))(*v24 + 80))(v24);
    }
    else {
      v24[3] = v25 + 1;
    }
    if (v9 == ++v7)
    {
      int v26 = 0;
      uint64_t v7 = 1;
      goto LABEL_44;
    }
  }
  int v13 = (*(uint64_t (**)(void *))(*v10 + 72))(v10);
  unsigned __int8 v12 = v13;
  if (v13 != -1) {
    goto LABEL_16;
  }
  int v26 = 2;
LABEL_44:
  uint64_t v27 = *a1;
  *(uint64_t *)((char *)a1 + *(void *)(*a1 - 24) + 24) = 0;
  if (!v7) {
    v26 |= 4u;
  }
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(v27 - 24)), *(_DWORD *)((char *)a1 + *(void *)(v27 - 24) + 32) | v26);
  return a1;
}

void sub_215A9B720(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11)
{
}

void sub_215A9B7C4(_Unwind_Exception *a1)
{
}

void sub_215A9B7D8(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  v2 = (void **)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D30C0C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215A9B8D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = a16;
  a16 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a16, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215A9B94C(uint64_t *a1, void *a2)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v31);
    sub_2159A3DA4((uint64_t)v32, v31);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v32);
        if (!v47) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v30, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(unsigned char *)(v3 + 64) = 0;
    if (v36)
    {
      uint64_t v8 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(void *)(v3 + 56) = v8;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v38;
    long long v10 = v37;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v41)
    {
      uint64_t v11 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(void *)(v3 + 112) = v11;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v44)
    {
      uint64_t v12 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(void *)(v3 + 144) = v12;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(void *)(v3 + 176) = v46;
      long long v45 = 0uLL;
      uint64_t v46 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v45;
    if (!(void)v45) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v45 + 1);
    size_t v16 = (void *)v45;
    if (*((void *)&v45 + 1) == (void)v45) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    size_t v16 = (void *)v45;
LABEL_45:
    *((void *)&v45 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v31);
  sub_2159A3DA4((uint64_t)v32, v31);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v30, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(unsigned char *)(v3 + 64) = 0;
    if (v36)
    {
      uint64_t v17 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(void *)(v3 + 56) = v17;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v38;
    long long v19 = v37;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v41)
    {
      uint64_t v20 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(void *)(v3 + 112) = v20;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v44)
    {
      uint64_t v21 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(void *)(v3 + 144) = v21;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(void *)(v3 + 176) = v46;
      long long v45 = 0uLL;
      uint64_t v46 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v32);
  if (v47)
  {
LABEL_38:
    uint64_t v14 = v45;
    if (!(void)v45) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v45 + 1);
    size_t v16 = (void *)v45;
    if (*((void *)&v45 + 1) == (void)v45) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v44 && SHIBYTE(v43) < 0) {
    operator delete((void *)v42);
  }
  if (v41 && SHIBYTE(v40) < 0) {
    operator delete((void *)v39);
  }
  if (v36 && SHIBYTE(v35) < 0) {
    operator delete((void *)v34);
  }
  sub_2157C6F18((uint64_t)v31);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159AFF3C((uint64_t)v31, a2, v4);
  LODWORD(v31[0]) = 2;
  sub_215DFF824(a2[6], v31);
  unsigned int v24 = v31[0];
  uint64_t v25 = a2 + 2;
  sub_2159B0060(a2 + 2);
  if (v24 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = v24;
  }
  sub_215A9BE68(a2, v3 + 200, v26);
  uint64_t v27 = a2[4];
  uint64_t result = (*(uint64_t (**)(void *))(*v25 + 32))(a2 + 2);
  uint64_t v29 = *(void *)(v27 - 16) - result + *(void *)(v27 - 8);
  if (v29) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v25 + 40))(a2 + 2, v29);
  }
  a2[4] -= 16;
  return result;
}

void sub_215A9BE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9BE68(void *a1, uint64_t a2, unsigned int a3)
{
  sub_215E000A8(a1[6], (void **)a2);
  sub_215E000A8(a1[6], (void **)(a2 + 24));
  sub_215E000A8(a1[6], (void **)(a2 + 48));
  sub_215E000A8(a1[6], (void **)(a2 + 72));
  sub_215E000A8(a1[6], (void **)(a2 + 96));
  sub_215E000A8(a1[6], (void **)(a2 + 120));
  sub_215DFF770(a1[6], (_DWORD *)(a2 + 144));
  sub_215E000A8(a1[6], (void **)(a2 + 152));
  uint64_t v6 = a1[6];
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 176));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 177));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 178));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 179));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 180));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 181));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 182));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 183));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 184));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 185));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 186));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 187));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 188));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 189));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 190));
  sub_215DFF4BC(v6, (unsigned char *)(a2 + 191));
  if (a3 >= 2)
  {
    int v8 = 1;
    sub_215DFF824(a1[6], &v8);
    sub_215A9BFF4((uint64_t)&v7, a1, (_DWORD *)(a2 + 192));
  }
}

uint64_t sub_215A9BFF4(uint64_t a1, void *a2, _DWORD *a3)
{
  int v5 = a2 + 2;
  sub_2159B0060(a2 + 2);
  sub_215DFF824(a2[6], a3);
  sub_215DFF824(a2[6], a3 + 1);
  sub_215DFF824(a2[6], a3 + 2);
  sub_215DFF824(a2[6], a3 + 3);
  sub_215DFF824(a2[6], a3 + 4);
  sub_215DFF824(a2[6], a3 + 5);
  uint64_t v6 = a2[4];
  uint64_t result = (*(uint64_t (**)(void *))(a2[2] + 32))(v5);
  uint64_t v8 = *(void *)(v6 - 16) - result + *(void *)(v6 - 8);
  if (v8) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v5 + 40))(v5, v8);
  }
  a2[4] -= 16;
  return result;
}

void sub_215A9C0FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    size_t v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    size_t v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF01A0(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF0F9C((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159B191C(a2, v4);
        }
        sub_2159B1728((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  size_t v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215A9C664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9C6AC(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "user_given_name";
  *(void *)(a1 + 96) = 15;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  int v5 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v5, (uint64_t)&v26);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = v26;
  *(void *)(a2 + 16) = v27;
  int v6 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "product_name";
  *(void *)(a1 + 96) = 12;
  if (!v6) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  uint64_t v7 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v7, (uint64_t)&v26);
  uint64_t v8 = (void **)(a2 + 24);
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*v8);
  }
  *(_OWORD *)uint64_t v8 = v26;
  *(void *)(a2 + 40) = v27;
  int v9 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "type";
  *(void *)(a1 + 96) = 4;
  if (!v9) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  long long v10 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v10, (uint64_t)&v26);
  uint64_t v11 = (void **)(a2 + 48);
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*v11);
  }
  *(_OWORD *)uint64_t v11 = v26;
  *(void *)(a2 + 64) = v27;
  int v12 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "serial_number";
  *(void *)(a1 + 96) = 13;
  if (!v12) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  int v13 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v13, (uint64_t)&v26);
  uint64_t v14 = (void **)(a2 + 72);
  if (*(char *)(a2 + 95) < 0) {
    operator delete(*v14);
  }
  *(_OWORD *)uint64_t v14 = v26;
  *(void *)(a2 + 88) = v27;
  int v15 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "os_build_version";
  *(void *)(a1 + 96) = 16;
  if (!v15) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  size_t v16 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v16, (uint64_t)&v26);
  uint64_t v17 = (void **)(a2 + 96);
  if (*(char *)(a2 + 119) < 0) {
    operator delete(*v17);
  }
  *(_OWORD *)uint64_t v17 = v26;
  *(void *)(a2 + 112) = v27;
  int v18 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "os_product_version";
  *(void *)(a1 + 96) = 18;
  if (!v18) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  long long v19 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v19, (uint64_t)&v26);
  uint64_t v20 = (void **)(a2 + 120);
  if (*(char *)(a2 + 143) < 0) {
    operator delete(*v20);
  }
  *(_OWORD *)uint64_t v20 = v26;
  *(void *)(a2 + 136) = v27;
  int v21 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "process_id";
  *(void *)(a1 + 96) = 10;
  if (!v21) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF0F04((void *)a1, (_DWORD *)(a2 + 144));
  int v22 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "process_name";
  *(void *)(a1 + 96) = 12;
  if (!v22) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  uint64_t v23 = (void **)sub_215DF045C((void *)a1);
  ++*(void *)(a1 + 112);
  uint64_t v27 = 0;
  long long v26 = 0uLL;
  sub_215D3040C(v23, (uint64_t)&v26);
  int v24 = (void **)(a2 + 152);
  if (*(char *)(a2 + 175) < 0) {
    operator delete(*v24);
  }
  *(_OWORD *)int v24 = v26;
  *(void *)(a2 + 168) = v27;
  int v25 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "uuid";
  *(void *)(a1 + 96) = 4;
  if (v25)
  {
    *(void *)&long long v26 = a2 + 176;
    sub_215A9CB6C((void *)a1);
  }
  *(unsigned char *)(a1 + 104) = 1;
  *(void *)&long long v26 = a2 + 176;
  sub_215A9CB6C((void *)a1);
}

void sub_215A9CB34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9CB6C(void *a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  v2 = (void **)sub_215DF045C(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D3040C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215A9CC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v22 = a15;
  a15 = 0;
  if (v22) {
    sub_215E15464((uint64_t)&a15, v22);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9CCF0(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  v2 = (void **)sub_215DF045C(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D3040C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215A9CDF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = a16;
  a16 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a16, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9CE64(uint64_t *a1, uint64_t a2)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)&__p);
    sub_2159A3DA4((uint64_t)v35, (uint64_t *)&__p);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v35);
        if (!v50) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v31, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(unsigned char *)(v3 + 64) = 0;
    if (v39)
    {
      uint64_t v8 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(void *)(v3 + 56) = v8;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v41;
    long long v10 = v40;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v44)
    {
      uint64_t v11 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(void *)(v3 + 112) = v11;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v47)
    {
      uint64_t v12 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(void *)(v3 + 144) = v12;
      long long v45 = 0uLL;
      uint64_t v46 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(void *)(v3 + 176) = v49;
      long long v48 = 0uLL;
      uint64_t v49 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v48;
    if (!(void)v48) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v48 + 1);
    size_t v16 = (void *)v48;
    if (*((void *)&v48 + 1) == (void)v48) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    size_t v16 = (void *)v48;
LABEL_45:
    *((void *)&v48 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)&__p);
  sub_2159A3DA4((uint64_t)v35, (uint64_t *)&__p);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v31, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(unsigned char *)(v3 + 64) = 0;
    if (v39)
    {
      uint64_t v17 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(void *)(v3 + 56) = v17;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v41;
    long long v19 = v40;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v44)
    {
      uint64_t v20 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(void *)(v3 + 112) = v20;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v47)
    {
      uint64_t v21 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(void *)(v3 + 144) = v21;
      long long v45 = 0uLL;
      uint64_t v46 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(void *)(v3 + 176) = v49;
      long long v48 = 0uLL;
      uint64_t v49 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v35);
  if (v50)
  {
LABEL_38:
    uint64_t v14 = v48;
    if (!(void)v48) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v48 + 1);
    size_t v16 = (void *)v48;
    if (*((void *)&v48 + 1) == (void)v48) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v47 && SHIBYTE(v46) < 0) {
    operator delete((void *)v45);
  }
  if (v44 && SHIBYTE(v43) < 0) {
    operator delete((void *)v42);
  }
  if (v39 && SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
  sub_2157C6F18((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  LODWORD(__p) = 6;
  sub_215DFABD4(a2, &__p);
  unsigned int v24 = __p;
  if (__p >= 6) {
    unsigned int v25 = 6;
  }
  else {
    unsigned int v25 = __p;
  }
  if (v25 < 3) {
    sub_2159B3640((uint64_t)&__p, a2, v4, v25);
  }
  else {
    sub_2159B3834(a2, v4, v25);
  }
  if (v24 >= 3 && !*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_95:
          char v30 = 0;
          if (v34 < 0) {
            goto LABEL_98;
          }
          goto LABEL_84;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_95;
      }
      char v30 = 1;
      if (v34 < 0) {
LABEL_98:
      }
        operator delete(__p);
LABEL_84:
      if (*(unsigned char *)(a2 + 131)) {
        char v29 = 0;
      }
      else {
        char v29 = v30;
      }
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_215DFABD4(a2, &__p);
  if (__p >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = __p;
  }
  sub_215A9D49C(a2, v3 + 200, v26);
  if (!*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        return;
      }
      sub_215DFD700(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          char v28 = 0;
          if (v34 < 0) {
            goto LABEL_83;
          }
          goto LABEL_69;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      char v28 = 1;
      if (v34 < 0) {
LABEL_83:
      }
        operator delete(__p);
LABEL_69:
      if (*(unsigned char *)(a2 + 131)) {
        char v27 = 0;
      }
      else {
        char v27 = v28;
      }
    }
    while ((v27 & 1) != 0);
  }
}

void sub_215A9D454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9D49C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(a1 + 80) + 1;
  *(void *)(a1 + 80) = v6;
  if (*(unsigned char *)(a1 + 128)) {
    BOOL v7 = *(unsigned char *)(a1 + 131) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    *(unsigned char *)(a1 + 132) = 1;
    *(void *)(a1 + 80) = v6 + 1;
LABEL_15:
    uint64_t v10 = v6 + 2;
LABEL_20:
    *(unsigned char *)(a1 + 132) = 1;
    uint64_t v14 = v10 + 1;
LABEL_21:
    uint64_t v15 = v14 + 1;
LABEL_22:
    *(void *)(a1 + 80) = v15 + 1;
LABEL_23:
    *(unsigned char *)(a1 + 132) = 1;
    goto LABEL_24;
  }
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(void *)(a2 + 16) = v31;
  ++*(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 80);
  if (*(unsigned char *)(a1 + 128)) {
    BOOL v8 = *(unsigned char *)(a1 + 131) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  char v9 = v8;
  *(void *)(a1 + 80) = v6 + 1;
  if ((v9 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v11 = (void **)(a2 + 24);
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*v11);
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)__p;
  *(void *)(a2 + 40) = v31;
  ++*(void *)(a1 + 104);
  int v12 = *(unsigned __int8 *)(a1 + 128);
  int v13 = *(unsigned __int8 *)(a1 + 131);
  uint64_t v10 = *(void *)(a1 + 80) + 1;
  *(void *)(a1 + 80) = v10;
  if (v12 && v13) {
    goto LABEL_20;
  }
  uint64_t v20 = (void **)(a2 + 48);
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)__p;
  *(void *)(a2 + 64) = v31;
  ++*(void *)(a1 + 104);
  int v21 = *(unsigned __int8 *)(a1 + 128);
  int v22 = *(unsigned __int8 *)(a1 + 131);
  uint64_t v14 = *(void *)(a1 + 80) + 1;
  *(void *)(a1 + 80) = v14;
  if (v21 && v22) {
    goto LABEL_21;
  }
  uint64_t v23 = (void **)(a2 + 72);
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 95) < 0) {
    operator delete(*v23);
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)__p;
  *(void *)(a2 + 88) = v31;
  ++*(void *)(a1 + 104);
  int v24 = *(unsigned __int8 *)(a1 + 128);
  int v25 = *(unsigned __int8 *)(a1 + 131);
  uint64_t v15 = *(void *)(a1 + 80) + 1;
  *(void *)(a1 + 80) = v15;
  if (v24 && v25) {
    goto LABEL_22;
  }
  unsigned int v26 = (void **)(a2 + 96);
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 119) < 0) {
    operator delete(*v26);
  }
  *(_OWORD *)unsigned int v26 = *(_OWORD *)__p;
  *(void *)(a2 + 112) = v31;
  ++*(void *)(a1 + 104);
  int v27 = *(unsigned __int8 *)(a1 + 128);
  int v28 = *(unsigned __int8 *)(a1 + 131);
  ++*(void *)(a1 + 80);
  if (v27 && v28) {
    goto LABEL_23;
  }
  char v29 = (void **)(a2 + 120);
  sub_215DFD700(a1, (uint64_t)__p);
  if (*(char *)(a2 + 143) < 0) {
    operator delete(*v29);
  }
  *(_OWORD *)char v29 = *(_OWORD *)__p;
  *(void *)(a2 + 136) = v31;
  ++*(void *)(a1 + 104);
LABEL_24:
  sub_215DFA8B4(a1, (_DWORD *)(a2 + 144));
  ++*(void *)(a1 + 80);
  if (*(unsigned char *)(a1 + 128) && *(unsigned char *)(a1 + 131))
  {
    *(unsigned char *)(a1 + 132) = 1;
  }
  else
  {
    size_t v16 = (void **)(a2 + 152);
    sub_215DFD700(a1, (uint64_t)__p);
    if (*(char *)(a2 + 175) < 0) {
      operator delete(*v16);
    }
    *(_OWORD *)size_t v16 = *(_OWORD *)__p;
    *(void *)(a2 + 168) = v31;
    ++*(void *)(a1 + 104);
  }
  sub_215DFA01C(a1, (unsigned char *)(a2 + 176));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 177));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 178));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 179));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 180));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 181));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 182));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 183));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 184));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 185));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 186));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 187));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 188));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 189));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 190));
  sub_215DFA01C(a1, (unsigned char *)(a2 + 191));
  if (a3 >= 2)
  {
    LODWORD(__p[0]) = 1;
    sub_215DFABD4(a1, __p);
    sub_215DFABD4(a1, (_DWORD *)(a2 + 192));
    sub_215DFABD4(a1, (_DWORD *)(a2 + 196));
    sub_215DFABD4(a1, (_DWORD *)(a2 + 200));
    sub_215DFABD4(a1, (_DWORD *)(a2 + 204));
    sub_215DFABD4(a1, (_DWORD *)(a2 + 208));
    sub_215DFABD4(a1, (_DWORD *)(a2 + 212));
    if (!*(unsigned char *)(a1 + 131))
    {
      while (1)
      {
        if ((*(unsigned char *)(*(void *)(a1 + 16) + *(void *)(**(void **)(a1 + 16) - 24) + 32) & 2) != 0) {
          return;
        }
        sub_215DFD700(a1, (uint64_t)__p);
        if (SHIBYTE(v31) < 0)
        {
          if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0]) {
            goto LABEL_45;
          }
LABEL_33:
          char v17 = 1;
          if (SHIBYTE(v31) < 0) {
            goto LABEL_46;
          }
LABEL_34:
          if (*(unsigned char *)(a1 + 131)) {
            char v18 = 0;
          }
          else {
            char v18 = v17;
          }
          if ((v18 & 1) == 0) {
            return;
          }
        }
        else
        {
          if (SHIBYTE(v31) != 1 || *(unsigned __int8 *)(a1 + 72) != LOBYTE(__p[0])) {
            goto LABEL_33;
          }
LABEL_45:
          char v17 = 0;
          if ((SHIBYTE(v31) & 0x80000000) == 0) {
            goto LABEL_34;
          }
LABEL_46:
          operator delete(__p[0]);
          if (*(unsigned char *)(a1 + 131)) {
            char v19 = 0;
          }
          else {
            char v19 = v17;
          }
          if ((v19 & 1) == 0) {
            return;
          }
        }
      }
    }
  }
}

void sub_215A9D99C(uint64_t *a1, void *a2)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v25);
    sub_2159A3DA4((uint64_t)v26, v25);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v26);
        if (!v41) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v24, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v8;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v32;
    long long v10 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v11;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v12;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v39 + 1);
    size_t v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    size_t v16 = (void *)v39;
LABEL_45:
    *((void *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v25);
  sub_2159A3DA4((uint64_t)v26, v25);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v24, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v17;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v32;
    long long v19 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v20;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v21;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v39 + 1);
    size_t v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  if (v30 && SHIBYTE(v29) < 0) {
    operator delete((void *)v28);
  }
  sub_2157C6F18((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159B5060((uint64_t)v25, a2, v4);
  sub_215A9DE14((uint64_t)v25, a2, v3 + 200);
}

void sub_215A9DDCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215A9DE14(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a2[6];
  unint64_t v4 = a2[7];
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  unsigned int v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  sub_215D02644(a2);
  if (v9 >= 2) {
    unsigned int v10 = 2;
  }
  else {
    unsigned int v10 = v9;
  }
  sub_215A9DEF4(a2, a3, v10);
  uint64_t v11 = a2[12];
  uint64_t v12 = a2[9];
  a2[6] = *(void *)(v11 - 8) + *(void *)(v12 - 8) + 8;
  a2[9] = v12 - 8;
  a2[12] = v11 - 8;
}

void sub_215A9DEE0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215A9DEF4(void *a1, uint64_t a2, unsigned int a3)
{
  sub_215D029A0(a1, a2);
  sub_215D029A0(a1, a2 + 24);
  sub_215D029A0(a1, a2 + 48);
  sub_215D029A0(a1, a2 + 72);
  sub_215D029A0(a1, a2 + 96);
  sub_215D029A0(a1, a2 + 120);
  unint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  BOOL v8 = v7 >= v6;
  unint64_t v9 = v7 - v6;
  if (!v8) {
    unint64_t v9 = 0;
  }
  if (v9 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    goto LABEL_12;
  }
  *(_DWORD *)(a2 + 144) = *(_DWORD *)(a1[3] + v6);
  a1[6] += 4;
  sub_215D029A0(a1, a2 + 152);
  unint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  BOOL v8 = v11 >= v10;
  unint64_t v12 = v11 - v10;
  if (!v8) {
    unint64_t v12 = 0;
  }
  if (v12 <= 0xF)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read span");
LABEL_12:
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  *(_OWORD *)(a2 + 176) = *(_OWORD *)(a1[3] + v10);
  a1[6] += 16;
  if (a3 >= 2) {
    sub_215A9E064((uint64_t)&v14, a1, (_DWORD *)(a2 + 192));
  }
}

void sub_215A9E03C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215A9E050(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD **sub_215A9E064(uint64_t a1, void *a2, _DWORD *a3)
{
  unint64_t v3 = a2[6];
  unint64_t v4 = a2[7];
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  a2[6] = v3 + 4;
  sub_215D02644(a2);
  int v13 = a3;
  char v14 = a3 + 1;
  uint64_t v15 = a3 + 2;
  size_t v16 = a2;
  sub_215A9E160(&v13, (uint64_t *)&v16);
  int v13 = a3 + 3;
  char v14 = a3 + 4;
  uint64_t v15 = a3 + 5;
  size_t v16 = a2;
  uint64_t result = sub_215A9E160(&v13, (uint64_t *)&v16);
  uint64_t v10 = a2[12];
  uint64_t v11 = a2[9];
  a2[6] = *(void *)(v10 - 8) + *(void *)(v11 - 8) + 8;
  a2[9] = v11 - 8;
  a2[12] = v10 - 8;
  return result;
}

void sub_215A9E14C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD **sub_215A9E160(_DWORD **result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = *(void *)(*a2 + 48);
  unint64_t v4 = *(void *)(*a2 + 56);
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3) {
    goto LABEL_11;
  }
  **uint64_t result = *(_DWORD *)(*(void *)(v2 + 24) + v3);
  *(void *)(v2 + 48) += 4;
  uint64_t v7 = *a2;
  unint64_t v8 = *(void *)(*a2 + 48);
  unint64_t v9 = *(void *)(*a2 + 56);
  BOOL v5 = v9 >= v8;
  unint64_t v10 = v9 - v8;
  if (!v5) {
    unint64_t v10 = 0;
  }
  if (v10 <= 3) {
    goto LABEL_11;
  }
  *result[1] = *(_DWORD *)(*(void *)(v7 + 24) + v8);
  *(void *)(v7 + 48) += 4;
  uint64_t v11 = *a2;
  unint64_t v12 = *(void *)(*a2 + 48);
  unint64_t v13 = *(void *)(*a2 + 56);
  BOOL v5 = v13 >= v12;
  unint64_t v14 = v13 - v12;
  if (!v5) {
    unint64_t v14 = 0;
  }
  if (v14 <= 3)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  *result[2] = *(_DWORD *)(*(void *)(v11 + 24) + v12);
  *(void *)(v11 + 48) += 4;
  return result;
}

void sub_215A9E288(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215A9E29C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215A9E2B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215A9E2C4(int *a1, unsigned char *a2, uint64_t a3, unsigned int a4)
{
  int v7 = *a1;
  if (*a1 == 2)
  {
    unsigned int v14 = 1;
    (*(void (**)(unsigned char *, unsigned int *))(*(void *)a2 + 104))(a2, &v14);
    if (v14 >= 3)
    {
      unsigned int v12 = v14;
      unint64_t v13 = sub_215A9E404();
      sub_215E07C10((std::string *)v13, v12, 2u);
    }
    int v7 = *a1;
  }
  if (v7 <= 0)
  {
    if (a4 >= 2) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a4;
    }
    return sub_215A9E7F8(a2, a3, v11);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)a2 + 16))(a2);
    if (a4 >= 2) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = a4;
    }
    sub_215A9E7F8(a2, a3, v9);
    return (*(uint64_t (**)(unsigned char *))(*(void *)a2 + 24))(a2);
  }
}

long long *sub_215A9E404()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678888E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678888E0))
  {
    return &xmmword_2678888C8;
  }
  v1 = sub_215A9E4EC();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678888C8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678888D8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678888C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678888C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678888E0);
  return &xmmword_2678888C8;
}

void sub_215A9E4D4(_Unwind_Exception *a1)
{
}

std::string *sub_215A9E4EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888900, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888900))
  {
    return &stru_2678888E8;
  }
  sub_215A9E5E8((uint64_t)__p);
  sub_2157E7638(__p, &stru_2678888E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678888E8, &dword_21572C000);
  __cxa_guard_release(&qword_267888900);
  return &stru_2678888E8;
}

void sub_215A9E5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888900);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888900);
  _Unwind_Resume(a1);
}

void sub_215A9E5E8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888920, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888920))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::PeerInfoSample<2U>]", qword_267888908);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888908, &dword_21572C000);
    __cxa_guard_release(&qword_267888920);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888940))
  {
    size_t v3 = sub_215747D98(qword_267888908, "<", 0);
    sub_215747C90(qword_267888908, 0, v3, qword_267888928);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888928, &dword_21572C000);
    __cxa_guard_release(&qword_267888940);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888960))
  {
    sub_215E19DF4((uint64_t)qword_267888928, (uint64_t)&xmmword_267888948);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888948, &dword_21572C000);
    __cxa_guard_release(&qword_267888960);
  }
  if (byte_26788895F < 0)
  {
    long long v2 = xmmword_267888948;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267888948;
    *(void *)(a1 + 16) = unk_267888958;
  }
}

void sub_215A9E7B0(_Unwind_Exception *a1)
{
}

void sub_215A9E7C8(_Unwind_Exception *a1)
{
}

void sub_215A9E7E0(_Unwind_Exception *a1)
{
}

uint64_t sub_215A9E7F8(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  (*(void (**)(unsigned char *))(*(void *)a1 + 144))(a1);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 24);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 48);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 72);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 96);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 120);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 56))(a1, a2 + 144);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 144))(a1, a2 + 152);
  if ((a1[12] & 2) != 0)
  {
    *(void *)unint64_t v10 = a2 + 176;
    sub_215A9EA54((uint64_t)a1);
  }
  *(void *)unint64_t v10 = a2 + 176;
  uint64_t result = sub_215A9EBD4((uint64_t)a1, v10);
  if (a3 >= 2)
  {
    uint64_t v7 = a2 + 192;
    uint64_t v8 = *(void *)a1;
    *(void *)unint64_t v10 = *((void *)a1 + 1);
    int v9 = v10[0];
    int v11 = 1;
    (*(void (**)(unsigned char *, int *))(v8 + 104))(a1, &v11);
    if (v9 < 1) {
      return sub_215A9F214(a1, v7);
    }
    else {
      return sub_215A9EEC0(v10, a1, v7);
    }
  }
  return result;
}

void sub_215A9EA54(uint64_t a1)
{
  __p[7] = *(void **)MEMORY[0x263EF8340];
  memset(__p, 0, 24);
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 144))(a1, __p);
  operator new();
}

void sub_215A9EB58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  uint64_t v16 = a15;
  a15 = 0;
  if (v16)
  {
    sub_215E15464((uint64_t)&a15, v16);
    if ((a14 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215A9EBD4(uint64_t a1, void *a2)
{
  uint64_t v3 = *a2;
  (*(void (**)(uint64_t, void))(*(void *)a1 + 80))(a1, *a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 11);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 13);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v3 + 14);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 80);

  return v4(a1, v3 + 15);
}

uint64_t sub_215A9EEC0(int *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *a1;
  if (*a1 == 2)
  {
    unsigned int v10 = 1;
    (*(void (**)(unsigned char *, unsigned int *))(*(void *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      unsigned int v8 = v10;
      int v9 = sub_215A9EFF8();
      sub_215E07C10((std::string *)v9, v8, 1u);
    }
    int v5 = *a1;
  }
  if (v5 <= 0) {
    return sub_215A9F214(a2, a3);
  }
  (*(void (**)(unsigned char *))(*(void *)a2 + 16))(a2);
  sub_215A9F214(a2, a3);
  return (*(uint64_t (**)(unsigned char *))(*(void *)a2 + 24))(a2);
}

long long *sub_215A9EFF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888980, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888980))
  {
    return &xmmword_267888968;
  }
  v1 = (char *)sub_215A9F0E0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888968, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888978 = *((void *)v1 + 2);
    xmmword_267888968 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888968, &dword_21572C000);
  __cxa_guard_release(&qword_267888980);
  return &xmmword_267888968;
}

void sub_215A9F0C8(_Unwind_Exception *a1)
{
}

void *sub_215A9F0E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678889A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678889A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::kio::ProtocolInfoSample]", qword_267888988);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888988, &dword_21572C000);
    __cxa_guard_release(&qword_2678889A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678889C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678889C0))
  {
    return &unk_2678889A8;
  }
  sub_215E19DF4((uint64_t)qword_267888988, (uint64_t)&unk_2678889A8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678889A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678889C0);
  return &unk_2678889A8;
}

void sub_215A9F1E4(_Unwind_Exception *a1)
{
}

void sub_215A9F1FC(_Unwind_Exception *a1)
{
}

uint64_t sub_215A9F214(unsigned char *a1, uint64_t a2)
{
  if ((a1[12] & 2) != 0) {
    sub_215A9F3B0((uint64_t)a1);
  }
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 4);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 8);
  if ((a1[12] & 2) != 0) {
    sub_215A9F3B0((uint64_t)a1);
  }
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 12);
  (*(void (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 16);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)a1 + 104))(a1, a2 + 20);
}

void sub_215A9F3B0(uint64_t a1)
{
  memset(__p, 0, sizeof(__p));
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 144))(a1, __p);
  operator new();
}

void sub_215A9F4A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  uint64_t v16 = a15;
  a15 = 0;
  if (v16)
  {
    sub_215E15464((uint64_t)&a15, v16);
    if ((a14 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_215A9F520(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  *(void *)a1 = &unk_26C674410;
  *(void *)(a1 + 8) = v2;
  uint64_t v3 = (void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v6;
  if (v6)
  {
    *(void *)(v4 + 16) = v5;
    *(void *)(a2 + 8) = v3;
    *uint64_t v3 = 0;
    *(void *)(a2 + 24) = 0;
  }
  else
  {
    *(void *)(a1 + 8) = v5;
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v8;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 64) = 0;
    *(void *)(a2 + 48) = 0;
    *(unsigned char *)(a1 + 72) = 1;
  }
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (*(unsigned char *)(a2 + 104))
  {
    long long v9 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v9;
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0;
    *(void *)(a2 + 80) = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  __n128 result = *(__n128 *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = 0;
  *(void *)(a1 + 128) = v11;
  *(__n128 *)(a1 + 112) = result;
  *(unsigned char *)(a1 + 192) = 0;
  if (*(unsigned char *)(a2 + 192))
  {
    _X2 = 0;
    _X3 = 0;
    __n128 result = *(__n128 *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(__n128 *)(a1 + 144) = result;
    *(void *)(a2 + 152) = 0;
    *(void *)(a2 + 160) = 0;
    *(void *)(a2 + 144) = 0;
    __asm { CASPAL          X2, X3, X2, X3, [X8] }
    *(void *)(a1 + 176) = _X2;
    *(void *)(a1 + 184) = 0;
    *(unsigned char *)(a1 + 192) = 1;
  }
  *(unsigned char *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 232) = 0;
  if (*(unsigned char *)(a2 + 232))
  {
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 224) = 0;
    __n128 result = *(__n128 *)(a2 + 208);
    *(__n128 *)(a1 + 208) = result;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a2 + 208) = 0;
    *(void *)(a2 + 216) = 0;
    *(void *)(a2 + 224) = 0;
    *(unsigned char *)(a1 + 232) = 1;
  }
  return result;
}

uint64_t sub_215A9F678(uint64_t a1, uint64_t a2)
{
  v29[5] = *MEMORY[0x263EF8340];
  uint64_t v4 = a1 + 16;
  int v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_21598FB5C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_2159CA9D4(v4, (uint64_t)v24);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    sub_215995568(v4, (uint64_t)v24);
  }
  uint64_t v6 = a2 + 16;
  int v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_21598FB5C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_2159CA9D4(v6, (uint64_t)v18);
  }
  else
  {
    if (v7) {
      sub_215742D4C();
    }
    sub_215995568(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  uint64_t v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  unsigned int v14 = (unsigned __int8 **)&v23;
  if (sub_215AF0A90((uint64_t)&v17, v15, v13))
  {
    if (*((unsigned char *)v16 + 24) && *((unsigned char *)v14 + 24))
    {
      long long v8 = *v16;
      long long v9 = v16[1];
      unsigned int v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_215AEF77C(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9) {
              goto LABEL_23;
            }
          }
          goto LABEL_22;
        }
LABEL_23:
        v15[0] = a1 + 200;
        v13[0] = (void *)(a2 + 200);
        uint64_t v11 = sub_2157BDB2C((uint64_t)v15, v13);
        goto LABEL_24;
      }
    }
    else if ((*((unsigned char *)v16 + 24) != 0) == (*((unsigned char *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  uint64_t v11 = 0;
LABEL_24:
  sub_2157C6F18((uint64_t)v18);
  sub_2157C6F18((uint64_t)v24);
  return v11;
}

void sub_215A9F87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215A9F898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215A9F8AC(void *a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B18, 0);
  if (v4) {
    sub_215A9FAE8((uint64_t)&v11, (uint64_t)v4);
  }
  uint64_t v11 = a2;
  int v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B60, 0);
  if (v5)
  {
    sub_215AA0A2C(&v11, (uint64_t)v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675BE8, 0);
    if (v6) {
      sub_215AA0EC0((uint64_t)&v11, (uint64_t)v6);
    }
    uint64_t v11 = a2;
    int v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675C30, 0);
    if (v7)
    {
      sub_215AA1694(&v11, (uint64_t)v7);
    }
    else
    {
      uint64_t v11 = a2;
      long long v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C6833D8, 0);
      if (v8)
      {
        sub_215AA1A58(&v11, (uint64_t)v8);
      }
      else
      {
        uint64_t v9 = a2 + 16;
        int v10 = *(_DWORD *)(a2 + 192);
        if (v10 == 2)
        {
          uint64_t v11 = a1[1];
          sub_2159D04F0((int *)&v11, (uint64_t)a1, v9);
        }
        else if (v10 == 1)
        {
          uint64_t v11 = a1[1];
          sub_2159CFA30((int *)&v11, a1, v9);
        }
        else
        {
          if (v10) {
            sub_215742D4C();
          }
          uint64_t v11 = a1[1];
          sub_2159AAEAC((int *)&v11, a1, v9);
        }
        uint64_t v11 = a1[1];
        sub_215AA1DC0((int *)&v11, (uint64_t)a1, (const void ***)(a2 + 200));
      }
    }
  }
}

void sub_215A9FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC088(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEE064(a2, &v11);
        sub_2159A439C(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC088(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEE064(a2, &v11);
    sub_2159CAD4C(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC088(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEE064(a2, &v11);
  sub_2159CB6C8(a2, v3);
}

void sub_215A9FDEC(uint64_t a1, const void ***a2)
{
  v9[0] = 0;
  v9[1] = 0;
  int v8 = v9;
  uint64_t v3 = a2 + 1;
  int v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v8, (uint64_t *)v9, v4 + 4, (uint64_t)(v4 + 4));
      int v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          int v6 = (const void ***)v5;
          int v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (const void ***)v4[2];
          BOOL v7 = *v6 == v4;
          int v4 = (const void **)v6;
        }
        while (!v7);
      }
      int v4 = (const void **)v6;
    }
    while (v6 != v3);
  }
  sub_215A9FEE4(a1, (uint64_t)&v8);
  sub_21573AE84((uint64_t)&v8, v9[0]);
}

void sub_215A9FEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215A9FECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215A9FEE4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  uint64_t v15 = 0;
  long long v14 = 0uLL;
  sub_215AA0088((uint64_t)&v14, v4);
  uint64_t v5 = a2 + 8;
  sub_215AA018C(*(void **)a2, (void *)(a2 + 8), (uint64_t)&v14);
  *(_OWORD *)__p = v14;
  unint64_t v13 = v15;
  *(void *)&long long v14 = "context_enable_state_changes";
  *((void *)&v14 + 1) = 28;
  uint64_t v15 = __p;
  sub_215AA0410(a1, (uint64_t)&v14);
  uint64_t v15 = 0;
  long long v14 = (unint64_t)&v14 + 8;
  sub_215AA08DC((void **)&v14, (long long *)__p[0], v6, (long long *)__p[1]);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  uint64_t v7 = *((void *)&v14 + 1);
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v7;
  int v8 = v15;
  *(void *)(a2 + 16) = v15;
  if (v8)
  {
    *(void *)(v7 + 16) = v5;
    *(void *)&long long v14 = (char *)&v14 + 8;
    *((void *)&v14 + 1) = 0;
    uint64_t v15 = 0;
    sub_21573AE84((uint64_t)&v14, 0);
    int v9 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  else
  {
    *(void *)a2 = v5;
    sub_21573AE84((uint64_t)&v14, (char *)v7);
    int v9 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  int v10 = (void **)__p[1];
  int v11 = v9;
  if (__p[1] != v9)
  {
    do
    {
      if (*((char *)v10 - 9) < 0) {
        operator delete(*(v10 - 4));
      }
      v10 -= 4;
    }
    while (v10 != v9);
    int v11 = (void **)__p[0];
  }
  __p[1] = v9;
  operator delete(v11);
}

void sub_215AA0038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
}

void sub_215AA0060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA0074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA0088(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(void ***)a1;
  if (a2 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5)
  {
    if (a2 >> 59) {
      sub_215738AC0();
    }
    unint64_t v4 = *(void ***)(a1 + 8);
    uint64_t v5 = 32 * a2;
    uint64_t v6 = (char *)operator new(32 * a2);
    uint64_t v7 = &v6[v5];
    int v8 = &v6[(char *)v4 - (char *)v2];
    if (v4 == v2)
    {
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    else
    {
      int v9 = &v6[(char *)v4 - (char *)v2];
      do
      {
        long long v10 = *((_OWORD *)v4 - 2);
        *((void *)v9 - 2) = *(v4 - 2);
        *((_OWORD *)v9 - 2) = v10;
        *(v4 - 3) = 0;
        *(v4 - 2) = 0;
        *(v4 - 4) = 0;
        *(v9 - 8) = *((unsigned char *)v4 - 8);
        v9 -= 32;
        v4 -= 4;
      }
      while (v4 != v2);
      uint64_t v2 = *(void ***)a1;
      int v11 = *(void ***)(a1 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        if (*((char *)v11 - 9) < 0) {
          operator delete(*(v11 - 4));
        }
        v11 -= 4;
      }
    }
    if (v2)
    {
      operator delete(v2);
    }
  }
}

uint64_t sub_215AA018C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      char v6 = *((unsigned char *)v5 + 56);
      if (*((char *)v5 + 55) < 0)
      {
        sub_215738B0C(__p, (void *)v5[4], v5[5]);
        char v17 = v6;
        unint64_t v7 = *(void *)(a3 + 8);
        if (v7 < *(void *)(a3 + 16))
        {
LABEL_6:
          long long v8 = *(_OWORD *)__p;
          *(void *)(v7 + 16) = v16;
          *(_OWORD *)unint64_t v7 = v8;
          __p[1] = 0;
          uint64_t v16 = 0;
          __p[0] = 0;
          *(unsigned char *)(v7 + 24) = v17;
          *(void *)(a3 + 8) = v7 + 32;
          int v9 = (void *)v5[1];
          if (v9) {
            goto LABEL_11;
          }
          goto LABEL_14;
        }
      }
      else
      {
        *(_OWORD *)__p = *((_OWORD *)v5 + 2);
        uint64_t v16 = v5[6];
        char v17 = v6;
        unint64_t v7 = *(void *)(a3 + 8);
        if (v7 < *(void *)(a3 + 16)) {
          goto LABEL_6;
        }
      }
      long long v10 = sub_215AA02D4((void **)a3, (uint64_t)__p);
      int v11 = SHIBYTE(v16);
      *(void *)(a3 + 8) = v10;
      if (v11 < 0)
      {
        operator delete(__p[0]);
        int v9 = (void *)v5[1];
        if (v9)
        {
          do
          {
LABEL_11:
            unsigned int v12 = v9;
            int v9 = (void *)*v9;
          }
          while (v9);
          goto LABEL_3;
        }
      }
      else
      {
        int v9 = (void *)v5[1];
        if (v9) {
          goto LABEL_11;
        }
      }
      do
      {
LABEL_14:
        unsigned int v12 = (void *)v5[2];
        BOOL v13 = *v12 == (void)v5;
        uint64_t v5 = v12;
      }
      while (!v13);
LABEL_3:
      uint64_t v5 = v12;
    }
    while (v12 != a2);
  }
  return a3;
}

void sub_215AA02B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215AA02D4(void **a1, uint64_t a2)
{
  uint64_t v3 = ((unsigned char *)a1[1] - (unsigned char *)*a1) >> 5;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59) {
    sub_215738AC0();
  }
  uint64_t v5 = (unsigned char *)a1[2] - (unsigned char *)*a1;
  if (v5 >> 4 > v4) {
    unint64_t v4 = v5 >> 4;
  }
  BOOL v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFE0;
  unint64_t v7 = 0x7FFFFFFFFFFFFFFLL;
  if (!v6) {
    unint64_t v7 = v4;
  }
  if (v7 >> 59) {
    sub_215738AD8();
  }
  uint64_t v9 = 32 * v7;
  long long v10 = (char *)operator new(32 * v7);
  int v11 = &v10[32 * v3];
  unsigned int v12 = &v10[v9];
  *(_OWORD *)int v11 = *(_OWORD *)a2;
  *((void *)v11 + 2) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  v11[24] = *(unsigned char *)(a2 + 24);
  BOOL v13 = v11 + 32;
  long long v14 = (void **)*a1;
  uint64_t v15 = (void **)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
  }
  else
  {
    do
    {
      long long v16 = *((_OWORD *)v15 - 2);
      *((void *)v11 - 2) = *(v15 - 2);
      *((_OWORD *)v11 - 2) = v16;
      *(v15 - 3) = 0;
      *(v15 - 2) = 0;
      *(v15 - 4) = 0;
      *(v11 - 8) = *((unsigned char *)v15 - 8);
      v11 -= 32;
      v15 -= 4;
    }
    while (v15 != v14);
    uint64_t v15 = (void **)*a1;
    char v17 = (void **)a1[1];
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    while (v17 != v15)
    {
      if (*((char *)v17 - 9) < 0) {
        operator delete(*(v17 - 4));
      }
      v17 -= 4;
    }
  }
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

uint64_t sub_215AA0410(uint64_t a1, uint64_t a2)
{
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    unint64_t v4 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEC088(a1);
    uint64_t v6 = *v4;
    if (*v4 != v4[1]) {
      goto LABEL_4;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    unint64_t v7 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEC088(a1);
    uint64_t v6 = *v7;
    if (*v7 != v7[1])
    {
LABEL_4:
      sub_215DEC088(a1);
      sub_215DEE538(a1, v6);
      char v10 = *(unsigned char *)(v6 + 24);
      int v11 = &v10;
      sub_215AA0538();
    }
  }
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(unsigned __int8 *)(a1 + 88);
  *(void *)(a1 + 40) = *(void *)(v8 - 8);
  *(void *)(a1 + 56) = v8 - 8;
  if (v9) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return result;
}

void sub_215AA0538()
{
  int v0 = 0;
  sub_215AA0644();
}

void sub_215AA0600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA061C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA0630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA0644()
{
}

void sub_215AA0874(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AA0898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA08DC(void **a1, long long *a2, uint64_t a3, long long *a4)
{
  if (a2 != a4)
  {
    uint64_t v5 = a2;
    unint64_t v7 = (uint64_t *)(a1 + 1);
    while (1)
    {
      char v8 = *((unsigned char *)v5 + 24);
      if (*((char *)v5 + 23) < 0)
      {
        sub_215738B0C(__p, *(void **)v5, *((void *)v5 + 1));
      }
      else
      {
        long long v9 = *v5;
        uint64_t v15 = *((void *)v5 + 2);
        *(_OWORD *)__p = v9;
      }
      char v16 = v8;
      char v10 = sub_2157B76C4(a1, v7, &v18, &v17, (const void **)__p);
      if (!*v10) {
        break;
      }
      if (SHIBYTE(v15) < 0) {
        goto LABEL_13;
      }
LABEL_3:
      v5 += 2;
      if (v5 == a4) {
        return;
      }
    }
    int v11 = operator new(0x40uLL);
    v11[2] = *(_OWORD *)__p;
    *((void *)v11 + 6) = v15;
    __p[1] = 0;
    uint64_t v15 = 0;
    __p[0] = 0;
    *((unsigned char *)v11 + 56) = v16;
    unsigned int v12 = v18;
    *(void *)int v11 = 0;
    *((void *)v11 + 1) = 0;
    *((void *)v11 + 2) = v12;
    *char v10 = (uint64_t)v11;
    BOOL v13 = (void *)**a1;
    if (v13)
    {
      *a1 = v13;
      int v11 = (_OWORD *)*v10;
    }
    sub_21573B048(a1[1], (uint64_t *)v11);
    a1[2] = (void *)((char *)a1[2] + 1);
    if ((SHIBYTE(v15) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    operator delete(__p[0]);
    goto LABEL_3;
  }
}

void sub_215AA0A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA0A2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v7 + 40))
    {
      uint64_t v20 = (uint64_t *)(v7 + 16);
      sub_215E05FEC(&v20, 4u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v7 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC838(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v8 + 40))
    {
      uint64_t v20 = (uint64_t *)(v8 + 16);
      sub_215E05FEC(&v20, 5u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v8 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC718(a2, v4, 5u);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    uint64_t v6 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v6 + 40))
    {
      uint64_t v20 = (uint64_t *)(v6 + 16);
      sub_215E05FEC(&v20, 6u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v6 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159A6DFC(a2, v4, 6u);
  }
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(*(void *)(v9 + 88) - 8);
  sub_215E001AC((uint64_t *)(v9 + 48), *(void *)(v9 + 16) - v10 - 9);
  size_t v11 = *(void *)(v9 + 48);
  if (v11) {
    memmove((void *)(*(void *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  }
  *(void *)(v9 + 48) = 0;
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = *(void *)(v9 + 88) - 8;
  *(void *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(unsigned char *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(unsigned char *)(v9 + 40) = 0;
    }
  }
  uint64_t v14 = *(void *)(a2 + 24);
  if (*(unsigned char *)(v14 + 40))
  {
    uint64_t v20 = (uint64_t *)(v14 + 16);
    sub_215E05FEC(&v20, 1u);
  }
  else
  {
    sub_215E0626C((uint64_t)&v20, v14 + 8);
  }
  sub_215E0076C(*(void *)(a2 + 24));
  sub_215AA0CB0(a2, (const void ***)(v3 + 200));
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(*(void *)(v15 + 88) - 8);
  sub_215E001AC((uint64_t *)(v15 + 48), *(void *)(v15 + 16) - v16 - 9);
  size_t v17 = *(void *)(v15 + 48);
  if (v17) {
    memmove((void *)(*(void *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  }
  *(void *)(v15 + 48) = 0;
  uint64_t v18 = *(void *)(v15 + 80);
  uint64_t v19 = *(void *)(v15 + 88) - 8;
  *(void *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(unsigned char *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(unsigned char *)(v15 + 40) = 0;
    }
  }
}

void sub_215AA0CB0(uint64_t a1, const void ***a2)
{
  uint64_t v18 = 0;
  unint64_t v19 = 0;
  size_t v17 = &v18;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    unint64_t v5 = 0;
    uint64_t v6 = *(void *)(a1 + 24);
    if (!*(unsigned char *)(v6 + 40))
    {
LABEL_3:
      sub_215E06D00();
      goto LABEL_13;
    }
  }
  else
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v17, (uint64_t *)&v18, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void **)v8;
        }
        while (!v9);
      }
      uint64_t v4 = (const void **)v8;
    }
    while (v8 != v3);
    unint64_t v5 = v19;
    uint64_t v6 = *(void *)(a1 + 24);
    if (!*(unsigned char *)(v6 + 40)) {
      goto LABEL_3;
    }
  }
  uint64_t v21 = (uint64_t *)(v6 + 16);
  sub_215E069EC(&v21, v5);
LABEL_13:
  uint64_t v10 = (uint64_t *)v17;
  if (v17 != &v18)
  {
    do
    {
      size_t v11 = (const void **)(v10 + 4);
      uint64_t v12 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v12 + 40))
      {
        uint64_t v21 = (uint64_t *)(v12 + 16);
        sub_215E07110((uint64_t)&v20, &v21, v11);
      }
      else
      {
        sub_215E0752C((uint64_t)&v21, v12 + 8, (uint64_t)v11);
      }
      int v13 = *((char *)v10 + 56);
      uint64_t v14 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v14 + 40))
      {
        uint64_t v21 = (uint64_t *)(v14 + 16);
        sub_215E053CC(&v21, v13);
      }
      else
      {
        if (v13 < 0)
        {
          LOBYTE(v21) = -52;
          BYTE1(v21) = v13;
        }
        else
        {
          LOBYTE(v21) = *((unsigned char *)v10 + 56);
        }
        std::ostream::write();
      }
      uint64_t v15 = (char *)v10[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = (char **)v15;
          uint64_t v15 = *(char **)v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v16 = (char **)v10[2];
          BOOL v9 = *v16 == (char *)v10;
          uint64_t v10 = (uint64_t *)v16;
        }
        while (!v9);
      }
      uint64_t v10 = (uint64_t *)v16;
    }
    while (v16 != &v18);
  }
  sub_21573AE84((uint64_t)&v17, v18);
}

void sub_215AA0E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AA0E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AA0EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AA0EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEB804(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC344(a2, &v11);
        sub_2159A7F64(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEB804(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC344(a2, &v11);
    sub_2159CD210(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEB804(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC344(a2, &v11);
  sub_2159CD95C(a2, v3);
}

void sub_215AA11C4(uint64_t a1, const void ***a2)
{
  v9[0] = 0;
  v9[1] = 0;
  int v8 = v9;
  uint64_t v3 = a2 + 1;
  int v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v8, (uint64_t *)v9, v4 + 4, (uint64_t)(v4 + 4));
      int v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          int v6 = (const void ***)v5;
          int v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (const void ***)v4[2];
          BOOL v7 = *v6 == v4;
          int v4 = (const void **)v6;
        }
        while (!v7);
      }
      int v4 = (const void **)v6;
    }
    while (v6 != v3);
  }
  sub_215AA12BC(a1, (uint64_t)&v8);
  sub_21573AE84((uint64_t)&v8, v9[0]);
}

void sub_215AA128C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AA12A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AA12BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  uint64_t v15 = 0;
  long long v14 = 0uLL;
  sub_215AA0088((uint64_t)&v14, v4);
  uint64_t v5 = a2 + 8;
  sub_215AA018C(*(void **)a2, (void *)(a2 + 8), (uint64_t)&v14);
  *(_OWORD *)__p = v14;
  int v13 = v15;
  *(void *)&long long v14 = "context_enable_state_changes";
  *((void *)&v14 + 1) = 28;
  uint64_t v15 = __p;
  sub_215AA1460(a1, (uint64_t)&v14);
  uint64_t v15 = 0;
  long long v14 = (unint64_t)&v14 + 8;
  sub_215AA08DC((void **)&v14, (long long *)__p[0], v6, (long long *)__p[1]);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  uint64_t v7 = *((void *)&v14 + 1);
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v7;
  int v8 = v15;
  *(void *)(a2 + 16) = v15;
  if (v8)
  {
    *(void *)(v7 + 16) = v5;
    *(void *)&long long v14 = (char *)&v14 + 8;
    *((void *)&v14 + 1) = 0;
    uint64_t v15 = 0;
    sub_21573AE84((uint64_t)&v14, 0);
    int v9 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  else
  {
    *(void *)a2 = v5;
    sub_21573AE84((uint64_t)&v14, (char *)v7);
    int v9 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  int v10 = (void **)__p[1];
  int v11 = v9;
  if (__p[1] != v9)
  {
    do
    {
      if (*((char *)v10 - 9) < 0) {
        operator delete(*(v10 - 4));
      }
      v10 -= 4;
    }
    while (v10 != v9);
    int v11 = (void **)__p[0];
  }
  __p[1] = v9;
  operator delete(v11);
}

void sub_215AA1410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
}

void sub_215AA1438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA144C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA1460(uint64_t a1, uint64_t a2)
{
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    unint64_t v4 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEB804(a1);
    uint64_t v6 = *v4;
    if (*v4 != v4[1]) {
      goto LABEL_4;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    uint64_t v7 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEB804(a1);
    uint64_t v6 = *v7;
    if (*v7 != v7[1])
    {
LABEL_4:
      sub_215DEB804(a1);
      sub_215DEC818(a1, v6);
      char v10 = *(unsigned char *)(v6 + 24);
      int v11 = &v10;
      sub_215AA1588();
    }
  }
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(unsigned __int8 *)(a1 + 88);
  *(void *)(a1 + 40) = *(void *)(v8 - 8);
  *(void *)(a1 + 56) = v8 - 8;
  if (v9) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return result;
}

void sub_215AA1588()
{
  int v0 = 0;
  sub_215AA0644();
}

void sub_215AA1650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA166C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA1680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_215AA1694(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(void *)(a2 + 40))
    {
      uint64_t v8 = *(void **)(a2 + 24);
      char v20 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CED28(a2, v4, 4u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v5 != 1)
    {
      if (v5) {
        sub_215742D4C();
      }
      if (*(void *)(a2 + 40))
      {
        uint64_t v6 = *(void **)(a2 + 24);
        char v18 = *(unsigned char *)(a2 + 32);
        sub_215731D94(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(void *)(a2 + 40);
      sub_2159A95B4(a2, v4, 6u);
      char v7 = *(unsigned char *)(a2 + 34);
      if (!*(void *)(a2 + 40)) {
        goto LABEL_16;
      }
LABEL_15:
      char v10 = *(void **)(a2 + 24);
      char v21 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(void *)(a2 + 40))
    {
      int v9 = *(void **)(a2 + 24);
      char v19 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CE77C(a2, v4, 5u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
LABEL_16:
  int v11 = *(void **)(a2 + 24);
  char v22 = v7;
  sub_215731D94(v11, (uint64_t)&v22, 1);
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    int v13 = *(void **)(a2 + 24);
    char v23 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a2 + 40);
  sub_215AA18B0(a2, (const void ***)(v3 + 200));
  char v14 = *(unsigned char *)(a2 + 34);
  if (*(void *)(a2 + 40))
  {
    uint64_t v15 = *(void **)(a2 + 24);
    char v24 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v15, (uint64_t)&v24, 1);
  }
  uint64_t v16 = *(void **)(a2 + 24);
  char v25 = v14;
  uint64_t result = sub_215731D94(v16, (uint64_t)&v25, 1);
  ++*(void *)(a2 + 40);
  return result;
}

void sub_215AA18B0(uint64_t a1, const void ***a2)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v12 = v13;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v12, (uint64_t *)v13, v4 + 4, (uint64_t)(v4 + 4));
      int v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          uint64_t v6 = (const void ***)v5;
          int v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (const void ***)v4[2];
          BOOL v7 = *v6 == v4;
          uint64_t v4 = (const void **)v6;
        }
        while (!v7);
      }
      uint64_t v4 = (const void **)v6;
    }
    while (v6 != v3);
    if (!*(void *)(a1 + 40)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (*(void *)(a1 + 40))
  {
LABEL_12:
    uint64_t v8 = *(void **)(a1 + 24);
    unsigned __int8 v14 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v8, (uint64_t)&v14, 1);
  }
LABEL_13:
  std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  int v9 = (uint64_t *)v12;
  if (v12 != v13)
  {
    do
    {
      sub_215DF933C(a1, (uint64_t)(v9 + 4));
      unsigned __int8 v14 = *((unsigned char *)v9 + 56);
      sub_215DF927C(a1, &v14);
      char v10 = (char *)v9[1];
      if (v10)
      {
        do
        {
          int v11 = (char **)v10;
          char v10 = *(char **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (char **)v9[2];
          BOOL v7 = *v11 == (char *)v9;
          int v9 = (uint64_t *)v11;
        }
        while (!v7);
      }
      int v9 = (uint64_t *)v11;
    }
    while (v11 != v13);
  }
  sub_21573AE84((uint64_t)&v12, v13[0]);
}

void sub_215AA1A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1A58(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    int __src = 4;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v7 = __src;
    sub_215D02034((void *)a2);
    sub_2159CF4E8(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    int __src = 5;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v8 = __src;
    sub_215D02034((void *)a2);
    sub_2159CF3C8(a2, v4, v8);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    int __src = 6;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v6 = __src;
    sub_215D02034((void *)a2);
    sub_2159AA330(a2, v4, v6);
  }
  uint64_t v9 = *(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24);
  *(void *)(v9 + 10) = *(void *)(a2 + 32) - v9 - 18;
  *(void *)(a2 + 56) -= 8;
  int __src = 1;
  sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_215D02034((void *)a2);
  sub_215AA1C14(a2, (const void ***)(v3 + 200));
  uint64_t v10 = *(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24);
  *(void *)(v10 + 10) = *(void *)(a2 + 32) - v10 - 18;
  *(void *)(a2 + 56) -= 8;
}

void sub_215AA1C14(uint64_t a1, const void ***a2)
{
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = &v13;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    uint64_t v5 = 0;
  }
  else
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v12, (uint64_t *)&v13, v4 + 4, (uint64_t)(v4 + 4));
      unsigned int v6 = (const void **)v4[1];
      if (v6)
      {
        do
        {
          unsigned int v7 = (const void ***)v6;
          unsigned int v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          unsigned int v7 = (const void ***)v4[2];
          BOOL v8 = *v7 == v4;
          uint64_t v4 = (const void **)v7;
        }
        while (!v8);
      }
      uint64_t v4 = (const void **)v7;
    }
    while (v7 != v3);
    uint64_t v5 = v14;
  }
  uint64_t __src = v5;
  sub_215D04A50(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v16, 8);
  uint64_t v9 = (uint64_t *)v12;
  if (v12 != &v13)
  {
    do
    {
      sub_215D023C8(a1, (char *)v9 + 32);
      LOBYTE(__src) = *((unsigned char *)v9 + 56);
      sub_215D04A50(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
      uint64_t v10 = (char *)v9[1];
      if (v10)
      {
        do
        {
          int v11 = (char **)v10;
          uint64_t v10 = *(char **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (char **)v9[2];
          BOOL v8 = *v11 == (char *)v9;
          uint64_t v9 = (uint64_t *)v11;
        }
        while (!v8);
      }
      uint64_t v9 = (uint64_t *)v11;
    }
    while (v11 != &v13);
  }
  sub_21573AE84((uint64_t)&v12, v13);
}

void sub_215AA1D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA1DC0(int *a1, uint64_t a2, const void ***a3)
{
  int v6 = 1;
  (*(void (**)(uint64_t, int *))(*(void *)a2 + 104))(a2, &v6);
  if (*a1 < 1
    || *a1 == 2 && (int v7 = 1, (*(void (**)(uint64_t, int *))(*(void *)a2 + 104))(a2, &v7), *a1 <= 0))
  {
    sub_215AA1F08(a2, a3);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)a2 + 16))(a2);
    sub_215AA1F08(a2, a3);
    (*(void (**)(uint64_t))(*(void *)a2 + 24))(a2);
  }
}

void sub_215AA1F08(uint64_t a1, const void ***a2)
{
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = &v13;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    uint64_t v5 = 0;
  }
  else
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v12, (uint64_t *)&v13, v4 + 4, (uint64_t)(v4 + 4));
      int v6 = (const void **)v4[1];
      if (v6)
      {
        do
        {
          int v7 = (const void ***)v6;
          int v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (const void ***)v4[2];
          BOOL v8 = *v7 == v4;
          uint64_t v4 = (const void **)v7;
        }
        while (!v8);
      }
      uint64_t v4 = (const void **)v7;
    }
    while (v7 != v3);
    uint64_t v5 = v14;
  }
  uint64_t v15 = v5;
  (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 120))(a1, &v15);
  uint64_t v9 = (uint64_t *)v12;
  if (v12 != &v13)
  {
    do
    {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 144))(a1, v9 + 4);
      LOBYTE(v15) = *((unsigned char *)v9 + 56);
      (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 80))(a1, &v15);
      uint64_t v10 = (char *)v9[1];
      if (v10)
      {
        do
        {
          int v11 = (char **)v10;
          uint64_t v10 = *(char **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (char **)v9[2];
          BOOL v8 = *v11 == (char *)v9;
          uint64_t v9 = (uint64_t *)v11;
        }
        while (!v8);
      }
      uint64_t v9 = (uint64_t *)v11;
    }
    while (v11 != &v13);
  }
  sub_21573AE84((uint64_t)&v12, v13);
}

void sub_215AA2098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA20B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA20C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215AA20E0(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v10 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CB8, 0);
  if (v4) {
    sub_215AA27EC(&v10, (uint64_t)v4);
  }
  uint64_t v10 = a2;
  uint64_t v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CF0, 0);
  if (v5)
  {
    sub_215AA3460(&v10, v5);
  }
  else
  {
    uint64_t v10 = a2;
    int v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675D78, 0);
    if (v6) {
      sub_215AA3A4C(&v10, (uint64_t)v6);
    }
    uint64_t v10 = a2;
    int v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675DB0, 0);
    if (v7)
    {
      sub_215AA4508(&v10, (uint64_t)v7);
    }
    else
    {
      uint64_t v10 = a2;
      BOOL v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C683378, 0);
      if (v8) {
        sub_215AA4C6C(&v10, v8);
      }
      else {
        sub_215AA22AC(&v9, (void **)a1);
      }
    }
  }
}

void sub_215AA22AC(uint64_t *a1, void **a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v29);
    sub_2159A3DA4((uint64_t)&v30, v29);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)&v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v28, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    uint64_t v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    uint64_t v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v29);
  sub_2159A3DA4((uint64_t)&v30, v29);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v28, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v17;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v36;
    long long v19 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v20;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v21;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)&v30);
  if (v45)
  {
LABEL_38:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v43 + 1);
    uint64_t v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0) {
    operator delete((void *)v40);
  }
  if (v39 && SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
  if (v34 && SHIBYTE(v33) < 0) {
    operator delete((void *)v32);
  }
  sub_2157C6F18((uint64_t)v29);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  char v24 = (void (**)(void **, unsigned int *))*a2;
  v29[0] = (uint64_t)a2[1];
  int v25 = v29[0];
  unsigned int v30 = 6;
  v24[13](a2, &v30);
  if (v25 < 1)
  {
    if (v30 < 3) {
      sub_2159B6FFC((uint64_t)&v30, a2, v4, v30);
    }
    else {
      sub_2159B71F0(a2, v4, v30);
    }
  }
  else
  {
    sub_2159B6970((int *)v29, a2, v4, v30);
  }
  uint64_t v26 = (void (**)(void **, unsigned int *))*a2;
  v29[0] = (uint64_t)a2[1];
  int v27 = v29[0];
  unsigned int v30 = 1;
  v26[13](a2, &v30);
  if (v27 < 1) {
    sub_215AA5698((uint64_t)a2, v3 + 200);
  }
  else {
    sub_215AA5358((int *)v29, (uint64_t)a2, v3 + 200);
  }
}

void sub_215AA27A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA27EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    uint64_t v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    uint64_t v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF07E4(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF1DC8((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159AC908(a2, v4);
        }
        sub_2159AC714((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  uint64_t v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AA2D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA2D94(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  uint64_t v16 = 0;
  long long v15 = 0uLL;
  sub_215AA0088((uint64_t)&v15, v4);
  uint64_t v5 = a2 + 8;
  sub_215AA018C(*(void **)a2, (void *)(a2 + 8), (uint64_t)&v15);
  *(_OWORD *)__p = v15;
  uint64_t v14 = v16;
  int v6 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "context_enable_state_changes";
  *(void *)(a1 + 96) = 28;
  if (!v6) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215AA2F40((void *)a1, (char **)__p);
  *((void *)&v15 + 1) = 0;
  uint64_t v16 = 0;
  *(void *)&long long v15 = (char *)&v15 + 8;
  sub_215AA08DC((void **)&v15, (long long *)__p[0], v7, (long long *)__p[1]);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  uint64_t v8 = *((void *)&v15 + 1);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v8;
  uint64_t v9 = v16;
  *(void *)(a2 + 16) = v16;
  if (v9)
  {
    *(void *)(v8 + 16) = v5;
    *(void *)&long long v15 = (char *)&v15 + 8;
    *((void *)&v15 + 1) = 0;
    uint64_t v16 = 0;
    sub_21573AE84((uint64_t)&v15, 0);
    long long v10 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  else
  {
    *(void *)a2 = v5;
    sub_21573AE84((uint64_t)&v15, (char *)v8);
    long long v10 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  uint64_t v11 = (void **)__p[1];
  uint64_t v12 = v10;
  if (__p[1] != v10)
  {
    do
    {
      if (*((char *)v11 - 9) < 0) {
        operator delete(*(v11 - 4));
      }
      v11 -= 4;
    }
    while (v11 != v10);
    uint64_t v12 = (void **)__p[0];
  }
  __p[1] = v10;
  operator delete(v12);
}

void sub_215AA2EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
}

void sub_215AA2F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA2F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA2F40(void *a1, char **a2)
{
  sub_215DF07E4((uint64_t)a1);
  unint64_t v4 = (unsigned __int8 *)a1[4];
  int v5 = *v4;
  if (v5 == 2)
  {
    unint64_t v6 = (uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 3);
  }
  else
  {
    if (!*v4)
    {
      unint64_t v6 = 0;
      uint64_t v7 = (void ***)(a2 + 1);
      uint64_t v8 = (void **)a2[1];
      uint64_t v9 = *a2;
      unint64_t v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    unint64_t v6 = 1;
  }
  uint64_t v7 = (void ***)(a2 + 1);
  uint64_t v8 = (void **)a2[1];
  uint64_t v9 = *a2;
  unint64_t v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_215AA3154((void **)a2, v6 - v10);
    uint64_t v12 = a2;
    uint64_t v11 = (void **)*a2;
    if (v11 == (void **)v12[1]) {
      goto LABEL_20;
    }
LABEL_22:
    sub_215DF07E4((uint64_t)a1);
    uint64_t v17 = (void **)sub_215DF0AA0(a1);
    ++a1[14];
    long long v19 = 0;
    long long v18 = 0uLL;
    sub_215D30C0C(v17, (uint64_t)&v18);
    if (*((char *)v11 + 23) < 0) {
      operator delete(*v11);
    }
    long long v16 = v18;
    v11[2] = v19;
    *(_OWORD *)uint64_t v11 = v16;
    *(void *)&long long v18 = v11 + 3;
    sub_215AA32F8(a1);
  }
LABEL_11:
  if (v10 <= v6)
  {
    uint64_t v11 = (void **)*a2;
    if (v11 == v8) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  int v13 = (void **)&v9[32 * v6];
  while (v8 != v13)
  {
    if (*((char *)v8 - 9) < 0) {
      operator delete(*(v8 - 4));
    }
    v8 -= 4;
  }
  *uint64_t v7 = v13;
  uint64_t v11 = (void **)*a2;
  if (v11 != v13) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[9];
  a1[4] = *(void *)(v14 - 8);
  a1[14] = *(void *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_215AA3138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA3154(void **a1, unint64_t a2)
{
  int v5 = (void **)a1[1];
  unint64_t v4 = a1[2];
  if (a2 <= (v4 - (unsigned char *)v5) >> 5)
  {
    if (a2)
    {
      uint64_t v11 = 32 * a2;
      uint64_t v12 = &v5[4 * a2];
      do
      {
        void *v5 = 0;
        v5[1] = 0;
        *((unsigned char *)v5 + 24) = 0;
        v5[2] = 0;
        v5 += 4;
        v11 -= 32;
      }
      while (v11);
      int v5 = v12;
    }
    a1[1] = v5;
  }
  else
  {
    uint64_t v6 = ((char *)v5 - (unsigned char *)*a1) >> 5;
    if ((v6 + a2) >> 59) {
      sub_215738AC0();
    }
    uint64_t v7 = v4 - (unsigned char *)*a1;
    uint64_t v8 = v7 >> 4;
    if (v7 >> 4 <= v6 + a2) {
      uint64_t v8 = v6 + a2;
    }
    if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9)
    {
      if (v9 >> 59) {
        sub_215738AD8();
      }
      unint64_t v10 = (char *)operator new(32 * v9);
    }
    else
    {
      unint64_t v10 = 0;
    }
    int v13 = &v10[32 * v6];
    uint64_t v14 = 32 * a2;
    uint64_t v15 = &v13[32 * a2];
    long long v16 = v13;
    do
    {
      *(void *)long long v16 = 0;
      *((void *)v16 + 1) = 0;
      v16[24] = 0;
      *((void *)v16 + 2) = 0;
      v16 += 32;
      v14 -= 32;
    }
    while (v14);
    uint64_t v17 = &v10[32 * v9];
    long long v18 = (void **)*a1;
    if (v5 == *a1)
    {
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
    }
    else
    {
      do
      {
        long long v19 = *((_OWORD *)v5 - 2);
        *((void *)v13 - 2) = *(v5 - 2);
        *((_OWORD *)v13 - 2) = v19;
        *(v5 - 3) = 0;
        *(v5 - 2) = 0;
        *(v5 - 4) = 0;
        *(v13 - 8) = *((unsigned char *)v5 - 8);
        v13 -= 32;
        v5 -= 4;
      }
      while (v5 != v18);
      int v5 = (void **)*a1;
      uint64_t v20 = (void **)a1[1];
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
      while (v20 != v5)
      {
        if (*((char *)v20 - 9) < 0) {
          operator delete(*(v20 - 4));
        }
        v20 -= 4;
      }
    }
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void sub_215AA32F8(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  uint64_t v2 = (void **)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D30C0C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215AA33F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = (uint64_t)a17;
  a17 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a17, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AA3460(uint64_t *a1, void *a2)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v29, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v29);
        if (!v44) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(unsigned char *)(v3 + 64) = 0;
    if (v33)
    {
      uint64_t v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(void *)(v3 + 56) = v8;
      long long v31 = 0uLL;
      uint64_t v32 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v35;
    long long v10 = v34;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v38)
    {
      uint64_t v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(void *)(v3 + 112) = v11;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v41)
    {
      uint64_t v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(void *)(v3 + 144) = v12;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(void *)(v3 + 176) = v43;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v42;
    if (!(void)v42) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v42 + 1);
    long long v16 = (void *)v42;
    if (*((void *)&v42 + 1) == (void)v42) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v42;
LABEL_45:
    *((void *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v29, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(unsigned char *)(v3 + 64) = 0;
    if (v33)
    {
      uint64_t v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(void *)(v3 + 56) = v17;
      long long v31 = 0uLL;
      uint64_t v32 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v35;
    long long v19 = v34;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v38)
    {
      uint64_t v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(void *)(v3 + 112) = v20;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v41)
    {
      uint64_t v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(void *)(v3 + 144) = v21;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(void *)(v3 + 176) = v43;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    uint64_t v14 = v42;
    if (!(void)v42) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v42 + 1);
    long long v16 = (void *)v42;
    if (*((void *)&v42 + 1) == (void)v42) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0) {
    operator delete((void *)v39);
  }
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  if (v33 && SHIBYTE(v32) < 0) {
    operator delete((void *)v31);
  }
  sub_2157C6F18((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159AFF3C((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_215DFF824(a2[6], v28);
  sub_2159B0060(a2 + 2);
  sub_215AA396C((uint64_t)a2, v3 + 200);
  uint64_t v24 = a2[4];
  uint64_t result = (*(uint64_t (**)(void *))(a2[2] + 32))(a2 + 2);
  uint64_t v26 = *(void *)(v24 - 16) - result + *(void *)(v24 - 8);
  if (v26) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  }
  a2[4] -= 16;
  return result;
}

void sub_215AA3924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA396C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  sub_215DFFC24(*(void *)(a1 + 48), &v8);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  *(void *)a2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  for (uint64_t i = v8; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    char v7 = 0;
    uint64_t v6 = 0;
    sub_215E000A8(*(void *)(a1 + 48), __p);
    char v9 = 0;
    sub_215DFF4BC(*(void *)(a1 + 48), &v9);
    char v7 = v9;
    sub_215838DC8((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v6) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AA3A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA3A4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    long long v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF01A0(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF0F9C((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159B191C(a2, v4);
        }
        sub_2159B1728((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  long long v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AA3FAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA3FF4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  uint64_t v16 = 0;
  long long v15 = 0uLL;
  sub_215AA0088((uint64_t)&v15, v4);
  uint64_t v5 = a2 + 8;
  sub_215AA018C(*(void **)a2, (void *)(a2 + 8), (uint64_t)&v15);
  *(_OWORD *)__p = v15;
  uint64_t v14 = v16;
  int v6 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "context_enable_state_changes";
  *(void *)(a1 + 96) = 28;
  if (!v6) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215AA41A0((void *)a1, (char **)__p);
  *((void *)&v15 + 1) = 0;
  uint64_t v16 = 0;
  *(void *)&long long v15 = (char *)&v15 + 8;
  sub_215AA08DC((void **)&v15, (long long *)__p[0], v7, (long long *)__p[1]);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  uint64_t v8 = *((void *)&v15 + 1);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v8;
  uint64_t v9 = v16;
  *(void *)(a2 + 16) = v16;
  if (v9)
  {
    *(void *)(v8 + 16) = v5;
    *(void *)&long long v15 = (char *)&v15 + 8;
    *((void *)&v15 + 1) = 0;
    uint64_t v16 = 0;
    sub_21573AE84((uint64_t)&v15, 0);
    long long v10 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  else
  {
    *(void *)a2 = v5;
    sub_21573AE84((uint64_t)&v15, (char *)v8);
    long long v10 = (void **)__p[0];
    if (!__p[0]) {
      return;
    }
  }
  uint64_t v11 = (void **)__p[1];
  uint64_t v12 = v10;
  if (__p[1] != v10)
  {
    do
    {
      if (*((char *)v11 - 9) < 0) {
        operator delete(*(v11 - 4));
      }
      v11 -= 4;
    }
    while (v11 != v10);
    uint64_t v12 = (void **)__p[0];
  }
  __p[1] = v10;
  operator delete(v12);
}

void sub_215AA4150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
}

void sub_215AA4178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA41A0(void *a1, char **a2)
{
  sub_215DF01A0((uint64_t)a1);
  unint64_t v4 = (unsigned __int8 *)a1[4];
  int v5 = *v4;
  if (v5 == 2)
  {
    unint64_t v6 = (uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    unint64_t v6 = *(void *)(*((void *)v4 + 1) + 16);
  }
  else
  {
    if (!*v4)
    {
      unint64_t v6 = 0;
      uint64_t v7 = (void ***)(a2 + 1);
      uint64_t v8 = (void **)a2[1];
      uint64_t v9 = *a2;
      unint64_t v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    unint64_t v6 = 1;
  }
  uint64_t v7 = (void ***)(a2 + 1);
  uint64_t v8 = (void **)a2[1];
  uint64_t v9 = *a2;
  unint64_t v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_215AA3154((void **)a2, v6 - v10);
    uint64_t v12 = a2;
    uint64_t v11 = (void **)*a2;
    if (v11 == (void **)v12[1]) {
      goto LABEL_20;
    }
LABEL_22:
    sub_215DF01A0((uint64_t)a1);
    uint64_t v17 = (void **)sub_215DF045C(a1);
    ++a1[14];
    long long v19 = 0;
    long long v18 = 0uLL;
    sub_215D3040C(v17, (uint64_t)&v18);
    if (*((char *)v11 + 23) < 0) {
      operator delete(*v11);
    }
    long long v16 = v18;
    v11[2] = v19;
    *(_OWORD *)uint64_t v11 = v16;
    *(void *)&long long v18 = v11 + 3;
    sub_215AA43A0(a1);
  }
LABEL_11:
  if (v10 <= v6)
  {
    uint64_t v11 = (void **)*a2;
    if (v11 == v8) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  int v13 = (void **)&v9[32 * v6];
  while (v8 != v13)
  {
    if (*((char *)v8 - 9) < 0) {
      operator delete(*(v8 - 4));
    }
    v8 -= 4;
  }
  *uint64_t v7 = v13;
  uint64_t v11 = (void **)*a2;
  if (v11 != v13) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[9];
  a1[4] = *(void *)(v14 - 8);
  a1[14] = *(void *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_215AA4384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA43A0(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  uint64_t v2 = (void **)sub_215DF045C(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D3040C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215AA4498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = (uint64_t)a17;
  a17 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a17, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA4508(uint64_t *a1, uint64_t a2)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)&__p);
    sub_2159A3DA4((uint64_t)v34, (uint64_t *)&__p);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v34);
        if (!v49) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v30, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(unsigned char *)(v3 + 64) = 0;
    if (v38)
    {
      uint64_t v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(void *)(v3 + 56) = v8;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v40;
    long long v10 = v39;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v43)
    {
      uint64_t v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(void *)(v3 + 112) = v11;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v46)
    {
      uint64_t v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(void *)(v3 + 144) = v12;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(void *)(v3 + 176) = v48;
      long long v47 = 0uLL;
      uint64_t v48 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v47;
    if (!(void)v47) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v47 + 1);
    long long v16 = (void *)v47;
    if (*((void *)&v47 + 1) == (void)v47) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v47;
LABEL_45:
    *((void *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)&__p);
  sub_2159A3DA4((uint64_t)v34, (uint64_t *)&__p);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v30, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(unsigned char *)(v3 + 64) = 0;
    if (v38)
    {
      uint64_t v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(void *)(v3 + 56) = v17;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v40;
    long long v19 = v39;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v43)
    {
      uint64_t v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(void *)(v3 + 112) = v20;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v46)
    {
      uint64_t v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(void *)(v3 + 144) = v21;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(void *)(v3 + 176) = v48;
      long long v47 = 0uLL;
      uint64_t v48 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    uint64_t v14 = v47;
    if (!(void)v47) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v47 + 1);
    long long v16 = (void *)v47;
    if (*((void *)&v47 + 1) == (void)v47) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0) {
    operator delete((void *)v44);
  }
  if (v43 && SHIBYTE(v42) < 0) {
    operator delete((void *)v41);
  }
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  sub_2157C6F18((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  LODWORD(__p) = 6;
  sub_215DFABD4(a2, &__p);
  unsigned int v24 = __p;
  if (__p >= 6) {
    unsigned int v25 = 6;
  }
  else {
    unsigned int v25 = __p;
  }
  if (v25 < 3) {
    sub_2159B3640((uint64_t)&__p, a2, v4, v25);
  }
  else {
    sub_2159B3834(a2, v4, v25);
  }
  if (v24 >= 3 && !*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          char v29 = 0;
          if (v33 < 0) {
            goto LABEL_95;
          }
          goto LABEL_81;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      char v29 = 1;
      if (v33 < 0) {
LABEL_95:
      }
        operator delete(__p);
LABEL_81:
      if (*(unsigned char *)(a2 + 131)) {
        char v28 = 0;
      }
      else {
        char v28 = v29;
      }
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_215DFABD4(a2, &__p);
  sub_215AA4B34(a2, v3 + 200);
  if (!*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        return;
      }
      sub_215DFD700(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          char v27 = 0;
          if (v33 < 0) {
            goto LABEL_80;
          }
          goto LABEL_66;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      char v27 = 1;
      if (v33 < 0) {
LABEL_80:
      }
        operator delete(__p);
LABEL_66:
      if (*(unsigned char *)(a2 + 131)) {
        char v26 = 0;
      }
      else {
        char v26 = v27;
      }
    }
    while ((v26 & 1) != 0);
  }
}

void sub_215AA4AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA4B34(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = 0;
  sub_215DFB854(a1, &v9);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  *(void *)a2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  for (uint64_t i = v9; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    char v8 = 0;
    uint64_t v7 = 0;
    ++*(void *)(a1 + 80);
    if (*(unsigned char *)(a1 + 128)) {
      BOOL v5 = *(unsigned char *)(a1 + 131) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (v5)
    {
      sub_215DFD700(a1, (uint64_t)&v10);
      if (SHIBYTE(v7) < 0) {
        operator delete(__p[0]);
      }
      *(_OWORD *)__p = v10;
      uint64_t v7 = v11;
      ++*(void *)(a1 + 104);
    }
    else
    {
      *(unsigned char *)(a1 + 132) = 1;
    }
    LOBYTE(v10) = 0;
    sub_215DFA01C(a1, &v10);
    char v8 = v10;
    sub_215838DC8((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v7) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AA4C50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA4C6C(uint64_t *a1, void *a2)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v25);
    sub_2159A3DA4((uint64_t)v26, v25);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v26);
        if (!v41) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v24, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v8;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v32;
    long long v10 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v11;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v12;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v39 + 1);
    long long v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v39;
LABEL_45:
    *((void *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v25);
  sub_2159A3DA4((uint64_t)v26, v25);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v24, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v17;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v32;
    long long v19 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v20;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v21;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v39 + 1);
    long long v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  if (v30 && SHIBYTE(v29) < 0) {
    operator delete((void *)v28);
  }
  sub_2157C6F18((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159B5060((uint64_t)v25, a2, v4);
  sub_215AA50E4((uint64_t)v25, a2, v3 + 200);
}

void sub_215AA509C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA50E4(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a2[6];
  unint64_t v4 = a2[7];
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  a2[6] = v3 + 4;
  sub_215D02644(a2);
  sub_215AA51A8(a2, a3);
  uint64_t v9 = a2[12];
  uint64_t v10 = a2[9];
  a2[6] = *(void *)(v9 - 8) + *(void *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_215AA5194(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AA51A8(void *a1, uint64_t a2)
{
  unint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  BOOL v4 = v3 >= v2;
  unint64_t v5 = v3 - v2;
  if (!v4) {
    unint64_t v5 = 0;
  }
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  uint64_t v8 = *(void *)(a1[3] + v2);
  a1[6] = v2 + 8;
  uint64_t v9 = (void *)(a2 + 8);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  *(void *)a2 = v9;
  *(void *)(a2 + 16) = 0;
  for (*uint64_t v9 = 0; v8; --v8)
  {
    __p[0] = 0;
    __p[1] = 0;
    char v16 = 0;
    uint64_t v15 = 0;
    sub_215D029A0(a1, (uint64_t)__p);
    unint64_t v10 = a1[6];
    if (a1[7] <= v10)
    {
      uint64_t v12 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v12, "Not enough data to read");
      v12->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
      __cxa_throw(v12, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
    }
    char v11 = *(unsigned char *)(a1[3] + v10);
    a1[6] = v10 + 1;
    char v16 = v11;
    sub_215838DC8((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AA5314(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AA5328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA5358(int *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *a1;
  if (*a1 == 2)
  {
    unsigned int v9 = 1;
    (*(void (**)(uint64_t, unsigned int *))(*(void *)a2 + 104))(a2, &v9);
    if (v9 >= 2)
    {
      unsigned int v7 = v9;
      uint64_t v8 = sub_215AA547C();
      sub_215E07C10((std::string *)v8, v7, 1u);
    }
    int v5 = *a1;
  }
  if (v5 <= 0)
  {
    sub_215AA5698(a2, a3);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)a2 + 16))(a2);
    sub_215AA5698(a2, a3);
    (*(void (**)(uint64_t))(*(void *)a2 + 24))(a2);
  }
}

long long *sub_215AA547C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678889E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678889E0))
  {
    return &xmmword_2678889C8;
  }
  uint64_t v1 = (char *)sub_215AA5564();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678889C8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678889D8 = *((void *)v1 + 2);
    xmmword_2678889C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678889C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678889E0);
  return &xmmword_2678889C8;
}

void sub_215AA554C(_Unwind_Exception *a1)
{
}

void *sub_215AA5564()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888A00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledContextsSample]", qword_2678889E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678889E8, &dword_21572C000);
    __cxa_guard_release(&qword_267888A00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888A20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888A20))
  {
    return &unk_267888A08;
  }
  sub_215E19DF4((uint64_t)qword_2678889E8, (uint64_t)&unk_267888A08);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888A08, &dword_21572C000);
  __cxa_guard_release(&qword_267888A20);
  return &unk_267888A08;
}

void sub_215AA5668(_Unwind_Exception *a1)
{
}

void sub_215AA5680(_Unwind_Exception *a1)
{
}

void sub_215AA5698(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 120))(a1, &v8);
  sub_21573AE84(a2, *(char **)(a2 + 8));
  *(void *)a2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  for (uint64_t i = v8; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    char v7 = 0;
    uint64_t v6 = 0;
    (*(void (**)(uint64_t, void **))(*(void *)a1 + 144))(a1, __p);
    char v9 = 0;
    (*(void (**)(uint64_t, char *))(*(void *)a1 + 80))(a1, &v9);
    char v7 = v9;
    sub_215838DC8((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v6) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AA57B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AA57D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t result = sub_215AA7A70((char *)a2, *(void *)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 5);
  *(unsigned char *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 48) = 0;
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(char *)(a1 + 47) < 0)
    {
      uint64_t result = sub_215738B0C((unsigned char *)(a2 + 24), *(void **)(a1 + 24), *(void *)(a1 + 32));
    }
    else
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
      *(void *)(a2 + 40) = *(void *)(a1 + 40);
    }
    *(unsigned char *)(a2 + 48) = 1;
  }
  return result;
}

void sub_215AA5864(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*v2);
    }
  }
  sub_2157C3C78((void **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA5890(uint64_t a1)
{
  *(void *)a1 = &unk_26C6755A8;
  sub_2157C6F18(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  else
  {
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  unint64_t v3 = *(void ***)(a1 + 16);
  BOOL v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0) {
        operator delete(*(v3 - 4));
      }
      v3 -= 4;
    }
    while (v3 != v2);
    BOOL v4 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

__n128 sub_215AA5948(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26C6755A8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    long long v2 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v2;
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 32) = 0;
    *(unsigned char *)(a1 + 56) = 1;
  }
  long long v3 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 104) = 0;
  if (*(unsigned char *)(a2 + 104))
  {
    long long v4 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v4;
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0;
    *(void *)(a2 + 80) = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  *(unsigned char *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  if (*(unsigned char *)(a2 + 136))
  {
    long long v5 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = v5;
    *(void *)(a2 + 120) = 0;
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 112) = 0;
    *(unsigned char *)(a1 + 136) = 1;
  }
  __n128 result = *(__n128 *)(a2 + 144);
  uint64_t v7 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = 0;
  *(void *)(a1 + 160) = v7;
  *(__n128 *)(a1 + 144) = result;
  *(unsigned char *)(a1 + 224) = 0;
  if (*(unsigned char *)(a2 + 224))
  {
    _X2 = 0;
    _X3 = 0;
    __n128 result = *(__n128 *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(__n128 *)(a1 + 176) = result;
    *(void *)(a2 + 184) = 0;
    *(void *)(a2 + 192) = 0;
    *(void *)(a2 + 176) = 0;
    __asm { CASPAL          X2, X3, X2, X3, [X8] }
    *(void *)(a1 + 208) = _X2;
    *(void *)(a1 + 216) = 0;
    *(unsigned char *)(a1 + 224) = 1;
  }
  *(unsigned char *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 264) = 0;
  if (*(unsigned char *)(a2 + 264))
  {
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
    *(void *)(a1 + 256) = 0;
    __n128 result = *(__n128 *)(a2 + 240);
    *(__n128 *)(a1 + 240) = result;
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a2 + 240) = 0;
    *(void *)(a2 + 248) = 0;
    *(void *)(a2 + 256) = 0;
    *(unsigned char *)(a1 + 264) = 1;
  }
  return result;
}

void sub_215AA5ABC(uint64_t a1)
{
  *(void *)a1 = &unk_26C6755A8;
  sub_2157C6F18(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      goto LABEL_11;
    }
  }
  else
  {
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      goto LABEL_11;
    }
  }
  long long v3 = *(void ***)(a1 + 16);
  long long v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0) {
        operator delete(*(v3 - 4));
      }
      v3 -= 4;
    }
    while (v3 != v2);
    long long v4 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
LABEL_11:

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AA5B94(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_215AA5B9C(uint64_t *a1, uint64_t *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6742D0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v6[0] = a1 + 1;
      v6[1] = a1 + 4;
      v5[0] = (unsigned __int8 ***)(result + 8);
      v5[1] = (unsigned __int8 ***)(result + 32);
      return sub_215AA73CC(v6, v5);
    }
  }
  return result;
}

void sub_215AA5C58(uint64_t a1)
{
  long long v2 = (long long *)sub_215AA75C8();
  sub_215AA5D10(a1);
  sub_2157C6224(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",");
}

void sub_215AA5CF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AA5D10(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888B60))
  {
    long long v3 = sub_215AA71B0();
    uint64_t v4 = *((void *)v3 + 1);
    if (*((char *)v3 + 23) >= 0)
    {
      uint64_t v5 = *((unsigned __int8 *)v3 + 23);
    }
    else
    {
      long long v3 = *(long long **)v3;
      uint64_t v5 = v4;
    }
    sub_2157C6A10((char *)v3, v5, "::", 2, 0, (uint64_t)&v7);
    if (*(char *)(v8 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267888B48, *(void **)(v8 - 24), *(void *)(v8 - 16));
    }
    else
    {
      long long v6 = *(_OWORD *)(v8 - 24);
      qword_267888B58 = *(void *)(v8 - 8);
      xmmword_267888B48 = v6;
    }
    sub_2157352DC(&v7);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888B48, &dword_21572C000);
    __cxa_guard_release(&qword_267888B60);
  }
  return sub_215AA78BC(&xmmword_267888B48, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_215AA5E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_215AA5E4C(_Unwind_Exception *a1)
{
}

void sub_215AA5E64(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.net");
  *(_DWORD *)(a1 + 24) = 4;
}

double sub_215AA5E90@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_215B0D594(a1, &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_215AA5EE8(uint64_t a1)
{
  *(void *)a1 = &unk_26C6755A8;
  sub_2157C6F18(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  else
  {
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  long long v3 = *(void ***)(a1 + 16);
  long long v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0) {
        operator delete(*(v3 - 4));
      }
      v3 -= 4;
    }
    while (v3 != v2);
    long long v4 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

void sub_215AA5FA0(uint64_t a1)
{
  *(void *)a1 = &unk_26C6755A8;
  sub_2157C6F18(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      goto LABEL_11;
    }
  }
  else
  {
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      goto LABEL_11;
    }
  }
  long long v3 = *(void ***)(a1 + 16);
  long long v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0) {
        operator delete(*(v3 - 4));
      }
      v3 -= 4;
    }
    while (v3 != v2);
    long long v4 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
LABEL_11:

  JUMPOUT(0x2166C4D20);
}

void sub_215AA6078(uint64_t a1)
{
  long long v2 = sub_215AA6C04();
  sub_215AA6298(v2, (uint64_t)"{", a1 + 8, (uint64_t)",");
}

uint64_t sub_215AA60D4(uint64_t a1)
{
  int v3 = 0;
  v4[0] = a1 + 8;
  v4[1] = a1 + 32;
  sub_215AA64D0((uint64_t)v5, (uint64_t)v2, v4);
  if (v3 == -1) {
    sub_215742D4C();
  }
  v4[0] = (uint64_t)v5;
  uint64_t result = ((uint64_t (*)(uint64_t *, unsigned char *))off_26C674BA8[v3])(v4, v2);
  if (v3 != -1) {
    return ((uint64_t (*)(uint64_t *, unsigned char *))off_26C674B90[v3])(v4, v2);
  }
  return result;
}

void sub_215AA617C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C674B90[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA61B4(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_215AA61E0(uint64_t a1)
{
  *(void *)a1 = &unk_26C6755A8;
  sub_2157C6F18(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  else
  {
    long long v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  int v3 = *(void ***)(a1 + 16);
  long long v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0) {
        operator delete(*(v3 - 4));
      }
      v3 -= 4;
    }
    while (v3 != v2);
    long long v4 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

void sub_215AA6298(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v8 = *((void *)a1 + 2);
  }
  int v9 = 1;
  p_dst = &__dst;
  uint64_t v11 = a2;
  uint64_t v12 = &__dst;
  uint64_t v13 = a2;
  uint64_t v14 = a2;
  sub_2157492F0((uint64_t *)&v12, (uint64_t)&__dst);
  p_dst = (long long *)a3;
  uint64_t v11 = a3 + 24;
  sub_215AA64D0((uint64_t)&p_p_dst, (uint64_t)&__dst, (uint64_t *)&p_dst);
  p_dst = &__dst;
  uint64_t v11 = a4;
  uint64_t v12 = &__dst;
  uint64_t v13 = a4;
  uint64_t v14 = a4;
  if (v9 != -1)
  {
    p_p_dst = &p_dst;
    ((void (*)(long long ***, long long *))off_26C674C98[v9])(&p_p_dst, &__dst);
    sub_2157C55EC();
  }
  sub_215742D4C();
}

void sub_215AA6440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA6458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA646C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA6480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA6494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA64A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA64BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA64D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v13 = "{";
  uint64_t v14 = a2;
  uint64_t v15 = "{";
  char v16 = "{";
  uint64_t v3 = *(unsigned int *)(a2 + 24);
  if (v3 == -1) {
    goto LABEL_10;
  }
  uint64_t v17 = &v12;
  ((void (*)(uint64_t **))off_26C674C98[v3])(&v17);
  sub_215AA663C((uint64_t)&v12, a2, *a3);
  uint64_t v6 = a3[1];
  uint64_t v12 = a2;
  uint64_t v13 = ",";
  uint64_t v14 = a2;
  uint64_t v15 = ",";
  char v16 = ",";
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  if (v7 == -1) {
    goto LABEL_10;
  }
  uint64_t v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_26C674C98[v7])(&v17, a2);
  if (*(unsigned char *)(v6 + 24))
  {
    uint64_t v12 = a2;
    uint64_t v13 = (const char *)v6;
    uint64_t v14 = a2;
    uint64_t v15 = (const char *)v6;
    char v16 = (const char *)v6;
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    if (v8 == -1) {
      goto LABEL_10;
    }
    uint64_t v17 = &v12;
    int v9 = off_26C674C80;
  }
  else
  {
    uint64_t v12 = a2;
    uint64_t v13 = "nullopt";
    uint64_t v14 = a2;
    uint64_t v15 = "nullopt";
    char v16 = "nullopt";
    uint64_t v8 = *(unsigned int *)(a2 + 24);
    if (v8 == -1) {
      goto LABEL_10;
    }
    uint64_t v17 = &v12;
    int v9 = off_26C674CB0;
  }
  ((void (*)(uint64_t **, uint64_t))v9[v8])(&v17, a2);
  uint64_t v12 = a2;
  uint64_t v13 = "}";
  uint64_t v14 = a2;
  uint64_t v15 = "}";
  char v16 = "}";
  uint64_t v10 = *(unsigned int *)(a2 + 24);
  if (v10 == -1) {
LABEL_10:
  }
    sub_215742D4C();
  uint64_t v17 = &v12;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_26C674C98[v10])(&v17, a2);
}

uint64_t sub_215AA663C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) > 31)
  {
    uint64_t v11 = a2;
    uint64_t v12 = "{";
    uint64_t v13 = (char *)a2;
    uint64_t v14 = "{";
    uint64_t v15 = "{";
    uint64_t v5 = *(unsigned int *)(a2 + 24);
    if (v5 != -1)
    {
      char v16 = &v11;
      ((void (*)(uint64_t **, uint64_t))off_26C674C98[v5])(&v16, a2);
      uint64_t v7 = *(const char **)a3;
      uint64_t v11 = a2;
      uint64_t v12 = "{";
      uint64_t v13 = (char *)a2;
      uint64_t v14 = "{";
      uint64_t v15 = "{";
      uint64_t v8 = *(unsigned int *)(a2 + 24);
      if (v8 != -1)
      {
        char v16 = &v11;
        ((void (*)(uint64_t **, uint64_t))off_26C674C98[v8])(&v16, a2);
        LOBYTE(v11) = 1;
        uint64_t v12 = (const char *)a2;
        uint64_t v13 = &v10;
        sub_215AA6890(v7, (uint64_t)&v11);
      }
    }
LABEL_7:
    sub_215742D4C();
  }
  uint64_t v11 = a2;
  uint64_t v12 = "{}";
  uint64_t v13 = (char *)a2;
  uint64_t v14 = "{}";
  uint64_t v15 = "{}";
  uint64_t v4 = *(unsigned int *)(a2 + 24);
  if (v4 == -1) {
    goto LABEL_7;
  }
  char v16 = &v11;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_26C674D88[v4])(&v16, a2);
}

void sub_215AA6890(const char *a1, uint64_t a2)
{
  if (!*(unsigned char *)a2)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = ",";
    uint64_t v9 = v7;
    char v10 = ",";
    uint64_t v11 = ",";
    uint64_t v4 = *(unsigned int *)(v7 + 24);
    if (v4 == -1) {
      goto LABEL_9;
    }
    uint64_t v12 = &v7;
    ((void (*)(uint64_t **))off_26C674C98[v4])(&v12);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = a1;
  uint64_t v9 = v7;
  char v10 = a1;
  uint64_t v11 = a1;
  uint64_t v5 = *(unsigned int *)(v7 + 24);
  if (v5 != -1)
  {
    uint64_t v12 = &v7;
    ((void (*)(uint64_t **))off_26C674C80[v5])(&v12);
    if (*(unsigned char *)a2) {
      goto LABEL_8;
    }
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = ",";
    uint64_t v9 = v7;
    char v10 = ",";
    uint64_t v11 = ",";
    uint64_t v6 = *(unsigned int *)(v7 + 24);
    if (v6 != -1)
    {
      uint64_t v12 = &v7;
      ((void (*)(uint64_t **))off_26C674C98[v6])(&v12);
LABEL_8:
      *(unsigned char *)a2 = 0;
      sub_215AA69A0();
    }
  }
LABEL_9:
  sub_215742D4C();
}

void sub_215AA69A0()
{
}

void sub_215AA6B9C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AA6BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_215AA6C04()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888A40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888A40))
  {
    return &xmmword_267888A28;
  }
  uint64_t v1 = sub_215AA6CEC();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267888A28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267888A38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267888A28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888A28, &dword_21572C000);
  __cxa_guard_release(&qword_267888A40);
  return &xmmword_267888A28;
}

void sub_215AA6CD4(_Unwind_Exception *a1)
{
}

std::string *sub_215AA6CEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888A60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888A60))
  {
    return &stru_267888A48;
  }
  sub_215AA6FA0((uint64_t)__p);
  sub_215AA6DE8(__p, &stru_267888A48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888A48, &dword_21572C000);
  __cxa_guard_release(&qword_267888A60);
  return &stru_267888A48;
}

void sub_215AA6DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888A60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888A60);
  _Unwind_Resume(a1);
}

void sub_215AA6DE8(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_215AA71B0();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    uint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_215AA6F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AA6FA0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888AE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888AE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::UpdateEnabledLoggers>]", qword_267888AC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888AC8, &dword_21572C000);
    __cxa_guard_release(&qword_267888AE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888B00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888B00))
  {
    size_t v3 = sub_215747D98(qword_267888AC8, "<", 0);
    sub_215747C90(qword_267888AC8, 0, v3, qword_267888AE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888AE8, &dword_21572C000);
    __cxa_guard_release(&qword_267888B00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888B20))
  {
    sub_215E19DF4((uint64_t)qword_267888AE8, (uint64_t)&xmmword_267888B08);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888B08, &dword_21572C000);
    __cxa_guard_release(&qword_267888B20);
  }
  if (byte_267888B1F < 0)
  {
    long long v2 = xmmword_267888B08;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267888B08;
    *(void *)(a1 + 16) = unk_267888B18;
  }
}

void sub_215AA7168(_Unwind_Exception *a1)
{
}

void sub_215AA7180(_Unwind_Exception *a1)
{
}

void sub_215AA7198(_Unwind_Exception *a1)
{
}

long long *sub_215AA71B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888A80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888A80))
  {
    return &xmmword_267888A68;
  }
  uint64_t v1 = (char *)sub_215AA7298();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888A68, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888A78 = *((void *)v1 + 2);
    xmmword_267888A68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888A68, &dword_21572C000);
  __cxa_guard_release(&qword_267888A80);
  return &xmmword_267888A68;
}

void sub_215AA7280(_Unwind_Exception *a1)
{
}

void *sub_215AA7298()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888AA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledLoggers]", qword_267888A88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888A88, &dword_21572C000);
    __cxa_guard_release(&qword_267888AA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888AC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888AC0))
  {
    return &unk_267888AA8;
  }
  sub_215E19DF4((uint64_t)qword_267888A88, (uint64_t)&unk_267888AA8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888AA8, &dword_21572C000);
  __cxa_guard_release(&qword_267888AC0);
  return &unk_267888AA8;
}

void sub_215AA739C(_Unwind_Exception *a1)
{
}

void sub_215AA73B4(_Unwind_Exception *a1)
{
}

uint64_t sub_215AA73CC(uint64_t **a1, unsigned __int8 ****a2)
{
  uint64_t v3 = **a1;
  uint64_t v2 = (*a1)[1];
  uint64_t v4 = **a2;
  if (v2 - v3 != (char *)(*a2)[1] - (char *)v4) {
    return 0;
  }
  for (; v3 != v2; v4 += 4)
  {
    uint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    if ((v7 & 0x80u) == 0) {
      int64x2_t v8 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
    }
    else {
      int64x2_t v8 = *(unsigned __int8 **)(v3 + 8);
    }
    int8x16_t v9 = (unsigned __int8 *)*((unsigned __int8 *)v4 + 23);
    int v10 = (char)v9;
    if ((char)v9 < 0) {
      int8x16_t v9 = v4[1];
    }
    if (v8 != v9) {
      return 0;
    }
    if (v10 >= 0) {
      uint64_t v11 = (unsigned __int8 *)v4;
    }
    else {
      uint64_t v11 = *v4;
    }
    if ((v7 & 0x80) != 0)
    {
      BOOL v14 = memcmp(*(const void **)v3, v11, *(void *)(v3 + 8)) == 0;
      uint64_t result = 0;
      if (!v14) {
        return result;
      }
    }
    else
    {
      if (*(unsigned char *)(v3 + 23))
      {
        uint64_t v12 = 0;
        while (*(unsigned __int8 *)(v3 + v12) == v11[v12])
        {
          if (v7 == ++v12) {
            goto LABEL_17;
          }
        }
        return 0;
      }
LABEL_17:
      uint64_t result = 0;
    }
    if (*(_DWORD *)(v3 + 24) != *((_DWORD *)v4 + 6)) {
      return result;
    }
    v3 += 32;
  }
  uint64_t v15 = (unsigned __int8 *)a1[1];
  uint64_t v16 = a2[1];
  if (v15[24]) {
    BOOL v17 = *((unsigned char *)v16 + 24) == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17) {
    return (v15[24] != 0) == (*((unsigned char *)v16 + 24) != 0);
  }
  uint64_t v18 = v15[23];
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = (unsigned __int8 *)v15[23];
  }
  else {
    uint64_t v19 = (unsigned __int8 *)*((void *)v15 + 1);
  }
  uint64_t v20 = (unsigned __int8 *)*((unsigned __int8 *)v16 + 23);
  int v21 = (char)v20;
  if ((char)v20 < 0) {
    uint64_t v20 = (unsigned __int8 *)v16[1];
  }
  if (v19 != v20) {
    return 0;
  }
  if (v21 >= 0) {
    int v22 = a2[1];
  }
  else {
    int v22 = (unsigned __int8 ***)*v16;
  }
  if ((v18 & 0x80) != 0) {
    return memcmp(*(const void **)v15, v22, *((void *)v15 + 1)) == 0;
  }
  if (!v15[23]) {
    return 1;
  }
  uint64_t v23 = v18 - 1;
  do
  {
    int v25 = *v15++;
    int v24 = v25;
    int v27 = *(unsigned __int8 *)v22;
    int v22 = (unsigned __int8 ***)((char *)v22 + 1);
    int v26 = v27;
    BOOL v29 = v23-- != 0;
    uint64_t result = v24 == v26;
  }
  while (v24 == v26 && v29);
  return result;
}

std::string *sub_215AA75C8()
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888B40))
  {
    sub_215732BF4(v10, "viz::PackageData");
    uint64_t v1 = sub_215AA71B0();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v13 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    uint64_t v3 = sub_21598B2CC();
    if (*((char *)v3 + 23) < 0)
    {
      sub_215738B0C(&v14, *(void **)v3, *((void *)v3 + 1));
    }
    else
    {
      long long v4 = *v3;
      uint64_t v15 = *((void *)v3 + 2);
      long long v14 = v4;
    }
    long long v5 = sub_2157EB0D8();
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v16, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
      std::string::size_type v17 = v5->__r_.__value_.__r.__words[2];
      long long v16 = v6;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    uint64_t v19 = 0x400000000000000;
    sub_21573A150(v9, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v10, (uint64_t *)v9, &stru_267888B28, v7, v8);
    sub_2157352DC(v9);
    if (SHIBYTE(v19) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v17) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v15) & 0x80000000) == 0) {
          goto LABEL_16;
        }
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete((void *)v16);
    if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v13) & 0x80000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_22;
    }
LABEL_21:
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v11 & 0x80000000) == 0)
      {
LABEL_18:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888B28, &dword_21572C000);
        __cxa_guard_release(&qword_267888B40);
        return &stru_267888B28;
      }
LABEL_23:
      operator delete(v10[0]);
      goto LABEL_18;
    }
LABEL_22:
    operator delete(__dst[0]);
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  return &stru_267888B28;
}

void sub_215AA77E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
    {
LABEL_10:
      if (a18 < 0) {
        operator delete(a13);
      }
      __cxa_guard_abort(&qword_267888B40);
      _Unwind_Resume(a1);
    }
LABEL_9:
    operator delete(a20);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0) {
    goto LABEL_10;
  }
  goto LABEL_9;
}

void sub_215AA7894()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x215AA7870);
    }
  }
}

uint64_t sub_215AA78BC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v10 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&v8, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long v8 = *a1;
    uint64_t v9 = *((void *)a1 + 2);
  }
  int v10 = 1;
  char v11 = &v8;
  uint64_t v12 = a2;
  uint64_t v13 = &v8;
  uint64_t v14 = a2;
  uint64_t v15 = a2;
  sub_2157492F0((uint64_t *)&v13, (uint64_t)&v8);
  char v11 = (long long *)a3;
  uint64_t v12 = a3 + 24;
  sub_215AA64D0((uint64_t)&v16, (uint64_t)&v8, (uint64_t *)&v11);
  char v11 = &v8;
  uint64_t v12 = a4;
  uint64_t v13 = &v8;
  uint64_t v14 = a4;
  uint64_t v15 = a4;
  if (v10 == -1) {
    sub_215742D4C();
  }
  long long v16 = &v11;
  ((void (*)(long long ***, long long *))off_26C674C98[v10])(&v16, &v8);
  if (v10 == -1) {
    sub_215742D4C();
  }
  char v11 = (long long *)&v16;
  uint64_t result = ((uint64_t (*)(long long **, long long *))off_26C674BA8[v10])(&v11, &v8);
  if (v10 != -1) {
    return ((uint64_t (*)(long long **, long long *))off_26C674B90[v10])(&v11, &v8);
  }
  return result;
}

void sub_215AA7A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AA7A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AA7A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AA7A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AA7A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

char *sub_215AA7A70(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v5 = result;
    if (a4 >> 59) {
      sub_215738AC0();
    }
    uint64_t result = (char *)operator new(32 * a4);
    long long v8 = result;
    void *v5 = result;
    v5[1] = result;
    unsigned char v5[2] = &result[32 * a4];
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t result = &v8[v9];
        uint64_t v10 = a2 + v9;
        if (*(char *)(a2 + v9 + 23) < 0)
        {
          uint64_t result = (char *)sub_215738B0C(result, *(void **)v10, *(void *)(v10 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t result = *(_OWORD *)v10;
          *((void *)result + 2) = *(void *)(v10 + 16);
        }
        *(_DWORD *)&v8[v9 + 24] = *(_DWORD *)(a2 + v9 + 24);
        v9 += 32;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_215AA7B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_215AA7B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 32)
  {
    if (*(char *)(v10 + v11 - 9) < 0) {
      operator delete(*(void **)(v10 + v11 - 32));
    }
  }
  *(void *)(v9 + 8) = v10;
  sub_2157C3F98(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA7BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C6755A8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(void *)(a1 + 24) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 48) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 32) = v4;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a1 + 56) = 1;
  }
  sub_2157C4FB8(a1 + 64, a3);
  *(void *)a1 = &unk_26C675558;
  return a1;
}

void sub_215AA7C70(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 56) && *(char *)(v1 + 55) < 0) {
    operator delete(*v3);
  }
  long long v5 = (void **)*v2;
  if (*v2)
  {
    long long v6 = *(void ***)(v1 + 16);
    int64x2_t v7 = *v2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0) {
          operator delete(*(v6 - 4));
        }
        v6 -= 4;
      }
      while (v6 != v5);
      int64x2_t v7 = *v2;
    }
    *(void *)(v1 + 16) = v5;
    operator delete(v7);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AA7CDC(uint64_t a1, uint64_t a2)
{
  v37[5] = *MEMORY[0x263EF8340];
  uint64_t v4 = a1 + 16;
  int v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_21598FB5C(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_2159CA9D4(v4, (uint64_t)v32);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    sub_215995568(v4, (uint64_t)v32);
  }
  uint64_t v6 = a2 + 16;
  int v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_21598FB5C(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_2159CA9D4(v6, (uint64_t)v26);
  }
  else
  {
    if (v7) {
      sub_215742D4C();
    }
    sub_215995568(v6, (uint64_t)v26);
  }
  uint64_t v19 = (uint64_t *)v32;
  uint64_t v20 = &v33;
  int v21 = &v34;
  int v22 = &v35;
  uint64_t v23 = &v36;
  int v24 = (unsigned __int8 **)v37;
  uint64_t v13 = (unsigned __int8 ***)v26;
  uint64_t v14 = &v27;
  uint64_t v15 = &v28;
  long long v16 = &v29;
  std::string::size_type v17 = &v30;
  uint64_t v18 = (unsigned __int8 **)&v31;
  if (sub_215AF0A90((uint64_t)&v25, &v19, &v13))
  {
    if (*((unsigned char *)v24 + 24) && *((unsigned char *)v18 + 24))
    {
      long long v8 = *v24;
      uint64_t v9 = v24[1];
      uint64_t v10 = *v18;
      if (v9 - *v24 == v18[1] - *v18)
      {
        if (v8 != v9)
        {
          while (sub_215AEF77C(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9) {
              goto LABEL_23;
            }
          }
          goto LABEL_22;
        }
LABEL_23:
        uint64_t v19 = (uint64_t *)(a1 + 200);
        uint64_t v20 = (uint64_t *)(a1 + 224);
        uint64_t v13 = (unsigned __int8 ***)(a2 + 200);
        uint64_t v14 = (uint64_t *)(a2 + 224);
        uint64_t v11 = sub_215AA73CC(&v19, &v13);
        goto LABEL_24;
      }
    }
    else if ((*((unsigned char *)v24 + 24) != 0) == (*((unsigned char *)v18 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  uint64_t v11 = 0;
LABEL_24:
  sub_2157C6F18((uint64_t)v26);
  sub_2157C6F18((uint64_t)v32);
  return v11;
}

void sub_215AA7EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215AA7F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215AA7F18(void *a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B18, 0);
  if (v4) {
    sub_215AA8154((uint64_t)&v11, (uint64_t)v4);
  }
  uint64_t v11 = a2;
  int v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B60, 0);
  if (v5)
  {
    sub_215AA8F28(&v11, (uint64_t)v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675BE8, 0);
    if (v6) {
      sub_215AA946C((uint64_t)&v11, (uint64_t)v6);
    }
    uint64_t v11 = a2;
    int v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675C30, 0);
    if (v7)
    {
      sub_215AA9C50(&v11, (uint64_t)v7);
    }
    else
    {
      uint64_t v11 = a2;
      long long v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C6833D8, 0);
      if (v8)
      {
        sub_215AAA05C(&v11, (uint64_t)v8);
      }
      else
      {
        uint64_t v9 = a2 + 16;
        int v10 = *(_DWORD *)(a2 + 192);
        if (v10 == 2)
        {
          uint64_t v11 = a1[1];
          sub_2159D04F0((int *)&v11, (uint64_t)a1, v9);
        }
        else if (v10 == 1)
        {
          uint64_t v11 = a1[1];
          sub_2159CFA30((int *)&v11, a1, v9);
        }
        else
        {
          if (v10) {
            sub_215742D4C();
          }
          uint64_t v11 = a1[1];
          sub_2159AAEAC((int *)&v11, a1, v9);
        }
        uint64_t v11 = a1[1];
        sub_215AAA3FC((int *)&v11, (uint64_t)a1, a2 + 200);
      }
    }
  }
}

void sub_215AA8154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC088(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEE064(a2, &v11);
        sub_2159A439C(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC088(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEE064(a2, &v11);
    sub_2159CAD4C(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC088(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEE064(a2, &v11);
  sub_2159CB6C8(a2, v3);
}

void sub_215AA8458(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AA8610(a1, (uint64_t)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    int v4 = v7;
    int v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      int v5 = v6;
    }
    int v7 = v3;
    operator delete(v5);
  }
}

void sub_215AA84FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA8510(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_215AA7A70((char *)a1, *(void *)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5);
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    if (*(char *)(a2 + 47) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 24), *(void **)(a2 + 24), *(void *)(a2 + 32));
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v4;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_215AA85A4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48) && *(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  long long v4 = *(void ***)v1;
  if (*(void *)v1)
  {
    int v5 = *(void ***)(v1 + 8);
    int v6 = *(void ***)v1;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0) {
          operator delete(*(v5 - 4));
        }
        v5 -= 4;
      }
      while (v5 != v4);
      int v6 = *(void ***)v1;
    }
    *(void *)(v1 + 8) = v4;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA8610(uint64_t a1, uint64_t a2)
{
  sub_215AA8804((long long **)a2, (uint64_t)&__p);
  *(void *)&long long v14 = "logger_enable_state_changes";
  *((void *)&v14 + 1) = 27;
  p_p = &__p;
  sub_215AA8CF4(a1, (uint64_t)&v14);
  sub_215AA895C((long long **)&__p, (uint64_t)&v14);
  long long v4 = *(long long **)a2;
  if (*(void *)a2)
  {
    int v5 = *(long long **)(a2 + 8);
    int v6 = *(long long **)a2;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0) {
          operator delete(*((void **)v5 - 4));
        }
        v5 -= 2;
      }
      while (v5 != v4);
      int v6 = *(long long **)a2;
    }
    *(void *)(a2 + 8) = v4;
    operator delete(v6);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v14;
  int v7 = (void **)__p;
  *(void *)(a2 + 16) = p_p;
  if (v7)
  {
    int v8 = v17;
    char v9 = v7;
    if (v17 != v7)
    {
      do
      {
        if (*((char *)v8 - 9) < 0) {
          operator delete(*(v8 - 4));
        }
        v8 -= 4;
      }
      while (v8 != v7);
      char v9 = __p;
    }
    std::string::size_type v17 = v7;
    operator delete(v9);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v10 = *(unsigned __int8 *)(a1 + 88), *(void *)(a1 + 72) = "target_context", *(void *)(a1 + 80) = 14, v10))
  {
    if (*(unsigned char *)(a2 + 48))
    {
LABEL_20:
      sub_215DEE538(a1, a2 + 24);
      return;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    if (*(unsigned char *)(a2 + 48)) {
      goto LABEL_20;
    }
  }
  LOBYTE(__p) = 0;
  std::string::size_type v17 = 0;
  int v11 = (unsigned __int8 *)sub_215DEBCD0(a1);
  int v12 = *v11;
  *int v11 = __p;
  LOBYTE(__p) = v12;
  uint64_t v13 = (void **)*((void *)v11 + 1);
  *((void *)v11 + 1) = v17;
  std::string::size_type v17 = v13;
  sub_215CEB204(&v17, v12);
}

void sub_215AA87C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  sub_215CEB204(v12, a12);
  _Unwind_Resume(a1);
}

void sub_215AA87DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA87F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

double sub_215AA8804@<D0>(long long **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = ((char *)a1[1] - (char *)*a1) >> 5;
  unint64_t v13 = 0;
  long long v12 = 0uLL;
  sub_215AA8AB4((uint64_t)&v12, v4);
  int v6 = *a1;
  for (uint64_t i = a1[1]; v6 != i; v6 += 2)
  {
    while (1)
    {
      while (1)
      {
        int v8 = *((_DWORD *)v6 + 6);
        if (*((char *)v6 + 23) < 0)
        {
          sub_215738B0C(__p, *(void **)v6, *((void *)v6 + 1));
        }
        else
        {
          long long v9 = *v6;
          uint64_t v15 = *((void *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        int v16 = v8;
        uint64_t v10 = *((void *)&v12 + 1);
        if (*((void *)&v12 + 1) >= v13) {
          break;
        }
        long long v7 = *(_OWORD *)__p;
        *(void *)(*((void *)&v12 + 1) + 16) = v15;
        *(_OWORD *)uint64_t v10 = v7;
        __p[1] = 0;
        uint64_t v15 = 0;
        __p[0] = 0;
        *(_DWORD *)(v10 + 24) = v16;
        *((void *)&v12 + 1) = v10 + 32;
        v6 += 2;
        if (v6 == i) {
          goto LABEL_12;
        }
      }
      *((void *)&v12 + 1) = sub_215AA8BB8((void **)&v12, (uint64_t)__p);
      if (SHIBYTE(v15) < 0) {
        break;
      }
      v6 += 2;
      if (v6 == i) {
        goto LABEL_12;
      }
    }
    operator delete(__p[0]);
  }
LABEL_12:
  double result = *(double *)&v12;
  *(_OWORD *)a2 = v12;
  *(void *)(a2 + 16) = v13;
  return result;
}

void sub_215AA8920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_215AA8938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_2157C3C78((void **)&a9);
  _Unwind_Resume(a1);
}

double sub_215AA895C@<D0>(long long **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = ((char *)a1[1] - (char *)*a1) >> 5;
  unint64_t v13 = 0;
  long long v12 = 0uLL;
  sub_215AA8AB4((uint64_t)&v12, v4);
  int v6 = *a1;
  for (uint64_t i = a1[1]; v6 != i; v6 += 2)
  {
    while (1)
    {
      while (1)
      {
        int v8 = *((_DWORD *)v6 + 6);
        if (*((char *)v6 + 23) < 0)
        {
          sub_215738B0C(__p, *(void **)v6, *((void *)v6 + 1));
        }
        else
        {
          long long v9 = *v6;
          uint64_t v15 = *((void *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        int v16 = v8;
        uint64_t v10 = *((void *)&v12 + 1);
        if (*((void *)&v12 + 1) >= v13) {
          break;
        }
        long long v7 = *(_OWORD *)__p;
        *(void *)(*((void *)&v12 + 1) + 16) = v15;
        *(_OWORD *)uint64_t v10 = v7;
        __p[1] = 0;
        uint64_t v15 = 0;
        __p[0] = 0;
        *(_DWORD *)(v10 + 24) = v16;
        *((void *)&v12 + 1) = v10 + 32;
        v6 += 2;
        if (v6 == i) {
          goto LABEL_12;
        }
      }
      *((void *)&v12 + 1) = sub_215AA8BB8((void **)&v12, (uint64_t)__p);
      if (SHIBYTE(v15) < 0) {
        break;
      }
      v6 += 2;
      if (v6 == i) {
        goto LABEL_12;
      }
    }
    operator delete(__p[0]);
  }
LABEL_12:
  double result = *(double *)&v12;
  *(_OWORD *)a2 = v12;
  *(void *)(a2 + 16) = v13;
  return result;
}

void sub_215AA8A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_215AA8A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_2157C3C78((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_215AA8AB4(uint64_t a1, unint64_t a2)
{
  long long v2 = *(void ***)a1;
  if (a2 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5)
  {
    if (a2 >> 59) {
      sub_215738AC0();
    }
    unint64_t v4 = *(void ***)(a1 + 8);
    uint64_t v5 = 32 * a2;
    int v6 = (char *)operator new(32 * a2);
    long long v7 = &v6[v5];
    int v8 = &v6[(char *)v4 - (char *)v2];
    if (v4 == v2)
    {
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    else
    {
      long long v9 = &v6[(char *)v4 - (char *)v2];
      do
      {
        long long v10 = *((_OWORD *)v4 - 2);
        *((void *)v9 - 2) = *(v4 - 2);
        *((_OWORD *)v9 - 2) = v10;
        *(v4 - 3) = 0;
        *(v4 - 2) = 0;
        *(v4 - 4) = 0;
        *((_DWORD *)v9 - 2) = *((_DWORD *)v4 - 2);
        v9 -= 32;
        v4 -= 4;
      }
      while (v4 != v2);
      long long v2 = *(void ***)a1;
      int v11 = *(void ***)(a1 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        if (*((char *)v11 - 9) < 0) {
          operator delete(*(v11 - 4));
        }
        v11 -= 4;
      }
    }
    if (v2)
    {
      operator delete(v2);
    }
  }
}

char *sub_215AA8BB8(void **a1, uint64_t a2)
{
  uint64_t v3 = ((unsigned char *)a1[1] - (unsigned char *)*a1) >> 5;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59) {
    sub_215738AC0();
  }
  uint64_t v5 = (unsigned char *)a1[2] - (unsigned char *)*a1;
  if (v5 >> 4 > v4) {
    unint64_t v4 = v5 >> 4;
  }
  BOOL v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFE0;
  unint64_t v7 = 0x7FFFFFFFFFFFFFFLL;
  if (!v6) {
    unint64_t v7 = v4;
  }
  if (v7 >> 59) {
    sub_215738AD8();
  }
  uint64_t v9 = 32 * v7;
  long long v10 = (char *)operator new(32 * v7);
  int v11 = &v10[32 * v3];
  long long v12 = &v10[v9];
  *(_OWORD *)int v11 = *(_OWORD *)a2;
  *((void *)v11 + 2) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a2 + 24);
  unint64_t v13 = v11 + 32;
  long long v14 = (void **)*a1;
  uint64_t v15 = (void **)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
  }
  else
  {
    do
    {
      long long v16 = *((_OWORD *)v15 - 2);
      *((void *)v11 - 2) = *(v15 - 2);
      *((_OWORD *)v11 - 2) = v16;
      *(v15 - 3) = 0;
      *(v15 - 2) = 0;
      *(v15 - 4) = 0;
      *((_DWORD *)v11 - 2) = *((_DWORD *)v15 - 2);
      v11 -= 32;
      v15 -= 4;
    }
    while (v15 != v14);
    uint64_t v15 = (void **)*a1;
    std::string::size_type v17 = (void **)a1[1];
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    while (v17 != v15)
    {
      if (*((char *)v17 - 9) < 0) {
        operator delete(*(v17 - 4));
      }
      v17 -= 4;
    }
  }
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

uint64_t sub_215AA8CF4(uint64_t a1, uint64_t a2)
{
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    unint64_t v4 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEC088(a1);
    uint64_t v6 = *v4;
    if (*v4 != v4[1]) {
      goto LABEL_4;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    unint64_t v7 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEC088(a1);
    uint64_t v6 = *v7;
    if (*v7 != v7[1])
    {
LABEL_4:
      sub_215DEC088(a1);
      sub_215DEE538(a1, v6);
      int v10 = *(_DWORD *)(v6 + 24);
      int v11 = &v10;
      sub_215AA8E1C();
    }
  }
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(unsigned __int8 *)(a1 + 88);
  *(void *)(a1 + 40) = *(void *)(v8 - 8);
  *(void *)(a1 + 56) = v8 - 8;
  if (v9) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return result;
}

void sub_215AA8E1C()
{
  int v0 = 0;
  sub_215AA69A0();
}

void sub_215AA8EE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA8F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA8F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA8F28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v7 + 40))
    {
      uint64_t v20 = (uint64_t *)(v7 + 16);
      sub_215E05FEC(&v20, 4u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v7 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC838(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v8 + 40))
    {
      uint64_t v20 = (uint64_t *)(v8 + 16);
      sub_215E05FEC(&v20, 5u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v8 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC718(a2, v4, 5u);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    uint64_t v6 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v6 + 40))
    {
      uint64_t v20 = (uint64_t *)(v6 + 16);
      sub_215E05FEC(&v20, 6u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v6 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159A6DFC(a2, v4, 6u);
  }
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(*(void *)(v9 + 88) - 8);
  sub_215E001AC((uint64_t *)(v9 + 48), *(void *)(v9 + 16) - v10 - 9);
  size_t v11 = *(void *)(v9 + 48);
  if (v11) {
    memmove((void *)(*(void *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  }
  *(void *)(v9 + 48) = 0;
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = *(void *)(v9 + 88) - 8;
  *(void *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(unsigned char *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(unsigned char *)(v9 + 40) = 0;
    }
  }
  uint64_t v14 = *(void *)(a2 + 24);
  if (*(unsigned char *)(v14 + 40))
  {
    uint64_t v20 = (uint64_t *)(v14 + 16);
    sub_215E05FEC(&v20, 1u);
  }
  else
  {
    sub_215E0626C((uint64_t)&v20, v14 + 8);
  }
  sub_215E0076C(*(void *)(a2 + 24));
  sub_215AA91AC(a2, v3 + 200);
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(*(void *)(v15 + 88) - 8);
  sub_215E001AC((uint64_t *)(v15 + 48), *(void *)(v15 + 16) - v16 - 9);
  size_t v17 = *(void *)(v15 + 48);
  if (v17) {
    memmove((void *)(*(void *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  }
  *(void *)(v15 + 48) = 0;
  uint64_t v18 = *(void *)(v15 + 80);
  uint64_t v19 = *(void *)(v15 + 88) - 8;
  *(void *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(unsigned char *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(unsigned char *)(v15 + 40) = 0;
    }
  }
}

void sub_215AA91AC(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AA9264(a1, (uint64_t)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    uint64_t v4 = v7;
    int v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      int v5 = v6;
    }
    uint64_t v7 = v3;
    operator delete(v5);
  }
}

void sub_215AA9250(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_215AA9264(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v5 + 40))
  {
    sub_215E06D00();
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8) - *(void *)a2;
    if (!v7) {
      goto LABEL_12;
    }
    goto LABEL_5;
  }
  uint64_t v18 = (uint64_t *)(v5 + 16);
  sub_215E069EC(&v18, v4);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8) - *(void *)a2;
  if (v7)
  {
LABEL_5:
    uint64_t v8 = 32 * (v7 >> 5);
    while (1)
    {
      uint64_t v9 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v9 + 40))
      {
        uint64_t v18 = (uint64_t *)(v9 + 16);
        sub_215E07110((uint64_t)&v17, &v18, (const void **)v6);
        unsigned int v10 = *(_DWORD *)(v6 + 24);
        uint64_t v11 = *(void *)(a1 + 24);
        if (!*(unsigned char *)(v11 + 40)) {
          goto LABEL_11;
        }
LABEL_6:
        uint64_t v18 = (uint64_t *)(v11 + 16);
        sub_215E05AC4(&v18, v10);
        v6 += 32;
        v8 -= 32;
        if (!v8) {
          break;
        }
      }
      else
      {
        sub_215E0752C((uint64_t)&v18, v9 + 8, v6);
        unsigned int v10 = *(_DWORD *)(v6 + 24);
        uint64_t v11 = *(void *)(a1 + 24);
        if (*(unsigned char *)(v11 + 40)) {
          goto LABEL_6;
        }
LABEL_11:
        sub_215E05EEC();
        v6 += 32;
        v8 -= 32;
        if (!v8) {
          break;
        }
      }
    }
  }
LABEL_12:
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v12 = (const void **)(a2 + 24);
    uint64_t v13 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v13 + 40))
    {
      uint64_t v18 = (uint64_t *)(v13 + 16);
      sub_215E053CC(&v18, 1);
      uint64_t v14 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v14 + 40))
      {
LABEL_15:
        uint64_t v18 = (uint64_t *)(v14 + 16);
        return (char *)sub_215E07110((uint64_t)&v17, &v18, v12);
      }
    }
    else
    {
      LOBYTE(v18) = 1;
      std::ostream::write();
      uint64_t v14 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v14 + 40)) {
        goto LABEL_15;
      }
    }
    return (char *)sub_215E0752C((uint64_t)&v18, v14 + 8, (uint64_t)v12);
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v16 + 40))
    {
      uint64_t v18 = (uint64_t *)(v16 + 16);
      return sub_215E053CC(&v18, 0);
    }
    else
    {
      LOBYTE(v18) = 0;
      return (char *)std::ostream::write();
    }
  }
}

void sub_215AA946C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEB804(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC344(a2, &v11);
        sub_2159A7F64(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEB804(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC344(a2, &v11);
    sub_2159CD210(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEB804(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC344(a2, &v11);
  sub_2159CD95C(a2, v3);
}

void sub_215AA9770(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AA9828(a1, (uint64_t)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    int v4 = v7;
    int v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      int v5 = v6;
    }
    int v7 = v3;
    operator delete(v5);
  }
}

void sub_215AA9814(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA9828(uint64_t a1, uint64_t a2)
{
  sub_215AA8804((long long **)a2, (uint64_t)&__p);
  *(void *)&long long v14 = "logger_enable_state_changes";
  *((void *)&v14 + 1) = 27;
  p_p = &__p;
  sub_215AA9A1C(a1, (uint64_t)&v14);
  sub_215AA895C((long long **)&__p, (uint64_t)&v14);
  int v4 = *(long long **)a2;
  if (*(void *)a2)
  {
    int v5 = *(long long **)(a2 + 8);
    int v6 = *(long long **)a2;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0) {
          operator delete(*((void **)v5 - 4));
        }
        v5 -= 2;
      }
      while (v5 != v4);
      int v6 = *(long long **)a2;
    }
    *(void *)(a2 + 8) = v4;
    operator delete(v6);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v14;
  int v7 = __p;
  *(void *)(a2 + 16) = p_p;
  if (v7)
  {
    uint64_t v8 = (uint64_t)v17;
    char v9 = v7;
    if (v17 != v7)
    {
      do
      {
        if (*(char *)(v8 - 9) < 0) {
          operator delete(*(void **)(v8 - 32));
        }
        v8 -= 32;
      }
      while ((void *)v8 != v7);
      char v9 = __p;
    }
    char v17 = v7;
    operator delete(v9);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v10 = *(unsigned __int8 *)(a1 + 88), *(void *)(a1 + 72) = "target_context", *(void *)(a1 + 80) = 14, v10))
  {
    if (*(unsigned char *)(a2 + 48))
    {
LABEL_20:
      sub_215DEC818(a1, a2 + 24);
      return;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    if (*(unsigned char *)(a2 + 48)) {
      goto LABEL_20;
    }
  }
  LOBYTE(__p) = 0;
  char v17 = 0;
  int v11 = (unsigned __int8 *)sub_215DEB350(a1);
  int v12 = *v11;
  *int v11 = __p;
  LOBYTE(__p) = v12;
  uint64_t v13 = *((void *)v11 + 1);
  *((void *)v11 + 1) = v17;
  char v17 = (void *)v13;
  sub_215CE9D14((uint64_t *)&v17, v12);
}

void sub_215AA99DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  sub_215CE9D14(v12, a12);
  _Unwind_Resume(a1);
}

void sub_215AA99F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AA9A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AA9A1C(uint64_t a1, uint64_t a2)
{
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (int v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    int v4 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEB804(a1);
    uint64_t v6 = *v4;
    if (*v4 != v4[1]) {
      goto LABEL_4;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 88) = 1;
    int v7 = *(uint64_t **)(a2 + 16);
    uint64_t result = sub_215DEB804(a1);
    uint64_t v6 = *v7;
    if (*v7 != v7[1])
    {
LABEL_4:
      sub_215DEB804(a1);
      sub_215DEC818(a1, v6);
      int v10 = *(_DWORD *)(v6 + 24);
      int v11 = &v10;
      sub_215AA9B44();
    }
  }
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(unsigned __int8 *)(a1 + 88);
  *(void *)(a1 + 40) = *(void *)(v8 - 8);
  *(void *)(a1 + 56) = v8 - 8;
  if (v9) {
    *(unsigned char *)(a1 + 88) = 0;
  }
  return result;
}

void sub_215AA9B44()
{
  int v0 = 0;
  sub_215AA69A0();
}

void sub_215AA9C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AA9C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA9C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_215AA9C50(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(void *)(a2 + 40))
    {
      uint64_t v8 = *(void **)(a2 + 24);
      char v20 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CED28(a2, v4, 4u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v5 != 1)
    {
      if (v5) {
        sub_215742D4C();
      }
      if (*(void *)(a2 + 40))
      {
        uint64_t v6 = *(void **)(a2 + 24);
        char v18 = *(unsigned char *)(a2 + 32);
        sub_215731D94(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(void *)(a2 + 40);
      sub_2159A95B4(a2, v4, 6u);
      char v7 = *(unsigned char *)(a2 + 34);
      if (!*(void *)(a2 + 40)) {
        goto LABEL_16;
      }
LABEL_15:
      int v10 = *(void **)(a2 + 24);
      char v21 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(void *)(a2 + 40))
    {
      int v9 = *(void **)(a2 + 24);
      char v19 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CE77C(a2, v4, 5u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
LABEL_16:
  int v11 = *(void **)(a2 + 24);
  char v22 = v7;
  sub_215731D94(v11, (uint64_t)&v22, 1);
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    uint64_t v13 = *(void **)(a2 + 24);
    char v23 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a2 + 40);
  sub_215AA9E6C(a2, v3 + 200);
  char v14 = *(unsigned char *)(a2 + 34);
  if (*(void *)(a2 + 40))
  {
    uint64_t v15 = *(void **)(a2 + 24);
    char v24 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v15, (uint64_t)&v24, 1);
  }
  uint64_t v16 = *(void **)(a2 + 24);
  char v25 = v14;
  uint64_t result = sub_215731D94(v16, (uint64_t)&v25, 1);
  ++*(void *)(a2 + 40);
  return result;
}

void sub_215AA9E6C(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AA9F24(a1, (uint64_t)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    uint64_t v4 = v7;
    int v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      int v5 = v6;
    }
    char v7 = v3;
    operator delete(v5);
  }
}

void sub_215AA9F10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AA9F24(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40))
  {
    uint64_t v4 = *(void **)(a1 + 24);
    char v10 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v4, (uint64_t)&v10, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 != *(void *)a2)
  {
    do
    {
      sub_215DF933C(a1, v5);
      if (*(void *)(a1 + 40))
      {
        char v7 = *(void **)(a1 + 24);
        char v11 = *(unsigned char *)(a1 + 32);
        sub_215731D94(v7, (uint64_t)&v11, 1);
      }
      std::ostream::operator<<();
      ++*(void *)(a1 + 40);
      v5 += 32;
    }
    while (v5 != v6);
  }
  if (*(unsigned char *)(a2 + 48))
  {
    unsigned __int8 v9 = 1;
    sub_215DF927C(a1, &v9);
    sub_215DF933C(a1, a2 + 24);
  }
  else
  {
    unsigned __int8 v8 = 0;
    sub_215DF927C(a1, &v8);
  }
}

void sub_215AAA05C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    int __src = 4;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v7 = __src;
    sub_215D02034((void *)a2);
    sub_2159CF4E8(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    int __src = 5;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v8 = __src;
    sub_215D02034((void *)a2);
    sub_2159CF3C8(a2, v4, v8);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    int __src = 6;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    unsigned int v6 = __src;
    sub_215D02034((void *)a2);
    sub_2159AA330(a2, v4, v6);
  }
  uint64_t v9 = *(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24);
  *(void *)(v9 + 10) = *(void *)(a2 + 32) - v9 - 18;
  *(void *)(a2 + 56) -= 8;
  int __src = 1;
  sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_215D02034((void *)a2);
  sub_215AAA218(a2, v3 + 200);
  uint64_t v10 = *(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24);
  *(void *)(v10 + 10) = *(void *)(a2 + 32) - v10 - 18;
  *(void *)(a2 + 56) -= 8;
}

void sub_215AAA218(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AAA2D0(a1, (char *)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    uint64_t v4 = v7;
    int v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      int v5 = v6;
    }
    unsigned int v7 = v3;
    operator delete(v5);
  }
}

void sub_215AAA2BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_215AAA2D0(uint64_t a1, char *a2)
{
  uint64_t v8 = (uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 5;
  uint64_t v4 = a1 + 24;
  sub_215D04A50(a1 + 24, *(char **)(a1 + 32), (char *)&v8, (char *)&__src, 8);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  if (v6 != *(void *)a2)
  {
    do
    {
      sub_215D023C8(a1, (char *)v5);
      int __src = *(_DWORD *)(v5 + 24);
      sub_215D04A50(v4, *(char **)(a1 + 32), (char *)&__src, v10, 4);
      v5 += 32;
    }
    while (v5 != v6);
  }
  if (a2[48])
  {
    char v12 = 1;
    sub_215D04A50(v4, *(char **)(a1 + 32), &v12, (char *)&v13, 1);
    return sub_215D023C8(a1, a2 + 24);
  }
  else
  {
    char v11 = 0;
    return sub_215D04A50(v4, *(char **)(a1 + 32), &v11, &v12, 1);
  }
}

void sub_215AAA3FC(int *a1, uint64_t a2, uint64_t a3)
{
  int v6 = 1;
  (*(void (**)(uint64_t, int *))(*(void *)a2 + 104))(a2, &v6);
  if (*a1 < 1
    || *a1 == 2 && (int v7 = 1, (*(void (**)(uint64_t, int *))(*(void *)a2 + 104))(a2, &v7), *a1 <= 0))
  {
    sub_215AAA544(a2, a3);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)a2 + 16))(a2);
    sub_215AAA544(a2, a3);
    (*(void (**)(uint64_t))(*(void *)a2 + 24))(a2);
  }
}

void sub_215AAA544(uint64_t a1, uint64_t a2)
{
  sub_215AA8510((uint64_t)&v6, a2);
  sub_215AAA5FC(a1, (uint64_t *)&v6);
  if (v10 && v9 < 0) {
    operator delete(__p);
  }
  uint64_t v3 = (void **)v6;
  if (v6)
  {
    uint64_t v4 = v7;
    uint64_t v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0) {
          operator delete(*(v4 - 4));
        }
        v4 -= 4;
      }
      while (v4 != v3);
      uint64_t v5 = v6;
    }
    int v7 = v3;
    operator delete(v5);
  }
}

void sub_215AAA5E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AAA5FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v7 = (a2[1] - *a2) >> 5;
  (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 120))(a1, &v7);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v5 != *a2)
  {
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 144))(a1, v4);
      int v8 = *(_DWORD *)(v4 + 24);
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 56))(a1, &v8);
      v4 += 32;
    }
    while (v4 != v5);
  }
  if (*((unsigned char *)a2 + 48))
  {
    char v10 = 1;
    (*(void (**)(uint64_t, char *))(*(void *)a1 + 80))(a1, &v10);
    return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 144))(a1, a2 + 3);
  }
  else
  {
    char v9 = 0;
    return (*(uint64_t (**)(uint64_t, char *))(*(void *)a1 + 80))(a1, &v9);
  }
}

void sub_215AAA790(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v10 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CB8, 0);
  if (v4) {
    sub_215AAAE50(&v10, (uint64_t)v4);
  }
  uint64_t v10 = a2;
  uint64_t v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CF0, 0);
  if (v5)
  {
    sub_215AABA88(&v10, v5);
  }
  else
  {
    uint64_t v10 = a2;
    int v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675D78, 0);
    if (v6) {
      sub_215AAC130(&v10, (uint64_t)v6);
    }
    uint64_t v10 = a2;
    uint64_t v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675DB0, 0);
    if (v7)
    {
      sub_215AACBB0(&v10, (uint64_t)v7);
    }
    else
    {
      uint64_t v10 = a2;
      int v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C683378, 0);
      if (v8) {
        sub_215AAD458(&v10, v8);
      }
      else {
        sub_215AAA95C(&v9, (void **)a1);
      }
    }
  }
}

void sub_215AAA95C(uint64_t *a1, void **a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v27);
    sub_2159A3DA4((uint64_t)&v28, v27);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)&v28);
        if (!v43) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v26, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(unsigned char *)(v3 + 64) = 0;
    if (v32)
    {
      uint64_t v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(void *)(v3 + 56) = v8;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v34;
    long long v10 = v33;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v37)
    {
      uint64_t v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(void *)(v3 + 112) = v11;
      long long v35 = 0uLL;
      uint64_t v36 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v40)
    {
      uint64_t v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(void *)(v3 + 144) = v12;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(void *)(v3 + 176) = v42;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v41;
    if (!(void)v41) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v41 + 1);
    uint64_t v16 = (void *)v41;
    if (*((void *)&v41 + 1) == (void)v41) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    uint64_t v16 = (void *)v41;
LABEL_45:
    *((void *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v27);
  sub_2159A3DA4((uint64_t)&v28, v27);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v26, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(unsigned char *)(v3 + 64) = 0;
    if (v32)
    {
      uint64_t v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(void *)(v3 + 56) = v17;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v34;
    long long v19 = v33;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v37)
    {
      uint64_t v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(void *)(v3 + 112) = v20;
      long long v35 = 0uLL;
      uint64_t v36 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v40)
    {
      uint64_t v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(void *)(v3 + 144) = v21;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(void *)(v3 + 176) = v42;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    uint64_t v14 = v41;
    if (!(void)v41) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v41 + 1);
    uint64_t v16 = (void *)v41;
    if (*((void *)&v41 + 1) == (void)v41) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0) {
    operator delete((void *)v38);
  }
  if (v37 && SHIBYTE(v36) < 0) {
    operator delete((void *)v35);
  }
  if (v32 && SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  sub_2157C6F18((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  char v24 = (void (**)(void **, unsigned int *))*a2;
  v27[0] = (uint64_t)a2[1];
  int v25 = v27[0];
  unsigned int v28 = 6;
  v24[13](a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3) {
      sub_2159B6FFC((uint64_t)&v28, a2, v4, v28);
    }
    else {
      sub_2159B71F0(a2, v4, v28);
    }
  }
  else
  {
    sub_2159B6970((int *)v27, a2, v4, v28);
  }
  v27[0] = (uint64_t)a2[1];
  sub_215AADB28((int *)v27, (uint64_t)a2, v3 + 200);
}

void sub_215AAAE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAAE50(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    uint64_t v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    uint64_t v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF07E4(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF1DC8((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159AC908(a2, v4);
        }
        sub_2159AC714((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  uint64_t v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AAB3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAB3F8(uint64_t a1, uint64_t a2)
{
  sub_215AA8804((long long **)a2, (uint64_t)&__p);
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "logger_enable_state_changes";
  *(void *)(a1 + 96) = 27;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215AAB568((void *)a1, (char **)&__p);
  sub_215AA895C((long long **)&__p, (uint64_t)&v12);
  int v5 = *(long long **)a2;
  if (*(void *)a2)
  {
    uint64_t v6 = *(long long **)(a2 + 8);
    uint64_t v7 = *(long long **)a2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0) {
          operator delete(*((void **)v6 - 4));
        }
        v6 -= 2;
      }
      while (v6 != v5);
      uint64_t v7 = *(long long **)a2;
    }
    *(void *)(a2 + 8) = v5;
    operator delete(v7);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v12;
  uint64_t v8 = (void **)__p;
  *(void *)(a2 + 16) = v13;
  if (v8)
  {
    uint64_t v9 = v15;
    long long v10 = v8;
    if (v15 != v8)
    {
      do
      {
        if (*((char *)v9 - 9) < 0) {
          operator delete(*(v9 - 4));
        }
        v9 -= 4;
      }
      while (v9 != v8);
      long long v10 = __p;
    }
    uint64_t v15 = v8;
    operator delete(v10);
  }
  int v11 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "target_context";
  *(void *)(a1 + 96) = 14;
  if (!v11) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_2159AD0A0((void *)a1, a2 + 24);
}

void sub_215AAB540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AAB554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AAB568(void *a1, char **a2)
{
  sub_215DF07E4((uint64_t)a1);
  int v4 = (unsigned __int8 *)a1[4];
  int v5 = *v4;
  if (v5 == 2)
  {
    unint64_t v6 = (uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 3);
  }
  else
  {
    if (!*v4)
    {
      unint64_t v6 = 0;
      uint64_t v7 = (void ***)(a2 + 1);
      uint64_t v8 = (void **)a2[1];
      uint64_t v9 = *a2;
      unint64_t v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    unint64_t v6 = 1;
  }
  uint64_t v7 = (void ***)(a2 + 1);
  uint64_t v8 = (void **)a2[1];
  uint64_t v9 = *a2;
  unint64_t v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_215AAB77C((void **)a2, v6 - v10);
    long long v12 = a2;
    int v11 = (void **)*a2;
    if (v11 == (void **)v12[1]) {
      goto LABEL_20;
    }
LABEL_22:
    sub_215DF07E4((uint64_t)a1);
    uint64_t v17 = (void **)sub_215DF0AA0(a1);
    ++a1[14];
    long long v19 = 0;
    long long v18 = 0uLL;
    sub_215D30C0C(v17, (uint64_t)&v18);
    if (*((char *)v11 + 23) < 0) {
      operator delete(*v11);
    }
    long long v16 = v18;
    v11[2] = v19;
    *(_OWORD *)int v11 = v16;
    *(void *)&long long v18 = v11 + 3;
    sub_215AAB920(a1);
  }
LABEL_11:
  if (v10 <= v6)
  {
    int v11 = (void **)*a2;
    if (v11 == v8) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  uint64_t v13 = (void **)&v9[32 * v6];
  while (v8 != v13)
  {
    if (*((char *)v8 - 9) < 0) {
      operator delete(*(v8 - 4));
    }
    v8 -= 4;
  }
  *uint64_t v7 = v13;
  int v11 = (void **)*a2;
  if (v11 != v13) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[9];
  a1[4] = *(void *)(v14 - 8);
  a1[14] = *(void *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_215AAB760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAB77C(void **a1, unint64_t a2)
{
  int v5 = (void **)a1[1];
  int v4 = a1[2];
  if (a2 <= (v4 - (unsigned char *)v5) >> 5)
  {
    if (a2)
    {
      uint64_t v11 = 32 * a2;
      long long v12 = &v5[4 * a2];
      do
      {
        long long *v5 = 0;
        v5[1] = 0;
        *((_DWORD *)v5 + 6) = 0;
        unsigned char v5[2] = 0;
        v5 += 4;
        v11 -= 32;
      }
      while (v11);
      int v5 = v12;
    }
    a1[1] = v5;
  }
  else
  {
    uint64_t v6 = ((char *)v5 - (unsigned char *)*a1) >> 5;
    if ((v6 + a2) >> 59) {
      sub_215738AC0();
    }
    uint64_t v7 = v4 - (unsigned char *)*a1;
    uint64_t v8 = v7 >> 4;
    if (v7 >> 4 <= v6 + a2) {
      uint64_t v8 = v6 + a2;
    }
    if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9)
    {
      if (v9 >> 59) {
        sub_215738AD8();
      }
      unint64_t v10 = (char *)operator new(32 * v9);
    }
    else
    {
      unint64_t v10 = 0;
    }
    uint64_t v13 = &v10[32 * v6];
    uint64_t v14 = 32 * a2;
    uint64_t v15 = &v13[32 * a2];
    long long v16 = v13;
    do
    {
      *(void *)long long v16 = 0;
      *((void *)v16 + 1) = 0;
      *((_DWORD *)v16 + 6) = 0;
      *((void *)v16 + 2) = 0;
      v16 += 32;
      v14 -= 32;
    }
    while (v14);
    uint64_t v17 = &v10[32 * v9];
    long long v18 = (void **)*a1;
    if (v5 == *a1)
    {
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
    }
    else
    {
      do
      {
        long long v19 = *((_OWORD *)v5 - 2);
        *((void *)v13 - 2) = *(v5 - 2);
        *((_OWORD *)v13 - 2) = v19;
        *(v5 - 3) = 0;
        *(v5 - 2) = 0;
        *(v5 - 4) = 0;
        *((_DWORD *)v13 - 2) = *((_DWORD *)v5 - 2);
        v13 -= 32;
        v5 -= 4;
      }
      while (v5 != v18);
      int v5 = (void **)*a1;
      uint64_t v20 = (void **)a1[1];
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
      while (v20 != v5)
      {
        if (*((char *)v20 - 9) < 0) {
          operator delete(*(v20 - 4));
        }
        v20 -= 4;
      }
    }
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void sub_215AAB920(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  long long v2 = (void **)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D30C0C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215AABA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = (uint64_t)a17;
  a17 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a17, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AABA88(uint64_t *a1, void *a2)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v26);
    sub_2159A3DA4((uint64_t)v27, v26);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v27);
        if (!v42) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v25, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(unsigned char *)(v3 + 64) = 0;
    if (v31)
    {
      uint64_t v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(void *)(v3 + 56) = v8;
      long long v29 = 0uLL;
      uint64_t v30 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v33;
    long long v10 = v32;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v36)
    {
      uint64_t v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(void *)(v3 + 112) = v11;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v39)
    {
      uint64_t v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(void *)(v3 + 144) = v12;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(void *)(v3 + 176) = v41;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v40;
    if (!(void)v40) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v40 + 1);
    long long v16 = (void *)v40;
    if (*((void *)&v40 + 1) == (void)v40) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v40;
LABEL_45:
    *((void *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v26);
  sub_2159A3DA4((uint64_t)v27, v26);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v25, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(unsigned char *)(v3 + 64) = 0;
    if (v31)
    {
      uint64_t v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(void *)(v3 + 56) = v17;
      long long v29 = 0uLL;
      uint64_t v30 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v33;
    long long v19 = v32;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v36)
    {
      uint64_t v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(void *)(v3 + 112) = v20;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v39)
    {
      uint64_t v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(void *)(v3 + 144) = v21;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(void *)(v3 + 176) = v41;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    uint64_t v14 = v40;
    if (!(void)v40) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v40 + 1);
    long long v16 = (void *)v40;
    if (*((void *)&v40 + 1) == (void)v40) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
  if (v36 && SHIBYTE(v35) < 0) {
    operator delete((void *)v34);
  }
  if (v31 && SHIBYTE(v30) < 0) {
    operator delete((void *)v29);
  }
  sub_2157C6F18((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159AFF3C((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_215DFF824(a2[6], v26);
  return sub_215AABF18((uint64_t)v26, a2, v3 + 200);
}

void sub_215AABED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AABF18(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = a2 + 2;
  sub_2159B0060(a2 + 2);
  sub_215AAC030((uint64_t)a2, a3);
  uint64_t v6 = (void **)(a3 + 24);
  char v10 = 0;
  sub_215DFF4BC(a2[6], &v10);
  if (v10)
  {
    if (!*(unsigned char *)(a3 + 48))
    {
      long long *v6 = 0;
      *(void *)(a3 + 32) = 0;
      *(void *)(a3 + 40) = 0;
      *(unsigned char *)(a3 + 48) = 1;
    }
    sub_215E000A8(a2[6], (void **)(a3 + 24));
  }
  else if (*(unsigned char *)(a3 + 48))
  {
    if (*(char *)(a3 + 47) < 0) {
      operator delete(*v6);
    }
    *(unsigned char *)(a3 + 48) = 0;
  }
  uint64_t v7 = a2[4];
  uint64_t result = (*(uint64_t (**)(void *))(a2[2] + 32))(v5);
  uint64_t v9 = *(void *)(v7 - 16) - result + *(void *)(v7 - 8);
  if (v9) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v5 + 40))(v5, v9);
  }
  a2[4] -= 16;
  return result;
}

void sub_215AAC030(uint64_t a1, uint64_t a2)
{
  unint64_t v9 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
  sub_215DFFC24(*(void *)(a1 + 48), &v9);
  uint64_t v4 = *(void ***)(a2 + 8);
  unint64_t v5 = ((uint64_t)v4 - *(void *)a2) >> 5;
  if (v9 > v5)
  {
    sub_215AAB77C((void **)a2, v9 - v5);
    uint64_t v8 = a2;
    uint64_t v6 = *(void ***)a2;
    uint64_t v7 = *(void *)(v8 + 8);
    if ((void **)v7 == v6) {
      return;
    }
    goto LABEL_13;
  }
  if (v9 >= v5)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v6 = *(void ***)a2;
    if (v4 == v6) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)a2 + 32 * v9;
  while (v4 != (void **)v7)
  {
    if (*((char *)v4 - 9) < 0) {
      operator delete(*(v4 - 4));
    }
    v4 -= 4;
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v6 = *(void ***)a2;
  if ((void **)v7 != v6)
  {
    do
    {
LABEL_13:
      sub_215E000A8(*(void *)(a1 + 48), v6);
      int v10 = 0;
      sub_215DFF770(*(void *)(a1 + 48), &v10);
      *((_DWORD *)v6 + 6) = v10;
      v6 += 4;
    }
    while (v6 != (void **)v7);
  }
}

void sub_215AAC130(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    long long v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF01A0(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF0F9C((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159B191C(a2, v4);
        }
        sub_2159B1728((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  long long v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AAC690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAC6D8(uint64_t a1, uint64_t a2)
{
  sub_215AA8804((long long **)a2, (uint64_t)&__p);
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "logger_enable_state_changes";
  *(void *)(a1 + 96) = 27;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215AAC848((void *)a1, (char **)&__p);
  sub_215AA895C((long long **)&__p, (uint64_t)&v12);
  int v5 = *(long long **)a2;
  if (*(void *)a2)
  {
    uint64_t v6 = *(long long **)(a2 + 8);
    uint64_t v7 = *(long long **)a2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0) {
          operator delete(*((void **)v6 - 4));
        }
        v6 -= 2;
      }
      while (v6 != v5);
      uint64_t v7 = *(long long **)a2;
    }
    *(void *)(a2 + 8) = v5;
    operator delete(v7);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v12;
  uint64_t v8 = (void **)__p;
  *(void *)(a2 + 16) = v13;
  if (v8)
  {
    uint64_t v9 = v15;
    long long v10 = v8;
    if (v15 != v8)
    {
      do
      {
        if (*((char *)v9 - 9) < 0) {
          operator delete(*(v9 - 4));
        }
        v9 -= 4;
      }
      while (v9 != v8);
      long long v10 = __p;
    }
    uint64_t v15 = v8;
    operator delete(v10);
  }
  int v11 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "target_context";
  *(void *)(a1 + 96) = 14;
  if (!v11) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_2159B1E80((void *)a1, a2 + 24);
}

void sub_215AAC820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AAC834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157C3C78((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AAC848(void *a1, char **a2)
{
  sub_215DF01A0((uint64_t)a1);
  int v4 = (unsigned __int8 *)a1[4];
  int v5 = *v4;
  if (v5 == 2)
  {
    unint64_t v6 = (uint64_t)(*(void *)(*((void *)v4 + 1) + 8) - **((void **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    unint64_t v6 = *(void *)(*((void *)v4 + 1) + 16);
  }
  else
  {
    if (!*v4)
    {
      unint64_t v6 = 0;
      uint64_t v7 = (void ***)(a2 + 1);
      uint64_t v8 = (void **)a2[1];
      uint64_t v9 = *a2;
      unint64_t v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    unint64_t v6 = 1;
  }
  uint64_t v7 = (void ***)(a2 + 1);
  uint64_t v8 = (void **)a2[1];
  uint64_t v9 = *a2;
  unint64_t v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_215AAB77C((void **)a2, v6 - v10);
    long long v12 = a2;
    int v11 = (void **)*a2;
    if (v11 == (void **)v12[1]) {
      goto LABEL_20;
    }
LABEL_22:
    sub_215DF01A0((uint64_t)a1);
    uint64_t v17 = (void **)sub_215DF045C(a1);
    ++a1[14];
    long long v19 = 0;
    long long v18 = 0uLL;
    sub_215D3040C(v17, (uint64_t)&v18);
    if (*((char *)v11 + 23) < 0) {
      operator delete(*v11);
    }
    long long v16 = v18;
    v11[2] = v19;
    *(_OWORD *)int v11 = v16;
    *(void *)&long long v18 = v11 + 3;
    sub_215AACA48(a1);
  }
LABEL_11:
  if (v10 <= v6)
  {
    int v11 = (void **)*a2;
    if (v11 == v8) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  uint64_t v13 = (void **)&v9[32 * v6];
  while (v8 != v13)
  {
    if (*((char *)v8 - 9) < 0) {
      operator delete(*(v8 - 4));
    }
    v8 -= 4;
  }
  *uint64_t v7 = v13;
  int v11 = (void **)*a2;
  if (v11 != v13) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[9];
  a1[4] = *(void *)(v14 - 8);
  a1[14] = *(void *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_215AACA2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AACA48(void *a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  long long v2 = (void **)sub_215DF045C(a1);
  ++a1[14];
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  sub_215D3040C(v2, (uint64_t)&v5);
  uint64_t v4 = v6;
  *(_OWORD *)__p = v5;
  operator new();
}

void sub_215AACB40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v23 = (uint64_t)a17;
  a17 = 0;
  if (v23) {
    sub_215E15464((uint64_t)&a17, v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AACBB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)__p);
    sub_2159A3DA4((uint64_t)v31, (uint64_t *)__p);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v31);
        if (!v46) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v28, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v8;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v37;
    long long v10 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v11;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v12;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v44 + 1);
    long long v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v44;
LABEL_45:
    *((void *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)__p);
  sub_2159A3DA4((uint64_t)v31, (uint64_t *)__p);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v28, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v17;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v37;
    long long v19 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v20;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v21;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v44 + 1);
    long long v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0) {
    operator delete((void *)v41);
  }
  if (v40 && SHIBYTE(v39) < 0) {
    operator delete((void *)v38);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  sub_2157C6F18((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_215DFABD4(a2, __p);
  unsigned int v24 = __p[0];
  if (LODWORD(__p[0]) >= 6) {
    unsigned int v25 = 6;
  }
  else {
    unsigned int v25 = __p[0];
  }
  if (v25 < 3) {
    sub_2159B3640((uint64_t)__p, a2, v4, v25);
  }
  else {
    sub_2159B3834(a2, v4, v25);
  }
  if (v24 >= 3 && !*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          char v27 = 0;
          if (v30 < 0) {
            goto LABEL_79;
          }
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      char v27 = 1;
      if (v30 < 0) {
LABEL_79:
      }
        operator delete(__p[0]);
LABEL_65:
      if (*(unsigned char *)(a2 + 131)) {
        char v26 = 0;
      }
      else {
        char v26 = v27;
      }
    }
    while ((v26 & 1) != 0);
  }
  sub_215AAD11C((uint64_t)__p, a2, v3 + 200);
}

void sub_215AAD0D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAD11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(__p[0]) = 1;
  sub_215DFABD4(a2, __p);
  sub_215AAD2F8(a2, a3);
  int v5 = (void **)(a3 + 24);
  char v8 = 0;
  sub_215DFA01C(a2, &v8);
  if (!v8)
  {
    if (!*(unsigned char *)(a3 + 48)) {
      goto LABEL_13;
    }
    if (*(char *)(a3 + 47) < 0) {
      operator delete(*v5);
    }
    *(unsigned char *)(a3 + 48) = 0;
    if (*(unsigned char *)(a2 + 131)) {
      return;
    }
    while (1)
    {
LABEL_23:
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        return;
      }
      sub_215DFD700(a2, (uint64_t)__p);
      if (SHIBYTE(v10) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_30:
          char v7 = 0;
          if (SHIBYTE(v10) < 0) {
            goto LABEL_33;
          }
          goto LABEL_19;
        }
      }
      else if (SHIBYTE(v10) == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_30;
      }
      char v7 = 1;
      if (SHIBYTE(v10) < 0) {
LABEL_33:
      }
        operator delete(__p[0]);
LABEL_19:
      if (*(unsigned char *)(a2 + 131)) {
        char v6 = 0;
      }
      else {
        char v6 = v7;
      }
      if ((v6 & 1) == 0) {
        return;
      }
    }
  }
  if (!*(unsigned char *)(a3 + 48))
  {
    long long *v5 = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    *(unsigned char *)(a3 + 48) = 1;
    ++*(void *)(a2 + 80);
    if (!*(unsigned char *)(a2 + 128)) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  ++*(void *)(a2 + 80);
  if (*(unsigned char *)(a2 + 128))
  {
LABEL_11:
    if (!*(unsigned char *)(a2 + 131)) {
      goto LABEL_15;
    }
    *(unsigned char *)(a2 + 132) = 1;
LABEL_13:
    if (!*(unsigned char *)(a2 + 131)) {
      goto LABEL_23;
    }
    return;
  }
LABEL_15:
  sub_215DFD700(a2, (uint64_t)__p);
  if (*(char *)(a3 + 47) < 0) {
    operator delete(*v5);
  }
  *(_OWORD *)int v5 = *(_OWORD *)__p;
  *(void *)(a3 + 40) = v10;
  ++*(void *)(a2 + 104);
  if (!*(unsigned char *)(a2 + 131)) {
    goto LABEL_23;
  }
}

void sub_215AAD2F8(uint64_t a1, uint64_t a2)
{
  unint64_t v14 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
  sub_215DFB854(a1, &v14);
  uint64_t v4 = *(void ***)(a2 + 8);
  unint64_t v5 = ((uint64_t)v4 - *(void *)a2) >> 5;
  if (v14 > v5)
  {
    sub_215AAB77C((void **)a2, v14 - v5);
    uint64_t v8 = a2;
    char v6 = *(void ***)a2;
    char v7 = *(void ***)(v8 + 8);
    uint64_t v9 = (char *)v7 - (char *)v6;
    if (v7 == v6) {
      return;
    }
    goto LABEL_13;
  }
  if (v14 >= v5)
  {
    char v6 = *(void ***)a2;
    uint64_t v9 = (char *)v4 - (char *)v6;
    if (v4 == v6) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)a2 + 32 * v14;
  while (v4 != (void **)v10)
  {
    if (*((char *)v4 - 9) < 0) {
      operator delete(*(v4 - 4));
    }
    v4 -= 4;
  }
  *(void *)(a2 + 8) = v10;
  char v6 = *(void ***)a2;
  uint64_t v9 = v10 - (void)v6;
  if ((void **)v10 != v6)
  {
LABEL_13:
    uint64_t v11 = 32 * (v9 >> 5);
    do
    {
      ++*(void *)(a1 + 80);
      if (*(unsigned char *)(a1 + 128)) {
        BOOL v12 = *(unsigned char *)(a1 + 131) == 0;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
        sub_215DFD700(a1, (uint64_t)&v15);
        if (*((char *)v6 + 23) < 0) {
          operator delete(*v6);
        }
        long long v13 = v15;
        v6[2] = v16;
        *(_OWORD *)char v6 = v13;
        ++*(void *)(a1 + 104);
      }
      else
      {
        *(unsigned char *)(a1 + 132) = 1;
      }
      LODWORD(v15) = 0;
      sub_215DFA8B4(a1, &v15);
      *((_DWORD *)v6 + 6) = v15;
      v6 += 4;
      v11 -= 32;
    }
    while (v11);
  }
}

void sub_215AAD458(uint64_t *a1, void *a2)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v25);
    sub_2159A3DA4((uint64_t)v26, v25);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v26);
        if (!v41) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v24, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v8;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v32;
    long long v10 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v11;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v12;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v39 + 1);
    long long v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    long long v16 = (void *)v39;
LABEL_45:
    *((void *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v25);
  sub_2159A3DA4((uint64_t)v26, v25);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v24, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(unsigned char *)(v3 + 64) = 0;
    if (v30)
    {
      uint64_t v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(void *)(v3 + 56) = v17;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v32;
    long long v19 = v31;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v35)
    {
      uint64_t v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(void *)(v3 + 112) = v20;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v38)
    {
      uint64_t v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(void *)(v3 + 144) = v21;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(void *)(v3 + 176) = v40;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    uint64_t v14 = v39;
    if (!(void)v39) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v39 + 1);
    long long v16 = (void *)v39;
    if (*((void *)&v39 + 1) == (void)v39) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  if (v30 && SHIBYTE(v29) < 0) {
    operator delete((void *)v28);
  }
  sub_2157C6F18((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159B5060((uint64_t)v25, a2, v4);
  sub_215AAD8D0((uint64_t)v25, a2, v3 + 200);
}

void sub_215AAD888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AAD8D0(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a2[6];
  unint64_t v4 = a2[7];
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  a2[6] = v3 + 4;
  sub_215D02644(a2);
  sub_215AAD9A0(a2, a3);
  sub_2159B5724(a2, a3 + 24);
  uint64_t v9 = a2[12];
  uint64_t v10 = a2[9];
  a2[6] = *(void *)(v9 - 8) + *(void *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_215AAD98C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AAD9A0(void *a1, uint64_t a2)
{
  unint64_t v3 = a1[6];
  unint64_t v2 = a1[7];
  BOOL v4 = v2 >= v3;
  unint64_t v5 = v2 - v3;
  if (!v4) {
    unint64_t v5 = 0;
  }
  if (v5 <= 7) {
    goto LABEL_21;
  }
  unint64_t v8 = *(void *)(a1[3] + v3);
  a1[6] = v3 + 8;
  uint64_t v9 = *(void *)(a2 + 8);
  unint64_t v10 = (v9 - *(void *)a2) >> 5;
  if (v8 > v10)
  {
    sub_215AAB77C((void **)a2, v8 - v10);
    uint64_t v13 = a2;
    uint64_t v11 = *(_DWORD **)a2;
    uint64_t v12 = *(void *)(v13 + 8);
    if ((_DWORD *)v12 != v11) {
      goto LABEL_16;
    }
    return;
  }
  if (v8 < v10)
  {
    uint64_t v12 = *(void *)a2 + 32 * v8;
    while (v9 != v12)
    {
      if (*(char *)(v9 - 9) < 0) {
        operator delete(*(void **)(v9 - 32));
      }
      v9 -= 32;
    }
    *(void *)(a2 + 8) = v12;
    uint64_t v11 = *(_DWORD **)a2;
    if ((_DWORD *)v12 == v11) {
      return;
    }
    while (1)
    {
LABEL_16:
      sub_215D029A0(a1, (uint64_t)v11);
      unint64_t v14 = a1[6];
      unint64_t v15 = a1[7];
      BOOL v4 = v15 >= v14;
      unint64_t v16 = v15 - v14;
      if (!v4) {
        unint64_t v16 = 0;
      }
      if (v16 <= 3) {
        break;
      }
      int v17 = *(_DWORD *)(a1[3] + v14);
      a1[6] = v14 + 4;
      v11[6] = v17;
      v11 += 8;
      if (v11 == (_DWORD *)v12) {
        return;
      }
    }
LABEL_21:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v11 = *(_DWORD **)a2;
  if (v9 != *(void *)a2) {
    goto LABEL_16;
  }
}

void sub_215AADB00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AADB14(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AADB28(int *a1, uint64_t a2, uint64_t a3)
{
  int v7 = 1;
  (*(void (**)(uint64_t, int *))(*(void *)a2 + 104))(a2, &v7);
  if (*a1 < 1)
  {
    sub_215AAE05C(a2, a3);
    unint64_t v6 = (void **)(a3 + 24);
    char v8 = 0;
    (*(void (**)(uint64_t, char *))(*(void *)a2 + 80))(a2, &v8);
    if (v8)
    {
      if (!*(unsigned char *)(a3 + 48))
      {
        long long *v6 = 0;
        *(void *)(a3 + 32) = 0;
        *(void *)(a3 + 40) = 0;
        *(unsigned char *)(a3 + 48) = 1;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 144))(a2, a3 + 24);
    }
    else if (*(unsigned char *)(a3 + 48))
    {
      if (*(char *)(a3 + 47) < 0) {
        operator delete(*v6);
      }
      *(unsigned char *)(a3 + 48) = 0;
    }
  }
  else
  {
    sub_215AADC98(a1, a2, a3);
  }
}

void sub_215AADC98(int *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *a1;
  if (*a1 == 2)
  {
    unsigned int v10 = 1;
    (*(void (**)(uint64_t, unsigned int *))(*(void *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      unsigned int v8 = v10;
      uint64_t v9 = sub_215AADE40();
      sub_215E07C10((std::string *)v9, v8, 1u);
    }
    int v5 = *a1;
  }
  if (v5 > 0) {
    (*(void (**)(uint64_t))(*(void *)a2 + 16))(a2);
  }
  sub_215AAE05C(a2, a3);
  int v7 = (void **)(a3 + 24);
  char v11 = 0;
  (*(void (**)(uint64_t, char *))(*(void *)a2 + 80))(a2, &v11);
  if (v11)
  {
    if (!*(unsigned char *)(a3 + 48))
    {
      *int v7 = 0;
      *(void *)(a3 + 32) = 0;
      *(void *)(a3 + 40) = 0;
      *(unsigned char *)(a3 + 48) = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 144))(a2, a3 + 24);
  }
  else if (*(unsigned char *)(a3 + 48))
  {
    if (*(char *)(a3 + 47) < 0) {
      operator delete(*v7);
    }
    *(unsigned char *)(a3 + 48) = 0;
  }
  if (v5 >= 1) {
    (*(void (**)(uint64_t))(*(void *)a2 + 24))(a2);
  }
}

long long *sub_215AADE40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888B80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888B80))
  {
    return &xmmword_267888B68;
  }
  uint64_t v1 = (char *)sub_215AADF28();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888B68, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888B78 = *((void *)v1 + 2);
    xmmword_267888B68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888B68, &dword_21572C000);
  __cxa_guard_release(&qword_267888B80);
  return &xmmword_267888B68;
}

void sub_215AADF10(_Unwind_Exception *a1)
{
}

void *sub_215AADF28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888BA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888BA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledLoggersSample]", qword_267888B88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888B88, &dword_21572C000);
    __cxa_guard_release(&qword_267888BA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888BC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888BC0))
  {
    return &unk_267888BA8;
  }
  sub_215E19DF4((uint64_t)qword_267888B88, (uint64_t)&unk_267888BA8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888BA8, &dword_21572C000);
  __cxa_guard_release(&qword_267888BC0);
  return &unk_267888BA8;
}

void sub_215AAE02C(_Unwind_Exception *a1)
{
}

void sub_215AAE044(_Unwind_Exception *a1)
{
}

void sub_215AAE05C(uint64_t a1, uint64_t a2)
{
  unint64_t v9 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
  (*(void (**)(uint64_t, unint64_t *))(*(void *)a1 + 120))(a1, &v9);
  BOOL v4 = *(void ***)(a2 + 8);
  unint64_t v5 = ((uint64_t)v4 - *(void *)a2) >> 5;
  if (v9 > v5)
  {
    sub_215AAB77C((void **)a2, v9 - v5);
    uint64_t v8 = a2;
    unint64_t v6 = *(void ***)a2;
    uint64_t v7 = *(void *)(v8 + 8);
    if ((void **)v7 == v6) {
      return;
    }
    goto LABEL_13;
  }
  if (v9 >= v5)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    unint64_t v6 = *(void ***)a2;
    if (v4 == v6) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)a2 + 32 * v9;
  while (v4 != (void **)v7)
  {
    if (*((char *)v4 - 9) < 0) {
      operator delete(*(v4 - 4));
    }
    v4 -= 4;
  }
  *(void *)(a2 + 8) = v7;
  unint64_t v6 = *(void ***)a2;
  if ((void **)v7 != v6)
  {
    do
    {
LABEL_13:
      (*(void (**)(uint64_t, void **))(*(void *)a1 + 144))(a1, v6);
      int v10 = 0;
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 56))(a1, &v10);
      *((_DWORD *)v6 + 6) = v10;
      v6 += 4;
    }
    while (v6 != (void **)v7);
  }
}

void sub_215AAE1B8()
{
}

void sub_215AAE3A0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void *sub_215AAE3D4(void *a1)
{
  *a1 = &unk_26C675800;
  sub_2157C6F18((uint64_t)(a1 + 8));
  return a1;
}

void sub_215AAE418(void *a1)
{
  *a1 = &unk_26C675800;
  sub_2157C6F18((uint64_t)(a1 + 8));

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AAE47C(uint64_t a1)
{
  return a1 + 64;
}

BOOL sub_215AAE484(uint64_t a1, void *lpsrc)
{
  BOOL v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674350, 0);
  if (!v4) {
    return 0;
  }
  if ((void *)a1 == lpsrc) {
    return 1;
  }
  BOOL v5 = (*(unsigned char *)(a1 + 48) != 0) == (v4[48] != 0);
  if (!*(unsigned char *)(a1 + 48) || !v4[48]) {
    return v5;
  }
  if (*(void *)(a1 + 8) != *((void *)v4 + 1)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 24) || !v4[24])
  {
    if ((*(unsigned char *)(a1 + 24) != 0) == (v4[24] != 0)) {
      goto LABEL_13;
    }
    return 0;
  }
  if (*(void *)(a1 + 16) != *((void *)v4 + 2)) {
    return 0;
  }
LABEL_13:
  BOOL v5 = (*(unsigned char *)(a1 + 40) != 0) == (v4[40] != 0);
  if (*(unsigned char *)(a1 + 40) && v4[40]) {
    return *(void *)(a1 + 32) == *((void *)v4 + 4);
  }
  return v5;
}

void sub_215AAE5E4(uint64_t a1)
{
  long long v2 = (long long *)sub_215AAF91C();
  sub_215AAE69C(a1);
  sub_2157C6224(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",");
}

void sub_215AAE680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AAE69C(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888D00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888D00))
  {
    unint64_t v3 = sub_215AAF5CC();
    uint64_t v4 = *((void *)v3 + 1);
    if (*((char *)v3 + 23) >= 0)
    {
      uint64_t v5 = *((unsigned __int8 *)v3 + 23);
    }
    else
    {
      unint64_t v3 = *(long long **)v3;
      uint64_t v5 = v4;
    }
    sub_2157C6A10((char *)v3, v5, "::", 2, 0, (uint64_t)&v7);
    if (*(char *)(v8 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267888CE8, *(void **)(v8 - 24), *(void *)(v8 - 16));
    }
    else
    {
      long long v6 = *(_OWORD *)(v8 - 24);
      qword_267888CF8 = *(void *)(v8 - 8);
      xmmword_267888CE8 = v6;
    }
    sub_2157352DC(&v7);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888CE8, &dword_21572C000);
    __cxa_guard_release(&qword_267888D00);
  }
  return sub_215AAFC10(&xmmword_267888CE8, "{", a1 + 8, "}");
}

void sub_215AAE7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_215AAE7D8(_Unwind_Exception *a1)
{
}

void sub_215AAE7F0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.net");
  *(_DWORD *)(a1 + 24) = 5;
}

double sub_215AAE81C@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_215B0D788(a1, &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

void *sub_215AAE874(void *a1)
{
  *a1 = &unk_26C675800;
  sub_2157C6F18((uint64_t)(a1 + 8));
  return a1;
}

void sub_215AAE8B8(void *a1)
{
  *a1 = &unk_26C675800;
  sub_2157C6F18((uint64_t)(a1 + 8));

  JUMPOUT(0x2166C4D20);
}

void sub_215AAE91C(uint64_t a1)
{
  long long v2 = sub_215AAF020();
  sub_215AAE9AC(v2, "{", a1 + 8, ",");
}

uint64_t sub_215AAE978(uint64_t a1)
{
  return sub_215AAF7E8(a1 + 8);
}

void sub_215AAE980(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_215AAE9AC(long long *a1, const char *a2, uint64_t a3, const char *a4)
{
  int v9 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&v7, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long v7 = *a1;
    uint64_t v8 = *((void *)a1 + 2);
  }
  int v9 = 1;
  uint64_t v12 = &v7;
  uint64_t v13 = a2;
  unint64_t v14 = &v7;
  unint64_t v15 = a2;
  unint64_t v16 = a2;
  sub_2157492F0((uint64_t *)&v14, (uint64_t)&v7);
  uint64_t v10 = a3;
  uint64_t v12 = &v7;
  uint64_t v13 = "{";
  unint64_t v14 = &v7;
  unint64_t v15 = "{";
  unint64_t v16 = "{";
  if (v9 != -1)
  {
    int v17 = &v12;
    ((void (*)(long long ***, long long *))off_26C674C98[v9])(&v17, &v7);
    LOBYTE(v12) = 1;
    uint64_t v13 = (const char *)&v7;
    unint64_t v14 = (long long *)&v11;
    sub_215AAEC74(&v10, (uint64_t)&v12);
    uint64_t v12 = &v7;
    uint64_t v13 = "}";
    unint64_t v14 = &v7;
    unint64_t v15 = "}";
    unint64_t v16 = "}";
    if (v9 != -1)
    {
      int v17 = &v12;
      ((void (*)(long long ***, long long *))off_26C674C98[v9])(&v17, &v7);
      uint64_t v12 = &v7;
      uint64_t v13 = a4;
      unint64_t v14 = &v7;
      unint64_t v15 = a4;
      unint64_t v16 = a4;
      if (v9 != -1)
      {
        int v17 = &v12;
        ((void (*)(long long ***, long long *))off_26C674C98[v9])(&v17, &v7);
        sub_2157C55EC();
      }
      sub_215742D4C();
    }
  }
  sub_215742D4C();
}

void sub_215AAEBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEC10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAEC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215AAEC74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (*(unsigned char *)a2)
  {
    *(unsigned char *)a2 = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    if (*(unsigned char *)(v3 + 40)) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 8);
    int v9 = ",";
    uint64_t v10 = v8;
    char v11 = ",";
    uint64_t v12 = ",";
    uint64_t v5 = *(unsigned int *)(v8 + 24);
    if (v5 == -1) {
      goto LABEL_8;
    }
    uint64_t v13 = &v8;
    ((void (*)(uint64_t **))off_26C674C98[v5])(&v13);
    *(unsigned char *)a2 = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    if (*(unsigned char *)(v3 + 40)) {
LABEL_3:
    }
      sub_215AAED64();
  }
  uint64_t v8 = v4;
  int v9 = "nullopt";
  uint64_t v10 = v4;
  char v11 = "nullopt";
  uint64_t v12 = "nullopt";
  uint64_t v6 = *(unsigned int *)(v4 + 24);
  if (v6 == -1) {
LABEL_8:
  }
    sub_215742D4C();
  uint64_t v13 = &v8;
  return ((uint64_t (*)(uint64_t **))off_26C674CB0[v6])(&v13);
}

void sub_215AAED64()
{
}

void sub_215AAEFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  uint64_t v22 = a15;
  a15 = 0;
  if (!v22) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464((uint64_t)&a15, v22);
  _Unwind_Resume(exception_object);
}

long long *sub_215AAF020()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888BE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888BE0))
  {
    return &xmmword_267888BC8;
  }
  uint64_t v1 = sub_215AAF108();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267888BC8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267888BD8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267888BC8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888BC8, &dword_21572C000);
  __cxa_guard_release(&qword_267888BE0);
  return &xmmword_267888BC8;
}

void sub_215AAF0F0(_Unwind_Exception *a1)
{
}

std::string *sub_215AAF108()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888C00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888C00))
  {
    return &stru_267888BE8;
  }
  sub_215AAF3BC((uint64_t)__p);
  sub_215AAF204(__p, &stru_267888BE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888BE8, &dword_21572C000);
  __cxa_guard_release(&qword_267888C00);
  return &stru_267888BE8;
}

void sub_215AAF1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267888C00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267888C00);
  _Unwind_Resume(a1);
}

void sub_215AAF204(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_215AAF5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    unint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_215AAF36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AAF3BC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888C80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888C80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::UpdateSyncConfiguration>]", qword_267888C68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888C68, &dword_21572C000);
    __cxa_guard_release(&qword_267888C80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888CA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888CA0))
  {
    size_t v3 = sub_215747D98(qword_267888C68, "<", 0);
    sub_215747C90(qword_267888C68, 0, v3, qword_267888C88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888C88, &dword_21572C000);
    __cxa_guard_release(&qword_267888CA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888CC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888CC0))
  {
    sub_215E19DF4((uint64_t)qword_267888C88, (uint64_t)&xmmword_267888CA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888CA8, &dword_21572C000);
    __cxa_guard_release(&qword_267888CC0);
  }
  if (byte_267888CBF < 0)
  {
    long long v2 = xmmword_267888CA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267888CA8;
    *(void *)(a1 + 16) = unk_267888CB8;
  }
}

void sub_215AAF584(_Unwind_Exception *a1)
{
}

void sub_215AAF59C(_Unwind_Exception *a1)
{
}

void sub_215AAF5B4(_Unwind_Exception *a1)
{
}

long long *sub_215AAF5CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888C20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888C20))
  {
    return &xmmword_267888C08;
  }
  uint64_t v1 = (char *)sub_215AAF6B4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888C08, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888C18 = *((void *)v1 + 2);
    xmmword_267888C08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888C08, &dword_21572C000);
  __cxa_guard_release(&qword_267888C20);
  return &xmmword_267888C08;
}

void sub_215AAF69C(_Unwind_Exception *a1)
{
}

void *sub_215AAF6B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888C40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888C40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateSyncConfiguration]", qword_267888C28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888C28, &dword_21572C000);
    __cxa_guard_release(&qword_267888C40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888C60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888C60))
  {
    return &unk_267888C48;
  }
  sub_215E19DF4((uint64_t)qword_267888C28, (uint64_t)&unk_267888C48);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888C48, &dword_21572C000);
  __cxa_guard_release(&qword_267888C60);
  return &unk_267888C48;
}

void sub_215AAF7B8(_Unwind_Exception *a1)
{
}

void sub_215AAF7D0(_Unwind_Exception *a1)
{
}

uint64_t sub_215AAF7E8(uint64_t a1)
{
  int v3 = 0;
  uint64_t v4 = a1;
  sub_2157491FC(v2, "{");
  LOBYTE(v6) = 1;
  long long v7 = (const char *)v2;
  int64x2_t v8 = &v5;
  sub_215AAEC74(&v4, (uint64_t)&v6);
  uint64_t v6 = (void **)v2;
  long long v7 = "}";
  int64x2_t v8 = (char *)v2;
  int8x16_t v9 = "}";
  uint64_t v10 = "}";
  if (v3 == -1) {
    sub_215742D4C();
  }
  char v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C674C98[v3])(&v11, v2);
  if (v3 == -1) {
    sub_215742D4C();
  }
  uint64_t v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C674BA8[v3])(&v6, v2);
  if (v3 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C674B90[v3])(&v6, v2);
  }
  return result;
}

void sub_215AAF8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAF908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

std::string *sub_215AAF91C()
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888CE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888CE0))
  {
    sub_215732BF4(v10, "viz::PackageData");
    uint64_t v1 = sub_215AAF5CC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v13 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    int v3 = sub_21598B2CC();
    if (*((char *)v3 + 23) < 0)
    {
      sub_215738B0C(&v14, *(void **)v3, *((void *)v3 + 1));
    }
    else
    {
      long long v4 = *v3;
      uint64_t v15 = *((void *)v3 + 2);
      long long v14 = v4;
    }
    char v5 = sub_2157D858C();
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v16, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
      std::string::size_type v17 = v5->__r_.__value_.__r.__words[2];
      long long v16 = v6;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    uint64_t v19 = 0x400000000000000;
    sub_21573A150(v9, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v10, (uint64_t *)v9, &stru_267888CC8, v7, v8);
    sub_2157352DC(v9);
    if (SHIBYTE(v19) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v17) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v15) & 0x80000000) == 0) {
          goto LABEL_16;
        }
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete((void *)v16);
    if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v13) & 0x80000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_22;
    }
LABEL_21:
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v11 & 0x80000000) == 0)
      {
LABEL_18:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267888CC8, &dword_21572C000);
        __cxa_guard_release(&qword_267888CE0);
        return &stru_267888CC8;
      }
LABEL_23:
      operator delete(v10[0]);
      goto LABEL_18;
    }
LABEL_22:
    operator delete(__dst[0]);
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  return &stru_267888CC8;
}

void sub_215AAFB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
    {
LABEL_10:
      if (a18 < 0) {
        operator delete(a13);
      }
      __cxa_guard_abort(&qword_267888CE0);
      _Unwind_Resume(a1);
    }
LABEL_9:
    operator delete(a20);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0) {
    goto LABEL_10;
  }
  goto LABEL_9;
}

void sub_215AAFBE8()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x215AAFBC4);
    }
  }
}

uint64_t sub_215AAFC10(long long *a1, const char *a2, uint64_t a3, const char *a4)
{
  int v10 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&v8, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long v8 = *a1;
    uint64_t v9 = *((void *)a1 + 2);
  }
  int v10 = 1;
  uint64_t v13 = &v8;
  long long v14 = a2;
  uint64_t v15 = &v8;
  long long v16 = a2;
  std::string::size_type v17 = a2;
  sub_2157492F0((uint64_t *)&v15, (uint64_t)&v8);
  uint64_t v11 = a3;
  uint64_t v13 = &v8;
  long long v14 = "{";
  uint64_t v15 = &v8;
  long long v16 = "{";
  std::string::size_type v17 = "{";
  if (v10 == -1) {
    goto LABEL_11;
  }
  uint64_t v18 = &v13;
  ((void (*)(long long ***, long long *))off_26C674C98[v10])(&v18, &v8);
  LOBYTE(v13) = 1;
  long long v14 = (const char *)&v8;
  uint64_t v15 = (long long *)&v12;
  sub_215AAEC74(&v11, (uint64_t)&v13);
  uint64_t v13 = &v8;
  long long v14 = "}";
  uint64_t v15 = &v8;
  long long v16 = "}";
  std::string::size_type v17 = "}";
  if (v10 == -1) {
LABEL_11:
  }
    sub_215742D4C();
  uint64_t v18 = &v13;
  ((void (*)(long long ***, long long *))off_26C674C98[v10])(&v18, &v8);
  uint64_t v13 = &v8;
  long long v14 = a4;
  uint64_t v15 = &v8;
  long long v16 = a4;
  std::string::size_type v17 = a4;
  if (v10 == -1) {
    sub_215742D4C();
  }
  uint64_t v18 = &v13;
  ((void (*)(long long ***, long long *))off_26C674C98[v10])(&v18, &v8);
  if (v10 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = (long long *)&v18;
  uint64_t result = ((uint64_t (*)(long long **, long long *))off_26C674BA8[v10])(&v13, &v8);
  if (v10 != -1) {
    return ((uint64_t (*)(long long **, long long *))off_26C674B90[v10])(&v13, &v8);
  }
  return result;
}

void sub_215AAFDEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAFE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAFE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAFE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AAFE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_215AAFE54(uint64_t a1, uint64_t a2)
{
  v29[5] = *MEMORY[0x263EF8340];
  uint64_t v4 = a1 + 16;
  int v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_21598FB5C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_2159CA9D4(v4, (uint64_t)v24);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    sub_215995568(v4, (uint64_t)v24);
  }
  uint64_t v6 = a2 + 16;
  int v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_21598FB5C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_2159CA9D4(v6, (uint64_t)v18);
  }
  else
  {
    if (v7) {
      sub_215742D4C();
    }
    sub_215995568(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  long long v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  long long v14 = (unsigned __int8 **)&v23;
  if (!sub_215AF0A90((uint64_t)&v17, v15, v13)) {
    goto LABEL_28;
  }
  if (*((unsigned char *)v16 + 24) && *((unsigned char *)v14 + 24))
  {
    long long v8 = *v16;
    uint64_t v9 = v16[1];
    int v10 = *v14;
    if (v9 - *v16 != v14[1] - *v14) {
      goto LABEL_28;
    }
    if (v8 != v9)
    {
      while (sub_215AEF77C(v8, v10))
      {
        v8 += 96;
        v10 += 96;
        if (v8 == v9) {
          goto LABEL_22;
        }
      }
      goto LABEL_28;
    }
  }
  else if ((*((unsigned char *)v16 + 24) != 0) != (*((unsigned char *)v14 + 24) != 0))
  {
    goto LABEL_28;
  }
LABEL_22:
  BOOL v11 = (*(unsigned char *)(a1 + 248) != 0) == (*(unsigned char *)(a2 + 248) != 0);
  if (!*(unsigned char *)(a1 + 248) || !*(unsigned char *)(a2 + 248)) {
    goto LABEL_29;
  }
  if (*(void *)(a1 + 208) != *(void *)(a2 + 208))
  {
LABEL_28:
    BOOL v11 = 0;
    goto LABEL_29;
  }
  if (*(unsigned char *)(a1 + 224) && *(unsigned char *)(a2 + 224))
  {
    if (*(void *)(a1 + 216) != *(void *)(a2 + 216)) {
      goto LABEL_28;
    }
  }
  else if ((*(unsigned char *)(a1 + 224) != 0) != (*(unsigned char *)(a2 + 224) != 0))
  {
    goto LABEL_28;
  }
  BOOL v11 = (*(unsigned char *)(a1 + 240) != 0) == (*(unsigned char *)(a2 + 240) != 0);
  if (*(unsigned char *)(a1 + 240) && *(unsigned char *)(a2 + 240)) {
    BOOL v11 = *(void *)(a1 + 232) == *(void *)(a2 + 232);
  }
LABEL_29:
  sub_2157C6F18((uint64_t)v18);
  sub_2157C6F18((uint64_t)v24);
  return v11;
}

void sub_215AB00D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215AB00F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_215AB0108(void *a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B18, 0);
  if (v4) {
    sub_215AB0344((uint64_t)&v11, (uint64_t)v4);
  }
  uint64_t v11 = a2;
  int v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675B60, 0);
  if (v5)
  {
    sub_215AB0C48(&v11, (uint64_t)v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675BE8, 0);
    if (v6) {
      sub_215AB108C((uint64_t)&v11, (uint64_t)v6);
    }
    uint64_t v11 = a2;
    int v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C675C30, 0);
    if (v7)
    {
      sub_215AB1990(&v11, (uint64_t)v7);
    }
    else
    {
      uint64_t v11 = a2;
      long long v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C685210, (const struct __class_type_info *)&unk_26C6833D8, 0);
      if (v8)
      {
        sub_215AB1CF4(&v11, (uint64_t)v8);
      }
      else
      {
        uint64_t v9 = a2 + 16;
        int v10 = *(_DWORD *)(a2 + 192);
        if (v10 == 2)
        {
          uint64_t v11 = a1[1];
          sub_2159D04F0((int *)&v11, (uint64_t)a1, v9);
        }
        else if (v10 == 1)
        {
          uint64_t v11 = a1[1];
          sub_2159CFA30((int *)&v11, a1, v9);
        }
        else
        {
          if (v10) {
            sub_215742D4C();
          }
          uint64_t v11 = a1[1];
          sub_2159AAEAC((int *)&v11, a1, v9);
        }
        uint64_t v11 = a1[1];
        sub_215AB2000((int *)&v11, a1, a2 + 200);
      }
    }
  }
}

void sub_215AB0344(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC088(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEE064(a2, &v11);
        sub_2159A439C(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC088(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEE064(a2, &v11);
    sub_2159CAD4C(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC088(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEE064(a2, &v11);
  sub_2159CB6C8(a2, v3);
}

void sub_215AB05E8(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  sub_215DEC088(a2);
  *(void *)&long long v15 = "version";
  *((void *)&v15 + 1) = 7;
  LODWORD(v16[0]) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v5 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v5) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEE064(a2, v16);
  long long v6 = a3[1];
  long long v15 = *a3;
  v16[0] = v6;
  v16[1] = a3[2];
  uint64_t v17 = *((void *)a3 + 6);
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (int v7 = *(unsigned __int8 *)(a2 + 88),
        *(void *)(a2 + 72) = "initial_sync_command",
        *(void *)(a2 + 80) = 20,
        v7))
  {
    if ((_BYTE)v17) {
      goto LABEL_7;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 88) = 1;
    if ((_BYTE)v17)
    {
LABEL_7:
      uint64_t v13 = *(void *)(a2 + 8);
      sub_215AB07A0(&v13, a2, (long long *)((char *)&v15 + 8));
      uint64_t v8 = *(void *)(a2 + 56);
      *(void *)(a2 + 40) = *(void *)(v8 - 8);
      *(void *)(a2 + 56) = v8 - 8;
      if (!*(unsigned char *)(a2 + 88)) {
        return;
      }
      goto LABEL_8;
    }
  }
  LOBYTE(v13) = 0;
  long long v14 = 0;
  int v9 = (unsigned __int8 *)sub_215DEBCD0(a2);
  int v10 = *v9;
  *int v9 = 0;
  LOBYTE(v13) = v10;
  int v11 = (void **)*((void *)v9 + 1);
  *((void *)v9 + 1) = v14;
  long long v14 = v11;
  sub_215CEB204(&v14, v10);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = *(void *)(v12 - 8);
  *(void *)(a2 + 56) = v12 - 8;
  if (!*(unsigned char *)(a2 + 88)) {
    return;
  }
LABEL_8:
  *(unsigned char *)(a2 + 88) = 0;
}

void sub_215AB0784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB07A0(_DWORD *a1, uint64_t a2, long long *a3)
{
  sub_215DEC088(a2);
  *(void *)&long long v10 = "version";
  *((void *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v6 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v6) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEE064(a2, &v11);
  if (*a1 == 2)
  {
    *(void *)&long long v10 = "min_version";
    *((void *)&v10 + 1) = 11;
    LODWORD(v11) = 1;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v7 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "min_version";
      *(void *)(a2 + 80) = 11;
      if (!v7) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEE064(a2, &v11);
  }
  long long v8 = a3[1];
  long long v10 = *a3;
  long long v11 = v8;
  uint64_t v12 = *((void *)a3 + 4);
  sub_215AB08D4(a2, (uint64_t)&v10);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = *(void *)(v9 - 8);
  *(void *)(a2 + 56) = v9 - 8;
  if (*(unsigned char *)(a2 + 88)) {
    *(unsigned char *)(a2 + 88) = 0;
  }
}

void sub_215AB08D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(void *)(a1 + 72) = "sync_command_id";
    uint64_t v5 = a1 + 72;
    int v7 = (unsigned char *)(a1 + 88);
    int v6 = *(unsigned __int8 *)(a1 + 88);
    *(void *)(a1 + 80) = 15;
    long long v8 = (void *)(a1 + 80);
    if (!v6) {
      *int v7 = 1;
    }
    goto LABEL_13;
  }
  long long v8 = (void *)(a1 + 80);
  uint64_t v5 = a1 + 72;
  int v7 = (unsigned char *)(a1 + 88);
  if (*(unsigned char *)(a1 + 88)) {
    BOOL v9 = *(void *)(a1 + 80) == 7;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v10 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v10 = 0),
        !v10))
  {
LABEL_13:
    uint64_t v27 = *(void ***)a2;
    long long v11 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v12 = *v11;
    *long long v11 = 6;
    uint64_t v13 = (void **)*((void *)v11 + 1);
    *((void *)v11 + 1) = v27;
    uint64_t v27 = v13;
    sub_215CEB204(&v27, v12);
    int v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(void *)v5 = "proceed_n", *long long v8 = 9, v14))
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_17;
    }
LABEL_25:
    char v26 = 0;
    uint64_t v27 = 0;
    long long v16 = (unsigned __int8 *)sub_215DEBCD0(a1);
    goto LABEL_26;
  }
  *int v7 = 1;
  if (!*(unsigned char *)(a2 + 16)) {
    goto LABEL_25;
  }
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v15 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v15 = 0),
        !v15))
  {
    char v26 = 6;
    uint64_t v27 = *(void ***)(a2 + 8);
    long long v16 = (unsigned __int8 *)sub_215DEBCD0(a1);
LABEL_26:
    int v17 = *v16;
    unsigned __int8 *v16 = v26;
    uint64_t v18 = (void **)*((void *)v16 + 1);
    *((void *)v16 + 1) = v27;
    uint64_t v27 = v18;
    sub_215CEB204(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(void *)v5 = "proceed_until", *long long v8 = 13, v19))
  {
    if (*(unsigned char *)(a2 + 32)) {
      goto LABEL_30;
    }
LABEL_38:
    uint64_t v27 = 0;
    char v24 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v22 = *v24;
    *char v24 = 0;
    uint64_t v25 = (void **)*((void *)v24 + 1);
    *((void *)v24 + 1) = v27;
    uint64_t v27 = v25;
    goto LABEL_39;
  }
  *int v7 = 1;
  if (!*(unsigned char *)(a2 + 32)) {
    goto LABEL_38;
  }
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v20 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v20 = 0),
        !v20))
  {
    uint64_t v27 = *(void ***)(a2 + 24);
    uint64_t v21 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v22 = *v21;
    *uint64_t v21 = 6;
    uint64_t v23 = (void **)*((void *)v21 + 1);
    *((void *)v21 + 1) = v27;
    uint64_t v27 = v23;
LABEL_39:
    sub_215CEB204(&v27, v22);
  }
}

void sub_215AB0BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB0BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB0C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB0C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB0C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB0C48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v7 + 40))
    {
      BOOL v20 = (uint64_t *)(v7 + 16);
      sub_215E05FEC(&v20, 4u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v7 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC838(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v8 + 40))
    {
      BOOL v20 = (uint64_t *)(v8 + 16);
      sub_215E05FEC(&v20, 5u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v8 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159CC718(a2, v4, 5u);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    uint64_t v6 = *(void *)(a2 + 24);
    if (*(unsigned char *)(v6 + 40))
    {
      BOOL v20 = (uint64_t *)(v6 + 16);
      sub_215E05FEC(&v20, 6u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v20, v6 + 8);
    }
    sub_215E0076C(*(void *)(a2 + 24));
    sub_2159A6DFC(a2, v4, 6u);
  }
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(*(void *)(v9 + 88) - 8);
  sub_215E001AC((uint64_t *)(v9 + 48), *(void *)(v9 + 16) - v10 - 9);
  size_t v11 = *(void *)(v9 + 48);
  if (v11) {
    memmove((void *)(*(void *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  }
  *(void *)(v9 + 48) = 0;
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = *(void *)(v9 + 88) - 8;
  *(void *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(unsigned char *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(unsigned char *)(v9 + 40) = 0;
    }
  }
  uint64_t v14 = *(void *)(a2 + 24);
  if (*(unsigned char *)(v14 + 40))
  {
    BOOL v20 = (uint64_t *)(v14 + 16);
    sub_215E05FEC(&v20, 1u);
  }
  else
  {
    sub_215E0626C((uint64_t)&v20, v14 + 8);
  }
  sub_215E0076C(*(void *)(a2 + 24));
  sub_215AB0ECC(a2, v3 + 200);
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(*(void *)(v15 + 88) - 8);
  sub_215E001AC((uint64_t *)(v15 + 48), *(void *)(v15 + 16) - v16 - 9);
  size_t v17 = *(void *)(v15 + 48);
  if (v17) {
    memmove((void *)(*(void *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  }
  *(void *)(v15 + 48) = 0;
  uint64_t v18 = *(void *)(v15 + 80);
  uint64_t v19 = *(void *)(v15 + 88) - 8;
  *(void *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(unsigned char *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(unsigned char *)(v15 + 40) = 0;
    }
  }
}

void sub_215AB0ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v3 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v3;
  v13[2] = *(_OWORD *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 48);
  if ((_BYTE)v14)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v4 + 40))
    {
      uint64_t v12 = (uint64_t *)(v4 + 16);
      sub_215E053CC(&v12, 1);
    }
    else
    {
      LOBYTE(v12) = 1;
      std::ostream::write();
    }
    uint64_t v6 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v6 + 40))
    {
      uint64_t v12 = (uint64_t *)(v6 + 16);
      sub_215E05FEC(&v12, 1u);
    }
    else
    {
      sub_215E0626C((uint64_t)&v12, v6 + 8);
    }
    sub_215E0076C(*(void *)(a1 + 24));
    sub_215A8D124(a1, (uint64_t)v13 + 8);
    uint64_t v7 = *(void *)(a1 + 24);
    uint64_t v8 = *(void *)(*(void *)(v7 + 88) - 8);
    sub_215E001AC((uint64_t *)(v7 + 48), *(void *)(v7 + 16) - v8 - 9);
    size_t v9 = *(void *)(v7 + 48);
    if (v9) {
      memmove((void *)(*(void *)(v7 + 24) + v8), *(const void **)(v7 + 56), v9);
    }
    *(void *)(v7 + 48) = 0;
    uint64_t v10 = *(void *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 88) - 8;
    *(void *)(v7 + 88) = v11;
    if (v10 == v11)
    {
      std::ostream::write();
      if (*(unsigned char *)(v7 + 40))
      {
        free(*(void **)(v7 + 24));
        *(unsigned char *)(v7 + 40) = 0;
      }
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v5 + 40))
    {
      uint64_t v12 = (uint64_t *)(v5 + 16);
      sub_215E053CC(&v12, 0);
    }
    else
    {
      std::ostream::write();
    }
  }
}

void sub_215AB108C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1 + 16;
  int v4 = *(_DWORD *)(*(void *)a1 + 192);
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      if (!v4)
      {
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v5 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "info";
          *(void *)(a2 + 80) = 4;
          if (!v5) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEB804(a2);
        int v11 = 6;
        if (**(unsigned __int8 **)(a2 + 40) <= 1u)
        {
          int v6 = *(unsigned __int8 *)(a2 + 88);
          *(void *)(a2 + 72) = "version";
          *(void *)(a2 + 80) = 7;
          if (!v6) {
            *(unsigned char *)(a2 + 88) = 1;
          }
        }
        sub_215DEC344(a2, &v11);
        sub_2159A7F64(a2, v3);
      }
      sub_215742D4C();
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v9 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "info";
      *(void *)(a2 + 80) = 4;
      if (!v9) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEB804(a2);
    int v11 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v10 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "version";
      *(void *)(a2 + 80) = 7;
      if (!v10) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC344(a2, &v11);
    sub_2159CD210(a2, v3);
  }
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v7 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "info";
    *(void *)(a2 + 80) = 4;
    if (!v7) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEB804(a2);
  int v11 = 4;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v8 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v8) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC344(a2, &v11);
  sub_2159CD95C(a2, v3);
}

void sub_215AB1330(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  sub_215DEB804(a2);
  *(void *)&long long v15 = "version";
  *((void *)&v15 + 1) = 7;
  LODWORD(v16[0]) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v5 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v5) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC344(a2, v16);
  long long v6 = a3[1];
  long long v15 = *a3;
  v16[0] = v6;
  v16[1] = a3[2];
  uint64_t v17 = *((void *)a3 + 6);
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (int v7 = *(unsigned __int8 *)(a2 + 88),
        *(void *)(a2 + 72) = "initial_sync_command",
        *(void *)(a2 + 80) = 20,
        v7))
  {
    if ((_BYTE)v17) {
      goto LABEL_7;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 88) = 1;
    if ((_BYTE)v17)
    {
LABEL_7:
      uint64_t v13 = *(void *)(a2 + 8);
      sub_215AB14E8(&v13, a2, (long long *)((char *)&v15 + 8));
      uint64_t v8 = *(void *)(a2 + 56);
      *(void *)(a2 + 40) = *(void *)(v8 - 8);
      *(void *)(a2 + 56) = v8 - 8;
      if (!*(unsigned char *)(a2 + 88)) {
        return;
      }
      goto LABEL_8;
    }
  }
  LOBYTE(v13) = 0;
  uint64_t v14 = 0;
  int v9 = (unsigned __int8 *)sub_215DEB350(a2);
  int v10 = *v9;
  *int v9 = 0;
  LOBYTE(v13) = v10;
  uint64_t v11 = *((void *)v9 + 1);
  *((void *)v9 + 1) = v14;
  uint64_t v14 = v11;
  sub_215CE9D14(&v14, v10);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = *(void *)(v12 - 8);
  *(void *)(a2 + 56) = v12 - 8;
  if (!*(unsigned char *)(a2 + 88)) {
    return;
  }
LABEL_8:
  *(unsigned char *)(a2 + 88) = 0;
}

void sub_215AB14CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB14E8(_DWORD *a1, uint64_t a2, long long *a3)
{
  sub_215DEB804(a2);
  *(void *)&long long v10 = "version";
  *((void *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    int v6 = *(unsigned __int8 *)(a2 + 88);
    *(void *)(a2 + 72) = "version";
    *(void *)(a2 + 80) = 7;
    if (!v6) {
      *(unsigned char *)(a2 + 88) = 1;
    }
  }
  sub_215DEC344(a2, &v11);
  if (*a1 == 2)
  {
    *(void *)&long long v10 = "min_version";
    *((void *)&v10 + 1) = 11;
    LODWORD(v11) = 1;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      int v7 = *(unsigned __int8 *)(a2 + 88);
      *(void *)(a2 + 72) = "min_version";
      *(void *)(a2 + 80) = 11;
      if (!v7) {
        *(unsigned char *)(a2 + 88) = 1;
      }
    }
    sub_215DEC344(a2, &v11);
  }
  long long v8 = a3[1];
  long long v10 = *a3;
  long long v11 = v8;
  uint64_t v12 = *((void *)a3 + 4);
  sub_215AB161C(a2, (uint64_t)&v10);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = *(void *)(v9 - 8);
  *(void *)(a2 + 56) = v9 - 8;
  if (*(unsigned char *)(a2 + 88)) {
    *(unsigned char *)(a2 + 88) = 0;
  }
}

void sub_215AB161C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(void *)(a1 + 72) = "sync_command_id";
    uint64_t v5 = a1 + 72;
    int v7 = (unsigned char *)(a1 + 88);
    int v6 = *(unsigned __int8 *)(a1 + 88);
    *(void *)(a1 + 80) = 15;
    long long v8 = (void *)(a1 + 80);
    if (!v6) {
      *int v7 = 1;
    }
    goto LABEL_13;
  }
  long long v8 = (void *)(a1 + 80);
  uint64_t v5 = a1 + 72;
  int v7 = (unsigned char *)(a1 + 88);
  if (*(unsigned char *)(a1 + 88)) {
    BOOL v9 = *(void *)(a1 + 80) == 7;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v10 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v10 = 0),
        !v10))
  {
LABEL_13:
    uint64_t v27 = *(void *)a2;
    long long v11 = (unsigned __int8 *)sub_215DEB350(a1);
    int v12 = *v11;
    *long long v11 = 6;
    uint64_t v13 = *((void *)v11 + 1);
    *((void *)v11 + 1) = v27;
    uint64_t v27 = v13;
    sub_215CE9D14(&v27, v12);
    int v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(void *)v5 = "proceed_n", *long long v8 = 9, v14))
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_17;
    }
LABEL_25:
    char v26 = 0;
    uint64_t v27 = 0;
    uint64_t v16 = (unsigned __int8 *)sub_215DEB350(a1);
    goto LABEL_26;
  }
  *int v7 = 1;
  if (!*(unsigned char *)(a2 + 16)) {
    goto LABEL_25;
  }
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v15 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v15 = 0),
        !v15))
  {
    char v26 = 6;
    uint64_t v27 = *(void *)(a2 + 8);
    uint64_t v16 = (unsigned __int8 *)sub_215DEB350(a1);
LABEL_26:
    int v17 = *v16;
    unsigned __int8 *v16 = v26;
    uint64_t v18 = *((void *)v16 + 1);
    *((void *)v16 + 1) = v27;
    uint64_t v27 = v18;
    sub_215CE9D14(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(void *)v5 = "proceed_until", *long long v8 = 13, v19))
  {
    if (*(unsigned char *)(a2 + 32)) {
      goto LABEL_30;
    }
LABEL_38:
    uint64_t v27 = 0;
    char v24 = (unsigned __int8 *)sub_215DEB350(a1);
    int v22 = *v24;
    *char v24 = 0;
    uint64_t v25 = *((void *)v24 + 1);
    *((void *)v24 + 1) = v27;
    uint64_t v27 = v25;
    goto LABEL_39;
  }
  *int v7 = 1;
  if (!*(unsigned char *)(a2 + 32)) {
    goto LABEL_38;
  }
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (BOOL v20 = *(_DWORD *)(*(void *)v5 + 3) == *(_DWORD *)"sion")
      : (BOOL v20 = 0),
        !v20))
  {
    uint64_t v27 = *(void *)(a2 + 24);
    uint64_t v21 = (unsigned __int8 *)sub_215DEB350(a1);
    int v22 = *v21;
    *uint64_t v21 = 6;
    uint64_t v23 = *((void *)v21 + 1);
    *((void *)v21 + 1) = v27;
    uint64_t v27 = v23;
LABEL_39:
    sub_215CE9D14(&v27, v22);
  }
}

void sub_215AB1918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB1930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB1948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB1960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AB1978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CE9D14(v9, a9);
  _Unwind_Resume(a1);
}

void *sub_215AB1990(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(void *)(a2 + 40))
    {
      long long v8 = *(void **)(a2 + 24);
      char v16 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v8, (uint64_t)&v16, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CED28(a2, v4, 4u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v5 != 1)
    {
      if (v5) {
        sub_215742D4C();
      }
      if (*(void *)(a2 + 40))
      {
        int v6 = *(void **)(a2 + 24);
        char v14 = *(unsigned char *)(a2 + 32);
        sub_215731D94(v6, (uint64_t)&v14, 1);
      }
      std::ostream::operator<<();
      ++*(void *)(a2 + 40);
      sub_2159A95B4(a2, v4, 6u);
      char v7 = *(unsigned char *)(a2 + 34);
      if (!*(void *)(a2 + 40)) {
        goto LABEL_16;
      }
LABEL_15:
      BOOL v10 = *(void **)(a2 + 24);
      char v17 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v10, (uint64_t)&v17, 1);
      goto LABEL_16;
    }
    if (*(void *)(a2 + 40))
    {
      BOOL v9 = *(void **)(a2 + 24);
      char v15 = *(unsigned char *)(a2 + 32);
      sub_215731D94(v9, (uint64_t)&v15, 1);
    }
    std::ostream::operator<<();
    ++*(void *)(a2 + 40);
    sub_2159CE77C(a2, v4, 5u);
    char v7 = *(unsigned char *)(a2 + 34);
    if (*(void *)(a2 + 40)) {
      goto LABEL_15;
    }
  }
LABEL_16:
  long long v11 = *(void **)(a2 + 24);
  char v18 = v7;
  sub_215731D94(v11, (uint64_t)&v18, 1);
  ++*(void *)(a2 + 40);
  return sub_215AB1B30((uint64_t)&v13, a2, v3 + 200);
}

void *sub_215AB1B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 40))
  {
    int v5 = *(void **)(a2 + 24);
    LOBYTE(v17[0]) = *(unsigned char *)(a2 + 32);
    sub_215731D94(v5, (uint64_t)v17, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a3 + 16);
  v17[0] = *(_OWORD *)a3;
  v17[1] = v6;
  v17[2] = *(_OWORD *)(a3 + 32);
  uint64_t v18 = *(void *)(a3 + 48);
  if (!(_BYTE)v18)
  {
    unsigned __int8 v16 = 0;
    sub_215DF927C(a2, &v16);
    char v12 = *(unsigned char *)(a2 + 34);
    if (!*(void *)(a2 + 40)) {
      goto LABEL_12;
    }
LABEL_11:
    char v13 = *(void **)(a2 + 24);
    LOBYTE(v17[0]) = *(unsigned char *)(a2 + 32);
    sub_215731D94(v13, (uint64_t)v17, 1);
    goto LABEL_12;
  }
  unsigned __int8 v16 = 1;
  sub_215DF927C(a2, &v16);
  if (*(void *)(a2 + 40))
  {
    char v7 = *(void **)(a2 + 24);
    unsigned __int8 v16 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v7, (uint64_t)&v16, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a2 + 40);
  sub_215A8E600(a2, (uint64_t)v17 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 34);
  if (*(void *)(a2 + 40))
  {
    BOOL v9 = *(void **)(a2 + 24);
    unsigned __int8 v16 = *(unsigned char *)(a2 + 32);
    sub_215731D94(v9, (uint64_t)&v16, 1);
  }
  BOOL v10 = *(void **)(a2 + 24);
  unsigned __int8 v16 = v8;
  sub_215731D94(v10, (uint64_t)&v16, 1);
  uint64_t v11 = *(void *)(a2 + 40) + 1;
  *(void *)(a2 + 40) = v11;
  char v12 = *(unsigned char *)(a2 + 34);
  if (v11) {
    goto LABEL_11;
  }
LABEL_12:
  char v14 = *(void **)(a2 + 24);
  LOBYTE(v17[0]) = v12;
  uint64_t result = sub_215731D94(v14, (uint64_t)v17, 1);
  ++*(void *)(a2 + 40);
  return result;
}

char *sub_215AB1CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    LODWORD(v12[0]) = 4;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    unsigned int v7 = v12[0];
    sub_215D02034((void *)a2);
    sub_2159CF4E8(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    LODWORD(v12[0]) = 5;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    unsigned int v8 = v12[0];
    sub_215D02034((void *)a2);
    sub_2159CF3C8(a2, v4, v8);
  }
  else
  {
    if (v5) {
      sub_215742D4C();
    }
    LODWORD(v12[0]) = 6;
    sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    unsigned int v6 = v12[0];
    sub_215D02034((void *)a2);
    sub_2159AA330(a2, v4, v6);
  }
  uint64_t v9 = *(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24);
  *(void *)(v9 + 10) = *(void *)(a2 + 32) - v9 - 18;
  *(void *)(a2 + 56) -= 8;
  LODWORD(v12[0]) = 1;
  sub_215D04A50(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
  sub_215D02034((void *)a2);
  long long v10 = *(_OWORD *)(v3 + 216);
  v12[0] = *(_OWORD *)(v3 + 200);
  v12[1] = v10;
  v12[2] = *(_OWORD *)(v3 + 232);
  uint64_t v13 = *(void *)(v3 + 248);
  uint64_t result = sub_215AB1F04(a2, (char *)v12 + 8);
  *(void *)(*(void *)(*(void *)(a2 + 56) - 8) + *(void *)(a2 + 24) + 10) = *(void *)(a2 + 32)
                                                                                     - (*(void *)(*(void *)(a2 + 56)
                                                                                                  - 8)
                                                                                      + *(void *)(a2 + 24))
                                                                                     - 18;
  *(void *)(a2 + 56) -= 8;
  return result;
}

char *sub_215AB1F04(uint64_t a1, char *a2)
{
  uint64_t v3 = a1 + 24;
  if (a2[40])
  {
    char __src = 1;
    sub_215D04A50(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v9, 1);
    int v9 = 1;
    sub_215D04A50(v3, *(char **)(a1 + 32), (char *)&v9, (char *)&v10, 4);
    sub_215D02034((void *)a1);
    uint64_t result = sub_215A8EC0C(a1, a2);
    uint64_t v6 = *(void *)(*(void *)(a1 + 56) - 8) + *(void *)(a1 + 24);
    *(void *)(v6 + 10) = *(void *)(a1 + 32) - v6 - 18;
    *(void *)(a1 + 56) -= 8;
  }
  else
  {
    char v7 = 0;
    return sub_215D04A50(a1 + 24, *(char **)(a1 + 32), &v7, &__src, 1);
  }
  return result;
}

uint64_t sub_215AB2000(int *a1, void *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  LODWORD(v9[0]) = 1;
  (*(void (**)(void *, _OWORD *))(*a2 + 104))(a2, v9);
  if (*a1 >= 1) {
    return sub_215AB2164(a1, a2, a3);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  v9[0] = *(_OWORD *)a3;
  v9[1] = v7;
  v9[2] = *(_OWORD *)(a3 + 32);
  uint64_t v10 = *(void *)(a3 + 48);
  if ((_BYTE)v10)
  {
    LOBYTE(v8) = 1;
    (*(void (**)(void *, uint64_t *))(*a2 + 80))(a2, &v8);
    uint64_t v8 = a2[1];
    return sub_215A8F0E8((int *)&v8, (uint64_t)a2, (uint64_t)v9 + 8);
  }
  else
  {
    LOBYTE(v8) = 0;
    return (*(uint64_t (**)(void *, uint64_t *))(*a2 + 80))(a2, &v8);
  }
}

uint64_t sub_215AB2164(int *a1, void *a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  int v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10[0]) = 1;
    (*(void (**)(void *, _OWORD *))(*a2 + 104))(a2, v10);
    int v5 = *a1;
  }
  if (v5 > 0) {
    (*(void (**)(void *))(*a2 + 16))(a2);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  v10[0] = *(_OWORD *)a3;
  v10[1] = v7;
  char v10[2] = *(_OWORD *)(a3 + 32);
  uint64_t v11 = *(void *)(a3 + 48);
  if ((_BYTE)v11)
  {
    LOBYTE(v9) = 1;
    (*(void (**)(void *, uint64_t *))(*a2 + 80))(a2, &v9);
    uint64_t v9 = a2[1];
    uint64_t result = sub_215A8F0E8((int *)&v9, (uint64_t)a2, (uint64_t)v10 + 8);
  }
  else
  {
    LOBYTE(v9) = 0;
    uint64_t result = (*(uint64_t (**)(void *, uint64_t *))(*a2 + 80))(a2, &v9);
  }
  if (v5 >= 1) {
    return (*(uint64_t (**)(void *))(*a2 + 24))(a2);
  }
  return result;
}

void sub_215AB2304(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v10 = a2;
  uint64_t v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CB8, 0);
  if (v4) {
    sub_215AB2A10(&v10, (uint64_t)v4);
  }
  uint64_t v10 = a2;
  int v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675CF0, 0);
  if (v5)
  {
    sub_215AB31C4(&v10, v5);
  }
  else
  {
    uint64_t v10 = a2;
    uint64_t v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675D78, 0);
    if (v6) {
      sub_215AB3804(&v10, (uint64_t)v6);
    }
    uint64_t v10 = a2;
    long long v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C675DB0, 0);
    if (v7)
    {
      sub_215AB3FB8(&v10, (uint64_t)v7);
    }
    else
    {
      uint64_t v10 = a2;
      uint64_t v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6851F8, (const struct __class_type_info *)&unk_26C683378, 0);
      if (v8) {
        sub_215AB4748(&v10, v8);
      }
      else {
        sub_215AB24D0(&v9, (void **)a1);
      }
    }
  }
}

uint64_t sub_215AB24D0(uint64_t *a1, void **a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v30);
    sub_2159A3DA4((uint64_t)&v31, v30);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)&v31);
        if (!v46) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v29, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v8;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v37;
    long long v10 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v11;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v12;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v44 + 1);
    unsigned __int8 v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v44;
LABEL_45:
    *((void *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v30);
  sub_2159A3DA4((uint64_t)&v31, v30);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v29, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v17;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v37;
    long long v19 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v20;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v21;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v44 + 1);
    unsigned __int8 v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0) {
    operator delete((void *)v41);
  }
  if (v40 && SHIBYTE(v39) < 0) {
    operator delete((void *)v38);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  sub_2157C6F18((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  char v24 = (void (**)(void **, unsigned int *))*a2;
  v30[0] = (uint64_t)a2[1];
  int v25 = v30[0];
  unsigned int v31 = 6;
  v24[13](a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3) {
      sub_2159B6FFC((uint64_t)&v31, a2, v4, v31);
    }
    else {
      sub_2159B71F0(a2, v4, v31);
    }
  }
  else
  {
    sub_2159B6970((int *)v30, a2, v4, v31);
  }
  char v26 = (void (**)(void **, unsigned int *))*a2;
  v30[0] = (uint64_t)a2[1];
  int v27 = v30[0];
  unsigned int v31 = 1;
  v26[13](a2, &v31);
  if (v27 < 1) {
    return sub_215AB50A0(a2, v3 + 208);
  }
  else {
    return sub_215AB4D60((int *)v30, a2, v3 + 200);
  }
}

void sub_215AB29C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB2A10(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    unsigned __int8 v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF07E4(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF1DC8((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159AC908(a2, v4);
        }
        sub_2159AC714((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  unsigned __int8 v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AB2F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB2F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_215DF07E4(a2);
  *(void *)&long long v10 = "version";
  *((void *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  int v5 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "version";
  *(void *)(a2 + 96) = 7;
  if (!v5) {
    *(unsigned char *)(a2 + 104) = 1;
  }
  sub_215DF1DC8((void *)a2, &v11);
  int v6 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "initial_sync_command";
  *(void *)(a2 + 96) = 20;
  if (v6)
  {
    if (*(unsigned char *)sub_215DF0AA0((void *)a2))
    {
LABEL_5:
      *(void *)&long long v10 = 0;
      BYTE8(v10) = 0;
      LOBYTE(v11) = 0;
      BYTE8(v11) = 0;
      LOBYTE(v12) = 0;
      uint64_t v13 = *(void *)(a2 + 8);
      sub_215AB3088((int *)&v13, a2, (uint64_t)&v10);
      long long v7 = v11;
      *(_OWORD *)(a3 + 8) = v10;
      *(_OWORD *)(a3 + 24) = v7;
      *(void *)(a3 + 40) = v12;
      *(unsigned char *)(a3 + 48) = 1;
      goto LABEL_9;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 104) = 1;
    if (*(unsigned char *)sub_215DF0AA0((void *)a2)) {
      goto LABEL_5;
    }
  }
  ++*(void *)(a2 + 112);
  if (*(unsigned char *)(a3 + 48)) {
    *(unsigned char *)(a3 + 48) = 0;
  }
LABEL_9:
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a2 + 112) = *(void *)(v9 - 8);
  *(void *)(a2 + 48) = v8 - 8;
  *(void *)(a2 + 72) = v9 - 8;
}

void sub_215AB3088(int *a1, uint64_t a2, uint64_t a3)
{
  sub_215DF07E4(a2);
  unsigned int v13 = 1;
  int v6 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "version";
  *(void *)(a2 + 96) = 7;
  if (v6)
  {
    sub_215DF1DC8((void *)a2, &v13);
    int v7 = *a1;
    if (*a1 < 1) {
      goto LABEL_9;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 104) = 1;
    sub_215DF1DC8((void *)a2, &v13);
    int v7 = *a1;
    if (*a1 < 1) {
      goto LABEL_9;
    }
  }
  if (v7 == 2)
  {
    unsigned int v13 = 1;
    int v8 = *(unsigned __int8 *)(a2 + 104);
    *(void *)(a2 + 88) = "min_version";
    *(void *)(a2 + 96) = 11;
    if (!v8) {
      *(unsigned char *)(a2 + 104) = 1;
    }
    sub_215DF1DC8((void *)a2, &v13);
    unsigned int v9 = v13;
    if (v13 >= 2)
    {
      uint64_t v12 = sub_215A93A64();
      sub_215E07C10((std::string *)v12, v9, 1u);
    }
  }
LABEL_9:
  sub_215A90690(a2, a3);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a2 + 112) = *(void *)(v11 - 8);
  *(void *)(a2 + 48) = v10 - 8;
  *(void *)(a2 + 72) = v11 - 8;
}

uint64_t sub_215AB31C4(uint64_t *a1, void *a2)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v29, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v29);
        if (!v44) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(unsigned char *)(v3 + 64) = 0;
    if (v33)
    {
      uint64_t v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(void *)(v3 + 56) = v8;
      long long v31 = 0uLL;
      uint64_t v32 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v35;
    long long v10 = v34;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v38)
    {
      uint64_t v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(void *)(v3 + 112) = v11;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v41)
    {
      uint64_t v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(void *)(v3 + 144) = v12;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(void *)(v3 + 176) = v43;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v42;
    if (!(void)v42) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v42 + 1);
    unsigned __int8 v16 = (void *)v42;
    if (*((void *)&v42 + 1) == (void)v42) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v42;
LABEL_45:
    *((void *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v29, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(unsigned char *)(v3 + 64) = 0;
    if (v33)
    {
      uint64_t v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(void *)(v3 + 56) = v17;
      long long v31 = 0uLL;
      uint64_t v32 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v35;
    long long v19 = v34;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v38)
    {
      uint64_t v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(void *)(v3 + 112) = v20;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v41)
    {
      uint64_t v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(void *)(v3 + 144) = v21;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(void *)(v3 + 176) = v43;
      long long v42 = 0uLL;
      uint64_t v43 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    uint64_t v14 = v42;
    if (!(void)v42) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v42 + 1);
    unsigned __int8 v16 = (void *)v42;
    if (*((void *)&v42 + 1) == (void)v42) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0) {
    operator delete((void *)v39);
  }
  if (v38 && SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
  if (v33 && SHIBYTE(v32) < 0) {
    operator delete((void *)v31);
  }
  sub_2157C6F18((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159AFF3C((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_215DFF824(a2[6], v28);
  sub_2159B0060(a2 + 2);
  sub_215AB36D0(a2, v3 + 208);
  uint64_t v24 = a2[4];
  uint64_t result = (*(uint64_t (**)(void *))(a2[2] + 32))(a2 + 2);
  uint64_t v26 = *(void *)(v24 - 16) - result + *(void *)(v24 - 8);
  if (v26) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  }
  a2[4] -= 16;
  return result;
}

void sub_215AB3688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB36D0(void *a1, uint64_t a2)
{
  char v6 = 0;
  sub_215DFF4BC(a1[6], &v6);
  if (v6)
  {
    if (!*(unsigned char *)(a2 + 40))
    {
      *(void *)a2 = 0;
      *(unsigned char *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    int v7 = 1;
    sub_215DFF824(a1[6], &v7);
    sub_2159B0060(a1 + 2);
    sub_215A910B8((uint64_t)a1, a2);
    uint64_t v4 = a1[4];
    uint64_t v5 = *(void *)(v4 - 16) - (*(uint64_t (**)(void *))(a1[2] + 32))(a1 + 2) + *(void *)(v4 - 8);
    if (v5) {
      (*(void (**)(void *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    }
    a1[4] -= 16;
  }
  else if (*(unsigned char *)(a2 + 40))
  {
    *(unsigned char *)(a2 + 40) = 0;
  }
}

void sub_215AB3804(uint64_t *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v28);
    sub_2159A3DA4((uint64_t)v30, v28);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v30);
        if (!v45) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v27, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(unsigned char *)(v3 + 64) = 0;
    if (v34)
    {
      uint64_t v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(void *)(v3 + 56) = v8;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v36;
    long long v10 = v35;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v39)
    {
      uint64_t v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(void *)(v3 + 112) = v11;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v42)
    {
      uint64_t v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(void *)(v3 + 144) = v12;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(void *)(v3 + 176) = v44;
      long long v43 = 0uLL;
      uint64_t v44 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v43;
    if (!(void)v43) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v43 + 1);
    unsigned __int8 v16 = (void *)v43;
    if (*((void *)&v43 + 1) == (void)v43) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v43;
LABEL_45:
    *((void *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v28);
  sub_2159A3DA4((uint64_t)v30, v28);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 != -1)
  {
    if (!v7)
    {
      sub_2159ADAB8(v4, (uint64_t)v30);
      if (!v45)
      {
LABEL_46:
        if (v42 && SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        if (v39 && SHIBYTE(v38) < 0) {
          operator delete((void *)v37);
        }
        if (v34 && SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        sub_2157C6F18((uint64_t)v28);
        if (*(_DWORD *)(v3 + 192)) {
          sub_215742D4C();
        }
LABEL_56:
        int v24 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "info";
        *(void *)(a2 + 96) = 4;
        if (!v24) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF01A0(a2);
        v28[0] = (uint64_t)"version";
        v28[1] = 7;
        v29[0] = 6;
        int v25 = *(unsigned __int8 *)(a2 + 104);
        *(void *)(a2 + 88) = "version";
        *(void *)(a2 + 96) = 7;
        if (!v25) {
          *(unsigned char *)(a2 + 104) = 1;
        }
        sub_215DF0F9C((void *)a2, v29);
        if (v29[0] >= 6) {
          unsigned int v26 = 6;
        }
        else {
          unsigned int v26 = v29[0];
        }
        if (v26 >= 3) {
          sub_2159B191C(a2, v4);
        }
        sub_2159B1728((uint64_t)v28, a2);
      }
      goto LABEL_38;
    }
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v27, v4);
  }
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 192) = -1;
  *(_OWORD *)(v3 + 24) = v31;
  *(unsigned char *)(v3 + 64) = 0;
  if (v34)
  {
    uint64_t v17 = v33;
    *(_OWORD *)(v3 + 40) = v32;
    *(void *)(v3 + 56) = v17;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *(unsigned char *)(v3 + 64) = 1;
  }
  uint64_t v18 = v36;
  long long v19 = v35;
  *(unsigned char *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 72) = v19;
  *(void *)(v3 + 88) = v18;
  *(unsigned char *)(v3 + 120) = 0;
  if (v39)
  {
    uint64_t v20 = v38;
    *(_OWORD *)(v3 + 96) = v37;
    *(void *)(v3 + 112) = v20;
    long long v37 = 0uLL;
    uint64_t v38 = 0;
    *(unsigned char *)(v3 + 120) = 1;
  }
  *(unsigned char *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (v42)
  {
    uint64_t v21 = v41;
    *(_OWORD *)(v3 + 128) = v40;
    *(void *)(v3 + 144) = v21;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  int v22 = v45;
  if (v45)
  {
    *(_OWORD *)(v3 + 160) = v43;
    *(void *)(v3 + 176) = v44;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *(unsigned char *)(v3 + 184) = 1;
  }
  *(_DWORD *)(v3 + 192) = 0;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  uint64_t v14 = v43;
  if (!(void)v43) {
    goto LABEL_46;
  }
  uint64_t v23 = *((void *)&v43 + 1);
  unsigned __int8 v16 = (void *)v43;
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_45;
  }
  do
  {
    if (*(char *)(v23 - 1) < 0) {
      operator delete(*(void **)(v23 - 24));
    }
    v23 -= 24;
  }
  while (v23 != v14);
  goto LABEL_44;
}

void sub_215AB3D04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB3D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_215DF01A0(a2);
  *(void *)&long long v10 = "version";
  *((void *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  int v5 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "version";
  *(void *)(a2 + 96) = 7;
  if (!v5) {
    *(unsigned char *)(a2 + 104) = 1;
  }
  sub_215DF0F9C((void *)a2, &v11);
  int v6 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "initial_sync_command";
  *(void *)(a2 + 96) = 20;
  if (v6)
  {
    if (*(unsigned char *)sub_215DF045C((void *)a2))
    {
LABEL_5:
      *(void *)&long long v10 = 0;
      BYTE8(v10) = 0;
      LOBYTE(v11) = 0;
      BYTE8(v11) = 0;
      LOBYTE(v12) = 0;
      uint64_t v13 = *(void *)(a2 + 8);
      sub_215AB3E7C((int *)&v13, a2, (uint64_t)&v10);
      long long v7 = v11;
      *(_OWORD *)(a3 + 8) = v10;
      *(_OWORD *)(a3 + 24) = v7;
      *(void *)(a3 + 40) = v12;
      *(unsigned char *)(a3 + 48) = 1;
      goto LABEL_9;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 104) = 1;
    if (*(unsigned char *)sub_215DF045C((void *)a2)) {
      goto LABEL_5;
    }
  }
  ++*(void *)(a2 + 112);
  if (*(unsigned char *)(a3 + 48)) {
    *(unsigned char *)(a3 + 48) = 0;
  }
LABEL_9:
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a2 + 112) = *(void *)(v9 - 8);
  *(void *)(a2 + 48) = v8 - 8;
  *(void *)(a2 + 72) = v9 - 8;
}

void sub_215AB3E7C(int *a1, uint64_t a2, uint64_t a3)
{
  sub_215DF01A0(a2);
  unsigned int v13 = 1;
  int v6 = *(unsigned __int8 *)(a2 + 104);
  *(void *)(a2 + 88) = "version";
  *(void *)(a2 + 96) = 7;
  if (v6)
  {
    sub_215DF0F9C((void *)a2, &v13);
    int v7 = *a1;
    if (*a1 < 1) {
      goto LABEL_9;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 104) = 1;
    sub_215DF0F9C((void *)a2, &v13);
    int v7 = *a1;
    if (*a1 < 1) {
      goto LABEL_9;
    }
  }
  if (v7 == 2)
  {
    unsigned int v13 = 1;
    int v8 = *(unsigned __int8 *)(a2 + 104);
    *(void *)(a2 + 88) = "min_version";
    *(void *)(a2 + 96) = 11;
    if (!v8) {
      *(unsigned char *)(a2 + 104) = 1;
    }
    sub_215DF0F9C((void *)a2, &v13);
    unsigned int v9 = v13;
    if (v13 >= 2)
    {
      uint64_t v12 = sub_215A93A64();
      sub_215E07C10((std::string *)v12, v9, 1u);
    }
  }
LABEL_9:
  sub_215A91AC8(a2, a3);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a2 + 112) = *(void *)(v11 - 8);
  *(void *)(a2 + 48) = v10 - 8;
  *(void *)(a2 + 72) = v11 - 8;
}

void sub_215AB3FB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)__p);
    sub_2159A3DA4((uint64_t)v31, (uint64_t *)__p);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v31);
        if (!v46) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v28, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v8;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v37;
    long long v10 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v11;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v12;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v44 + 1);
    unsigned __int8 v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v44;
LABEL_45:
    *((void *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)__p);
  sub_2159A3DA4((uint64_t)v31, (uint64_t *)__p);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v28, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(unsigned char *)(v3 + 64) = 0;
    if (v35)
    {
      uint64_t v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(void *)(v3 + 56) = v17;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v37;
    long long v19 = v36;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v40)
    {
      uint64_t v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(void *)(v3 + 112) = v20;
      long long v38 = 0uLL;
      uint64_t v39 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v43)
    {
      uint64_t v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(void *)(v3 + 144) = v21;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(void *)(v3 + 176) = v45;
      long long v44 = 0uLL;
      uint64_t v45 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    uint64_t v14 = v44;
    if (!(void)v44) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v44 + 1);
    unsigned __int8 v16 = (void *)v44;
    if (*((void *)&v44 + 1) == (void)v44) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0) {
    operator delete((void *)v41);
  }
  if (v40 && SHIBYTE(v39) < 0) {
    operator delete((void *)v38);
  }
  if (v35 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  sub_2157C6F18((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_215DFABD4(a2, __p);
  unsigned int v24 = __p[0];
  if (LODWORD(__p[0]) >= 6) {
    unsigned int v25 = 6;
  }
  else {
    unsigned int v25 = __p[0];
  }
  if (v25 < 3) {
    sub_2159B3640((uint64_t)__p, a2, v4, v25);
  }
  else {
    sub_2159B3834(a2, v4, v25);
  }
  if (v24 >= 3 && !*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          char v27 = 0;
          if (v30 < 0) {
            goto LABEL_79;
          }
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      char v27 = 1;
      if (v30 < 0) {
LABEL_79:
      }
        operator delete(__p[0]);
LABEL_65:
      if (*(unsigned char *)(a2 + 131)) {
        char v26 = 0;
      }
      else {
        char v26 = v27;
      }
    }
    while ((v26 & 1) != 0);
  }
  LODWORD(__p[0]) = 1;
  sub_215DFABD4(a2, __p);
  sub_215AB453C((uint64_t)__p, a2, v3 + 200);
}

void sub_215AB44F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB453C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = 0;
  sub_215DFA01C(a2, &v9);
  if (v9)
  {
    if (!*(unsigned char *)(a3 + 48))
    {
      *(void *)(a3 + 8) = 0;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 24) = 0;
      *(unsigned char *)(a3 + 32) = 0;
      *(unsigned char *)(a3 + 40) = 0;
      *(unsigned char *)(a3 + 48) = 1;
    }
    LODWORD(__p) = 1;
    sub_215DFABD4(a2, &__p);
    sub_215A92620(a2, a3 + 8);
    if (!*(unsigned char *)(a2 + 131))
    {
      do
      {
        if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
          break;
        }
        sub_215DFD700(a2, (uint64_t)&__p);
        if (v12 < 0)
        {
          if (v11 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
          {
LABEL_17:
            char v6 = 0;
            if (v12 < 0) {
              goto LABEL_20;
            }
            goto LABEL_6;
          }
        }
        else if (v12 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
        {
          goto LABEL_17;
        }
        char v6 = 1;
        if (v12 < 0) {
LABEL_20:
        }
          operator delete(__p);
LABEL_6:
        if (*(unsigned char *)(a2 + 131)) {
          char v5 = 0;
        }
        else {
          char v5 = v6;
        }
      }
      while ((v5 & 1) != 0);
    }
  }
  else if (*(unsigned char *)(a3 + 48))
  {
    *(unsigned char *)(a3 + 48) = 0;
  }
  if (!*(unsigned char *)(a2 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(a2 + 16) + *(void *)(**(void **)(a2 + 16) - 24) + 32) & 2) != 0) {
        return;
      }
      sub_215DFD700(a2, (uint64_t)&__p);
      if (v12 < 0)
      {
        if (v11 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_36:
          char v8 = 0;
          if (v12 < 0) {
            goto LABEL_39;
          }
          goto LABEL_25;
        }
      }
      else if (v12 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_36;
      }
      char v8 = 1;
      if (v12 < 0) {
LABEL_39:
      }
        operator delete(__p);
LABEL_25:
      if (*(unsigned char *)(a2 + 131)) {
        char v7 = 0;
      }
      else {
        char v7 = v8;
      }
    }
    while ((v7 & 1) != 0);
  }
}

void *sub_215AB4748(uint64_t *a1, void *a2)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  int v5 = *(_DWORD *)(*a1 + 192);
  if (!v5) {
    goto LABEL_56;
  }
  if (v5 == 1)
  {
    sub_2159CA9D4(*a1 + 16, (uint64_t)v26);
    sub_2159A3DA4((uint64_t)v27, v26);
    uint64_t v6 = *(unsigned int *)(v3 + 192);
    if (v6 != -1)
    {
      if (!v6)
      {
        sub_2159ADAB8(v4, (uint64_t)v27);
        if (!v42) {
          goto LABEL_46;
        }
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_26C674B60[v6])(&v25, v4);
    }
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(unsigned char *)(v3 + 64) = 0;
    if (v31)
    {
      uint64_t v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(void *)(v3 + 56) = v8;
      long long v29 = 0uLL;
      uint64_t v30 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v9 = v33;
    long long v10 = v32;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(void *)(v3 + 88) = v9;
    *(unsigned char *)(v3 + 120) = 0;
    if (v36)
    {
      uint64_t v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(void *)(v3 + 112) = v11;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v39)
    {
      uint64_t v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(void *)(v3 + 144) = v12;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(void *)(v3 + 176) = v41;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13) {
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v14 = v40;
    if (!(void)v40) {
      goto LABEL_46;
    }
    uint64_t v15 = *((void *)&v40 + 1);
    unsigned __int8 v16 = (void *)v40;
    if (*((void *)&v40 + 1) == (void)v40) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    unsigned __int8 v16 = (void *)v40;
LABEL_45:
    *((void *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2) {
    sub_215742D4C();
  }
  sub_21598FB5C(*a1 + 16, (uint64_t)v26);
  sub_2159A3DA4((uint64_t)v27, v26);
  uint64_t v7 = *(unsigned int *)(v3 + 192);
  if (v7 == -1) {
    goto LABEL_29;
  }
  if (v7)
  {
    ((void (*)(char *, uint64_t))off_26C674B60[v7])(&v25, v4);
LABEL_29:
    *(unsigned char *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(unsigned char *)(v3 + 64) = 0;
    if (v31)
    {
      uint64_t v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(void *)(v3 + 56) = v17;
      long long v29 = 0uLL;
      uint64_t v30 = 0;
      *(unsigned char *)(v3 + 64) = 1;
    }
    uint64_t v18 = v33;
    long long v19 = v32;
    *(unsigned char *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(void *)(v3 + 88) = v18;
    *(unsigned char *)(v3 + 120) = 0;
    if (v36)
    {
      uint64_t v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(void *)(v3 + 112) = v20;
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      *(unsigned char *)(v3 + 120) = 1;
    }
    *(unsigned char *)(v3 + 128) = 0;
    *(unsigned char *)(v3 + 152) = 0;
    if (v39)
    {
      uint64_t v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(void *)(v3 + 144) = v21;
      long long v37 = 0uLL;
      uint64_t v38 = 0;
      *(unsigned char *)(v3 + 152) = 1;
    }
    *(unsigned char *)(v3 + 160) = 0;
    *(unsigned char *)(v3 + 184) = 0;
    int v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(void *)(v3 + 176) = v41;
      long long v40 = 0uLL;
      uint64_t v41 = 0;
      *(unsigned char *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_38;
  }
  sub_2159ADAB8(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    uint64_t v14 = v40;
    if (!(void)v40) {
      goto LABEL_46;
    }
    uint64_t v23 = *((void *)&v40 + 1);
    unsigned __int8 v16 = (void *)v40;
    if (*((void *)&v40 + 1) == (void)v40) {
      goto LABEL_45;
    }
    do
    {
      if (*(char *)(v23 - 1) < 0) {
        operator delete(*(void **)(v23 - 24));
      }
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
  if (v36 && SHIBYTE(v35) < 0) {
    operator delete((void *)v34);
  }
  if (v31 && SHIBYTE(v30) < 0) {
    operator delete((void *)v29);
  }
  sub_2157C6F18((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192)) {
    sub_215742D4C();
  }
LABEL_56:
  sub_2159B5060((uint64_t)v26, a2, v4);
  return sub_215AB4BC0((uint64_t)v26, a2, v3 + 200);
}

void sub_215AB4B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AB4BC0(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a2[6];
  unint64_t v4 = a2[7];
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  a2[6] = v3 + 4;
  sub_215D02644(a2);
  uint64_t result = sub_215AB4C84(a2, a3 + 8);
  uint64_t v10 = a2[12];
  uint64_t v11 = a2[9];
  a2[6] = *(void *)(v10 - 8) + *(void *)(v11 - 8) + 8;
  a2[9] = v11 - 8;
  a2[12] = v10 - 8;
  return result;
}

void sub_215AB4C70(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_215AB4C84(void *result, uint64_t a2)
{
  unint64_t v2 = result[6];
  if (result[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  int v3 = *(unsigned __int8 *)(result[3] + v2);
  result[6] = v2 + 1;
  if (v3)
  {
    if (!*(unsigned char *)(a2 + 40))
    {
      *(void *)a2 = 0;
      *(unsigned char *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    return sub_215A92F4C((uint64_t)&v5, result, (void *)a2);
  }
  else if (*(unsigned char *)(a2 + 40))
  {
    *(unsigned char *)(a2 + 40) = 0;
  }
  return result;
}

void sub_215AB4D4C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB4D60(int *a1, void *a2, uint64_t a3)
{
  int v5 = *a1;
  if (*a1 == 2)
  {
    unsigned int v10 = 1;
    (*(void (**)(void *, unsigned int *))(*a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      unsigned int v8 = v10;
      uint64_t v9 = sub_215AB4E84();
      sub_215E07C10((std::string *)v9, v8, 1u);
    }
    int v5 = *a1;
  }
  if (v5 <= 0) {
    return sub_215AB50A0(a2, a3 + 8);
  }
  (*(void (**)(void *))(*a2 + 16))(a2);
  sub_215AB50A0(a2, a3 + 8);
  return (*(uint64_t (**)(void *))(*a2 + 24))(a2);
}

long long *sub_215AB4E84()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888D20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888D20))
  {
    return &xmmword_267888D08;
  }
  uint64_t v1 = (char *)sub_215AB4F6C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267888D08, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267888D18 = *((void *)v1 + 2);
    xmmword_267888D08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267888D08, &dword_21572C000);
  __cxa_guard_release(&qword_267888D20);
  return &xmmword_267888D08;
}

void sub_215AB4F54(_Unwind_Exception *a1)
{
}

void *sub_215AB4F6C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888D40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267888D40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateSyncConfigurationSample]", qword_267888D28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267888D28, &dword_21572C000);
    __cxa_guard_release(&qword_267888D40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267888D60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267888D60))
  {
    return &unk_267888D48;
  }
  sub_215E19DF4((uint64_t)qword_267888D28, (uint64_t)&unk_267888D48);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267888D48, &dword_21572C000);
  __cxa_guard_release(&qword_267888D60);
  return &unk_267888D48;
}

void sub_215AB5070(_Unwind_Exception *a1)
{
}

void sub_215AB5088(_Unwind_Exception *a1)
{
}

uint64_t sub_215AB50A0(void *a1, uint64_t a2)
{
  char v7 = 0;
  uint64_t result = (*(uint64_t (**)(void *, char *))(*a1 + 80))(a1, &v7);
  if (v7)
  {
    if (!*(unsigned char *)(a2 + 40))
    {
      *(void *)a2 = 0;
      *(unsigned char *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    uint64_t v5 = *a1;
    *(void *)unsigned int v8 = a1[1];
    int v6 = v8[0];
    int v9 = 1;
    (*(void (**)(void *, int *))(v5 + 104))(a1, &v9);
    if (v6 < 1) {
      return sub_215A93C80((uint64_t)a1, a2);
    }
    else {
      return sub_215A9392C(v8, (uint64_t)a1, a2);
    }
  }
  else if (*(unsigned char *)(a2 + 40))
  {
    *(unsigned char *)(a2 + 40) = 0;
  }
  return result;
}

void *sub_215AB51C0(void *a1, unsigned int *a2)
{
  uint64_t v3 = *a2;
  if (v3 >= 0xE
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/DataType.cpp", 43, (uint64_t)"idx < static_cast<uint32_t>(DataType::End)", 42, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v4 = (uint64_t *)&(&off_26425A730)[2 * v3];
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];

  return sub_215731D94(a1, v5, v6);
}

char *sub_215AB5250(unsigned int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&unk_26788E8B0, memory_order_acquire) & 1) == 0)
  {
    unsigned int v2 = a1;
    int v3 = __cxa_guard_acquire((__guard *)&unk_26788E8B0);
    a1 = v2;
    if (v3)
    {
      sub_215AB5300(0, 13);
      __cxa_atexit((void (*)(void *))sub_215AB55B4, &xmmword_26788E8B8, &dword_21572C000);
      __cxa_guard_release((__guard *)&unk_26788E8B0);
      a1 = v2;
    }
  }
  if (a1 >= 0xE) {
    return 0;
  }
  else {
    return (char *)&unk_26788E8B0 + 32 * a1 - 24;
  }
}

uint64_t sub_215AB5300(uint64_t a1, uint64_t a2)
{
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  if (a1 == a2)
  {
    int v2 = 0;
    int v3 = 0;
    int v4 = 0;
    int v5 = 0;
    int v6 = 0;
    int v7 = 0;
    int v8 = 0;
    int v9 = 0;
    int v10 = 0;
    int v11 = 0;
    int v12 = 0;
    int v13 = 0;
    int v14 = 0;
  }
  else
  {
    uint64_t v16 = a1;
    uint64_t v17 = (void **)&v20 + 1;
    do
    {
      if (*((char *)v17 - 1) < 0) {
        operator delete(*(v17 - 3));
      }
      ++v16;
      strcpy((char *)v17 - 24, "cv3d.viz");
      *((unsigned char *)v17 - 1) = 8;
      *(_DWORD *)uint64_t v17 = v16;
      v17 += 4;
    }
    while (a2 != v16);
    int v14 = DWORD2(v20);
    int v13 = DWORD2(v22);
    int v12 = DWORD2(v24);
    int v11 = DWORD2(v26);
    int v10 = DWORD2(v28);
    int v9 = DWORD2(v30);
    int v8 = DWORD2(v32);
    int v7 = DWORD2(v34);
    int v6 = DWORD2(v36);
    int v5 = DWORD2(v38);
    int v4 = DWORD2(v40);
    int v3 = DWORD2(v42);
    int v2 = DWORD2(v44);
  }
  xmmword_26788E8B8 = v19;
  qword_26788E8C8 = v20;
  long long v19 = 0uLL;
  dword_26788E8D0 = v14;
  xmmword_26788E8D8 = v21;
  qword_26788E8E8 = v22;
  *(void *)&long long v20 = 0;
  long long v21 = 0uLL;
  *(void *)&long long v22 = 0;
  dword_26788E8F0 = v13;
  qword_26788E908 = v24;
  xmmword_26788E8F8 = v23;
  long long v23 = 0uLL;
  dword_26788E910 = v12;
  qword_26788E928 = v26;
  xmmword_26788E918 = v25;
  *(void *)&long long v24 = 0;
  long long v25 = 0uLL;
  *(void *)&long long v26 = 0;
  dword_26788E930 = v11;
  qword_26788E948 = v28;
  xmmword_26788E938 = v27;
  long long v27 = 0uLL;
  dword_26788E950 = v10;
  qword_26788E968 = v30;
  xmmword_26788E958 = v29;
  *(void *)&long long v28 = 0;
  long long v29 = 0uLL;
  *(void *)&long long v30 = 0;
  dword_26788E970 = v9;
  qword_26788E988 = v32;
  xmmword_26788E978 = v31;
  long long v31 = 0uLL;
  dword_26788E990 = v8;
  qword_26788E9A8 = v34;
  xmmword_26788E998 = v33;
  *(void *)&long long v32 = 0;
  long long v33 = 0uLL;
  *(void *)&long long v34 = 0;
  dword_26788E9B0 = v7;
  qword_26788E9C8 = v36;
  xmmword_26788E9B8 = v35;
  long long v35 = 0uLL;
  dword_26788E9D0 = v6;
  qword_26788E9E8 = v38;
  xmmword_26788E9D8 = v37;
  *(void *)&long long v36 = 0;
  long long v37 = 0uLL;
  *(void *)&long long v38 = 0;
  dword_26788E9F0 = v5;
  qword_26788EA08 = v40;
  xmmword_26788E9F8 = v39;
  long long v39 = 0uLL;
  dword_26788EA10 = v4;
  qword_26788EA28 = v42;
  xmmword_26788EA18 = v41;
  *(void *)&long long v40 = 0;
  long long v41 = 0uLL;
  *(void *)&long long v42 = 0;
  dword_26788EA30 = v3;
  qword_26788EA48 = v44;
  xmmword_26788EA38 = v43;
  long long v43 = 0uLL;
  *(void *)&long long v44 = 0;
  dword_26788EA50 = v2;
  return sub_215AB55B8((uint64_t)&v19);
}

uint64_t sub_215AB55B8(uint64_t a1)
{
  if (*(char *)(a1 + 407) < 0)
  {
    operator delete(*(void **)(a1 + 384));
    if ((*(char *)(a1 + 375) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 343) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(char *)(a1 + 375) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 352));
  if ((*(char *)(a1 + 343) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 311) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(a1 + 320));
  if ((*(char *)(a1 + 311) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 279) & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(a1 + 288));
  if ((*(char *)(a1 + 279) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 247) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(a1 + 256));
  if ((*(char *)(a1 + 247) & 0x80000000) == 0)
  {
LABEL_7:
    if ((*(char *)(a1 + 215) & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(*(void **)(a1 + 224));
  if ((*(char *)(a1 + 215) & 0x80000000) == 0)
  {
LABEL_8:
    if ((*(char *)(a1 + 183) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(*(void **)(a1 + 192));
  if ((*(char *)(a1 + 183) & 0x80000000) == 0)
  {
LABEL_9:
    if ((*(char *)(a1 + 151) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(*(void **)(a1 + 160));
  if ((*(char *)(a1 + 151) & 0x80000000) == 0)
  {
LABEL_10:
    if ((*(char *)(a1 + 119) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(*(void **)(a1 + 128));
  if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
LABEL_11:
    if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_12:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_27;
  }
LABEL_25:
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
LABEL_27:
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_215AB571C(uint64_t a1, void *a2, void *a3, long long *a4, void *a5)
{
  int v10 = (void *)sub_2157322DC(a1, 1);
  *int v10 = &unk_26C677690;
  uint64_t v11 = a2[1];
  char v10[2] = *a2;
  _OWORD v10[3] = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = a3[1];
  *(void *)(a1 + 32) = *a3;
  *(void *)(a1 + 40) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 16), 1uLL, memory_order_relaxed);
  }
  if (*((unsigned char *)a4 + 24))
  {
    if (*((char *)a4 + 23) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 48), *(void **)a4, *((void *)a4 + 1));
    }
    else
    {
      long long v13 = *a4;
      *(void *)(a1 + 64) = *((void *)a4 + 2);
      *(_OWORD *)(a1 + 48) = v13;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 71) = 4;
    strcpy((char *)(a1 + 48), "logs");
  }
  if (*a5)
  {
    uint64_t v14 = a5[1];
    *(void *)(a1 + 72) = *a5;
    *(void *)(a1 + 80) = v14;
    if (v14) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
    }
    return a1;
  }
  else
  {
    uint64_t v16 = operator new(0x20uLL);
    v16[1] = 0;
    _OWORD v16[2] = 0;
    void *v16 = &unk_26C6776D8;
    v16[3] = &unk_26C6835D0;
    *(void *)(a1 + 72) = v16 + 3;
    *(void *)(a1 + 80) = v16;
    return a1;
  }
}

void sub_215AB5890(_Unwind_Exception *a1)
{
  int v4 = *(std::__shared_weak_count **)(v1 + 40);
  if (!v4)
  {
    sub_215733368(v2);
    nullsub_2(v1);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::__release_weak(v4);
  sub_215733368(v2);
  nullsub_2(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB58F8(uint64_t a1)
{
  *(void *)a1 = &unk_26C677690;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    int v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v3) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_4:
  int v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3) {
LABEL_5:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_6:
  int v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = a1;
  }
  else
  {
    uint64_t v5 = a1;
  }
  return nullsub_2(v5);
}

void sub_215AB5A2C(uint64_t a1)
{
  sub_215AB58F8(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215AB5A64(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  int v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = std::__shared_weak_count::lock(v3);
    uint64_t v50 = v5;
    if (v5)
    {
      if (*(void *)(a1 + 32))
      {
        if (*(char *)(a1 + 71) < 0)
        {
          uint64_t v6 = *(void *)(a1 + 48);
          uint64_t v7 = *(void *)(a1 + 56);
        }
        else
        {
          uint64_t v6 = a1 + 48;
          uint64_t v7 = *(unsigned __int8 *)(a1 + 71);
        }
        uint64_t v9 = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 16) + 48))(*(void *)(a1 + 16), v6, v7);
        (*(uint64_t (**)(uint64_t))(*(void *)v9 + 56))(v9);
        int v10 = *(const char **)a2;
        size_t v11 = strlen(*(const char **)a2);
        if (v11 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        size_t v12 = v11;
        if (v11 >= 0x17)
        {
          uint64_t v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v11 | 7) != 0x17) {
            uint64_t v14 = v11 | 7;
          }
          uint64_t v15 = v14 + 1;
          p_dst = (long long *)operator new(v14 + 1);
          *((void *)&__dst + 1) = v12;
          unint64_t v40 = v15 | 0x8000000000000000;
          *(void *)&long long __dst = p_dst;
        }
        else
        {
          HIBYTE(v40) = v11;
          p_dst = &__dst;
          if (!v11)
          {
LABEL_16:
            *((unsigned char *)p_dst + v12) = 0;
            int v41 = *(_DWORD *)(a2 + 24);
            uint64_t v16 = *(const char **)(a2 + 32);
            size_t v17 = strlen(v16);
            if (v17 > 0x7FFFFFFFFFFFFFF7) {
              sub_215731CD8();
            }
            size_t v18 = v17;
            if (v17 >= 0x17)
            {
              uint64_t v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v17 | 7) != 0x17) {
                uint64_t v20 = v17 | 7;
              }
              uint64_t v21 = v20 + 1;
              long long v19 = (long long *)operator new(v20 + 1);
              *((void *)&v42 + 1) = v18;
              unint64_t v43 = v21 | 0x8000000000000000;
              *(void *)&long long v42 = v19;
            }
            else
            {
              HIBYTE(v43) = v17;
              long long v19 = &v42;
              if (!v17)
              {
LABEL_24:
                *((unsigned char *)v19 + v18) = 0;
                int v44 = *(_DWORD *)(a2 + 40) & ~(*(int *)(a2 + 40) >> 31);
                long long v22 = *(const char **)(a2 + 48);
                size_t v23 = strlen(v22);
                if (v23 > 0x7FFFFFFFFFFFFFF7) {
                  sub_215731CD8();
                }
                size_t v24 = v23;
                if (v23 >= 0x17)
                {
                  uint64_t v29 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v23 | 7) != 0x17) {
                    uint64_t v29 = v23 | 7;
                  }
                  uint64_t v30 = v29 + 1;
                  long long v25 = (long long *)operator new(v29 + 1);
                  *((void *)&v45 + 1) = v24;
                  unint64_t v46 = v30 | 0x8000000000000000;
                  *(void *)&long long v45 = v25;
                }
                else
                {
                  HIBYTE(v46) = v23;
                  long long v25 = &v45;
                  if (!v23)
                  {
                    LOBYTE(v45) = 0;
                    uint64_t v26 = *(void *)(a2 + 56);
                    int v27 = *(_DWORD *)(v26 + 120);
                    if ((v27 & 0x10) == 0) {
                      goto LABEL_28;
                    }
                    goto LABEL_34;
                  }
                }
                memmove(v25, v22, v24);
                *((unsigned char *)v25 + v24) = 0;
                uint64_t v26 = *(void *)(a2 + 56);
                int v27 = *(_DWORD *)(v26 + 120);
                if ((v27 & 0x10) == 0)
                {
LABEL_28:
                  if ((v27 & 8) == 0)
                  {
                    size_t v28 = 0;
                    HIBYTE(v48) = 0;
LABEL_39:
                    long long v34 = &v47;
                    goto LABEL_44;
                  }
                  long long v33 = *(const void **)(v26 + 40);
                  size_t v28 = *(void *)(v26 + 56) - (void)v33;
                  if (v28 > 0x7FFFFFFFFFFFFFF7) {
LABEL_49:
                  }
                    sub_215731CD8();
LABEL_37:
                  if (v28 >= 0x17)
                  {
                    uint64_t v35 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v28 | 7) != 0x17) {
                      uint64_t v35 = v28 | 7;
                    }
                    uint64_t v36 = v35 + 1;
                    long long v34 = (long long *)operator new(v35 + 1);
                    *((void *)&v47 + 1) = v28;
                    unint64_t v48 = v36 | 0x8000000000000000;
                    *(void *)&long long v47 = v34;
                  }
                  else
                  {
                    HIBYTE(v48) = v28;
                    long long v34 = &v47;
                    if (!v28) {
                      goto LABEL_39;
                    }
                  }
                  memmove(v34, v33, v28);
LABEL_44:
                  *((unsigned char *)v34 + v28) = 0;
                  uint64_t v61 = (*(uint64_t (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
                  uint64_t v62 = v37;
                  char v63 = 0;
                  char v64 = 0;
                  char v65 = 0;
                  char v66 = 0;
                  char v67 = 0;
                  char v68 = 0;
                  char v69 = 0;
                  char v70 = 0;
                  char v71 = 0;
                  char v72 = 0;
                  long long v51 = __dst;
                  unint64_t v52 = v40;
                  long long __dst = 0uLL;
                  unint64_t v40 = 0;
                  int v53 = v41;
                  long long v54 = v42;
                  unint64_t v55 = v43;
                  long long v42 = 0uLL;
                  unint64_t v43 = 0;
                  int v56 = v44;
                  unint64_t v38 = v46;
                  long long v57 = v45;
                  long long v45 = 0uLL;
                  unint64_t v46 = 0;
                  unint64_t v58 = v38;
                  unint64_t v60 = v48;
                  long long __p = v47;
                  long long v47 = 0uLL;
                  unint64_t v48 = 0;
                  operator new();
                }
LABEL_34:
                unint64_t v31 = *(void *)(v26 + 112);
                unint64_t v32 = *(void *)(v26 + 72);
                if (v31 < v32)
                {
                  *(void *)(v26 + 112) = v32;
                  unint64_t v31 = v32;
                }
                long long v33 = *(const void **)(v26 + 64);
                size_t v28 = v31 - (void)v33;
                if (v31 - (unint64_t)v33 > 0x7FFFFFFFFFFFFFF7) {
                  goto LABEL_49;
                }
                goto LABEL_37;
              }
            }
            memmove(v19, v16, v18);
            goto LABEL_24;
          }
        }
        memmove(p_dst, v10, v12);
        goto LABEL_16;
      }
      int v8 = v5;
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
}

void sub_215AB6204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_215AB62B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a29 < 0)
  {
    operator delete(__p);
    if ((a22 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a15 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a22 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a17);
  if ((a15 & 0x80000000) == 0)
  {
LABEL_4:
    sub_215733368((uint64_t)&a36);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a10);
  sub_215733368((uint64_t)&a36);
  _Unwind_Resume(a1);
}

void sub_215AB6334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_215AB6348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_215AB635C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6776D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215AB637C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6776D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AB63D8(uint64_t a1)
{
  while (1)
  {
    int v3 = *(char **)(a1 + 96);
    uint64_t v2 = *(char **)(a1 + 104);
    if (v3 == v2) {
      break;
    }
    sub_215AB64CC(a1, *((void *)v2 - 2));
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 128);
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
    int v3 = *(char **)(a1 + 96);
  }
  if (v3)
  {
    uint64_t v5 = *(char **)(a1 + 104);
    uint64_t v6 = v3;
    if (v5 != v3)
    {
      do
      {
        uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 1);
        if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v5 -= 16;
      }
      while (v5 != v3);
      uint64_t v6 = *(char **)(a1 + 96);
    }
    *(void *)(a1 + 104) = v3;
    operator delete(v6);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 32));
  int v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (v8) {
    std::__shared_weak_count::__release_weak(v8);
  }
  return a1;
}

uint64_t sub_215AB64CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 96);
  int v3 = *(void **)(a1 + 104);
  if (v4 != v3)
  {
    while (*v4 != a2)
    {
      v4 += 2;
      if (v4 == v3) {
        return 0;
      }
    }
  }
  if (v4 == v3) {
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, a1);
  uint64_t v5 = v4 + 2;
  uint64_t v6 = *(void **)(a1 + 104);
  if (v4 + 2 != v6)
  {
    do
    {
      long long v7 = *(_OWORD *)v5;
      void *v5 = 0;
      v5[1] = 0;
      int v8 = (std::__shared_weak_count *)*(v5 - 1);
      *((_OWORD *)v5 - 1) = v7;
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      v5 += 2;
    }
    while (v5 != v6);
    int v4 = v5 - 2;
    uint64_t v5 = *(void **)(a1 + 104);
  }
  for (; v5 != v4; v5 -= 2)
  {
    int v10 = (std::__shared_weak_count *)*(v5 - 1);
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  *(void *)(a1 + 104) = v4;
  return 1;
}

uint64_t sub_215AB6660(uint64_t a1)
{
  return sub_215AB63D8(a1 - 8);
}

void sub_215AB6668(uint64_t a1)
{
  sub_215AB63D8(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215AB66A0(uint64_t a1)
{
  sub_215AB63D8(a1 - 8);

  JUMPOUT(0x2166C4D20);
}

void sub_215AB66DC(uint64_t **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (char *)operator new(0xA0uLL);
  uint64_t v8 = *a2;
  long long v7 = (std::__shared_weak_count *)a2[1];
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(void *)uint64_t v6 = &unk_26C677898;
  uint64_t v9 = v6 + 24;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  *((void *)v6 + 3) = &unk_26C677728;
  *((void *)v6 + 4) = &unk_26C677768;
  *((void *)v6 + 5) = 0;
  *((void *)v6 + 6) = 0;
  *((void *)v6 + 7) = 850045863;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  if (v7)
  {
    atomic_fetch_add_explicit(&v7->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    *((void *)v6 + 18) = v8;
    *((void *)v6 + 19) = v7;
    std::__shared_weak_count::__release_weak(v7);
    int v10 = (std::__shared_weak_count *)*((void *)v6 + 6);
    *a3 = v9;
    a3[1] = v6;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v6 + 2, 1uLL, memory_order_relaxed);
    *((void *)v6 + 5) = v9;
    *((void *)v6 + 6) = v6;
    if (v10) {
      std::__shared_weak_count::__release_weak(v10);
    }
    size_t v11 = *a1;
    size_t v12 = a1[1];
    if (*a1 == v12) {
      return;
    }
    while (1)
    {
LABEL_11:
      uint64_t v13 = *v11;
      uint64_t v14 = (std::__shared_weak_count *)v11[1];
      size_t v23 = v14;
      if (v14)
      {
        atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v15 = (void *)*a3;
        uint64_t v21 = v13;
        long long v22 = v14;
        atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
        size_t v18 = (uint64_t *)v15[12];
        size_t v17 = (uint64_t *)v15[13];
        uint64_t v16 = (uint64_t)(v15 + 12);
        if (v18 != v17) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v15 = (void *)*a3;
        uint64_t v21 = *v11;
        long long v22 = 0;
        size_t v18 = *(uint64_t **)(*a3 + 96);
        size_t v17 = *(uint64_t **)(*a3 + 104);
        uint64_t v16 = *a3 + 96;
        if (v18 != v17)
        {
LABEL_15:
          while (*v18 != v13)
          {
            v18 += 2;
            if (v18 == v17)
            {
              size_t v18 = v17;
              break;
            }
          }
        }
      }
      if (v18 == v17)
      {
        if ((unint64_t)v17 >= v15[14])
        {
          long long v19 = sub_215AB72E8(v16, v13, (uint64_t)v14);
          uint64_t v13 = v21;
        }
        else
        {
          *size_t v17 = v13;
          v17[1] = (uint64_t)v14;
          if (v14) {
            atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          long long v19 = v17 + 2;
        }
        v15[13] = v19;
        (*(void (**)(uint64_t, void *))(*(void *)v13 + 24))(v13, v15);
        uint64_t v14 = v22;
        if (!v22)
        {
LABEL_28:
          uint64_t v20 = v23;
          if (v23) {
            goto LABEL_29;
          }
          goto LABEL_10;
        }
      }
      else if (!v14)
      {
        goto LABEL_28;
      }
      if (atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_28;
      }
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      uint64_t v20 = v23;
      if (v23)
      {
LABEL_29:
        if (!atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
LABEL_10:
      v11 += 2;
      if (v11 == v12) {
        return;
      }
    }
  }
  *((void *)v6 + 18) = v8;
  *((void *)v6 + 19) = 0;
  *a3 = v9;
  a3[1] = v6;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v6 + 2, 1uLL, memory_order_relaxed);
  *((void *)v6 + 5) = v9;
  *((void *)v6 + 6) = v6;
  size_t v11 = *a1;
  size_t v12 = a1[1];
  if (*a1 != v12) {
    goto LABEL_11;
  }
}

void sub_215AB69B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_215733368((uint64_t)&a9);
  sub_215733368((uint64_t)&a11);
  sub_215733368(v11);
  _Unwind_Resume(a1);
}

BOOL sub_215AB69D4(uint64_t a1, uint64_t *a2)
{
  int v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  uint64_t v6 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v7 = *(uint64_t **)(a1 + 96);
  uint64_t v8 = *(uint64_t **)(a1 + 104);
  if (v7 != v8)
  {
    while (*v7 != v6)
    {
      v7 += 2;
      if (v7 == v8)
      {
        long long v7 = *(uint64_t **)(a1 + 104);
        break;
      }
    }
  }
  if (v7 == v8)
  {
    if ((unint64_t)v8 >= *(void *)(a1 + 112))
    {
      uint64_t v9 = sub_215AB72E8(a1 + 96, v6, (uint64_t)v5);
    }
    else
    {
      *uint64_t v8 = v6;
      v8[1] = (uint64_t)v5;
      if (v5) {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v9 = v8 + 2;
    }
    *(void *)(a1 + 104) = v9;
    (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 24))(v6, a1);
  }
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  std::mutex::unlock(v4);
  return v7 == v8;
}

void sub_215AB6B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_215733368((uint64_t)&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

std::__shared_weak_count *sub_215AB6B40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(std::__shared_weak_count **)(a1 + 128);
  if (result && (uint64_t result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(void *)(a1 + 120);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_215AB6B90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  uint64_t result = *(std::__shared_weak_count **)(a1 + 128);
  if (result)
  {
    uint64_t result = std::__shared_weak_count::lock(result);
    a2[1] = result;
    if (result) {
      *a2 = *(void *)(a1 + 120);
    }
  }
  return result;
}

std::__shared_weak_count *sub_215AB6BD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (uint64_t result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(void *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_215AB6C24(uint64_t a1, uint64_t a2)
{
  int v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  uint64_t v5 = *(void **)(a1 + 96);
  for (uint64_t i = *(void **)(a1 + 104); v5 != i; v5 += 2)
    (*(void (**)(void, uint64_t))(*(void *)*v5 + 16))(*v5, a2);
  std::mutex::unlock(v4);
  return a1 + 8;
}

void sub_215AB6CB8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB6CCC(uint64_t a1, uint64_t a2)
{
  int v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v5 = *(void **)(a1 + 88);
  for (uint64_t i = *(void **)(a1 + 96); v5 != i; v5 += 2)
    (*(void (**)(void, uint64_t))(*(void *)*v5 + 16))(*v5, a2);
  std::mutex::unlock(v4);
  return a1;
}

void sub_215AB6D5C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB6D70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215AB6DEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_215AB6E5C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AB6EE8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AB6F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  uint64_t v6 = *(void **)(v4 + 96);
  for (uint64_t i = *(void **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(void, uint64_t))(*(void *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1 + 8;
}

void sub_215AB7008(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB701C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  uint64_t v6 = *(void **)(v4 + 96);
  for (uint64_t i = *(void **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(void, uint64_t))(*(void *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1;
}

void sub_215AB70B0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

std::__shared_weak_count *sub_215AB70C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = *(std::__shared_weak_count **)(v3 + 128);
  if (result && (uint64_t result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(void *)(v3 + 120);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_215AB7114@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *a2 = 0;
  a2[1] = 0;
  uint64_t result = *(std::__shared_weak_count **)(v2 + 128);
  if (result)
  {
    uint64_t result = std::__shared_weak_count::lock(result);
    a2[1] = result;
    if (result) {
      *a2 = *(void *)(v2 + 120);
    }
  }
  return result;
}

std::__shared_weak_count *sub_215AB7158@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = *(std::__shared_weak_count **)(v3 + 24);
  if (result && (uint64_t result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(void *)(v3 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

void *sub_215AB71A8(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = v4 - *a2;
  if (v4 != *a2)
  {
    if (v5 < 0) {
      sub_215738AC0();
    }
    uint64_t v6 = (char *)operator new(v4 - *a2);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[16 * (v5 >> 4)];
    do
    {
      uint64_t v8 = v3 + v7;
      uint64_t v9 = &v6[v7];
      uint64_t v10 = *(void *)(v3 + v7 + 8);
      *(void *)uint64_t v9 = *(void *)(v3 + v7);
      *((void *)v9 + 1) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 16;
    }
    while (v8 + 16 != v4);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_215AB725C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = (char *)*v1;
  if (*v1)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6)
        {
          if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AB72E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v6 = ((uint64_t)v5 - *(void *)a1) >> 4;
  unint64_t v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 60) {
    sub_215738AC0();
  }
  uint64_t v8 = *(void *)(a1 + 16) - (void)v4;
  if (v8 >> 3 > v7) {
    unint64_t v7 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v7 = 0xFFFFFFFFFFFFFFFLL;
  }
  if (v7 >> 60) {
    sub_215738AD8();
  }
  uint64_t v11 = 16 * v7;
  size_t v12 = (char *)operator new(16 * v7);
  uint64_t v13 = &v12[16 * v6];
  *(void *)uint64_t v13 = a2;
  *((void *)v13 + 1) = a3;
  if (a3)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(a3 + 8), 1uLL, memory_order_relaxed);
    uint64_t v4 = *(void **)a1;
    uint64_t v5 = *(void **)(a1 + 8);
  }
  uint64_t v14 = &v12[v11];
  uint64_t v15 = v13 + 16;
  if (v5 == v4)
  {
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v14;
  }
  else
  {
    do
    {
      long long v16 = *((_OWORD *)v5 - 1);
      v5 -= 2;
      *((_OWORD *)v13 - 1) = v16;
      v13 -= 16;
      void *v5 = 0;
      v5[1] = 0;
    }
    while (v5 != v4);
    uint64_t v4 = *(void **)a1;
    size_t v17 = *(void **)(a1 + 8);
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v15;
    for (*(void *)(a1 + 16) = v14; v17 != v4; v17 -= 2)
    {
      size_t v18 = (std::__shared_weak_count *)*(v17 - 1);
      if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  if (v4) {
    operator delete(v4);
  }
  return v15;
}

void sub_215AB744C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677898;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215AB746C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677898;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AB74C0(uint64_t a1)
{
  return sub_215AB63D8(a1 + 24);
}

void (***sub_215AB74CC())(std::error_category *__hidden this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EA58, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788EA58))
  {
    return off_26ACF2400;
  }
  __cxa_atexit((void (*)(void *))std::error_category::~error_category, off_26ACF2400, &dword_21572C000);
  __cxa_guard_release(&qword_26788EA58);
  return off_26ACF2400;
}

double sub_215AB754C@<D0>(char a1@<W1>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  switch(a1)
  {
    case 0:
      *(unsigned char *)(a2 + 23) = 8;
      strcpy((char *)a2, "no error");
      return a3.n128_f64[0];
    case 1:
      *(unsigned char *)(a2 + 23) = 13;
      strcpy((char *)a2, "unknown error");
      return a3.n128_f64[0];
    case 2:
      uint64_t v4 = (char *)operator new(0x20uLL);
      *(void *)a2 = v4;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEAD0;
      strcpy(v4, "filesystem operation failed");
      a3.n128_u64[0] = *(void *)"operation failed";
      return a3.n128_f64[0];
    case 3:
      uint64_t v5 = operator new(0x20uLL);
      *(void *)a2 = v5;
      long long v6 = xmmword_215ECEB00;
      unint64_t v7 = (__n128 *)"caught runtime exception";
      goto LABEL_11;
    case 4:
      *(unsigned char *)(a2 + 23) = 15;
      strcpy((char *)a2, "data is invalid");
      return a3.n128_f64[0];
    case 5:
      *(unsigned char *)(a2 + 23) = 20;
      a3.n128_u64[0] = *(void *)"timestamp is invalid";
      strcpy((char *)a2, "timestamp is invalid");
      return a3.n128_f64[0];
    case 6:
      uint64_t v8 = (char *)operator new(0x20uLL);
      *(void *)a2 = v8;
      long long v9 = xmmword_215E9AB80;
      uint64_t v10 = "timestamping is inconsistent";
      goto LABEL_15;
    case 7:
      uint64_t v5 = operator new(0x20uLL);
      *(void *)a2 = v5;
      long long v6 = xmmword_215ECEB00;
      unint64_t v7 = (__n128 *)"processing queue is full";
LABEL_11:
      *(_OWORD *)(a2 + 8) = v6;
      a3 = *v7;
      *(__n128 *)uint64_t v5 = *v7;
      unsigned char v5[2] = v7[1].n128_u64[0];
      *((unsigned char *)v5 + 24) = 0;
      return a3.n128_f64[0];
    case 8:
      uint64_t v11 = (char *)operator new(0x40uLL);
      *(void *)a2 = v11;
      *(_OWORD *)(a2 + 8) = xmmword_215ED4AF0;
      strcpy(v11, "chosen common I/O format is not supported for the data type");
      a3.n128_u64[0] = *(void *)"or the data type";
      return a3.n128_f64[0];
    case 9:
      size_t v12 = (char *)operator new(0x28uLL);
      *(void *)a2 = v12;
      *(_OWORD *)(a2 + 8) = xmmword_215E9BA30;
      a3.n128_u64[0] = *(void *)"data package unknown to serializer";
      strcpy(v12, "data package unknown to serializer");
      return a3.n128_f64[0];
    case 10:
      uint64_t v8 = (char *)operator new(0x20uLL);
      *(void *)a2 = v8;
      long long v9 = xmmword_215E9AB80;
      uint64_t v10 = "data type unknown to package";
LABEL_15:
      *(_OWORD *)(a2 + 8) = v9;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v10;
      a3 = *(__n128 *)(v10 + 12);
      *(__n128 *)(v8 + 12) = a3;
      v8[28] = 0;
      break;
    case 11:
      *(unsigned char *)(a2 + 23) = 19;
      a3.n128_u64[0] = *(void *)"failed to load data";
      strcpy((char *)a2, "failed to load data");
      break;
    case 12:
      *(unsigned char *)(a2 + 23) = 20;
      a3.n128_u64[0] = *(void *)"sequence i/o failure";
      strcpy((char *)a2, "sequence i/o failure");
      break;
    case 13:
      uint64_t v13 = (char *)operator new(0x20uLL);
      *(void *)a2 = v13;
      *(_OWORD *)(a2 + 8) = xmmword_215EAF320;
      strcpy(v13, "unsupported or invalid sequence");
      a3.n128_u64[0] = *(void *)"invalid sequence";
      break;
    default:
      *(unsigned char *)(a2 + 23) = 18;
      a3.n128_u64[0] = *(void *)"unknown error code";
      strcpy((char *)a2, "unknown error code");
      break;
  }
  return a3.n128_f64[0];
}

void (***sub_215AB78E8())(std::error_category *__hidden this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788EA60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(qword_26788EA60))
  {
    return &off_26ACF2408;
  }
  __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_26ACF2408, &dword_21572C000);
  __cxa_guard_release(qword_26788EA60);
  return &off_26ACF2408;
}

__n128 sub_215AB7968@<Q0>(int a1@<W1>, uint64_t a2@<X8>, __n128 result@<Q0>)
{
  switch(a1)
  {
    case 0:
      *(unsigned char *)(a2 + 23) = 8;
      strcpy((char *)a2, "no error");
      return result;
    case 1:
      *(unsigned char *)(a2 + 23) = 13;
      strcpy((char *)a2, "unknown error");
      return result;
    case 2:
      uint64_t v4 = operator new(0x28uLL);
      *(void *)a2 = v4;
      long long v5 = xmmword_215ED4B10;
      long long v6 = "server Receive() threw exception";
      goto LABEL_19;
    case 3:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"server send failure";
      strcpy((char *)a2, "server send failure");
      return result;
    case 4:
      unint64_t v7 = (char *)operator new(0x20uLL);
      *(void *)a2 = v7;
      long long v8 = xmmword_215ECEB10;
      long long v9 = "server can't reach client";
      goto LABEL_12;
    case 5:
      uint64_t v10 = (char *)operator new(0x30uLL);
      *(void *)a2 = v10;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEAF0;
      strcpy(v10, "server cannot serialize data of unknown package");
      result.n128_u64[0] = *(void *)" unknown package";
      return result;
    case 6:
      uint64_t v11 = (char *)operator new(0x40uLL);
      *(void *)a2 = v11;
      *(_OWORD *)(a2 + 8) = xmmword_215ED4B20;
      strcpy(v11, "server cannot serialize package data of unknown data type");
      result.n128_u64[0] = *(void *)"nknown data type";
      return result;
    case 7:
      size_t v12 = (char *)operator new(0x20uLL);
      *(void *)a2 = v12;
      *(_OWORD *)(a2 + 8) = xmmword_215ECEAD0;
      strcpy(v12, "server serialization failed");
      result.n128_u64[0] = *(void *)"alization failed";
      return result;
    case 8:
      uint64_t v4 = operator new(0x28uLL);
      *(void *)a2 = v4;
      long long v5 = xmmword_215ED4B10;
      long long v6 = "client Receive() threw exception";
LABEL_19:
      *(_OWORD *)(a2 + 8) = v5;
      uint64_t result = *(__n128 *)v6;
      long long v14 = *((_OWORD *)v6 + 1);
      _OWORD *v4 = *(_OWORD *)v6;
      v4[1] = v14;
      *((unsigned char *)v4 + 32) = 0;
      return result;
    case 9:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"client send failure";
      strcpy((char *)a2, "client send failure");
      return result;
    case 10:
      unint64_t v7 = (char *)operator new(0x20uLL);
      *(void *)a2 = v7;
      long long v8 = xmmword_215ECEB10;
      long long v9 = "client can't reach server";
LABEL_12:
      *(_OWORD *)(a2 + 8) = v8;
      *(_OWORD *)unint64_t v7 = *(_OWORD *)v9;
      uint64_t result = *(__n128 *)(v9 + 9);
      *(__n128 *)(v7 + 9) = result;
      v7[25] = 0;
      break;
    case 11:
      uint64_t v13 = (char *)operator new(0x28uLL);
      *(void *)a2 = v13;
      *(_OWORD *)(a2 + 8) = xmmword_215ED4B00;
      result.n128_u64[0] = *(void *)"client does not have syncing enabled";
      strcpy(v13, "client does not have syncing enabled");
      break;
    case 12:
      *(unsigned char *)(a2 + 23) = 7;
      strcpy((char *)a2, "timeout");
      break;
    case 13:
      *(unsigned char *)(a2 + 23) = 15;
      strcpy((char *)a2, "invalid peer ID");
      break;
    case 15:
      *(unsigned char *)(a2 + 23) = 19;
      result.n128_u64[0] = *(void *)"configuration issue";
      strcpy((char *)a2, "configuration issue");
      break;
    default:
      *(unsigned char *)(a2 + 23) = 18;
      result.n128_u64[0] = *(void *)"unknown error code";
      strcpy((char *)a2, "unknown error code");
      break;
  }
  return result;
}

void sub_215AB7D34()
{
}

void sub_215AB7E4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB7E78(char *__s)
{
  v1[6] = 0;
  sub_21594B828(v1, __s);
  sub_215AB9D3C();
}

void sub_215AB7FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB7FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB8000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB8014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB8028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB803C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB8050()
{
}

void sub_215AB8178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB81A4(char *__s)
{
  v1[6] = 0;
  sub_21594B828(v1, __s);
  sub_215AB9D3C();
}

void sub_215AB8418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (*(char *)(v28 - 81) < 0)
  {
    operator delete(*(void **)(v28 - 104));
    if ((a27 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v28 - 49) & 0x80000000) == 0)
      {
LABEL_8:
        sub_215742CF0((uint64_t)&a11);
        _Unwind_Resume(a1);
      }
LABEL_7:
      operator delete(*(void **)(v27 + 8));
      sub_215742CF0((uint64_t)&a11);
      _Unwind_Resume(a1);
    }
  }
  else if ((a27 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v28 - 49) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_215AB84DC(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  v32[1] = *MEMORY[0x263EF8340];
  if (a3)
  {
    int v25 = 0;
    sub_2158F65AC(v24, ", max queue size ");
    std::to_string(&v26, a2);
    uint64_t v28 = (std::string *)v24;
    uint64_t v29 = &v26;
    uint64_t v30 = v24;
    unint64_t v31 = &v26;
    v32[0] = &v26;
    if (v25 == -1) {
      sub_215742D4C();
    }
    uint64_t v27 = &v28;
    ((void (*)(std::string ***, _DWORD *))off_26C6779C8[v25])(&v27, v24);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (v25 == -1) {
      sub_215742D4C();
    }
    uint64_t v28 = &v26;
    ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C677A10[v25])(&v12, &v28, v24);
    if (v25 != -1) {
      ((void (*)(std::string **, _DWORD *))off_26C677998[v25])(&v28, v24);
    }
    unsigned int v7 = HIBYTE(v14);
    long long v8 = v12;
    long long v9 = v13;
  }
  else
  {
    long long v9 = 0;
    long long v8 = 0;
    unsigned int v7 = 0;
    size_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v10 = (std::string *)*(unsigned __int8 *)(a1 + 23);
  if ((char)v10 >= 0) {
    uint64_t v11 = (std::string *)a1;
  }
  else {
    uint64_t v11 = *(std::string **)a1;
  }
  if ((char)v10 < 0) {
    uint64_t v10 = *(std::string **)(a1 + 8);
  }
  uint64_t v28 = v11;
  uint64_t v29 = v10;
  if ((v7 & 0x80u) == 0)
  {
    long long v8 = &v12;
    long long v9 = (std::string *)v7;
  }
  uint64_t v30 = v8;
  unint64_t v31 = v9;
  sub_2157430CC((uint64_t)&v28, (uint64_t)v32, 0, 0, &v15);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__p, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v15;
  }
  char v17 = 1;
  LOBYTE(v18) = 0;
  char v22 = 0;
  char v23 = 1;
  sub_21599512C(7u, (long long *)&__p, a4);
  if (v23)
  {
    if (!v22) {
      goto LABEL_24;
    }
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_24:
        if (!v17) {
          goto LABEL_27;
        }
LABEL_25:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_27;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v18);
    if (!v17) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
LABEL_27:
  if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_31:
    operator delete(v12);
    return;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_31;
  }
}

void sub_215AB8780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB87F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (*(char *)(v29 - 105) < 0)
  {
    operator delete(*(void **)(v29 - 128));
    sub_215742CF0((uint64_t)&a29);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215AB87E0);
}

void sub_215AB8814(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  v17[0] = "Cannot save data as '";
  v17[1] = 21;
  uint64_t v4 = *((unsigned __int8 *)a1 + 23);
  if ((v4 & 0x80u) == 0) {
    long long v5 = a1;
  }
  else {
    long long v5 = (uint64_t *)*a1;
  }
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = a1[1];
  }
  v17[2] = v5;
  _OWORD v17[3] = v4;
  v17[4] = "'. Reason: ";
  v17[5] = 11;
  uint64_t v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0) {
    unsigned int v7 = a2;
  }
  else {
    unsigned int v7 = (uint64_t *)*a2;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = a2[1];
  }
  v17[6] = v7;
  v17[7] = v6;
  sub_2157430CC((uint64_t)v17, (uint64_t)&v18, 0, 0, &v8);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__p, v8.__r_.__value_.__l.__data_, v8.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v8;
  }
  char v10 = 1;
  LOBYTE(v11) = 0;
  char v15 = 0;
  char v16 = 1;
  sub_21599512C(8u, (long long *)&__p, a3);
  if (v16)
  {
    if (!v15) {
      goto LABEL_18;
    }
    if (v14 < 0)
    {
      operator delete(v13);
      if ((v12 & 0x80000000) == 0)
      {
LABEL_18:
        if (!v10) {
          goto LABEL_21;
        }
LABEL_19:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_21;
      }
    }
    else if ((v12 & 0x80000000) == 0)
    {
      goto LABEL_18;
    }
    operator delete(v11);
    if (!v10) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
LABEL_21:
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_215AB8994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB89CC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1[1];
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v4 = (uint64_t *)*a1;
  }
  else
  {
    uint64_t v3 = *((unsigned __int8 *)a1 + 23);
    uint64_t v4 = a1;
  }
  if (v3)
  {
    char v23 = "Package id '";
    uint64_t v24 = 12;
    int v25 = v4;
    uint64_t v26 = v3;
    uint64_t v28 = 222;
    sub_2157430CC((uint64_t)&v23, (uint64_t)&v29, 0, 0, &v14);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(&v6, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
    }
    else {
      std::string v6 = v14;
    }
    char v7 = 1;
    LOBYTE(v8) = 0;
    char v12 = 0;
    char v13 = 1;
    sub_21599512C(9u, (long long *)&v6, a2);
    if (v13)
    {
      if (!v12) {
        goto LABEL_14;
      }
      if (v11 < 0)
      {
        operator delete(v10);
        if ((v9 & 0x80000000) == 0)
        {
LABEL_14:
          if (!v7) {
            goto LABEL_28;
          }
          goto LABEL_15;
        }
      }
      else if ((v9 & 0x80000000) == 0)
      {
        goto LABEL_14;
      }
      operator delete(v8);
      if (v7)
      {
LABEL_15:
        if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_28;
        }
        long long v5 = (void *)v6.__r_.__value_.__r.__words[0];
        goto LABEL_27;
      }
    }
  }
  else
  {
    char v23 = "Package id '";
    uint64_t v24 = 12;
    int v25 = v4;
    uint64_t v26 = 0;
    uint64_t v27 = "' encountered during loading is unrecognized. An empty package name indicates a serialization error (e.g. inva"
          "lid data in the stream)";
    uint64_t v28 = 133;
    sub_2157430CC((uint64_t)&v23, (uint64_t)&v29, 0, 0, &v14);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(&__dst, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v14;
    }
    char v16 = 1;
    LOBYTE(v17) = 0;
    char v21 = 0;
    char v22 = 1;
    sub_21599512C(9u, (long long *)&__dst, a2);
    if (v22)
    {
      if (v21)
      {
        if (v20 < 0) {
          operator delete(__p);
        }
        if (v18 < 0) {
          operator delete(v17);
        }
      }
      if (v16 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        long long v5 = (void *)__dst.__r_.__value_.__r.__words[0];
LABEL_27:
        operator delete(v5);
      }
    }
  }
LABEL_28:
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_215AB8C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a27 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB8C54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)(a1 + 24))
  {
    int v26 = 0;
    sub_2157E58C8(v25, "Package '");
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)a1;
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)a1;
    long long v33 = (std::string *)a1;
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A40[v26])(&v27, v25);
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)"' data type id ";
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)"' data type id ";
    long long v33 = (std::string *)"' data type id ";
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A58[v26])(&v27, v25);
    std::to_string(&v27, *(_DWORD *)(a1 + 24));
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = &v27;
    unint64_t v31 = v25;
    unint64_t v32 = &v27;
    long long v33 = &v27;
    if (v26 == -1) {
      sub_215742D4C();
    }
    uint64_t v28 = &v29;
    ((void (*)(std::string ***, _DWORD *))off_26C6779C8[v26])(&v28, v25);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)" encountered during loading is unrecognized. The loader's package version may be too old.";
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)" encountered during loading is unrecognized. The loader's package version may be too old.";
    long long v33 = (std::string *)" encountered during loading is unrecognized. The loader's package version may be too old.";
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A88[v26])(&v27, v25);
    if (v26 == -1) {
      sub_215742D4C();
    }
    uint64_t v29 = &v27;
    ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C677A10[v26])(v14, &v29, v25);
    if (v26 != -1) {
      ((void (*)(std::string **, _DWORD *))off_26C677998[v26])(&v29, v25);
    }
    if (SHIBYTE(v15) < 0)
    {
      sub_215738B0C(&v5, v14[0], (unint64_t)v14[1]);
    }
    else
    {
      long long v5 = *(_OWORD *)v14;
      uint64_t v6 = v15;
    }
    char v7 = 1;
    LOBYTE(v8) = 0;
    char v12 = 0;
    char v13 = 1;
    sub_21599512C(0xAu, &v5, a2);
    if (v13)
    {
      if (!v12) {
        goto LABEL_29;
      }
      if (v11 < 0)
      {
        operator delete(v10);
        if ((v9 & 0x80000000) == 0)
        {
LABEL_29:
          if (!v7) {
            goto LABEL_43;
          }
          goto LABEL_30;
        }
      }
      else if ((v9 & 0x80000000) == 0)
      {
        goto LABEL_29;
      }
      operator delete(v8);
      if (v7)
      {
LABEL_30:
        if ((SHIBYTE(v6) & 0x80000000) == 0) {
          goto LABEL_43;
        }
        uint64_t v4 = (void *)v5;
        goto LABEL_42;
      }
    }
  }
  else
  {
    int v26 = 0;
    sub_2157E58C8(v25, "Package '");
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)a1;
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)a1;
    long long v33 = (std::string *)a1;
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A40[v26])(&v27, v25);
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)"' data type id ";
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)"' data type id ";
    long long v33 = (std::string *)"' data type id ";
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A58[v26])(&v27, v25);
    std::to_string(&v27, *(_DWORD *)(a1 + 24));
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = &v27;
    unint64_t v31 = v25;
    unint64_t v32 = &v27;
    long long v33 = &v27;
    if (v26 == -1) {
      sub_215742D4C();
    }
    uint64_t v28 = &v29;
    ((void (*)(std::string ***, _DWORD *))off_26C6779C8[v26])(&v28, v25);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    uint64_t v29 = (std::string *)v25;
    uint64_t v30 = (std::string *)" encountered during loading is unrecognized. A data type ID of 0 indicates a serialization erro"
                         "r (e.g. invalid data in the stream)";
    unint64_t v31 = v25;
    unint64_t v32 = (std::string *)" encountered during loading is unrecognized. A data type ID of 0 indicates a serialization erro"
                         "r (e.g. invalid data in the stream)";
    long long v33 = (std::string *)" encountered during loading is unrecognized. A data type ID of 0 indicates a serialization erro"
                         "r (e.g. invalid data in the stream)";
    if (v26 == -1) {
      sub_215742D4C();
    }
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    ((void (*)(std::string *, _DWORD *))off_26C677A70[v26])(&v27, v25);
    if (v26 == -1) {
      sub_215742D4C();
    }
    uint64_t v29 = &v27;
    ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_26C677A10[v26])(v14, &v29, v25);
    if (v26 != -1) {
      ((void (*)(std::string **, _DWORD *))off_26C677998[v26])(&v29, v25);
    }
    if (SHIBYTE(v15) < 0)
    {
      sub_215738B0C(__dst, v14[0], (unint64_t)v14[1]);
    }
    else
    {
      *(_OWORD *)std::string __dst = *(_OWORD *)v14;
      uint64_t v17 = v15;
    }
    char v18 = 1;
    LOBYTE(v19) = 0;
    char v23 = 0;
    char v24 = 1;
    sub_21599512C(0xAu, (long long *)__dst, a2);
    if (v24)
    {
      if (v23)
      {
        if (v22 < 0) {
          operator delete(__p);
        }
        if (v20 < 0) {
          operator delete(v19);
        }
      }
      if (v18 && SHIBYTE(v17) < 0)
      {
        uint64_t v4 = __dst[0];
LABEL_42:
        operator delete(v4);
      }
    }
  }
LABEL_43:
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
}

void sub_215AB9148(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB91A8(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 81) < 0)
  {
    operator delete(*(void **)(v1 - 104));
    sub_215742CF0(v1 - 136);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215AB91E8);
}

void sub_215AB91E4(_Unwind_Exception *a1)
{
  sub_215742CF0(v1 - 136);
  _Unwind_Resume(a1);
}

void sub_215AB91F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a3) {
    sub_215AB9568(", reason: ", (const char *)&v3);
  }
  sub_215AB93B8("Failed to send command(s) to client ");
}

void sub_215AB935C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  _Unwind_Resume(exception_object);
}

void sub_215AB93B8(char *__s)
{
  v1[6] = 0;
  sub_2158C97F0(v1, __s);
  sub_2159651D4();
}

void sub_215AB9504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB952C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AB9568(char *__s, const char *a2)
{
  int v5 = 0;
  sub_2158C2F8C(v4, __s);
  if (*(void *)a2)
  {
    uint64_t v6 = (void **)v4;
    char v7 = a2;
    std::string v8 = v4;
    char v9 = a2;
    char v10 = a2;
    if (v5 != -1)
    {
      char v11 = &v6;
      ((void (*)(void **, _DWORD *))off_26C677AA0[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_10:
    sub_215742D4C();
  }
  uint64_t v6 = (void **)v4;
  char v7 = "nullptr";
  std::string v8 = v4;
  char v9 = "nullptr";
  char v10 = "nullptr";
  if (v5 == -1) {
    goto LABEL_10;
  }
  char v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C6779B0[v5])(&v11, v4);
LABEL_6:
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C677A10[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C677998[v5])(&v6, v4);
  }
  return result;
}

void sub_215AB9698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AB96AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AB96C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AB96D4()
{
}

void sub_215AB97E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB9814(char *__s)
{
  v1[6] = 0;
  sub_2157FD010(v1, __s);
  sub_2159651D4();
}

void sub_215AB9960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB999C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB99B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB99C4()
{
}

void sub_215AB9AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AB9B04(char *__s)
{
  v1[6] = 0;
  sub_2157FD010(v1, __s);
  sub_2159651D4();
}

void sub_215AB9C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AB9CB4(std::error_category *a1)
{
  std::error_category::~error_category(a1);

  JUMPOUT(0x2166C4D20);
}

const char *sub_215AB9CEC()
{
  return "cv3d.kit.viz I/O";
}

void sub_215AB9CF8(std::error_category *a1)
{
  std::error_category::~error_category(a1);

  JUMPOUT(0x2166C4D20);
}

const char *sub_215AB9D30()
{
  return "cv3d.kit.viz client/server";
}

void sub_215AB9D3C()
{
}

void sub_215AB9F28(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AB9F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_215AB9F90(_DWORD ***a1)
{
  return sub_215ABA450(**a1, (char *)(*a1)[1]);
}

void sub_215AB9F9C(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  uint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  std::string v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  uint64_t v6 = __p;
  char v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    uint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABA158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABA19C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  uint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      unsigned char v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    char v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)uint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    char v20 = v17;
    if (!v18)
    {
      char v21 = &v13[24 * v12];
      *uint64_t v17 = 0;
      char v16 = v17 + 24;
      char v22 = (void **)*a2;
      char v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      char v23 = (void **)*a2;
      std::string v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  char v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  char v22 = (void **)*a2;
  char v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215ABA430(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABA448(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_215ABA450(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C677998[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t sub_215ABA544(uint64_t *a1)
{
  int v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  unsigned char v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  size_t v6 = v5;
  ((void (*)(void **, unsigned char *))off_26C6779C8[0])(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (v3 == -1) {
    sub_215742D4C();
  }
  v5[0] = &v4;
  uint64_t result = ((uint64_t (*)(void *, unsigned char *))off_26C677A10[v3])(v5, v2);
  if (v3 != -1) {
    return ((uint64_t (*)(void *, unsigned char *))off_26C677998[v3])(v5, v2);
  }
  return result;
}

void sub_215ABA634(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215ABA64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

_DWORD *sub_215ABA670(_DWORD ***a1)
{
  return sub_2158386B8(**a1, (char *)(*a1)[1]);
}

void sub_215ABA67C(uint64_t a1, uint64_t a2)
{
}

void sub_215ABA68C(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  int v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABA844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215ABA888(uint64_t a1, uint64_t a2)
{
  int v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215ABA984((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215ABA97C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215ABA984(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  char v21 = v8;
  char v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  size_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215ABAB84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_215ABAB98(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C677998[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    unint64_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215ABAC88(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  unint64_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    unint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABAE44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABAE88(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      unsigned char v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    char v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    char v20 = v17;
    if (!v18)
    {
      char v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      char v22 = (void **)*a2;
      char v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      char v23 = (void **)*a2;
      std::string v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  char v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  char v22 = (void **)*a2;
  char v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215ABB11C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABB134(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

size_t sub_215ABB13C(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C677998[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    size_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215ABB22C(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABB3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABB42C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      unsigned char v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    char v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    char v20 = v17;
    if (!v18)
    {
      char v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      char v22 = (void **)*a2;
      char v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      char v23 = (void **)*a2;
      std::string v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  char v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  char v22 = (void **)*a2;
  char v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215ABB6C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABB6D8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

size_t sub_215ABB6E0(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C677998[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    size_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215ABB7D0(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABB98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABB9D0(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      unsigned char v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    char v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    char v20 = v17;
    if (!v18)
    {
      char v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      char v22 = (void **)*a2;
      char v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      char v23 = (void **)*a2;
      std::string v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  char v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  char v22 = (void **)*a2;
  char v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215ABBC64(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABBC7C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

size_t sub_215ABBC84(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C677998[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    size_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215ABBD74(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C677998[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215ABBF30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABBF74(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      unsigned char v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    char v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    char v20 = v17;
    if (!v18)
    {
      char v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      char v22 = (void **)*a2;
      char v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      char v23 = (void **)*a2;
      std::string v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  char v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  char v22 = (void **)*a2;
  char v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215ABC208(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABC220(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *sub_215ABC228(void *a1, uint64_t a2)
{
  uint64_t v136 = *MEMORY[0x263EF8340];
  v76[0] = xmmword_215ED4BC0;
  v76[1] = unk_215ED4BD0;
  v76[2] = xmmword_215ED4BE0;
  v76[3] = unk_215ED4BF0;
  uint64_t v77 = 2;
  v75[7] = *(_OWORD *)&off_26425A880;
  v75[8] = xmmword_26425A890;
  v75[2] = xmmword_26425A830;
  v75[3] = *(_OWORD *)&off_26425A840;
  v75[5] = *(_OWORD *)&off_26425A860;
  v75[6] = xmmword_26425A870;
  v75[4] = xmmword_26425A850;
  v75[0] = xmmword_26425A810;
  v75[1] = *(_OWORD *)&off_26425A820;
  sub_215ACB464((uint64_t *)&v80, a2, (uint64_t)v76, (uint64_t)v75, (uint64_t)&v78, (uint64_t)v76);
  sub_215ACB464((uint64_t *)&v132, a2, (uint64_t)&v78, (uint64_t)v76, (uint64_t)&v78, (uint64_t)v76);
  long long v96 = v80;
  unint64_t v4 = &v96;
  if (!v82) {
    goto LABEL_4;
  }
  unint64_t v4 = &v80;
  if (v82 != v81)
  {
    v98 = v82;
LABEL_4:
    *((void *)v4 + 5) = 0;
    goto LABEL_6;
  }
  v98 = v97;
  (*(void (**)(void))(v81[0] + 24))();
LABEL_6:
  long long v99 = v83;
  *(_OWORD *)v100 = v132;
  if (v134)
  {
    if (v134 == v133)
    {
      v102 = &v100[16];
      (*(void (**)(void *, unsigned char *))(*v134 + 24))(v134, &v100[16]);
    }
    else
    {
      v102 = v134;
      v134 = 0;
    }
  }
  else
  {
    v102 = 0;
  }
  v103[0] = v135;
  if (v134 == v133)
  {
    (*(void (**)(void *))(v133[0] + 32))(v133);
    char v5 = v82;
    if (v82 != v81) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v134) {
      (*(void (**)(void))(*v134 + 40))();
    }
    char v5 = v82;
    if (v82 != v81)
    {
LABEL_15:
      if (v5) {
        (*(void (**)(void *))(*v5 + 40))(v5);
      }
      long long v88 = v96;
      size_t v6 = v98;
      if (v98) {
        goto LABEL_18;
      }
      goto LABEL_22;
    }
  }
  (*(void (**)(void *))(v81[0] + 32))(v81);
  long long v88 = v96;
  size_t v6 = v98;
  if (v98)
  {
LABEL_18:
    if (v6 == v97)
    {
      v90 = v89;
      (*(void (**)(void *, void *))(v97[0] + 24))(v97, v89);
    }
    else
    {
      v90 = v6;
      v98 = 0;
    }
    goto LABEL_24;
  }
LABEL_22:
  v90 = 0;
LABEL_24:
  long long v91 = v99;
  long long v92 = *(_OWORD *)v100;
  if (v102)
  {
    if (v102 == &v100[16])
    {
      v94 = v93;
      (*(void (**)(unsigned char *, void *))(*(void *)&v100[16] + 24))(&v100[16], v93);
    }
    else
    {
      v94 = v102;
      v102 = 0;
    }
  }
  else
  {
    v94 = 0;
  }
  long long v95 = v103[0];
  if (v102 != &v100[16])
  {
    if (v102) {
      (*(void (**)(void))(*(void *)v102 + 40))();
    }
    size_t v7 = v98;
    if (v98 != v97) {
      goto LABEL_33;
    }
LABEL_36:
    (*(void (**)(void *))(v97[0] + 32))(v97);
    goto LABEL_37;
  }
  (*(void (**)(unsigned char *))(*(void *)&v100[16] + 32))(&v100[16]);
  size_t v7 = v98;
  if (v98 == v97) {
    goto LABEL_36;
  }
LABEL_33:
  if (v7) {
    (*(void (**)(void *))(*v7 + 40))(v7);
  }
LABEL_37:
  long long v116 = v88;
  size_t v8 = v90;
  if (!v90)
  {
    v118 = 0;
    long long v119 = v91;
    long long v124 = v88;
LABEL_45:
    v126 = v8;
    goto LABEL_46;
  }
  if (v90 == v89)
  {
    v118 = v117;
    (*(void (**)(void *, void *))(v89[0] + 24))(v89, v117);
    size_t v8 = v118;
  }
  else
  {
    size_t v8 = (void *)(*(uint64_t (**)(void))(*v90 + 16))();
    v118 = v8;
  }
  long long v119 = v91;
  long long v124 = v116;
  if (!v8) {
    goto LABEL_45;
  }
  if (v8 != v117)
  {
    size_t v8 = (void *)(*(uint64_t (**)(void *))(*v8 + 16))(v8);
    goto LABEL_45;
  }
  v126 = v125;
  (*(void (**)(void *, void *))(v117[0] + 24))(v117, v125);
LABEL_46:
  long long v127 = v119;
  long long v112 = v92;
  unint64_t v9 = v94;
  if (!v94)
  {
    v114 = 0;
    long long v115 = v95;
    long long v120 = v92;
LABEL_54:
    v122 = v9;
    goto LABEL_55;
  }
  if (v94 == v93)
  {
    v114 = v113;
    (*(void (**)(void *, void *))(v93[0] + 24))(v93, v113);
    unint64_t v9 = v114;
  }
  else
  {
    unint64_t v9 = (void *)(*(uint64_t (**)(void))(*v94 + 16))();
    v114 = v9;
  }
  long long v115 = v95;
  long long v120 = v112;
  if (!v9) {
    goto LABEL_54;
  }
  if (v9 != v113)
  {
    unint64_t v9 = (void *)(*(uint64_t (**)(void *))(*v9 + 16))(v9);
    goto LABEL_54;
  }
  v122 = v121;
  (*(void (**)(void *, void *))(v113[0] + 24))(v113, v121);
LABEL_55:
  long long v123 = v115;
  long long v132 = v124;
  unint64_t v10 = &v132;
  if (!v126)
  {
LABEL_58:
    *((void *)v10 + 5) = 0;
    goto LABEL_60;
  }
  if (v126 != v125)
  {
    unint64_t v10 = &v124;
    v134 = v126;
    goto LABEL_58;
  }
  v134 = v133;
  (*(void (**)(void *, void *))(v125[0] + 24))(v125, v133);
LABEL_60:
  long long v135 = v127;
  long long v128 = v120;
  uint64_t v11 = &v128;
  if (!v122)
  {
LABEL_63:
    *((void *)v11 + 5) = 0;
    goto LABEL_65;
  }
  if (v122 != v121)
  {
    uint64_t v11 = &v120;
    v130 = v122;
    goto LABEL_63;
  }
  v130 = v129;
  (*(void (**)(void *, void *))(v121[0] + 24))(v121, v129);
LABEL_65:
  long long v131 = v123;
  long long v96 = v132;
  unint64_t v12 = &v96;
  if (!v134)
  {
LABEL_68:
    *((void *)v12 + 5) = 0;
    goto LABEL_70;
  }
  if (v134 != v133)
  {
    unint64_t v12 = &v132;
    v98 = v134;
    goto LABEL_68;
  }
  v98 = v97;
  (*(void (**)(void *, void *))(v133[0] + 24))(v133, v97);
LABEL_70:
  long long v99 = v135;
  *(_OWORD *)&v100[8] = v128;
  if (v130)
  {
    if (v130 == v129)
    {
      *(void *)&v103[0] = v101;
      (*(void (**)(void *, void *))(v129[0] + 24))(v129, v101);
    }
    else
    {
      *(void *)&v103[0] = v130;
      v130 = 0;
    }
  }
  else
  {
    *(void *)&v103[0] = 0;
  }
  *(_OWORD *)((char *)v103 + 8) = v131;
  if (v130 == v129)
  {
    (*(void (**)(void *))(v129[0] + 32))(v129);
    char v13 = v134;
    if (v134 != v133) {
      goto LABEL_79;
    }
LABEL_97:
    (*(void (**)(void *))(v133[0] + 32))(v133);
    uint64_t v14 = v122;
    if (v122 != v121) {
      goto LABEL_82;
    }
LABEL_98:
    (*(void (**)(void *))(v121[0] + 32))(v121);
    uint64_t v15 = v114;
    if (v114 != v113) {
      goto LABEL_85;
    }
LABEL_99:
    (*(void (**)(void *))(v113[0] + 32))(v113);
    char v16 = v126;
    if (v126 != v125) {
      goto LABEL_88;
    }
LABEL_100:
    (*(void (**)(void *))(v125[0] + 32))(v125);
    unint64_t v17 = v118;
    if (v118 != v117) {
      goto LABEL_91;
    }
    goto LABEL_101;
  }
  if (v130) {
    (*(void (**)(void))(*v130 + 40))();
  }
  char v13 = v134;
  if (v134 == v133) {
    goto LABEL_97;
  }
LABEL_79:
  if (v13) {
    (*(void (**)(void *))(*v13 + 40))(v13);
  }
  uint64_t v14 = v122;
  if (v122 == v121) {
    goto LABEL_98;
  }
LABEL_82:
  if (v14) {
    (*(void (**)(void *))(*v14 + 40))(v14);
  }
  uint64_t v15 = v114;
  if (v114 == v113) {
    goto LABEL_99;
  }
LABEL_85:
  if (v15) {
    (*(void (**)(void *))(*v15 + 40))(v15);
  }
  char v16 = v126;
  if (v126 == v125) {
    goto LABEL_100;
  }
LABEL_88:
  if (v16) {
    (*(void (**)(void *))(*v16 + 40))(v16);
  }
  unint64_t v17 = v118;
  if (v118 != v117)
  {
LABEL_91:
    if (v17) {
      (*(void (**)(void *))(*v17 + 40))(v17);
    }
    long long v80 = v96;
    size_t v18 = v98;
    if (v98) {
      goto LABEL_94;
    }
    goto LABEL_102;
  }
LABEL_101:
  (*(void (**)(void *))(v117[0] + 32))(v117);
  long long v80 = v96;
  size_t v18 = v98;
  if (v98)
  {
LABEL_94:
    if (v18 == v97)
    {
      v82 = v81;
      (*(void (**)(void *, void *))(v97[0] + 24))(v97, v81);
    }
    else
    {
      v82 = v18;
      v98 = 0;
    }
    goto LABEL_104;
  }
LABEL_102:
  v82 = 0;
LABEL_104:
  long long v83 = v99;
  long long v84 = *(_OWORD *)&v100[8];
  if (*(void *)&v103[0])
  {
    if (*(void **)&v103[0] == v101)
    {
      v86 = v85;
      (*(void (**)(void *, void *))(v101[0] + 24))(v101, v85);
    }
    else
    {
      v86 = *(void **)&v103[0];
      *(void *)&v103[0] = 0;
    }
  }
  else
  {
    v86 = 0;
  }
  long long v87 = *(_OWORD *)((char *)v103 + 8);
  if (*(void **)&v103[0] == v101)
  {
    (*(void (**)(void *))(v101[0] + 32))(v101);
    size_t v19 = v98;
    if (v98 != v97) {
      goto LABEL_113;
    }
  }
  else
  {
    if (*(void *)&v103[0]) {
      (*(void (**)(void))(**(void **)&v103[0] + 40))();
    }
    size_t v19 = v98;
    if (v98 != v97)
    {
LABEL_113:
      if (v19) {
        (*(void (**)(void *))(*v19 + 40))(v19);
      }
      long long v108 = v80;
      char v20 = v82;
      if (!v82) {
        goto LABEL_121;
      }
      goto LABEL_119;
    }
  }
  (*(void (**)(void *))(v97[0] + 32))(v97);
  long long v108 = v80;
  char v20 = v82;
  if (!v82)
  {
LABEL_121:
    v110 = v20;
    goto LABEL_123;
  }
LABEL_119:
  if (v20 != v81)
  {
    char v20 = (void *)(*(uint64_t (**)(void *))(*v20 + 16))(v20);
    goto LABEL_121;
  }
  v110 = v109;
  (*(void (**)(void *, void *))(v81[0] + 24))(v81, v109);
LABEL_123:
  long long v111 = v83;
  long long v104 = v84;
  uint64_t v21 = (uint64_t)v86;
  if (!v86)
  {
LABEL_126:
    v106 = (void *)v21;
    goto LABEL_128;
  }
  if (v86 != v85)
  {
    uint64_t v21 = (*(uint64_t (**)(void))(*v86 + 16))();
    goto LABEL_126;
  }
  v106 = v105;
  (*(void (**)(void *, void *))(v85[0] + 24))(v85, v105);
LABEL_128:
  long long v107 = v87;
  long long v128 = v108;
  uint64_t v22 = (uint64_t)v110;
  if (!v110)
  {
LABEL_131:
    v130 = (void *)v22;
    goto LABEL_133;
  }
  if (v110 != v109)
  {
    uint64_t v22 = (*(uint64_t (**)(void))(*v110 + 16))();
    goto LABEL_131;
  }
  v130 = v129;
  (*(void (**)(void *, void *))(v109[0] + 24))(v109, v129);
LABEL_133:
  long long v131 = v111;
  long long v124 = v104;
  uint64_t v23 = (uint64_t)v106;
  if (!v106)
  {
LABEL_136:
    v126 = (void *)v23;
    goto LABEL_138;
  }
  if (v106 != v105)
  {
    uint64_t v23 = (*(uint64_t (**)(void))(*v106 + 16))();
    goto LABEL_136;
  }
  v126 = v125;
  (*(void (**)(void *, void *))(v105[0] + 24))(v105, v125);
LABEL_138:
  long long v127 = v107;
  long long v96 = v128;
  uint64_t v24 = (uint64_t)v130;
  if (!v130)
  {
LABEL_141:
    v98 = (void *)v24;
    goto LABEL_143;
  }
  if (v130 != v129)
  {
    uint64_t v24 = (*(uint64_t (**)(void))(*v130 + 16))();
    goto LABEL_141;
  }
  v98 = v97;
  (*(void (**)(void *, void *))(v129[0] + 24))(v129, v97);
LABEL_143:
  long long v99 = v131;
  long long v132 = v124;
  uint64_t v25 = (uint64_t)v126;
  if (!v126)
  {
LABEL_146:
    v134 = (void *)v25;
    goto LABEL_148;
  }
  if (v126 != v125)
  {
    uint64_t v25 = (*(uint64_t (**)(void))(*v126 + 16))();
    goto LABEL_146;
  }
  v134 = v133;
  (*(void (**)(void *, void *))(v125[0] + 24))(v125, v133);
LABEL_148:
  long long v135 = v127;
  uint64_t v27 = *((void *)&v96 + 1);
  uint64_t v26 = v96;
  if (v96 == v132)
  {
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = 0;
    do
    {
      v26 += 8;
      v27 += 16;
      *(void *)&long long v96 = v26;
      *((void *)&v96 + 1) = v27;
      if (v26 != (void)v99 || v27 != *((void *)&v99 + 1))
      {
        while (1)
        {
          *(void *)&long long v120 = v26;
          *((void *)&v120 + 1) = v27;
          if (!v98) {
            sub_21573D7DC();
          }
          char v34 = (*(uint64_t (**)(void *, long long *))(*v98 + 48))(v98, &v120);
          uint64_t v26 = v96;
          if (v34) {
            break;
          }
          uint64_t v26 = v96 + 8;
          uint64_t v27 = *((void *)&v96 + 1) + 16;
          *(void *)&long long v96 = v26;
          *((void *)&v96 + 1) += 16;
          if (v26 == (void)v99 && v27 == *((void *)&v99 + 1)) {
            goto LABEL_164;
          }
        }
        uint64_t v27 = *((void *)&v96 + 1);
      }
LABEL_164:
      ++v28;
    }
    while (v26 != (void)v132 || v27 != *((void *)&v132 + 1));
  }
  if (v134 == v133)
  {
    (*(void (**)(void *))(v133[0] + 32))(v133);
    uint64_t v29 = v98;
    if (v98 != v97) {
      goto LABEL_154;
    }
LABEL_181:
    (*(void (**)(void *))(v97[0] + 32))(v97);
    uint64_t v30 = v126;
    if (v126 != v125) {
      goto LABEL_157;
    }
    goto LABEL_182;
  }
  if (v134) {
    (*(void (**)(void))(*v134 + 40))();
  }
  uint64_t v29 = v98;
  if (v98 == v97) {
    goto LABEL_181;
  }
LABEL_154:
  if (v29) {
    (*(void (**)(void *))(*v29 + 40))(v29);
  }
  uint64_t v30 = v126;
  if (v126 != v125)
  {
LABEL_157:
    if (v30) {
      (*(void (**)(void *))(*v30 + 40))(v30);
    }
    unint64_t v31 = v130;
    if (v130 != v129) {
      goto LABEL_160;
    }
LABEL_183:
    (*(void (**)(void *))(v129[0] + 32))(v129);
    goto LABEL_184;
  }
LABEL_182:
  (*(void (**)(void *))(v125[0] + 32))(v125);
  unint64_t v31 = v130;
  if (v130 == v129) {
    goto LABEL_183;
  }
LABEL_160:
  if (v31) {
    (*(void (**)(void *))(*v31 + 40))(v31);
  }
LABEL_184:
  if (v28 <= 1) {
    uint64_t v36 = 1;
  }
  else {
    uint64_t v36 = v28;
  }
  long long v96 = v108;
  uint64_t v37 = (uint64_t)v110;
  if (!v110) {
    goto LABEL_190;
  }
  if (v110 != v109)
  {
    uint64_t v37 = (*(uint64_t (**)(void))(*v110 + 16))();
LABEL_190:
    v98 = (void *)v37;
    goto LABEL_192;
  }
  v98 = v97;
  (*(void (**)(void *, void *))(v109[0] + 24))(v109, v97);
LABEL_192:
  long long v99 = v111;
  long long v132 = v104;
  uint64_t v38 = (uint64_t)v106;
  if (!v106)
  {
LABEL_195:
    v134 = (void *)v38;
    goto LABEL_197;
  }
  if (v106 != v105)
  {
    uint64_t v38 = (*(uint64_t (**)(void))(*v106 + 16))();
    goto LABEL_195;
  }
  v134 = v133;
  (*(void (**)(void *, void *))(v105[0] + 24))(v105, v133);
LABEL_197:
  long long v135 = v107;
  uint64_t v40 = *((void *)&v96 + 1);
  uint64_t v39 = v96;
  if (v96 == v132)
  {
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v41 = 0;
    do
    {
      uint64_t v45 = *(void *)(v40 + 8);
      v39 += 8;
      v40 += 16;
      *(void *)&long long v96 = v39;
      *((void *)&v96 + 1) = v40;
      if (v39 != (void)v99 || v40 != *((void *)&v99 + 1))
      {
        while (1)
        {
          *(void *)&long long v120 = v39;
          *((void *)&v120 + 1) = v40;
          if (!v98) {
            sub_21573D7DC();
          }
          char v47 = (*(uint64_t (**)(void *, long long *))(*v98 + 48))(v98, &v120);
          uint64_t v39 = v96;
          if (v47) {
            break;
          }
          uint64_t v39 = v96 + 8;
          uint64_t v40 = *((void *)&v96 + 1) + 16;
          *(void *)&long long v96 = v39;
          *((void *)&v96 + 1) += 16;
          if (v39 == (void)v99 && v40 == *((void *)&v99 + 1)) {
            goto LABEL_207;
          }
        }
        uint64_t v40 = *((void *)&v96 + 1);
      }
LABEL_207:
      v41 += v45;
    }
    while (v39 != (void)v132 || v40 != *((void *)&v132 + 1));
  }
  std::string::size_type v42 = 3 * v36 - 3 + v41;
  if (v134 != v133)
  {
    if (v134) {
      (*(void (**)(void))(*v134 + 40))();
    }
    unint64_t v43 = v98;
    if (v98 != v97) {
      goto LABEL_203;
    }
LABEL_224:
    (*(void (**)(void *))(v97[0] + 32))(v97);
    goto LABEL_225;
  }
  (*(void (**)(void *))(v133[0] + 32))(v133);
  unint64_t v43 = v98;
  if (v98 == v97) {
    goto LABEL_224;
  }
LABEL_203:
  if (v43) {
    (*(void (**)(void *))(*v43 + 40))(v43);
  }
LABEL_225:
  memset(&v74, 0, sizeof(v74));
  std::string::reserve(&v74, v42);
  long long v120 = v108;
  uint64_t v49 = (uint64_t)v110;
  if (v110)
  {
    if (v110 == v109)
    {
      v122 = v121;
      (*(void (**)(void *, void *))(v109[0] + 24))(v109, v121);
      goto LABEL_230;
    }
    uint64_t v49 = (*(uint64_t (**)(void))(*v110 + 16))();
  }
  v122 = (void *)v49;
LABEL_230:
  long long v123 = v111;
  if (v28 < 1) {
    goto LABEL_259;
  }
  std::string::append(&v74, **((const std::string::value_type ***)&v120 + 1), *(void *)(*((void *)&v120 + 1) + 8));
  if ((unint64_t)v28 < 2) {
    goto LABEL_259;
  }
  *(void *)&long long v120 = v120 + 8;
  uint64_t v50 = v120;
  *((void *)&v120 + 1) += 16;
  uint64_t v51 = *((void *)&v120 + 1);
  if (v120 != v123)
  {
    do
    {
      *(void *)&long long v116 = v50;
      *((void *)&v116 + 1) = v51;
      if (!v122) {
        sub_21573D7DC();
      }
      if ((*(uint64_t (**)(void *, long long *))(*v122 + 48))(v122, &v116)) {
        break;
      }
      uint64_t v50 = v120 + 8;
      uint64_t v51 = *((void *)&v120 + 1) + 16;
      *(void *)&long long v120 = v50;
      *((void *)&v120 + 1) += 16;
    }
    while (v50 != (void)v123 || v51 != *((void *)&v123 + 1));
  }
  long long v116 = v120;
  uint64_t v53 = (uint64_t)v122;
  if (!v122) {
    goto LABEL_243;
  }
  if (v122 != v121)
  {
    uint64_t v53 = (*(uint64_t (**)(void))(*v122 + 16))();
LABEL_243:
    v118 = (void *)v53;
    goto LABEL_247;
  }
  v118 = v117;
  (*(void (**)(void *, void *))(v121[0] + 24))(v121, v117);
LABEL_247:
  long long v119 = v123;
  long long v112 = v104;
  uint64_t v54 = (uint64_t)v106;
  if (!v106)
  {
LABEL_250:
    v114 = (void *)v54;
    goto LABEL_252;
  }
  if (v106 != v105)
  {
    uint64_t v54 = (*(uint64_t (**)(void))(*v106 + 16))();
    goto LABEL_250;
  }
  v114 = v113;
  (*(void (**)(void *, void *))(v105[0] + 24))(v105, v113);
LABEL_252:
  long long v115 = v107;
  if (v116 != v112)
  {
    do
    {
      std::string::append(&v74, " | ", 3uLL);
      std::string::append(&v74, **((const std::string::value_type ***)&v116 + 1), *(void *)(*((void *)&v116 + 1) + 8));
      uint64_t v62 = v116 + 8;
      uint64_t v60 = *((void *)&v116 + 1) + 16;
      *(void *)&long long v116 = v62;
      *((void *)&v116 + 1) += 16;
      if (v62 != (void)v119 || v60 != *((void *)&v119 + 1))
      {
        while (1)
        {
          v79[0] = v62;
          v79[1] = v60;
          if (!v118) {
            sub_21573D7DC();
          }
          char v64 = (*(uint64_t (**)(void *, void *))(*v118 + 48))(v118, v79);
          uint64_t v62 = v116;
          if (v64) {
            break;
          }
          uint64_t v62 = v116 + 8;
          uint64_t v60 = *((void *)&v116 + 1) + 16;
          *(void *)&long long v116 = v62;
          *((void *)&v116 + 1) += 16;
          if (v62 == (void)v119 && v60 == *((void *)&v119 + 1)) {
            goto LABEL_269;
          }
        }
        uint64_t v60 = *((void *)&v116 + 1);
      }
LABEL_269:
      ;
    }
    while (v62 != (void)v112 || v60 != *((void *)&v112 + 1));
  }
  if (v114 == v113)
  {
    (*(void (**)(void *))(v113[0] + 32))(v113);
    unint64_t v55 = v118;
    if (v118 != v117)
    {
LABEL_257:
      if (v55) {
        (*(void (**)(void *))(*v55 + 40))(v55);
      }
LABEL_259:
      int v56 = v122;
      if (v122 != v121) {
        goto LABEL_260;
      }
LABEL_287:
      (*(void (**)(void *))(v121[0] + 32))(v121);
      long long v57 = a1;
      unint64_t v58 = v106;
      if (v106 != v105) {
        goto LABEL_263;
      }
      goto LABEL_288;
    }
  }
  else
  {
    if (v114) {
      (*(void (**)(void))(*v114 + 40))();
    }
    unint64_t v55 = v118;
    if (v118 != v117) {
      goto LABEL_257;
    }
  }
  (*(void (**)(void *))(v117[0] + 32))(v117);
  int v56 = v122;
  if (v122 == v121) {
    goto LABEL_287;
  }
LABEL_260:
  long long v57 = a1;
  if (v56) {
    (*(void (**)(void *))(*v56 + 40))(v56);
  }
  unint64_t v58 = v106;
  if (v106 != v105)
  {
LABEL_263:
    if (v58) {
      (*(void (**)(void *))(*v58 + 40))(v58);
    }
    v59 = v110;
    if (v110 != v109) {
      goto LABEL_266;
    }
LABEL_289:
    (*(void (**)(void *))(v109[0] + 32))(v109);
    goto LABEL_290;
  }
LABEL_288:
  (*(void (**)(void *))(v105[0] + 32))(v105);
  v59 = v110;
  if (v110 == v109) {
    goto LABEL_289;
  }
LABEL_266:
  if (v59) {
    (*(void (**)(void *))(*v59 + 40))(v59);
  }
LABEL_290:
  if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v66 = &v74;
  }
  else {
    char v66 = (std::string *)v74.__r_.__value_.__r.__words[0];
  }
  if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v74.__r_.__value_.__l.__size_;
  }
  char v68 = sub_215731D94(v57, (uint64_t)v66, size);
  if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    char v69 = v86;
    if (v86 != v85) {
      goto LABEL_298;
    }
LABEL_310:
    (*(void (**)(void *))(v85[0] + 32))(v85);
    char v70 = v82;
    if (v82 != v81) {
      goto LABEL_301;
    }
LABEL_311:
    (*(void (**)(void *))(v81[0] + 32))(v81);
    char v71 = v94;
    if (v94 != v93) {
      goto LABEL_304;
    }
    goto LABEL_312;
  }
  operator delete(v74.__r_.__value_.__l.__data_);
  char v69 = v86;
  if (v86 == v85) {
    goto LABEL_310;
  }
LABEL_298:
  if (v69) {
    (*(void (**)(void *))(*v69 + 40))(v69);
  }
  char v70 = v82;
  if (v82 == v81) {
    goto LABEL_311;
  }
LABEL_301:
  if (v70) {
    (*(void (**)(void *))(*v70 + 40))(v70);
  }
  char v71 = v94;
  if (v94 != v93)
  {
LABEL_304:
    if (v71) {
      (*(void (**)(void *))(*v71 + 40))(v71);
    }
    char v72 = v90;
    if (v90 != v89) {
      goto LABEL_307;
    }
LABEL_313:
    (*(void (**)(void *))(v89[0] + 32))(v89);
    return v68;
  }
LABEL_312:
  (*(void (**)(void *))(v93[0] + 32))(v93);
  char v72 = v90;
  if (v90 == v89) {
    goto LABEL_313;
  }
LABEL_307:
  if (v72) {
    (*(void (**)(void *))(*v72 + 40))(v72);
  }
  return v68;
}

void sub_215ABDF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = STACK[0x3F8];
  if (STACK[0x3F8] == v72)
  {
    (*(void (**)(uint64_t))(STACK[0x3E0] + 32))(v72);
  }
  else if (v74)
  {
    (*(void (**)(unint64_t))(*(void *)v74 + 40))(v74);
  }
  unint64_t v75 = STACK[0x448];
  if (STACK[0x448] == v71)
  {
    (*(void (**)(uint64_t))(STACK[0x430] + 32))(v71);
  }
  else if (v75)
  {
    (*(void (**)(unint64_t))(*(void *)v75 + 40))(v75);
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  unint64_t v76 = STACK[0x308];
  if (STACK[0x308] == a15)
  {
    (*(void (**)(uint64_t))(STACK[0x2F0] + 32))(a15);
  }
  else if (v76)
  {
    (*(void (**)(unint64_t))(*(void *)v76 + 40))(v76);
  }
  unint64_t v77 = STACK[0x358];
  if (STACK[0x358] == v70)
  {
    (*(void (**)(uint64_t))(STACK[0x340] + 32))(v70);
  }
  else if (v77)
  {
    (*(void (**)(unint64_t))(*(void *)v77 + 40))(v77);
  }
  sub_215ABE620((uint64_t)&a52);
  sub_215ABE724((uint64_t)&a70);
  _Unwind_Resume(a1);
}

uint64_t sub_215ABE620(uint64_t a1)
{
  uint64_t v2 = a1 + 88;
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3 != v2)
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = a1 + 16;
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5 != a1 + 16) {
      goto LABEL_5;
    }
LABEL_9:
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5 == a1 + 16) {
    goto LABEL_9;
  }
LABEL_5:
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
  }
  return a1;
}

uint64_t sub_215ABE724(uint64_t a1)
{
  uint64_t v2 = a1 + 80;
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3 != v2)
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = a1 + 16;
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5 != a1 + 16) {
      goto LABEL_5;
    }
LABEL_9:
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5 == a1 + 16) {
    goto LABEL_9;
  }
LABEL_5:
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
  }
  return a1;
}

uint64_t sub_215ABE828(uint64_t result, uint64_t *a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 40))
  {
    if (*(void *)(result + 24))
    {
      uint64_t v4 = *(void ***)(result + 16);
      if (v4)
      {
        do
        {
          while (1)
          {
            uint64_t v5 = (void **)*v4;
            size_t v6 = (std::__shared_weak_count *)v4[6];
            if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
            if (*((char *)v4 + 39) < 0) {
              break;
            }
            operator delete(v4);
            uint64_t v4 = v5;
            if (!v5) {
              goto LABEL_11;
            }
          }
          operator delete(v4[2]);
          operator delete(v4);
          uint64_t v4 = v5;
        }
        while (v5);
      }
LABEL_11:
      *(void *)(v3 + 16) = 0;
      uint64_t v7 = *(void *)(v3 + 8);
      if (v7)
      {
        for (uint64_t i = 0; i != v7; ++i)
          *(void *)(*(void *)v3 + 8 * i) = 0;
      }
      *(void *)(v3 + 24) = 0;
    }
    uint64_t v9 = *a2;
    *a2 = 0;
    unint64_t v10 = *(void **)v3;
    *(void *)uint64_t v3 = v9;
    if (v10) {
      operator delete(v10);
    }
    uint64_t v13 = a2[2];
    unint64_t v12 = a2 + 2;
    uint64_t v11 = v13;
    uint64_t v14 = *(v12 - 1);
    *(void *)(v3 + 16) = v13;
    *(void *)(v3 + 8) = v14;
    *(v12 - 1) = 0;
    uint64_t v15 = v12[1];
    *(void *)(v3 + 24) = v15;
    *(_DWORD *)(v3 + 32) = *((_DWORD *)v12 + 4);
    if (v15)
    {
      unint64_t v16 = *(void *)(v11 + 8);
      unint64_t v17 = *(void *)(v3 + 8);
      if ((v17 & (v17 - 1)) != 0)
      {
        if (v16 >= v17) {
          v16 %= v17;
        }
      }
      else
      {
        v16 &= v17 - 1;
      }
      *(void *)(*(void *)v3 + 8 * v16) = v3 + 16;
      *unint64_t v12 = 0;
      v12[1] = 0;
    }
    return v3;
  }
  else
  {
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)size_t result = v18;
    *(void *)(result + 8) = a2[1];
    a2[1] = 0;
    uint64_t v19 = a2[2];
    *(void *)(result + 16) = v19;
    uint64_t v20 = a2[3];
    *(void *)(result + 24) = v20;
    *(_DWORD *)(result + 32) = *((_DWORD *)a2 + 8);
    if (v20)
    {
      unint64_t v21 = *(void *)(v19 + 8);
      unint64_t v22 = *(void *)(result + 8);
      if ((v22 & (v22 - 1)) != 0)
      {
        if (v21 >= v22) {
          v21 %= v22;
        }
      }
      else
      {
        v21 &= v22 - 1;
      }
      *(void *)(v18 + 8 * v21) = result + 16;
      a2[2] = 0;
      a2[3] = 0;
    }
    *(unsigned char *)(result + 40) = 1;
  }
  return result;
}

uint64_t sub_215ABEA2C(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (void **)*v2;
        uint64_t v4 = (std::__shared_weak_count *)v2[6];
        if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        if (*((char *)v2 + 39) < 0) {
          break;
        }
        operator delete(v2);
        uint64_t v2 = v3;
        if (!v3) {
          goto LABEL_9;
        }
      }
      operator delete(v2[2]);
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
LABEL_9:
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_215ABEAFC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_10;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_10:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_11;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_11:
    if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
      return a1;
    }
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (void **)a1;
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else
  {
    uint64_t v3 = (void **)a1;
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  operator delete(*v3);
  return a1;
}

uint64_t *sub_215ABEC10(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 8);
    *(void *)(v2 + 8) = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      uint64_t v4 = *(void *)(v2 + 8);
      *(void *)(v2 + 8) = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
    MEMORY[0x2166C4D20](v2, 0xA1C40BD48D6D6);
  }
  return a1;
}

uint64_t sub_215ABECB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 112)) {
    (*(void (**)(void))(**(void **)(*(void *)(a1 + 288) + 8) + 24))(*(void *)(*(void *)(a1 + 288) + 8));
  }
  if (*(unsigned char *)(a1 + 456)) {
    sub_215ACF4B4(a1 + 416, 0, 0);
  }
  uint64_t v2 = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = 0;
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 8);
    *(void *)(v2 + 8) = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      uint64_t v4 = *(void *)(v2 + 8);
      *(void *)(v2 + 8) = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
    MEMORY[0x2166C4D20](v2, 0xA1C40BD48D6D6);
  }
  sub_215ACC81C(a1 + 416);
  std::mutex::~mutex((std::mutex *)(a1 + 352));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 304));
  uint64_t v5 = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = 0;
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 8);
    *(void *)(v5 + 8) = 0;
    if (v6)
    {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      uint64_t v7 = *(void *)(v5 + 8);
      *(void *)(v5 + 8) = 0;
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
      }
    }
    MEMORY[0x2166C4D20](v5, 0xA1C40BD48D6D6);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 224));
  uint64_t v8 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = 0;
  if (v8) {
    MEMORY[0x2166C4D20](v8, 0x10A1C40756C35FELL);
  }
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 208);
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  if (*(unsigned char *)(a1 + 160))
  {
    uint64_t v10 = *(void *)(a1 + 152);
    if (v10 == a1 + 128)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 32))(a1 + 128);
      if (!*(unsigned char *)(a1 + 88)) {
        goto LABEL_35;
      }
      goto LABEL_25;
    }
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 40))(v10);
    }
  }
  if (!*(unsigned char *)(a1 + 88)) {
    goto LABEL_35;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a1 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = *(void **)(a1 + 64);
    if (v12 != v11)
    {
      uint64_t v14 = 0;
      do
      {
        uint64_t v15 = v12 + v14;
        if (*(unsigned char *)(v12 + v14 - 8))
        {
          uint64_t v16 = *(unsigned int *)(v15 - 16);
          if (v16 != -1) {
            ((void (*)(char *, uint64_t))off_26C677C78[v16])(&v20, v15 - 48);
          }
          *(_DWORD *)(v15 - 16) = -1;
        }
        *(void *)(v15 - 816) = off_26C678AE8;
        sub_215948050(v15 - 800);
        v14 -= 816;
      }
      while (v12 + v14 != v11);
      uint64_t v13 = *(void **)(a1 + 64);
    }
    *(void *)(a1 + 72) = v11;
    operator delete(v13);
  }
LABEL_35:
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  unint64_t v17 = *(std::__shared_weak_count **)(a1 + 24);
  if (v17) {
    std::__shared_weak_count::__release_weak(v17);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  return a1;
}

void sub_215ABF054(uint64_t a1)
{
  sub_215ABECB8(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215ABF08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3 + 16;
  int v9 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t))(*(void *)(a3 + 16) + 16))(a3 + 16) + 96);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 16))(v8);
  uint64_t v12 = v10;
  uint64_t v13 = 80;
  if (v9) {
    v10 += 80;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = (_OWORD *)(a2 + 168);
  if (*(unsigned char *)(a2 + 184))
  {
    uint64_t v11 = a2 + 176;
    if (*(unsigned __int8 *)(a2 + 176) != *(unsigned __int8 *)(v10 + 8)) {
      sub_215AB7D34();
    }
  }
  else
  {
    *uint64_t v14 = *(_OWORD *)v10;
    *(unsigned char *)(a2 + 184) = 1;
  }
  uint64_t v15 = *(void *)(v12 + v13) - *(void *)v14;
  if (!v15 || v15 < 0)
  {
    if (v15 <= -1000000001)
    {
      v21[0] = -(uint64_t)(-v15 / 0xF4240uLL);
      sub_215AB8050();
    }
  }
  else
  {
    int v16 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 16))(v8, v11) + 96);
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 16))(v8);
    uint64_t v18 = (void *)(v17 + 80);
    if (!v16) {
      uint64_t v18 = (void *)v17;
    }
    *(void *)uint64_t v14 = *v18;
  }
  v22.__pn_.__r_.__value_.__s.__data_[0] = 0;
  char v23 = 0;
  v21[0] = a2;
  v21[1] = &v22;
  v21[2] = a3;
  uint64_t v19 = *(unsigned int *)(a4 + 32);
  if (v19 == -1) {
    sub_215742D4C();
  }
  uint64_t v24 = v21;
  uint64_t result = ((uint64_t (*)(void **, uint64_t))off_26C677CF8[v19])(&v24, a4);
  if (v23) {
    sub_215AD9DC4(*(void *)(a2 + 216), a2 + 192, (std::mutex *)(a2 + 224), (const std::__fs::filesystem::path *)(a2 + 32), (long long **)a3, &v22);
  }
  *(unsigned char *)(a1 + 120) = 1;
  return result;
}

void sub_215ABF434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_21573FF04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215ABF448(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,long long __p,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  if (a28 && a26 < 0) {
    operator delete((void *)__p);
  }
  if (a2 == 4)
  {
    unint64_t v31 = __cxa_begin_catch(a1);
    std::string __p = v31[1];
    sub_215741BFC(&a23, v31 + 2);
    sub_2158AAB90(v28, (uint64_t)&__p);
    sub_21573FF04((uint64_t)&__p);
    __cxa_end_catch();
  }
  else
  {
    if (a2 == 3)
    {
      unint64_t v32 = __cxa_begin_catch(a1);
      long long v33 = (char *)(*(uint64_t (**)(void *))(*(void *)v32 + 16))(v32);
      sub_2157CFEA8((uint64_t)&a10, v33);
      a21 = 1;
      sub_21599512C(2u, &a10, (uint64_t)&__p);
    }
    else
    {
      char v34 = __cxa_begin_catch(a1);
      if (a2 == 2)
      {
        uint64_t v35 = (char *)(*(uint64_t (**)(void *))(*(void *)v34 + 16))(v34);
        sub_2157CFEA8((uint64_t)&a10, v35);
        a21 = 1;
        sub_21599512C(3u, &a10, (uint64_t)&__p);
      }
      else
      {
        LOBYTE(a10) = 0;
        a21 = 0;
        sub_21599512C(1u, &a10, (uint64_t)&__p);
      }
    }
    sub_2158AAB90(v28, (uint64_t)&__p);
    sub_21573FF04((uint64_t)&__p);
    sub_21573FE74((uint64_t)&a10);
    __cxa_end_catch();
  }
  JUMPOUT(0x215ABF408);
}

void sub_215ABF5A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void *sub_215ABF600(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_215ABF690(std::future<void> *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  v10[0] = a2;
  v10[1] = a3;
  if (*(unsigned char *)(a2 + 88))
  {
    sub_215AF0948(a3 + 16);
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = *(void *)(a2 + 72);
    if (v6 == v7) {
      goto LABEL_9;
    }
    while ((sub_215AE8840(v6, a3) & 1) == 0)
    {
      v6 += 816;
      if (v6 == v7)
      {
        uint64_t v6 = v7;
        break;
      }
    }
    if (v6 == *(void *)(a2 + 72))
    {
LABEL_9:
      v12[0] = 6;
      int v13 = 0;
      sub_215ABF8AC(a1, v10, (uint64_t)v12);
      if (v13 == -1) {
        goto LABEL_11;
      }
    }
    else
    {
      if (*(unsigned char *)(v6 + 808))
      {
        sub_215ABF8AC(a1, v10, v6 + 768);
        goto LABEL_11;
      }
      v12[0] = 6;
      int v13 = 0;
      sub_215ABF8AC(a1, v10, (uint64_t)v12);
      if (v13 == -1)
      {
LABEL_11:
        if (v9 < 0) {
          operator delete(__p);
        }
        return;
      }
    }
    ((void (*)(char *, void *))off_26C677C78[v13])(&v11, v12);
    goto LABEL_11;
  }
  v12[0] = 6;
  int v13 = 0;
  sub_215ABF8AC(a1, v10, (uint64_t)v12);
  if (v13 != -1) {
    ((void (*)(void **, void *))off_26C677C78[v13])(&__p, v12);
  }
}

void sub_215ABF848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ABF8AC(std::future<void> *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v90 = *MEMORY[0x263EF8340];
  uint64_t v6 = *a2;
  if (*(unsigned char *)(*a2 + 112))
  {
    uint64_t v7 = a2[1];
    __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(v6 + 352);
    __lk.__owns_ = 1;
    std::mutex::lock((std::mutex *)(v6 + 352));
    if (!*(unsigned char *)(v6 + 104)
      || (signed int v8 = atomic_load((unsigned int *)(v6 + 296)), *(void *)(v6 + 96) > (unint64_t)v8))
    {
LABEL_6:
      atomic_fetch_add((atomic_uint *volatile)(v6 + 296), 1u);
      uint64_t v11 = *(void *)(v6 + 288);
      v78[0] = &unk_26C678058;
      v79 = v78;
      uint64_t v12 = (std::promise<void> *)operator new(0x20uLL);
      v12[1].__state_ = 0;
      v12[2].__state_ = 0;
      v12->__state_ = (std::__assoc_sub_state *)&unk_26C677D48;
      uint64_t v62 = std::promise<void>::promise(v12 + 3);
      char v63 = (std::__shared_weak_count *)v12;
      std::promise<void>::get_future(v62);
      uint64_t v14 = *(std::__shared_weak_count **)(v6 + 16);
      int v13 = *(std::__shared_weak_count **)(v6 + 24);
      if (v13) {
        atomic_fetch_add_explicit(&v13->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v15 = *(void **)v7;
      uint64_t v16 = *(void *)(v7 + 8);
      *(void *)&long long v80 = *(void *)v7;
      *((void *)&v80 + 1) = v16;
      if (v16) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v18 = *(void *)(v7 + 24);
      uint64_t v17 = *(void *)(v7 + 32);
      v81 = (void (**)(void **))&unk_26C678D20;
      *(void *)&long long v82 = v18;
      *((void *)&v82 + 1) = v17;
      if (v17) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
      }
      LOBYTE(v86[0]) = 0;
      int v89 = -1;
      uint64_t v19 = *(unsigned int *)(a3 + 32);
      if (v19 != -1)
      {
        ((void (*)(char *, void **, uint64_t))off_26C677C88[v19])(&v64, v86, a3);
        int v89 = v19;
        uint64_t v15 = (void *)v80;
      }
      v66[0] = v14;
      v66[1] = v13;
      v67[0] = v15;
      v67[1] = *((void **)&v80 + 1);
      long long v80 = 0uLL;
      char v68 = &unk_26C678D20;
      *(_OWORD *)char v69 = v82;
      long long v82 = 0uLL;
      LOBYTE(v70) = 0;
      int v73 = -1;
      if (v19 != -1)
      {
        ((void (*)(char *, std::__shared_weak_count **, void **))off_26C677DD8[v19])(&v65, &v70, v86);
        int v73 = v19;
      }
      char v20 = (char *)operator new(0x78uLL);
      unint64_t v21 = v20;
      long long v22 = *(_OWORD *)v67;
      *(_OWORD *)(v20 + 24) = *(_OWORD *)v66;
      char v23 = v20 + 24;
      *((void *)v20 + 1) = 0;
      *((void *)v20 + 2) = 0;
      *(void *)char v20 = &unk_26C677D98;
      v66[0] = 0;
      v66[1] = 0;
      *(_OWORD *)(v20 + 40) = v22;
      v67[0] = 0;
      v67[1] = 0;
      *((void *)v20 + 7) = &unk_26C678D20;
      *((_OWORD *)v20 + 4) = *(_OWORD *)v69;
      v69[0] = 0;
      v69[1] = 0;
      v20[80] = 0;
      *((_DWORD *)v20 + 28) = -1;
      if (v19 == -1)
      {
        uint64_t v60 = v20 + 24;
        uint64_t v61 = (std::__shared_weak_count *)v20;
        int v73 = -1;
        uint64_t v24 = (std::__shared_weak_count *)v69[1];
        if (!v69[1]) {
          goto LABEL_26;
        }
      }
      else
      {
        ((void (*)(char *, char *, std::__shared_weak_count **))off_26C677DD8[v19])(&v65, v20 + 80, &v70);
        *((_DWORD *)v21 + 28) = v19;
        uint64_t v60 = v23;
        uint64_t v61 = (std::__shared_weak_count *)v21;
        if (v73 != -1) {
          ((void (*)(char *, std::__shared_weak_count **))off_26C677C78[v73])(&v65, &v70);
        }
        int v73 = -1;
        uint64_t v24 = (std::__shared_weak_count *)v69[1];
        if (!v69[1])
        {
LABEL_26:
          uint64_t v25 = (std::__shared_weak_count *)v67[1];
          if (v67[1] && !atomic_fetch_add((atomic_ullong *volatile)v67[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
          if (v66[1]) {
            std::__shared_weak_count::__release_weak(v66[1]);
          }
          if (v89 != -1) {
            ((void (*)(char *, void **))off_26C677C78[v89])(&v65, v86);
          }
          uint64_t v26 = (std::__shared_weak_count *)*((void *)&v82 + 1);
          if (*((void *)&v82 + 1)
            && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v82 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
          uint64_t v27 = (std::__shared_weak_count *)*((void *)&v80 + 1);
          if (*((void *)&v80 + 1)
            && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v80 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
          uint64_t v28 = (std::__shared_weak_count *)v62;
          uint64_t v29 = v63;
          v66[0] = (std::__shared_weak_count *)v62;
          v66[1] = v63;
          uint64_t v62 = 0;
          char v63 = 0;
          if (v79)
          {
            if (v79 == v78)
            {
              v69[0] = v67;
              (*(void (**)(void *, void **))(v78[0] + 24))(v78, v67);
              uint64_t v28 = v66[0];
              uint64_t v29 = v66[1];
            }
            else
            {
              v69[0] = v79;
              v79 = 0;
            }
          }
          else
          {
            v69[0] = 0;
          }
          uint64_t v30 = v60;
          unint64_t v31 = v61;
          v69[1] = v60;
          uint64_t v70 = v61;
          uint64_t v60 = 0;
          uint64_t v61 = 0;
          *(void *)&long long v80 = v28;
          *((void *)&v80 + 1) = v29;
          v66[0] = 0;
          v66[1] = 0;
          if (v69[0])
          {
            if (v69[0] == v67)
            {
              long long v83 = (void **)&v81;
              (*((void (**)(void **, void (***)(void **)))v67[0] + 3))(v67, &v81);
              uint64_t v30 = v69[1];
              unint64_t v31 = v70;
            }
            else
            {
              long long v83 = (void **)v69[0];
              v69[0] = 0;
            }
          }
          else
          {
            long long v83 = 0;
          }
          long long v84 = v30;
          v85 = v31;
          v69[1] = 0;
          uint64_t v70 = 0;
          long long v88 = 0;
          unint64_t v32 = (char *)operator new(0x48uLL);
          long long v33 = v32;
          *(void *)unint64_t v32 = &unk_26C677DF8;
          *(_OWORD *)(v32 + 8) = v80;
          long long v80 = 0uLL;
          if (v83)
          {
            if (v83 == (void **)&v81)
            {
              *((void *)v32 + 6) = v32 + 24;
              v81[3]((void **)&v81);
              uint64_t v30 = v84;
              unint64_t v31 = v85;
            }
            else
            {
              *((void *)v32 + 6) = v83;
              long long v83 = 0;
            }
          }
          else
          {
            *((void *)v32 + 6) = 0;
          }
          *((void *)v33 + 7) = v30;
          *((void *)v33 + 8) = v31;
          long long v84 = 0;
          v85 = 0;
          long long v88 = (void **)v33;
          (*(void (**)(uint64_t, void **))(*(void *)v11 + 40))(v11, v86);
          if (v88 == v86)
          {
            (*((void (**)(void **))v86[0] + 4))(v86);
            char v34 = a1;
            uint64_t v35 = v85;
            if (!v85) {
              goto LABEL_61;
            }
          }
          else
          {
            char v34 = a1;
            if (v88) {
              (*((void (**)(void))*v88 + 5))();
            }
            uint64_t v35 = v85;
            if (!v85) {
              goto LABEL_61;
            }
          }
          if (!atomic_fetch_add(&v35->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
            uint64_t v36 = v83;
            if (v83 != (void **)&v81)
            {
LABEL_62:
              if (v36) {
                (*((void (**)(void **))*v36 + 5))(v36);
              }
              uint64_t v37 = (std::__shared_weak_count *)*((void *)&v80 + 1);
              if (!*((void *)&v80 + 1)) {
                goto LABEL_69;
              }
              goto LABEL_68;
            }
LABEL_67:
            v81[4]((void **)&v81);
            uint64_t v37 = (std::__shared_weak_count *)*((void *)&v80 + 1);
            if (!*((void *)&v80 + 1)) {
              goto LABEL_69;
            }
LABEL_68:
            if (!atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
              uint64_t v38 = v70;
              if (!v70) {
                goto LABEL_71;
              }
              goto LABEL_70;
            }
LABEL_69:
            uint64_t v38 = v70;
            if (!v70) {
              goto LABEL_71;
            }
LABEL_70:
            if (!atomic_fetch_add(&v38->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
              uint64_t v39 = v69[0];
              if (v69[0] != v67)
              {
LABEL_72:
                if (v39) {
                  (*(void (**)(void *))(*(void *)v39 + 40))(v39);
                }
                uint64_t v40 = v66[1];
                if (!v66[1])
                {
LABEL_82:
                  uint64_t v41 = v61;
                  if (v61 && !atomic_fetch_add(&v61->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                  {
                    ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
                    std::__shared_weak_count::__release_weak(v41);
                    std::string::size_type v42 = v63;
                    if (!v63) {
                      goto LABEL_86;
                    }
                  }
                  else
                  {
                    std::string::size_type v42 = v63;
                    if (!v63) {
                      goto LABEL_86;
                    }
                  }
                  if (!atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                  {
                    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                    std::__shared_weak_count::__release_weak(v42);
                    unint64_t v43 = v79;
                    if (v79 != v78)
                    {
LABEL_87:
                      if (v43) {
                        (*(void (**)(void *))(*v43 + 40))(v43);
                      }
                      if (!__lk.__owns_) {
                        goto LABEL_91;
                      }
LABEL_90:
                      std::mutex::unlock(__lk.__m_);
LABEL_91:
                      v34->__state_ = v58.__state_;
                      v58.__state_ = 0;
                      LOBYTE(v34[1].__state_) = 1;
                      std::future<void>::~future(&v58);
                      return;
                    }
LABEL_96:
                    (*(void (**)(void *))(v78[0] + 32))(v78);
                    if (!__lk.__owns_) {
                      goto LABEL_91;
                    }
                    goto LABEL_90;
                  }
LABEL_86:
                  unint64_t v43 = v79;
                  if (v79 != v78) {
                    goto LABEL_87;
                  }
                  goto LABEL_96;
                }
LABEL_80:
                if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                  std::__shared_weak_count::__release_weak(v40);
                }
                goto LABEL_82;
              }
LABEL_79:
              (*((void (**)(void **))v67[0] + 4))(v67);
              uint64_t v40 = v66[1];
              if (!v66[1]) {
                goto LABEL_82;
              }
              goto LABEL_80;
            }
LABEL_71:
            uint64_t v39 = v69[0];
            if (v69[0] != v67) {
              goto LABEL_72;
            }
            goto LABEL_79;
          }
LABEL_61:
          uint64_t v36 = v83;
          if (v83 != (void **)&v81) {
            goto LABEL_62;
          }
          goto LABEL_67;
        }
      }
      if (!atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
      goto LABEL_26;
    }
    v9.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
    signed int v10 = atomic_load((unsigned int *)(v6 + 296));
    if (!*(unsigned char *)(v6 + 104)) {
      goto LABEL_167;
    }
    if (*(void *)(v6 + 96) > (unint64_t)v10) {
      goto LABEL_6;
    }
    std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = v9.__d_.__rep_;
    LODWORD(v82) = 0;
    sub_2158D82A8(&v80, "blocking caller while waiting for space in queue");
    if (v82 == -1) {
LABEL_168:
    }
      sub_215742D4C();
    v78[0] = &v62;
    ((void (*)(void **__return_ptr, void *, long long *))off_26C677D20[v82])(v86, v78, &v80);
    if (v82 != -1) {
      ((void (*)(void *, long long *))off_26C677D08[v82])(v78, &v80);
    }
    sub_215AB84DC((uint64_t)v86, *(void *)(v6 + 96), *(void *)(v6 + 104), (uint64_t)v66);
    uint64_t v56 = v7 + 16;
    if (*(unsigned char *)(v6 + 160))
    {
      uint64_t v47 = *(void *)(v6 + 152);
      if (!v47) {
LABEL_169:
      }
        sub_21573D7DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::__shared_weak_count **))(*(void *)v47 + 48))(v47, v6 + 32, v56, v66);
    }
    if (v76)
    {
      if (v75)
      {
        if (v74 < 0) {
          operator delete(__p);
        }
        if (v71 < 0) {
          operator delete(v69[1]);
        }
      }
      if (LOBYTE(v69[0]) && SHIBYTE(v68) < 0) {
        operator delete(v67[0]);
      }
    }
    if (v87 < 0) {
      operator delete(v86[0]);
    }
    v48.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
    std::chrono::steady_clock::now();
    v49.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    v50.__d_.__rep_ = 1000000000;
    if (v49.__d_.__rep_)
    {
      if (v49.__d_.__rep_ <= 0)
      {
        v50.__d_.__rep_ = 0x800000003B9ACA00;
        if ((unint64_t)v49.__d_.__rep_ < 0xFFDF3B645A1CAC09) {
          goto LABEL_135;
        }
      }
      else if ((unint64_t)v49.__d_.__rep_ >= 0x20C49BA5D411B8)
      {
        v50.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_135;
      }
      v50.__d_.__rep_ = 1000 * v49.__d_.__rep_ + 1000000000;
    }
LABEL_135:
    std::condition_variable::__do_timed_wait((std::condition_variable *)(v6 + 304), &__lk, v50);
    std::chrono::steady_clock::now();
    signed int v51 = atomic_load((unsigned int *)(v6 + 296));
    if (*(unsigned char *)(v6 + 104))
    {
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v52 = v48.__d_.__rep_ - rep;
      while (1)
      {
        if (*(void *)(v6 + 96) > (unint64_t)v51) {
          goto LABEL_6;
        }
        if (std::chrono::steady_clock::now().__d_.__rep_ - (v52 + rep) >= 500000000) {
          break;
        }
LABEL_157:
        std::chrono::steady_clock::now();
        v55.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        v53.__d_.__rep_ = 1000000000;
        if (v55.__d_.__rep_)
        {
          if (v55.__d_.__rep_ < 1)
          {
            if ((unint64_t)v55.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
              v53.__d_.__rep_ = 1000 * v55.__d_.__rep_ + 1000000000;
            }
            else {
              v53.__d_.__rep_ = 0x800000003B9ACA00;
            }
          }
          else if ((unint64_t)v55.__d_.__rep_ >= 0x20C49BA5D411B8)
          {
            v53.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
          }
          else
          {
            v53.__d_.__rep_ = 1000 * v55.__d_.__rep_ + 1000000000;
          }
        }
        std::condition_variable::__do_timed_wait((std::condition_variable *)(v6 + 304), &__lk, v53);
        std::chrono::steady_clock::now();
        signed int v51 = atomic_load((unsigned int *)(v6 + 296));
        if (!*(unsigned char *)(v6 + 104)) {
          goto LABEL_167;
        }
      }
      LODWORD(v82) = 0;
      sub_2158D82A8(&v80, "blocking caller while waiting for space in queue");
      if (v82 == -1) {
        goto LABEL_168;
      }
      v78[0] = &v62;
      ((void (*)(void **__return_ptr, void *, long long *))off_26C677D20[v82])(v86, v78, &v80);
      if (v82 != -1) {
        ((void (*)(void *, long long *))off_26C677D08[v82])(v78, &v80);
      }
      sub_215AB84DC((uint64_t)v86, *(void *)(v6 + 96), *(void *)(v6 + 104), (uint64_t)v66);
      if (*(unsigned char *)(v6 + 160))
      {
        uint64_t v54 = *(void *)(v6 + 152);
        if (!v54) {
          goto LABEL_169;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::__shared_weak_count **))(*(void *)v54 + 48))(v54, v6 + 32, v56, v66);
      }
      if (!v76) {
        goto LABEL_154;
      }
      if (!v75) {
        goto LABEL_151;
      }
      if (v74 < 0)
      {
        operator delete(__p);
        if ((v71 & 0x80000000) == 0)
        {
LABEL_151:
          if (LOBYTE(v69[0])) {
            goto LABEL_152;
          }
          goto LABEL_154;
        }
      }
      else if ((v71 & 0x80000000) == 0)
      {
        goto LABEL_151;
      }
      operator delete(v69[1]);
      if (LOBYTE(v69[0]))
      {
LABEL_152:
        if (SHIBYTE(v68) < 0) {
          operator delete(v67[0]);
        }
      }
LABEL_154:
      if (v87 < 0) {
        operator delete(v86[0]);
      }
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v52 = std::chrono::steady_clock::now().__d_.__rep_ - rep;
      goto LABEL_157;
    }
LABEL_167:
    sub_2157B6F38();
  }
  sub_215ABF08C((uint64_t)v66, *a2, a2[1], a3);
  if (v77)
  {
    LOBYTE(a1->__state_) = 0;
    LOBYTE(a1[1].__state_) = 0;
    return;
  }
  if (!*(unsigned char *)(v6 + 160))
  {
    LOBYTE(a1->__state_) = 0;
    LOBYTE(a1[1].__state_) = 0;
LABEL_124:
    if (v76)
    {
      if (v75)
      {
        if (v74 < 0) {
          operator delete(__p);
        }
        if (v71 < 0) {
          operator delete(v69[1]);
        }
      }
      if (LOBYTE(v69[0]) && SHIBYTE(v68) < 0) {
        operator delete(v67[0]);
      }
    }
    return;
  }
  uint64_t v44 = *(void *)(v6 + 152);
  if (!v44) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, std::__shared_weak_count **))(*(void *)v44 + 48))(v44, v6 + 32, a2[1] + 16, v66);
  int v45 = v77;
  LOBYTE(a1->__state_) = 0;
  LOBYTE(a1[1].__state_) = 0;
  if (!v45) {
    goto LABEL_124;
  }
}

void sub_215AC07F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::future<void> a11, std::mutex *a12, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, char a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_21573FF04((uint64_t)&a25);
  if (*(char *)(v41 - 113) < 0) {
    operator delete(*(void **)(v41 - 136));
  }
  if (!a13) {
    _Unwind_Resume(a1);
  }
  std::mutex::unlock(a12);
  _Unwind_Resume(a1);
}

uint64_t sub_215AC0988(uint64_t a1, uint64_t a2)
{
  sub_215ABF690(&v4, a1, a2);
  if (v5) {
    std::future<void>::~future(&v4);
  }
  return a1;
}

uint64_t sub_215AC09D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))();
}

void sub_215AC09FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  *a1 = &unk_26C677B60;
  LOBYTE(v34[0]) = 0;
  char v36 = 0;
  if (*(unsigned char *)(a4 + 32))
  {
    uint64_t v8 = *(void *)(a4 + 24);
    if (v8)
    {
      if (v8 == a4)
      {
        uint64_t v35 = v34;
        (*(void (**)(uint64_t, void *))(*(void *)a4 + 24))(a4, v34);
      }
      else
      {
        uint64_t v35 = *(void **)(a4 + 24);
        *(void *)(a4 + 24) = 0;
      }
    }
    else
    {
      uint64_t v35 = 0;
    }
    char v36 = 1;
  }
  if (*(unsigned char *)(a3 + 48)) {
    sub_215D094B0();
  }
  std::chrono::steady_clock::time_point v9 = (char *)operator new(0x1F0uLL);
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(void *)std::chrono::steady_clock::time_point v9 = &unk_26C678008;
  LOBYTE(v37[0]) = 0;
  char v39 = 0;
  if (v36)
  {
    if (v35)
    {
      if (v35 == v34)
      {
        uint64_t v38 = v37;
        (*(void (**)(void *, void *))(v34[0] + 24))(v34, v37);
      }
      else
      {
        uint64_t v38 = v35;
        uint64_t v35 = 0;
      }
    }
    else
    {
      uint64_t v38 = 0;
    }
    char v39 = 1;
  }
  *((_OWORD *)v9 + 2) = 0u;
  *((void *)v9 + 3) = &unk_26C677B28;
  std::string __dst = (void **)(v9 + 56);
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((void *)v9 + 10) = a5;
  sub_21577A1A0((uint64_t)(v9 + 88), a3);
  v9[152] = 0;
  long long v10 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v9 + 136) = v10;
  v9[184] = 0;
  if (v39)
  {
    if (v38)
    {
      if (v38 == v37)
      {
        *((void *)v9 + 22) = v9 + 152;
        (*(void (**)(void *, char *))(v37[0] + 24))(v37, v9 + 152);
      }
      else
      {
        *((void *)v9 + 22) = v38;
        uint64_t v38 = 0;
      }
    }
    else
    {
      *((void *)v9 + 22) = 0;
    }
    v9[184] = 1;
  }
  *((void *)v9 + 31) = 850045863;
  v9[192] = 0;
  v9[208] = 0;
  *((void *)v9 + 27) = &unk_26C6824A8;
  *((void *)v9 + 28) = 0;
  *((void *)v9 + 29) = 0;
  *((void *)v9 + 30) = 0;
  *((_OWORD *)v9 + 16) = 0u;
  *((_OWORD *)v9 + 17) = 0u;
  *((_OWORD *)v9 + 18) = 0u;
  *((void *)v9 + 38) = 0;
  *((void *)v9 + 39) = 0;
  *((_DWORD *)v9 + 80) = 0;
  *((void *)v9 + 41) = 1018212795;
  *((_OWORD *)v9 + 21) = 0u;
  *((_OWORD *)v9 + 22) = 0u;
  *((void *)v9 + 46) = 0;
  *((void *)v9 + 47) = 850045863;
  v9[480] = 0;
  *((_OWORD *)v9 + 24) = 0u;
  *((_OWORD *)v9 + 26) = 0u;
  *(_OWORD *)(v9 + 425) = 0u;
  uint64_t v11 = *((void *)v9 + 18);
  *((_OWORD *)v9 + 25) = 0u;
  if ((unint64_t)(v11 - 1) >= 2)
  {
    if (!v11)
    {
      if (*(unsigned char *)(a3 + 48))
      {
        *(_OWORD *)uint64_t v29 = 0uLL;
        *(_OWORD *)std::string __p = 0uLL;
        LODWORD(v31) = 1065353216;
        sub_215ABE828((uint64_t)(v9 + 440), (uint64_t *)v29);
        uint64_t v15 = (void **)__p[0];
        if (__p[0])
        {
          do
          {
            while (1)
            {
              uint64_t v16 = (void **)*v15;
              uint64_t v17 = (std::__shared_weak_count *)v15[6];
              if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
                std::__shared_weak_count::__release_weak(v17);
              }
              if (*((char *)v15 + 39) < 0) {
                break;
              }
              operator delete(v15);
              uint64_t v15 = v16;
              if (!v16) {
                goto LABEL_46;
              }
            }
            operator delete(v15[2]);
            operator delete(v15);
            uint64_t v15 = v16;
          }
          while (v16);
        }
LABEL_46:
        if (v29[0]) {
          operator delete(v29[0]);
        }
        v9[488] = 0;
LABEL_51:
        uint64_t v25 = 0x500000001;
        int v26 = 0;
        uint64_t v27 = 1;
        int v28 = 0;
        sub_215AD4F80(a2, (long long *)&v25, (uint64_t)v29);
        if (v33)
        {
          if (v9[79] < 0)
          {
            if (SHIBYTE(__p[0]) >= 0) {
              uint64_t v19 = v29;
            }
            else {
              uint64_t v19 = (void **)v29[0];
            }
            if (SHIBYTE(__p[0]) >= 0) {
              size_t v20 = HIBYTE(__p[0]);
            }
            else {
              size_t v20 = (size_t)v29[1];
            }
            sub_21573ABD0(__dst, v19, v20);
          }
          else if ((HIBYTE(__p[0]) & 0x80) != 0)
          {
            sub_21573AB08(__dst, v29[0], (size_t)v29[1]);
          }
          else
          {
            *(_OWORD *)std::string __dst = *(_OWORD *)v29;
            *((void **)v9 + 9) = __p[0];
          }
          uint64_t v22 = v31;
          uint64_t v21 = v32;
          if (v32) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v32 + 8), 1uLL, memory_order_relaxed);
          }
          char v23 = (std::__shared_weak_count *)*((void *)v9 + 29);
          *((void *)v9 + 28) = v22;
          *((void *)v9 + 29) = v21;
          if (v23)
          {
            if (!atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
              std::__shared_weak_count::__release_weak(v23);
            }
          }
          (*(void (**)(void))(**((void **)v9 + 28) + 16))();
          operator new();
        }
        sub_215983058((uint64_t)v29);
        sub_21598E6D4((uint64_t)v29);
      }
      BOOL v18 = 1;
LABEL_50:
      v9[488] = v18;
      goto LABEL_51;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v29 = 0uLL;
    *(_OWORD *)std::string __p = 0uLL;
    LODWORD(v31) = 1065353216;
    sub_215ABE828((uint64_t)(v9 + 440), (uint64_t *)v29);
    uint64_t v12 = (void **)__p[0];
    if (__p[0])
    {
      do
      {
        while (1)
        {
          int v13 = (void **)*v12;
          uint64_t v14 = (std::__shared_weak_count *)v12[6];
          if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
            std::__shared_weak_count::__release_weak(v14);
          }
          if (*((char *)v12 + 39) < 0) {
            break;
          }
          operator delete(v12);
          uint64_t v12 = v13;
          if (!v13) {
            goto LABEL_33;
          }
        }
        operator delete(v12[2]);
        operator delete(v12);
        uint64_t v12 = v13;
      }
      while (v13);
    }
LABEL_33:
    if (v29[0]) {
      operator delete(v29[0]);
    }
    uint64_t v11 = *((void *)v9 + 18);
  }
  BOOL v18 = (v11 & 0xFFFFFFFFFFFFFFFELL) == 2;
  goto LABEL_50;
}

void sub_215AC14C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AC169C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    if (*(unsigned char *)(v2 + 112)) {
      (*(void (**)(void))(**(void **)(*(void *)(v2 + 288) + 8) + 24))(*(void *)(*(void *)(v2 + 288) + 8));
    }
    if (*(unsigned char *)(v2 + 456)) {
      sub_215ACF4B4(v2 + 416, 0, 0);
    }
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215AC1770(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    if (*(unsigned char *)(v2 + 112)) {
      (*(void (**)(void))(**(void **)(*(void *)(v2 + 288) + 8) + 24))(*(void *)(*(void *)(v2 + 288) + 8));
    }
    if (*(unsigned char *)(v2 + 456)) {
      sub_215ACF4B4(v2 + 416, 0, 0);
    }
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AC1854(uint64_t a1, uint64_t a2)
{
  sub_215ABF690(&v4, *(void *)(a1 + 8), a2);
  if (v5) {
    std::future<void>::~future(&v4);
  }
  return a1;
}

uint64_t *sub_215AC18A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(void *)uint64_t v2 = &unk_26C685758;
    if (*(char *)(v2 + 159) < 0)
    {
      operator delete(*(void **)(v2 + 136));
      if ((*(char *)(v2 + 71) & 0x80000000) == 0)
      {
LABEL_4:
        if ((*(char *)(v2 + 47) & 0x80000000) == 0)
        {
LABEL_5:
          MEMORY[0x2166C4D20](v2, 0x10B3C40F5E21753);
          return a1;
        }
LABEL_9:
        operator delete(*(void **)(v2 + 24));
        goto LABEL_5;
      }
    }
    else if ((*(char *)(v2 + 71) & 0x80000000) == 0)
    {
      goto LABEL_4;
    }
    operator delete(*(void **)(v2 + 48));
    if ((*(char *)(v2 + 47) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  return a1;
}

void sub_215AC1948(void *a1)
{
  uint64_t v2 = a1[32];
  if (!v2) {
    return;
  }
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v2 + 16))(v2);
  int v67 = 0;
  memset(v66, 0, sizeof(v66));
  LOBYTE(v72) = 0;
  *(_OWORD *)int v73 = 0u;
  memset(v74, 0, sizeof(v74));
  uint64_t v75 = 0;
  char v69 = 0;
  long long v68 = 0uLL;
  LOBYTE(v70) = 0;
  sub_215AD4354((uint64_t)&v53, (uint64_t)v66);
  if (a1[35] < 0x86BCA1AF286BCA1BLL * ((uint64_t)(a1[37] - a1[36]) >> 3)) {
    goto LABEL_150;
  }
  unint64_t v4 = 0;
  char v5 = v3 + 4;
  while (1)
  {
    uint64_t v6 = a1[34];
    *(unsigned char *)(v6 + 128) = 1;
    *(void *)(v6 + 80) = 0;
    *(void *)(v6 + 104) = 0;
    *(_WORD *)(v6 + 130) = 0;
    *(unsigned char *)(v6 + 132) = 0;
    LODWORD(v66[0]) = 3;
    sub_215DFABD4(v6, v66);
    unsigned int v7 = v66[0];
    if (LODWORD(v66[0]) >= 3) {
      unsigned int v8 = 3;
    }
    else {
      unsigned int v8 = v66[0];
    }
    if (v8 >= 2)
    {
      sub_215DFB534(v6, &v53);
      ++*(void *)(v6 + 80);
      if (*(unsigned char *)(v6 + 128)) {
        BOOL v9 = *(unsigned char *)(v6 + 131) == 0;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        sub_215DFD700(v6, (uint64_t)v66);
        if (SHIBYTE(v55) < 0) {
          operator delete((void *)__p);
        }
        long long __p = *(_OWORD *)v66;
        std::chrono::system_clock::time_point v55 = v66[2];
        ++*(void *)(v6 + 104);
      }
      else
      {
        *(unsigned char *)(v6 + 132) = 1;
      }
      sub_215DFABD4(v6, &v56);
      uint64_t v10 = *(void *)(v6 + 80);
      *(void *)(v6 + 80) = v10 + 1;
      if (*(unsigned char *)(v6 + 128) && *(unsigned char *)(v6 + 131))
      {
        *(void *)(v6 + 80) = v10 + 2;
      }
      else
      {
        sub_215DFD700(v6, (uint64_t)v66);
        if (SHIBYTE(v58) < 0) {
          operator delete((void *)v57);
        }
        long long v57 = *(_OWORD *)v66;
        std::future<void> v58 = v66[2];
        ++*(void *)(v6 + 104);
        int v13 = *(unsigned __int8 *)(v6 + 128);
        int v14 = *(unsigned __int8 *)(v6 + 131);
        ++*(void *)(v6 + 80);
        if (!v13 || !v14)
        {
          sub_215DFD700(v6, (uint64_t)v66);
          if (SHIBYTE(v60) < 0) {
            operator delete((void *)v59);
          }
          long long v59 = *(_OWORD *)v66;
          uint64_t v60 = v66[2];
          ++*(void *)(v6 + 104);
LABEL_63:
          sub_215DFB214(v6, &v61);
          if (v7 >= 3)
          {
            uint64_t v16 = *(void *)(v6 + 80);
            *(void *)(v6 + 80) = v16 + 1;
            if (*(unsigned char *)(v6 + 128) && *(unsigned char *)(v6 + 131))
            {
              *(void *)(v6 + 80) = v16 + 2;
LABEL_71:
              *(unsigned char *)(v6 + 132) = 1;
              goto LABEL_135;
            }
            sub_215DFD700(v6, (uint64_t)v66);
            if (SHIBYTE(v63) < 0) {
              operator delete((void *)v62);
            }
            long long v62 = *(_OWORD *)v66;
            char v63 = v66[2];
            ++*(void *)(v6 + 104);
            int v17 = *(unsigned __int8 *)(v6 + 128);
            int v18 = *(unsigned __int8 *)(v6 + 131);
            ++*(void *)(v6 + 80);
            if (v17 && v18) {
              goto LABEL_71;
            }
            sub_215DFD700(v6, (uint64_t)v66);
            if (SHIBYTE(v65) < 0) {
              operator delete((void *)v64);
            }
            long long v64 = *(_OWORD *)v66;
            char v65 = v66[2];
            ++*(void *)(v6 + 104);
            while (1)
            {
LABEL_135:
              if (*(unsigned char *)(v6 + 131)
                || (*(unsigned char *)(*(void *)(v6 + 16) + *(void *)(**(void **)(v6 + 16) - 24) + 32) & 2) != 0)
              {
                goto LABEL_79;
              }
              sub_215DFD700(v6, (uint64_t)v66);
              if (SHIBYTE(v66[2]) < 0)
              {
                if (v66[1] == (void *)1 && *(unsigned __int8 *)(v6 + 72) == *(unsigned __int8 *)v66[0])
                {
LABEL_143:
                  char v51 = 0;
                  if (SHIBYTE(v66[2]) < 0) {
                    goto LABEL_146;
                  }
                  goto LABEL_134;
                }
              }
              else if (SHIBYTE(v66[2]) == 1 && *(unsigned __int8 *)(v6 + 72) == LOBYTE(v66[0]))
              {
                goto LABEL_143;
              }
              char v51 = 1;
              if (SHIBYTE(v66[2]) < 0) {
LABEL_146:
              }
                operator delete(v66[0]);
LABEL_134:
              if ((v51 & 1) == 0) {
                goto LABEL_79;
              }
            }
          }
          goto LABEL_78;
        }
      }
      *(unsigned char *)(v6 + 132) = 1;
      goto LABEL_63;
    }
    int v67 = 0;
    memset(v66, 0, sizeof(v66));
    LOBYTE(v72) = 0;
    *(_OWORD *)int v73 = 0u;
    memset(v74, 0, sizeof(v74));
    uint64_t v75 = 0;
    char v69 = 0;
    long long v68 = 0uLL;
    LOBYTE(v70) = 0;
    sub_215AD4224((uint64_t)&v76, (uint64_t)v66);
    sub_215DFB534(v6, &v76);
    ++*(void *)(v6 + 80);
    if (!*(unsigned char *)(v6 + 128)) {
      goto LABEL_22;
    }
    if (*(unsigned char *)(v6 + 131))
    {
      *(unsigned char *)(v6 + 132) = 1;
    }
    else
    {
LABEL_22:
      sub_215DFD700(v6, (uint64_t)v66);
      if (SHIBYTE(v78) < 0) {
        operator delete((void *)v77);
      }
      long long v77 = *(_OWORD *)v66;
      uint64_t v78 = v66[2];
      ++*(void *)(v6 + 104);
    }
    sub_215DFABD4(v6, &v79);
    uint64_t v11 = *(void *)(v6 + 80) + 1;
    *(void *)(v6 + 80) = v11;
    if (*(unsigned char *)(v6 + 128) && *(unsigned char *)(v6 + 131))
    {
      int v12 = 1;
      *(unsigned char *)(v6 + 132) = 1;
      *(void *)(v6 + 80) = v11 + 1;
    }
    else
    {
      sub_215DFD700(v6, (uint64_t)v66);
      if (SHIBYTE(v81) < 0) {
        operator delete((void *)v80);
      }
      long long v80 = *(_OWORD *)v66;
      v81 = v66[2];
      ++*(void *)(v6 + 104);
      int v15 = *(unsigned __int8 *)(v6 + 128);
      int v12 = *(unsigned __int8 *)(v6 + 131);
      ++*(void *)(v6 + 80);
      if (!v15) {
        goto LABEL_38;
      }
    }
    if (v12)
    {
      *(unsigned char *)(v6 + 132) = 1;
      goto LABEL_41;
    }
LABEL_38:
    sub_215DFD700(v6, (uint64_t)v66);
    if (SHIBYTE(v83) < 0) {
      operator delete((void *)v82);
    }
    long long v82 = *(_OWORD *)v66;
    long long v83 = v66[2];
    ++*(void *)(v6 + 104);
LABEL_41:
    sub_215DFB214(v6, &v84);
    sub_215AD4578((uint64_t)v66, (uint64_t)&v76);
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v53 = v66[0];
    if (SHIBYTE(v55) < 0) {
      operator delete((void *)__p);
    }
    long long __p = *(_OWORD *)&v66[1];
    std::chrono::system_clock::time_point v55 = v66[3];
    HIBYTE(v66[3]) = 0;
    LOBYTE(v66[1]) = 0;
    int v56 = v67;
    if (SHIBYTE(v58) < 0) {
      operator delete((void *)v57);
    }
    long long v57 = v68;
    std::future<void> v58 = v69;
    HIBYTE(v69) = 0;
    LOBYTE(v68) = 0;
    if (SHIBYTE(v60) < 0) {
      operator delete((void *)v59);
    }
    long long v59 = v70;
    uint64_t v60 = v71;
    HIBYTE(v71) = 0;
    LOBYTE(v70) = 0;
    uint64_t v61 = v72;
    if (SHIBYTE(v63) < 0) {
      operator delete((void *)v62);
    }
    long long v62 = *(_OWORD *)v73;
    char v63 = *(void **)&v74[0];
    BYTE7(v74[0]) = 0;
    LOBYTE(v73[0]) = 0;
    if (SHIBYTE(v65) < 0)
    {
      operator delete((void *)v64);
      long long v64 = *(_OWORD *)((char *)v74 + 8);
      char v65 = (void *)*((void *)&v74[1] + 1);
      HIBYTE(v74[1]) = 0;
      BYTE8(v74[0]) = 0;
      if (SBYTE7(v74[0]) < 0)
      {
        operator delete(v73[0]);
        if ((SHIBYTE(v71) & 0x80000000) == 0)
        {
LABEL_54:
          if ((SHIBYTE(v69) & 0x80000000) == 0) {
            goto LABEL_55;
          }
          goto LABEL_74;
        }
      }
      else if ((SHIBYTE(v71) & 0x80000000) == 0)
      {
        goto LABEL_54;
      }
    }
    else
    {
      long long v64 = *(_OWORD *)((char *)v74 + 8);
      char v65 = (void *)*((void *)&v74[1] + 1);
      HIBYTE(v74[1]) = 0;
      BYTE8(v74[0]) = 0;
      if ((SHIBYTE(v71) & 0x80000000) == 0) {
        goto LABEL_54;
      }
    }
    operator delete((void *)v70);
    if ((SHIBYTE(v69) & 0x80000000) == 0)
    {
LABEL_55:
      if ((SHIBYTE(v66[3]) & 0x80000000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_75;
    }
LABEL_74:
    operator delete((void *)v68);
    if ((SHIBYTE(v66[3]) & 0x80000000) == 0)
    {
LABEL_56:
      if ((SHIBYTE(v83) & 0x80000000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_76;
    }
LABEL_75:
    operator delete(v66[1]);
    if ((SHIBYTE(v83) & 0x80000000) == 0)
    {
LABEL_57:
      if ((SHIBYTE(v81) & 0x80000000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_77;
    }
LABEL_76:
    operator delete((void *)v82);
    if ((SHIBYTE(v81) & 0x80000000) == 0)
    {
LABEL_58:
      if (SHIBYTE(v78) < 0) {
        goto LABEL_94;
      }
      goto LABEL_78;
    }
LABEL_77:
    operator delete((void *)v80);
    if (SHIBYTE(v78) < 0)
    {
LABEL_94:
      operator delete((void *)v77);
      if (v7 >= 2) {
        goto LABEL_135;
      }
      goto LABEL_79;
    }
LABEL_78:
    if (v7 >= 2) {
      goto LABEL_135;
    }
LABEL_79:
    if (!sub_215DFDAB8(v6)) {
      break;
    }
    sub_215AD46B4((uint64_t)&v53, (uint64_t)v66);
    size_t v20 = (char *)a1[37];
    unint64_t v19 = a1[38];
    if ((unint64_t)v20 < v19)
    {
      *(void **)size_t v20 = v66[0];
      long long v21 = *(_OWORD *)&v66[1];
      *((void **)v20 + 3) = v66[3];
      *(_OWORD *)(v20 + 8) = v21;
      memset(&v66[1], 0, 24);
      *((_DWORD *)v20 + 8) = v67;
      long long v22 = v68;
      *((void *)v20 + 7) = v69;
      *(_OWORD *)(v20 + 40) = v22;
      char v69 = 0;
      long long v68 = 0uLL;
      v20[64] = 0;
      v20[88] = 0;
      if ((_BYTE)v72)
      {
        long long v23 = v70;
        *((void *)v20 + 10) = v71;
        *((_OWORD *)v20 + 4) = v23;
        char v71 = 0;
        long long v70 = 0uLL;
        v20[88] = 1;
      }
      long long v24 = *(_OWORD *)v73;
      *((void *)v20 + 14) = *(void *)&v74[0];
      *((_OWORD *)v20 + 6) = v24;
      v73[1] = 0;
      *(void *)&v74[0] = 0;
      v73[0] = 0;
      *((void *)v20 + 15) = *((void *)&v74[0] + 1);
      long long v25 = v74[1];
      *((void *)v20 + 18) = v75;
      *((_OWORD *)v20 + 8) = v25;
      uint64_t v75 = 0;
      v74[1] = 0uLL;
      a1[37] = v20 + 152;
      if ((SBYTE7(v74[0]) & 0x80000000) == 0)
      {
LABEL_113:
        if (!(_BYTE)v72) {
          goto LABEL_119;
        }
        goto LABEL_117;
      }
      goto LABEL_116;
    }
    int v26 = (char *)a1[36];
    unint64_t v27 = 0x86BCA1AF286BCA1BLL * ((v20 - v26) >> 3) + 1;
    if (v27 > 0x1AF286BCA1AF286) {
      sub_215738AC0();
    }
    int v28 = v5;
    unint64_t v29 = v4;
    uint64_t v30 = v3;
    unint64_t v31 = 0x86BCA1AF286BCA1BLL * ((uint64_t)(v19 - (void)v26) >> 3);
    if (2 * v31 > v27) {
      unint64_t v27 = 2 * v31;
    }
    if (v31 >= 0xD79435E50D7943) {
      unint64_t v32 = 0x1AF286BCA1AF286;
    }
    else {
      unint64_t v32 = v27;
    }
    if (v32)
    {
      if (v32 > 0x1AF286BCA1AF286) {
        sub_215738AD8();
      }
      char v33 = (char *)operator new(152 * v32);
    }
    else
    {
      char v33 = 0;
    }
    char v34 = &v33[8 * ((v20 - v26) >> 3)];
    *(void **)char v34 = v66[0];
    *(_OWORD *)(v34 + 8) = *(_OWORD *)&v66[1];
    *((void **)v34 + 3) = v66[3];
    memset(&v66[1], 0, 24);
    *((_DWORD *)v34 + 8) = v67;
    *(_OWORD *)(v34 + 40) = v68;
    *((void *)v34 + 7) = v69;
    char v69 = 0;
    long long v68 = 0uLL;
    v34[64] = 0;
    v34[88] = 0;
    if ((_BYTE)v72)
    {
      *((_OWORD *)v34 + 4) = v70;
      *((void *)v34 + 10) = v71;
      char v71 = 0;
      long long v70 = 0uLL;
      v34[88] = 1;
    }
    uint64_t v35 = &v33[8 * ((v20 - v26) >> 3)];
    *((_OWORD *)v35 + 6) = *(_OWORD *)v73;
    uint64_t v36 = *(void *)&v74[0];
    v73[1] = 0;
    *(void *)&v74[0] = 0;
    uint64_t v37 = &v33[152 * v32];
    v73[0] = 0;
    uint64_t v38 = *((void *)&v74[0] + 1);
    *((void *)v35 + 14) = v36;
    *((void *)v35 + 15) = v38;
    *((_OWORD *)v35 + 8) = v74[1];
    *((void *)v35 + 18) = v75;
    v74[1] = 0uLL;
    char v39 = v34 + 152;
    uint64_t v75 = 0;
    if (v20 == v26)
    {
      a1[36] = v34;
      a1[37] = v39;
      a1[38] = v37;
      uint64_t v3 = v30;
      unint64_t v4 = v29;
      goto LABEL_109;
    }
    uint64_t v40 = 0;
    do
    {
      unint64_t v43 = &v34[v40];
      uint64_t v44 = &v20[v40];
      *((void *)v43 - 19) = *(void *)&v20[v40 - 152];
      long long v45 = *(_OWORD *)&v20[v40 - 144];
      *((void *)v43 - 16) = *(void *)&v20[v40 - 128];
      *((_OWORD *)v43 - 9) = v45;
      *((void *)v44 - 17) = 0;
      *((void *)v44 - 16) = 0;
      *((void *)v44 - 18) = 0;
      *((_DWORD *)v43 - 30) = *(_DWORD *)&v20[v40 - 120];
      long long v46 = *(_OWORD *)&v20[v40 - 112];
      *((void *)v43 - 12) = *(void *)&v20[v40 - 96];
      *((_OWORD *)v43 - 7) = v46;
      *((void *)v44 - 13) = 0;
      *((void *)v44 - 12) = 0;
      *((void *)v44 - 14) = 0;
      v34[v40 - 88] = 0;
      *(v43 - 64) = 0;
      if (v20[v40 - 64])
      {
        long long v47 = *(_OWORD *)(v44 - 88);
        *(void *)&v34[v40 - 72] = *((void *)v44 - 9);
        *(_OWORD *)&v34[v40 - 88] = v47;
        *((void *)v44 - 10) = 0;
        *((void *)v44 - 9) = 0;
        *((void *)v44 - 11) = 0;
        *(v43 - 64) = 1;
      }
      long long v41 = *(_OWORD *)(v44 - 56);
      *((void *)v43 - 5) = *((void *)v44 - 5);
      *(_OWORD *)(v43 - 56) = v41;
      *((void *)v44 - 6) = 0;
      *((void *)v44 - 5) = 0;
      *((void *)v44 - 7) = 0;
      *((void *)v43 - 4) = *((void *)v44 - 4);
      long long v42 = *(_OWORD *)(v44 - 24);
      *((void *)v43 - 1) = *((void *)v44 - 1);
      *(_OWORD *)(v43 - 24) = v42;
      *((void *)v44 - 2) = 0;
      *((void *)v44 - 1) = 0;
      *((void *)v44 - 3) = 0;
      v40 -= 152;
    }
    while (&v20[v40] != v26);
    size_t v20 = (char *)a1[36];
    uint64_t v48 = a1[37];
    a1[36] = &v34[v40];
    a1[37] = v39;
    a1[38] = v37;
    uint64_t v3 = v30;
    if ((char *)v48 != v20)
    {
      unint64_t v4 = v29;
      do
      {
        v48 -= 152;
        sub_215ACE660(v48);
      }
      while ((char *)v48 != v20);
LABEL_109:
      char v5 = v28;
      if (!v20) {
        goto LABEL_111;
      }
LABEL_110:
      operator delete(v20);
      goto LABEL_111;
    }
    unint64_t v4 = v29;
    char v5 = v28;
    if (v20) {
      goto LABEL_110;
    }
LABEL_111:
    int v49 = SHIBYTE(v75);
    a1[37] = v39;
    if (v49 < 0)
    {
      operator delete(*(void **)&v74[1]);
      if ((SBYTE7(v74[0]) & 0x80000000) == 0) {
        goto LABEL_113;
      }
    }
    else if ((SBYTE7(v74[0]) & 0x80000000) == 0)
    {
      goto LABEL_113;
    }
LABEL_116:
    operator delete(v73[0]);
    if (!(_BYTE)v72) {
      goto LABEL_119;
    }
LABEL_117:
    if (SHIBYTE(v71) < 0) {
      operator delete((void *)v70);
    }
LABEL_119:
    if (SHIBYTE(v69) < 0)
    {
      operator delete((void *)v68);
      if ((SHIBYTE(v66[3]) & 0x80000000) == 0)
      {
LABEL_121:
        if ((*((unsigned char *)v5 + *(void *)(*v3 - 24)) & 2) != 0) {
          break;
        }
        goto LABEL_125;
      }
    }
    else if ((SHIBYTE(v66[3]) & 0x80000000) == 0)
    {
      goto LABEL_121;
    }
    operator delete(v66[1]);
    if ((*((unsigned char *)v5 + *(void *)(*v3 - 24)) & 2) != 0) {
      break;
    }
LABEL_125:
    BOOL v50 = v4 > 0x1FE;
    v4 += 2;
    if (v50)
    {
      unint64_t v4 = 0;
      if (a1[35] < 0x86BCA1AF286BCA1BLL * ((uint64_t)(a1[37] - a1[36]) >> 3)) {
        goto LABEL_150;
      }
    }
  }
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v52 = (std::__shared_weak_count *)a1[33];
  a1[32] = 0;
  a1[33] = 0;
  if (v52)
  {
    if (!atomic_fetch_add(&v52->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
LABEL_150:
  if (SHIBYTE(v65) < 0)
  {
    operator delete((void *)v64);
    if (SHIBYTE(v63) < 0) {
      goto LABEL_157;
    }
LABEL_152:
    if ((SHIBYTE(v60) & 0x80000000) == 0) {
      goto LABEL_153;
    }
LABEL_158:
    operator delete((void *)v59);
    if (SHIBYTE(v58) < 0) {
      goto LABEL_159;
    }
LABEL_154:
    if (SHIBYTE(v55) < 0) {
LABEL_160:
    }
      operator delete((void *)__p);
  }
  else
  {
    if ((SHIBYTE(v63) & 0x80000000) == 0) {
      goto LABEL_152;
    }
LABEL_157:
    operator delete((void *)v62);
    if (SHIBYTE(v60) < 0) {
      goto LABEL_158;
    }
LABEL_153:
    if ((SHIBYTE(v58) & 0x80000000) == 0) {
      goto LABEL_154;
    }
LABEL_159:
    operator delete((void *)v57);
    if (SHIBYTE(v55) < 0) {
      goto LABEL_160;
    }
  }
}

void sub_215AC26BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_215AC26D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_215AC26F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_215AC9E8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AC2728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_215AC9E8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AC273C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_215AC9E8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AC2750(uint64_t a1)
{
  long long v82 = (uint64_t **)(a1 + 344);
  long long v83 = (uint64_t **)(a1 + 312);
  uint64_t v84 = (void *)(a1 + 320);
  while (1)
  {
    uint64_t v2 = *(void *)(a1 + 288);
    unint64_t v3 = *(void *)(a1 + 280);
    if (v3 >= 0x86BCA1AF286BCA1BLL * ((*(void *)(a1 + 296) - v2) >> 3) && !*(void *)(a1 + 256)) {
      return;
    }
    unint64_t v4 = *(void **)(a1 + 136);
    char v5 = *(void **)(a1 + 144);
    if (v4 != v5) {
      break;
    }
LABEL_14:
    uint64_t v11 = v2 + 152 * v3 + 8;
    int v12 = (uint64_t *)*v84;
    if (!*v84) {
      goto LABEL_57;
    }
    int v13 = *(char *)(v11 + 23);
    if (v13 >= 0) {
      int v14 = (const void *)v11;
    }
    else {
      int v14 = *(const void **)v11;
    }
    if (v13 >= 0) {
      size_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      size_t v15 = *(void *)(v11 + 8);
    }
    uint64_t v16 = v84;
    do
    {
      while (1)
      {
        int v17 = *((char *)v12 + 55);
        int v18 = v17 >= 0 ? v12 + 4 : (uint64_t *)v12[4];
        size_t v19 = v17 >= 0 ? *((unsigned __int8 *)v12 + 55) : v12[5];
        size_t v20 = v15 >= v19 ? v19 : v15;
        int v21 = memcmp(v18, v14, v20);
        if (v21) {
          break;
        }
        if (v19 < v15) {
          goto LABEL_24;
        }
LABEL_22:
        uint64_t v16 = v12;
        int v12 = (uint64_t *)*v12;
        if (!v12) {
          goto LABEL_39;
        }
      }
      if ((v21 & 0x80000000) == 0) {
        goto LABEL_22;
      }
LABEL_24:
      int v12 = (uint64_t *)v12[1];
    }
    while (v12);
LABEL_39:
    if (v16 == v84) {
      goto LABEL_57;
    }
    long long v24 = (const void *)v16[4];
    long long v23 = v16 + 4;
    long long v22 = v24;
    int v25 = *((char *)v23 + 23);
    if (v25 >= 0) {
      int v26 = v23;
    }
    else {
      int v26 = v22;
    }
    if (v25 >= 0) {
      size_t v27 = *((unsigned __int8 *)v23 + 23);
    }
    else {
      size_t v27 = v23[1];
    }
    if (v27 >= v15) {
      size_t v28 = v15;
    }
    else {
      size_t v28 = v27;
    }
    int v29 = memcmp(v14, v26, v28);
    if (v29)
    {
      if (v29 < 0)
      {
LABEL_57:
        sub_21573D640(v83, (const void **)v11, v11);
        sub_215AB89CC((uint64_t *)v11, (uint64_t)&v87);
        long long __dst = v87;
        LOBYTE(v99) = 0;
        char v108 = 0;
        if (v97)
        {
          char v101 = 0;
          if (v90)
          {
            long long v99 = __p;
            uint64_t v100 = v89;
            uint64_t v89 = 0;
            long long __p = 0uLL;
            char v101 = 1;
          }
          LOBYTE(v102) = 0;
          char v107 = 0;
          if (v96)
          {
            long long v102 = v91;
            uint64_t v103 = v92;
            uint64_t v92 = 0;
            long long v91 = 0uLL;
            uint64_t v104 = v93;
            long long v105 = v94;
            uint64_t v106 = v95;
            long long v94 = 0uLL;
            uint64_t v95 = 0;
            char v107 = 1;
          }
          char v108 = 1;
          if (v90 && SHIBYTE(v89) < 0) {
            operator delete((void *)__p);
          }
        }
        *(void *)v85 = operator new(0x40uLL);
        *(_OWORD *)&v85[8] = xmmword_215ED4BA0;
        strcpy(*(char **)v85, "all data of this package will be ignored by the file importer");
        sub_2158B1F44((char *)&__dst, (void **)v85, (uint64_t)&v87);
        if (*(unsigned char *)(a1 + 128))
        {
          uint64_t v38 = *(void *)(a1 + 120);
          if (!v38) {
            sub_21573D7DC();
          }
          goto LABEL_67;
        }
        goto LABEL_68;
      }
    }
    else if (v15 < v27)
    {
      goto LABEL_57;
    }
LABEL_132:
    uint64_t v65 = *(void *)(a1 + 288);
    unint64_t v66 = *(void *)(a1 + 280) + 1;
    *(void *)(a1 + 280) = v66;
    if (v66 >= 0x86BCA1AF286BCA1BLL * ((*(void *)(a1 + 296) - v65) >> 3)) {
      sub_215AC1948((void *)a1);
    }
  }
  uint64_t v6 = v2 + 152 * v3 + 8;
  while (1)
  {
    if (*v4)
    {
      unsigned int v7 = (const void *)(*(uint64_t (**)(void))(*(void *)*v4 + 16))(*v4);
      if (*(char *)(v2 + 152 * v3 + 31) < 0)
      {
        uint64_t v10 = *(const void **)v6;
        size_t v9 = *(void *)(v2 + 152 * v3 + 16);
        if (v8 != v9) {
          goto LABEL_7;
        }
      }
      else
      {
        size_t v9 = *(unsigned __int8 *)(v2 + 152 * v3 + 31);
        uint64_t v10 = (const void *)(v2 + 152 * v3 + 8);
        if (v8 != v9) {
          goto LABEL_7;
        }
      }
      if (!memcmp(v7, v10, v9)) {
        break;
      }
    }
LABEL_7:
    v4 += 2;
    if (v4 == v5) {
      goto LABEL_14;
    }
  }
  uint64_t v30 = v2 + 152 * v3;
  unsigned int v32 = *(_DWORD *)(v30 + 32);
  unint64_t v31 = (unsigned int *)(v30 + 32);
  if (((*(uint64_t (**)(void, void))(*(void *)*v4 + 40))(*v4, v32) & 1) == 0)
  {
    unsigned int v39 = *v31;
    uint64_t v40 = v82;
    long long v41 = *v82;
    long long v42 = v82;
    char v43 = *(unsigned char *)(v6 + 23);
    if (!*v82) {
      goto LABEL_118;
    }
    if (v43 >= 0) {
      uint64_t v44 = (const void *)v6;
    }
    else {
      uint64_t v44 = *(const void **)v6;
    }
    if (v43 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      size_t v45 = *(void *)(v6 + 8);
    }
    while (1)
    {
      uint64_t v40 = (uint64_t **)v41;
      uint64_t v48 = (const void *)v41[4];
      long long v46 = v41 + 4;
      long long v47 = v48;
      int v49 = *((char *)v46 + 23);
      if (v49 >= 0) {
        BOOL v50 = v46;
      }
      else {
        BOOL v50 = v47;
      }
      if (v49 >= 0) {
        size_t v51 = *((unsigned __int8 *)v46 + 23);
      }
      else {
        size_t v51 = v46[1];
      }
      if (v51 >= v45) {
        size_t v52 = v45;
      }
      else {
        size_t v52 = v51;
      }
      int v53 = memcmp(v44, v50, v52);
      if (v53)
      {
        if (v53 < 0) {
          goto LABEL_98;
        }
LABEL_112:
        int v54 = memcmp(v50, v44, v52);
        if (v54)
        {
          if ((v54 & 0x80000000) == 0) {
            goto LABEL_138;
          }
        }
        else if (v51 >= v45)
        {
LABEL_138:
          std::chrono::system_clock::time_point v55 = (char *)v40;
          goto LABEL_139;
        }
        long long v41 = v40[1];
        if (!v41)
        {
          long long v42 = v40 + 1;
LABEL_118:
          std::chrono::system_clock::time_point v55 = (char *)operator new(0x50uLL);
          int v56 = v55 + 32;
          if (v43 < 0)
          {
            sub_215738B0C(v56, *(void **)v6, *(void *)(v6 + 8));
          }
          else
          {
            long long v57 = *(_OWORD *)v6;
            *((void *)v55 + 6) = *(void *)(v6 + 16);
            *(_OWORD *)int v56 = v57;
          }
          *((void *)v55 + 9) = 0;
          *((void *)v55 + 8) = 0;
          *((void *)v55 + 7) = v55 + 64;
          *(void *)std::chrono::system_clock::time_point v55 = 0;
          *((void *)v55 + 1) = 0;
          *((void *)v55 + 2) = v40;
          *long long v42 = (uint64_t *)v55;
          uint64_t v67 = **(void **)(a1 + 336);
          long long v68 = (uint64_t *)v55;
          if (v67)
          {
            *(void *)(a1 + 336) = v67;
            long long v68 = *v42;
          }
          sub_21573B048(*(uint64_t **)(a1 + 344), v68);
          ++*(void *)(a1 + 352);
LABEL_139:
          long long v70 = (uint64_t **)(v55 + 64);
          char v69 = (uint64_t *)*((void *)v55 + 8);
          if (v69)
          {
            char v71 = (uint64_t **)(v55 + 64);
            uint64_t v72 = (char *)*((void *)v55 + 8);
            do
            {
              unsigned int v73 = *((_DWORD *)v72 + 7);
              BOOL v74 = v73 >= v39;
              if (v73 >= v39) {
                uint64_t v75 = (char **)v72;
              }
              else {
                uint64_t v75 = (char **)(v72 + 8);
              }
              if (v74) {
                char v71 = (uint64_t **)v72;
              }
              uint64_t v72 = *v75;
            }
            while (*v75);
            if (v71 != v70 && *((_DWORD *)v71 + 7) <= v39) {
              goto LABEL_132;
            }
            do
            {
              while (1)
              {
                uint64_t v76 = (uint64_t **)v69;
                unsigned int v77 = *((_DWORD *)v69 + 7);
                if (v77 <= v39) {
                  break;
                }
                char v69 = *v76;
                long long v70 = v76;
                if (!*v76) {
                  goto LABEL_157;
                }
              }
              if (v77 >= v39) {
                goto LABEL_161;
              }
              char v69 = v76[1];
            }
            while (v69);
            long long v70 = v76 + 1;
          }
          else
          {
            uint64_t v76 = (uint64_t **)(v55 + 64);
          }
LABEL_157:
          uint64_t v78 = operator new(0x20uLL);
          v78[7] = v39;
          *(void *)uint64_t v78 = 0;
          *((void *)v78 + 1) = 0;
          *((void *)v78 + 2) = v76;
          *long long v70 = (uint64_t *)v78;
          uint64_t v79 = **((void **)v55 + 7);
          if (v79)
          {
            *((void *)v55 + 7) = v79;
            long long v80 = *v70;
          }
          else
          {
            long long v80 = (uint64_t *)v78;
          }
          sub_21573B048(*((uint64_t **)v55 + 8), v80);
          ++*((void *)v55 + 9);
LABEL_161:
          if (*(char *)(v6 + 23) < 0)
          {
            sub_215738B0C(v85, *(void **)v6, *(void *)(v6 + 8));
          }
          else
          {
            long long v81 = *(_OWORD *)v6;
            *(void *)&v85[16] = *(void *)(v6 + 16);
            *(_OWORD *)v85 = v81;
          }
          unsigned int v86 = v39;
          sub_215AB8C54((uint64_t)v85, (uint64_t)&v87);
          long long __dst = v87;
          LOBYTE(v99) = 0;
          char v108 = 0;
          if (v97)
          {
            char v101 = 0;
            if (v90)
            {
              long long v99 = __p;
              uint64_t v100 = v89;
              uint64_t v89 = 0;
              long long __p = 0uLL;
              char v101 = 1;
            }
            LOBYTE(v102) = 0;
            char v107 = 0;
            if (v96)
            {
              long long v102 = v91;
              uint64_t v103 = v92;
              uint64_t v92 = 0;
              long long v91 = 0uLL;
              uint64_t v104 = v93;
              long long v105 = v94;
              uint64_t v106 = v95;
              long long v94 = 0uLL;
              uint64_t v95 = 0;
              char v107 = 1;
            }
            char v108 = 1;
            if (v90 && SHIBYTE(v89) < 0) {
              operator delete((void *)__p);
            }
          }
          if ((v85[23] & 0x80000000) != 0) {
            operator delete(*(void **)v85);
          }
          *(void *)v85 = operator new(0x48uLL);
          *(_OWORD *)&v85[8] = xmmword_215ED4B90;
          strcpy(*(char **)v85, "all entries of this data type will be ignored by the file importer");
          sub_2158B1F44((char *)&__dst, (void **)v85, (uint64_t)&v87);
          if (*(unsigned char *)(a1 + 128))
          {
            uint64_t v38 = *(void *)(a1 + 120);
            if (!v38) {
              sub_21573D7DC();
            }
LABEL_67:
            (*(void (**)(uint64_t, long long *))(*(void *)v38 + 48))(v38, &v87);
          }
LABEL_68:
          if (!v97) {
            goto LABEL_75;
          }
          if (!v96) {
            goto LABEL_72;
          }
          if ((SHIBYTE(v95) & 0x80000000) == 0)
          {
            if ((SHIBYTE(v92) & 0x80000000) == 0) {
              goto LABEL_72;
            }
LABEL_86:
            operator delete((void *)v91);
            if (!v90) {
              goto LABEL_75;
            }
LABEL_73:
            if (SHIBYTE(v89) < 0) {
              operator delete((void *)__p);
            }
            goto LABEL_75;
          }
          operator delete((void *)v94);
          if (SHIBYTE(v92) < 0) {
            goto LABEL_86;
          }
LABEL_72:
          if (v90) {
            goto LABEL_73;
          }
LABEL_75:
          if ((v85[23] & 0x80000000) != 0)
          {
            operator delete(*(void **)v85);
            if (!v108) {
              goto LABEL_132;
            }
          }
          else if (!v108)
          {
            goto LABEL_132;
          }
          if (v107)
          {
            if (SHIBYTE(v106) < 0)
            {
              operator delete((void *)v105);
              if ((SHIBYTE(v103) & 0x80000000) == 0) {
                goto LABEL_82;
              }
            }
            else if ((SHIBYTE(v103) & 0x80000000) == 0)
            {
              goto LABEL_82;
            }
            operator delete((void *)v102);
            if (!v101) {
              goto LABEL_132;
            }
          }
          else
          {
LABEL_82:
            if (!v101) {
              goto LABEL_132;
            }
          }
          if (SHIBYTE(v100) < 0) {
            operator delete((void *)v99);
          }
          goto LABEL_132;
        }
      }
      else
      {
        if (v45 >= v51) {
          goto LABEL_112;
        }
LABEL_98:
        long long v41 = *v40;
        long long v42 = v40;
        if (!*v40) {
          goto LABEL_118;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v33 = *(void *)(a1 + 280);
    uint64_t v34 = *(void *)(a1 + 288);
    uint64_t v35 = v34 + 152 * v33;
    uint64_t v36 = (void **)(v35 + 8);
    if (*(char *)(v35 + 31) < 0)
    {
      sub_215738B0C(&__dst, *v36, *(void *)(v35 + 16));
    }
    else
    {
      long long v37 = *(_OWORD *)v36;
      *(void *)&long long v99 = *(void *)(v35 + 24);
      long long __dst = v37;
    }
    DWORD2(v99) = *(_DWORD *)(v34 + 152 * v33 + 32);
    uint64_t v58 = *(void *)(a1 + 32);
    uint64_t v59 = *(void *)(a1 + 40);
    if (v58 != v59)
    {
      uint64_t v60 = v34 + 152 * v33;
      uint64_t v61 = (void **)(v60 + 40);
      long long v62 = (size_t *)(v60 + 48);
      while (1)
      {
        if (*(char *)(v35 + 63) < 0)
        {
          long long v64 = *v61;
          size_t v63 = *v62;
        }
        else
        {
          size_t v63 = *(unsigned __int8 *)(v35 + 63);
          long long v64 = v61;
        }
        if (sub_215AE8394(v58, (unsigned __int8 *)&__dst, v64, v63)) {
          break;
        }
        v58 += 768;
        if (v58 == v59)
        {
          uint64_t v58 = v59;
          break;
        }
      }
    }
    if (SBYTE7(v99) < 0) {
      operator delete((void *)__dst);
    }
    if (v58 == v59) {
      goto LABEL_132;
    }
  }
}

void sub_215AC3098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,char a31)
{
  operator delete(v31);
  _Unwind_Resume(a1);
}

void **sub_215AC3140(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    unint64_t v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 152;
        sub_215ACE660(v3);
      }
      while ((void *)v3 != v2);
      unint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_215AC31A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 72);
    unint64_t v4 = *(void **)(a1 + 64);
    if (v3 != v2)
    {
      do
      {
        char v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unint64_t v4 = *(void **)(a1 + 64);
    }
    *(void *)(a1 + 72) = v2;
    operator delete(v4);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if (v6 != -1) {
    ((void (*)(char *, uint64_t))off_26C677FB8[v6])(&v8, a1 + 40);
  }
  *(_DWORD *)(a1 + 56) = -1;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_215AC32A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v297 = *MEMORY[0x263EF8340];
  unint64_t v3 = *(void *)(a1 + 280);
  unint64_t v4 = 0x86BCA1AF286BCA1BLL * ((uint64_t)(*(void *)(a1 + 296) - *(void *)(a1 + 288)) >> 3);
  if (v3 >= v4 && !*(void *)(a1 + 256))
  {
    int v21 = operator new(0x50uLL);
    v21[1] = 0;
    v21[2] = 0;
    *int v21 = &unk_26C6580D8;
    *((unsigned char *)v21 + 72) = 0;
    v21[4] = 0;
    v21[5] = 0;
    *((unsigned char *)v21 + 48) = 0;
    *(void *)(a2 + 8) = v21;
    v21[3] = 0;
    *(void *)a2 = v21 + 3;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = &unk_26C678D20;
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  *(void *)(a1 + 280) = v3 + 1;
  if (v3 + 1 >= v4) {
    sub_215AC1948((void *)a1);
  }
  sub_215AC2750(a1);
  uint64_t v5 = *(void *)(a1 + 288);
  uint64_t v6 = (const std::__fs::filesystem::path *)(v5 + 152 * v3);
  p_unint64_t size = (void **)&v6->__pn_.__r_.__value_.__l.__size_;
  if (v6[1].__pn_.__r_.__value_.__s.__data_[7] < 0)
  {
    sub_215738B0C(&__s1, *p_size, v6->__pn_.__r_.__value_.__r.__words[2]);
  }
  else
  {
    long long v8 = *(_OWORD *)p_size;
    std::string::pointer data = v6[1].__pn_.__r_.__value_.__l.__data_;
    long long __s1 = v8;
  }
  uint64_t v9 = v5 + 152 * v3;
  int v213 = *(_DWORD *)(v9 + 32);
  v151 = (long long *)(v9 + 40);
  if (*(char *)(v9 + 63) < 0)
  {
    uint64_t v10 = *(void **)(v9 + 40);
    size_t v11 = *(void *)(v9 + 48);
    if (!*(unsigned char *)(a1 + 56)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v10 = (void *)(v9 + 40);
    size_t v11 = *(unsigned __int8 *)(v9 + 63);
    if (!*(unsigned char *)(a1 + 56)) {
      goto LABEL_17;
    }
  }
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  if (v12 != v13)
  {
    while ((sub_215AE8394(v12, (unsigned __int8 *)&__s1, v10, v11) & 1) == 0)
    {
      v12 += 768;
      if (v12 == v13) {
        goto LABEL_29;
      }
    }
  }
  if (v12 == v13)
  {
LABEL_29:
    size_t v20 = operator new(0x50uLL);
    v20[1] = 0;
    v20[2] = 0;
    *size_t v20 = &unk_26C6580D8;
    *((unsigned char *)v20 + 72) = 0;
    v20[4] = 0;
    v20[5] = 0;
    *((unsigned char *)v20 + 48) = 0;
    v20[3] = 0;
    *(void *)a2 = v20 + 3;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = &unk_26C678D20;
    *(unsigned char *)(a2 + 120) = 1;
    if ((SHIBYTE(data) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_598;
  }
LABEL_17:
  v148 = (long long *)(v9 + 64);
  if (!*(unsigned char *)(a1 + 88)) {
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  if (v14 == v15) {
    goto LABEL_27;
  }
  while ((sub_215AE8394(v14, (unsigned __int8 *)&__s1, v10, v11) & 1) == 0)
  {
    v14 += 800;
    if (v14 == v15)
    {
      uint64_t v14 = v15;
      break;
    }
  }
  if (v14 == *(void *)(a1 + 72))
  {
LABEL_27:
    if (*(char *)(a1 + 23) < 0) {
      sub_215738B0C(&v203, *(void **)a1, *(void *)(a1 + 8));
    }
    else {
      std::__fs::filesystem::path v203 = *(std::__fs::filesystem::path *)a1;
    }
    sub_215ACE714((uint64_t)&v203, (std::__fs::filesystem::path *)&v6[4]);
    std::__fs::filesystem::path::__string_view v22 = std::__fs::filesystem::path::__extension(v6 + 4);
    if (v22.__size_ > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v22.__size_ >= 0x17)
    {
      std::basic_string_view<_CharT, _Traits>::size_type v24 = (v22.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v22.__size_ | 7) != 0x17) {
        std::basic_string_view<_CharT, _Traits>::size_type v24 = v22.__size_ | 7;
      }
      std::basic_string_view<_CharT, _Traits>::size_type v25 = v24 + 1;
      p_dst = (long long *)operator new(v24 + 1);
      v272[0] = (void *)(v25 | 0x8000000000000000);
      *(void *)&long long __dst = p_dst;
      *((void *)&__dst + 1) = v22.__size_;
    }
    else
    {
      HIBYTE(v272[0]) = v22.__size_;
      p_dst = &__dst;
      if (!v22.__size_)
      {
LABEL_41:
        *((unsigned char *)p_dst + v22.__size_) = 0;
        v202[0] = v272[0];
        *(_DWORD *)((char *)v202 + 3) = *(_DWORD *)((char *)v272 + 3);
        int v150 = SHIBYTE(v272[0]);
        v149 = (void *)__dst;
        if (SHIBYTE(v272[0]) < 0)
        {
          sub_215738B0C(&__dst, (void *)__dst, *((unint64_t *)&__dst + 1));
        }
        else
        {
          LODWORD(v272[0]) = v202[0];
          *(_DWORD *)((char *)v272 + 3) = *(_DWORD *)((char *)v202 + 3);
        }
        int v26 = sub_215AD4AE0((unsigned __int8 *)&__dst);
        if (SHIBYTE(v272[0]) < 0) {
          operator delete((void *)__dst);
        }
        std::__fs::filesystem::path::__string_view v27 = std::__fs::filesystem::path::__stem(&v203);
        if (v27.__size_ > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        if (v27.__size_ >= 0x17)
        {
          std::basic_string_view<_CharT, _Traits>::size_type v29 = (v27.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v27.__size_ | 7) != 0x17) {
            std::basic_string_view<_CharT, _Traits>::size_type v29 = v27.__size_ | 7;
          }
          std::basic_string_view<_CharT, _Traits>::size_type v30 = v29 + 1;
          size_t v28 = (long long *)operator new(v29 + 1);
          v272[0] = (void *)(v30 | 0x8000000000000000);
          *(void *)&long long __dst = v28;
          *((void *)&__dst + 1) = v27.__size_;
        }
        else
        {
          HIBYTE(v272[0]) = v27.__size_;
          size_t v28 = &__dst;
          if (!v27.__size_)
          {
LABEL_54:
            *((unsigned char *)v28 + v27.__size_) = 0;
            unint64_t v31 = *((void *)&__dst + 1);
            unsigned int v32 = (void *)__dst;
            *(_DWORD *)v284 = v272[0];
            *(_DWORD *)&v284[3] = *(_DWORD *)((char *)v272 + 3);
            int v33 = SHIBYTE(v272[0]);
            if (SHIBYTE(v272[0]) < 0)
            {
              sub_215738B0C(&__p, (void *)__dst, *((unint64_t *)&__dst + 1));
              LOBYTE(v34) = HIBYTE(v286[0]);
              unint64_t v31 = *((void *)&__p + 1);
            }
            else
            {
              long long __p = __dst;
              LODWORD(v286[0]) = *(_DWORD *)v284;
              *(_DWORD *)((char *)v286 + 3) = *(_DWORD *)&v284[3];
              HIBYTE(v286[0]) = HIBYTE(v272[0]);
              LOBYTE(v34) = HIBYTE(v272[0]);
            }
            HIBYTE(v272[0]) = 5;
            strcpy((char *)&__dst, "_info");
            unint64_t v35 = v34;
            if ((v34 & 0x80u) == 0) {
              unint64_t v34 = v34;
            }
            else {
              unint64_t v34 = v31;
            }
            BOOL v36 = v34 >= 5;
            unint64_t v37 = v34 - 5;
            if (!v36)
            {
              BOOL v38 = 0;
              if ((v35 & 0x80) == 0) {
                goto LABEL_63;
              }
              goto LABEL_62;
            }
            if ((v35 & 0x80) != 0)
            {
              if (v31 >= v37)
              {
                if (v31 - v37 >= 5) {
                  size_t v43 = 5;
                }
                else {
                  size_t v43 = v31 - v37;
                }
                uint64_t v44 = __p;
LABEL_91:
                int v51 = memcmp((const void *)(v44 + v37), &__dst, v43);
                BOOL v38 = v43 == 5 && v51 == 0;
                if ((v35 & 0x80) == 0)
                {
LABEL_63:
                  if (v33 < 0)
                  {
                    operator delete(v32);
                    if (v38)
                    {
LABEL_65:
                      v284[0] = 0;
                      memset(&v284[23], 0, 185);
                      uint64_t v39 = *(void *)(v5 + 152 * v3 + 120);
                      uint64_t v40 = *(void *)(a1 + 24);
                      uint64_t v230 = v39;
                      (*(void (**)(long long **__return_ptr))(*(void *)v40 + 368))(&v227);
                      int v41 = v150;
                      if (v228)
                      {
                        long long v42 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v228 + 16))(v228);
                        if (v39) {
                          std::istream::seekg();
                        }
                        switch(v26)
                        {
                          case 1:
                            *(void *)&long long __dst = 1;
                            sub_215E00B20(&v259, (uint64_t *)&__dst);
                          case 2:
                          case 4:
                            LOBYTE(v231[0]) = 0;
                            char v232 = 0;
                            LOBYTE(v225[0]) = 0;
                            char v226 = 0;
                            sub_215ACDBB4(&__dst, (uint64_t)v42, (uint64_t)v231, (uint64_t)v225);
                            v258[0] = &__dst;
                            v258[1] = v284;
                            LOBYTE(__p) = 0;
                            char v296 = 0;
                            v255 = &unk_26C678270;
                            p_p = &__p;
                            v257 = (std::__shared_weak_count *)v258;
                            sub_215E12638((uint64_t)&v255, (uint64_t)&v259);
                            if (v270)
                            {
                              char v243 = v295;
                              if (v295)
                              {
                                v233[0] = __p;
                              }
                              else
                              {
                                *(_OWORD *)v233 = __p;
                                v233[16] = 0;
                                char v242 = 0;
                                if ((_BYTE)v294)
                                {
                                  char v235 = 0;
                                  if ((_BYTE)v287)
                                  {
                                    *(_OWORD *)&v233[16] = *(_OWORD *)v286;
                                    v234 = v286[2];
                                    memset(v286, 0, sizeof(v286));
                                    char v235 = 1;
                                  }
                                  LOBYTE(v236) = 0;
                                  char v241 = 0;
                                  if (v293)
                                  {
                                    v237 = v289;
                                    long long v236 = v288;
                                    long long v288 = 0uLL;
                                    long long v239 = v291;
                                    uint64_t v238 = v290;
                                    uint64_t v240 = v292;
                                    v289 = 0;
                                    long long v291 = 0uLL;
                                    uint64_t v292 = 0;
                                    char v241 = 1;
                                  }
                                  char v242 = 1;
                                }
                              }
                            }
                            else
                            {
                              *(_OWORD *)&pn.__r_.__value_.__l.__data_ = v259;
                              uint64_t v75 = sub_215741BFC(&pn.__r_.__value_.__s.__data_[16], &v260);
                              *(_OWORD *)v233 = *(_OWORD *)&pn.__r_.__value_.__l.__data_;
                              v233[16] = 0;
                              char v242 = 0;
                              if (v254)
                              {
                                char v235 = 0;
                                int v76 = v247;
                                if (v247)
                                {
                                  *(_OWORD *)&v233[16] = *(_OWORD *)v75;
                                  v234 = (void *)*((void *)v75 + 2);
                                  *((void *)v75 + 1) = 0;
                                  *((void *)v75 + 2) = 0;
                                  *(void *)uint64_t v75 = 0;
                                  char v235 = 1;
                                }
                                LOBYTE(v236) = 0;
                                char v241 = 0;
                                if (v253)
                                {
                                  v237 = v249;
                                  long long v236 = v248;
                                  long long v248 = 0uLL;
                                  long long v239 = v251;
                                  uint64_t v238 = v250;
                                  uint64_t v240 = v252;
                                  v249 = 0;
                                  long long v251 = 0uLL;
                                  uint64_t v252 = 0;
                                  char v241 = 1;
                                }
                                char v242 = 1;
                                char v243 = 0;
                                if (v76 && v246 < 0) {
                                  operator delete((void *)pn.__r_.__value_.__r.__words[2]);
                                }
                              }
                              else
                              {
                                char v243 = 0;
                              }
                              if (!v270 && (_BYTE)v269)
                              {
                                if (v268)
                                {
                                  if (SHIBYTE(v267) < 0) {
                                    operator delete((void *)v266);
                                  }
                                  if (SHIBYTE(v264) < 0) {
                                    operator delete((void *)v263);
                                  }
                                }
                                if ((_BYTE)v262 && SHIBYTE(v261) < 0) {
                                  operator delete((void *)v260);
                                }
                              }
                            }
                            if (v296 && !v295 && (_BYTE)v294)
                            {
                              if (v293)
                              {
                                if (SHIBYTE(v292) < 0) {
                                  operator delete((void *)v291);
                                }
                                if (SHIBYTE(v289) < 0) {
                                  operator delete((void *)v288);
                                }
                              }
                              if ((_BYTE)v287 && SHIBYTE(v286[2]) < 0) {
                                operator delete(v286[0]);
                              }
                            }
                            if (v243)
                            {
                              if (v233[0])
                              {
                                char v224 = 1;
                                goto LABEL_287;
                              }
                              sub_215DFDEE0(&__dst, (uint64_t)&__p);
                            }
                            else
                            {
                              sub_215DFDCFC((uint64_t)v233, (uint64_t)&__p);
                            }
                            *(_OWORD *)v214 = __p;
                            v214[16] = 0;
                            char v223 = 0;
                            if ((_BYTE)v294)
                            {
                              char v216 = 0;
                              if ((_BYTE)v287)
                              {
                                *(_OWORD *)&v214[16] = *(_OWORD *)v286;
                                v215 = v286[2];
                                memset(v286, 0, sizeof(v286));
                                char v216 = 1;
                              }
                              LOBYTE(v217) = 0;
                              char v222 = 0;
                              if (v293)
                              {
                                v218 = v289;
                                long long v217 = v288;
                                long long v288 = 0uLL;
                                long long v220 = v291;
                                uint64_t v219 = v290;
                                uint64_t v221 = v292;
                                v289 = 0;
                                long long v291 = 0uLL;
                                uint64_t v292 = 0;
                                char v222 = 1;
                              }
                              char v223 = 1;
                              char v224 = 0;
                              if ((_BYTE)v287 && SHIBYTE(v286[2]) < 0) {
                                operator delete(v286[0]);
                              }
                            }
                            else
                            {
                              char v224 = 0;
                            }
LABEL_287:
                            if (!v243 && v242)
                            {
                              if (v241)
                              {
                                if (SHIBYTE(v240) < 0) {
                                  operator delete((void *)v239);
                                }
                                if (SHIBYTE(v237) < 0) {
                                  operator delete((void *)v236);
                                }
                              }
                              if (v235 && SHIBYTE(v234) < 0) {
                                operator delete(*(void **)&v233[16]);
                              }
                            }
                            if (!v224)
                            {
                              sub_215E10780((uint64_t)v214, &pn);
                              sub_215AD0060();
                            }
                            *(void *)&long long __dst = &unk_26C685758;
                            if (v282 < 0)
                            {
                              operator delete(v281);
                              if ((SHIBYTE(v275) & 0x80000000) == 0)
                              {
LABEL_291:
                                if ((SHIBYTE(v273) & 0x80000000) == 0) {
                                  goto LABEL_425;
                                }
                                goto LABEL_305;
                              }
                            }
                            else if ((SHIBYTE(v275) & 0x80000000) == 0)
                            {
                              goto LABEL_291;
                            }
                            operator delete((void *)v274);
                            if ((SHIBYTE(v273) & 0x80000000) == 0) {
                              goto LABEL_425;
                            }
LABEL_305:
                            operator delete(v272[1]);
LABEL_425:
                            char v201 = 1;
                            unsigned int v73 = v229;
                            if (v229) {
                              goto LABEL_426;
                            }
                            goto LABEL_428;
                          case 3:
                            sub_215AD154C((std::string *)v233, *(void **)((char *)v42 + *(void *)(*v42 - 24) + 40), 0);
                            sub_215DDC12C((uint64_t *)v233);
                          default:
                            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIO.cpp", 680, (uint64_t)"", 0, (uint64_t)"Format cannot be loaded", 23, (void (*)(void **))sub_215E1ABD8);
                            abort();
                        }
                      }
                      if (SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) < 0)
                      {
                        sub_215738B0C(&v259, v203.__pn_.__r_.__value_.__l.__data_, v203.__pn_.__r_.__value_.__l.__size_);
                      }
                      else
                      {
                        long long v259 = *(_OWORD *)&v203.__pn_.__r_.__value_.__l.__data_;
                        *(void *)&long long v260 = *((void *)&v203.__pn_.__r_.__value_.__l + 2);
                      }
                      uint64_t v65 = std::string::insert((std::string *)&v259, 0, "Failed to open file for reading: ", 0x21uLL);
                      uint64_t v67 = (void *)v65->__r_.__value_.__r.__words[0];
                      unint64_t size = v65->__r_.__value_.__l.__size_;
                      *(_DWORD *)v233 = v65->__r_.__value_.__r.__words[2];
                      *(_DWORD *)&v233[3] = *(_DWORD *)((char *)&v65->__r_.__value_.__r.__words[2] + 3);
                      int v68 = SHIBYTE(v65->__r_.__value_.__r.__words[2]);
                      v65->__r_.__value_.__l.__size_ = 0;
                      v65->__r_.__value_.__r.__words[2] = 0;
                      v65->__r_.__value_.__r.__words[0] = 0;
                      if (v68 < 0)
                      {
                        sub_215738B0C(&__p, v67, size);
                      }
                      else
                      {
                        *(void *)&long long __p = v67;
                        *((void *)&__p + 1) = size;
                        LODWORD(v286[0]) = *(_DWORD *)v233;
                        *(_DWORD *)((char *)v286 + 3) = *(_DWORD *)&v233[3];
                        HIBYTE(v286[0]) = v68;
                      }
                      LOBYTE(v286[1]) = 1;
                      LOBYTE(v286[2]) = 0;
                      BYTE8(v291) = 0;
                      LOBYTE(v292) = 1;
                      sub_21599512C(2u, &__p, (uint64_t)&__dst);
                      long long v190 = __dst;
                      LOBYTE(v191) = 0;
                      char v200 = 0;
                      if ((_BYTE)v280)
                      {
                        unsigned __int8 v193 = 0;
                        if ((_BYTE)v273)
                        {
                          long long v191 = *(_OWORD *)v272;
                          v192 = v272[2];
                          memset(v272, 0, sizeof(v272));
                          unsigned __int8 v193 = 1;
                        }
                        LOBYTE(v194) = 0;
                        char v199 = 0;
                        if (v279)
                        {
                          v195 = v275;
                          long long v194 = v274;
                          long long v274 = 0uLL;
                          long long v197 = v277;
                          uint64_t v196 = v276;
                          uint64_t v198 = v278;
                          v275 = 0;
                          long long v277 = 0uLL;
                          uint64_t v278 = 0;
                          char v199 = 1;
                        }
                        char v200 = 1;
                        char v201 = 0;
                        if ((_BYTE)v273 && SHIBYTE(v272[2]) < 0) {
                          operator delete(v272[0]);
                        }
                      }
                      else
                      {
                        char v201 = 0;
                      }
                      if ((_BYTE)v292)
                      {
                        if (BYTE8(v291))
                        {
                          if (SBYTE7(v291) < 0) {
                            operator delete(v289);
                          }
                          if (SBYTE7(v288) < 0) {
                            operator delete(v286[2]);
                          }
                        }
                        if (LOBYTE(v286[1]) && SHIBYTE(v286[0]) < 0) {
                          operator delete((void *)__p);
                        }
                      }
                      if (v68 < 0)
                      {
                        operator delete(v67);
                        if ((SBYTE7(v260) & 0x80000000) == 0)
                        {
LABEL_201:
                          unsigned int v73 = v229;
                          if (!v229) {
                            goto LABEL_428;
                          }
LABEL_426:
                          if (!atomic_fetch_add(&v73->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                          {
                            ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                            std::__shared_weak_count::__release_weak(v73);
                          }
LABEL_428:
                          if (!v201)
                          {
                            *(_DWORD *)&v233[24] = 0;
                            sub_2158353B0(v233, "while loading sequence entry ");
                            std::to_string((std::string *)v214, *(void *)(a1 + 280));
                            *(void *)&long long v259 = v233;
                            *((void *)&v259 + 1) = v214;
                            *(void *)&long long v260 = v233;
                            *((void *)&v260 + 1) = v214;
                            v261 = v214;
                            if (*(_DWORD *)&v233[24] == -1) {
                              sub_215742D4C();
                            }
                            v231[0] = &v259;
                            ((void (*)(void *, unsigned char *))off_26C677FC8[*(unsigned int *)&v233[24]])(v231, v233);
                            if ((v214[23] & 0x80000000) != 0) {
                              operator delete(*(void **)v214);
                            }
                            if (*(_DWORD *)&v233[24] == -1) {
                              sub_215742D4C();
                            }
                            *(void *)&long long v259 = v214;
                            ((void (*)(std::string *__return_ptr, long long *, unsigned char *))off_26C677D20[*(unsigned int *)&v233[24]])(&pn, &v259, v233);
                            if (*(_DWORD *)&v233[24] != -1) {
                              ((void (*)(long long *, unsigned char *))off_26C677D08[*(unsigned int *)&v233[24]])(&v259, v233);
                            }
                            sub_2158B1F44((char *)&v190, (void **)&pn.__r_.__value_.__l.__data_, (uint64_t)&__p);
                            long long __dst = __p;
                            uint64_t v95 = sub_215741BFC(v272, (long long *)v286);
                            *(_OWORD *)a2 = __dst;
                            *(unsigned char *)(a2 + 16) = 0;
                            *(unsigned char *)(a2 + 112) = 0;
                            if ((_BYTE)v280)
                            {
                              *(unsigned char *)(a2 + 40) = 0;
                              int v96 = v273;
                              if ((_BYTE)v273)
                              {
                                *(_OWORD *)(a2 + 16) = *(_OWORD *)v95;
                                *(void *)(a2 + 32) = *((void *)v95 + 2);
                                *((void *)v95 + 1) = 0;
                                *((void *)v95 + 2) = 0;
                                *(void *)uint64_t v95 = 0;
                                *(unsigned char *)(a2 + 40) = 1;
                              }
                              *(unsigned char *)(a2 + 48) = 0;
                              *(unsigned char *)(a2 + 104) = 0;
                              if (v279)
                              {
                                uint64_t v97 = v276;
                                *(void *)(a2 + 64) = v275;
                                *(_OWORD *)(a2 + 48) = v274;
                                long long v274 = 0uLL;
                                *(void *)(a2 + 72) = v97;
                                *(_OWORD *)(a2 + 80) = v277;
                                *(void *)(a2 + 96) = v278;
                                v275 = 0;
                                long long v277 = 0uLL;
                                uint64_t v278 = 0;
                                *(unsigned char *)(a2 + 104) = 1;
                              }
                              *(unsigned char *)(a2 + 112) = 1;
                              *(unsigned char *)(a2 + 120) = 0;
                              if (v96 && SHIBYTE(v272[2]) < 0) {
                                operator delete(v272[0]);
                              }
                            }
                            else
                            {
                              *(unsigned char *)(a2 + 120) = 0;
                            }
                            if ((_BYTE)v294)
                            {
                              if (v293)
                              {
                                if (SHIBYTE(v292) < 0) {
                                  operator delete((void *)v291);
                                }
                                if (SHIBYTE(v289) < 0) {
                                  operator delete((void *)v288);
                                }
                              }
                              if ((_BYTE)v287 && SHIBYTE(v286[2]) < 0) {
                                operator delete(v286[0]);
                              }
                            }
                            if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                              goto LABEL_566;
                            }
                            long long v119 = (void *)pn.__r_.__value_.__r.__words[0];
                            goto LABEL_565;
                          }
                          std::__fs::filesystem::path::__string_view v93 = std::__fs::filesystem::path::__parent_path(&v203);
                          if (v93.__size_ > 0x7FFFFFFFFFFFFFF7) {
                            sub_215731CD8();
                          }
                          if (v93.__size_ >= 0x17)
                          {
                            std::basic_string_view<_CharT, _Traits>::size_type v98 = (v93.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                            if ((v93.__size_ | 7) != 0x17) {
                              std::basic_string_view<_CharT, _Traits>::size_type v98 = v93.__size_ | 7;
                            }
                            std::basic_string_view<_CharT, _Traits>::size_type v99 = v98 + 1;
                            long long v94 = (long long *)operator new(v98 + 1);
                            v272[0] = (void *)(v99 | 0x8000000000000000);
                            *(void *)&long long __dst = v94;
                            *((void *)&__dst + 1) = v93.__size_;
                          }
                          else
                          {
                            HIBYTE(v272[0]) = v93.__size_;
                            long long v94 = &__dst;
                            if (!v93.__size_)
                            {
LABEL_451:
                              *((unsigned char *)v94 + v93.__size_) = 0;
                              long long v100 = __dst;
                              LODWORD(__p) = v272[0];
                              *(_DWORD *)((char *)&__p + 3) = *(_DWORD *)((char *)v272 + 3);
                              uint64_t v101 = v284[23];
                              if (v284[23] >= 0) {
                                long long v102 = v284;
                              }
                              else {
                                long long v102 = *(char **)v284;
                              }
                              int v103 = SHIBYTE(v272[0]);
                              long long __dst = 0uLL;
                              v272[0] = 0;
                              if (v284[23] < 0) {
                                uint64_t v101 = *(void *)&v284[8];
                              }
                              sub_21577D738((unint64_t)&__dst, v102, &v102[v101]);
                              if (v103 < 0)
                              {
                                sub_215738B0C(&v259, (void *)v100, *((unint64_t *)&v100 + 1));
                              }
                              else
                              {
                                long long v259 = v100;
                                LODWORD(v260) = __p;
                                *(_DWORD *)((char *)&v260 + 3) = *(_DWORD *)((char *)&__p + 3);
                                BYTE7(v260) = v103;
                              }
                              sub_215ACE714((uint64_t)&v259, (std::__fs::filesystem::path *)&__dst);
                              if (SHIBYTE(v272[0]) < 0) {
                                operator delete((void *)__dst);
                              }
                              if (v103 < 0) {
                                operator delete((void *)v100);
                              }
                              std::__fs::filesystem::path::__string_view v104 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)&v259);
                              if (v104.__size_ > 0x7FFFFFFFFFFFFFF7) {
                                sub_215731CD8();
                              }
                              if (v104.__size_ >= 0x17)
                              {
                                std::basic_string_view<_CharT, _Traits>::size_type v106 = (v104.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                                if ((v104.__size_ | 7) != 0x17) {
                                  std::basic_string_view<_CharT, _Traits>::size_type v106 = v104.__size_ | 7;
                                }
                                std::basic_string_view<_CharT, _Traits>::size_type v107 = v106 + 1;
                                long long v105 = (long long *)operator new(v106 + 1);
                                v272[0] = (void *)(v107 | 0x8000000000000000);
                                *(void *)&long long __dst = v105;
                                *((void *)&__dst + 1) = v104.__size_;
                              }
                              else
                              {
                                HIBYTE(v272[0]) = v104.__size_;
                                long long v105 = &__dst;
                                if (!v104.__size_) {
                                  goto LABEL_471;
                                }
                              }
                              memmove(v105, v104.__data_, v104.__size_);
LABEL_471:
                              *((unsigned char *)v105 + v104.__size_) = 0;
                              long long v108 = __dst;
                              LODWORD(v231[0]) = v272[0];
                              *(_DWORD *)((char *)v231 + 3) = *(_DWORD *)((char *)v272 + 3);
                              int v109 = SHIBYTE(v272[0]);
                              *(void *)v233 = &unk_26C678D20;
                              *(_OWORD *)&v233[8] = 0uLL;
                              v110 = sub_215AB5250(1u);
                              if (!v111) {
                                goto LABEL_503;
                              }
                              long long v112 = v110;
                              uint64_t v113 = HIBYTE(data);
                              if (SHIBYTE(data) >= 0) {
                                uint64_t v114 = HIBYTE(data);
                              }
                              else {
                                uint64_t v114 = *((void *)&__s1 + 1);
                              }
                              uint64_t v115 = v110[23];
                              int v116 = (char)v115;
                              if ((v115 & 0x80u) != 0) {
                                uint64_t v115 = *((void *)v110 + 1);
                              }
                              if (v114 != v115) {
                                goto LABEL_503;
                              }
                              if (v116 >= 0) {
                                v117 = v110;
                              }
                              else {
                                v117 = *(char **)v110;
                              }
                              if ((HIBYTE(data) & 0x80) != 0)
                              {
                                if (memcmp((const void *)__s1, v117, *((size_t *)&__s1 + 1))) {
                                  goto LABEL_503;
                                }
                              }
                              else if (HIBYTE(data))
                              {
                                p_s1 = &__s1;
                                while (*(unsigned __int8 *)p_s1 == *v117)
                                {
                                  p_s1 = (long long *)((char *)p_s1 + 1);
                                  ++v117;
                                  if (!--v113) {
                                    goto LABEL_500;
                                  }
                                }
                                goto LABEL_503;
                              }
LABEL_500:
                              if (v213 == *((_DWORD *)v112 + 6))
                              {
                                if (v109 < 0)
                                {
                                  sub_215738B0C(&__dst, (void *)v108, *((unint64_t *)&v108 + 1));
                                  unsigned __int8 v122 = HIBYTE(v272[0]);
                                  size_t v120 = *((void *)&__dst + 1);
                                  v121 = (long long *)__dst;
                                }
                                else
                                {
                                  long long __dst = v108;
                                  LODWORD(v272[0]) = v231[0];
                                  *(_DWORD *)((char *)v272 + 3) = *(_DWORD *)((char *)v231 + 3);
                                  HIBYTE(v272[0]) = v109;
                                  size_t v120 = *((void *)&v108 + 1);
                                  v121 = (long long *)v108;
                                  unsigned __int8 v122 = v109;
                                }
                                if ((v122 & 0x80u) == 0) {
                                  v142 = &__dst;
                                }
                                else {
                                  v142 = v121;
                                }
                                if ((v122 & 0x80u) == 0) {
                                  size_t v143 = v122;
                                }
                                else {
                                  size_t v143 = v120;
                                }
                                uint64_t v144 = sub_215B9F7CC(v142, v143);
                                if (SHIBYTE(v272[0]) < 0) {
                                  operator delete((void *)__dst);
                                }
                                if ((v144 & 0xFF00000000) != 0)
                                {
                                  (*(void (**)(unsigned char *__return_ptr))(**(void **)(a1 + 24) + 368))(v214);
                                  if (*(void *)&v214[8])
                                  {
                                    (*(void (**)(void))(**(void **)&v214[8] + 16))(*(void *)&v214[8]);
                                    sub_2159AEB98();
                                  }
                                  if (SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) < 0) {
                                    sub_215738B0C(&pn, v203.__pn_.__r_.__value_.__l.__data_, v203.__pn_.__r_.__value_.__l.__size_);
                                  }
                                  else {
                                    std::string pn = v203.__pn_;
                                  }
                                  sub_215AC8CC8("Failed to open file for reading: ", &pn, (std::string *)&__p);
                                  if (SHIBYTE(v286[0]) < 0)
                                  {
                                    sub_215738B0C(&v178, (void *)__p, *((unint64_t *)&__p + 1));
                                  }
                                  else
                                  {
                                    long long v178 = __p;
                                    v179 = v286[0];
                                  }
                                  char v180 = 1;
                                  char v181 = 0;
                                  char v182 = 0;
                                  char v183 = 1;
                                  sub_21599512C(2u, &v178, (uint64_t)&__dst);
                                  sub_2158AAB90(a2, (uint64_t)&__dst);
                                  sub_21573FF04((uint64_t)&__dst);
                                  sub_21573FE74((uint64_t)&v178);
                                  if (SHIBYTE(v286[0]) < 0) {
                                    operator delete((void *)__p);
                                  }
                                  if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0) {
                                    operator delete(pn.__r_.__value_.__l.__data_);
                                  }
                                  sub_215CF6138((uint64_t)v214);
                                  goto LABEL_558;
                                }
                                if (v109 < 0)
                                {
                                  sub_215738B0C(v214, (void *)v108, *((unint64_t *)&v108 + 1));
                                }
                                else
                                {
                                  *(_OWORD *)v214 = v108;
                                  *(_DWORD *)&v214[16] = v231[0];
                                  *(_DWORD *)&v214[19] = *(_DWORD *)((char *)v231 + 3);
                                  v214[23] = v109;
                                }
                                sub_215AC8CC8("Unknown image extension: ", (std::string *)v214, (std::string *)&__p);
                                if (SHIBYTE(v286[0]) < 0)
                                {
                                  sub_215738B0C(&v184, (void *)__p, *((unint64_t *)&__p + 1));
                                }
                                else
                                {
                                  long long v184 = __p;
                                  v185 = v286[0];
                                }
                                char v186 = 1;
                                char v187 = 0;
                                char v188 = 0;
                                char v189 = 1;
                                sub_21599512C(0xDu, &v184, (uint64_t)&__dst);
                                sub_2158AAB90(a2, (uint64_t)&__dst);
                                sub_21573FF04((uint64_t)&__dst);
                                v147 = &v184;
                                goto LABEL_643;
                              }
LABEL_503:
                              long long v123 = sub_215AB5250(7u);
                              if (!v124) {
                                goto LABEL_523;
                              }
                              v125 = v123;
                              uint64_t v126 = HIBYTE(data);
                              if (SHIBYTE(data) >= 0) {
                                uint64_t v127 = HIBYTE(data);
                              }
                              else {
                                uint64_t v127 = *((void *)&__s1 + 1);
                              }
                              uint64_t v128 = v123[23];
                              int v129 = (char)v128;
                              if ((v128 & 0x80u) != 0) {
                                uint64_t v128 = *((void *)v123 + 1);
                              }
                              if (v127 != v128) {
                                goto LABEL_523;
                              }
                              if (v129 >= 0) {
                                v130 = v123;
                              }
                              else {
                                v130 = *(char **)v123;
                              }
                              if ((HIBYTE(data) & 0x80) != 0)
                              {
                                if (memcmp((const void *)__s1, v130, *((size_t *)&__s1 + 1))) {
                                  goto LABEL_523;
                                }
                              }
                              else if (HIBYTE(data))
                              {
                                long long v131 = &__s1;
                                while (*(unsigned __int8 *)v131 == *v130)
                                {
                                  long long v131 = (long long *)((char *)v131 + 1);
                                  ++v130;
                                  if (!--v126) {
                                    goto LABEL_520;
                                  }
                                }
LABEL_523:
                                if (SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                {
                                  sub_215738B0C(&__p, v203.__pn_.__r_.__value_.__l.__data_, v203.__pn_.__r_.__value_.__l.__size_);
                                }
                                else
                                {
                                  long long __p = *(_OWORD *)&v203.__pn_.__r_.__value_.__l.__data_;
                                  v286[0] = (void *)v203.__pn_.__r_.__value_.__r.__words[2];
                                }
                                long long v132 = std::string::insert((std::string *)&__p, 0, "Unexpected info file ", 0x15uLL);
                                v134 = (void *)v132->__r_.__value_.__r.__words[0];
                                unint64_t v133 = v132->__r_.__value_.__l.__size_;
                                *(_DWORD *)v214 = v132->__r_.__value_.__r.__words[2];
                                *(_DWORD *)&v214[3] = *(_DWORD *)((char *)&v132->__r_.__value_.__r.__words[2] + 3);
                                int v135 = SHIBYTE(v132->__r_.__value_.__r.__words[2]);
                                v132->__r_.__value_.__l.__size_ = 0;
                                v132->__r_.__value_.__r.__words[2] = 0;
                                v132->__r_.__value_.__r.__words[0] = 0;
                                if (v135 < 0)
                                {
                                  sub_215738B0C(&v160, v134, v133);
                                }
                                else
                                {
                                  *(void *)&long long v160 = v134;
                                  *((void *)&v160 + 1) = v133;
                                  *(_DWORD *)v161 = *(_DWORD *)v214;
                                  *(_DWORD *)&v161[3] = *(_DWORD *)&v214[3];
                                  char v162 = v135;
                                }
                                char v163 = 1;
                                LOBYTE(v164) = 0;
                                char v168 = 0;
                                char v169 = 1;
                                sub_21599512C(0xDu, &v160, (uint64_t)&__dst);
                                *(_OWORD *)a2 = __dst;
                                *(unsigned char *)(a2 + 16) = 0;
                                *(unsigned char *)(a2 + 112) = 0;
                                if ((_BYTE)v280)
                                {
                                  *(unsigned char *)(a2 + 40) = 0;
                                  if ((_BYTE)v273)
                                  {
                                    *(_OWORD *)(a2 + 16) = *(_OWORD *)v272;
                                    *(void **)(a2 + 32) = v272[2];
                                    memset(v272, 0, sizeof(v272));
                                    *(unsigned char *)(a2 + 40) = 1;
                                  }
                                  *(unsigned char *)(a2 + 48) = 0;
                                  *(unsigned char *)(a2 + 104) = 0;
                                  if (!v279)
                                  {
                                    *(unsigned char *)(a2 + 112) = 1;
                                    *(unsigned char *)(a2 + 120) = 0;
                                    if (!(_BYTE)v273) {
                                      goto LABEL_544;
                                    }
                                    goto LABEL_542;
                                  }
                                  uint64_t v136 = v276;
                                  *(void *)(a2 + 64) = v275;
                                  *(_OWORD *)(a2 + 48) = v274;
                                  long long v274 = 0uLL;
                                  *(void *)(a2 + 72) = v136;
                                  *(_OWORD *)(a2 + 80) = v277;
                                  *(void *)(a2 + 96) = v278;
                                  uint64_t v278 = 0;
                                  v275 = 0;
                                  long long v277 = 0uLL;
                                  *(unsigned char *)(a2 + 104) = 1;
                                  *(unsigned char *)(a2 + 112) = 1;
                                  *(unsigned char *)(a2 + 120) = 0;
                                  if (SHIBYTE(v278) < 0)
                                  {
                                    operator delete((void *)v277);
                                    if ((SHIBYTE(v275) & 0x80000000) == 0)
                                    {
LABEL_535:
                                      if (!(_BYTE)v273) {
                                        goto LABEL_544;
                                      }
LABEL_542:
                                      if (SHIBYTE(v272[2]) < 0) {
                                        operator delete(v272[0]);
                                      }
                                      goto LABEL_544;
                                    }
                                  }
                                  else if ((SHIBYTE(v275) & 0x80000000) == 0)
                                  {
                                    goto LABEL_535;
                                  }
                                  operator delete((void *)v274);
                                  if ((_BYTE)v273) {
                                    goto LABEL_542;
                                  }
                                }
                                else
                                {
                                  *(unsigned char *)(a2 + 120) = 0;
                                }
LABEL_544:
                                if (v169)
                                {
                                  if (v168)
                                  {
                                    if (v167 < 0) {
                                      operator delete(v166);
                                    }
                                    if (v165 < 0) {
                                      operator delete(v164);
                                    }
                                  }
                                  if (v163 && v162 < 0) {
                                    operator delete((void *)v160);
                                  }
                                }
                                if (v135 < 0) {
                                  operator delete(v134);
                                }
                                if ((SHIBYTE(v286[0]) & 0x80000000) == 0) {
                                  goto LABEL_558;
                                }
                                v137 = (void *)__p;
LABEL_557:
                                operator delete(v137);
LABEL_558:
                                v138 = *(std::__shared_weak_count **)&v233[16];
                                if (*(void *)&v233[16]
                                  && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v233[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
                                {
                                  ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
                                  std::__shared_weak_count::__release_weak(v138);
                                }
                                if (v109 < 0) {
                                  operator delete((void *)v108);
                                }
                                if ((SBYTE7(v260) & 0x80000000) == 0) {
                                  goto LABEL_566;
                                }
                                long long v119 = (void *)v259;
LABEL_565:
                                operator delete(v119);
LABEL_566:
                                if (!v201 && v200)
                                {
                                  if (v199)
                                  {
                                    if (SHIBYTE(v198) < 0) {
                                      operator delete((void *)v197);
                                    }
                                    if (SHIBYTE(v195) < 0) {
                                      operator delete((void *)v194);
                                    }
                                  }
                                  if (v193 && SHIBYTE(v192) < 0) {
                                    operator delete((void *)v191);
                                  }
                                }
                                if (v284[200])
                                {
                                  uint64_t v139 = *(void *)&v284[176];
                                  if (*(void *)&v284[176])
                                  {
                                    uint64_t v140 = *(void *)&v284[184];
                                    v141 = *(void **)&v284[176];
                                    if (*(void *)&v284[184] != *(void *)&v284[176])
                                    {
                                      do
                                      {
                                        if (*(char *)(v140 - 1) < 0) {
                                          operator delete(*(void **)(v140 - 24));
                                        }
                                        v140 -= 24;
                                      }
                                      while (v140 != v139);
                                      v141 = *(void **)&v284[176];
                                    }
                                    *(void *)&v284[184] = v139;
                                    operator delete(v141);
                                  }
                                }
                                if (v284[168] && (v284[167] & 0x80000000) != 0) {
                                  operator delete(*(void **)&v284[144]);
                                }
                                if (v284[136] && (v284[135] & 0x80000000) != 0) {
                                  operator delete(*(void **)&v284[112]);
                                }
                                if (v284[80] && (v284[79] & 0x80000000) != 0) {
                                  operator delete(*(void **)&v284[56]);
                                }
                                if ((v284[23] & 0x80000000) == 0) {
                                  goto LABEL_595;
                                }
                                operator delete(*(void **)v284);
                                uint64_t v92 = v149;
                                if ((v150 & 0x80000000) == 0) {
                                  goto LABEL_596;
                                }
                                goto LABEL_601;
                              }
LABEL_520:
                              if (v213 != *((_DWORD *)v125 + 6)) {
                                goto LABEL_523;
                              }
                              if (v109 < 0)
                              {
                                sub_215738B0C(&__dst, (void *)v108, *((unint64_t *)&v108 + 1));
                              }
                              else
                              {
                                long long __dst = v108;
                                LODWORD(v272[0]) = v231[0];
                                *(_DWORD *)((char *)v272 + 3) = *(_DWORD *)((char *)v231 + 3);
                                HIBYTE(v272[0]) = v109;
                              }
                              uint64_t v145 = sub_215CEE578((unsigned __int8 *)&__dst);
                              if (SHIBYTE(v272[0]) < 0) {
                                operator delete((void *)__dst);
                              }
                              if ((v145 & 0xFF00000000) != 0)
                              {
                                unint64_t v146 = sub_215CEE350(1uLL);
                                if (SBYTE7(v260) < 0)
                                {
                                  sub_215738B0C(&v170, (void *)v259, *((unint64_t *)&v259 + 1));
                                }
                                else
                                {
                                  long long v170 = v259;
                                  uint64_t v171 = v260;
                                }
                                sub_215CEFC54((uint64_t)&v170, 0, v146, *(void *)(a1 + 24), (uint64_t)&__dst);
                                if (SHIBYTE(v171) < 0) {
                                  operator delete((void *)v170);
                                }
                                if (v283)
                                {
                                  sub_215995568((uint64_t)&v284[32], (uint64_t)&__p);
                                  sub_215AD2078((uint64_t)v214, (uint64_t)&__dst);
                                }
                                sub_215732BF4(v214, "Failed to load mesh ");
                                sub_215AC8DB0((uint64_t)&__dst);
                                sub_215E12384((void **)v214, &__dst, (uint64_t)&__p);
                                sub_21598E6D4((uint64_t)&__p);
                              }
                              if (v109 < 0)
                              {
                                sub_215738B0C(v214, (void *)v108, *((unint64_t *)&v108 + 1));
                              }
                              else
                              {
                                *(_OWORD *)v214 = v108;
                                *(_DWORD *)&v214[16] = v231[0];
                                *(_DWORD *)&v214[19] = *(_DWORD *)((char *)v231 + 3);
                                v214[23] = v109;
                              }
                              sub_215AC8CC8("Unknown mesh extension: ", (std::string *)v214, (std::string *)&__p);
                              if (SHIBYTE(v286[0]) < 0)
                              {
                                sub_215738B0C(&v172, (void *)__p, *((unint64_t *)&__p + 1));
                              }
                              else
                              {
                                long long v172 = __p;
                                v173 = v286[0];
                              }
                              char v174 = 1;
                              char v175 = 0;
                              char v176 = 0;
                              char v177 = 1;
                              sub_21599512C(0xDu, &v172, (uint64_t)&__dst);
                              sub_2158AAB90(a2, (uint64_t)&__dst);
                              sub_21573FF04((uint64_t)&__dst);
                              v147 = &v172;
LABEL_643:
                              sub_21573FE74((uint64_t)v147);
                              if (SHIBYTE(v286[0]) < 0) {
                                operator delete((void *)__p);
                              }
                              if ((v214[23] & 0x80000000) == 0) {
                                goto LABEL_558;
                              }
                              v137 = *(void **)v214;
                              goto LABEL_557;
                            }
                          }
                          memmove(v94, v93.__data_, v93.__size_);
                          goto LABEL_451;
                        }
                      }
                      else if ((SBYTE7(v260) & 0x80000000) == 0)
                      {
                        goto LABEL_201;
                      }
                      operator delete((void *)v259);
                      unsigned int v73 = v229;
                      if (!v229) {
                        goto LABEL_428;
                      }
                      goto LABEL_426;
                    }
                  }
                  else if (v38)
                  {
                    goto LABEL_65;
                  }
                  uint64_t v45 = *(void *)(v5 + 152 * v3 + 120);
                  uint64_t v46 = *(void *)(a1 + 24);
                  v258[0] = v45;
                  (*(void (**)(void **__return_ptr))(*(void *)v46 + 368))(&v255);
                  uint64_t v47 = a1 + 160;
                  if (p_p)
                  {
                    uint64_t v48 = (void *)(*(uint64_t (**)(long long *))(*(void *)p_p + 16))(p_p);
                    if (v45) {
                      std::istream::seekg();
                    }
                    int v49 = v26 - 1;
                    BOOL v50 = v151;
                    int v41 = v150;
                    switch(v49)
                    {
                      case 0:
                        *(void *)&long long __dst = 1;
                        sub_215E00B20(v284, (uint64_t *)&__dst);
                      case 1:
                      case 3:
                        pn.__r_.__value_.__s.__data_[0] = 0;
                        char v245 = 0;
                        LOBYTE(v231[0]) = 0;
                        char v232 = 0;
                        sub_215ACDBB4(&__dst, (uint64_t)v48, (uint64_t)&pn, (uint64_t)v231);
                        v227 = &__dst;
                        uint64_t v228 = a1 + 160;
                        LOBYTE(__p) = 0;
                        char v296 = 0;
                        v225[0] = &unk_26C6782E0;
                        v225[1] = &__p;
                        v225[2] = &v227;
                        sub_215E12638((uint64_t)v225, (uint64_t)v284);
                        if (v284[120])
                        {
                          char v270 = v295;
                          if (v295)
                          {
                            LOBYTE(v259) = __p;
                          }
                          else
                          {
                            long long v259 = __p;
                            LOBYTE(v260) = 0;
                            LOBYTE(v269) = 0;
                            if ((_BYTE)v294)
                            {
                              LOBYTE(v262) = 0;
                              if ((_BYTE)v287)
                              {
                                long long v260 = *(_OWORD *)v286;
                                v261 = v286[2];
                                memset(v286, 0, sizeof(v286));
                                LOBYTE(v262) = 1;
                              }
                              LOBYTE(v263) = 0;
                              char v268 = 0;
                              if (v293)
                              {
                                v264 = v289;
                                long long v263 = v288;
                                long long v288 = 0uLL;
                                long long v266 = v291;
                                uint64_t v265 = v290;
                                uint64_t v267 = v292;
                                v289 = 0;
                                long long v291 = 0uLL;
                                uint64_t v292 = 0;
                                char v268 = 1;
                              }
                              LOBYTE(v269) = 1;
                            }
                          }
                        }
                        else
                        {
                          long long v190 = *(_OWORD *)v284;
                          unsigned int v77 = sub_215741BFC(&v191, (long long *)&v284[16]);
                          long long v259 = v190;
                          LOBYTE(v260) = 0;
                          LOBYTE(v269) = 0;
                          if (v200)
                          {
                            LOBYTE(v262) = 0;
                            int v78 = v193;
                            if (v193)
                            {
                              long long v260 = *(_OWORD *)v77;
                              v261 = (void *)*((void *)v77 + 2);
                              *((void *)v77 + 1) = 0;
                              *((void *)v77 + 2) = 0;
                              *(void *)unsigned int v77 = 0;
                              LOBYTE(v262) = 1;
                            }
                            LOBYTE(v263) = 0;
                            char v268 = 0;
                            if (v199)
                            {
                              v264 = v195;
                              long long v263 = v194;
                              long long v194 = 0uLL;
                              long long v266 = v197;
                              uint64_t v265 = v196;
                              uint64_t v267 = v198;
                              v195 = 0;
                              long long v197 = 0uLL;
                              uint64_t v198 = 0;
                              char v268 = 1;
                            }
                            LOBYTE(v269) = 1;
                            char v270 = 0;
                            if (v78 && SHIBYTE(v192) < 0) {
                              operator delete((void *)v191);
                            }
                          }
                          else
                          {
                            char v270 = 0;
                          }
                          if (!v284[120] && v284[112])
                          {
                            if (v284[104])
                            {
                              if ((v284[103] & 0x80000000) != 0) {
                                operator delete(*(void **)&v284[80]);
                              }
                              if ((v284[71] & 0x80000000) != 0) {
                                operator delete(*(void **)&v284[48]);
                              }
                            }
                            if (v284[40] && (v284[39] & 0x80000000) != 0) {
                              operator delete(*(void **)&v284[16]);
                            }
                          }
                        }
                        if (v296 && !v295 && (_BYTE)v294)
                        {
                          if (v293)
                          {
                            if (SHIBYTE(v292) < 0) {
                              operator delete((void *)v291);
                            }
                            if (SHIBYTE(v289) < 0) {
                              operator delete((void *)v288);
                            }
                          }
                          if ((_BYTE)v287 && SHIBYTE(v286[2]) < 0) {
                            operator delete(v286[0]);
                          }
                        }
                        if (v270)
                        {
                          if ((_BYTE)v259)
                          {
                            char v243 = 1;
                            goto LABEL_341;
                          }
                          sub_215DFDEE0(&__dst, (uint64_t)&__p);
                          *(_OWORD *)v233 = __p;
                          v233[16] = 0;
                          char v242 = 0;
                          if (!(_BYTE)v294) {
                            goto LABEL_340;
                          }
                        }
                        else
                        {
                          sub_215DFDCFC((uint64_t)&v259, (uint64_t)&__p);
                          *(_OWORD *)v233 = __p;
                          v233[16] = 0;
                          char v242 = 0;
                          if (!(_BYTE)v294)
                          {
LABEL_340:
                            char v243 = 0;
                            goto LABEL_341;
                          }
                        }
                        char v235 = 0;
                        if ((_BYTE)v287)
                        {
                          *(_OWORD *)&v233[16] = *(_OWORD *)v286;
                          v234 = v286[2];
                          memset(v286, 0, sizeof(v286));
                          char v235 = 1;
                        }
                        LOBYTE(v236) = 0;
                        char v241 = 0;
                        if (v293)
                        {
                          v237 = v289;
                          long long v236 = v288;
                          long long v288 = 0uLL;
                          long long v239 = v291;
                          uint64_t v238 = v290;
                          uint64_t v240 = v292;
                          v289 = 0;
                          long long v291 = 0uLL;
                          uint64_t v292 = 0;
                          char v241 = 1;
                        }
                        char v242 = 1;
                        char v243 = 0;
                        if ((_BYTE)v287 && SHIBYTE(v286[2]) < 0) {
                          operator delete(v286[0]);
                        }
LABEL_341:
                        if (!v270 && (_BYTE)v269)
                        {
                          if (v268)
                          {
                            if (SHIBYTE(v267) < 0) {
                              operator delete((void *)v266);
                            }
                            if (SHIBYTE(v264) < 0) {
                              operator delete((void *)v263);
                            }
                          }
                          if ((_BYTE)v262 && SHIBYTE(v261) < 0) {
                            operator delete((void *)v260);
                          }
                        }
                        if (!v243)
                        {
                          sub_215E10780((uint64_t)v233, (std::string *)&v190);
                          sub_215AD0060();
                        }
                        *(void *)&long long __dst = &unk_26C685758;
                        if (v282 < 0)
                        {
                          operator delete(v281);
                          if ((SHIBYTE(v275) & 0x80000000) == 0)
                          {
LABEL_345:
                            if ((SHIBYTE(v273) & 0x80000000) == 0) {
                              goto LABEL_360;
                            }
LABEL_359:
                            operator delete(v272[1]);
LABEL_360:
                            char v224 = 1;
                            BOOL v74 = v257;
                            if (v257)
                            {
LABEL_361:
                              if (!atomic_fetch_add(&v74->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                              {
                                ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                                std::__shared_weak_count::__release_weak(v74);
                              }
                            }
LABEL_363:
                            if (!v224)
                            {
                              DWORD2(v260) = 0;
                              sub_2158353B0(&v259, "while loading sequence entry ");
                              sub_215AD32A0();
                            }
                            sub_2159904A8(v47, v233);
                            long long v79 = *(_OWORD *)&v233[8];
                            if (*(void *)&v233[16])
                            {
                              atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v233[16] + 8), 1uLL, memory_order_relaxed);
                              if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v79 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
                              {
                                (*(void (**)(void))(**((void **)&v79 + 1) + 16))(*((void *)&v79 + 1));
                                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v79 + 1));
                              }
                            }
                            if (!(void)v79)
                            {
                              *(_DWORD *)&v284[24] = 0;
                              sub_2157FD010(v284, "Failed to load sequence entry ");
                              sub_215AD32A0();
                            }
                            if (*((char *)v50 + 23) < 0)
                            {
                              sub_215738B0C(&v158, *(void **)v50, *((void *)v50 + 1));
                            }
                            else
                            {
                              long long v80 = *v50;
                              v159 = (void *)*((void *)v50 + 2);
                              long long v158 = v80;
                            }
                            LOBYTE(v155[0]) = 0;
                            char v157 = 0;
                            if (*((unsigned char *)v148 + 24))
                            {
                              if (*((char *)v148 + 23) < 0)
                              {
                                sub_215738B0C(v155, *(void **)v148, *((void *)v148 + 1));
                              }
                              else
                              {
                                long long v81 = *v148;
                                v156 = (void *)*((void *)v148 + 2);
                                *(_OWORD *)v155 = v81;
                              }
                              char v157 = 1;
                              long long __dst = v158;
                              long long v82 = v159;
                              long long v158 = 0uLL;
                              v159 = 0;
                              *(_OWORD *)&v272[1] = *(_OWORD *)v155;
                              v272[0] = v82;
                              v273 = v156;
                              v155[0] = 0;
                              v155[1] = 0;
                              v156 = 0;
                              LOBYTE(v274) = 1;
                            }
                            else
                            {
                              long long __dst = v158;
                              v272[0] = v159;
                              v159 = 0;
                              long long v158 = 0uLL;
                              LOBYTE(v272[1]) = 0;
                              LOBYTE(v274) = 0;
                            }
                            long long v83 = &__dst;
                            if (SHIBYTE(v272[0]) >= 0)
                            {
                              unint64_t v84 = HIBYTE(v272[0]);
                            }
                            else
                            {
                              unint64_t v84 = *((void *)&__dst + 1);
                              long long v83 = (long long *)__dst;
                            }
                            if (!v84) {
                              goto LABEL_404;
                            }
                            v85 = v83;
                            if (v84 < 8) {
                              goto LABEL_417;
                            }
                            v85 = (long long *)((char *)v83 + (v84 & 0xFFFFFFFFFFFFFFF8));
                            unsigned int v86 = (char *)v83 + 3;
                            unint64_t v87 = v84 & 0xFFFFFFFFFFFFFFF8;
                            while (1)
                            {
                              int8x8_t v88 = vceq_s8(*(int8x8_t *)(v86 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
                              if (v88.i8[0])
                              {
                                *(v86 - 3) = 95;
                                if ((v88.i8[1] & 1) == 0) {
                                  goto LABEL_388;
                                }
                              }
                              else if ((v88.i8[1] & 1) == 0)
                              {
LABEL_388:
                                if (v88.i8[2]) {
                                  goto LABEL_389;
                                }
                                goto LABEL_397;
                              }
                              *(v86 - 2) = 95;
                              if (v88.i8[2])
                              {
LABEL_389:
                                *(v86 - 1) = 95;
                                if ((v88.i8[3] & 1) == 0) {
                                  goto LABEL_390;
                                }
                                goto LABEL_398;
                              }
LABEL_397:
                              if ((v88.i8[3] & 1) == 0)
                              {
LABEL_390:
                                if (v88.i8[4]) {
                                  goto LABEL_391;
                                }
                                goto LABEL_399;
                              }
LABEL_398:
                              unsigned char *v86 = 95;
                              if (v88.i8[4])
                              {
LABEL_391:
                                v86[1] = 95;
                                if ((v88.i8[5] & 1) == 0) {
                                  goto LABEL_392;
                                }
                                goto LABEL_400;
                              }
LABEL_399:
                              if ((v88.i8[5] & 1) == 0)
                              {
LABEL_392:
                                if (v88.i8[6]) {
                                  goto LABEL_393;
                                }
                                goto LABEL_401;
                              }
LABEL_400:
                              v86[2] = 95;
                              if (v88.i8[6])
                              {
LABEL_393:
                                v86[3] = 95;
                                if (v88.i8[7]) {
                                  goto LABEL_402;
                                }
                                goto LABEL_385;
                              }
LABEL_401:
                              if (v88.i8[7]) {
LABEL_402:
                              }
                                v86[4] = 95;
LABEL_385:
                              v86 += 8;
                              v87 -= 8;
                              if (!v87)
                              {
                                if (v84 == (v84 & 0xFFFFFFFFFFFFFFF8)) {
                                  goto LABEL_404;
                                }
LABEL_417:
                                char v90 = (long long *)((char *)v83 + v84);
                                do
                                {
                                  if (*(unsigned char *)v85 == 58) {
                                    *(unsigned char *)v85 = 95;
                                  }
                                  v85 = (long long *)((char *)v85 + 1);
                                }
                                while (v85 != v90);
LABEL_404:
                                v153 = &unk_26C678D20;
                                long long v154 = *(_OWORD *)&v233[8];
                                *(_OWORD *)&v233[8] = 0uLL;
                                sub_215989A54(&__p, (uint64_t)&__dst, (uint64_t)&v153);
                                *(_OWORD *)a2 = __p;
                                long long __p = 0uLL;
                                *(void *)(a2 + 16) = &unk_26C678D20;
                                *(_OWORD *)(a2 + 24) = *(_OWORD *)&v286[1];
                                v286[1] = 0;
                                v286[2] = 0;
                                *(unsigned char *)(a2 + 120) = 1;
                                uint64_t v89 = (std::__shared_weak_count *)*((void *)&v154 + 1);
                                if (*((void *)&v154 + 1)
                                  && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v154 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
                                {
                                  ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                                  std::__shared_weak_count::__release_weak(v89);
                                }
                                if ((_BYTE)v274 && SHIBYTE(v273) < 0) {
                                  operator delete(v272[1]);
                                }
                                if (SHIBYTE(v272[0]) < 0) {
                                  operator delete((void *)__dst);
                                }
                                if (v157 && SHIBYTE(v156) < 0) {
                                  operator delete(v155[0]);
                                }
                                if (SHIBYTE(v159) < 0) {
                                  operator delete((void *)v158);
                                }
                                long long v91 = *(std::__shared_weak_count **)&v233[16];
                                if (*(void *)&v233[16]
                                  && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v233[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
                                {
                                  ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
                                  std::__shared_weak_count::__release_weak(v91);
                                  uint64_t v92 = v149;
                                  if (v41 < 0) {
                                    goto LABEL_601;
                                  }
LABEL_596:
                                  if ((SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                                    goto LABEL_597;
                                  }
LABEL_602:
                                  operator delete(v203.__pn_.__r_.__value_.__l.__data_);
                                  if ((SHIBYTE(data) & 0x80000000) == 0) {
                                    return;
                                  }
LABEL_598:
                                  operator delete((void *)__s1);
                                  return;
                                }
LABEL_595:
                                uint64_t v92 = v149;
                                if ((v41 & 0x80000000) == 0) {
                                  goto LABEL_596;
                                }
LABEL_601:
                                operator delete(v92);
                                if ((SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                                  goto LABEL_597;
                                }
                                goto LABEL_602;
                              }
                            }
                          }
                        }
                        else if ((SHIBYTE(v275) & 0x80000000) == 0)
                        {
                          goto LABEL_345;
                        }
                        operator delete((void *)v274);
                        if ((SHIBYTE(v273) & 0x80000000) == 0) {
                          goto LABEL_360;
                        }
                        goto LABEL_359;
                      case 2:
                        sub_215AD154C((std::string *)&v259, *(void **)((char *)v48 + *(void *)(*v48 - 24) + 40), 0);
                        sub_215DDC12C((uint64_t *)&v259);
                      default:
                        sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIO.cpp", 680, (uint64_t)"", 0, (uint64_t)"Format cannot be loaded", 23, (void (*)(void **))sub_215E1ABD8);
                        abort();
                    }
                  }
                  if (SHIBYTE(v203.__pn_.__r_.__value_.__r.__words[2]) < 0)
                  {
                    int v41 = v150;
                    sub_215738B0C(v284, v203.__pn_.__r_.__value_.__l.__data_, v203.__pn_.__r_.__value_.__l.__size_);
                    BOOL v50 = v151;
                  }
                  else
                  {
                    *(std::__fs::filesystem::path *)v284 = v203;
                    BOOL v50 = v151;
                    int v41 = v150;
                  }
                  char v69 = std::string::insert((std::string *)v284, 0, "Failed to open file for reading: ", 0x21uLL);
                  char v71 = (void *)v69->__r_.__value_.__r.__words[0];
                  unint64_t v70 = v69->__r_.__value_.__l.__size_;
                  LODWORD(v259) = v69->__r_.__value_.__r.__words[2];
                  *(_DWORD *)((char *)&v259 + 3) = *(_DWORD *)((char *)&v69->__r_.__value_.__r.__words[2] + 3);
                  int v72 = SHIBYTE(v69->__r_.__value_.__r.__words[2]);
                  v69->__r_.__value_.__l.__size_ = 0;
                  v69->__r_.__value_.__r.__words[2] = 0;
                  v69->__r_.__value_.__r.__words[0] = 0;
                  if (v72 < 0)
                  {
                    sub_215738B0C(&__p, v71, v70);
                  }
                  else
                  {
                    *(void *)&long long __p = v71;
                    *((void *)&__p + 1) = v70;
                    LODWORD(v286[0]) = v259;
                    *(_DWORD *)((char *)v286 + 3) = *(_DWORD *)((char *)&v259 + 3);
                    HIBYTE(v286[0]) = v72;
                  }
                  LOBYTE(v286[1]) = 1;
                  LOBYTE(v286[2]) = 0;
                  BYTE8(v291) = 0;
                  LOBYTE(v292) = 1;
                  sub_21599512C(2u, &__p, (uint64_t)&__dst);
                  *(_OWORD *)v214 = __dst;
                  v214[16] = 0;
                  char v223 = 0;
                  if ((_BYTE)v280)
                  {
                    char v216 = 0;
                    if ((_BYTE)v273)
                    {
                      *(_OWORD *)&v214[16] = *(_OWORD *)v272;
                      v215 = v272[2];
                      memset(v272, 0, sizeof(v272));
                      char v216 = 1;
                    }
                    LOBYTE(v217) = 0;
                    char v222 = 0;
                    if (v279)
                    {
                      v218 = v275;
                      long long v217 = v274;
                      long long v274 = 0uLL;
                      long long v220 = v277;
                      uint64_t v219 = v276;
                      uint64_t v221 = v278;
                      v275 = 0;
                      long long v277 = 0uLL;
                      uint64_t v278 = 0;
                      char v222 = 1;
                    }
                    char v223 = 1;
                    char v224 = 0;
                    if ((_BYTE)v273 && SHIBYTE(v272[2]) < 0) {
                      operator delete(v272[0]);
                    }
                  }
                  else
                  {
                    char v224 = 0;
                  }
                  if ((_BYTE)v292)
                  {
                    if (BYTE8(v291))
                    {
                      if (SBYTE7(v291) < 0) {
                        operator delete(v289);
                      }
                      if (SBYTE7(v288) < 0) {
                        operator delete(v286[2]);
                      }
                    }
                    if (LOBYTE(v286[1]) && SHIBYTE(v286[0]) < 0) {
                      operator delete((void *)__p);
                    }
                  }
                  if (v72 < 0)
                  {
                    operator delete(v71);
                    if ((v284[23] & 0x80000000) == 0)
                    {
LABEL_215:
                      BOOL v74 = v257;
                      if (v257) {
                        goto LABEL_361;
                      }
                      goto LABEL_363;
                    }
                  }
                  else if ((v284[23] & 0x80000000) == 0)
                  {
                    goto LABEL_215;
                  }
                  operator delete(*(void **)v284);
                  BOOL v74 = v257;
                  if (v257) {
                    goto LABEL_361;
                  }
                  goto LABEL_363;
                }
LABEL_62:
                operator delete((void *)__p);
                goto LABEL_63;
              }
            }
            else if (v35 >= v37)
            {
              if (v35 - v37 >= 5) {
                size_t v43 = 5;
              }
              else {
                size_t v43 = v35 - v37;
              }
              uint64_t v44 = (uint64_t)&__p;
              goto LABEL_91;
            }
            sub_215739EF4();
          }
        }
        memmove(v28, v27.__data_, v27.__size_);
        goto LABEL_54;
      }
    }
    memmove(p_dst, v22.__data_, v22.__size_);
    goto LABEL_41;
  }
  int v16 = *((char *)v151 + 23);
  if (v16 < 0)
  {
    uint64_t v53 = *((void *)v151 + 1);
    int v17 = v148;
    *(void *)&long long __dst = *(void *)v151;
    *((void *)&__dst + 1) = v53;
    uint64_t v18 = *(void *)(v14 + 792);
    if (v18) {
      goto LABEL_25;
    }
LABEL_104:
    sub_21573D7DC();
  }
  int v17 = v148;
  *(void *)&long long __dst = v151;
  *((void *)&__dst + 1) = v16;
  uint64_t v18 = *(void *)(v14 + 792);
  if (!v18) {
    goto LABEL_104;
  }
LABEL_25:
  (*(void (**)(unsigned char *__return_ptr))(*(void *)v18 + 48))(v284);
  if (*((char *)v151 + 23) < 0)
  {
    sub_215738B0C(&v209, *(void **)v151, *((void *)v151 + 1));
  }
  else
  {
    long long v19 = *v151;
    v210 = (void *)*((void *)v151 + 2);
    long long v209 = v19;
  }
  LOBYTE(v206) = 0;
  char v208 = 0;
  if (*((unsigned char *)v17 + 24))
  {
    if (*((char *)v17 + 23) < 0)
    {
      sub_215738B0C(&v206, *(void **)v17, *((void *)v17 + 1));
    }
    else
    {
      long long v54 = *v17;
      v207 = (void *)*((void *)v17 + 2);
      long long v206 = v54;
    }
    char v208 = 1;
    long long __dst = v209;
    std::chrono::system_clock::time_point v55 = v210;
    long long v209 = 0uLL;
    v210 = 0;
    *(_OWORD *)&v272[1] = v206;
    v272[0] = v55;
    v273 = v207;
    long long v206 = 0uLL;
    v207 = 0;
    LOBYTE(v274) = 1;
  }
  else
  {
    long long __dst = v209;
    v272[0] = v210;
    v210 = 0;
    long long v209 = 0uLL;
    LOBYTE(v272[1]) = 0;
    LOBYTE(v274) = 0;
  }
  int v56 = &__dst;
  if (SHIBYTE(v272[0]) >= 0)
  {
    unint64_t v57 = HIBYTE(v272[0]);
  }
  else
  {
    unint64_t v57 = *((void *)&__dst + 1);
    int v56 = (long long *)__dst;
  }
  if (!v57) {
    goto LABEL_141;
  }
  uint64_t v58 = v56;
  if (v57 < 8) {
    goto LABEL_157;
  }
  uint64_t v58 = (long long *)((char *)v56 + (v57 & 0xFFFFFFFFFFFFFFF8));
  uint64_t v59 = (char *)v56 + 3;
  unint64_t v60 = v57 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    int8x8_t v61 = vceq_s8(*(int8x8_t *)(v59 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
    if (v61.i8[0])
    {
      *(v59 - 3) = 95;
      if ((v61.i8[1] & 1) == 0) {
        goto LABEL_125;
      }
    }
    else if ((v61.i8[1] & 1) == 0)
    {
LABEL_125:
      if (v61.i8[2]) {
        goto LABEL_126;
      }
      goto LABEL_134;
    }
    *(v59 - 2) = 95;
    if (v61.i8[2])
    {
LABEL_126:
      *(v59 - 1) = 95;
      if ((v61.i8[3] & 1) == 0) {
        goto LABEL_127;
      }
      goto LABEL_135;
    }
LABEL_134:
    if ((v61.i8[3] & 1) == 0)
    {
LABEL_127:
      if (v61.i8[4]) {
        goto LABEL_128;
      }
      goto LABEL_136;
    }
LABEL_135:
    unsigned char *v59 = 95;
    if (v61.i8[4])
    {
LABEL_128:
      v59[1] = 95;
      if ((v61.i8[5] & 1) == 0) {
        goto LABEL_129;
      }
      goto LABEL_137;
    }
LABEL_136:
    if ((v61.i8[5] & 1) == 0)
    {
LABEL_129:
      if ((v61.i8[6] & 1) == 0) {
        goto LABEL_138;
      }
      goto LABEL_130;
    }
LABEL_137:
    v59[2] = 95;
    if ((v61.i8[6] & 1) == 0)
    {
LABEL_138:
      if ((v61.i8[7] & 1) == 0) {
        goto LABEL_122;
      }
      goto LABEL_139;
    }
LABEL_130:
    v59[3] = 95;
    if ((v61.i8[7] & 1) == 0) {
      goto LABEL_122;
    }
LABEL_139:
    v59[4] = 95;
LABEL_122:
    v59 += 8;
    v60 -= 8;
  }
  while (v60);
  if (v57 == (v57 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_141;
  }
LABEL_157:
  long long v64 = (long long *)((char *)v56 + v57);
  do
  {
    if (*(unsigned char *)v58 == 58) {
      *(unsigned char *)uint64_t v58 = 95;
    }
    uint64_t v58 = (long long *)((char *)v58 + 1);
  }
  while (v58 != v64);
LABEL_141:
  v204 = &unk_26C678D20;
  long long v205 = *(_OWORD *)&v284[8];
  if (*(void *)&v284[16]) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v284[16] + 8), 1uLL, memory_order_relaxed);
  }
  sub_215989A54(&__p, (uint64_t)&__dst, (uint64_t)&v204);
  *(_OWORD *)a2 = __p;
  long long __p = 0uLL;
  *(void *)(a2 + 16) = &unk_26C678D20;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v286[1];
  v286[1] = 0;
  v286[2] = 0;
  *(unsigned char *)(a2 + 120) = 1;
  long long v62 = (std::__shared_weak_count *)*((void *)&v205 + 1);
  if (*((void *)&v205 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v205 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
    std::__shared_weak_count::__release_weak(v62);
  }
  if ((_BYTE)v274 && SHIBYTE(v273) < 0) {
    operator delete(v272[1]);
  }
  if (SHIBYTE(v272[0]) < 0) {
    operator delete((void *)__dst);
  }
  if (v208)
  {
    if (SHIBYTE(v207) < 0) {
      operator delete((void *)v206);
    }
  }
  if (SHIBYTE(v210) < 0)
  {
    operator delete((void *)v209);
    size_t v63 = *(std::__shared_weak_count **)&v284[16];
    if (!*(void *)&v284[16]) {
      goto LABEL_597;
    }
LABEL_162:
    if (atomic_fetch_add(&v63->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      goto LABEL_597;
    }
    ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
    std::__shared_weak_count::__release_weak(v63);
    if ((SHIBYTE(data) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_598;
  }
  size_t v63 = *(std::__shared_weak_count **)&v284[16];
  if (*(void *)&v284[16]) {
    goto LABEL_162;
  }
LABEL_597:
  if (SHIBYTE(data) < 0) {
    goto LABEL_598;
  }
}

void sub_215AC8144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, int a11, int a12)
{
  sub_21573FF04((uint64_t)&STACK[0x8F0]);
  if (SLOBYTE(STACK[0x427]) < 0) {
    operator delete((void *)STACK[0x410]);
  }
  sub_215AC8E0C((uint64_t)&STACK[0x690]);
  sub_215AEFACC((uint64_t)&STACK[0x4F0]);
  if (v13 < 0) {
    operator delete(v12);
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete((void *)STACK[0x610]);
  }
  sub_2157407D4((uint64_t)&STACK[0x2F0]);
  sub_215AC8EAC((uint64_t)&STACK[0x820]);
  if (a12 < 0)
  {
    operator delete(a10);
    if ((SLOBYTE(STACK[0x397]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
  }
  else if ((SLOBYTE(STACK[0x397]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x407]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  operator delete((void *)STACK[0x380]);
  if (SLOBYTE(STACK[0x407]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x3F0]);
    _Unwind_Resume(a1);
  }
LABEL_13:
  _Unwind_Resume(a1);
}

__n128 sub_215AC8CC8@<Q0>(const char *a1@<X0>, std::string *a2@<X1>, std::string *a3@<X8>)
{
  size_t v6 = strlen(a1);
  unsigned int v7 = (__n128 *)std::string::insert(a2, 0, a1, v6);
  __n128 result = *v7;
  *a3 = *(std::string *)v7->n128_u8;
  v7->n128_u64[0] = 0;
  v7->n128_u64[1] = 0;
  v7[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_215AC8D28(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  long long v3 = *(_OWORD *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  unint64_t v4 = *(std::__shared_weak_count **)(result + 16);
  *(_OWORD *)(result + 8) = v3;
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      return v2;
    }
  }
  return result;
}

uint64_t sub_215AC8DB0(uint64_t result)
{
  if (*(unsigned char *)(result + 384))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &unk_26C65A5B0;
    __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

uint64_t sub_215AC8E0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 384))
  {
    sub_215956690((uint64_t *)a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_215AC8EAC(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void **sub_215AC8EF8(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (!*a1) {
    return a1;
  }
  long long v3 = (char *)a1[1];
  unint64_t v4 = *a1;
  if (v3 == v2) {
    goto LABEL_13;
  }
  do
  {
    uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
    if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      size_t v6 = (std::__shared_weak_count *)*((void *)v3 - 4);
      if (!v6) {
        goto LABEL_4;
      }
    }
    else
    {
      size_t v6 = (std::__shared_weak_count *)*((void *)v3 - 4);
      if (!v6) {
        goto LABEL_4;
      }
    }
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
LABEL_4:
    v3 -= 40;
  }
  while (v3 != v2);
  unint64_t v4 = *a1;
LABEL_13:
  a1[1] = v2;
  operator delete(v4);
  return a1;
}

void sub_215AC8FFC(void *__p@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t v5 = 0;
  uint64_t v104 = *MEMORY[0x263EF8340];
  uint64_t v6 = 0x666666666666666;
  char v71 = 0;
  int v72 = 0;
  unsigned int v7 = &v60;
  unint64_t v73 = 0;
  long long v8 = &v49;
  unsigned __int8 v59 = 12;
  uint64_t v9 = &v75;
  LOBYTE(v60) = 0;
  uint64_t v45 = &v77;
  unsigned __int8 v70 = 0;
  uint64_t v46 = &v61;
  while (1)
  {
    uint64_t v11 = *(void *)(a2 + 288);
    unint64_t v12 = *(void *)(a2 + 280);
    if (v12 >= 0x86BCA1AF286BCA1BLL * ((*(void *)(a2 + 296) - v11) >> 3) && !*(void *)(a2 + 256)) {
      break;
    }
    if (*(void *)(v11 + 152 * v12) > (uint64_t)__p) {
      break;
    }
    sub_215AC32A0(a2, (uint64_t)&v47);
    if (v58)
    {
      if ((unint64_t)v5 < v73)
      {
        *(_OWORD *)uint64_t v5 = v47;
        long long v47 = 0uLL;
        *((void *)v5 + 2) = &unk_26C678D20;
        *(_OWORD *)(v5 + 24) = v49;
        long long v49 = 0uLL;
        uint64_t v10 = v5 + 40;
      }
      else
      {
        int v13 = (char *)v71;
        unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (unsigned char *)v71) >> 3);
        unint64_t v15 = v14 + 1;
        if (v14 + 1 > 0x666666666666666) {
          sub_215738AC0();
        }
        if (0x999999999999999ALL * ((uint64_t)(v73 - (void)v71) >> 3) > v15) {
          unint64_t v15 = 0x999999999999999ALL * ((uint64_t)(v73 - (void)v71) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v73 - (void)v71) >> 3) >= 0x333333333333333) {
          unint64_t v16 = 0x666666666666666;
        }
        else {
          unint64_t v16 = v15;
        }
        if (v16 > 0x666666666666666) {
          sub_215738AD8();
        }
        int v17 = (char *)operator new(40 * v16);
        uint64_t v18 = &v17[40 * v14];
        long long v19 = &v17[40 * v16];
        *(_OWORD *)uint64_t v18 = v47;
        long long v47 = 0uLL;
        *((void *)v18 + 2) = &unk_26C678D20;
        *(_OWORD *)(v18 + 24) = v49;
        long long v49 = 0uLL;
        uint64_t v10 = v18 + 40;
        if (v5 != v13)
        {
          uint64_t v20 = 0;
          do
          {
            int v21 = &v18[v20];
            std::__fs::filesystem::path::__string_view v22 = &v5[v20];
            *(_OWORD *)(v21 - 40) = *(_OWORD *)&v5[v20 - 40];
            *((void *)v22 - 5) = 0;
            *((void *)v22 - 4) = 0;
            *((void *)v21 - 3) = &unk_26C678D20;
            *((_OWORD *)v21 - 1) = *(_OWORD *)&v5[v20 - 16];
            *((void *)v22 - 2) = 0;
            *((void *)v22 - 1) = 0;
            v20 -= 40;
          }
          while (&v5[v20] != v13);
          uint64_t v5 = (char *)v71;
          long long v23 = v72;
          char v71 = &v18[v20];
          int v72 = v18 + 40;
          unint64_t v73 = (unint64_t)v19;
          while (2)
          {
            if (v23 == v5) {
              goto LABEL_56;
            }
            std::basic_string_view<_CharT, _Traits>::size_type v24 = (std::__shared_weak_count *)*((void *)v23 - 1);
            if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
              std::basic_string_view<_CharT, _Traits>::size_type v25 = (std::__shared_weak_count *)*((void *)v23 - 4);
              if (v25) {
                goto LABEL_26;
              }
            }
            else
            {
              std::basic_string_view<_CharT, _Traits>::size_type v25 = (std::__shared_weak_count *)*((void *)v23 - 4);
              if (v25)
              {
LABEL_26:
                if (!atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                  std::__shared_weak_count::__release_weak(v25);
                }
              }
            }
            v23 -= 40;
            continue;
          }
        }
        char v71 = &v17[40 * v14];
        int v72 = v18 + 40;
        unint64_t v73 = (unint64_t)v19;
LABEL_56:
        if (v5) {
          operator delete(v5);
        }
      }
      int v72 = v10;
      uint64_t v5 = v10;
      uint64_t v6 = 0x666666666666666;
      goto LABEL_4;
    }
    if (*(unsigned char *)(a2 + 128))
    {
      uint64_t v26 = *(void *)(a2 + 120);
      if (!v26) {
        sub_21573D7DC();
      }
      (*(void (**)(uint64_t, long long *))(*(void *)v26 + 48))(v26, &v47);
      uint64_t v6 = 0x666666666666666;
      if (v58)
      {
        exception = __cxa_allocate_exception(8uLL);
        void *exception = &unk_26C65A5B0;
        __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
      }
    }
    if (v70) {
      goto LABEL_34;
    }
    uint64_t v27 = v59;
    LOBYTE(v95) = 0;
    char v103 = 0;
    size_t v28 = sub_215AB74CC();
    sub_215741BFC(&__pa, &v95);
    *(void *)&long long __dst = v27;
    *((void *)&__dst + 1) = v28;
    v75.__r_.__value_.__s.__data_[0] = 0;
    char v83 = 0;
    if (v92)
    {
      char v76 = 0;
      if (v85)
      {
        std::string v75 = __pa;
        memset(&__pa, 0, sizeof(__pa));
        char v76 = 1;
      }
      LOBYTE(v77) = 0;
      char v82 = 0;
      if (v91)
      {
        long long v77 = v86;
        int v78 = v87;
        unint64_t v87 = 0;
        long long v86 = 0uLL;
        uint64_t v79 = v88;
        long long v80 = v89;
        uint64_t v81 = v90;
        long long v89 = 0uLL;
        uint64_t v90 = 0;
        char v82 = 1;
      }
      char v83 = 1;
      if (v85 && SHIBYTE(__pa.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__pa.__r_.__value_.__l.__data_);
      }
    }
    long long v60 = __dst;
    if (v70)
    {
      sub_215741894((uint64_t)&v61, (long long *)&v75);
      if (!v83) {
        goto LABEL_86;
      }
LABEL_80:
      if (v82)
      {
        if (SHIBYTE(v81) < 0)
        {
          operator delete((void *)v80);
          if ((SHIBYTE(v78) & 0x80000000) == 0) {
            goto LABEL_83;
          }
        }
        else if ((SHIBYTE(v78) & 0x80000000) == 0)
        {
          goto LABEL_83;
        }
        operator delete((void *)v77);
        if (!v76) {
          goto LABEL_86;
        }
      }
      else
      {
LABEL_83:
        if (!v76) {
          goto LABEL_86;
        }
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      goto LABEL_86;
    }
    v61.__r_.__value_.__s.__data_[0] = 0;
    char v69 = 0;
    if (v83)
    {
      char v62 = 0;
      if (v76)
      {
        std::string v61 = v75;
        memset(&v75, 0, sizeof(v75));
        char v62 = 1;
      }
      LOBYTE(v63) = 0;
      char v68 = 0;
      if (v82)
      {
        long long v63 = v77;
        long long v64 = v78;
        int v78 = 0;
        long long v77 = 0uLL;
        uint64_t v65 = v79;
        long long v66 = v80;
        uint64_t v67 = v81;
        long long v80 = 0uLL;
        uint64_t v81 = 0;
        char v68 = 1;
      }
      char v69 = 1;
    }
    unsigned __int8 v70 = 1;
    if (v83) {
      goto LABEL_80;
    }
LABEL_86:
    if (!v103) {
      goto LABEL_34;
    }
    if (!v102)
    {
LABEL_90:
      if (v97) {
        goto LABEL_91;
      }
      goto LABEL_34;
    }
    if (v101 < 0)
    {
      operator delete(v100);
      if ((v99 & 0x80000000) == 0) {
        goto LABEL_90;
      }
    }
    else if ((v99 & 0x80000000) == 0)
    {
      goto LABEL_90;
    }
    operator delete(v98);
    if (v97)
    {
LABEL_91:
      if (v96 < 0) {
        operator delete((void *)v95);
      }
    }
LABEL_34:
    if (*((void *)&v47 + 1) != *((void *)&v60 + 1) || v47 != v60)
    {
      sub_215E10780((uint64_t)&v47, &__pa);
      sub_215E11614((char *)&v60, (void **)&__pa.__r_.__value_.__l.__data_, (uint64_t)&__dst);
      long long v60 = __dst;
      if (v70)
      {
        sub_215741894((uint64_t)&v61, (long long *)&v75);
        uint64_t v6 = 0x666666666666666;
        if (!v83) {
          goto LABEL_71;
        }
      }
      else
      {
        v61.__r_.__value_.__s.__data_[0] = 0;
        char v69 = 0;
        uint64_t v6 = 0x666666666666666;
        if (v83)
        {
          char v62 = 0;
          if (v76)
          {
            std::string v61 = v75;
            memset(&v75, 0, sizeof(v75));
            char v62 = 1;
          }
          LOBYTE(v63) = 0;
          char v68 = 0;
          if (v82)
          {
            long long v63 = v77;
            long long v64 = v78;
            int v78 = 0;
            long long v77 = 0uLL;
            uint64_t v65 = v79;
            long long v66 = v80;
            uint64_t v67 = v81;
            long long v80 = 0uLL;
            uint64_t v81 = 0;
            char v68 = 1;
          }
          char v69 = 1;
        }
        unsigned __int8 v70 = 1;
        if (!v83) {
          goto LABEL_71;
        }
      }
      if (v82)
      {
        if (SHIBYTE(v81) < 0)
        {
          operator delete((void *)v80);
          if ((SHIBYTE(v78) & 0x80000000) == 0) {
            goto LABEL_68;
          }
        }
        else if ((SHIBYTE(v78) & 0x80000000) == 0)
        {
          goto LABEL_68;
        }
        operator delete((void *)v77);
        if (!v76)
        {
LABEL_71:
          if (SHIBYTE(__pa.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__pa.__r_.__value_.__l.__data_);
          }
          goto LABEL_4;
        }
      }
      else
      {
LABEL_68:
        if (!v76) {
          goto LABEL_71;
        }
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      goto LABEL_71;
    }
    if (!v57 || !v50) {
      goto LABEL_4;
    }
    sub_215E11614((char *)&v60, &v48, (uint64_t)&__dst);
    long long v60 = __dst;
    if (v70)
    {
      sub_215741894((uint64_t)&v61, (long long *)&v75);
      uint64_t v6 = 0x666666666666666;
      if (!v83) {
        goto LABEL_4;
      }
LABEL_109:
      if (v82)
      {
        if (SHIBYTE(v81) < 0)
        {
          operator delete((void *)v80);
          if ((SHIBYTE(v78) & 0x80000000) == 0) {
            goto LABEL_112;
          }
        }
        else if ((SHIBYTE(v78) & 0x80000000) == 0)
        {
          goto LABEL_112;
        }
        operator delete((void *)v77);
        if (!v76) {
          goto LABEL_4;
        }
      }
      else
      {
LABEL_112:
        if (!v76) {
          goto LABEL_4;
        }
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      goto LABEL_4;
    }
    v61.__r_.__value_.__s.__data_[0] = 0;
    char v69 = 0;
    if (v83)
    {
      char v62 = 0;
      if (v76)
      {
        std::string v61 = v75;
        memset(&v75, 0, sizeof(v75));
        char v62 = 1;
      }
      LOBYTE(v63) = 0;
      char v68 = 0;
      if (v82)
      {
        long long v63 = v77;
        long long v64 = v78;
        int v78 = 0;
        long long v77 = 0uLL;
        uint64_t v65 = v79;
        long long v66 = v80;
        uint64_t v67 = v81;
        long long v80 = 0uLL;
        uint64_t v81 = 0;
        char v68 = 1;
      }
      char v69 = 1;
    }
    unsigned __int8 v70 = 1;
    uint64_t v6 = 0x666666666666666;
    if (v83) {
      goto LABEL_109;
    }
LABEL_4:
    sub_2158B553C((uint64_t)&v47);
  }
  int v29 = v70;
  if (v70)
  {
    unsigned int v30 = v59;
    if (v69) {
      unint64_t v31 = (long long *)&v61;
    }
    else {
      unint64_t v31 = (long long *)&unk_215EF9F28;
    }
    sub_2158391B4(&__dst, v31);
    sub_21599512C(v30, &__dst, (uint64_t)&v47);
    *(_OWORD *)&__pa.__r_.__value_.__l.__data_ = v47;
    if (v57)
    {
      if (v50)
      {
        long long __p = v48;
        *(void *)&long long v95 = v49;
        *(void *)((char *)&v95 + 7) = *(void *)((char *)&v49 + 7);
        LOBYTE(v7) = HIBYTE(v49);
        long long v49 = 0uLL;
        uint64_t v48 = 0;
        int v32 = 1;
        if (v56) {
          goto LABEL_125;
        }
LABEL_130:
        uint64_t v6 = 0;
        int v33 = 0;
        int v34 = 1;
        if (v50) {
          goto LABEL_131;
        }
      }
      else
      {
        long long __p = 0;
        int v32 = 0;
        if (!v56) {
          goto LABEL_130;
        }
LABEL_125:
        uint64_t v6 = v51;
        v94[0] = v52;
        *(void *)((char *)v94 + 7) = *(void *)((char *)&v52 + 7);
        LOBYTE(v9) = HIBYTE(v52);
        uint64_t v51 = 0;
        long long v52 = 0uLL;
        long long v8 = v53;
        uint64_t v46 = v54;
        v93[0] = v55;
        *(void *)((char *)v93 + 7) = *(void *)((char *)&v55 + 7);
        LOBYTE(v45) = HIBYTE(v55);
        long long v54 = 0;
        long long v55 = 0uLL;
        int v33 = 1;
        int v34 = 1;
        if (v50)
        {
LABEL_131:
          if (SHIBYTE(v49) < 0) {
            operator delete(v48);
          }
        }
      }
    }
    else
    {
      int v34 = 0;
      int v33 = 0;
      long long __p = 0;
      int v32 = 0;
    }
    if (!(_BYTE)v81) {
      goto LABEL_140;
    }
    if (!BYTE8(v80)) {
      goto LABEL_137;
    }
    if ((SBYTE7(v80) & 0x80000000) == 0)
    {
      if ((SBYTE7(v77) & 0x80000000) == 0) {
        goto LABEL_137;
      }
LABEL_176:
      operator delete((void *)v75.__r_.__value_.__r.__words[2]);
      if (!v75.__r_.__value_.__s.__data_[8]) {
        goto LABEL_140;
      }
LABEL_138:
      if (v75.__r_.__value_.__s.__data_[7] < 0) {
        operator delete((void *)__dst);
      }
      goto LABEL_140;
    }
    operator delete(v78);
    if (SBYTE7(v77) < 0) {
      goto LABEL_176;
    }
LABEL_137:
    if (v75.__r_.__value_.__s.__data_[8]) {
      goto LABEL_138;
    }
LABEL_140:
    char v35 = 0;
  }
  else
  {
    int v34 = 0;
    int v33 = 0;
    int v32 = 0;
    char v35 = 1;
  }
  unint64_t v36 = v73;
  *(void *)a3 = v71;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v36;
  int v72 = 0;
  unint64_t v73 = 0;
  char v71 = 0;
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 144) = v35;
  if (v29)
  {
    *(_OWORD *)(a3 + 24) = *(_OWORD *)&__pa.__r_.__value_.__l.__data_;
    *(unsigned char *)(a3 + 40) = 0;
    *(unsigned char *)(a3 + 136) = 0;
    if (v34)
    {
      *(unsigned char *)(a3 + 64) = 0;
      if (v32)
      {
        uint64_t v37 = v95;
        *(void *)(a3 + 40) = __p;
        *(void *)(a3 + 48) = v37;
        *(void *)(a3 + 55) = *(void *)((char *)&v95 + 7);
        *(unsigned char *)(a3 + 63) = (_BYTE)v7;
        *(void *)&long long v95 = 0;
        *(void *)((char *)&v95 + 7) = 0;
        *(unsigned char *)(a3 + 64) = 1;
        long long __p = 0;
        LOBYTE(v7) = 0;
      }
      *(unsigned char *)(a3 + 72) = 0;
      *(unsigned char *)(a3 + 128) = 0;
      if (v33)
      {
        uint64_t v38 = v94[0];
        *(void *)(a3 + 72) = v6;
        *(void *)(a3 + 80) = v38;
        *(void *)(a3 + 87) = *(void *)((char *)v94 + 7);
        *(unsigned char *)(a3 + 95) = (_BYTE)v9;
        v94[0] = 0;
        *(void *)((char *)v94 + 7) = 0;
        *(void *)(a3 + 96) = v8;
        *(void *)(a3 + 104) = v46;
        *(void *)(a3 + 112) = v93[0];
        *(void *)(a3 + 119) = *(void *)((char *)v93 + 7);
        *(unsigned char *)(a3 + 127) = (_BYTE)v45;
        v93[0] = 0;
        *(void *)((char *)v93 + 7) = 0;
        *(unsigned char *)(a3 + 128) = 1;
      }
      *(unsigned char *)(a3 + 136) = 1;
      if (v32 && (v7 & 0x80) != 0) {
        operator delete(__p);
      }
    }
  }
  if (!v70 || !v69) {
    goto LABEL_158;
  }
  if (!v68) {
    goto LABEL_155;
  }
  if ((SHIBYTE(v67) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v64) & 0x80000000) == 0) {
      goto LABEL_155;
    }
LABEL_173:
    operator delete((void *)v63);
    if (!v62) {
      goto LABEL_158;
    }
LABEL_156:
    if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v61.__r_.__value_.__l.__data_);
    }
    goto LABEL_158;
  }
  operator delete((void *)v66);
  if (SHIBYTE(v64) < 0) {
    goto LABEL_173;
  }
LABEL_155:
  if (v62) {
    goto LABEL_156;
  }
LABEL_158:
  uint64_t v39 = (char *)v71;
  if (!v71) {
    return;
  }
  uint64_t v40 = v72;
  if (v72 == v71) {
    goto LABEL_170;
  }
  while (2)
  {
    int v41 = (std::__shared_weak_count *)*((void *)v40 - 1);
    if (v41 && !atomic_fetch_add(&v41->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
      long long v42 = (std::__shared_weak_count *)*((void *)v40 - 4);
      if (v42) {
        goto LABEL_165;
      }
    }
    else
    {
      long long v42 = (std::__shared_weak_count *)*((void *)v40 - 4);
      if (v42)
      {
LABEL_165:
        if (!atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
    }
    v40 -= 40;
    if (v40 != v39) {
      continue;
    }
    break;
  }
  uint64_t v39 = (char *)v71;
LABEL_170:
  operator delete(v39);
}

void sub_215AC9D54(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215AC9DDC(uint64_t a1)
{
  if ((*(char *)(a1 + 151) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 119) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 96));
    if (!*(unsigned char *)(a1 + 88)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 128));
  if (*(char *)(a1 + 119) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (!*(unsigned char *)(a1 + 88))
  {
LABEL_8:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_13;
  }
LABEL_7:
  if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_12;
  }
LABEL_9:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_13:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_215AC9E8C(uint64_t a1)
{
  if (*(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_11;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_215AC9F30()
{
}

void sub_215ACAC44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215ACAE5C(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C677B98;
  a1[1] = 0;
  if (v2)
  {
    uint64_t v3 = sub_215ACE800(v2);
    MEMORY[0x2166C4D20](v3, 0x10F2C4013865076);
  }
  return a1;
}

void sub_215ACAEBC(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C677B98;
  a1[1] = 0;
  if (v2)
  {
    uint64_t v3 = sub_215ACE800(v2);
    MEMORY[0x2166C4D20](v3, 0x10F2C4013865076);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215ACAF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a2 + 24))
  {
    long long v8 = sub_215990AC4(0);
    if (*(unsigned char *)(a2 + 24))
    {
      if (v8 != (uint64_t *)a2)
      {
        sub_215ACEB28(a2, (void *)*v8, (void *)v8[1], (v8[1] - *v8) >> 4);
        int v9 = *(unsigned __int8 *)(a2 + 24);
        LOBYTE(v11) = 0;
        char v12 = 0;
        if (!v9)
        {
LABEL_4:
          sub_21577C7D8((uint64_t)&v10, a3);
          LOBYTE(v14[0]) = 0;
          char v16 = 0;
          if (*(unsigned char *)(a4 + 32))
          {
            uint64_t v7 = *(void *)(a4 + 24);
            if (v7)
            {
              if (v7 == a4)
              {
                unint64_t v15 = v14;
                (*(void (**)(uint64_t, void *))(*(void *)a4 + 24))(a4, v14);
              }
              else
              {
                unint64_t v15 = *(void **)(a4 + 24);
                *(void *)(a4 + 24) = 0;
              }
            }
            else
            {
              unint64_t v15 = 0;
            }
            char v16 = 1;
          }
          int v13 = &unk_26C677B98;
          sub_215AC9F30();
        }
LABEL_3:
        sub_2157BB1A4(&v11, (uint64_t *)a2);
        char v12 = 1;
        goto LABEL_4;
      }
    }
    else
    {
      sub_2157BB1A4((void *)a2, v8);
      *(unsigned char *)(a2 + 24) = 1;
    }
  }
  LOBYTE(v11) = 0;
  char v12 = 0;
  goto LABEL_3;
}

void sub_215ACB374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, char a20,int a21,__int16 a22,char a23,char a24)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ACB42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
}

void sub_215ACB450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_2158AE698((char **)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_215ACB464(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *a1 = a3;
  a1[1] = a4;
  a1[2] = (uint64_t)&unk_26C677BF8;
  a1[3] = a2;
  a1[5] = (uint64_t)(a1 + 2);
  a1[6] = a5;
  for (a1[7] = a6; a3 != a1[6] || a4 != a1[7]; a1[1] = a4)
  {
    v10[0] = a3;
    v10[1] = a4;
    uint64_t v8 = a1[5];
    if (!v8) {
      sub_21573D7DC();
    }
    if ((*(uint64_t (**)(uint64_t, void *))(*(void *)v8 + 48))(v8, v10)) {
      break;
    }
    a3 = *a1 + 8;
    a4 = a1[1] + 16;
    *a1 = a3;
  }
  return a1;
}

void sub_215ACB538(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void *)(v2 + 40);
  if (v4 == v1)
  {
    (*(void (**)(uint64_t))(*(void *)v1 + 32))(v1);
    _Unwind_Resume(exception_object);
  }
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ACB5B0()
{
}

void *sub_215ACB5C4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_26C677BF8;
  result[1] = v3;
  return result;
}

uint64_t sub_215ACB60C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26C677BF8;
  a2[1] = v2;
  return result;
}

BOOL sub_215ACB638(uint64_t a1, void **a2)
{
  return (**a2 & **(void **)(a1 + 8)) != 0;
}

uint64_t sub_215ACB654(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3vizlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_17StoragePreferenceEE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit3vizlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_17StoragePreferenceEE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3vizlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_17StoragePreferenceEE3$_0"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3vizlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_17StoragePreferenceEE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_215ACB6C4()
{
  return &unk_26C677C68;
}

uint64_t sub_215ACB6D0(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a3;
  int v7 = *((unsigned __int8 *)*a3 + 24);
  if (*((unsigned char *)*a2 + 24)) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if ((*((unsigned char *)*a2 + 24) != 0) == (v7 != 0))
    {
LABEL_19:
      char v16 = a2[1];
      uint64_t v17 = a3[1];
      BOOL v18 = *((unsigned char *)v16 + 16) != 0;
      BOOL v19 = *((unsigned char *)v17 + 16) != 0;
      if (*((unsigned char *)v16 + 16)) {
        BOOL v20 = *((unsigned char *)v17 + 16) == 0;
      }
      else {
        BOOL v20 = 1;
      }
      if (v20) {
        return v18 ^ v19 ^ 1u;
      }
      BOOL v18 = *((unsigned char *)v16 + 8) != 0;
      BOOL v19 = *((unsigned char *)v17 + 8) != 0;
      if (!*((unsigned char *)v16 + 8) || *((unsigned char *)v17 + 8) == 0) {
        return v18 ^ v19 ^ 1u;
      }
      else {
        return *v16 == *v17;
      }
    }
    return 0;
  }
  uint64_t v10 = *v5;
  uint64_t v9 = v5[1];
  uint64_t v11 = *v6;
  if (v9 - *v5 != v6[1] - *v6) {
    return 0;
  }
  if (v10 == v9) {
    goto LABEL_19;
  }
  uint64_t v12 = 0;
  while (1)
  {
    uint64_t v13 = v10 + v12;
    v23[0] = v10 + v12 + 16;
    v23[1] = v10 + v12 + 72;
    uint64_t v14 = v11 + v12;
    v23[2] = v10 + v12 + 88;
    v23[3] = v10 + v12 + 136;
    v23[4] = v10 + v12 + 176;
    v23[5] = v10 + v12 + 248;
    v23[6] = v10 + v12 + 280;
    v23[7] = v10 + v12 + 336;
    v23[8] = v10 + v12 + 448;
    v23[9] = v10 + v12 + 608;
    v23[10] = v10 + v12 + 648;
    v23[11] = v10 + v12 + 704;
    v23[12] = v10 + v12 + 736;
    v22[0] = v11 + v12 + 16;
    v22[1] = v11 + v12 + 72;
    v22[2] = v11 + v12 + 88;
    v22[3] = v11 + v12 + 136;
    v22[4] = v11 + v12 + 176;
    v22[5] = v11 + v12 + 248;
    v22[6] = v11 + v12 + 280;
    v22[7] = v11 + v12 + 336;
    v22[8] = v11 + v12 + 448;
    v22[9] = v11 + v12 + 608;
    v22[10] = v11 + v12 + 648;
    v22[11] = v11 + v12 + 704;
    v22[12] = v11 + v12 + 736;
    uint64_t result = sub_215AE9680((uint64_t)&v24, v23, v22);
    if (!result) {
      return result;
    }
    if (*(unsigned char *)(v13 + 808) && *(unsigned char *)(v14 + 808))
    {
      if (*(_DWORD *)(v10 + v12 + 800) | *(_DWORD *)(v11 + v12 + 800)
        || *(void *)(v13 + 768) != *(void *)(v14 + 768))
      {
        return 0;
      }
    }
    else if ((*(unsigned char *)(v13 + 808) != 0) != (*(unsigned char *)(v14 + 808) != 0))
    {
      return 0;
    }
    v12 += 816;
    if (v10 + v12 == v9) {
      goto LABEL_19;
    }
  }
}

uint64_t sub_215ACB90C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C677C78[v2])(&v4, a1);
  }
  *(_DWORD *)(a1 + 32) = -1;
  return a1;
}

void sub_215ACB968(char *__p)
{
  do
  {
    while (1)
    {
      uint64_t v2 = *(char **)__p;
      unint64_t v3 = (std::__shared_weak_count *)*((void *)__p + 6);
      if (v3)
      {
        if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
          std::__shared_weak_count::__release_weak(v3);
        }
      }
      if (__p[39] < 0) {
        break;
      }
      operator delete(__p);
      long long __p = v2;
      if (!v2) {
        return;
      }
    }
    operator delete(*((void **)__p + 2));
    operator delete(__p);
    long long __p = v2;
  }
  while (v2);
}

void sub_215ACBA18()
{
}

void *sub_215ACBA30(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 34);
  if (*(void *)(a1 + 40))
  {
    unint64_t v3 = *(void **)(a1 + 24);
    char v6 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v3, (uint64_t)&v6, 1);
  }
  char v4 = *(void **)(a1 + 24);
  char v7 = v2;
  uint64_t result = sub_215731D94(v4, (uint64_t)&v7, 1);
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBA9C(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

void sub_215ACBB00(uint64_t a1, unsigned __int8 *a2)
{
  if (*(void *)(a1 + 40))
  {
    char v4 = *(void **)(a1 + 24);
    LOBYTE(__p[0]) = *(unsigned char *)(a1 + 32);
    sub_215731D94(v4, (uint64_t)__p, 1);
  }
  uint64_t v5 = *(void **)(a1 + 24);
  __p[0] = (void *)*a2;
  char v7 = 1;
  sub_215731D94(v5, (uint64_t)__p, 1);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  ++*(void *)(a1 + 40);
}

void sub_215ACBB88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215ACBBA4(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBC08(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBC6C(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBCD0(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBD3C(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBDA0(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBE04(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBE68(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBECC(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  *(void *)(*(void *)(a1 + 24) + *(void *)(**(void **)(a1 + 24) - 24) + 16) = 9;
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBF50(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    char v2 = *(void **)(a1 + 24);
    char v4 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v2, (uint64_t)&v4, 1);
  }
  *(void *)(*(void *)(a1 + 24) + *(void *)(**(void **)(a1 + 24) - 24) + 16) = 17;
  uint64_t result = std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  return result;
}

uint64_t sub_215ACBFD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(result + 40);
    do
    {
      if (v6)
      {
        char v7 = *(void **)(v5 + 24);
        char v8 = *(unsigned char *)(v5 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      ++a3;
      uint64_t result = std::ostream::operator<<();
      uint64_t v6 = *(void *)(v5 + 40) + 1;
      *(void *)(v5 + 40) = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_215ACC060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DF9494(a1, v3);
}

uint64_t sub_215ACC088(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 2 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 2;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 2;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC110(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 4 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 4;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 4;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC198(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 8 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 8;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC220(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 8 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 8;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

void sub_215ACC2A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DF927C(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215ACC2F8(uint64_t a1, uint64_t a2, char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DF9090(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

uint64_t sub_215ACC348(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 2 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 2;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 2;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC3D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 4 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 4;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 4;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC458(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 8 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 8;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC4E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 8 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      a3 += 8;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC568(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 4 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      *(void *)(*(void *)(v4 + 24) + *(void *)(**(void **)(v4 + 24) - 24) + 16) = 9;
      a3 += 4;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 4;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215ACC610(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 40);
    uint64_t v6 = 8 * a2;
    do
    {
      if (v5)
      {
        char v7 = *(void **)(v4 + 24);
        char v8 = *(unsigned char *)(v4 + 32);
        sub_215731D94(v7, (uint64_t)&v8, 1);
      }
      *(void *)(*(void *)(v4 + 24) + *(void *)(**(void **)(v4 + 24) - 24) + 16) = 17;
      a3 += 8;
      uint64_t result = std::ostream::operator<<();
      uint64_t v5 = *(void *)(v4 + 40) + 1;
      *(void *)(v4 + 40) = v5;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

void sub_215ACC6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v5 = 24 * a2;
    do
    {
      sub_215DF933C(a1, a3);
      a3 += 24;
      v5 -= 24;
    }
    while (v5);
  }
}

void *sub_215ACC714(void *result)
{
  uint64_t v1 = result;
  if (result[5])
  {
    char v2 = (void *)result[3];
    char v3 = *((unsigned char *)v1 + 32);
    uint64_t result = sub_215731D94(v2, (uint64_t)&v3, 1);
    ++v1[5];
  }
  else
  {
    result[5] = 1;
  }
  return result;
}

void *sub_215ACC780(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    char v3 = result;
    uint64_t v4 = result[5];
    do
    {
      while (v4)
      {
        uint64_t v5 = (void *)v3[3];
        char v6 = *((unsigned char *)v3 + 32);
        uint64_t result = sub_215731D94(v5, (uint64_t)&v6, 1);
        uint64_t v4 = v3[5] + 1;
        v3[5] = v4;
        if (!--v2) {
          return result;
        }
      }
      uint64_t v4 = 1;
      v3[5] = 1;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_215ACC800()
{
}

uint64_t sub_215ACC81C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void ***)(a1 + 16);
    if (v2)
    {
      do
      {
        while (1)
        {
          char v3 = (void **)*v2;
          uint64_t v4 = (std::__shared_weak_count *)v2[6];
          if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
          if (*((char *)v2 + 39) < 0) {
            break;
          }
          operator delete(v2);
          uint64_t v2 = v3;
          if (!v3) {
            goto LABEL_10;
          }
        }
        operator delete(v2[2]);
        operator delete(v2);
        uint64_t v2 = v3;
      }
      while (v3);
    }
LABEL_10:
    uint64_t v5 = *(void **)a1;
    *(void *)a1 = 0;
    if (v5) {
      operator delete(v5);
    }
  }
  return a1;
}

uint64_t sub_215ACC8F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  return a1;
}

void sub_215ACC978(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215ACCA1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))();
}

uint64_t sub_215ACCA44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))();
}

uint64_t sub_215ACCA6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))();
}

uint64_t sub_215ACCA94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))();
}

__n128 sub_215ACCABC(uint64_t **a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  if (*(unsigned char *)(v3 + 456)) {
    uint64_t v4 = v3 + 416;
  }
  else {
    uint64_t v4 = 0;
  }
  sub_215ADD2C8(v3 + 32, (uint64_t *)(*a1)[2], *a2, *(void *)(v3 + 56), v4, *(unsigned __int8 *)(v3 + 456), &__p);
  uint64_t v6 = v2[1];
  if (*(unsigned __int8 *)(v6 + 32) == v9)
  {
    if (*(unsigned char *)(v6 + 32))
    {
      if (*(char *)(v6 + 23) < 0) {
        operator delete(*(void **)v6);
      }
      __n128 result = *(__n128 *)&__p.__r_.__value_.__l.__data_;
      *(void *)(v6 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      *(__n128 *)uint64_t v6 = result;
      *(void *)(v6 + 24) = v8;
    }
  }
  else if (*(unsigned char *)(v6 + 32))
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    *(unsigned char *)(v6 + 32) = 0;
    if (v9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    __n128 result = *(__n128 *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v6 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(__n128 *)uint64_t v6 = result;
    *(void *)(v6 + 24) = v8;
    *(unsigned char *)(v6 + 32) = 1;
  }
  return result;
}

__n128 sub_215ACCBC0(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *v2 + 416;
  uint64_t v5 = *(unsigned __int8 *)(*v2 + 456);
  if (!*(unsigned char *)(*v2 + 456)) {
    uint64_t v4 = 0;
  }
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t v12 = 6;
  if (!v3) {
    sub_21573D7DC();
  }
  (*(void (**)(void **__return_ptr))(*(void *)v3 + 48))(__p);
  uint64_t v7 = v2[1];
  if (*(unsigned __int8 *)(v7 + 32) == v11)
  {
    if (*(unsigned char *)(v7 + 32))
    {
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      __n128 result = *(__n128 *)__p;
      *(void *)(v7 + 16) = v9;
      *(__n128 *)uint64_t v7 = result;
      *(void *)(v7 + 24) = v10;
    }
  }
  else if (*(unsigned char *)(v7 + 32))
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    *(unsigned char *)(v7 + 32) = 0;
    if (v11 && SHIBYTE(v9) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    __n128 result = *(__n128 *)__p;
    *(void *)(v7 + 16) = v9;
    *(__n128 *)uint64_t v7 = result;
    *(void *)(v7 + 24) = v10;
    *(unsigned char *)(v7 + 32) = 1;
  }
  return result;
}

uint64_t sub_215ACCD00(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 88);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C677C78[v2])(&v7, a1 + 56);
  }
  *(_DWORD *)(a1 + 88) = -1;
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 48);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5) {
    std::__shared_weak_count::__release_weak(v5);
  }
  return a1;
}

void *sub_215ACCDF8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_215ACCE88(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[7];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1 + 2;
    uint64_t v4 = (void *)a1[5];
    if (v4 != a1 + 2)
    {
LABEL_4:
      if (v4) {
        (*(void (**)(void *))(*v4 + 40))(v4);
      }
      uint64_t v5 = (std::__shared_weak_count *)a1[1];
      if (!v5) {
        return a1;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = a1 + 2;
    uint64_t v4 = (void *)a1[5];
    if (v4 != a1 + 2) {
      goto LABEL_4;
    }
  }
  (*(void (**)(void *))(*v3 + 32))(v3);
  uint64_t v5 = (std::__shared_weak_count *)a1[1];
  if (!v5) {
    return a1;
  }
LABEL_10:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_215ACCFC4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677D48;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215ACCFE4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677D48;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215ACD038()
{
}

void sub_215ACD044(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677D98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215ACD064(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C677D98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215ACD0B8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 112);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C677C78[v2])(&v6, a1 + 80);
  }
  *(_DWORD *)(a1 + 112) = -1;
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 72);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 48);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 32);
  if (v5) {
    std::__shared_weak_count::__release_weak(v5);
  }
}

void *sub_215ACD1B0(void *a1)
{
  *a1 = &unk_26C677DF8;
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3)
    {
LABEL_4:
      if (v4) {
        (*(void (**)(void *))(*v4 + 40))(v4);
      }
      uint64_t v5 = (std::__shared_weak_count *)a1[2];
      if (!v5) {
        return a1;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3) {
      goto LABEL_4;
    }
  }
  (*(void (**)(void *))(*v3 + 32))(v3);
  uint64_t v5 = (std::__shared_weak_count *)a1[2];
  if (!v5) {
    return a1;
  }
LABEL_10:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_215ACD308(void *a1)
{
  *a1 = &unk_26C677DF8;
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3)
    {
LABEL_4:
      if (v4) {
        (*(void (**)(void *))(*v4 + 40))(v4);
      }
      uint64_t v5 = (std::__shared_weak_count *)a1[2];
      if (!v5)
      {
LABEL_12:
        JUMPOUT(0x2166C4D20);
      }
LABEL_10:
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3) {
      goto LABEL_4;
    }
  }
  (*(void (**)(void *))(*v3 + 32))(v3);
  uint64_t v5 = (std::__shared_weak_count *)a1[2];
  if (!v5) {
    goto LABEL_12;
  }
  goto LABEL_10;
}

void *sub_215ACD474(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  uint64_t v2 = operator new(0x48uLL);
  *uint64_t v2 = &unk_26C677DF8;
  sub_215ACD78C(v2 + 1, v1);
  return v2;
}

void sub_215ACD4C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_215ACD4DC(uint64_t a1, void *a2)
{
  *a2 = &unk_26C677DF8;
  return sub_215ACD78C(a2 + 1, (void *)(a1 + 8));
}

void sub_215ACD508(uint64_t a1)
{
}

void sub_215ACD510(void *a1)
{
  sub_215ACD8A8(a1 + 1);

  operator delete(a1);
}

void sub_215ACD54C(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 56);
  *(_OWORD *)char v6 = *(_OWORD *)v2;
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  v7[0] = 0;
  int v8 = -1;
  uint64_t v3 = *(unsigned int *)(v2 + 88);
  if (v3 != -1)
  {
    ((void (*)(unsigned char *, unsigned char *, uint64_t))off_26C677DD8[v3])(v5, v7, v2 + 56);
    int v8 = v3;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  if (!v4) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, std::__shared_weak_count **, uint64_t, unsigned char *))(*(void *)v4 + 48))(v4, v6, v2 + 16, v7);
  if (v8 != -1) {
    ((void (*)(unsigned char *, unsigned char *))off_26C677C78[v8])(v5, v7);
  }
  int v8 = -1;
  if (v6[1]) {
    std::__shared_weak_count::__release_weak(v6[1]);
  }
  std::promise<void>::set_value(*(std::promise<void> **)(a1 + 8));
}

void sub_215ACD670(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

void sub_215ACD68C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, std::__shared_weak_count *a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    BOOL v18 = *(std::promise<void> **)(v17 + 8);
    std::current_exception();
    v19.__ptr_ = &a10;
    std::promise<void>::set_exception(v18, v19);
    std::exception_ptr::~exception_ptr(&a10);
    __cxa_end_catch();
    JUMPOUT(0x215ACD638);
  }
  JUMPOUT(0x215ACD67CLL);
}

uint64_t sub_215ACD710(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3esn6thread6detail28DispatchAsyncAndReturnFutureIvNSt3__18functionIFvNS4_8weak_ptrINS_3kit3v"
                     "iz13VDataExporter4ImplEEERKNS8_11ContextDataENS4_7variantIJNS8_17StoragePreferenceENS5_IFNS4_8optio"
                     "nalINS8_12DataLocationEEERKNS4_4__fs10filesystem4pathESE_SG_RNS7_2fs11IFilesystemENS0_11OptionalRef"
                     "INS8_15ExportFileStateEEEEEEEEEEEENS1_11IWorkQueueTINS5_IFvvEEEEEJRSB_SE_RKSX_EEENS4_6futureIT_EERT"
                     "1_OT0_DpOT2_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3esn6thread6detail28DispatchAsyncAndReturnFutureIvNSt3__18functionIFvNS4_8weak_pt"
                                "rINS_3kit3viz13VDataExporter4ImplEEERKNS8_11ContextDataENS4_7variantIJNS8_17StoragePrefe"
                                "renceENS5_IFNS4_8optionalINS8_12DataLocationEEERKNS4_4__fs10filesystem4pathESE_SG_RNS7_2"
                                "fs11IFilesystemENS0_11OptionalRefINS8_15ExportFileStateEEEEEEEEEEEENS1_11IWorkQueueTINS5"
                                "_IFvvEEEEEJRSB_SE_RKSX_EEENS4_6futureIT_EERT1_OT0_DpOT2_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3esn6thread6detail28DispatchAsyncAndReturnFutureIvNSt3__18functionIFvNS4_8weak_ptrINS_3kit3viz13VDataExporter4ImplEEERKNS8_11ContextDataENS4_7variantIJNS8_17StoragePreferenceENS5_IFNS4_8optionalINS8_12DataLocationEEERKNS4_4__fs10filesystem4pathESE_SG_RNS7_2fs11IFilesystemENS0_11OptionalRefINS8_15ExportFileStateEEEEEEEEEEEENS1_11IWorkQueueTINS5_IFvvEEEEEJRSB_SE_RKSX_EEENS4_6futureIT_EERT1_OT0_DpOT2_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3esn6thread6detail28DispatchAsyncAndReturnFutureIvNSt3__18functionIFvNS4_8weak_ptrINS_3kit3viz13VDataExporter4ImplEEERKNS8_11ContextDataENS4_7variantIJNS8_17StoragePreferenceENS5_IFNS4_8optionalINS8_12DataLocationEEERKNS4_4__fs10filesystem4pathESE_SG_RNS7_2fs11IFilesystemENS0_11OptionalRefINS8_15ExportFileStateEEEEEEEEEEEENS1_11IWorkQueueTINS5_IFvvEEEEEJRSB_SE_RKSX_EEENS4_6futureIT_EERT1_OT0_DpOT2_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215ACD780()
{
  return &unk_26C677E58;
}

void *sub_215ACD78C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a2[5];
  if (!v5) {
    goto LABEL_6;
  }
  if ((void *)v5 != a2 + 2)
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16))(v5);
LABEL_6:
    a1[5] = v5;
    goto LABEL_8;
  }
  a1[5] = a1 + 2;
  (*(void (**)(void))(*(void *)a2[5] + 24))(a2[5]);
LABEL_8:
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

void sub_215ACD854(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215ACD8A8(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[7];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    unint64_t v3 = a1 + 2;
    uint64_t v4 = (void *)a1[5];
    if (v4 != a1 + 2) {
      goto LABEL_4;
    }
LABEL_9:
    (*(void (**)(void *))(*v3 + 32))(v3);
    uint64_t v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return;
    }
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  unint64_t v3 = a1 + 2;
  uint64_t v4 = (void *)a1[5];
  if (v4 == a1 + 2) {
    goto LABEL_9;
  }
LABEL_4:
  if (v4) {
    (*(void (**)(void *))(*v4 + 40))(v4);
  }
  uint64_t v5 = (std::__shared_weak_count *)a1[1];
  if (v5)
  {
LABEL_10:
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

uint64_t sub_215ACD9EC(uint64_t a1, const char *a2)
{
  uint64_t v4 = (char *)operator new(0x38uLL);
  long long v5 = xmmword_215ED4BB0;
  strcpy(v4, "data importer does not support filtering with matcher '");
  int v6 = 1;
  if (*(void *)a2)
  {
    char v7 = &v4;
    int v8 = a2;
    uint64_t v9 = &v4;
    uint64_t v10 = a2;
    unsigned __int8 v11 = a2;
    sub_215743B60((uint64_t *)&v9, (uint64_t)&v4);
  }
  else
  {
    char v7 = &v4;
    int v8 = "nullptr";
    uint64_t v9 = &v4;
    uint64_t v10 = "nullptr";
    unsigned __int8 v11 = "nullptr";
    sub_215743540((uint64_t *)&v9, (uint64_t)&v4);
  }
  char v7 = &v4;
  int v8 = "'";
  uint64_t v9 = &v4;
  uint64_t v10 = "'";
  unsigned __int8 v11 = "'";
  if (v6 == -1) {
    sub_215742D4C();
  }
  uint64_t v12 = &v7;
  ((void (*)(char ****, char **))off_26C677E68[v6])(&v12, &v4);
  if (v6 == -1) {
    sub_215742D4C();
  }
  char v7 = (char **)&v12;
  uint64_t result = ((uint64_t (*)(char ***, char **))off_26C677D20[v6])(&v7, &v4);
  if (v6 != -1) {
    return ((uint64_t (*)(char ***, char **))off_26C677D08[v6])(&v7, &v4);
  }
  return result;
}

void sub_215ACDB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215ACDB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215ACDB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215ACDBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_215ACDBB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = 0x400000001;
  LOBYTE(__dst[0]) = 0;
  char v13 = 0;
  if (*(unsigned char *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a3, *(void *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)a3;
      uint64_t v12 = *(void *)(a3 + 16);
    }
    char v13 = 1;
  }
  LOBYTE(__p[0]) = 0;
  char v10 = 0;
  if (*(unsigned char *)(a4 + 24))
  {
    if (*(char *)(a4 + 23) < 0)
    {
      sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)a4;
      uint64_t v9 = *(void *)(a4 + 16);
    }
    char v10 = 1;
  }
  sub_215DFD164((uint64_t)a1, &v14, a2, (long long *)__dst, (long long *)__p, 0, 1);
  if (v10 && SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (v13 && SHIBYTE(v12) < 0) {
    operator delete(__dst[0]);
  }
  *a1 = &unk_26C677E90;
  return a1;
}

void sub_215ACDCE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a22)
  {
    if (a21 < 0) {
      operator delete(a16);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215ACDD30(uint64_t a1)
{
  *(void *)a1 = &unk_26C685758;
  if ((*(char *)(a1 + 159) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 136));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
    return a1;
  }
LABEL_7:
  operator delete(*(void **)(a1 + 24));
  return a1;
}

void sub_215ACDDC0(uint64_t a1)
{
  *(void *)a1 = &unk_26C685758;
  if (*(char *)(a1 + 159) < 0)
  {
    operator delete(*(void **)(a1 + 136));
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_9:
      operator delete(*(void **)(a1 + 24));
LABEL_4:
      JUMPOUT(0x2166C4D20);
    }
  }
  else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 48));
  if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
    goto LABEL_4;
  }
  goto LABEL_9;
}

void sub_215ACDE68(uint64_t a1)
{
  while (!*(unsigned char *)(a1 + 131)
       && (*(unsigned char *)(*(void *)(a1 + 16) + *(void *)(**(void **)(a1 + 16) - 24) + 32) & 2) == 0)
  {
    sub_215DFD700(a1, (uint64_t)__p);
    if (v4 < 0)
    {
      if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
      {
LABEL_11:
        char v2 = 0;
        if (v4 < 0) {
          goto LABEL_14;
        }
        goto LABEL_2;
      }
    }
    else if (v4 == 1 && *(unsigned __int8 *)(a1 + 72) == LOBYTE(__p[0]))
    {
      goto LABEL_11;
    }
    char v2 = 1;
    if (v4 < 0) {
LABEL_14:
    }
      operator delete(__p[0]);
LABEL_2:
    if ((v2 & 1) == 0) {
      return;
    }
  }
}

double sub_215ACDF70(uint64_t a1, uint64_t a2)
{
  ++*(void *)(a1 + 80);
  if (*(unsigned char *)(a1 + 128) && *(unsigned char *)(a1 + 131))
  {
    *(unsigned char *)(a1 + 132) = 1;
  }
  else
  {
    sub_215DFD700(a1, (uint64_t)&v5);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
    ++*(void *)(a1 + 104);
  }
  return result;
}

void sub_215ACE008(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DFC508(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215ACE058(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DF9AA4(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215ACE0A8(uint64_t a1, uint64_t a2, _WORD *a3)
{
  if (a2)
  {
    uint64_t v5 = 2 * a2;
    do
    {
      sub_215DFA274(a1, a3++);
      v5 -= 2;
    }
    while (v5);
  }
}

void sub_215ACE0F8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFA8B4(a1, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215ACE148(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFAEF4(a1, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215ACE198(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFB534(a1, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215ACE1E8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DFA01C(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215ACE238(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    do
    {
      sub_215DF9DC4(a1, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215ACE288(uint64_t a1, uint64_t a2, _WORD *a3)
{
  if (a2)
  {
    uint64_t v5 = 2 * a2;
    do
    {
      sub_215DFA594(a1, a3++);
      v5 -= 2;
    }
    while (v5);
  }
}

void sub_215ACE2D8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFABD4(a1, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215ACE328(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFB214(a1, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215ACE378(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFB854(a1, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215ACE3C8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFBEC8(a1, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215ACE418(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFC1E8(a1, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215ACE468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v5 = 24 * a2;
    do
    {
      while (1)
      {
        ++*(void *)(a1 + 80);
        if (!*(unsigned char *)(a1 + 128) || !*(unsigned char *)(a1 + 131)) {
          break;
        }
        *(unsigned char *)(a1 + 132) = 1;
        a3 += 24;
        v5 -= 24;
        if (!v5) {
          return;
        }
      }
      sub_215DFD700(a1, (uint64_t)&v7);
      if (*(char *)(a3 + 23) < 0) {
        operator delete(*(void **)a3);
      }
      long long v6 = v7;
      *(void *)(a3 + 16) = v8;
      *(_OWORD *)a3 = v6;
      a3 += 24;
      ++*(void *)(a1 + 104);
      v5 -= 24;
    }
    while (v5);
  }
}

void sub_215ACE52C(uint64_t a1)
{
  ++*(void *)(a1 + 80);
  if (*(unsigned char *)(a1 + 128) && *(unsigned char *)(a1 + 131))
  {
    *(unsigned char *)(a1 + 132) = 1;
  }
  else
  {
    sub_215DFD700(a1, (uint64_t)&__p);
    if (v3 < 0) {
      operator delete(__p);
    }
    ++*(void *)(a1 + 104);
  }
}

void sub_215ACE5B0(uint64_t a1, uint64_t *a2)
{
  for (uint64_t i = *a2; i; --i)
  {
    while (1)
    {
      ++*(void *)(a1 + 80);
      if (*(unsigned char *)(a1 + 128))
      {
        if (*(unsigned char *)(a1 + 131)) {
          break;
        }
      }
      sub_215DFD700(a1, (uint64_t)&__p);
      if (v5 < 0)
      {
        operator delete(__p);
        ++*(void *)(a1 + 104);
        if (!--i) {
          return;
        }
      }
      else
      {
        ++*(void *)(a1 + 104);
        if (!--i) {
          return;
        }
      }
    }
    *(unsigned char *)(a1 + 132) = 1;
  }
}

void sub_215ACE660(uint64_t a1)
{
  if ((*(char *)(a1 + 151) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 119) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 96));
    if (!*(unsigned char *)(a1 + 88)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 128));
  if (*(char *)(a1 + 119) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (!*(unsigned char *)(a1 + 88))
  {
LABEL_8:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_13;
  }
LABEL_7:
  if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_12;
  }
LABEL_9:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return;
  }
LABEL_13:
  char v2 = *(void **)(a1 + 8);

  operator delete(v2);
}

uint64_t sub_215ACE714(uint64_t a1, std::__fs::filesystem::path *this)
{
  if (std::__fs::filesystem::path::__root_directory(this).__size_)
  {
    if ((std::__fs::filesystem::path *)a1 == this) {
      return a1;
    }
    char v4 = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    if (*(char *)(a1 + 23) < 0)
    {
      if (v4 >= 0) {
        char v10 = this;
      }
      else {
        char v10 = (std::__fs::filesystem::path *)this->__pn_.__r_.__value_.__r.__words[0];
      }
      if (v4 >= 0) {
        size_t size = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
      }
      else {
        size_t size = this->__pn_.__r_.__value_.__l.__size_;
      }
      sub_21573ABD0((void **)a1, v10, size);
      return a1;
    }
    else
    {
      if ((*((unsigned char *)&this->__pn_.__r_.__value_.__s + 23) & 0x80) == 0)
      {
        long long v5 = *(_OWORD *)&this->__pn_.__r_.__value_.__l.__data_;
        *(void *)(a1 + 16) = *((void *)&this->__pn_.__r_.__value_.__l + 2);
        *(_OWORD *)a1 = v5;
        return a1;
      }
      sub_21573AB08((void *)a1, this->__pn_.__r_.__value_.__l.__data_, this->__pn_.__r_.__value_.__l.__size_);
      return a1;
    }
  }
  else
  {
    if (std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)a1).__size_) {
      std::string::push_back((std::string *)a1, 47);
    }
    int v7 = SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    if (v7 >= 0) {
      uint64_t v8 = this;
    }
    else {
      uint64_t v8 = (std::__fs::filesystem::path *)this->__pn_.__r_.__value_.__r.__words[0];
    }
    if (v7 >= 0) {
      std::string::size_type v9 = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v9 = this->__pn_.__r_.__value_.__l.__size_;
    }
    std::string::append((std::string *)a1, (const std::string::value_type *)v8, v9);
    return a1;
  }
}

uint64_t sub_215ACE800(uint64_t a1)
{
  sub_215ACFED0(*(char **)(a1 + 344));
  sub_21573AE84(a1 + 312, *(char **)(a1 + 320));
  uint64_t v2 = *(void *)(a1 + 288);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 296);
    char v4 = *(void **)(a1 + 288);
    if (v3 != v2)
    {
      do
      {
        v3 -= 152;
        sub_215ACE660(v3);
      }
      while (v3 != v2);
      char v4 = *(void **)(a1 + 288);
    }
    *(void *)(a1 + 296) = v2;
    operator delete(v4);
  }
  uint64_t v5 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = 0;
  if (v5)
  {
    *(void *)uint64_t v5 = &unk_26C685758;
    if (*(char *)(v5 + 159) < 0)
    {
      operator delete(*(void **)(v5 + 136));
      if ((*(char *)(v5 + 71) & 0x80000000) == 0)
      {
LABEL_9:
        if ((*(char *)(v5 + 47) & 0x80000000) == 0)
        {
LABEL_10:
          MEMORY[0x2166C4D20](v5, 0x10B3C40F5E21753);
          goto LABEL_11;
        }
LABEL_45:
        operator delete(*(void **)(v5 + 24));
        goto LABEL_10;
      }
    }
    else if ((*(char *)(v5 + 71) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(v5 + 48));
    if ((*(char *)(v5 + 47) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_11:
  long long v6 = *(std::__shared_weak_count **)(a1 + 264);
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  uint64_t v7 = *(void *)(a1 + 224);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 232);
    std::string::size_type v9 = *(void **)(a1 + 224);
    if (v8 != v7)
    {
      do
      {
        char v10 = *(std::__shared_weak_count **)(v8 - 8);
        if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
        v8 -= 16;
      }
      while (v8 != v7);
      std::string::size_type v9 = *(void **)(a1 + 224);
    }
    *(void *)(a1 + 232) = v7;
    operator delete(v9);
  }
  uint64_t v11 = *(unsigned int *)(a1 + 216);
  if (v11 != -1) {
    ((void (*)(char *, uint64_t))off_26C677FB8[v11])(&v18, a1 + 200);
  }
  *(_DWORD *)(a1 + 216) = -1;
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  uint64_t v12 = *(void *)(a1 + 136);
  if (v12)
  {
    uint64_t v13 = *(void *)(a1 + 144);
    uint64_t v14 = *(void **)(a1 + 136);
    if (v13 != v12)
    {
      do
      {
        unint64_t v15 = *(std::__shared_weak_count **)(v13 - 8);
        if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
        v13 -= 16;
      }
      while (v13 != v12);
      uint64_t v14 = *(void **)(a1 + 136);
    }
    *(void *)(a1 + 144) = v12;
    operator delete(v14);
  }
  if (*(unsigned char *)(a1 + 128))
  {
    uint64_t v16 = *(void *)(a1 + 120);
    if (v16 == a1 + 96)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 96) + 32))(a1 + 96);
      sub_215779804(a1 + 32);
      if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
        return a1;
      }
      goto LABEL_41;
    }
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 40))(v16);
    }
  }
  sub_215779804(a1 + 32);
  if (*(char *)(a1 + 23) < 0) {
LABEL_41:
  }
    operator delete(*(void **)a1);
  return a1;
}

void sub_215ACEB28(uint64_t a1, void *a2, void *a3, size_t __sz)
{
  long long v6 = a2;
  uint64_t v8 = *(void *)(a1 + 16);
  std::string::size_type v9 = *(char **)a1;
  if (__sz > (v8 - *(void *)a1) >> 4)
  {
    if (v9)
    {
      char v10 = *(char **)(a1 + 8);
      uint64_t v11 = *(char **)a1;
      if (v10 != v9)
      {
        do
        {
          uint64_t v12 = (std::__shared_weak_count *)*((void *)v10 - 1);
          if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
          v10 -= 16;
        }
        while (v10 != v9);
        uint64_t v11 = *(char **)a1;
      }
      *(void *)(a1 + 8) = v9;
      operator delete(v11);
      uint64_t v8 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (__sz >> 60) {
      goto LABEL_56;
    }
    uint64_t v23 = v8 >> 3;
    if (v8 >> 3 <= __sz) {
      uint64_t v23 = __sz;
    }
    BOOL v24 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0;
    unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
    if (!v24) {
      unint64_t v25 = v23;
    }
    if (v25 >> 60) {
LABEL_56:
    }
      sub_215738AC0();
    uint64_t v26 = 2 * v25;
    uint64_t v27 = operator new(16 * v25);
    *(void *)a1 = v27;
    *(void *)(a1 + 8) = v27;
    for (*(void *)(a1 + 16) = &v27[v26]; v6 != a3; v6 += 2)
    {
      uint64_t v28 = v6[1];
      *uint64_t v27 = *v6;
      v27[1] = v28;
      if (v28) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v28 + 8), 1uLL, memory_order_relaxed);
      }
      v27 += 2;
    }
    *(void *)(a1 + 8) = v27;
    return;
  }
  uint64_t v13 = *(char **)(a1 + 8);
  unint64_t v14 = (v13 - v9) >> 4;
  if (v14 >= __sz)
  {
    if (a2 == a3)
    {
      std::exception_ptr v19 = *(char **)a1;
      if (v13 == v9)
      {
LABEL_55:
        *(void *)(a1 + 8) = v19;
        return;
      }
    }
    else
    {
      std::exception_ptr v19 = *(char **)a1;
      do
      {
        uint64_t v21 = *v6;
        uint64_t v20 = v6[1];
        if (v20) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
        }
        std::__fs::filesystem::path::__string_view v22 = (std::__shared_weak_count *)*((void *)v9 + 1);
        *(void *)std::string::size_type v9 = v21;
        *((void *)v9 + 1) = v20;
        if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
        v19 += 16;
        v6 += 2;
        v9 += 16;
      }
      while (v6 != a3);
      uint64_t v13 = *(char **)(a1 + 8);
      if (v13 == v19) {
        goto LABEL_55;
      }
    }
    do
    {
      int v32 = (std::__shared_weak_count *)*((void *)v13 - 1);
      if (v32 && !atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
      v13 -= 16;
    }
    while (v13 != v19);
    goto LABEL_55;
  }
  unint64_t v15 = &a2[2 * v14];
  if (v13 != v9)
  {
    do
    {
      uint64_t v17 = *v6;
      uint64_t v16 = v6[1];
      if (v16) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
      }
      char v18 = (std::__shared_weak_count *)*((void *)v9 + 1);
      *(void *)std::string::size_type v9 = v17;
      *((void *)v9 + 1) = v16;
      if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
      v6 += 2;
      v9 += 16;
    }
    while (v6 != v15);
    std::string::size_type v9 = *(char **)(a1 + 8);
  }
  int v29 = v9;
  if (v15 != a3)
  {
    int v29 = v9;
    unsigned int v30 = v9;
    do
    {
      uint64_t v31 = v15[1];
      *(void *)unsigned int v30 = *v15;
      *((void *)v30 + 1) = v31;
      if (v31) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 8), 1uLL, memory_order_relaxed);
      }
      v29 += 16;
      v15 += 2;
      v30 += 16;
    }
    while (v15 != a3);
  }
  *(void *)(a1 + 8) = v29;
}

void sub_215ACEEB4(uint64_t *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v8 = *a1;
  sub_215ABA544(&v8);
  std::string::push_back(&v9, 32);
  std::string v10 = v9;
  memset(&v9, 0, sizeof(v9));
  sub_215E14A58(1, 1000000000, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v3 = __p;
  }
  else {
    uint64_t v3 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    std::string::size_type v4 = v7;
  }
  else {
    std::string::size_type v4 = (std::string::size_type)__p[1];
  }
  uint64_t v5 = std::string::append(&v10, (const std::string::value_type *)v3, v4);
  *a2 = *v5;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  if ((char)v7 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_13:
      operator delete(v9.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(v10.__r_.__value_.__l.__data_);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_13;
  }
}

void sub_215ACEFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v22 - 25) & 0x80000000) == 0)
    {
LABEL_3:
      if ((a22 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v22 - 25) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v22 - 48));
  if ((a22 & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_215ACF028(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C678008;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215ACF048(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C678008;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215ACF09C(uint64_t a1)
{
  return sub_215ABECB8(a1 + 24);
}

void sub_215ACF0AC()
{
}

void *sub_215ACF0C0()
{
  double result = operator new(0x10uLL);
  *double result = &unk_26C678058;
  return result;
}

void sub_215ACF0F8(uint64_t a1, void *a2)
{
  *a2 = &unk_26C678058;
}

void sub_215ACF120(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v6 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v23[0] = 0;
  unsigned int v24 = -1;
  uint64_t v7 = *(unsigned int *)(a4 + 32);
  if (v7 != -1)
  {
    ((void (*)(unsigned char *, unsigned char *, uint64_t))off_26C677DD8[v7])(v12, v23, a4);
    unsigned int v24 = v7;
  }
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v8 = std::__shared_weak_count::lock(v5);
  if (!v8) {
    goto LABEL_12;
  }
  std::string v9 = v8;
  if (v6)
  {
    sub_215ABF08C((uint64_t)v12, v6, a3, (uint64_t)v23);
    if (!v22 && *(unsigned char *)(v6 + 160))
    {
      uint64_t v10 = *(void *)(v6 + 152);
      if (!v10) {
        sub_21573D7DC();
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v10 + 48))(v10, v6 + 32, a3 + 16, v12);
    }
    std::mutex::lock((std::mutex *)(v6 + 352));
    atomic_fetch_add((atomic_uint *volatile)(v6 + 296), 0xFFFFFFFF);
    std::condition_variable::notify_one((std::condition_variable *)(v6 + 304));
    std::mutex::unlock((std::mutex *)(v6 + 352));
    if (!v22 && v21)
    {
      if (v20)
      {
        if (v19 < 0) {
          operator delete(__p);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
      }
      if (v15 && v14 < 0) {
        operator delete(v13);
      }
    }
  }
  if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
LABEL_12:
    uint64_t v11 = v24;
    if (v24 == -1) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  uint64_t v11 = v24;
  if (v24 != -1) {
LABEL_13:
  }
    ((void (*)(unsigned char *, unsigned char *))off_26C677C78[v11])(v12, v23);
LABEL_14:
  unsigned int v24 = -1;
  if (v5) {
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_215ACF33C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,int a32,__int16 a33,char a34,char a35,int a36,__int16 a37,char a38,char a39)
{
  if (!(_BYTE)a37 && (_BYTE)a33)
  {
    if (a31)
    {
      if (a30 < 0) {
        operator delete(__p);
      }
      if (a23 < 0) {
        operator delete(a18);
      }
    }
    if (a17 && a16 < 0) {
      operator delete(a11);
    }
  }
  if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  uint64_t v43 = *(unsigned int *)(v41 - 48);
  if (v43 != -1) {
    ((void (*)(uint64_t *, uint64_t))off_26C677C78[v43])(&a9, v41 - 80);
  }
  *(_DWORD *)(v41 - 48) = -1;
  std::__shared_weak_count::__release_weak(v39);
  _Unwind_Resume(a1);
}

void sub_215ACF418(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

uint64_t sub_215ACF438(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz13VDataExporter4Impl16ExportDataAsynchERKNS1_11ContextDataERKNSt3__17variantIJNS1_17"
                     "StoragePreferenceENS7_8functionIFNS7_8optionalINS1_12DataLocationEEERKNS7_4__fs10filesystem4pathES6"
                     "_S9_RNS0_2fs11IFilesystemENS_3esn11OptionalRefINS1_15ExportFileStateEEEEEEEEEE3$_2")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz13VDataExporter4Impl16ExportDataAsynchERKNS1_11ContextDataERKNSt3__17vari"
                                "antIJNS1_17StoragePreferenceENS7_8functionIFNS7_8optionalINS1_12DataLocationEEERKNS7_4__"
                                "fs10filesystem4pathES6_S9_RNS0_2fs11IFilesystemENS_3esn11OptionalRefINS1_15ExportFileSta"
                                "teEEEEEEEEEE3$_2" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz13VDataExporter4Impl16ExportDataAsynchERKNS1_11ContextDataERKNSt3__17variantIJNS1_17StoragePreferenceENS7_8functionIFNS7_8optionalINS1_12DataLocationEEERKNS7_4__fs10filesystem4pathES6_S9_RNS0_2fs11IFilesystemENS_3esn11OptionalRefINS1_15ExportFileStateEEEEEEEEEE3$_2"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz13VDataExporter4Impl16ExportDataAsynchERKNS1_11ContextDataERKNSt3__17variantIJNS1_17StoragePreferenceENS7_8functionIFNS7_8optionalINS1_12DataLocationEEERKNS7_4__fs10filesystem4pathES6_S9_RNS0_2fs11IFilesystemENS_3esn11OptionalRefINS1_15ExportFileStateEEEEEEEEEE3$_2" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215ACF4A8()
{
  return &unk_26C6780C8;
}

void sub_215ACF4B4(uint64_t a1, void **a2, void **a3)
{
  std::string::size_type v4 = a2;
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
      *(void *)(*(void *)a1 + 8 * i) = 0;
    uint64_t v8 = *(void ***)(a1 + 16);
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    uint64_t v81 = a1 + 16;
    if (a2 == a3)
    {
      char v17 = v8;
      if (v8) {
        goto LABEL_115;
      }
    }
    else
    {
      if (v8)
      {
        while (1)
        {
          std::string v9 = v8 + 2;
          if (v8 + 2 != v4)
          {
            char v10 = *((unsigned char *)v4 + 23);
            if (*((char *)v8 + 39) < 0)
            {
              if (v10 >= 0) {
                uint64_t v12 = v4;
              }
              else {
                uint64_t v12 = *v4;
              }
              if (v10 >= 0) {
                size_t v13 = *((unsigned __int8 *)v4 + 23);
              }
              else {
                size_t v13 = (size_t)v4[1];
              }
              sub_21573ABD0(v8 + 2, v12, v13);
            }
            else if ((*((unsigned char *)v4 + 23) & 0x80) != 0)
            {
              sub_21573AB08(v8 + 2, *v4, (size_t)v4[1]);
            }
            else
            {
              long long v11 = *(_OWORD *)v4;
              v8[4] = v4[2];
              *std::string v9 = v11;
            }
          }
          char v15 = v4[3];
          char v14 = (atomic_ullong *)v4[4];
          if (v14) {
            atomic_fetch_add_explicit(v14 + 1, 1uLL, memory_order_relaxed);
          }
          uint64_t v16 = (std::__shared_weak_count *)v8[6];
          v8[5] = v15;
          v8[6] = v14;
          if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
            char v17 = (void **)*v8;
            if ((*((char *)v8 + 39) & 0x80000000) == 0)
            {
LABEL_23:
              *(_OWORD *)std::string __p = *v9;
              unint64_t v84 = v8[4];
              goto LABEL_26;
            }
          }
          else
          {
            char v17 = (void **)*v8;
            if ((*((char *)v8 + 39) & 0x80000000) == 0) {
              goto LABEL_23;
            }
          }
          sub_215738B0C(__p, v8[2], (unint64_t)v8[3]);
LABEL_26:
          if (SHIBYTE(v84) >= 0) {
            char v18 = (uint64_t *)__p;
          }
          else {
            char v18 = (uint64_t *)__p[0];
          }
          if (SHIBYTE(v84) >= 0) {
            unint64_t v19 = HIBYTE(v84);
          }
          else {
            unint64_t v19 = (unint64_t)__p[1];
          }
          unint64_t v20 = sub_21573A6BC((uint64_t)&v85, v18, v19);
          unint64_t v21 = v20;
          if (SHIBYTE(v84) < 0)
          {
            operator delete(__p[0]);
            v8[1] = (void *)v21;
            unint64_t v22 = *(void *)(a1 + 8);
            if (!v22) {
              goto LABEL_68;
            }
          }
          else
          {
            v8[1] = (void *)v20;
            unint64_t v22 = *(void *)(a1 + 8);
            if (!v22) {
              goto LABEL_68;
            }
          }
          uint8x8_t v23 = (uint8x8_t)vcnt_s8((int8x8_t)v22);
          v23.i16[0] = vaddlv_u8(v23);
          if (v23.u32[0] > 1uLL)
          {
            unint64_t v3 = v21;
            if (v22 <= v21) {
              unint64_t v3 = v21 % v22;
            }
          }
          else
          {
            unint64_t v3 = (v22 - 1) & v21;
          }
          unsigned int v24 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
          if (v24)
          {
            uint64_t v25 = *v24;
            if (*v24)
            {
              if (v23.u32[0] < 2uLL)
              {
                while (1)
                {
                  uint64_t v29 = v25[1];
                  if (v29 == v21)
                  {
                    int v30 = *((char *)v8 + 39);
                    if (v30 >= 0) {
                      v31.__data_ = (const std::string_view::value_type *)(v8 + 2);
                    }
                    else {
                      v31.__data_ = (const std::string_view::value_type *)v8[2];
                    }
                    if (v30 >= 0) {
                      v31.__size_ = *((unsigned __int8 *)v8 + 39);
                    }
                    else {
                      v31.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)v8[3];
                    }
                    if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v25 + 2), v31)) {
                      goto LABEL_105;
                    }
                  }
                  else if ((v29 & (v22 - 1)) != v3)
                  {
                    goto LABEL_68;
                  }
                  uint64_t v25 = (uint64_t *)*v25;
                  if (!v25) {
                    goto LABEL_68;
                  }
                }
              }
              do
              {
                unint64_t v26 = v25[1];
                if (v26 == v21)
                {
                  int v27 = *((char *)v8 + 39);
                  if (v27 >= 0) {
                    v28.__data_ = (const std::string_view::value_type *)(v8 + 2);
                  }
                  else {
                    v28.__data_ = (const std::string_view::value_type *)v8[2];
                  }
                  if (v27 >= 0) {
                    v28.__size_ = *((unsigned __int8 *)v8 + 39);
                  }
                  else {
                    v28.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)v8[3];
                  }
                  if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v25 + 2), v28)) {
                    goto LABEL_105;
                  }
                }
                else
                {
                  if (v26 >= v22) {
                    v26 %= v22;
                  }
                  if (v26 != v3) {
                    break;
                  }
                }
                uint64_t v25 = (uint64_t *)*v25;
              }
              while (v25);
            }
          }
LABEL_68:
          float v32 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
          float v33 = *(float *)(a1 + 32);
          if (!v22 || (float)(v33 * (float)v22) < v32)
          {
            BOOL v34 = (v22 & (v22 - 1)) != 0;
            if (v22 < 3) {
              BOOL v34 = 1;
            }
            unint64_t v35 = v34 | (2 * v22);
            unint64_t v36 = vcvtps_u32_f32(v32 / v33);
            if (v35 <= v36) {
              size_t prime = v36;
            }
            else {
              size_t prime = v35;
            }
            if (prime == 1)
            {
              size_t prime = 2;
            }
            else if ((prime & (prime - 1)) != 0)
            {
              size_t prime = std::__next_prime(prime);
            }
            int8x8_t v38 = *(int8x8_t *)(a1 + 8);
            if (prime > *(void *)&v38) {
              goto LABEL_80;
            }
            if (prime < *(void *)&v38)
            {
              unint64_t v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
              if (*(void *)&v38 < 3uLL
                || (uint8x8_t v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
              {
                unint64_t v39 = std::__next_prime(v39);
              }
              else
              {
                uint64_t v41 = 1 << -(char)__clz(v39 - 1);
                if (v39 >= 2) {
                  unint64_t v39 = v41;
                }
              }
              if (prime <= v39) {
                size_t prime = v39;
              }
              if (prime < *(void *)&v38) {
LABEL_80:
              }
                sub_21573BDA8(a1, prime);
            }
          }
          int8x8_t v42 = *(int8x8_t *)(a1 + 8);
          unint64_t v43 = (unint64_t)v8[1];
          uint8x8_t v44 = (uint8x8_t)vcnt_s8(v42);
          v44.i16[0] = vaddlv_u8(v44);
          if (v44.u32[0] > 1uLL)
          {
            if (v43 >= *(void *)&v42) {
              v43 %= *(void *)&v42;
            }
          }
          else
          {
            v43 &= *(void *)&v42 - 1;
          }
          uint64_t v45 = *(void ***)(*(void *)a1 + 8 * v43);
          if (v45)
          {
            *uint64_t v8 = *v45;
          }
          else
          {
            *uint64_t v8 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v8;
            *(void *)(*(void *)a1 + 8 * v43) = v81;
            if (!*v8) {
              goto LABEL_104;
            }
            unint64_t v46 = *((void *)*v8 + 1);
            if (v44.u32[0] > 1uLL)
            {
              if (v46 >= *(void *)&v42) {
                v46 %= *(void *)&v42;
              }
            }
            else
            {
              v46 &= *(void *)&v42 - 1;
            }
            uint64_t v45 = (void **)(*(void *)a1 + 8 * v46);
          }
          *uint64_t v45 = v8;
LABEL_104:
          ++*(void *)(a1 + 24);
LABEL_105:
          v4 += 5;
          if (v17)
          {
            uint64_t v8 = v17;
            if (v4 != a3) {
              continue;
            }
          }
          goto LABEL_109;
        }
      }
      char v17 = 0;
LABEL_109:
      if (v17)
      {
        do
        {
          while (1)
          {
LABEL_115:
            long long v47 = (void **)*v17;
            uint64_t v48 = (std::__shared_weak_count *)v17[6];
            if (v48 && !atomic_fetch_add(&v48->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
            if (*((char *)v17 + 39) < 0) {
              break;
            }
            operator delete(v17);
            char v17 = v47;
            if (!v47) {
              goto LABEL_119;
            }
          }
          operator delete(v17[2]);
          operator delete(v17);
          char v17 = v47;
        }
        while (v47);
      }
    }
  }
LABEL_119:
  if (v4 == a3) {
    return;
  }
  do
  {
    while (1)
    {
      if (*((char *)v4 + 23) < 0)
      {
        sub_215738B0C(__p, *v4, (unint64_t)v4[1]);
      }
      else
      {
        long long v49 = *(_OWORD *)v4;
        unint64_t v84 = v4[2];
        *(_OWORD *)std::string __p = v49;
      }
      char v50 = SHIBYTE(v84) >= 0 ? (uint64_t *)__p : (uint64_t *)__p[0];
      uint64_t v51 = SHIBYTE(v84) >= 0 ? (void *)HIBYTE(v84) : __p[1];
      unint64_t v52 = sub_21573A6BC((uint64_t)&v85, v50, (unint64_t)v51);
      if (SHIBYTE(v84) < 0)
      {
        operator delete(__p[0]);
        unint64_t v53 = *(void *)(a1 + 8);
        if (!v53) {
          goto LABEL_166;
        }
      }
      else
      {
        unint64_t v53 = *(void *)(a1 + 8);
        if (!v53) {
          goto LABEL_166;
        }
      }
      uint8x8_t v54 = (uint8x8_t)vcnt_s8((int8x8_t)v53);
      v54.i16[0] = vaddlv_u8(v54);
      if (v54.u32[0] > 1uLL)
      {
        unint64_t v3 = v52;
        if (v52 >= v53) {
          unint64_t v3 = v52 % v53;
        }
      }
      else
      {
        unint64_t v3 = (v53 - 1) & v52;
      }
      long long v55 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
      if (v55)
      {
        char v56 = *v55;
        if (*v55) {
          break;
        }
      }
LABEL_166:
      long long v63 = operator new(0x38uLL);
      __p[0] = v63;
      __p[1] = (void *)(a1 + 16);
      LOBYTE(v84) = 0;
      *long long v63 = 0;
      v63[1] = v52;
      long long v64 = v63 + 2;
      if (*((char *)v4 + 23) < 0)
      {
        sub_215738B0C(v64, *v4, (unint64_t)v4[1]);
      }
      else
      {
        long long v65 = *(_OWORD *)v4;
        v63[4] = v4[2];
        *(_OWORD *)long long v64 = v65;
      }
      v63[5] = v4[3];
      long long v66 = (atomic_ullong *)v4[4];
      v63[6] = v66;
      if (v66) {
        atomic_fetch_add_explicit(v66 + 1, 1uLL, memory_order_relaxed);
      }
      LOBYTE(v84) = 1;
      float v67 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
      float v68 = *(float *)(a1 + 32);
      if (v53 && (float)(v68 * (float)v53) >= v67) {
        goto LABEL_199;
      }
      BOOL v69 = (v53 & (v53 - 1)) != 0;
      if (v53 < 3) {
        BOOL v69 = 1;
      }
      unint64_t v70 = v69 | (2 * v53);
      unint64_t v71 = vcvtps_u32_f32(v67 / v68);
      if (v70 <= v71) {
        size_t v72 = v71;
      }
      else {
        size_t v72 = v70;
      }
      if (v72 == 1)
      {
        size_t v72 = 2;
      }
      else if ((v72 & (v72 - 1)) != 0)
      {
        size_t v72 = std::__next_prime(v72);
      }
      int8x8_t v73 = *(int8x8_t *)(a1 + 8);
      if (v72 > *(void *)&v73) {
        goto LABEL_183;
      }
      if (v72 < *(void *)&v73)
      {
        unint64_t v74 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
        if (*(void *)&v73 < 3uLL || (uint8x8_t v75 = (uint8x8_t)vcnt_s8(v73), v75.i16[0] = vaddlv_u8(v75), v75.u32[0] > 1uLL))
        {
          unint64_t v74 = std::__next_prime(v74);
        }
        else
        {
          uint64_t v76 = 1 << -(char)__clz(v74 - 1);
          if (v74 >= 2) {
            unint64_t v74 = v76;
          }
        }
        if (v72 <= v74) {
          size_t v72 = v74;
        }
        if (v72 < *(void *)&v73) {
LABEL_183:
        }
          sub_21573BDA8(a1, v72);
      }
      unint64_t v53 = *(void *)(a1 + 8);
      unint64_t v77 = v53 - 1;
      if ((v53 & (v53 - 1)) == 0)
      {
        unint64_t v3 = v77 & v52;
        int v78 = *(void **)(*(void *)a1 + 8 * (v77 & v52));
        uint64_t v79 = __p[0];
        if (!v78) {
          goto LABEL_202;
        }
        goto LABEL_200;
      }
      if (v52 < v53)
      {
        unint64_t v3 = v52;
LABEL_199:
        int v78 = *(void **)(*(void *)a1 + 8 * v3);
        uint64_t v79 = __p[0];
        if (!v78) {
          goto LABEL_202;
        }
        goto LABEL_200;
      }
      unint64_t v3 = v52 % v53;
      int v78 = *(void **)(*(void *)a1 + 8 * (v52 % v53));
      uint64_t v79 = __p[0];
      if (!v78)
      {
LABEL_202:
        void *v79 = *(void *)(a1 + 16);
        *(void **)(a1 + 16) = __p[0];
        *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
        if (*(void *)__p[0])
        {
          unint64_t v80 = *(void *)(*(void *)__p[0] + 8);
          if ((v53 & (v53 - 1)) != 0)
          {
            if (v80 >= v53) {
              v80 %= v53;
            }
          }
          else
          {
            v80 &= v53 - 1;
          }
          *(void **)(*(void *)a1 + 8 * v80) = __p[0];
        }
        goto LABEL_208;
      }
LABEL_200:
      void *v79 = *v78;
      *int v78 = __p[0];
LABEL_208:
      ++*(void *)(a1 + 24);
      v4 += 5;
      if (v4 == a3) {
        return;
      }
    }
    if (v54.u32[0] < 2uLL)
    {
      while (1)
      {
        uint64_t v60 = v56[1];
        if (v60 == v52)
        {
          int v61 = *((char *)v4 + 23);
          if (v61 >= 0) {
            v62.__data_ = (const std::string_view::value_type *)v4;
          }
          else {
            v62.__data_ = (const std::string_view::value_type *)*v4;
          }
          if (v61 >= 0) {
            v62.__size_ = *((unsigned __int8 *)v4 + 23);
          }
          else {
            v62.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)v4[1];
          }
          if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v56 + 2), v62)) {
            goto LABEL_164;
          }
        }
        else if ((v60 & (v53 - 1)) != v3)
        {
          goto LABEL_166;
        }
        char v56 = (uint64_t *)*v56;
        if (!v56) {
          goto LABEL_166;
        }
      }
    }
    while (1)
    {
      unint64_t v57 = v56[1];
      if (v57 == v52) {
        break;
      }
      if (v57 >= v53) {
        v57 %= v53;
      }
      if (v57 != v3) {
        goto LABEL_166;
      }
LABEL_142:
      char v56 = (uint64_t *)*v56;
      if (!v56) {
        goto LABEL_166;
      }
    }
    int v58 = *((char *)v4 + 23);
    if (v58 >= 0) {
      v59.__data_ = (const std::string_view::value_type *)v4;
    }
    else {
      v59.__data_ = (const std::string_view::value_type *)*v4;
    }
    if (v58 >= 0) {
      v59.__size_ = *((unsigned __int8 *)v4 + 23);
    }
    else {
      v59.__size_ = (std::basic_string_view<_CharT, _Traits>::size_type)v4[1];
    }
    if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v56 + 2), v59)) {
      goto LABEL_142;
    }
LABEL_164:
    v4 += 5;
  }
  while (v4 != a3);
}

void sub_215ACFDB8(void *a1)
{
  __cxa_begin_catch(a1);
  sub_215ACB968(v1);
  __cxa_rethrow();
}

void sub_215ACFDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215ACFE24((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215ACFE04(_Unwind_Exception *a1)
{
}

uint64_t *sub_215ACFE24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      unint64_t v3 = *(std::__shared_weak_count **)(v2 + 48);
      if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if ((*(char *)(v2 + 39) & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_6;
      }
      if (*(char *)(v2 + 39) < 0) {
LABEL_6:
      }
        operator delete(*(void **)(v2 + 16));
    }
LABEL_7:
    operator delete((void *)v2);
  }
  return a1;
}

void sub_215ACFED0(char *a1)
{
  if (a1)
  {
    sub_215ACFED0(*(void *)a1);
    sub_215ACFED0(*((void *)a1 + 1));
    sub_215ACFF54(*((void **)a1 + 8));
    if (a1[55] < 0)
    {
      operator delete(*((void **)a1 + 4));
      uint64_t v2 = a1;
    }
    else
    {
      uint64_t v2 = a1;
    }
    operator delete(v2);
  }
}

void sub_215ACFF54(void *a1)
{
  if (a1)
  {
    sub_215ACFF54(*a1);
    sub_215ACFF54(a1[1]);
    operator delete(a1);
  }
}

void *sub_215ACFFA0(void *a1)
{
  *a1 = &unk_26C685B80;
  a1[2] = &unk_26C685CC8;
  uint64_t v2 = a1[6];
  a1[6] = 0;
  if (v2)
  {
    sub_215E01798((void *)(v2 + 8));
    MEMORY[0x2166C4D20](v2, 0x10F2C40853B94B7);
  }
  a1[2] = &unk_26C685DE8;
  unint64_t v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_215AD0060()
{
  v0[6] = 0;
  sub_21583358C(v0, "Failed to parse ");
  sub_2158B2364();
}

void sub_215AD0268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

uint64_t sub_215AD02B8(uint64_t a1)
{
  *(void *)a1 = &unk_26C685060;
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    *(void *)(a1 + 72) = v2;
    operator delete(v2);
  }
  unint64_t v3 = *(void **)(a1 + 40);
  if (v3)
  {
    *(void *)(a1 + 48) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v4) {
    (*(void (**)(void))(a1 + 24))();
  }
  return a1;
}

void sub_215AD0330(void *a1)
{
  *a1 = &unk_26C685B80;
  a1[2] = &unk_26C685CC8;
  uint64_t v2 = a1[6];
  a1[6] = 0;
  if (v2)
  {
    sub_215E01798((void *)(v2 + 8));
    MEMORY[0x2166C4D20](v2, 0x10F2C40853B94B7);
  }
  a1[2] = &unk_26C685DE8;
  unint64_t v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AD0410(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 16) + 16))();
}

uint64_t sub_215AD0434(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 16) + 24))();
}

void sub_215AD0458(uint64_t a1, unsigned char *a2)
{
}

void sub_215AD0460(uint64_t a1, unsigned char *a2)
{
}

void sub_215AD0468(uint64_t a1, _WORD *a2)
{
}

void sub_215AD0470(uint64_t a1, _DWORD *a2)
{
}

void sub_215AD0478(uint64_t a1, void *a2)
{
}

void sub_215AD0480(uint64_t a1, void *a2)
{
}

void sub_215AD0488(uint64_t a1, unsigned char *a2)
{
}

void sub_215AD0490(uint64_t a1, unsigned char *a2)
{
}

void sub_215AD0498(uint64_t a1, _WORD *a2)
{
}

void sub_215AD04A0(uint64_t a1, _DWORD *a2)
{
}

void sub_215AD04A8(uint64_t a1, void *a2)
{
}

void sub_215AD04B0(uint64_t a1, void *a2)
{
}

void sub_215AD04B8(uint64_t a1, float *a2)
{
}

void sub_215AD04C0(uint64_t a1, double *a2)
{
}

void sub_215AD04C8(uint64_t a1, void **a2)
{
}

void sub_215AD04D0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = *(void *)(a1 + 48);
    do
    {
      sub_215DFFFB0(v5, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215AD0520(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = *(void *)(a1 + 48);
    do
    {
      sub_215DFF354(v5, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215AD0570(uint64_t a1, uint64_t a2, _WORD *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 2 * a2;
    do
    {
      sub_215DFF5BC(v4, a3++);
      v5 -= 2;
    }
    while (v5);
  }
}

void sub_215AD05C0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFF770(v4, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215AD0610(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFF924(v4, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215AD0660(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFFB20(v4, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215AD06B0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = *(void *)(a1 + 48);
    do
    {
      sub_215DFF4BC(v5, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215AD0700(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = *(void *)(a1 + 48);
    do
    {
      sub_215DFF408(v5, a3++);
      --v4;
    }
    while (v4);
  }
}

void sub_215AD0750(uint64_t a1, uint64_t a2, _WORD *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 2 * a2;
    do
    {
      sub_215DFF670(v4, a3++);
      v5 -= 2;
    }
    while (v5);
  }
}

void sub_215AD07A0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFF824(v4, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215AD07F0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFFA28(v4, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215AD0840(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFFC24(v4, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215AD0890(uint64_t a1, uint64_t a2, float *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 4 * a2;
    do
    {
      sub_215DFFD1C(v4, a3++);
      v5 -= 4;
    }
    while (v5);
  }
}

void sub_215AD08E0(uint64_t a1, uint64_t a2, double *a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 8 * a2;
    do
    {
      sub_215DFFE68(v4, a3++);
      v5 -= 8;
    }
    while (v5);
  }
}

void sub_215AD0930(uint64_t a1, uint64_t a2, void **a3)
{
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = 24 * a2;
    do
    {
      sub_215E000A8(v4, a3);
      a3 += 3;
      v5 -= 24;
    }
    while (v5);
  }
}

void sub_215AD0990(void *a1)
{
  *(a1 - 2) = &unk_26C685B80;
  *a1 = &unk_26C685CC8;
  uint64_t v2 = a1[4];
  a1[4] = 0;
  if (v2)
  {
    sub_215E01798((void *)(v2 + 8));
    MEMORY[0x2166C4D20](v2, 0x10F2C40853B94B7);
  }
  *a1 = &unk_26C685DE8;
  unint64_t v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
}

void sub_215AD0A44(void *a1)
{
  *(a1 - 2) = &unk_26C685B80;
  *a1 = &unk_26C685CC8;
  uint64_t v2 = a1[4];
  a1[4] = 0;
  if (v2)
  {
    sub_215E01798((void *)(v2 + 8));
    MEMORY[0x2166C4D20](v2, 0x10F2C40853B94B7);
  }
  *a1 = &unk_26C685DE8;
  unint64_t v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AD0B24(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t result = (*(uint64_t (**)(void *))(*a1 + 32))(a1);
  uint64_t v4 = *(void *)(v2 - 16) - result + *(void *)(v2 - 8);
  if (v4) {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*a1 + 40))(a1, v4);
  }
  a1[2] -= 16;
  return result;
}

uint64_t sub_215AD0BB4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 128) || *(unsigned char *)(a1 + 120) || !*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*(void **)(a1 + 80));
    }
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*(void **)(a1 + 48));
    }
  }
  if (!*(unsigned char *)(a1 + 40) || (*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_215AD0C40()
{
}

void sub_215AD0C54(uint64_t a1)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *(unsigned char *)(v3 + 128) = 1;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 104) = 0;
  *(_WORD *)(v3 + 130) = 0;
  *(unsigned char *)(v3 + 132) = 0;
  LODWORD(v47) = 3;
  sub_215DFABD4(v3, &v47);
  if (v47 >= 3) {
    int v5 = 3;
  }
  else {
    int v5 = v47;
  }
  if (v47 > 2)
  {
    ++*(void *)(v3 + 80);
    if (*(unsigned char *)(v3 + 128)) {
      BOOL v6 = *(unsigned char *)(v3 + 131) == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (v6)
    {
      sub_215DFD700(v3, (uint64_t)&v47);
      if (*(char *)(v4 + 23) < 0) {
        operator delete(*(void **)v4);
      }
      long long v7 = v47;
      *(void *)(v4 + 16) = *(void *)v48;
      *(_OWORD *)uint64_t v4 = v7;
      ++*(void *)(v3 + 104);
    }
    else
    {
      *(unsigned char *)(v3 + 132) = 1;
    }
    sub_215DFB854(v3, (void *)(v4 + 24));
    if (v5 == 1)
    {
      LODWORD(v47) = 2;
      sub_215DFABD4(v3, &v47);
      unsigned int v8 = v47;
      if (v47 >= 2) {
        unsigned int v9 = 2;
      }
      else {
        unsigned int v9 = v47;
      }
      if (v9 < 2)
      {
        *(void *)&long long v47 = 0;
        BYTE8(v47) = 0;
        sub_215DFB534(v3, &v47);
        LOBYTE(__p[0]) = 0;
        sub_215DFA01C(v3, __p);
        char v16 = (char)__p[0];
        *(void *)(v4 + 40) = v47;
        *(unsigned char *)(v4 + 48) = v16;
        if (v8 <= 1) {
          goto LABEL_67;
        }
      }
      else
      {
        sub_215DFB534(v3, (void *)(v4 + 40));
        LOBYTE(v47) = 0;
        sub_215DFA01C(v3, &v47);
        *(unsigned char *)(v4 + 48) = v47;
        if (v8 <= 1) {
          goto LABEL_67;
        }
      }
      goto LABEL_49;
    }
    LODWORD(v47) = 6;
    sub_215DFABD4(v3, &v47);
    unsigned int v12 = v47;
    if (v47 >= 6) {
      unsigned int v13 = 6;
    }
    else {
      unsigned int v13 = v47;
    }
    if (v13 < 3) {
      sub_2159B3640((uint64_t)&v47, v3, v4 + 32, v13);
    }
    else {
      sub_2159B3834(v3, v4 + 32, v13);
    }
    if (v12 >= 3)
    {
LABEL_49:
      if (*(unsigned char *)(v3 + 131)) {
        goto LABEL_67;
      }
      while (1)
      {
        if ((*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0) {
          goto LABEL_67;
        }
        sub_215DFD700(v3, (uint64_t)&v47);
        if ((v48[7] & 0x80000000) != 0)
        {
          if (*((void *)&v47 + 1) == 1 && *(unsigned __int8 *)(v3 + 72) == *(unsigned __int8 *)v47)
          {
LABEL_62:
            char v18 = 0;
            if ((v48[7] & 0x80000000) != 0) {
              goto LABEL_65;
            }
            goto LABEL_51;
          }
        }
        else if (v48[7] == 1 && *(unsigned __int8 *)(v3 + 72) == v47)
        {
          goto LABEL_62;
        }
        char v18 = 1;
        if ((v48[7] & 0x80000000) != 0) {
LABEL_65:
        }
          operator delete((void *)v47);
LABEL_51:
        if (*(unsigned char *)(v3 + 131)) {
          char v17 = 0;
        }
        else {
          char v17 = v18;
        }
        if ((v17 & 1) == 0) {
          goto LABEL_67;
        }
      }
    }
    while (1)
    {
LABEL_67:
      if (*(unsigned char *)(v3 + 131)
        || (*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0)
      {
        goto LABEL_142;
      }
      sub_215DFD700(v3, (uint64_t)&v47);
      if ((v48[7] & 0x80000000) != 0)
      {
        if (*((void *)&v47 + 1) == 1 && *(unsigned __int8 *)(v3 + 72) == *(unsigned __int8 *)v47)
        {
LABEL_75:
          char v19 = 0;
          if ((v48[7] & 0x80000000) != 0) {
            goto LABEL_78;
          }
          goto LABEL_66;
        }
      }
      else if (v48[7] == 1 && *(unsigned __int8 *)(v3 + 72) == v47)
      {
        goto LABEL_75;
      }
      char v19 = 1;
      if ((v48[7] & 0x80000000) != 0) {
LABEL_78:
      }
        operator delete((void *)v47);
LABEL_66:
      if ((v19 & 1) == 0) {
        goto LABEL_142;
      }
    }
  }
  LOBYTE(v47) = 0;
  long long v51 = 0u;
  long long v52 = 0u;
  memset(v53, 0, sizeof(v53));
  *(_OWORD *)&v48[7] = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  ++*(void *)(v3 + 80);
  if (*(unsigned char *)(v3 + 128) && *(unsigned char *)(v3 + 131))
  {
    *(unsigned char *)(v3 + 132) = 1;
  }
  else
  {
    sub_215DFD700(v3, (uint64_t)__p);
    if ((v48[7] & 0x80000000) != 0) {
      operator delete((void *)v47);
    }
    long long v47 = *(_OWORD *)__p;
    *(void *)uint64_t v48 = v32;
    ++*(void *)(v3 + 104);
  }
  sub_215DFB854(v3, &v48[8]);
  if (v5 == 1)
  {
    LODWORD(__p[0]) = 2;
    sub_215DFABD4(v3, __p);
    unsigned int v10 = __p[0];
    if (LODWORD(__p[0]) >= 2) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = __p[0];
    }
    if (v11 < 2)
    {
      __p[0] = 0;
      LOBYTE(__p[1]) = 0;
      sub_215DFB534(v3, __p);
      char v30 = 0;
      sub_215DFA01C(v3, &v30);
      *(void **)((char *)&v49 + 1) = __p[0];
      BYTE9(v49) = v30;
      if (v10 <= 1) {
        goto LABEL_82;
      }
    }
    else
    {
      sub_215DFB534(v3, (long long *)((char *)&v49 + 1));
      LOBYTE(__p[0]) = 0;
      sub_215DFA01C(v3, __p);
      BYTE9(v49) = __p[0];
      if (v10 <= 1) {
        goto LABEL_82;
      }
    }
  }
  else
  {
    LODWORD(__p[0]) = 6;
    sub_215DFABD4(v3, __p);
    unsigned int v14 = __p[0];
    if (LODWORD(__p[0]) >= 6) {
      unsigned int v15 = 6;
    }
    else {
      unsigned int v15 = __p[0];
    }
    if (v15 < 3) {
      sub_2159B3640((uint64_t)__p, v3, (uint64_t)&v48[16], v15);
    }
    else {
      sub_2159B3834(v3, (uint64_t)&v48[16], v15);
    }
    if (v14 < 3) {
      goto LABEL_82;
    }
  }
  if (!*(unsigned char *)(v3 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(v3, (uint64_t)__p);
      if (SHIBYTE(v32) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(v3 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_95:
          char v21 = 0;
          if (SHIBYTE(v32) < 0) {
            goto LABEL_98;
          }
          goto LABEL_84;
        }
      }
      else if (SHIBYTE(v32) == 1 && *(unsigned __int8 *)(v3 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_95;
      }
      char v21 = 1;
      if (SHIBYTE(v32) < 0) {
LABEL_98:
      }
        operator delete(__p[0]);
LABEL_84:
      if (*(unsigned char *)(v3 + 131)) {
        char v20 = 0;
      }
      else {
        char v20 = v21;
      }
    }
    while ((v20 & 1) != 0);
  }
LABEL_82:
  if ((v48[7] & 0x80000000) != 0)
  {
    sub_215738B0C(__p, (void *)v47, *((unint64_t *)&v47 + 1));
  }
  else
  {
    *(_OWORD *)std::string __p = v47;
    uint64_t v32 = *(void *)v48;
  }
  uint64_t v33 = *(void *)&v48[8];
  sub_2159A4AE8((uint64_t)v34, (uint64_t)&v48[16]);
  if (*(char *)(v4 + 23) < 0) {
    operator delete(*(void **)v4);
  }
  long long v22 = *(_OWORD *)__p;
  *(void *)(v4 + 16) = v32;
  *(_OWORD *)uint64_t v4 = v22;
  HIBYTE(v32) = 0;
  LOBYTE(__p[0]) = 0;
  *(void *)(v4 + 24) = v33;
  sub_2159ADAB8(v4 + 32, (uint64_t)v34);
  if (v46)
  {
    uint8x8_t v23 = v44;
    if (v44)
    {
      unsigned int v24 = v45;
      uint64_t v25 = v44;
      if (v45 != v44)
      {
        do
        {
          if (*((char *)v24 - 1) < 0) {
            operator delete(*(v24 - 3));
          }
          v24 -= 3;
        }
        while (v24 != v23);
        uint64_t v25 = v44;
      }
      uint64_t v45 = v23;
      operator delete(v25);
    }
  }
  if (v43 && v42 < 0) {
    operator delete(v41);
  }
  if (v40 && v39 < 0) {
    operator delete(v38);
  }
  if (v37 && v36 < 0) {
    operator delete(v35);
  }
  if (SHIBYTE(v32) < 0) {
    operator delete(__p[0]);
  }
  if (v53[97])
  {
    uint64_t v26 = *(void *)&v53[73];
    if (*(void *)&v53[73])
    {
      uint64_t v27 = *(void *)&v53[81];
      std::__fs::filesystem::path::__string_view v28 = *(void **)&v53[73];
      if (*(void *)&v53[81] != *(void *)&v53[73])
      {
        do
        {
          if (*(char *)(v27 - 1) < 0) {
            operator delete(*(void **)(v27 - 24));
          }
          v27 -= 24;
        }
        while (v27 != v26);
        std::__fs::filesystem::path::__string_view v28 = *(void **)&v53[73];
      }
      *(void *)&v53[81] = v26;
      operator delete(v28);
    }
  }
  if (v53[65] && (v53[64] & 0x80000000) != 0) {
    operator delete(*(void **)&v53[41]);
  }
  if (v53[33] && (v53[32] & 0x80000000) != 0) {
    operator delete(*(void **)&v53[9]);
  }
  if (BYTE9(v51) && SBYTE8(v51) < 0) {
    operator delete(*(void **)((char *)&v50 + 1));
  }
  if ((v48[7] & 0x80000000) != 0) {
    operator delete((void *)v47);
  }
LABEL_142:
  BOOL v29 = sub_215DFDAB8(v3);
  if (*(unsigned char *)(v2 + 128) && !*(unsigned char *)(v2 + 120) && *(unsigned char *)(v2 + 112))
  {
    if (*(unsigned char *)(v2 + 104))
    {
      if (*(char *)(v2 + 103) < 0) {
        operator delete(*(void **)(v2 + 80));
      }
      if (*(char *)(v2 + 71) < 0) {
        operator delete(*(void **)(v2 + 48));
      }
    }
    if (*(unsigned char *)(v2 + 40) && *(char *)(v2 + 39) < 0) {
      operator delete(*(void **)(v2 + 16));
    }
  }
  *(unsigned char *)uint64_t v2 = v29;
  *(unsigned char *)(v2 + 120) = 1;
  *(unsigned char *)(v2 + 128) = 1;
}

void sub_215AD146C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  if (a72)
  {
    uint64_t v74 = *(void *)(v72 + 176);
    if (v74)
    {
      uint64_t v75 = *(void *)(v72 + 184);
      uint64_t v76 = *(void **)(v72 + 176);
      if (v75 != v74)
      {
        do
        {
          if (*(char *)(v75 - 1) < 0) {
            operator delete(*(void **)(v75 - 24));
          }
          v75 -= 24;
        }
        while (v75 != v74);
        uint64_t v76 = *(void **)(v72 + 176);
      }
      *(void *)(v72 + 184) = v74;
      operator delete(v76);
    }
  }
  if (a70 && a69 < 0) {
    operator delete(*(void **)(v72 + 144));
  }
  if (a63 && a62 < 0) {
    operator delete(*(void **)(v72 + 112));
  }
  if (a53 && a52 < 0) {
    operator delete(*(void **)(v72 + 56));
  }
  if (a42 < 0)
  {
    operator delete(*(void **)v72);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AD154C(std::string *this, void *a2, void *a3)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  while (1)
  {
    if (!a2)
    {
      if (!a3) {
        return;
      }
      a2 = 0;
      if (a3[3] != a3[4]) {
        goto LABEL_20;
      }
      BOOL v6 = 1;
      goto LABEL_17;
    }
    if (a2[3] != a2[4])
    {
      if (!a3) {
        goto LABEL_20;
      }
      if (a3[3] != a3[4]) {
        return;
      }
      BOOL v6 = 0;
      goto LABEL_17;
    }
    int v7 = (*(uint64_t (**)(void *))(*a2 + 72))(a2);
    BOOL v6 = v7 == -1;
    if (v7 == -1) {
      a2 = 0;
    }
    if (a3) {
      break;
    }
    if (v7 == -1) {
      return;
    }
    a3 = 0;
    unsigned int v9 = (std::string::value_type *)a2[3];
    if (v9 == (std::string::value_type *)a2[4])
    {
LABEL_24:
      std::string::value_type v10 = (*(uint64_t (**)(void *))(*a2 + 72))(a2);
      goto LABEL_25;
    }
LABEL_21:
    std::string::value_type v10 = *v9;
LABEL_25:
    std::string::push_back(this, v10);
    uint64_t v11 = a2[3];
    if (v11 == a2[4]) {
      (*(void (**)(void *))(*a2 + 80))(a2);
    }
    else {
      a2[3] = v11 + 1;
    }
  }
  if (a3[3] != a3[4])
  {
    if (v7 != -1) {
      return;
    }
LABEL_20:
    unsigned int v9 = (std::string::value_type *)a2[3];
    if (v9 == (std::string::value_type *)a2[4]) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_17:
  int v8 = (*(uint64_t (**)(void *))(*a3 + 72))(a3);
  if (v8 == -1) {
    a3 = 0;
  }
  if (v6 != (v8 == -1)) {
    goto LABEL_20;
  }
}

void sub_215AD16F8(void *a1)
{
  __cxa_begin_catch(a1);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  __cxa_rethrow();
}

void sub_215AD1714(_Unwind_Exception *a1)
{
}

void sub_215AD1728(uint64_t a1)
{
  *(void *)a1 = &unk_26C685060;
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    *(void *)(a1 + 72) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 40);
  if (v3)
  {
    *(void *)(a1 + 48) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v4) {
    (*(void (**)(void))(a1 + 24))();
  }

  JUMPOUT(0x2166C4D20);
}

char *sub_215AD17C8(void *a1, unsigned char *a2)
{
  uint64_t v4 = (char *)sub_215DF0AA0(a1);
  ++a1[14];
  char v6 = 0;
  uint64_t result = sub_215D30AF8(v4, &v6);
  *a2 = v6;
  return result;
}

void sub_215AD1824(void *a1, void *a2)
{
  uint64_t v4 = (char *)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v5 = 0;
  sub_215D30830(v4, &v5);
  *a2 = v5;
}

void sub_215AD1874(void *a1, void *a2)
{
  uint64_t v4 = (char *)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v5 = 0;
  sub_215D30830(v4, &v5);
  *a2 = v5;
}

void sub_215AD18D4(void *a1, void *a2)
{
  uint64_t v4 = (char *)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v5 = 0;
  sub_215D306DC(v4, &v5);
  *a2 = v5;
}

void sub_215AD1924(void *a1, void *a2)
{
  uint64_t v4 = (char *)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v5 = 0;
  sub_215D306DC(v4, &v5);
  *a2 = v5;
}

void sub_215AD1974(void *a1, float *a2)
{
  uint64_t v4 = (uint64_t *)sub_215DF0AA0(a1);
  ++a1[14];
  *a2 = sub_215DF73DC(v4);
}

void sub_215AD19B0(void *a1, double *a2)
{
  uint64_t v4 = (uint64_t *)sub_215DF0AA0(a1);
  ++a1[14];
  *a2 = sub_215DF74C0(v4);
}

double sub_215AD19EC(void *a1, uint64_t a2)
{
  uint64_t v4 = (void **)sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v7 = 0;
  long long v6 = 0uLL;
  sub_215D30C0C(v4, (uint64_t)&v6);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  double result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(void *)(a2 + 16) = v7;
  return result;
}

void sub_215AD1A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD1A74(void *a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DF2864(a1, (uint64_t)v3);
}

void sub_215AD1A9C(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF1E60(v4, (uint64_t)v5);
}

void sub_215AD1AE0(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF2058(v4, (uint64_t)v5);
}

void sub_215AD1B24(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF2250(v4, (uint64_t)v5);
}

void sub_215AD1B68(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];
  char v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  sub_215DF45EC(v5, (uint64_t)&v18);
  long long v6 = v18;
  uint64_t v7 = v19;
  if (v18 != v19)
  {
    unint64_t v8 = (char *)v19 - (char *)v18 - 8;
    unsigned int v9 = (void *)a3;
    std::string::value_type v10 = v18;
    if (v8 < 0x18) {
      goto LABEL_11;
    }
    uint64_t v11 = (v8 >> 3) + 1;
    uint64_t v12 = v11 & 0x3FFFFFFFFFFFFFFCLL;
    unsigned int v9 = (void *)(a3 + v12 * 8);
    std::string::value_type v10 = &v18[v12];
    unsigned int v13 = (long long *)(v18 + 2);
    unsigned int v14 = (_OWORD *)(a3 + 16);
    uint64_t v15 = v11 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v16 = *v13;
      *(v14 - 1) = *(v13 - 1);
      *unsigned int v14 = v16;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v11 != (v11 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_11:
      do
      {
        uint64_t v17 = *v10++;
        *v9++ = v17;
      }
      while (v10 != v7);
    }
  }
  if (v6)
  {
    char v19 = v6;
    operator delete(v6);
  }
}

void sub_215AD1C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD1C54(void *a1, uint64_t a2, void *a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  sub_215DF45EC(v5, (uint64_t)&v7);
  long long v6 = v7;
  if (v8 != v7) {
    memmove(a3, v7, v8 - v7);
  }
  if (v6)
  {
    unint64_t v8 = v6;
    operator delete(v6);
  }
}

void sub_215AD1CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD1CE4(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF0BCC(v4, (uint64_t)v5);
}

void sub_215AD1D28(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF1F38(v4, (uint64_t)v5);
}

void sub_215AD1D6C(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF2178(v4, (uint64_t)v5);
}

void sub_215AD1DB0(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];
  sub_215DF2328(v4, (uint64_t)v5);
}

void sub_215AD1DF4(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];
  char v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  sub_215DF4844(v5, (uint64_t)&v18);
  long long v6 = v18;
  uint64_t v7 = v19;
  if (v18 != v19)
  {
    unint64_t v8 = (char *)v19 - (char *)v18 - 8;
    uint64_t v9 = (void *)a3;
    std::string::value_type v10 = v18;
    if (v8 < 0x18) {
      goto LABEL_11;
    }
    uint64_t v11 = (v8 >> 3) + 1;
    uint64_t v12 = v11 & 0x3FFFFFFFFFFFFFFCLL;
    uint64_t v9 = (void *)(a3 + v12 * 8);
    std::string::value_type v10 = &v18[v12];
    unsigned int v13 = (long long *)(v18 + 2);
    unsigned int v14 = (_OWORD *)(a3 + 16);
    uint64_t v15 = v11 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v16 = *v13;
      *(v14 - 1) = *(v13 - 1);
      *unsigned int v14 = v16;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v11 != (v11 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_11:
      do
      {
        uint64_t v17 = *v10++;
        *v9++ = v17;
      }
      while (v10 != v7);
    }
  }
  if (v6)
  {
    char v19 = v6;
    operator delete(v6);
  }
}

void sub_215AD1EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD1EE0(void *a1, uint64_t a2, void *a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  sub_215DF4844(v5, (uint64_t)&v7);
  long long v6 = v7;
  if (v8 != v7) {
    memmove(a3, v7, v8 - v7);
  }
  if (v6)
  {
    unint64_t v8 = v6;
    operator delete(v6);
  }
}

void sub_215AD1F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD1F70(void *a1, uint64_t a2, float *a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];

  sub_215DF262C(v5, a3);
}

void sub_215AD1FB8(void *a1, uint64_t a2, double *a3)
{
  unint64_t v5 = sub_215DF0AA0(a1);
  ++a1[14];

  sub_215DF2748(v5, a3);
}

void sub_215AD2000(void *a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DF2930(a1, (uint64_t)v3);
}

void sub_215AD2028(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_215DF0AA0(a1);
  ++a1[14];

  sub_215DF0BCC(v4, a2);
}

void sub_215AD2078(uint64_t a1, uint64_t a2)
{
  sub_215AD21F0((uint64_t)v2, a2);
  sub_215958844();
}

void sub_215AD2170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  uint64_t v5 = *(void *)(v3 - 40);
  *(void *)(v3 - 40) = 0;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    sub_215956690((uint64_t *)va);
    _Unwind_Resume(a1);
  }
  sub_215956690((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AD21F0(uint64_t result, uint64_t a2)
{
  *(void *)double result = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = *(void *)(a2 + 24);
  *(_OWORD *)double result = *(_OWORD *)a2;
  *(void *)(result + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(result + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 32) = 0;
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(result + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(result + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 72) = 0;
  *(_DWORD *)(result + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(result + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(result + 128) = *(void *)(a2 + 128);
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(void *)(result + 144) = 0;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(result + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(result + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = 0;
  *(void *)(result + 176) = 0;
  *(void *)(result + 184) = 0;
  *(void *)(result + 192) = 0;
  *(void *)(result + 200) = *(void *)(a2 + 200);
  *(_OWORD *)(result + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(result + 192) = *(void *)(a2 + 192);
  *(void *)(a2 + 176) = 0;
  *(void *)(a2 + 184) = 0;
  *(void *)(a2 + 192) = 0;
  *(void *)(result + 208) = 0;
  *(void *)(result + 216) = 0;
  *(void *)(result + 224) = 0;
  *(void *)(result + 232) = *(void *)(a2 + 232);
  *(_OWORD *)(result + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(result + 224) = *(void *)(a2 + 224);
  *(void *)(a2 + 208) = 0;
  *(void *)(a2 + 216) = 0;
  *(void *)(a2 + 224) = 0;
  *(void *)(result + 240) = 0;
  *(void *)(result + 248) = 0;
  *(void *)(result + 256) = 0;
  *(void *)(result + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(result + 240) = *(_OWORD *)(a2 + 240);
  *(void *)(result + 256) = *(void *)(a2 + 256);
  *(void *)(a2 + 248) = 0;
  *(void *)(a2 + 256) = 0;
  *(void *)(a2 + 240) = 0;
  *(_DWORD *)(result + 272) = *(_DWORD *)(a2 + 272);
  *(void *)(result + 288) = 0;
  *(void *)(result + 296) = 0;
  *(void *)(result + 280) = 0;
  *(void *)(result + 304) = *(void *)(a2 + 304);
  uint64_t v2 = *(void *)(a2 + 288);
  *(void *)(result + 280) = *(void *)(a2 + 280);
  *(void *)(result + 288) = v2;
  *(void *)(result + 296) = *(void *)(a2 + 296);
  *(void *)(a2 + 288) = 0;
  *(void *)(a2 + 296) = 0;
  *(void *)(a2 + 280) = 0;
  *(_DWORD *)(result + 312) = *(_DWORD *)(a2 + 312);
  *(void *)(result + 328) = 0;
  *(void *)(result + 336) = 0;
  *(void *)(result + 320) = 0;
  *(void *)(result + 344) = *(void *)(a2 + 344);
  *(_OWORD *)(result + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(result + 336) = *(void *)(a2 + 336);
  *(void *)(a2 + 328) = 0;
  *(void *)(a2 + 336) = 0;
  *(void *)(a2 + 320) = 0;
  *(_DWORD *)(result + 352) = *(_DWORD *)(a2 + 352);
  *(unsigned char *)(result + 356) = 0;
  *(unsigned char *)(result + 380) = 0;
  if (*(unsigned char *)(a2 + 380))
  {
    uint64_t v3 = *(void *)(a2 + 356);
    *(_DWORD *)(result + 364) = *(_DWORD *)(a2 + 364);
    *(void *)(result + 356) = v3;
    uint64_t v4 = *(void *)(a2 + 368);
    *(_DWORD *)(result + 376) = *(_DWORD *)(a2 + 376);
    *(void *)(result + 368) = v4;
    *(unsigned char *)(result + 380) = 1;
  }
  return result;
}

void sub_215AD23EC(void *a1, uint64_t a2)
{
  LODWORD(__p[0]) = 2;
  sub_215DFF824(a1[6], __p);
  if (LODWORD(__p[0]) < 2)
  {
    HIBYTE(v11) = 0;
    LOBYTE(__p[0]) = 0;
    int v12 = 0;
    sub_215E000A8(a1[6], __p);
    sub_215DFF824(a1[6], &v12);
    if (SHIBYTE(v11) < 0)
    {
      sub_215738B0C(&v7, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)__p;
      uint64_t v8 = v11;
    }
    int v6 = v12;
    int v9 = v12;
    if (*(char *)(a2 + 23) < 0)
    {
      operator delete(*(void **)a2);
      int v6 = v9;
    }
    *(_OWORD *)a2 = v7;
    *(void *)(a2 + 16) = v8;
    *(_DWORD *)(a2 + 24) = v6;
    if (SHIBYTE(v11) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    sub_2159B0060(a1 + 2);
    sub_215E000A8(a1[6], (void **)a2);
    sub_215DFF824(a1[6], (_DWORD *)(a2 + 24));
    uint64_t v4 = a1[4];
    uint64_t v5 = *(void *)(v4 - 16) - (*(uint64_t (**)(void *))(a1[2] + 32))(a1 + 2) + *(void *)(v4 - 8);
    if (v5) {
      (*(void (**)(void *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    }
    a1[4] -= 16;
  }
}

void sub_215AD2578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD259C()
{
}

void sub_215AD25B0(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *(unsigned char *)(v3 + 128) = 1;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 104) = 0;
  *(_WORD *)(v3 + 130) = 0;
  *(unsigned char *)(v3 + 132) = 0;
  *(_DWORD *)std::string __p = 2;
  sub_215DFABD4(v3, __p);
  unsigned int v5 = *(_DWORD *)__p;
  if (*(_DWORD *)__p >= 2u) {
    unsigned int v6 = 2;
  }
  else {
    unsigned int v6 = *(_DWORD *)__p;
  }
  if (v6 >= 2)
  {
    *(_DWORD *)std::string __p = 2;
    sub_215DFABD4(v3, __p);
    long long v7 = (void **)(v4 + 8);
    unsigned int v8 = *(_DWORD *)__p;
    if (*(_DWORD *)__p >= 2u) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = *(_DWORD *)__p;
    }
    if (v9 < 2)
    {
      sub_215AD2EFC(v3, v4 + 8);
    }
    else
    {
      ++*(void *)(v3 + 80);
      if (*(unsigned char *)(v3 + 128)) {
        BOOL v10 = *(unsigned char *)(v3 + 131) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        sub_215DFD700(v3, (uint64_t)__p);
        if (*(char *)(v4 + 31) < 0) {
          operator delete(*v7);
        }
        long long v11 = *(_OWORD *)__p;
        *(void *)(v4 + 24) = *(void *)&__p[16];
        *(_OWORD *)long long v7 = v11;
        ++*(void *)(v3 + 104);
      }
      else
      {
        *(unsigned char *)(v3 + 132) = 1;
      }
      sub_215DFABD4(v3, (_DWORD *)(v4 + 32));
    }
    if (v8 < 2 || *(unsigned char *)(v3 + 131))
    {
LABEL_34:
      sub_2159905B0(v4);
      if (*(_DWORD *)(v4 + 56)) {
        sub_215742D4C();
      }
      uint64_t v15 = *(void **)(v4 + 40);
      v33[0] = &unk_26C6746A0;
      v33[1] = v15;
      *(_DWORD *)std::string __p = 2;
      sub_215DFABD4(v3, __p);
      (*(void (**)(void *, uint64_t, void))(*(void *)v33[1] + 40))(v33[1], v3, *(unsigned int *)__p);
      if (!*(unsigned char *)(v3 + 131))
      {
        do
        {
          if ((*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0) {
            break;
          }
          sub_215DFD700(v3, (uint64_t)__p);
          if ((__p[23] & 0x80000000) != 0)
          {
            if (*(void *)&__p[8] == 1 && *(unsigned __int8 *)(v3 + 72) == **(unsigned char **)__p)
            {
LABEL_48:
              char v17 = 0;
              if ((__p[23] & 0x80000000) != 0) {
                goto LABEL_51;
              }
              goto LABEL_37;
            }
          }
          else if (__p[23] == 1 && *(unsigned __int8 *)(v3 + 72) == __p[0])
          {
            goto LABEL_48;
          }
          char v17 = 1;
          if ((__p[23] & 0x80000000) != 0) {
LABEL_51:
          }
            operator delete(*(void **)__p);
LABEL_37:
          if (*(unsigned char *)(v3 + 131)) {
            char v16 = 0;
          }
          else {
            char v16 = v17;
          }
        }
        while ((v16 & 1) != 0);
      }
LABEL_111:
      if (v5 < 2) {
        goto LABEL_112;
      }
      while (1)
      {
LABEL_127:
        if (*(unsigned char *)(v3 + 131)
          || (*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0)
        {
          goto LABEL_112;
        }
        sub_215DFD700(v3, (uint64_t)__p);
        if ((__p[23] & 0x80000000) != 0)
        {
          if (*(void *)&__p[8] == 1 && *(unsigned __int8 *)(v3 + 72) == **(unsigned char **)__p)
          {
LABEL_135:
            char v31 = 0;
            if ((__p[23] & 0x80000000) != 0) {
              goto LABEL_138;
            }
            goto LABEL_126;
          }
        }
        else if (__p[23] == 1 && *(unsigned __int8 *)(v3 + 72) == __p[0])
        {
          goto LABEL_135;
        }
        char v31 = 1;
        if ((__p[23] & 0x80000000) != 0) {
LABEL_138:
        }
          operator delete(*(void **)__p);
LABEL_126:
        if ((v31 & 1) == 0) {
          goto LABEL_112;
        }
      }
    }
    while (1)
    {
      if ((*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0) {
        goto LABEL_34;
      }
      sub_215DFD700(v3, (uint64_t)__p);
      if ((__p[23] & 0x80000000) != 0)
      {
        if (*(void *)&__p[8] == 1 && *(unsigned __int8 *)(v3 + 72) == **(unsigned char **)__p)
        {
LABEL_63:
          char v19 = 0;
          if ((__p[23] & 0x80000000) != 0) {
            goto LABEL_66;
          }
          goto LABEL_52;
        }
      }
      else if (__p[23] == 1 && *(unsigned __int8 *)(v3 + 72) == __p[0])
      {
        goto LABEL_63;
      }
      char v19 = 1;
      if ((__p[23] & 0x80000000) != 0) {
LABEL_66:
      }
        operator delete(*(void **)__p);
LABEL_52:
      if (*(unsigned char *)(v3 + 131)) {
        char v18 = 0;
      }
      else {
        char v18 = v19;
      }
      if ((v18 & 1) == 0) {
        goto LABEL_34;
      }
    }
  }
  int v43 = 0;
  long long v42 = 0u;
  long long v41 = 0u;
  *(_OWORD *)&__p[8] = 0u;
  sub_2157BB1A4(&v44, (uint64_t *)(v4 + 64));
  LODWORD(v33[0]) = 2;
  sub_215DFABD4(v3, v33);
  unsigned int v12 = v33[0];
  if (LODWORD(v33[0]) >= 2) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = v33[0];
  }
  if (v13 < 2)
  {
    sub_215AD2EFC(v3, (uint64_t)&__p[8]);
  }
  else
  {
    ++*(void *)(v3 + 80);
    if (*(unsigned char *)(v3 + 128)) {
      BOOL v14 = *(unsigned char *)(v3 + 131) == 0;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14)
    {
      sub_215DFD700(v3, (uint64_t)v33);
      if (SBYTE7(v41) < 0) {
        operator delete(*(void **)&__p[8]);
      }
      *(_OWORD *)&__p[8] = *(_OWORD *)v33;
      *(void *)&long long v41 = v34;
      ++*(void *)(v3 + 104);
    }
    else
    {
      *(unsigned char *)(v3 + 132) = 1;
    }
    sub_215DFABD4(v3, (_DWORD *)&v41 + 2);
  }
  if (v12 >= 2 && !*(unsigned char *)(v3 + 131))
  {
    do
    {
      if ((*(unsigned char *)(*(void *)(v3 + 16) + *(void *)(**(void **)(v3 + 16) - 24) + 32) & 2) != 0) {
        break;
      }
      sub_215DFD700(v3, (uint64_t)v33);
      if (SHIBYTE(v34) < 0)
      {
        if (v33[1] == (void *)1 && *(unsigned __int8 *)(v3 + 72) == *(unsigned __int8 *)v33[0])
        {
LABEL_89:
          char v25 = 0;
          if (SHIBYTE(v34) < 0) {
            goto LABEL_92;
          }
          goto LABEL_78;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(v3 + 72) == LOBYTE(v33[0]))
      {
        goto LABEL_89;
      }
      char v25 = 1;
      if (SHIBYTE(v34) < 0) {
LABEL_92:
      }
        operator delete(v33[0]);
LABEL_78:
      if (*(unsigned char *)(v3 + 131)) {
        char v24 = 0;
      }
      else {
        char v24 = v25;
      }
    }
    while ((v24 & 1) != 0);
  }
  sub_21598FEFC((uint64_t)__p);
  if (v43) {
    sub_215742D4C();
  }
  v33[0] = &unk_26C674658;
  v33[1] = (void *)v42;
  unsigned int v32 = 1;
  sub_215DFABD4(v3, &v32);
  (*(void (**)(void *, uint64_t, void))(*(void *)v33[1] + 40))(v33[1], v3, v32);
  sub_215994890((uint64_t)v33, (uint64_t)__p);
  sub_2159949FC(v4, (uint64_t)v33);
  uint64_t v20 = (char *)v38;
  if (v38)
  {
    char v21 = v39;
    long long v22 = v38;
    if (v39 != v38)
    {
      do
      {
        uint8x8_t v23 = (std::__shared_weak_count *)*((void *)v21 - 1);
        if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
        v21 -= 16;
      }
      while (v21 != v20);
      long long v22 = v38;
    }
    char v39 = v20;
    operator delete(v22);
  }
  if (v37 != -1) {
    ((void (*)(unsigned int *, uint64_t *))off_26C677FB8[v37])(&v32, &v36);
  }
  int v37 = -1;
  if (v35 < 0) {
    operator delete(v33[1]);
  }
  uint64_t v26 = (char *)v44;
  if (v44)
  {
    uint64_t v27 = v45;
    std::__fs::filesystem::path::__string_view v28 = v44;
    if (v45 != v44)
    {
      do
      {
        BOOL v29 = (std::__shared_weak_count *)*((void *)v27 - 1);
        if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
        v27 -= 16;
      }
      while (v27 != v26);
      std::__fs::filesystem::path::__string_view v28 = v44;
    }
    uint64_t v45 = v26;
    operator delete(v28);
  }
  if (v43 != -1) {
    ((void (*)(void **, long long *))off_26C677FB8[v43])(v33, &v42);
  }
  int v43 = -1;
  if ((SBYTE7(v41) & 0x80000000) == 0) {
    goto LABEL_111;
  }
  operator delete(*(void **)&__p[8]);
  if (v5 >= 2) {
    goto LABEL_127;
  }
LABEL_112:
  BOOL v30 = sub_215DFDAB8(v3);
  if (*(unsigned char *)(v2 + 128) && !*(unsigned char *)(v2 + 120) && *(unsigned char *)(v2 + 112))
  {
    if (*(unsigned char *)(v2 + 104))
    {
      if (*(char *)(v2 + 103) < 0) {
        operator delete(*(void **)(v2 + 80));
      }
      if (*(char *)(v2 + 71) < 0) {
        operator delete(*(void **)(v2 + 48));
      }
    }
    if (*(unsigned char *)(v2 + 40) && *(char *)(v2 + 39) < 0) {
      operator delete(*(void **)(v2 + 16));
    }
  }
  *(unsigned char *)uint64_t v2 = v30;
  *(unsigned char *)(v2 + 120) = 1;
  *(unsigned char *)(v2 + 128) = 1;
}

void sub_215AD2DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int16 a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,void *__p,uint64_t a36)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD2EFC(uint64_t a1, uint64_t a2)
{
  HIBYTE(v11) = 0;
  LOBYTE(__p[0]) = 0;
  int v12 = 0;
  ++*(void *)(a1 + 80);
  if (*(unsigned char *)(a1 + 128)) {
    BOOL v4 = *(unsigned char *)(a1 + 131) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    sub_215DFD700(a1, (uint64_t)&v7);
    uint64_t v5 = *(void *)(a1 + 104);
    *(_OWORD *)std::string __p = v7;
    uint64_t v11 = v8;
    *(void *)(a1 + 104) = v5 + 1;
  }
  else
  {
    *(unsigned char *)(a1 + 132) = 1;
  }
  sub_215DFABD4(a1, &v12);
  if (SHIBYTE(v11) < 0)
  {
    sub_215738B0C(&v7, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)__p;
    uint64_t v8 = v11;
  }
  int v6 = v12;
  int v9 = v12;
  if (*(char *)(a2 + 23) < 0)
  {
    operator delete(*(void **)a2);
    int v6 = v9;
  }
  *(_OWORD *)a2 = v7;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v6;
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
}

void sub_215AD3010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD3030(uint64_t a1, uint64_t a2)
{
  sub_215DF07E4(a1);
  __p[0] = "version";
  __p[1] = (void *)7;
  LODWORD(v19) = 2;
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "version";
  *(void *)(a1 + 96) = 7;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF1DC8((void *)a1, &v19);
  unsigned int v5 = v19;
  if (v19 >= 2) {
    unsigned int v5 = 2;
  }
  if (v5 < 2)
  {
    HIBYTE(v19) = 0;
    LOBYTE(__p[0]) = 0;
    int v20 = 0;
    int v9 = *(unsigned __int8 *)(a1 + 104);
    *(void *)(a1 + 88) = "package_id";
    *(void *)(a1 + 96) = 10;
    if (!v9) {
      *(unsigned char *)(a1 + 104) = 1;
    }
    BOOL v10 = (void **)sub_215DF0AA0((void *)a1);
    ++*(void *)(a1 + 112);
    uint64_t v16 = 0;
    long long v15 = 0uLL;
    sub_215D30C0C(v10, (uint64_t)&v15);
    int v11 = *(unsigned __int8 *)(a1 + 104);
    *(_OWORD *)std::string __p = v15;
    uint64_t v19 = v16;
    *(void *)(a1 + 88) = "type_id";
    *(void *)(a1 + 96) = 7;
    if (!v11) {
      *(unsigned char *)(a1 + 104) = 1;
    }
    sub_215DF1DC8((void *)a1, &v20);
    if (SHIBYTE(v19) < 0)
    {
      sub_215738B0C(&v15, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      long long v15 = *(_OWORD *)__p;
      uint64_t v16 = v19;
    }
    int v12 = v20;
    int v17 = v20;
    if (*(char *)(a2 + 23) < 0)
    {
      operator delete(*(void **)a2);
      int v12 = v17;
    }
    *(_OWORD *)a2 = v15;
    *(void *)(a2 + 16) = v16;
    *(_DWORD *)(a2 + 24) = v12;
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    int v6 = *(unsigned __int8 *)(a1 + 104);
    *(void *)(a1 + 88) = "package_id";
    *(void *)(a1 + 96) = 10;
    if (!v6) {
      *(unsigned char *)(a1 + 104) = 1;
    }
    long long v7 = (void **)sub_215DF0AA0((void *)a1);
    ++*(void *)(a1 + 112);
    __p[1] = 0;
    uint64_t v19 = 0;
    __p[0] = 0;
    sub_215D30C0C(v7, (uint64_t)__p);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = *(_OWORD *)__p;
    *(void *)(a2 + 16) = v19;
    int v8 = *(unsigned __int8 *)(a1 + 104);
    *(void *)(a1 + 88) = "type_id";
    *(void *)(a1 + 96) = 7;
    if (!v8) {
      *(unsigned char *)(a1 + 104) = 1;
    }
    sub_215DF1DC8((void *)a1, (_DWORD *)(a2 + 24));
  }
  uint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(a1 + 72);
  *(void *)(a1 + 112) = *(void *)(v14 - 8);
  *(void *)(a1 + 48) = v13 - 8;
  *(void *)(a1 + 72) = v14 - 8;
}

void sub_215AD3264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD32A0()
{
}

void sub_215AD3AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  uint64_t v47 = a10;
  a10 = 0;
  if (!v47) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464((uint64_t)&a10, v47);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AD3BF4(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_7:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void *sub_215AD3C68(void *a1)
{
  *a1 = &unk_26C685A00;
  uint64_t v2 = a1[3];
  a1[2] = &unk_26C685B50;
  a1[3] = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 80);
    if (v3)
    {
      *(void *)(v2 + 88) = v3;
      operator delete(v3);
    }
    if (*(unsigned char *)(v2 + 72)) {
      free(*(void **)(v2 + 56));
    }
    if (*(unsigned char *)(v2 + 40)) {
      free(*(void **)(v2 + 24));
    }
    MEMORY[0x2166C4D20](v2, 0x1030C408C1A3048);
  }
  return a1;
}

void sub_215AD3D18(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  int v4 = *(_DWORD *)(a1 + 144);
  if ((v4 & 0x10) != 0)
  {
    unint64_t v7 = *(void *)(a1 + 136);
    unint64_t v8 = *(void *)(a1 + 96);
    if (v7 < v8)
    {
      *(void *)(a1 + 136) = v8;
      unint64_t v7 = v8;
    }
    int v9 = *(const void **)(a1 + 88);
    size_t v5 = v7 - (void)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      size_t v5 = 0;
      HIBYTE(v24) = 0;
      p_dst = (void **)&__dst;
      goto LABEL_14;
    }
    int v9 = *(const void **)(a1 + 64);
    size_t v5 = *(void *)(a1 + 80) - (void)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8) {
LABEL_29:
    }
      sub_215731CD8();
  }
  if (v5 >= 0x17)
  {
    uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v10 = v5 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = (void **)operator new(v10 + 1);
    size_t v23 = v5;
    int64_t v24 = v11 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v24) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_13:
  }
    memmove(p_dst, v9, v5);
LABEL_14:
  *((unsigned char *)p_dst + v5) = 0;
  if (*(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 135) = 0;
  sub_21573B8E0(a1 + 48);
  std::ios_base::clear((std::ios_base *)(a1 + 24 + *(void *)(*(void *)(a1 + 24) - 24)), 0);
  *(void *)(a1 + 312) = 0;
  size_t v12 = HIBYTE(v24);
  if (v24 >= 0) {
    size_t v13 = HIBYTE(v24);
  }
  else {
    size_t v13 = v23;
  }
  if (!v13 && *(unsigned char *)(a1 + 328))
  {
    if ((v24 & 0x8000000000000000) == 0) {
      return;
    }
LABEL_47:
    operator delete(__dst);
    return;
  }
  if (*(unsigned char *)(a2 + 24))
  {
    if (v24 < 0) {
      size_t v12 = v23;
    }
    if (!v12) {
      goto LABEL_43;
    }
LABEL_42:
    (*(void (**)(void))(**(void **)(a2 + 8) + 16))(*(void *)(a2 + 8));
    std::ostream::write();
    goto LABEL_43;
  }
  sub_215CF5C8C((const std::__fs::filesystem::path *)a1, 0x11u, *(void *)(a1 + 304), &v25);
  if (*(unsigned char *)(a2 + 24))
  {
    long long v14 = *(_OWORD *)&v25.__r_.__value_.__r.__words[1];
    *(_OWORD *)&v25.__r_.__value_.__r.__words[1] = 0uLL;
    long long v15 = *(std::__shared_weak_count **)(a2 + 16);
    *(_OWORD *)(a2 + 8) = v14;
    if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  else
  {
    *(void *)a2 = &unk_26C6824A8;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v25.__r_.__value_.__r.__words[1];
    *(_OWORD *)&v25.__r_.__value_.__r.__words[1] = 0uLL;
    *(unsigned char *)(a2 + 24) = 1;
  }
  uint64_t v16 = (std::__shared_weak_count *)v25.__r_.__value_.__r.__words[2];
  if (v25.__r_.__value_.__r.__words[2]
    && !atomic_fetch_add((atomic_ullong *volatile)(v25.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  if (!*(void *)(a2 + 8))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0) {
      sub_215738B0C(&v21, *(void **)a1, *(void *)(a1 + 8));
    }
    else {
      v21.__pn_ = *(std::__fs::filesystem::path::string_type *)a1;
    }
    sub_215AC8CC8("Failed to write to file: ", &v21.__pn_, &v25);
    std::runtime_error::runtime_error(exception, &v25);
    __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  size_t v17 = HIBYTE(v24);
  if (v24 < 0) {
    size_t v17 = v23;
  }
  if (v17) {
    goto LABEL_42;
  }
LABEL_43:
  char v18 = (void *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 16))(*(void *)(a2 + 8));
  uint64_t v19 = (char *)v18 + *(void *)(*v18 - 24);
  if ((v19[32] & 5) != 0)
  {
    *(void *)(a1 + 320) = 0;
    *(unsigned char *)(a1 + 328) = 1;
    if (v24 < 0) {
      goto LABEL_47;
    }
  }
  else
  {
    (*(void (**)(std::string *__return_ptr))(**((void **)v19 + 5) + 32))(&v25);
    *(void *)(a1 + 320) = v26 & ~(v26 >> 63);
    *(unsigned char *)(a1 + 328) = 1;
    if (v24 < 0) {
      goto LABEL_47;
    }
  }
}

void sub_215AD419C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  __cxa_free_exception(v26);
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215AD4224(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 40);
      *(void *)(v5 + 16) = *(void *)(a2 + 56);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_215738B0C((unsigned char *)v5, *(void **)(a2 + 40), *(void *)(a2 + 48));
LABEL_6:
  unint64_t v7 = (unsigned char *)(a1 + 64);
  if (*(char *)(a2 + 119) < 0)
  {
    sub_215738B0C(v7, *(void **)(a2 + 96), *(void *)(a2 + 104));
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 80) = *(void *)(a2 + 112);
    *(_OWORD *)unint64_t v7 = v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 120);
  return a1;
}

void sub_215AD4308(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AD4354(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 40);
      *(void *)(v5 + 16) = *(void *)(a2 + 56);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_215738B0C((unsigned char *)v5, *(void **)(a2 + 40), *(void *)(a2 + 48));
LABEL_6:
  if (*(char *)(a2 + 119) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 64), *(void **)(a2 + 96), *(void *)(a2 + 104));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 80) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 64) = v7;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 120);
  if (*(unsigned char *)(a2 + 88))
  {
    if (*(char *)(a2 + 87) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 96), *(void **)(a2 + 64), *(void *)(a2 + 72));
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 112) = *(void *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v8;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 119) = 0;
    *(unsigned char *)(a1 + 96) = 0;
  }
  int v12 = -1;
  if (*(char *)(a2 + 151) < 0)
  {
    sub_215738B0C(&v10, *(void **)(a2 + 128), *(void *)(a2 + 136));
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 128);
    uint64_t v11 = *(void *)(a2 + 144);
  }
  *(_OWORD *)(a1 + 120) = v10;
  *(void *)(a1 + 136) = v11;
  return a1;
}

void sub_215AD44D4(_Unwind_Exception *exception_object)
{
  if (v1[87] < 0)
  {
    operator delete(*v4);
    if ((v1[63] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[31] & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((v1[63] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v3);
  if ((v1[31] & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AD4578(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v5 = a1 + 40;
    if ((*(char *)(a2 + 63) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 40);
      *(void *)(v5 + 16) = *(void *)(a2 + 56);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_215738B0C((unsigned char *)v5, *(void **)(a2 + 40), *(void *)(a2 + 48));
LABEL_6:
  long long v7 = (unsigned char *)(a1 + 64);
  if (*(char *)(a2 + 87) < 0)
  {
    sub_215738B0C(v7, *(void **)(a2 + 64), *(void *)(a2 + 72));
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)long long v7 = v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 119) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 143) = 0;
  return a1;
}

void sub_215AD4668(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_215AD46B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)a1;
  long long v4 = (unsigned char *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_215738B0C(v4, *(void **)(a1 + 8), *(void *)(a1 + 16));
    *(_DWORD *)(a2 + 32) = *(_DWORD *)(a1 + 32);
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    sub_215738B0C(__dst, *(void **)(a1 + 40), *(void *)(a1 + 48));
    goto LABEL_6;
  }
  *(_OWORD *)long long v4 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(a1 + 32);
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_5;
  }
LABEL_3:
  *(_OWORD *)long long __dst = *(_OWORD *)(a1 + 40);
  uint64_t v24 = *(void *)(a1 + 56);
LABEL_6:
  uint64_t v5 = (_OWORD *)(a2 + 40);
  int v6 = *(char *)(a1 + 119);
  if (v6 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(a1 + 119);
  }
  else {
    uint64_t v7 = *(void *)(a1 + 104);
  }
  if (v7)
  {
    long long v8 = (void **)(a1 + 96);
    if (v6 < 0)
    {
      sub_215738B0C(__p, *v8, *(void *)(a1 + 104));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)v8;
      uint64_t v21 = *(void *)(a1 + 112);
    }
    char v22 = 1;
    _OWORD *v5 = *(_OWORD *)__dst;
    *(void *)(a2 + 56) = v24;
    __dst[0] = 0;
    __dst[1] = 0;
    uint64_t v24 = 0;
    *(_OWORD *)(a2 + 64) = *(_OWORD *)__p;
    *(void *)(a2 + 80) = v21;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v21 = 0;
    *(unsigned char *)(a2 + 88) = 1;
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    char v22 = 0;
    _OWORD *v5 = *(_OWORD *)__dst;
    *(void *)(a2 + 56) = v24;
    __dst[0] = 0;
    __dst[1] = 0;
    uint64_t v24 = 0;
    *(unsigned char *)(a2 + 64) = 0;
    *(unsigned char *)(a2 + 88) = 0;
  }
  int v9 = *(unsigned char **)(a2 + 40);
  unint64_t v10 = *(void *)(a2 + 48);
  if (*(char *)(a2 + 63) >= 0)
  {
    int v9 = (unsigned char *)(a2 + 40);
    unint64_t v10 = *(unsigned __int8 *)(a2 + 63);
  }
  if (!v10) {
    goto LABEL_39;
  }
  uint64_t v11 = v9;
  if (v10 < 8) {
    goto LABEL_46;
  }
  uint64_t v11 = &v9[v10 & 0xFFFFFFFFFFFFFFF8];
  int v12 = v9 + 3;
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    int8x8_t v14 = vceq_s8(*(int8x8_t *)(v12 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
    if (v14.i8[0])
    {
      *(v12 - 3) = 95;
      if ((v14.i8[1] & 1) == 0)
      {
LABEL_23:
        if ((v14.i8[2] & 1) == 0) {
          goto LABEL_24;
        }
        goto LABEL_32;
      }
    }
    else if ((v14.i8[1] & 1) == 0)
    {
      goto LABEL_23;
    }
    *(v12 - 2) = 95;
    if ((v14.i8[2] & 1) == 0)
    {
LABEL_24:
      if ((v14.i8[3] & 1) == 0) {
        goto LABEL_25;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(v12 - 1) = 95;
    if ((v14.i8[3] & 1) == 0)
    {
LABEL_25:
      if ((v14.i8[4] & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_34;
    }
LABEL_33:
    *int v12 = 95;
    if ((v14.i8[4] & 1) == 0)
    {
LABEL_26:
      if ((v14.i8[5] & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_35;
    }
LABEL_34:
    v12[1] = 95;
    if ((v14.i8[5] & 1) == 0)
    {
LABEL_27:
      if (v14.i8[6]) {
        goto LABEL_36;
      }
      goto LABEL_28;
    }
LABEL_35:
    v12[2] = 95;
    if (v14.i8[6])
    {
LABEL_36:
      _OWORD v12[3] = 95;
      if ((v14.i8[7] & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_37;
    }
LABEL_28:
    if ((v14.i8[7] & 1) == 0) {
      goto LABEL_20;
    }
LABEL_37:
    void v12[4] = 95;
LABEL_20:
    v12 += 8;
    v13 -= 8;
  }
  while (v13);
  if (v10 == (v10 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_39;
  }
LABEL_46:
  uint64_t v19 = &v9[v10];
  do
  {
    if (*v11 == 58) {
      *uint64_t v11 = 95;
    }
    ++v11;
  }
  while (v11 != v19);
LABEL_39:
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  int v15 = *(char *)(a1 + 87);
  if (v15 >= 0) {
    uint64_t v16 = (char *)(a1 + 64);
  }
  else {
    uint64_t v16 = *(char **)(a1 + 64);
  }
  uint64_t v17 = *(void *)(a1 + 72);
  if (v15 >= 0) {
    uint64_t v17 = *(unsigned __int8 *)(a1 + 87);
  }
  sub_21577D738(a2 + 96, v16, &v16[v17]);
  *(void *)(a2 + 120) = *(void *)(a1 + 88);
  char v18 = (unsigned char *)(a2 + 128);
  if (*(char *)(a1 + 143) < 0)
  {
    sub_215738B0C(v18, *(void **)(a1 + 120), *(void *)(a1 + 128));
  }
  else
  {
    *(_OWORD *)char v18 = *(_OWORD *)(a1 + 120);
    *(void *)(a2 + 144) = *(void *)(a1 + 136);
  }
  if (v22 && SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215AD49EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 + 31) < 0) {
    operator delete(*v21);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_215AD4A5C(const void **a1, char *__s)
{
  int v4 = *((char *)a1 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (v5 != strlen(__s)) {
    return 0;
  }
  if (v4 >= 0) {
    int v6 = a1;
  }
  else {
    int v6 = *a1;
  }
  return memcmp(v6, __s, v5) == 0;
}

uint64_t sub_215AD4AE0(unsigned __int8 *a1)
{
  int v2 = (char)a1[23];
  uint64_t v3 = *(void *)a1;
  if (v2 >= 0) {
    std::string::size_type v4 = a1[23];
  }
  else {
    std::string::size_type v4 = *((void *)a1 + 1);
  }
  memset(&v28, 0, sizeof(v28));
  std::string::reserve(&v28, v4);
  if (v2 >= 0) {
    size_t v5 = a1;
  }
  else {
    size_t v5 = (unsigned __int8 *)v3;
  }
  while (v4)
  {
    while (1)
    {
      unsigned __int8 v6 = __tolower(*v5);
      unsigned __int8 v7 = v6;
      unsigned __int8 v8 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
        break;
      }
      if (HIBYTE(v28.__r_.__value_.__r.__words[2]) == 22)
      {
        int v9 = &v28;
        size_t size = 22;
        goto LABEL_16;
      }
      *((unsigned char *)&v28.__r_.__value_.__s + 23) = (*((unsigned char *)&v28.__r_.__value_.__s + 23) + 1) & 0x7F;
      *(_WORD *)((char *)&v28.__r_.__value_.__l.__data_ + v8) = v6;
      ++v5;
      if (!--v4) {
        goto LABEL_32;
      }
    }
    size_t size = (v28.__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v28.__r_.__value_.__l.__size_ == size)
    {
      if ((v28.__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) == 0x7FFFFFFFFFFFFFF8) {
        sub_215731CD8();
      }
      int v9 = (std::string *)v28.__r_.__value_.__r.__words[0];
      if (size > 0x3FFFFFFFFFFFFFF2)
      {
        size_t v13 = 0x7FFFFFFFFFFFFFF7;
      }
      else
      {
LABEL_16:
        if (size + 1 > 2 * size) {
          unint64_t v11 = size + 1;
        }
        else {
          unint64_t v11 = 2 * size;
        }
        uint64_t v12 = (v11 & 0x7FFFFFFFFFFFFFF8) + 8;
        if ((v11 | 7) != 0x17) {
          uint64_t v12 = v11 | 7;
        }
        if (v11 >= 0x17) {
          size_t v13 = v12 + 1;
        }
        else {
          size_t v13 = 23;
        }
      }
      int8x8_t v14 = operator new(v13);
      std::string::size_type v15 = (std::string::size_type)v14;
      if (!size || (memmove(v14, v9, size), size != 22)) {
        operator delete(v9);
      }
      v28.__r_.__value_.__r.__words[0] = v15;
      v28.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
      goto LABEL_29;
    }
    size_t size = v28.__r_.__value_.__l.__size_;
    std::string::size_type v15 = v28.__r_.__value_.__r.__words[0];
LABEL_29:
    v28.__r_.__value_.__l.__size_ = size + 1;
    uint64_t v16 = (unsigned __int8 *)(v15 + size);
    unsigned __int8 *v16 = v7;
    v16[1] = 0;
    ++v5;
    --v4;
  }
LABEL_32:
  int v17 = SHIBYTE(v28.__r_.__value_.__r.__words[2]);
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = v28.__r_.__value_.__l.__size_;
  }
  if (v18 == 5)
  {
    uint64_t v19 = (void *)v28.__r_.__value_.__r.__words[0];
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v22 = &v28;
    }
    else {
      uint64_t v22 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if (LODWORD(v22->__r_.__value_.__l.__data_) == 1869834798 && v22->__r_.__value_.__s.__data_[4] == 110)
    {
      uint64_t v21 = 3;
      if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return v21;
      }
      goto LABEL_62;
    }
    BOOL v24 = LODWORD(v22->__r_.__value_.__l.__data_) == 1701866030 && v22->__r_.__value_.__s.__data_[4] == 103;
    if (!v24 && memcmp(v22, ".tiff", 5uLL)) {
      goto LABEL_73;
    }
  }
  else
  {
    if (v18 != 4) {
      goto LABEL_73;
    }
    uint64_t v19 = (void *)v28.__r_.__value_.__r.__words[0];
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v20 = &v28;
    }
    else {
      int v20 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    switch(LODWORD(v20->__r_.__value_.__l.__data_))
    {
      case 0x7461642E:
        uint64_t v21 = 1;
        if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return v21;
        }
        goto LABEL_62;
      case 0x7673632E:
        uint64_t v21 = 2;
        if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return v21;
        }
        goto LABEL_62;
      case 0x7478742E:
        uint64_t v21 = 4;
        if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return v21;
        }
        goto LABEL_62;
    }
    if (LODWORD(v20->__r_.__value_.__l.__data_) != 1735290926
      && LODWORD(v20->__r_.__value_.__l.__data_) != 1735420462
      && memcmp(v20, ".tif", 4uLL))
    {
      if (!memcmp(v20, ".obj", 4uLL))
      {
        uint64_t v21 = 6;
        if (v17 < 0) {
          goto LABEL_62;
        }
        return v21;
      }
LABEL_73:
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_215AD4EDC(&v27, (uint64_t *)a1);
      std::logic_error::logic_error(exception, &v27);
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
    }
  }
  uint64_t v21 = 5;
  if (v17 < 0) {
LABEL_62:
  }
    operator delete(v19);
  return v21;
}

void sub_215AD4E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v21 & 1) == 0)
    {
LABEL_6:
      if (a20 < 0) {
        operator delete(a15);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v20);
  goto LABEL_6;
}

void sub_215AD4EDC(std::string *a1, uint64_t *a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  v4[0] = "Extension ";
  v4[1] = 10;
  uint64_t v2 = *((unsigned __int8 *)a2 + 23);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = (uint64_t *)*a2;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = a2[1];
  }
  uint64_t v4[2] = v3;
  v4[3] = v2;
  v4[4] = " has no supported export file format";
  v4[5] = 36;
  sub_2157430CC((uint64_t)v4, (uint64_t)&v5, 0, 0, a1);
}

void sub_215AD4F80(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  std::__fs::filesystem::path::__string_view v6 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1);
  if (v6.__size_ > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v6.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v8 = (v6.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v8 = v6.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v9 = v8 + 1;
    unsigned __int8 v7 = operator new(v8 + 1);
    *(void *)&__dst[16] = v9 | 0x8000000000000000;
    *(void *)long long __dst = v7;
    *(void *)&__dst[8] = v6.__size_;
    goto LABEL_8;
  }
  __dst[23] = v6.__size_;
  unsigned __int8 v7 = __dst;
  if (v6.__size_) {
LABEL_8:
  }
    memmove(v7, v6.__data_, v6.__size_);
  v7[v6.__size_] = 0;
  std::__fs::filesystem::path v72 = *(std::__fs::filesystem::path *)__dst;
  memset(__dst, 0, 24);
  sub_21577D738((unint64_t)__dst, ".csv", "");
  if (__dst[23] >= 0) {
    v10.__data_ = __dst;
  }
  else {
    v10.__data_ = *(const std::string_view::value_type **)__dst;
  }
  if (__dst[23] >= 0) {
    v10.__size_ = __dst[23];
  }
  else {
    v10.__size_ = *(void *)&__dst[8];
  }
  int v11 = std::__fs::filesystem::path::__compare(&v72, v10);
  if ((__dst[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__dst);
    if ((SHIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(v72.__pn_.__r_.__value_.__l.__data_);
LABEL_17:
  memset(&v59, 0, sizeof(v59));
  memset(&__p, 0, sizeof(__p));
  memset(&__src, 0, sizeof(__src));
  if (v11)
  {
    if (&__p != (std::__fs::filesystem::path *)a1)
    {
      if (*(char *)(a1 + 23) < 0) {
        sub_21573AB08(&__p, *(void **)a1, *(void *)(a1 + 8));
      }
      else {
        std::__fs::filesystem::path __p = *(std::__fs::filesystem::path *)a1;
      }
    }
    memset(&v72, 0, sizeof(v72));
    sub_21577D738((unint64_t)&v72, "sequence.csv", "");
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
    }
    else {
      *(std::__fs::filesystem::path *)long long __dst = __p;
    }
    sub_215ACE714((uint64_t)__dst, &v72);
    if (SHIBYTE(v59.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v59.__pn_.__r_.__value_.__l.__data_);
    }
    std::__fs::filesystem::path v59 = *(std::__fs::filesystem::path *)__dst;
    __dst[23] = 0;
    __dst[0] = 0;
    if (SHIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v72.__pn_.__r_.__value_.__l.__data_);
    }
    memset(&v72, 0, sizeof(v72));
    sub_21577D738((unint64_t)&v72, "info.json", "");
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
    }
    else {
      *(std::__fs::filesystem::path *)long long __dst = __p;
    }
    sub_215ACE714((uint64_t)__dst, &v72);
    if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__src.__pn_.__r_.__value_.__l.__data_);
    }
    std::__fs::filesystem::path __src = *(std::__fs::filesystem::path *)__dst;
    __dst[23] = 0;
    __dst[0] = 0;
    if (SHIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v72.__pn_.__r_.__value_.__l.__data_);
    }
LABEL_125:
    long long v46 = *a2;
    uint64_t v47 = *((void *)a2 + 2);
    *(_OWORD *)&v60[4] = *a2;
    *(void *)&v60[20] = *((void *)a2 + 2);
    *(_OWORD *)&v61.__r_.__value_.__l.__data_ = xmmword_215ED5990;
    v61.__r_.__value_.__s.__data_[16] = 0;
    v72.__pn_.__r_.__value_.__r.__words[0] = 0x300000001;
    sub_215DEBAC0(__dst, (uint64_t *)&v72);
  }
  std::__fs::filesystem::path::__string_view v12 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)a1);
  if (v12.__size_ > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v12.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v14 = (v12.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v14 = v12.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v15 = v14 + 1;
    size_t v13 = operator new(v14 + 1);
    *(void *)&__dst[16] = v15 | 0x8000000000000000;
    *(void *)long long __dst = v13;
    *(void *)&__dst[8] = v12.__size_;
    goto LABEL_30;
  }
  __dst[23] = v12.__size_;
  size_t v13 = __dst;
  if (v12.__size_) {
LABEL_30:
  }
    memmove(v13, v12.__data_, v12.__size_);
  v13[v12.__size_] = 0;
  v72.__pn_.__r_.__value_.__r.__words[0] = *(void *)&__dst[8];
  std::string::size_type v16 = *(void *)__dst;
  *(std::string::size_type *)((char *)v72.__pn_.__r_.__value_.__r.__words + 7) = *(void *)&__dst[15];
  char v17 = __dst[23];
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  }
  __p.__pn_.__r_.__value_.__r.__words[0] = v16;
  __p.__pn_.__r_.__value_.__l.__size_ = v72.__pn_.__r_.__value_.__r.__words[0];
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v72.__pn_.__r_.__value_.__r.__words + 7);
  *((unsigned char *)&__p.__pn_.__r_.__value_.__s + 23) = v17;
  if (&v59 != (std::__fs::filesystem::path *)a1)
  {
    char v18 = *(unsigned char *)(a1 + 23);
    if (SHIBYTE(v59.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v18 >= 0) {
        uint64_t v19 = (void *)a1;
      }
      else {
        uint64_t v19 = *(void **)a1;
      }
      if (v18 >= 0) {
        size_t v20 = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        size_t v20 = *(void *)(a1 + 8);
      }
      sub_21573ABD0((void **)&v59.__pn_.__r_.__value_.__l.__data_, v19, v20);
    }
    else if ((*(unsigned char *)(a1 + 23) & 0x80) != 0)
    {
      sub_21573AB08(&v59, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      std::__fs::filesystem::path v59 = *(std::__fs::filesystem::path *)a1;
    }
  }
  std::__fs::filesystem::path::__string_view v21 = std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)a1);
  if (v21.__size_ > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v21.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v23 = (v21.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v23 = v21.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v24 = v23 + 1;
    uint64_t v22 = operator new(v23 + 1);
    *(void *)&__dst[16] = v24 | 0x8000000000000000;
    *(void *)long long __dst = v22;
    *(void *)&__dst[8] = v21.__size_;
    goto LABEL_67;
  }
  __dst[23] = v21.__size_;
  uint64_t v22 = __dst;
  if (v21.__size_) {
LABEL_67:
  }
    memmove(v22, v21.__data_, v21.__size_);
  v22[v21.__size_] = 0;
  std::string v25 = *(void **)__dst;
  *(_DWORD *)uint64_t v60 = *(_DWORD *)&__dst[16];
  *(_DWORD *)&v60[3] = *(_DWORD *)&__dst[19];
  int v26 = __dst[23];
  if ((__dst[23] & 0x80000000) == 0)
  {
    *(_OWORD *)&v72.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)__dst;
    LODWORD(v72.__pn_.__r_.__value_.__r.__words[2]) = *(_DWORD *)v60;
    *(_DWORD *)((char *)&v72.__pn_.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)&v60[3];
    *((unsigned char *)&v72.__pn_.__r_.__value_.__s + 23) = __dst[23];
    char v27 = __dst[23];
    int v28 = __dst[23];
    uint64_t v29 = __dst[23];
    if (__dst[23] < 0) {
      uint64_t v29 = *(void *)&__dst[8];
    }
    if (v29 >= 4) {
      goto LABEL_72;
    }
LABEL_79:
    BOOL v32 = 0;
    if ((v27 & 0x80) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  sub_215738B0C(&v72, *(void **)__dst, *(unint64_t *)&__dst[8]);
  char v27 = HIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]);
  int v28 = SHIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]);
  int64_t size = HIBYTE(v72.__pn_.__r_.__value_.__r.__words[2]);
  if ((v72.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int64_t size = v72.__pn_.__r_.__value_.__l.__size_;
  }
  if (size < 4) {
    goto LABEL_79;
  }
LABEL_72:
  BOOL v30 = v28 < 0;
  char v31 = &v72;
  if (v30) {
    char v31 = (std::__fs::filesystem::path *)v72.__pn_.__r_.__value_.__r.__words[0];
  }
  BOOL v32 = LODWORD(v31->__pn_.__r_.__value_.__l.__data_) == 1868983913;
  if (v27 < 0) {
LABEL_80:
  }
    operator delete(v72.__pn_.__r_.__value_.__l.__data_);
LABEL_81:
  if ((v26 & 0x80000000) == 0)
  {
    if (v32) {
      goto LABEL_83;
    }
LABEL_92:
    std::__fs::filesystem::path::__string_view v36 = std::__fs::filesystem::path::__stem(&v59);
    if (v36.__size_ > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v36.__size_ >= 0x17)
    {
      std::basic_string_view<_CharT, _Traits>::size_type v38 = (v36.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v36.__size_ | 7) != 0x17) {
        std::basic_string_view<_CharT, _Traits>::size_type v38 = v36.__size_ | 7;
      }
      std::basic_string_view<_CharT, _Traits>::size_type v39 = v38 + 1;
      int v37 = operator new(v38 + 1);
      *(void *)&__dst[16] = v39 | 0x8000000000000000;
      *(void *)long long __dst = v37;
      *(void *)&__dst[8] = v36.__size_;
    }
    else
    {
      __dst[23] = v36.__size_;
      int v37 = __dst;
      if (!v36.__size_)
      {
LABEL_100:
        v37[v36.__size_] = 0;
        std::string::size_type v40 = *(void *)&__dst[8];
        long long v41 = *(void **)__dst;
        LODWORD(v46) = *(_DWORD *)&__dst[16];
        *(_DWORD *)((char *)&v46 + 3) = *(_DWORD *)&__dst[19];
        int v42 = __dst[23];
        if ((__dst[23] & 0x80000000) != 0)
        {
          sub_215738B0C(&v61, *(void **)__dst, *(unint64_t *)&__dst[8]);
          LOBYTE(v44) = *((unsigned char *)&v61.__r_.__value_.__s + 23);
          std::string::size_type v40 = v61.__r_.__value_.__l.__size_;
          int v43 = (std::string *)v61.__r_.__value_.__r.__words[0];
        }
        else
        {
          *(_OWORD *)&v61.__r_.__value_.__l.__data_ = *(_OWORD *)__dst;
          LODWORD(v61.__r_.__value_.__r.__words[2]) = v46;
          *(_DWORD *)((char *)&v61.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)&v46 + 3);
          *((unsigned char *)&v61.__r_.__value_.__s + 23) = __dst[23];
          int v43 = *(std::string **)__dst;
          LOBYTE(v44) = __dst[23];
        }
        *(void *)long long __dst = "info_";
        *(void *)&__dst[8] = 5;
        std::string::size_type v44 = v44;
        if ((v44 & 0x80u) != 0) {
          std::string::size_type v44 = v40;
        }
        else {
          int v43 = &v61;
        }
        *(void *)&__dst[16] = v43;
        *(void *)&__dst[24] = v44;
        long long v63 = ".json";
        long long v64 = (void *)5;
        sub_2157430CC((uint64_t)__dst, (uint64_t)&v65, 0, 0, &v45);
        *(std::string *)uint64_t v60 = v45;
        memset(&v45, 0, sizeof(v45));
        if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          sub_215738B0C(&v72, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
        }
        else {
          std::__fs::filesystem::path v72 = __p;
        }
        sub_215ACE714((uint64_t)&v72, (std::__fs::filesystem::path *)v60);
        if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__src.__pn_.__r_.__value_.__l.__data_);
        }
        std::__fs::filesystem::path __src = v72;
        *((unsigned char *)&v72.__pn_.__r_.__value_.__s + 23) = 0;
        v72.__pn_.__r_.__value_.__s.__data_[0] = 0;
        if ((v60[23] & 0x80000000) != 0)
        {
          operator delete(*(void **)v60);
          if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_123:
            if ((SHIBYTE(v61.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_124;
            }
            goto LABEL_128;
          }
        }
        else if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_123;
        }
        operator delete(v45.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v61.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_124:
          if ((v42 & 0x80000000) == 0) {
            goto LABEL_125;
          }
LABEL_129:
          operator delete(v41);
          goto LABEL_125;
        }
LABEL_128:
        operator delete(v61.__r_.__value_.__l.__data_);
        if ((v42 & 0x80000000) == 0) {
          goto LABEL_125;
        }
        goto LABEL_129;
      }
    }
    memmove(v37, v36.__data_, v36.__size_);
    goto LABEL_100;
  }
  operator delete(v25);
  if (!v32) {
    goto LABEL_92;
  }
LABEL_83:
  sub_2157CFEA8((uint64_t)v48, "sequence file must not be named 'info'");
  char v56 = 1;
  sub_215E0A198((uint64_t)v48, (uint64_t)__dst);
  *(_OWORD *)a3 = *(_OWORD *)__dst;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v71)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v34 = v64;
    if ((_BYTE)v64)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)&__dst[16];
      *(void *)(a3 + 32) = v63;
      *(void *)&__dst[24] = 0;
      long long v63 = 0;
      *(void *)&__dst[16] = 0;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v70)
    {
      uint64_t v35 = v67;
      *(void *)(a3 + 64) = v66;
      *(_OWORD *)(a3 + 48) = v65;
      long long v65 = 0uLL;
      *(void *)(a3 + 72) = v35;
      *(_OWORD *)(a3 + 80) = v68;
      *(void *)(a3 + 96) = v69;
      long long v66 = 0;
      long long v68 = 0uLL;
      uint64_t v69 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v34 && SHIBYTE(v63) < 0) {
      operator delete(*(void **)&__dst[16]);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
  if (!v56) {
    goto LABEL_130;
  }
  if (v55)
  {
    if (v54 < 0) {
      operator delete(v53);
    }
    if (v52 < 0) {
      operator delete(v51);
    }
  }
  if (!v50 || (v49 & 0x80000000) == 0)
  {
LABEL_130:
    if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_135;
    }
LABEL_131:
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_136;
    }
    goto LABEL_132;
  }
  operator delete(v48[0]);
  if ((SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_131;
  }
LABEL_135:
  operator delete(__src.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_136:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if (SHIBYTE(v59.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_137;
    }
    return;
  }
LABEL_132:
  if (SHIBYTE(v59.__pn_.__r_.__value_.__r.__words[2]) < 0) {
LABEL_137:
  }
    operator delete(v59.__pn_.__r_.__value_.__l.__data_);
}

void sub_215AD6A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  operator delete(v71);
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete((void *)STACK[0x300]);
  }
  sub_215CF6268(v72 - 240);
  if (a71 < 0) {
    operator delete(a66);
  }
  if (SLOBYTE(STACK[0x277]) < 0)
  {
    operator delete((void *)STACK[0x260]);
    if ((SLOBYTE(STACK[0x297]) & 0x80000000) == 0)
    {
LABEL_7:
      if (SLOBYTE(STACK[0x2B7]) < 0) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  else if ((SLOBYTE(STACK[0x297]) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete((void *)STACK[0x280]);
  if (SLOBYTE(STACK[0x2B7]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x2A0]);
    _Unwind_Resume(a1);
  }
LABEL_11:
  _Unwind_Resume(a1);
}

void sub_215AD6DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  std::__fs::filesystem::path::__string_view v4 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1);
  if (v4.__size_ > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v4.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v6 = (v4.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v6 = v4.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v7 = v6 + 1;
    p_dst = (std::__fs::filesystem::path *)operator new(v6 + 1);
    __dst.__pn_.__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    __dst.__pn_.__r_.__value_.__l.__size_ = v4.__size_;
  }
  else
  {
    *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = v4.__size_;
    p_dst = &__dst;
    if (!v4.__size_)
    {
LABEL_9:
      p_dst->__pn_.__r_.__value_.__s.__data_[v4.__size_] = 0;
      std::__fs::filesystem::path v51 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      sub_21577D738((unint64_t)&__dst, ".csv", "");
      if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v8.__data_ = (const std::string_view::value_type *)&__dst;
      }
      else {
        v8.__data_ = (const std::string_view::value_type *)__dst.__pn_.__r_.__value_.__r.__words[0];
      }
      if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v8.__size_ = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
      }
      else {
        v8.__size_ = __dst.__pn_.__r_.__value_.__l.__size_;
      }
      int v9 = std::__fs::filesystem::path::__compare(&v51, v8);
      if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_17;
        }
      }
      else if ((SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_17;
      }
      operator delete(v51.__pn_.__r_.__value_.__l.__data_);
LABEL_17:
      memset(&__p, 0, sizeof(__p));
      memset(&v41, 0, sizeof(v41));
      memset(&v40, 0, sizeof(v40));
      if (v9)
      {
        if (&__p != (std::__fs::filesystem::path *)a1)
        {
          if (*(char *)(a1 + 23) < 0) {
            sub_21573AB08(&__p, *(void **)a1, *(void *)(a1 + 8));
          }
          else {
            std::__fs::filesystem::path __p = *(std::__fs::filesystem::path *)a1;
          }
        }
        memset(&v51, 0, sizeof(v51));
        sub_21577D738((unint64_t)&v51, "sequence.csv", "");
        if (*(char *)(a1 + 23) < 0) {
          sub_215738B0C(&__dst, *(void **)a1, *(void *)(a1 + 8));
        }
        else {
          std::__fs::filesystem::path __dst = *(std::__fs::filesystem::path *)a1;
        }
        sub_215ACE714((uint64_t)&__dst, &v51);
        if (SHIBYTE(v41.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v41.__pn_.__r_.__value_.__l.__data_);
        }
        std::__fs::filesystem::path v41 = __dst;
        *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = 0;
        __dst.__pn_.__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v51.__pn_.__r_.__value_.__l.__data_);
        }
        memset(&v51, 0, sizeof(v51));
        sub_21577D738((unint64_t)&v51, "info.json", "");
        if (*(char *)(a1 + 23) < 0) {
          sub_215738B0C(&__dst, *(void **)a1, *(void *)(a1 + 8));
        }
        else {
          std::__fs::filesystem::path __dst = *(std::__fs::filesystem::path *)a1;
        }
        sub_215ACE714((uint64_t)&__dst, &v51);
        if (SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v40.__pn_.__r_.__value_.__l.__data_);
        }
        std::__fs::filesystem::path v40 = __dst;
        *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = 0;
        __dst.__pn_.__r_.__value_.__s.__data_[0] = 0;
        if ((SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_89:
          if ((*(uint64_t (**)(uint64_t, std::__fs::filesystem::path *))(*(void *)a2 + 328))(a2, &v41))
          {
            (*(void (**)(void **__return_ptr, uint64_t, std::__fs::filesystem::path *, uint64_t))(*(void *)a2 + 368))(v39, a2, &v41, 8);
            if (v39[1])
            {
              long long v37 = 0uLL;
              uint64_t v38 = 0;
              LOBYTE(v33[0]) = 0;
              char v36 = 0;
              if ((*(unsigned int (**)(uint64_t, std::__fs::filesystem::path *))(*(void *)a2 + 328))(a2, &v40))
              {
                (*(void (**)(void **__return_ptr, uint64_t, std::__fs::filesystem::path *, uint64_t))(*(void *)a2 + 368))(&v31, a2, &v40, 8);
                uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v32 + 16))(v32);
                sub_215AD154C(&v30, *(void **)((char *)v29 + *(void *)(*v29 - 24) + 40), 0);
                sub_215DDC78C((uint64_t *)&v30);
              }
              long long v37 = xmmword_215ED59A0;
              uint64_t v38 = 9;
              LODWORD(v52) = 0;
              sub_2157EC664(&v51, "No info file ");
              sub_2158B2364();
            }
            LODWORD(v45) = 0;
            sub_2157E4058(&v44, "failed to open file ");
            sub_2158B2364();
          }
          LODWORD(v45) = 0;
          sub_2157E52AC(&v44, "sequence file ");
          sub_2158B2364();
        }
        char v17 = (void *)v51.__pn_.__r_.__value_.__r.__words[0];
LABEL_88:
        operator delete(v17);
        goto LABEL_89;
      }
      std::__fs::filesystem::path::__string_view v10 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)a1);
      if (v10.__size_ > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v10.__size_ >= 0x17)
      {
        std::basic_string_view<_CharT, _Traits>::size_type v12 = (v10.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v10.__size_ | 7) != 0x17) {
          std::basic_string_view<_CharT, _Traits>::size_type v12 = v10.__size_ | 7;
        }
        std::basic_string_view<_CharT, _Traits>::size_type v13 = v12 + 1;
        int v11 = (std::__fs::filesystem::path *)operator new(v12 + 1);
        __dst.__pn_.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
        __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        __dst.__pn_.__r_.__value_.__l.__size_ = v10.__size_;
      }
      else
      {
        *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = v10.__size_;
        int v11 = &__dst;
        if (!v10.__size_)
        {
LABEL_31:
          v11->__pn_.__r_.__value_.__s.__data_[v10.__size_] = 0;
          v51.__pn_.__r_.__value_.__r.__words[0] = __dst.__pn_.__r_.__value_.__l.__size_;
          std::string::size_type v14 = __dst.__pn_.__r_.__value_.__r.__words[0];
          *(std::string::size_type *)((char *)v51.__pn_.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&__dst.__pn_.__r_.__value_.__r.__words[1] + 7);
          char v15 = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
          }
          __p.__pn_.__r_.__value_.__r.__words[0] = v14;
          __p.__pn_.__r_.__value_.__l.__size_ = v51.__pn_.__r_.__value_.__r.__words[0];
          *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v51.__pn_.__r_.__value_.__r.__words + 7);
          *((unsigned char *)&__p.__pn_.__r_.__value_.__s + 23) = v15;
          if (&v41 != (std::__fs::filesystem::path *)a1)
          {
            char v16 = *(unsigned char *)(a1 + 23);
            if (SHIBYTE(v41.__pn_.__r_.__value_.__r.__words[2]) < 0)
            {
              if (v16 >= 0) {
                char v18 = (void *)a1;
              }
              else {
                char v18 = *(void **)a1;
              }
              if (v16 >= 0) {
                size_t v19 = *(unsigned __int8 *)(a1 + 23);
              }
              else {
                size_t v19 = *(void *)(a1 + 8);
              }
              sub_21573ABD0((void **)&v41.__pn_.__r_.__value_.__l.__data_, v18, v19);
            }
            else if ((*(unsigned char *)(a1 + 23) & 0x80) != 0)
            {
              sub_21573AB08(&v41, *(void **)a1, *(void *)(a1 + 8));
            }
            else
            {
              std::__fs::filesystem::path v41 = *(std::__fs::filesystem::path *)a1;
            }
          }
          std::__fs::filesystem::path::__string_view v20 = std::__fs::filesystem::path::__stem(&v41);
          if (v20.__size_ > 0x7FFFFFFFFFFFFFF7) {
            sub_215731CD8();
          }
          if (v20.__size_ >= 0x17)
          {
            std::basic_string_view<_CharT, _Traits>::size_type v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v20.__size_ | 7) != 0x17) {
              std::basic_string_view<_CharT, _Traits>::size_type v22 = v20.__size_ | 7;
            }
            std::basic_string_view<_CharT, _Traits>::size_type v23 = v22 + 1;
            std::__fs::filesystem::path::__string_view v21 = (std::__fs::filesystem::path *)operator new(v22 + 1);
            __dst.__pn_.__r_.__value_.__r.__words[2] = v23 | 0x8000000000000000;
            __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
            __dst.__pn_.__r_.__value_.__l.__size_ = v20.__size_;
          }
          else
          {
            *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = v20.__size_;
            std::__fs::filesystem::path::__string_view v21 = &__dst;
            if (!v20.__size_)
            {
LABEL_68:
              v21->__pn_.__r_.__value_.__s.__data_[v20.__size_] = 0;
              int64_t size = (void *)__dst.__pn_.__r_.__value_.__l.__size_;
              std::string::size_type v25 = __dst.__pn_.__r_.__value_.__r.__words[0];
              LODWORD(v39[0]) = __dst.__pn_.__r_.__value_.__r.__words[2];
              *(_DWORD *)((char *)v39 + 3) = *(_DWORD *)((char *)&__dst.__pn_.__r_.__value_.__r.__words[2] + 3);
              int v26 = SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
              if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
              {
                sub_215738B0C(v33, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
                LOBYTE(v28) = v35;
                char v27 = (void **)v33[0];
                int64_t size = v33[1];
              }
              else
              {
                *(_OWORD *)uint64_t v33 = *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_;
                *(_DWORD *)int v34 = v39[0];
                *(_DWORD *)&void v34[3] = *(_DWORD *)((char *)v39 + 3);
                char v35 = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
                char v27 = (void **)__dst.__pn_.__r_.__value_.__r.__words[0];
                LOBYTE(v28) = *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23);
              }
              __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)"info_";
              __dst.__pn_.__r_.__value_.__l.__size_ = 5;
              unint64_t v28 = v28;
              if ((v28 & 0x80u) != 0) {
                unint64_t v28 = (unint64_t)size;
              }
              else {
                char v27 = v33;
              }
              __dst.__pn_.__r_.__value_.__r.__words[2] = (std::string::size_type)v27;
              unint64_t v47 = v28;
              uint64_t v48 = ".json";
              uint64_t v49 = 5;
              sub_2157430CC((uint64_t)&__dst, (uint64_t)v50, 0, 0, &__src);
              v44.__pn_ = __src;
              memset(&__src, 0, sizeof(__src));
              if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
                sub_215738B0C(&v51, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
              }
              else {
                std::__fs::filesystem::path v51 = __p;
              }
              sub_215ACE714((uint64_t)&v51, &v44);
              if (SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v40.__pn_.__r_.__value_.__l.__data_);
              }
              std::__fs::filesystem::path v40 = v51;
              *((unsigned char *)&v51.__pn_.__r_.__value_.__s + 23) = 0;
              v51.__pn_.__r_.__value_.__s.__data_[0] = 0;
              if (SHIBYTE(v44.__pn_.__r_.__value_.__r.__words[2]) < 0)
              {
                operator delete(v44.__pn_.__r_.__value_.__l.__data_);
                if ((SHIBYTE(__src.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_81:
                  if ((v35 & 0x80000000) == 0) {
                    goto LABEL_82;
                  }
                  goto LABEL_86;
                }
              }
              else if ((SHIBYTE(__src.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
                goto LABEL_81;
              }
              operator delete(__src.__r_.__value_.__l.__data_);
              if ((v35 & 0x80000000) == 0)
              {
LABEL_82:
                if ((v26 & 0x80000000) == 0) {
                  goto LABEL_89;
                }
LABEL_87:
                char v17 = (void *)v25;
                goto LABEL_88;
              }
LABEL_86:
              operator delete(v33[0]);
              if ((v26 & 0x80000000) == 0) {
                goto LABEL_89;
              }
              goto LABEL_87;
            }
          }
          memmove(v21, v20.__data_, v20.__size_);
          goto LABEL_68;
        }
      }
      memmove(v11, v10.__data_, v10.__size_);
      goto LABEL_31;
    }
  }
  memmove(p_dst, v4.__data_, v4.__size_);
  goto LABEL_9;
}

void sub_215AD88A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  if (a45 < 0) {
    operator delete(__p);
  }
  sub_215AD8C64((void ****)&STACK[0x3A0]);
  if (a65 < 0) {
    operator delete(a60);
  }
  sub_215CF6138((uint64_t)&a66);
  if (a73)
  {
    if (a72 < 0) {
      operator delete(a69);
    }
  }
  sub_215CF6138((uint64_t)&STACK[0x258]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x317]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
  }
  else if ((SLOBYTE(STACK[0x317]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SLOBYTE(STACK[0x337]) & 0x80000000) == 0) {
LABEL_15:
    }
      _Unwind_Resume(a1);
LABEL_14:
    operator delete((void *)STACK[0x320]);
    _Unwind_Resume(a1);
  }
  operator delete((void *)STACK[0x300]);
  if ((SLOBYTE(STACK[0x337]) & 0x80000000) == 0) {
    goto LABEL_15;
  }
  goto LABEL_14;
}

void ****sub_215AD8C64(void ****a1)
{
  if (*((unsigned char *)a1 + 120))
  {
    uint64_t v2 = *a1;
    *a1 = 0;
    if (v2)
    {
      sub_215CEB204(v2 + 1, *(unsigned __int8 *)v2);
      MEMORY[0x2166C4D20](v2, 0x1022C40B06DCE69);
    }
    return a1;
  }
  if (!*((unsigned char *)a1 + 112)) {
    return a1;
  }
  if (!*((unsigned char *)a1 + 104)) {
    goto LABEL_9;
  }
  if (*((char *)a1 + 103) < 0)
  {
    operator delete(a1[10]);
    if (*((char *)a1 + 71) < 0) {
      goto LABEL_13;
    }
LABEL_9:
    if (*((unsigned char *)a1 + 40)) {
      goto LABEL_10;
    }
    return a1;
  }
  if ((*((char *)a1 + 71) & 0x80000000) == 0) {
    goto LABEL_9;
  }
LABEL_13:
  operator delete(a1[6]);
  if (!*((unsigned char *)a1 + 40)) {
    return a1;
  }
LABEL_10:
  if ((*((char *)a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(a1[2]);
  return a1;
}

void sub_215AD8D2C(std::runtime_error *this)
{
  if (!LOBYTE(this[8].__vftable)) {
    goto LABEL_7;
  }
  if (!LOBYTE(this[7].__imp_.__imp_)) {
    goto LABEL_5;
  }
  if ((SHIBYTE(this[7].__vftable) & 0x80000000) == 0)
  {
    if ((SHIBYTE(this[5].__vftable) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  operator delete(this[6].__vftable);
  if (SHIBYTE(this[5].__vftable) < 0)
  {
LABEL_11:
    operator delete(this[4].__vftable);
    if (LOBYTE(this[3].__imp_.__imp_)) {
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v2 = this;
    goto LABEL_9;
  }
LABEL_5:
  if (!LOBYTE(this[3].__imp_.__imp_)) {
    goto LABEL_7;
  }
LABEL_6:
  if ((SHIBYTE(this[3].__vftable) & 0x80000000) == 0) {
    goto LABEL_7;
  }
  operator delete(this[2].__vftable);
  uint64_t v2 = this;

LABEL_9:
  std::runtime_error::~runtime_error(v2);
}

void sub_215AD8DDC(std::runtime_error *this)
{
  if (!LOBYTE(this[8].__vftable)) {
    goto LABEL_10;
  }
  if (LOBYTE(this[7].__imp_.__imp_))
  {
    if ((SHIBYTE(this[7].__vftable) & 0x80000000) == 0)
    {
      if ((SHIBYTE(this[5].__vftable) & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(this[4].__vftable);
      if (!LOBYTE(this[3].__imp_.__imp_)) {
        goto LABEL_10;
      }
      goto LABEL_6;
    }
    operator delete(this[6].__vftable);
    if (SHIBYTE(this[5].__vftable) < 0) {
      goto LABEL_9;
    }
  }
LABEL_5:
  if (!LOBYTE(this[3].__imp_.__imp_)) {
    goto LABEL_10;
  }
LABEL_6:
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[2].__vftable);
  }
LABEL_10:
  std::runtime_error::~runtime_error(this);

  JUMPOUT(0x2166C4D20);
}

void sub_215AD8E80(uint64_t a1, uint64_t a2, void *__src, size_t __len, uint64_t a5, char a6)
{
  v36[2] = *MEMORY[0x263EF8340];
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (__len >= 0x17)
  {
    size_t v13 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v13 = __len | 7;
    }
    size_t v14 = v13 + 1;
    p_dst = (std::__fs::filesystem::path *)operator new(v13 + 1);
    __dst.__pn_.__r_.__value_.__l.__size_ = __len;
    __dst.__pn_.__r_.__value_.__r.__words[2] = v14 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_8;
  }
  *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = __len;
  p_dst = &__dst;
  if (__len) {
LABEL_8:
  }
    memmove(p_dst, __src, __len);
  p_dst->__pn_.__r_.__value_.__s.__data_[__len] = 0;
  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v15 = &__dst;
  }
  else {
    char v15 = (std::__fs::filesystem::path *)__dst.__pn_.__r_.__value_.__r.__words[0];
  }
  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __dst.__pn_.__r_.__value_.__l.__size_;
  }
  sub_2157C6A10((char *)v15, size, ".", 1, 0, (uint64_t)&v32);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
    char v17 = (void **)v32;
    char v18 = v33;
    memset(v36, 0, 15);
    if (v32 != v33) {
      goto LABEL_17;
    }
  }
  else
  {
    char v17 = (void **)v32;
    char v18 = v33;
    memset(v36, 0, 15);
    if (v32 != v33)
    {
LABEL_17:
      size_t v19 = 0;
      char v20 = 0;
      while (1)
      {
        v34.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
        v34.__pn_.__r_.__value_.__l.__size_ = v36[0];
        *(std::string::size_type *)((char *)&v34.__pn_.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v36 + 7);
        *((unsigned char *)&v34.__pn_.__r_.__value_.__s + 23) = v20;
        memset(v36, 0, 15);
        if (*((char *)v17 + 23) < 0)
        {
          if (!v17[1] || *(unsigned char *)*v17 != 47)
          {
LABEL_27:
            if (std::__fs::filesystem::path::__filename(&v34).__size_) {
              std::string::push_back(&v34.__pn_, 47);
            }
            goto LABEL_30;
          }
        }
        else if (!*((unsigned char *)v17 + 23) || *(unsigned char *)v17 != 47)
        {
          goto LABEL_27;
        }
        if (v20 < 0)
        {
          *size_t v19 = 0;
          v34.__pn_.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v34.__pn_.__r_.__value_.__s.__data_[0] = 0;
          *((unsigned char *)&v34.__pn_.__r_.__value_.__s + 23) = 0;
        }
LABEL_30:
        int v21 = *((char *)v17 + 23);
        BOOL v22 = v21 < 0;
        if (v21 >= 0) {
          std::basic_string_view<_CharT, _Traits>::size_type v23 = (char *)v17;
        }
        else {
          std::basic_string_view<_CharT, _Traits>::size_type v23 = (char *)*v17;
        }
        std::basic_string_view<_CharT, _Traits>::size_type v24 = (char *)*((unsigned __int8 *)v17 + 23);
        if (v22) {
          std::basic_string_view<_CharT, _Traits>::size_type v24 = (char *)v17[1];
        }
        sub_21577D738((unint64_t)&v34, v23, &v24[(void)v23]);
        char v25 = HIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]);
        if (SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_215738B0C(&__dst, v34.__pn_.__r_.__value_.__l.__data_, v34.__pn_.__r_.__value_.__l.__size_);
          char v25 = HIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]);
        }
        else
        {
          std::__fs::filesystem::path __dst = v34;
        }
        v36[0] = __dst.__pn_.__r_.__value_.__l.__size_;
        size_t v19 = (unsigned char *)__dst.__pn_.__r_.__value_.__r.__words[0];
        *(void *)((char *)v36 + 7) = *(std::string::size_type *)((char *)&__dst.__pn_.__r_.__value_.__r.__words[1] + 7);
        char v20 = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
        *((unsigned char *)&__dst.__pn_.__r_.__value_.__s + 23) = 0;
        __dst.__pn_.__r_.__value_.__s.__data_[0] = 0;
        if (v25 < 0) {
          operator delete(v34.__pn_.__r_.__value_.__l.__data_);
        }
        v17 += 3;
        if (v17 == v18)
        {
          __p.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
          __p.__pn_.__r_.__value_.__l.__size_ = v36[0];
          *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v36 + 7);
          *((unsigned char *)&__p.__pn_.__r_.__value_.__s + 23) = v20;
          if (a6) {
            goto LABEL_41;
          }
LABEL_50:
          if (*(char *)(a2 + 23) < 0)
          {
            sub_215738B0C((unsigned char *)a1, *(void **)a2, *(void *)(a2 + 8));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
          }
          sub_215ACE714(a1, &__p);
          goto LABEL_63;
        }
      }
    }
  }
  memset(&__p, 0, sizeof(__p));
  if (!a6) {
    goto LABEL_50;
  }
LABEL_41:
  memset(&v34, 0, sizeof(v34));
  uint64_t v26 = *(unsigned __int8 *)(a5 + 23);
  if ((v26 & 0x80u) == 0) {
    char v27 = (char *)a5;
  }
  else {
    char v27 = *(char **)a5;
  }
  if ((v26 & 0x80u) != 0) {
    uint64_t v26 = *(void *)(a5 + 8);
  }
  sub_21577D738((unint64_t)&v34, v27, &v27[v26]);
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::__fs::filesystem::path __dst = *(std::__fs::filesystem::path *)a2;
  }
  sub_215ACE714((uint64_t)&__dst, &v34);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C((unsigned char *)a1, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    *(std::__fs::filesystem::path *)a1 = __dst;
  }
  sub_215ACE714(a1, &__p);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_63;
    }
  }
  else if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_63;
  }
  operator delete(v34.__pn_.__r_.__value_.__l.__data_);
LABEL_63:
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  }
  unint64_t v28 = (void **)v32;
  if (v32)
  {
    uint64_t v29 = v33;
    std::string v30 = v32;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v29 - 1) < 0) {
          operator delete(*(v29 - 3));
        }
        v29 -= 3;
      }
      while (v29 != v28);
      std::string v30 = v32;
    }
    uint64_t v33 = v28;
    operator delete(v30);
  }
}

void sub_215AD9298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_2157352DC(&a16);
  _Unwind_Resume(a1);
}

void sub_215AD938C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_215AD966C(&v24.__pn_, *a3, a4, a5, (uint64_t *)&__p, a6, a7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((*(char *)(a2 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    sub_215738B0C((unsigned char *)a1, *(void **)a2, *(void *)(a2 + 8));
    goto LABEL_6;
  }
  if (*(char *)(a2 + 23) < 0) {
    goto LABEL_5;
  }
LABEL_3:
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
LABEL_6:
  sub_215ACE714(a1, &v24);
  for (int i = 1; ; int i = v22 + 1)
  {
    int v22 = i;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a8 + 176))(a8, a1) & 1) == 0) {
      break;
    }
    sub_215AD97C0(&v22);
    char v17 = std::string::insert(&v19, 0, "_", 1uLL);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    std::string::size_type v21 = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)char v20 = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    sub_215AD966C(&__p, *a3, a4, a5, (uint64_t *)v20, a6, a7);
    if (SHIBYTE(v24.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v24.__pn_.__r_.__value_.__l.__data_);
      v24.__pn_ = __p;
      if ((SHIBYTE(v21) & 0x80000000) == 0)
      {
LABEL_11:
        if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_16;
      }
    }
    else
    {
      v24.__pn_ = __p;
      if ((SHIBYTE(v21) & 0x80000000) == 0) {
        goto LABEL_11;
      }
    }
    operator delete(v20[0]);
    if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((*(char *)(a2 + 23) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
LABEL_16:
    operator delete(v19.__r_.__value_.__l.__data_);
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
LABEL_13:
      std::string __p = *(std::string *)a2;
      goto LABEL_18;
    }
LABEL_17:
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
LABEL_18:
    sub_215ACE714((uint64_t)&__p, &v24);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(std::string *)a1 = __p;
  }
  if (SHIBYTE(v24.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__pn_.__r_.__value_.__l.__data_);
  }
}

void sub_215AD95D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD966C(std::string *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  sub_215E13D50("%020llu", &__p, a2);
  v19[0] = a3;
  v19[1] = a4;
  v19[2] = "_";
  void v19[3] = 1;
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  v19[4] = p_p;
  v19[5] = size;
  uint64_t v15 = *((unsigned __int8 *)a5 + 23);
  if ((v15 & 0x80u) == 0) {
    char v16 = a5;
  }
  else {
    char v16 = (uint64_t *)*a5;
  }
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = a5[1];
  }
  v19[6] = v16;
  v19[7] = v15;
  v19[8] = a6;
  v19[9] = a7;
  sub_2157430CC((uint64_t)v19, (uint64_t)&v20, 0, 0, &v18);
  *a1 = v18;
  memset(&v18, 0, sizeof(v18));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215AD9798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AD97C0(int *a1)
{
  int v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  void v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  std::basic_string_view<_CharT, _Traits>::size_type v6 = v5;
  ((void (*)(void **, unsigned char *))off_26C678688[0])(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (v3 == -1) {
    sub_215742D4C();
  }
  v5[0] = &v4;
  uint64_t result = ((uint64_t (*)(void *, unsigned char *))off_26C6786B8[v3])(v5, v2);
  if (v3 != -1) {
    return ((uint64_t (*)(void *, unsigned char *))off_26C6786A0[v3])(v5, v2);
  }
  return result;
}

void sub_215AD98B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AD98C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_215AD98EC(std::string *a1, uint64_t a2)
{
  if (*(unsigned char *)(sub_215AF0140(a2) + 40))
  {
    uint64_t v4 = sub_215AF0140(a2);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 39);
    if ((v5 & 0x80u) != 0) {
      uint64_t v5 = *(void *)(v4 + 24);
    }
    if (v5)
    {
      uint64_t v6 = sub_215AF0140(a2);
      if (*(char *)(v6 + 39) < 0)
      {
        sub_215738B0C(v42, *(void **)(v6 + 16), *(void *)(v6 + 24));
      }
      else
      {
        *(_OWORD *)int v42 = *(_OWORD *)(v6 + 16);
        uint64_t v43 = *(void *)(v6 + 32);
      }
      std::string::size_type v21 = HIBYTE(v43);
      char v22 = HIBYTE(v43);
      std::__fs::filesystem::path v24 = (void **)v42[0];
      std::basic_string_view<_CharT, _Traits>::size_type v23 = v42[1];
      if (v43 >= 0) {
        char v25 = v42;
      }
      else {
        char v25 = (void **)v42[0];
      }
      if (v43 >= 0) {
        uint64_t v26 = (char *)HIBYTE(v43);
      }
      else {
        uint64_t v26 = (char *)v42[1];
      }
      if (v26)
      {
        do
        {
          char v27 = (char *)memchr(" .\\/:*?|<>\"", *(char *)v25, 0xBuLL);
          unint64_t v28 = "";
          if (v27) {
            unint64_t v28 = v27;
          }
          if (v28 - " .\\/:*?|<>\"" != 11) {
            *(unsigned char *)char v25 = 95;
          }
          char v25 = (void **)((char *)v25 + 1);
          --v26;
        }
        while (v26);
        std::string::size_type v21 = HIBYTE(v43);
        std::__fs::filesystem::path v24 = (void **)v42[0];
        std::basic_string_view<_CharT, _Traits>::size_type v23 = v42[1];
        char v22 = HIBYTE(v43);
      }
      int v29 = v22;
      if (v22 >= 0) {
        std::string::size_type v30 = v21;
      }
      else {
        std::string::size_type v30 = (std::string::size_type)v23;
      }
      a1->__r_.__value_.__r.__words[0] = 0;
      a1->__r_.__value_.__l.__size_ = 0;
      a1->__r_.__value_.__r.__words[2] = 0;
      std::string::reserve(a1, v30);
      if (v29 >= 0) {
        std::__fs::filesystem::path v24 = v42;
      }
      for (; v30; --v30)
      {
        std::string::value_type v31 = __tolower(*(unsigned __int8 *)v24);
        std::string::push_back(a1, v31);
        std::__fs::filesystem::path v24 = (void **)((char *)v24 + 1);
      }
      goto LABEL_76;
    }
  }
  sub_215AF0948(a2);
  if (v43 >= 0) {
    size_t v7 = HIBYTE(v43);
  }
  else {
    size_t v7 = (size_t)v42[1];
  }
  if (v7 != 8)
  {
    unint64_t v10 = v7 + 1;
    if (v7 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v10 >= 0x17)
    {
      uint64_t v11 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17) {
        uint64_t v11 = v10 | 7;
      }
      uint64_t v12 = v11 + 1;
      p_dst = (std::string *)operator new(v11 + 1);
      __dst.__r_.__value_.__l.__size_ = v7 + 1;
      __dst.__r_.__value_.__r.__words[2] = v12 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v7 + 1;
      if (!v7) {
        goto LABEL_26;
      }
    }
LABEL_22:
    if (v43 >= 0) {
      size_t v13 = v42;
    }
    else {
      size_t v13 = (void **)v42[0];
    }
    memmove(p_dst, v13, v7);
LABEL_26:
    *(_WORD *)((char *)&p_dst->__r_.__value_.__l.__data_ + v7) = 95;
    sub_2158229B4(&v44);
    if ((v39 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v39 & 0x80u) == 0) {
      std::string::size_type v15 = v39;
    }
    else {
      std::string::size_type v15 = v38;
    }
    char v16 = std::string::append(&__dst, p_p, v15);
    std::string v18 = (void *)v16->__r_.__value_.__r.__words[0];
    std::string::size_type size = v16->__r_.__value_.__l.__size_;
    v40[0] = v16->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v40 + 3) = *(_DWORD *)((char *)&v16->__r_.__value_.__r.__words[2] + 3);
    int v19 = SHIBYTE(v16->__r_.__value_.__r.__words[2]);
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if ((char)v39 < 0)
    {
      operator delete(__p);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_34:
        if ((v19 & 0x80000000) == 0)
        {
LABEL_35:
          v36.__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
          v36.__r_.__value_.__l.__size_ = size;
          LODWORD(v36.__r_.__value_.__r.__words[2]) = v40[0];
          *(_DWORD *)((char *)&v36.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v40 + 3);
          *((unsigned char *)&v36.__r_.__value_.__s + 23) = v19;
LABEL_39:
          sub_215E13B5C(&v36, ".", 1, "_", 1uLL, 0, 0, (uint64_t)a1);
          if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v36.__r_.__value_.__l.__data_);
            if ((v19 & 0x80000000) == 0) {
              goto LABEL_76;
            }
          }
          else if ((v19 & 0x80000000) == 0)
          {
            goto LABEL_76;
          }
          uint64_t v20 = v18;
          goto LABEL_44;
        }
LABEL_38:
        sub_215738B0C(&v36, v18, size);
        goto LABEL_39;
      }
    }
    else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_38;
  }
  std::__fs::filesystem::path::__string_view v8 = (void **)v42[0];
  if (v43 >= 0) {
    std::__fs::filesystem::path::__string_view v8 = v42;
  }
  if (*(void **)"cv3d.viz" != *v8)
  {
    __dst.__r_.__value_.__r.__words[2] = 0x900000000000000;
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
    p_dst = &__dst;
    goto LABEL_22;
  }
  std::string __p = &unk_26C67A2B0;
  LODWORD(v38) = 0;
  sub_215B13024((uint64_t)&__p, v44);
  int v32 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
  uint64_t v33 = (std::string *)__dst.__r_.__value_.__r.__words[0];
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v34 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v34 = __dst.__r_.__value_.__l.__size_;
  }
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = 0;
  std::string::reserve(a1, v34);
  if (v32 >= 0) {
    uint64_t v33 = &__dst;
  }
  for (; v34; --v34)
  {
    std::string::value_type v35 = __tolower(v33->__r_.__value_.__s.__data_[0]);
    std::string::push_back(a1, v35);
    uint64_t v33 = (std::string *)((char *)v33 + 1);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v20 = (void *)__dst.__r_.__value_.__r.__words[0];
LABEL_44:
    operator delete(v20);
  }
LABEL_76:
  if (SHIBYTE(v43) < 0) {
    operator delete(v42[0]);
  }
}

void sub_215AD9D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 + 23) < 0) {
    operator delete(*(void **)v33);
  }
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AD9DC4(uint64_t a1, uint64_t a2, std::mutex *a3, const std::__fs::filesystem::path *a4, long long **a5, const std::__fs::filesystem::path *a6)
{
  uint64_t v10 = (uint64_t)(a5 + 2);
  sub_215AF0948((uint64_t)(a5 + 2));
  int v11 = *(unsigned __int8 *)((*((uint64_t (**)(uint64_t))a5[2] + 2))(v10) + 96);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
  size_t v13 = (uint64_t *)(v12 + 80);
  if (!v11) {
    size_t v13 = (uint64_t *)v12;
  }
  uint64_t v14 = *v13;
  std::__fs::filesystem::path::lexically_relative(&v27, a6, a4);
  std::mutex::lock(a3);
  uint64_t v19 = v14;
  if (SHIBYTE(v29) < 0)
  {
    sub_215738B0C(v20, (void *)v28, *((unint64_t *)&v28 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v20 = v28;
    v20[2] = v29;
  }
  int v21 = v30;
  std::string::size_type v15 = *a5;
  if (*((char *)v15 + 23) < 0)
  {
    sub_215738B0C(v22, *(void **)v15, *((void *)v15 + 1));
  }
  else
  {
    long long v16 = *v15;
    v22[2] = *((void **)v15 + 2);
    *(_OWORD *)char v22 = v16;
  }
  LOBYTE(v23[0]) = 0;
  LOBYTE(v24) = 0;
  if (*((unsigned char *)v15 + 48))
  {
    if (*((char *)v15 + 47) < 0)
    {
      sub_215738B0C(v23, *((void **)v15 + 3), *((void *)v15 + 4));
    }
    else
    {
      long long v17 = *(long long *)((char *)v15 + 24);
      v23[2] = *((void **)v15 + 5);
      *(_OWORD *)std::basic_string_view<_CharT, _Traits>::size_type v23 = v17;
    }
    LOBYTE(v24) = 1;
  }
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&v18, v27.__pn_.__r_.__value_.__l.__data_, v27.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    std::__fs::filesystem::path v18 = v27;
  }
  std::__fs::filesystem::path v25 = v18;
  memset(&v18, 0, sizeof(v18));
  std::string::pointer data = a6[1].__pn_.__r_.__value_.__l.__data_;
  sub_215AF0140(v10);
  int v31 = 0;
  operator new();
}

void sub_215ADA6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  if (a38 && a37 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  std::mutex::unlock(v49);
  if (*(char *)(v50 - 225) < 0)
  {
    operator delete(*(void **)(v50 - 248));
    if ((*(char *)(v50 - 201) & 0x80000000) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if ((*(char *)(v50 - 201) & 0x80000000) == 0)
  {
    goto LABEL_10;
  }
  operator delete(*(void **)(v50 - 224));
  _Unwind_Resume(a1);
}

void sub_215ADA900(uint64_t a1, uint64_t a2, void ***a3, int a4, uint64_t a5, uint64_t a6, char a7)
{
  v162[19] = *MEMORY[0x263EF8340];
  switch(a4)
  {
    case 1:
      char v126 = 4;
      int v14 = 1952539694;
      goto LABEL_6;
    case 2:
      char v126 = 4;
      int v14 = 1987273518;
      goto LABEL_6;
    case 3:
      char v126 = 5;
      strcpy((char *)v125, ".json");
      goto LABEL_7;
    case 4:
      char v126 = 4;
      int v14 = 1954051118;
LABEL_6:
      LODWORD(v125[0]) = v14;
      BYTE4(v125[0]) = 0;
LABEL_7:
      sub_215AD98EC((std::string *)v155, (uint64_t)(a3 + 2));
      if (v126 >= 0) {
        std::string::size_type v15 = v125;
      }
      else {
        std::string::size_type v15 = (void **)v125[0];
      }
      if (v126 >= 0) {
        std::string::size_type v16 = v126;
      }
      else {
        std::string::size_type v16 = (std::string::size_type)v125[1];
      }
      long long v17 = std::string::append((std::string *)v155, (const std::string::value_type *)v15, v16);
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      int64_t v124 = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)long long v123 = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      if ((v155[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v155);
        uint64_t v19 = *a3;
        int v20 = *((char *)*a3 + 23);
        if ((v20 & 0x80000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v19 = *a3;
        int v20 = *((char *)*a3 + 23);
        if ((v20 & 0x80000000) == 0)
        {
LABEL_15:
          size_t v21 = v20;
          char v22 = v19;
          goto LABEL_18;
        }
      }
      char v22 = *v19;
      size_t v21 = (size_t)v19[1];
LABEL_18:
      unsigned __int8 v23 = (_BYTE)v19 + 24;
      uint64_t v24 = *((unsigned __int8 *)v19 + 48);
      unint64_t v25 = (unint64_t)(v19 + 3) & 0xFFFFFFFFFFFFFF00;
      uint64_t v26 = v23 & 0xF8;
      if (!v24) {
        uint64_t v26 = 0;
      }
      sub_215AD8E80((uint64_t)v155, a2, v22, v21, v26 | v25, v24);
      memset(&__p, 0, sizeof(__p));
      std::__fs::filesystem::path v27 = (char *)HIBYTE(v124);
      if (v124 >= 0) {
        long long v28 = (char *)v123;
      }
      else {
        long long v28 = (char *)v123[0];
      }
      if (v124 < 0) {
        std::__fs::filesystem::path v27 = (char *)v123[1];
      }
      sub_21577D738((unint64_t)&__p, v28, &v27[(void)v28]);
      if ((v155[23] & 0x80000000) != 0) {
        sub_215738B0C(&__dst, *(void **)v155, *(unint64_t *)&v155[8]);
      }
      else {
        std::__fs::filesystem::path __dst = *(std::__fs::filesystem::path *)v155;
      }
      sub_215ACE714((uint64_t)&__dst, (std::__fs::filesystem::path *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((v155[23] & 0x80000000) == 0) {
          goto LABEL_30;
        }
      }
      else if ((v155[23] & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete(*(void **)v155);
LABEL_30:
      int v29 = sub_215990AC4(0);
      sub_215990288((uint64_t)v138, (uint64_t)(a3 + 2), v29);
      LOBYTE(v132) = 0;
      char v134 = 0;
      v130 = 0;
      long long v131 = 0;
      LOBYTE(v127) = 0;
      unsigned __int8 v129 = 0;
      if (!a7)
      {
        sub_215CF5C8C(&__dst, 0x11u, a5, v155);
        if (v134)
        {
          long long v30 = *(_OWORD *)&v155[8];
          *(_OWORD *)&v155[8] = 0uLL;
          int v31 = (std::__shared_weak_count *)*((void *)&v133 + 1);
          long long v133 = v30;
          if (v31 && !atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        else
        {
          long long v132 = &unk_26C6824A8;
          long long v133 = *(_OWORD *)&v155[8];
          *(_OWORD *)&v155[8] = 0uLL;
          char v134 = 1;
        }
        long long v46 = *(std::__shared_weak_count **)&v155[16];
        if (*(void *)&v155[16]
          && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v155[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        if (!v134)
        {
          exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
          if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
            sub_215738B0C(&__p, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
          }
          else {
            std::string __p = __dst.__pn_;
          }
          sub_215AC8CC8("Failed to write to file: ", &__p, (std::string *)v155);
          std::runtime_error::runtime_error(exception, (const std::string *)v155);
          __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
        }
        unint64_t v47 = (std::string::size_type *)(*(uint64_t (**)(void))(*(void *)v133 + 16))(v133);
        uint64_t v48 = (char *)v47 + *(void *)(*v47 - 24);
        if ((v48[32] & 5) != 0)
        {
          uint64_t v49 = -1;
        }
        else
        {
          (*(void (**)(unsigned char *__return_ptr))(**((void **)v48 + 5) + 32))(v155);
          uint64_t v49 = v162[0];
        }
        uint64_t v50 = v49 & ~(v49 >> 63);
        goto LABEL_233;
      }
      if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
        sub_215738B0C(v155, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
      }
      else {
        *(std::__fs::filesystem::path *)v155 = __dst;
      }
      if (v155[23] >= 0) {
        int v32 = (uint64_t *)v155;
      }
      else {
        int v32 = *(uint64_t **)v155;
      }
      if (v155[23] >= 0) {
        unint64_t v33 = v155[23];
      }
      else {
        unint64_t v33 = *(void *)&v155[8];
      }
      unint64_t v34 = sub_21573A6BC((uint64_t)&__p, v32, v33);
      if ((v155[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v155);
        int8x8_t v35 = *(int8x8_t *)(a6 + 8);
        if (!*(void *)&v35) {
          goto LABEL_95;
        }
      }
      else
      {
        int8x8_t v35 = *(int8x8_t *)(a6 + 8);
        if (!*(void *)&v35) {
          goto LABEL_95;
        }
      }
      uint8x8_t v36 = (uint8x8_t)vcnt_s8(v35);
      v36.i16[0] = vaddlv_u8(v36);
      if (v36.u32[0] > 1uLL)
      {
        unint64_t v37 = v34;
        if (v34 >= *(void *)&v35) {
          unint64_t v37 = v34 % *(void *)&v35;
        }
      }
      else
      {
        unint64_t v37 = (*(void *)&v35 - 1) & v34;
      }
      std::string::size_type v38 = *(uint64_t ***)(*(void *)a6 + 8 * v37);
      if (!v38 || (unsigned __int8 v39 = *v38) == 0)
      {
LABEL_95:
        char v136 = 0;
        LOBYTE(v135) = 0;
        sub_215ADFAA8((uint64_t)&__p, &v135, 24);
        uint64_t v53 = (std::string *)operator new(0x168uLL);
        v53->__r_.__value_.__l.__size_ = 0;
        v53->__r_.__value_.__r.__words[2] = 0;
        v53->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C678638;
        if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          sub_215738B0C(&pn, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
        }
        else {
          std::string pn = __dst.__pn_;
        }
        sub_215AE002C((uint64_t)v155, (uint64_t)&__p);
        if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0) {
          sub_215738B0C(&v53[1], pn.__r_.__value_.__l.__data_, pn.__r_.__value_.__l.__size_);
        }
        else {
          v53[1] = pn;
        }
        sub_215AE002C((uint64_t)&v53[2], (uint64_t)v155);
        v53[13].__r_.__value_.__r.__words[2] = a5;
        v53[14].__r_.__value_.__r.__words[0] = 0;
        v53[14].__r_.__value_.__s.__data_[8] = 0;
        char v54 = (void *)MEMORY[0x263F8C2B8];
        v53[14].__r_.__value_.__s.__data_[16] = 0;
        *(void *)v155 = *v54;
        std::string::size_type v55 = *(void *)v155;
        std::string::size_type v56 = v54[9];
        std::string::size_type v57 = v54[8];
        *(void *)&v155[*(void *)(*(void *)v155 - 24)] = v57;
        std::string::size_type v58 = v56;
        *(void *)&v155[16] = v56;
        *(void *)&v155[24] = MEMORY[0x263F8C318] + 16;
        if (SHIBYTE(v160) < 0) {
          operator delete(*((void **)&v159 + 1));
        }
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x2166C4BF0](v162);
        if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(pn.__r_.__value_.__l.__data_);
        }
        std::__fs::filesystem::path v59 = v131;
        v130 = v53 + 1;
        long long v131 = (std::__shared_weak_count *)v53;
        if (v59 && !atomic_fetch_add(&v59->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
        __p.__r_.__value_.__r.__words[0] = v55;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v55 - 24)) = v57;
        __p.__r_.__value_.__r.__words[2] = v58;
        unint64_t v146 = (void *)(MEMORY[0x263F8C318] + 16);
        if (v153 < 0) {
          operator delete(v152);
        }
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x2166C4BF0](v154);
        if (v136 < 0)
        {
          operator delete((void *)v135);
          if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_112;
          }
        }
        else if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_112:
          *(std::__fs::filesystem::path *)v155 = __dst;
          goto LABEL_115;
        }
        sub_215738B0C(v155, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
LABEL_115:
        if (v155[23] >= 0) {
          uint64_t v60 = (uint64_t *)v155;
        }
        else {
          uint64_t v60 = *(uint64_t **)v155;
        }
        if (v155[23] >= 0) {
          unint64_t v61 = v155[23];
        }
        else {
          unint64_t v61 = *(void *)&v155[8];
        }
        unint64_t v62 = sub_21573A6BC((uint64_t)&__p, v60, v61);
        if ((v155[23] & 0x80000000) != 0)
        {
          operator delete(*(void **)v155);
          unint64_t v63 = *(void *)(a6 + 8);
          if (!v63) {
            goto LABEL_158;
          }
        }
        else
        {
          unint64_t v63 = *(void *)(a6 + 8);
          if (!v63) {
            goto LABEL_158;
          }
        }
        uint8x8_t v64 = (uint8x8_t)vcnt_s8((int8x8_t)v63);
        v64.i16[0] = vaddlv_u8(v64);
        if (v64.u32[0] > 1uLL)
        {
          std::string::size_type v58 = v62;
          if (v62 >= v63) {
            std::string::size_type v58 = v62 % v63;
          }
        }
        else
        {
          std::string::size_type v58 = (v63 - 1) & v62;
        }
        long long v65 = *(uint64_t ***)(*(void *)a6 + 8 * v58);
        if (v65)
        {
          long long v66 = *v65;
          if (*v65)
          {
            if (v64.u32[0] < 2uLL)
            {
              while (1)
              {
                uint64_t v67 = v66[1];
                if (v67 == v62)
                {
                  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    v68.__data_ = (const std::string_view::value_type *)&__dst;
                  }
                  else {
                    v68.__data_ = (const std::string_view::value_type *)__dst.__pn_.__r_.__value_.__r.__words[0];
                  }
                  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    v68.__size_ = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    v68.__size_ = __dst.__pn_.__r_.__value_.__l.__size_;
                  }
                  if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v66 + 2), v68)) {
                    goto LABEL_200;
                  }
                }
                else if ((v67 & (v63 - 1)) != v58)
                {
                  goto LABEL_158;
                }
                long long v66 = (uint64_t *)*v66;
                if (!v66) {
                  goto LABEL_158;
                }
              }
            }
            do
            {
              unint64_t v69 = v66[1];
              if (v69 == v62)
              {
                if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  v70.__data_ = (const std::string_view::value_type *)&__dst;
                }
                else {
                  v70.__data_ = (const std::string_view::value_type *)__dst.__pn_.__r_.__value_.__r.__words[0];
                }
                if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  v70.__size_ = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
                }
                else {
                  v70.__size_ = __dst.__pn_.__r_.__value_.__l.__size_;
                }
                if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v66 + 2), v70)) {
                  goto LABEL_200;
                }
              }
              else
              {
                if (v69 >= v63) {
                  v69 %= v63;
                }
                if (v69 != v58) {
                  break;
                }
              }
              long long v66 = (uint64_t *)*v66;
            }
            while (v66);
          }
        }
LABEL_158:
        char v71 = operator new(0x38uLL);
        *(void *)v155 = v71;
        *(void *)&v155[8] = a6 + 16;
        v155[16] = 0;
        *char v71 = 0;
        v71[1] = v62;
        uint64_t v72 = v71 + 2;
        if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_215738B0C(v72, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
        }
        else
        {
          *(_OWORD *)uint64_t v72 = *(_OWORD *)&__dst.__pn_.__r_.__value_.__l.__data_;
          v71[4] = *((void *)&__dst.__pn_.__r_.__value_.__l + 2);
        }
        v71[5] = 0;
        v71[6] = 0;
        v155[16] = 1;
        float v73 = (float)(unint64_t)(*(void *)(a6 + 24) + 1);
        float v74 = *(float *)(a6 + 32);
        if (!v63 || (float)(v74 * (float)v63) < v73)
        {
          BOOL v75 = v63 < 3 || (v63 & (v63 - 1)) != 0;
          unint64_t v76 = v75 | (2 * v63);
          unint64_t v77 = vcvtps_u32_f32(v73 / v74);
          if (v76 <= v77) {
            size_t prime = v77;
          }
          else {
            size_t prime = v76;
          }
          if (prime == 1)
          {
            size_t prime = 2;
          }
          else if ((prime & (prime - 1)) != 0)
          {
            size_t prime = std::__next_prime(prime);
          }
          int8x8_t v79 = *(int8x8_t *)(a6 + 8);
          if (prime > *(void *)&v79) {
            goto LABEL_174;
          }
          if (prime < *(void *)&v79)
          {
            unint64_t v80 = vcvtps_u32_f32((float)*(unint64_t *)(a6 + 24) / *(float *)(a6 + 32));
            if (*(void *)&v79 < 3uLL
              || (uint8x8_t v81 = (uint8x8_t)vcnt_s8(v79), v81.i16[0] = vaddlv_u8(v81), v81.u32[0] > 1uLL))
            {
              unint64_t v80 = std::__next_prime(v80);
            }
            else
            {
              uint64_t v82 = 1 << -(char)__clz(v80 - 1);
              if (v80 >= 2) {
                unint64_t v80 = v82;
              }
            }
            if (prime <= v80) {
              size_t prime = v80;
            }
            if (prime < *(void *)&v79) {
LABEL_174:
            }
              sub_21573BDA8(a6, prime);
          }
          unint64_t v63 = *(void *)(a6 + 8);
          unint64_t v83 = v63 - 1;
          if ((v63 & (v63 - 1)) == 0)
          {
            std::string::size_type v58 = v83 & v62;
            unint64_t v84 = *(void **)(*(void *)a6 + 8 * (v83 & v62));
            char v85 = *(void **)v155;
            if (!v84)
            {
LABEL_193:
              void *v85 = *(void *)(a6 + 16);
              *(void *)(a6 + 16) = *(void *)v155;
              *(void *)(*(void *)a6 + 8 * v58) = a6 + 16;
              if (**(void **)v155)
              {
                unint64_t v86 = *(void *)(**(void **)v155 + 8);
                if ((v63 & (v63 - 1)) != 0)
                {
                  if (v86 >= v63) {
                    v86 %= v63;
                  }
                }
                else
                {
                  v86 &= v63 - 1;
                }
                *(void *)(*(void *)a6 + 8 * v86) = *(void *)v155;
              }
              goto LABEL_199;
            }
LABEL_191:
            void *v85 = *v84;
            *unint64_t v84 = *(void *)v155;
LABEL_199:
            long long v66 = *(uint64_t **)v155;
            ++*(void *)(a6 + 24);
LABEL_200:
            uint64_t v88 = (uint64_t)v130;
            unint64_t v87 = v131;
            if (v131) {
              atomic_fetch_add_explicit(&v131->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            uint64_t v45 = (std::__shared_weak_count *)v66[6];
            v66[5] = v88;
            v66[6] = (uint64_t)v87;
            if (v45) {
              goto LABEL_203;
            }
LABEL_204:
            uint64_t v89 = (uint64_t)v130;
            std::string::pointer data = v130[13].__r_.__value_.__l.__data_;
            if (!v130[13].__r_.__value_.__s.__data_[16]) {
              goto LABEL_212;
            }
LABEL_205:
            uint64_t v50 = (uint64_t)&data[*(void *)(v89 + 320)];
            *(void *)v155 = v50;
            v155[8] = 0;
            LOBYTE(v156) = 0;
            int v91 = v129;
            if (v129) {
              goto LABEL_223;
            }
LABEL_206:
            if (v91)
            {
              long long v92 = *(_OWORD *)&v155[16];
              *(void *)&v155[24] = 0;
              *(void *)&v155[16] = 0;
              std::__fs::filesystem::path::__string_view v93 = (std::__shared_weak_count *)*((void *)&v128 + 1);
              long long v128 = v92;
              if (!v93 || atomic_fetch_add(&v93->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
                goto LABEL_228;
              }
              ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
              std::__shared_weak_count::__release_weak(v93);
              unint64_t v47 = &v130[1].__r_.__value_.__r.__words[2];
              if ((_BYTE)v156) {
                goto LABEL_229;
              }
            }
            else
            {
              unint64_t v47 = &v130[1].__r_.__value_.__r.__words[2];
            }
            goto LABEL_233;
          }
          if (v62 >= v63)
          {
            std::string::size_type v58 = v62 % v63;
            unint64_t v84 = *(void **)(*(void *)a6 + 8 * (v62 % v63));
            char v85 = *(void **)v155;
            if (!v84) {
              goto LABEL_193;
            }
            goto LABEL_191;
          }
          std::string::size_type v58 = v62;
        }
        unint64_t v84 = *(void **)(*(void *)a6 + 8 * v58);
        char v85 = *(void **)v155;
        if (!v84) {
          goto LABEL_193;
        }
        goto LABEL_191;
      }
      if (v36.u32[0] < 2uLL)
      {
        uint64_t v40 = *(void *)&v35 - 1;
        while (1)
        {
          uint64_t v41 = v39[1];
          if (v41 == v34)
          {
            if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v42.__data_ = (const std::string_view::value_type *)&__dst;
            }
            else {
              v42.__data_ = (const std::string_view::value_type *)__dst.__pn_.__r_.__value_.__r.__words[0];
            }
            if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v42.__size_ = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
            }
            else {
              v42.__size_ = __dst.__pn_.__r_.__value_.__l.__size_;
            }
            if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v39 + 2), v42)) {
              goto LABEL_68;
            }
          }
          else if ((v41 & v40) != v37)
          {
            goto LABEL_95;
          }
          unsigned __int8 v39 = (uint64_t *)*v39;
          if (!v39) {
            goto LABEL_95;
          }
        }
      }
      break;
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 130, (uint64_t)"", 0, (uint64_t)"Unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
  while (1)
  {
    unint64_t v51 = v39[1];
    if (v51 == v34) {
      break;
    }
    if (v51 >= *(void *)&v35) {
      v51 %= *(void *)&v35;
    }
    if (v51 != v37) {
      goto LABEL_95;
    }
LABEL_83:
    unsigned __int8 v39 = (uint64_t *)*v39;
    if (!v39) {
      goto LABEL_95;
    }
  }
  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v52.__data_ = (const std::string_view::value_type *)&__dst;
  }
  else {
    v52.__data_ = (const std::string_view::value_type *)__dst.__pn_.__r_.__value_.__r.__words[0];
  }
  if ((__dst.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v52.__size_ = HIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]);
  }
  else {
    v52.__size_ = __dst.__pn_.__r_.__value_.__l.__size_;
  }
  if (std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)(v39 + 2), v52)) {
    goto LABEL_83;
  }
LABEL_68:
  uint64_t v44 = v39[5];
  uint64_t v43 = (std::__shared_weak_count *)v39[6];
  if (v43) {
    atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v45 = v131;
  v130 = (std::string *)v44;
  long long v131 = v43;
  if (!v45) {
    goto LABEL_204;
  }
LABEL_203:
  if (atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_204;
  }
  ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
  std::__shared_weak_count::__release_weak(v45);
  uint64_t v89 = (uint64_t)v130;
  std::string::pointer data = v130[13].__r_.__value_.__l.__data_;
  if (v130[13].__r_.__value_.__s.__data_[16]) {
    goto LABEL_205;
  }
LABEL_212:
  sub_215CF5C8C((const std::__fs::filesystem::path *)v89, 0x11u, *(void *)(v89 + 304), &__p);
  if (!__p.__r_.__value_.__l.__size_)
  {
    v118 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(v89 + 23) < 0)
    {
      sub_215738B0C(&pn, *(void **)v89, *(void *)(v89 + 8));
    }
    else
    {
      long long v119 = *(_OWORD *)v89;
      pn.__r_.__value_.__r.__words[2] = *(void *)(v89 + 16);
      *(_OWORD *)&pn.__r_.__value_.__l.__data_ = v119;
    }
    sub_215AC8CC8("Failed to write to file: ", &pn, (std::string *)v155);
    std::runtime_error::runtime_error(v118, (const std::string *)v155);
    __cxa_throw(v118, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  long long v94 = (void *)(*(uint64_t (**)(std::string::size_type))(*(void *)__p.__r_.__value_.__l.__size_ + 16))(__p.__r_.__value_.__l.__size_);
  long long v95 = (char *)v94 + *(void *)(*v94 - 24);
  if ((v95[32] & 5) != 0)
  {
    uint64_t v96 = -1;
  }
  else
  {
    (*(void (**)(unsigned char *__return_ptr))(**((void **)v95 + 5) + 32))(v155);
    uint64_t v96 = v162[0];
  }
  uint64_t v97 = v96 & ~(v96 >> 63);
  *(void *)(v89 + 320) = v97;
  *(unsigned char *)(v89 + 328) = 1;
  *(void *)v155 = &data[v97];
  *(void *)&v155[8] = &unk_26C6824A8;
  *(_OWORD *)&v155[16] = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
  if (__p.__r_.__value_.__r.__words[2])
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 1uLL, memory_order_relaxed);
    std::basic_string_view<_CharT, _Traits>::size_type v98 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
    LOBYTE(v156) = 1;
    if (__p.__r_.__value_.__r.__words[2]
      && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
      std::__shared_weak_count::__release_weak(v98);
    }
  }
  else
  {
    LOBYTE(v156) = 1;
  }
  uint64_t v50 = *(void *)v155;
  int v91 = v129;
  if (v129 == v156) {
    goto LABEL_206;
  }
LABEL_223:
  if (v91)
  {
    char v99 = (std::__shared_weak_count *)*((void *)&v128 + 1);
    if (*((void *)&v128 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v128 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
      std::__shared_weak_count::__release_weak(v99);
    }
    unsigned __int8 v129 = 0;
LABEL_228:
    unint64_t v47 = &v130[1].__r_.__value_.__r.__words[2];
    if ((_BYTE)v156)
    {
LABEL_229:
      long long v100 = *(std::__shared_weak_count **)&v155[24];
      if (*(void *)&v155[24]
        && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v155[24] + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
        std::__shared_weak_count::__release_weak(v100);
      }
    }
  }
  else
  {
    uint64_t v127 = &unk_26C6824A8;
    long long v128 = *(_OWORD *)&v155[16];
    *(void *)&v155[16] = 0;
    *(void *)&v155[24] = 0;
    unsigned __int8 v129 = 1;
    unint64_t v47 = &v130[1].__r_.__value_.__r.__words[2];
    if ((_BYTE)v156) {
      goto LABEL_229;
    }
  }
LABEL_233:
  char v101 = (char *)v47 + *(void *)(*v47 - 24);
  if ((v101[32] & 5) != 0)
  {
    long long v160 = 0u;
    long long v161 = 0u;
    long long v158 = 0u;
    long long v159 = 0u;
    long long v156 = 0u;
    long long v157 = 0u;
    memset(v155, 0, sizeof(v155));
    v162[0] = -1;
  }
  else
  {
    (*(void (**)(unsigned char *__return_ptr))(**((void **)v101 + 5) + 32))(v155);
  }
  if (a4 != 4 && a4 != 2)
  {
    if (a4 == 1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C685A00;
      __p.__r_.__value_.__l.__size_ = 1;
      __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&unk_26C685B50;
      operator new();
    }
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 445, (uint64_t)"", 0, (uint64_t)"Unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  pn.__r_.__value_.__r.__words[0] = 0x400000001;
  sub_215DFC874((uint64_t)&__p, (uint64_t *)&pn, (uint64_t)v47, 0, 0, 0);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C678478;
  __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&unk_26C6785C8;
  if (v150)
  {
    pn.__r_.__value_.__s.__data_[0] = v147;
    sub_215731D94(v146, (uint64_t)&pn, 1);
  }
  std::ostream::operator<<();
  ++v150;
  sub_215AE4D34((uint64_t)&__p, (uint64_t)v138);
  std::string::value_type v102 = v149;
  if (v150)
  {
    pn.__r_.__value_.__s.__data_[0] = v147;
    sub_215731D94(v146, (uint64_t)&pn, 1);
  }
  pn.__r_.__value_.__s.__data_[0] = v102;
  sub_215731D94(v146, (uint64_t)&pn, 1);
  uint64_t v103 = v150 + 1;
  uint64_t v150 = 0;
  uint64_t v151 = v103;
  pn.__r_.__value_.__s.__data_[0] = v148;
  sub_215731D94(v146, (uint64_t)&pn, 1);
  uint64_t v104 = (uint64_t)v130;
  if (v130)
  {
    unint64_t v105 = v130[13].__r_.__value_.__r.__words[0];
    if (v105 <= 0x19000)
    {
      std::basic_string_view<_CharT, _Traits>::size_type v107 = (char *)v47 + *(void *)(*v47 - 24);
      if ((v107[32] & 5) != 0)
      {
        uint64_t v108 = -1;
      }
      else
      {
        (*(void (**)(std::string *__return_ptr))(**((void **)v107 + 5) + 32))(&__p);
        uint64_t v108 = v154[0];
        unint64_t v105 = *(void *)(v104 + 312);
      }
      *(void *)(v104 + 312) = v108 + v105 - v162[0];
    }
    else
    {
      __p.__r_.__value_.__s.__data_[0] = 0;
      LOBYTE(v146) = 0;
      if (v129)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C6824A8;
        *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = v128;
        long long v128 = 0uLL;
        LOBYTE(v146) = 1;
      }
      sub_215AD3D18((uint64_t)v130, (uint64_t)&__p);
      if ((_BYTE)v146)
      {
        std::basic_string_view<_CharT, _Traits>::size_type v106 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
        if (__p.__r_.__value_.__r.__words[2])
        {
          if (!atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
            std::__shared_weak_count::__release_weak(v106);
          }
        }
      }
    }
  }
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&v120, __dst.__pn_.__r_.__value_.__l.__data_, __dst.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    std::__fs::filesystem::path v120 = __dst;
  }
  uint64_t v121 = v50;
  if (v129)
  {
    int v109 = (std::__shared_weak_count *)*((void *)&v128 + 1);
    if (*((void *)&v128 + 1))
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v128 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
        std::__shared_weak_count::__release_weak(v109);
      }
    }
  }
  v110 = v131;
  if (v131 && !atomic_fetch_add(&v131->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
    std::__shared_weak_count::__release_weak(v110);
  }
  if (v134)
  {
    char v111 = (std::__shared_weak_count *)*((void *)&v133 + 1);
    if (*((void *)&v133 + 1))
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v133 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)&v120.__pn_.__r_.__value_.__l.__data_;
  uint64_t v112 = v121;
  *(void *)(a1 + 16) = *((void *)&v120.__pn_.__r_.__value_.__l + 2);
  *(void *)(a1 + 24) = v112;
  *(unsigned char *)(a1 + 32) = 1;
  uint64_t v113 = (char *)v143;
  if (v143)
  {
    uint64_t v114 = v144;
    uint64_t v115 = v143;
    if (v144 != v143)
    {
      do
      {
        int v116 = (std::__shared_weak_count *)*((void *)v114 - 1);
        if (v116 && !atomic_fetch_add(&v116->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v114 -= 16;
      }
      while (v114 != v113);
      uint64_t v115 = v143;
    }
    uint64_t v144 = v113;
    operator delete(v115);
  }
  if (v142 != -1) {
    ((void (*)(unsigned char *, uint64_t *))off_26C678678[v142])(v155, &v141);
  }
  int v142 = -1;
  if ((v140 & 0x80000000) == 0)
  {
    if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_283;
    }
LABEL_287:
    operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
    if (SHIBYTE(v124) < 0) {
      goto LABEL_288;
    }
LABEL_284:
    if ((v126 & 0x80000000) == 0) {
      return;
    }
LABEL_289:
    operator delete(v125[0]);
    return;
  }
  operator delete(v139);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_287;
  }
LABEL_283:
  if ((SHIBYTE(v124) & 0x80000000) == 0) {
    goto LABEL_284;
  }
LABEL_288:
  operator delete(v123[0]);
  if (v126 < 0) {
    goto LABEL_289;
  }
}

void sub_215ADC148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,uint64_t a34,uint64_t a35,char a36,int a37,__int16 a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,void *a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61)
{
  __cxa_free_exception(v61);
  sub_215CF6268((uint64_t)&a61);
  if (a36) {
    sub_215CF6268((uint64_t)&a33);
  }
  sub_215733368((uint64_t)&a38);
  if (a43) {
    sub_215CF6268((uint64_t)&a40);
  }
  sub_215AC31A4((uint64_t)&a50);
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_215ADC400(std::string *a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v9 = *a3;
  if (*(char *)(*a3 + 23) < 0)
  {
    int v11 = *(void **)v9;
    size_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    size_t v10 = *(unsigned __int8 *)(*a3 + 23);
    int v11 = (void *)*a3;
  }
  unsigned __int8 v12 = v9 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v9 + 48);
  unint64_t v14 = (v9 + 24) & 0xFFFFFFFFFFFFFF00;
  uint64_t v15 = v12 & 0xF8;
  if (!v13) {
    uint64_t v15 = 0;
  }
  sub_215AD8E80((uint64_t)&__dst, a2, v11, v10, v15 | v14, v13);
  uint64_t v17 = a3[2];
  uint64_t v16 = (uint64_t)(a3 + 2);
  int v18 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t))(v17 + 16))(v16) + 96);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
  if (v18) {
    int v20 = (uint64_t *)(v19 + 80);
  }
  else {
    int v20 = (uint64_t *)v19;
  }
  sub_215AD98EC(&pn, v16);
  if ((pn.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v21 = &pn;
  }
  else {
    size_t v21 = (std::string *)pn.__r_.__value_.__r.__words[0];
  }
  if ((pn.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(pn.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = pn.__r_.__value_.__l.__size_;
  }
  int v23 = a4 - 1;
  switch(v23)
  {
    case 0:
      uint64_t v24 = 4;
      char v49 = 4;
      int v25 = 1952539694;
      goto LABEL_20;
    case 1:
      uint64_t v24 = 4;
      char v49 = 4;
      int v25 = 1987273518;
      goto LABEL_20;
    case 2:
      uint64_t v24 = 5;
      char v49 = 5;
      strcpy((char *)__p, ".json");
      goto LABEL_21;
    case 3:
      uint64_t v24 = 4;
      char v49 = 4;
      int v25 = 1954051118;
LABEL_20:
      LODWORD(__p[0]) = v25;
      BYTE4(__p[0]) = 0;
LABEL_21:
      sub_215AD938C((uint64_t)&v40, (uint64_t)&__dst, v20, (uint64_t)v21, size, (uint64_t)__p, v24, a5);
      if (v49 < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_23:
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_33;
        }
      }
      else if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_23;
      }
      operator delete(pn.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_24;
      }
LABEL_33:
      operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_24:
      sub_215CF5C8C(&v40, 0x30u, a5, &v37);
      if (!v38)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        if (SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) < 0) {
          sub_215738B0C(&pn, v40.__pn_.__r_.__value_.__l.__data_, v40.__pn_.__r_.__value_.__l.__size_);
        }
        else {
          std::string pn = v40.__pn_;
        }
        sub_215AC8CC8("Failed to write to file: ", &pn, &__dst);
        std::runtime_error::runtime_error(exception, &__dst);
        __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
      }
      return;
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 130, (uint64_t)"", 0, (uint64_t)"Unsupported format", 18, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
  uint64_t v26 = sub_215990AC4(0);
  sub_215990288((uint64_t)__p, v16, v26);
  switch(v23)
  {
    case 0:
      (*(void (**)(uint64_t))(*(void *)v38 + 16))(v38);
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C685A00;
      __dst.__r_.__value_.__l.__size_ = 1;
      __dst.__r_.__value_.__r.__words[2] = (std::string::size_type)&unk_26C685B50;
      operator new();
    case 1:
    case 3:
      uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 16))(v38);
      pn.__r_.__value_.__r.__words[0] = 0x400000001;
      sub_215DFC874((uint64_t)&__dst, (uint64_t *)&pn, v27, 0, 0, 0);
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C678478;
      __dst.__r_.__value_.__r.__words[2] = (std::string::size_type)&unk_26C6785C8;
      if (v46)
      {
        pn.__r_.__value_.__s.__data_[0] = v43;
        sub_215731D94(v42, (uint64_t)&pn, 1);
      }
      std::ostream::operator<<();
      ++v46;
      sub_215AE4D34((uint64_t)&__dst, (uint64_t)__p);
      std::string::value_type v28 = v45;
      if (v46)
      {
        pn.__r_.__value_.__s.__data_[0] = v43;
        sub_215731D94(v42, (uint64_t)&pn, 1);
      }
      pn.__r_.__value_.__s.__data_[0] = v28;
      sub_215731D94(v42, (uint64_t)&pn, 1);
      int v29 = (void *)(v46 + 1);
      uint64_t v46 = 0;
      unint64_t v47 = v29;
      pn.__r_.__value_.__s.__data_[0] = v44;
      sub_215731D94(v42, (uint64_t)&pn, 1);
      if (SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) < 0) {
        sub_215738B0C(&__dst, v40.__pn_.__r_.__value_.__l.__data_, v40.__pn_.__r_.__value_.__l.__size_);
      }
      else {
        std::string __dst = v40.__pn_;
      }
      *a1 = __dst;
      a1[1].__r_.__value_.__r.__words[0] = 0;
      a1[1].__r_.__value_.__s.__data_[8] = 1;
      long long v30 = (char *)v53;
      if (v53)
      {
        int v31 = v54;
        int v32 = v53;
        if (v54 != v53)
        {
          do
          {
            unint64_t v33 = (std::__shared_weak_count *)*((void *)v31 - 1);
            if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
              std::__shared_weak_count::__release_weak(v33);
            }
            v31 -= 16;
          }
          while (v31 != v30);
          int v32 = v53;
        }
        char v54 = v30;
        operator delete(v32);
      }
      if (v52 != -1) {
        ((void (*)(std::string *, uint64_t *))off_26C678678[v52])(&__dst, &v51);
      }
      int v52 = -1;
      if (v50 < 0)
      {
        operator delete(__p[1]);
        unint64_t v34 = v39;
        if (!v39) {
          goto LABEL_55;
        }
      }
      else
      {
        unint64_t v34 = v39;
        if (!v39)
        {
LABEL_55:
          if ((SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return;
          }
          goto LABEL_56;
        }
      }
      if (atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_55;
      }
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      if (SHIBYTE(v40.__pn_.__r_.__value_.__r.__words[2]) < 0) {
LABEL_56:
      }
        operator delete(v40.__pn_.__r_.__value_.__l.__data_);
      return;
    case 2:
      pn.__r_.__value_.__r.__words[0] = 0x300000001;
      sub_215DEBAC0(&__dst, (uint64_t *)&pn);
    default:
      uint8x8_t v36 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v36, "No method to save given format");
      v36->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(v36, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
}

void sub_215ADD104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215ADD2C8(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, std::string *a7@<X8>)
{
  uint64_t v42 = a1;
  std::string::value_type v43 = a2;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v46 = a6;
  int v47 = 0;
  char v48 = 0;
  uint64_t v49 = 0x400000004;
  int v50 = 3;
  if (a3)
  {
    a7->__r_.__value_.__s.__data_[0] = 0;
    a7[1].__r_.__value_.__s.__data_[8] = 0;
    return;
  }
  if ((a3 & 0x40) == 0) {
    goto LABEL_22;
  }
  sub_215AF0948((uint64_t)(a2 + 2));
  uint64_t v9 = sub_215AB5250(7u);
  if (!v10)
  {
    BOOL v18 = 0;
    if ((v40 & 0x80) != 0) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
  int v11 = v9;
  uint64_t v12 = v40;
  if ((v40 & 0x80u) == 0) {
    size_t v13 = v40;
  }
  else {
    size_t v13 = __n;
  }
  uint64_t v14 = v9[23];
  int v15 = (char)v14;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *((void *)v9 + 1);
  }
  if (v13 != v14) {
    goto LABEL_27;
  }
  if (v15 >= 0) {
    uint64_t v16 = v9;
  }
  else {
    uint64_t v16 = *(char **)v9;
  }
  if ((char)v40 < 0)
  {
    if (memcmp(__p, v16, __n))
    {
      operator delete(__p);
      if ((a3 & 4) == 0) {
        goto LABEL_38;
      }
      goto LABEL_23;
    }
  }
  else if (v40)
  {
    p_p = &__p;
    while (*(unsigned __int8 *)p_p == *v16)
    {
      p_p = (void **)((char *)p_p + 1);
      ++v16;
      if (!--v12) {
        goto LABEL_50;
      }
    }
LABEL_27:
    BOOL v18 = 0;
    if ((v40 & 0x80) != 0) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
LABEL_50:
  BOOL v18 = v41 == *((_DWORD *)v11 + 6);
  if ((v40 & 0x80) != 0)
  {
LABEL_28:
    operator delete(__p);
    if (v18) {
      goto LABEL_29;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (v18)
  {
LABEL_29:
    sub_215AE059C((uint64_t)&v42);
    if (v49 != 6)
    {
      if (v49 == 5)
      {
        uint64_t v19 = v42;
        int v20 = v43;
        uint64_t v21 = v44;
        char v22 = a7;
        unint64_t v23 = 64;
        goto LABEL_32;
      }
      goto LABEL_63;
    }
    uint64_t v24 = v42;
    int v25 = v43;
    uint64_t v26 = v44;
    uint64_t v27 = (uint64_t)a7;
    unint64_t v28 = 64;
LABEL_35:
    sub_215ADF4B4(v27, v24, v25, v28, v26);
    return;
  }
LABEL_22:
  if ((a3 & 4) == 0) {
    goto LABEL_38;
  }
LABEL_23:
  sub_215AE059C((uint64_t)&v42);
  if (v48)
  {
    sub_215AE059C((uint64_t)&v42);
    if (v49 != 6)
    {
      if (v49 == 5)
      {
        uint64_t v19 = v42;
        int v20 = v43;
        uint64_t v21 = v44;
        char v22 = a7;
        unint64_t v23 = a3;
LABEL_32:
        sub_215ADD858(v22, v19, v20, v23, v21);
        return;
      }
LABEL_63:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 593, (uint64_t)"", 0, (uint64_t)"No known common format", 22, (void (*)(void **))sub_215E1ABD8);
      abort();
    }
    uint64_t v24 = v42;
    int v25 = v43;
    uint64_t v26 = v44;
    uint64_t v27 = (uint64_t)a7;
    unint64_t v28 = a3;
    goto LABEL_35;
  }
LABEL_38:
  if ((a3 & 0x38) == 0)
  {
    sub_215AE059C((uint64_t)&v42);
    uint64_t v29 = v42;
    long long v30 = (void ***)v43;
    uint64_t v31 = v44;
    if (BYTE1(v47))
    {
      if ((a3 & 0x100) != 0)
      {
LABEL_61:
        uint8x8_t v36 = a7;
        int v37 = 1;
        goto LABEL_62;
      }
LABEL_46:
      uint64_t v33 = v45;
      char v34 = v46;
      uint64_t v35 = (uint64_t)a7;
      int v32 = 1;
      goto LABEL_49;
    }
LABEL_60:
    if ((a3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_46;
  }
  if ((a3 & 0x10) != 0)
  {
    uint64_t v29 = v42;
    long long v30 = (void ***)v43;
    uint64_t v31 = v44;
    if ((a3 & 0x100) == 0)
    {
      uint64_t v33 = v45;
      char v34 = v46;
      uint64_t v35 = (uint64_t)a7;
      int v32 = 2;
      goto LABEL_49;
    }
    uint8x8_t v36 = a7;
    int v37 = 2;
  }
  else
  {
    if ((a3 & 0x20) == 0)
    {
      sub_215AE059C((uint64_t)&v42);
      if (BYTE1(v47))
      {
        uint64_t v29 = v42;
        long long v30 = (void ***)v43;
        uint64_t v31 = v44;
        if ((a3 & 0x100) == 0)
        {
LABEL_43:
          int v32 = HIDWORD(v49);
          uint64_t v33 = v45;
          char v34 = v46;
          uint64_t v35 = (uint64_t)a7;
LABEL_49:
          sub_215ADA900(v35, v29, v30, v32, v31, v33, v34);
          return;
        }
        goto LABEL_56;
      }
      sub_215AE059C((uint64_t)&v42);
      if (BYTE2(v47))
      {
        uint64_t v29 = v42;
        long long v30 = (void ***)v43;
        uint64_t v31 = v44;
        if ((a3 & 0x80) != 0) {
          goto LABEL_43;
        }
        goto LABEL_56;
      }
      uint64_t v29 = v42;
      long long v30 = (void ***)v43;
      uint64_t v31 = v44;
      if ((a3 & 2) == 0)
      {
        if ((a3 & 0x80) != 0) {
          goto LABEL_43;
        }
LABEL_56:
        int v37 = v50;
        uint8x8_t v36 = a7;
        goto LABEL_62;
      }
      goto LABEL_60;
    }
    uint64_t v29 = v42;
    long long v30 = (void ***)v43;
    uint64_t v31 = v44;
    uint8x8_t v36 = a7;
    int v37 = 3;
  }
LABEL_62:
  sub_215ADC400(v36, v29, v30, v37, v31);
}

void sub_215ADD644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215ADD660(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, std::string *a7@<X8>)
{
  uint64_t v21 = a1;
  char v22 = a2;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  int v26 = 0;
  char v27 = 0;
  uint64_t v28 = 0x400000004;
  int v29 = 3;
  if ((a3 & 2) != 0)
  {
LABEL_9:
    uint64_t v12 = a7;
    int v13 = 1;
    uint64_t v14 = a4;
LABEL_11:
    sub_215ADC400(v12, a1, a2, v13, v14);
    return;
  }
  if ((a3 & 8) != 0) {
    goto LABEL_12;
  }
  if ((a3 & 0x10) != 0)
  {
    uint64_t v12 = a7;
    int v13 = 2;
    uint64_t v14 = a4;
    goto LABEL_11;
  }
  if ((a3 & 0x20) != 0)
  {
LABEL_12:
    uint64_t v12 = a7;
    int v13 = 3;
    uint64_t v14 = a4;
    goto LABEL_11;
  }
  if ((a3 & 0x40) == 0)
  {
    if ((a3 & 4) == 0)
    {
      if ((a3 & 1) == 0)
      {
        sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 768, (uint64_t)"", 0, (uint64_t)"Flag not supported for ExportLargeData", 38, (void (*)(void **))sub_215E1ABD8);
        abort();
      }
      a7->__r_.__value_.__s.__data_[0] = 0;
      a7[1].__r_.__value_.__s.__data_[8] = 0;
      return;
    }
    goto LABEL_9;
  }
  sub_215AE059C((uint64_t)&v21);
  if (v28 == 6)
  {
    uint64_t v18 = v21;
    uint64_t v19 = v22;
    uint64_t v20 = v23;
    sub_215ADF4B4((uint64_t)a7, v18, v19, a3, v20);
  }
  else
  {
    if (v28 != 5)
    {
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 593, (uint64_t)"", 0, (uint64_t)"No known common format", 22, (void (*)(void **))sub_215E1ABD8);
      abort();
    }
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    sub_215ADD858(a7, v15, v16, a3, v17);
  }
}

void sub_215ADD858(std::string *a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  char v10 = (const void *)a3[3];
  int v11 = (std::__shared_weak_count *)a3[4];
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v10)
  {
    BOOL v12 = __dynamic_cast(v10, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v11)
    {
LABEL_8:
      if (v12) {
        goto LABEL_9;
      }
LABEL_15:
      int v13 = 0;
      uint64_t v35 = 0;
      uint8x8_t v36 = 0;
LABEL_16:
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 808, (uint64_t)"image_data_ptr", 14, (uint64_t)"ExportImageData requires data to be ImageData", 45, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      uint64_t v14 = 0;
      unsigned int v15 = MEMORY[0x38] - 1;
      goto LABEL_18;
    }
  }
  else
  {
    BOOL v12 = 0;
    if (!v11) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!v12) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v14 = a3[3];
  int v13 = (std::__shared_weak_count *)a3[4];
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v35 = v14;
  uint8x8_t v36 = v13;
  if (!v14) {
    goto LABEL_16;
  }
  unsigned int v15 = *(_DWORD *)(v14 + 56) - 1;
  if (v15 <= 0x1F)
  {
LABEL_18:
    uint64_t v16 = ".png";
    int v17 = 3;
    uint64_t v18 = 4;
    switch(v15)
    {
      case 0u:
      case 1u:
      case 0x14u:
      case 0x15u:
      case 0x1Du:
        goto LABEL_21;
      case 2u:
      case 3u:
        uint64_t v16 = ".tiff";
        int v17 = 5;
        uint64_t v18 = 5;
        goto LABEL_21;
      case 0x16u:
      case 0x17u:
      case 0x1Cu:
      case 0x1Eu:
      case 0x1Fu:
        uint64_t v16 = ".tiff";
        uint64_t v18 = 5;
        int v17 = 5;
LABEL_21:
        sub_215ADE0C8((char *)v31, a2, a3, (uint64_t)v16, v18, a4, a5);
        sub_215CF5C8C(&v34, 0x30u, a5, &v28);
        uint64_t v19 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v29 + 16))(v29);
        v48[0] = &unk_26C65F5B0;
        uint64_t v20 = *(void *)(v14 + 16);
        uint64_t v21 = *(std::__shared_weak_count **)(v14 + 24);
        if (v21)
        {
          atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
          uint64_t v22 = *(void *)(v14 + 48);
          int v23 = *(_DWORD *)(v14 + 56);
          __int16 v24 = *(_WORD *)(v14 + 60);
          atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        else
        {
          uint64_t v22 = *(void *)(v14 + 48);
          int v23 = *(_DWORD *)(v14 + 56);
          __int16 v24 = *(_WORD *)(v14 + 60);
        }
        v48[1] = v20;
        std::string __p = v21;
        uint64_t v25 = *(void *)(v14 + 32);
        int v51 = *(_DWORD *)(v14 + 40);
        uint64_t v50 = v25;
        uint64_t v52 = v22;
        int v53 = v23;
        __int16 v54 = v24;
        if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
        sub_215BA1938(v48, v19, v17, (uint64_t)v55);
        int v26 = (std::__shared_weak_count *)__p;
        if (__p && !atomic_fetch_add((atomic_ullong *volatile)__p + 1, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
          if (v56) {
            goto LABEL_30;
          }
        }
        else if (v56)
        {
LABEL_30:
          char v47 = 1;
          sub_2159A6928((uint64_t)&v37);
          if (!v47 && v46)
          {
            if (v45)
            {
              if (SHIBYTE(v44) < 0) {
                operator delete(v43[0]);
              }
              if (v42 < 0) {
                operator delete(v41);
              }
            }
            if (v40 && v39 < 0) {
              operator delete(v38);
            }
          }
          if (SHIBYTE(v32) < 0)
          {
            sub_215738B0C(a1, v31[0], (unint64_t)v31[1]);
          }
          else
          {
            *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)v31;
            a1->__r_.__value_.__r.__words[2] = v32;
          }
          a1[1].__r_.__value_.__r.__words[0] = v33;
          a1[1].__r_.__value_.__s.__data_[8] = 1;
          char v27 = v30;
          if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
            if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_49:
              if ((SHIBYTE(v32) & 0x80000000) == 0)
              {
LABEL_50:
                int v13 = v36;
                goto LABEL_51;
              }
LABEL_57:
              operator delete(v31[0]);
              goto LABEL_50;
            }
          }
          else if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_49;
          }
          operator delete(v34.__pn_.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v32) & 0x80000000) == 0) {
            goto LABEL_50;
          }
          goto LABEL_57;
        }
        v58[0] = "save";
        v58[1] = 4;
        int v57 = v17;
        sub_215BA1760("Failure during ", (uint64_t)v58, (uint64_t)" from stream with file format ");
      default:
        break;
    }
  }
  sub_215ADD660(a2, a3, a4, a5, 0, 0, a1);
LABEL_51:
  if (v13)
  {
    if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_215ADDF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215ADDF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  sub_21573FF04((uint64_t)&a43);
  if (a42 < 0) {
    operator delete(__p);
  }
  sub_2157407D4(v58 - 232);
  sub_215CF6268((uint64_t)&a9);
  sub_215ADF458((uint64_t)&a12);
  sub_215733368((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_215ADE034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215ADE0C8(char *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v140 = *MEMORY[0x263EF8340];
  if (a6 <= 0x10 && ((1 << a6) & 0x14100) != 0)
  {
    int v12 = 2;
    int v13 = 1987273518;
  }
  else
  {
    int v12 = 1;
    int v13 = 1952539694;
  }
  char v84 = 4;
  LODWORD(v83[0]) = v13;
  BYTE4(v83[0]) = 0;
  uint64_t v14 = *a3;
  if (*(char *)(*a3 + 23) < 0)
  {
    uint64_t v16 = *(void **)v14;
    size_t v15 = *(void *)(v14 + 8);
  }
  else
  {
    size_t v15 = *(unsigned __int8 *)(*a3 + 23);
    uint64_t v16 = (void *)*a3;
  }
  unsigned __int8 v17 = v14 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v14 + 48);
  unint64_t v19 = (v14 + 24) & 0xFFFFFFFFFFFFFF00;
  uint64_t v20 = v17 & 0xF8;
  if (!v18) {
    uint64_t v20 = 0;
  }
  sub_215AD8E80((uint64_t)&v82, a2, v16, v15, v20 | v19, v18);
  int v76 = v12;
  uint64_t v21 = (uint64_t)(a3 + 2);
  sub_215AD98EC(&v81, v21);
  int v22 = SHIBYTE(v81.__r_.__value_.__r.__words[2]);
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t size = HIBYTE(v81.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t size = v81.__r_.__value_.__l.__size_;
  }
  unint64_t v24 = size + 5;
  if (size + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  BOOL v75 = a1;
  if (v24 >= 0x17)
  {
    uint64_t v26 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17) {
      uint64_t v26 = v24 | 7;
    }
    uint64_t v27 = v26 + 1;
    p_dst = (std::string *)operator new(v26 + 1);
    __dst.__r_.__value_.__l.__size_ = size + 5;
    __dst.__r_.__value_.__r.__words[2] = v27 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = size + 5;
    if (!size) {
      goto LABEL_24;
    }
  }
  if (v22 >= 0) {
    uint64_t v28 = &v81;
  }
  else {
    uint64_t v28 = (std::string *)v81.__r_.__value_.__r.__words[0];
  }
  memmove(p_dst, v28, size);
LABEL_24:
  strcpy((char *)p_dst + size, "_info");
  if (v84 >= 0) {
    uint64_t v29 = v83;
  }
  else {
    uint64_t v29 = (void **)v83[0];
  }
  if (v84 >= 0) {
    std::string::size_type v30 = v84;
  }
  else {
    std::string::size_type v30 = (std::string::size_type)v83[1];
  }
  uint64_t v31 = std::string::append(&__dst, (const std::string::value_type *)v29, v30);
  std::string::size_type v32 = v31->__r_.__value_.__r.__words[0];
  *(void *)&long long v116 = v31->__r_.__value_.__l.__size_;
  *(void *)((char *)&v116 + 7) = *(std::string::size_type *)((char *)&v31->__r_.__value_.__r.__words[1] + 7);
  char v33 = HIBYTE(v31->__r_.__value_.__r.__words[2]);
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)&v116 + 7);
  __p.__r_.__value_.__r.__words[0] = v32;
  __p.__r_.__value_.__l.__size_ = v116;
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = v33;
  if (SHIBYTE(v82.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&v80, v82.__pn_.__r_.__value_.__l.__data_, v82.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    std::__fs::filesystem::path v80 = v82;
  }
  sub_215ACE714((uint64_t)&v80, (std::__fs::filesystem::path *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
  }
  else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_35:
  int v34 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t))(*(void *)v21 + 16))(v21) + 96);
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 16))(v21);
  if (v34) {
    uint8x8_t v36 = (uint64_t *)(v35 + 80);
  }
  else {
    uint8x8_t v36 = (uint64_t *)v35;
  }
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v37 = &v81;
  }
  else {
    long long v37 = (std::string *)v81.__r_.__value_.__r.__words[0];
  }
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v38 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v38 = v81.__r_.__value_.__l.__size_;
  }
  sub_215AD938C((uint64_t)&v79, (uint64_t)&v82, v36, (uint64_t)v37, v38, a4, a5, a7);
  std::__fs::filesystem::path::__string_view v39 = std::__fs::filesystem::path::__filename(&v79);
  if (v39.__size_ > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v39.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v41 = (v39.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v41 = v39.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v42 = v41 + 1;
    p_p = (std::string *)operator new(v41 + 1);
    __p.__r_.__value_.__r.__words[2] = v42 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    __p.__r_.__value_.__l.__size_ = v39.__size_;
    goto LABEL_51;
  }
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = v39.__size_;
  p_p = &__p;
  if (v39.__size_) {
LABEL_51:
  }
    memmove(p_p, v39.__data_, v39.__size_);
  p_p->__r_.__value_.__s.__data_[v39.__size_] = 0;
  long long v43 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  LODWORD(v116) = __p.__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)&v116 + 3) = *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[2] + 3);
  int v44 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  char v45 = (uint64_t *)sub_215AF0140(v21);
  if (v44 < 0)
  {
    sub_215738B0C(&__dst, (void *)v43, *((unint64_t *)&v43 + 1));
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v43;
    LODWORD(__dst.__r_.__value_.__r.__words[2]) = v116;
    *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)&v116 + 3);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v44;
  }
  uint64_t v102 = 0;
  sub_2159A3DA4((uint64_t)v103, v45);
  if (v44 < 0) {
    operator delete((void *)v43);
  }
  LOBYTE(v97) = 0;
  char v99 = 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  char v92 = 0;
  char v94 = 0;
  sub_215CF5C8C(&v80, 0x11u, a7, &__p);
  if (v99)
  {
    long long v46 = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
    char v47 = (std::__shared_weak_count *)*((void *)&v98 + 1);
    long long v98 = v46;
    if (v47 && !atomic_fetch_add(&v47->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
  else
  {
    uint64_t v97 = &unk_26C6824A8;
    long long v98 = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
    char v99 = 1;
  }
  char v48 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
  if (__p.__r_.__value_.__r.__words[2]
    && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
    std::__shared_weak_count::__release_weak(v48);
  }
  if (!v99)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (SHIBYTE(v80.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v116, v80.__pn_.__r_.__value_.__l.__data_, v80.__pn_.__r_.__value_.__l.__size_);
    }
    else
    {
      long long v116 = *(_OWORD *)&v80.__pn_.__r_.__value_.__l.__data_;
      *(void *)&long long v117 = *((void *)&v80.__pn_.__r_.__value_.__l + 2);
    }
    sub_215AC8CC8("Failed to write to file: ", (std::string *)&v116, &__p);
    std::runtime_error::runtime_error(exception, &__p);
    __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  uint64_t v49 = (void *)(*(uint64_t (**)(void))(*(void *)v98 + 16))(v98);
  uint64_t v50 = v49;
  int v51 = (char *)v49 + *(void *)(*v49 - 24);
  if ((v51[32] & 5) != 0)
  {
    uint64_t v52 = -1;
    int v53 = (char *)v49 + *(void *)(*v49 - 24);
    if ((v53[32] & 5) != 0)
    {
LABEL_70:
      long long v122 = 0u;
      long long v123 = 0u;
      long long v120 = 0u;
      long long v121 = 0u;
      long long v118 = 0u;
      long long v119 = 0u;
      long long v116 = 0u;
      long long v117 = 0u;
      uint64_t v124 = -1;
      int v54 = v76;
      goto LABEL_73;
    }
  }
  else
  {
    (*(void (**)(std::string *__return_ptr))(**((void **)v51 + 5) + 32))(&__p);
    uint64_t v52 = v132;
    int v53 = (char *)v50 + *(void *)(*v50 - 24);
    if ((v53[32] & 5) != 0) {
      goto LABEL_70;
    }
  }
  (*(void (**)(long long *__return_ptr))(**((void **)v53 + 5) + 32))(&v116);
  int v54 = v76;
LABEL_73:
  if (v54 != 2)
  {
    __p.__r_.__value_.__l.__size_ = 1;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C685A00;
    __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&unk_26C685B50;
    operator new();
  }
  __p.__r_.__value_.__r.__words[0] = 0x400000001;
  sub_215DFC874((uint64_t)v85, (uint64_t *)&__p, (uint64_t)v50, 0, 0, 0);
  v85[0] = &unk_26C678478;
  v85[2] = &unk_26C6785C8;
  if (v90)
  {
    __p.__r_.__value_.__s.__data_[0] = v87;
    sub_215731D94(v86, (uint64_t)&__p, 1);
  }
  std::ostream::operator<<();
  ++v90;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = __dst;
  }
  uint64_t v126 = v102;
  sub_2159A4AE8((uint64_t)v127, (uint64_t)v103);
  sub_215DF933C((uint64_t)v85, (uint64_t)&__p);
  if (v90)
  {
    std::string::value_type v100 = v87;
    sub_215731D94(v86, (uint64_t)&v100, 1);
  }
  std::ostream::operator<<();
  if (!__CFADD__(v90++, 1))
  {
    std::string::value_type v100 = v87;
    sub_215731D94(v86, (uint64_t)&v100, 1);
  }
  std::ostream::operator<<();
  ++v90;
  sub_2159A96D4((uint64_t)v85, (uint64_t)v127, 6u);
  std::string::value_type v56 = v89;
  if (v90)
  {
    std::string::value_type v100 = v87;
    sub_215731D94(v86, (uint64_t)&v100, 1);
  }
  std::string::value_type v100 = v56;
  sub_215731D94(v86, (uint64_t)&v100, 1);
  ++v90;
  if (v139)
  {
    int v57 = (void **)v137;
    if (v137)
    {
      uint64_t v58 = v138;
      std::__fs::filesystem::path v59 = v137;
      if (v138 != v137)
      {
        do
        {
          if (*((char *)v58 - 1) < 0) {
            operator delete(*(v58 - 3));
          }
          v58 -= 3;
        }
        while (v58 != v57);
        std::__fs::filesystem::path v59 = v137;
      }
      v138 = v57;
      operator delete(v59);
    }
  }
  if (v136 && v135 < 0) {
    operator delete(v134);
  }
  if (v133 && SHIBYTE(v132) < 0) {
    operator delete(v131);
  }
  if (v130 && v129 < 0) {
    operator delete(v128);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    std::string::value_type v60 = v89;
    if (!v90) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
  std::string::value_type v60 = v89;
  if (v90)
  {
LABEL_108:
    __p.__r_.__value_.__s.__data_[0] = v87;
    sub_215731D94(v86, (uint64_t)&__p, 1);
  }
LABEL_109:
  __p.__r_.__value_.__s.__data_[0] = v60;
  sub_215731D94(v86, (uint64_t)&__p, 1);
  uint64_t v61 = v90 + 1;
  uint64_t v90 = 0;
  uint64_t v91 = v61;
  __p.__r_.__value_.__s.__data_[0] = v88;
  sub_215731D94(v86, (uint64_t)&__p, 1);
  uint64_t v62 = v95;
  if (v95)
  {
    unint64_t v63 = *(void *)(v95 + 312);
    if (v63 <= 0x19000)
    {
      long long v65 = (char *)v50 + *(void *)(*v50 - 24);
      if ((v65[32] & 5) != 0)
      {
        uint64_t v66 = -1;
      }
      else
      {
        (*(void (**)(std::string *__return_ptr))(**((void **)v65 + 5) + 32))(&__p);
        uint64_t v66 = v132;
        unint64_t v63 = *(void *)(v62 + 312);
      }
      *(void *)(v62 + 312) = v66 + v63 - v124;
    }
    else
    {
      __p.__r_.__value_.__s.__data_[0] = 0;
      LOBYTE(v126) = 0;
      if (v94)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C6824A8;
        *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = v93;
        long long v93 = 0uLL;
        LOBYTE(v126) = 1;
      }
      sub_215AD3D18(v95, (uint64_t)&__p);
      if ((_BYTE)v126)
      {
        uint8x8_t v64 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
        if (__p.__r_.__value_.__r.__words[2])
        {
          if (!atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
      }
    }
  }
  if (SHIBYTE(v80.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&v77, v80.__pn_.__r_.__value_.__l.__data_, v80.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    std::__fs::filesystem::path v77 = v80;
  }
  uint64_t v78 = v52 & ~(v52 >> 63);
  if (v94)
  {
    uint64_t v67 = (std::__shared_weak_count *)*((void *)&v93 + 1);
    if (*((void *)&v93 + 1))
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v93 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
    }
  }
  std::__fs::filesystem::path::__string_view v68 = v96;
  if (v96 && !atomic_fetch_add(&v96->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
    std::__shared_weak_count::__release_weak(v68);
  }
  if (v99
    && (unint64_t v69 = (std::__shared_weak_count *)*((void *)&v98 + 1)) != 0
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v98 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
    std::__shared_weak_count::__release_weak(v69);
    if ((SHIBYTE(v77.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_135;
    }
  }
  else if ((SHIBYTE(v77.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_135:
    *(std::__fs::filesystem::path *)BOOL v75 = v77;
    goto LABEL_138;
  }
  sub_215738B0C(v75, v77.__pn_.__r_.__value_.__l.__data_, v77.__pn_.__r_.__value_.__l.__size_);
LABEL_138:
  *((void *)v75 + 3) = v78;
  std::__fs::filesystem::path::__string_view v70 = v75 + 32;
  if (SHIBYTE(v79.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(v70, v79.__pn_.__r_.__value_.__l.__data_, v79.__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)std::__fs::filesystem::path::__string_view v70 = *(_OWORD *)&v79.__pn_.__r_.__value_.__l.__data_;
    *((void *)v75 + 6) = *((void *)&v79.__pn_.__r_.__value_.__l + 2);
  }
  if (SHIBYTE(v77.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__pn_.__r_.__value_.__l.__data_);
  }
  if (v115)
  {
    char v71 = (void **)v113;
    if (v113)
    {
      uint64_t v72 = v114;
      float v73 = v113;
      if (v114 != v113)
      {
        do
        {
          if (*((char *)v72 - 1) < 0) {
            operator delete(*(v72 - 3));
          }
          v72 -= 3;
        }
        while (v72 != v71);
        float v73 = v113;
      }
      uint64_t v114 = v71;
      operator delete(v73);
    }
  }
  if (v112 && v111 < 0) {
    operator delete(v110);
  }
  if (v109 && v108 < 0) {
    operator delete(v107);
  }
  if (v106)
  {
    if (v105 < 0) {
      operator delete(v104);
    }
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v79.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_163:
      if ((SHIBYTE(v80.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_164;
      }
      goto LABEL_170;
    }
  }
  else if ((SHIBYTE(v79.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_163;
  }
  operator delete(v79.__pn_.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v80.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_164:
    if ((SHIBYTE(v81.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_165;
    }
    goto LABEL_171;
  }
LABEL_170:
  operator delete(v80.__pn_.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v81.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_165:
    if ((SHIBYTE(v82.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_172;
  }
LABEL_171:
  operator delete(v81.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v82.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_166:
    if ((v84 & 0x80000000) == 0) {
      return;
    }
LABEL_173:
    operator delete(v83[0]);
    return;
  }
LABEL_172:
  operator delete(v82.__pn_.__r_.__value_.__l.__data_);
  if (v84 < 0) {
    goto LABEL_173;
  }
}

void sub_215ADF1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,char a56,int a57,__int16 a58,uint64_t a59,char a60,uint64_t a61,uint64_t a62,char a63)
{
  if (a56) {
    sub_215CF6268((uint64_t)&a53);
  }
  sub_215733368((uint64_t)&a58);
  if (a63) {
    sub_215CF6268((uint64_t)&a60);
  }
  sub_215AC8EAC((uint64_t)&a65);
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a27 & 0x80000000) == 0)
  {
LABEL_11:
    if (a33 < 0)
    {
      operator delete(a28);
      if ((a39 & 0x80000000) == 0)
      {
LABEL_13:
        if ((a45 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        goto LABEL_17;
      }
    }
    else if ((a39 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(a34);
    if ((a45 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
LABEL_17:
    operator delete(a40);
    _Unwind_Resume(a1);
  }
  operator delete(a22);
  goto LABEL_11;
}

uint64_t sub_215ADF458(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_215ADF4B4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  char v10 = (const void *)a3[3];
  int v11 = (std::__shared_weak_count *)a3[4];
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v10)
  {
    BOOL v12 = __dynamic_cast(v10, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6728B0, 0) != 0;
    if (!v11)
    {
LABEL_8:
      if (v12) {
        goto LABEL_9;
      }
LABEL_14:
      int v13 = 0;
      uint64_t v52 = 0;
      int v53 = 0;
LABEL_15:
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 833, (uint64_t)"mesh_data_ptr", 13, (uint64_t)"ExportMeshData requires data to be MeshData", 43, (void (*)(void **))sub_215E1ABD8))
      {
        abort();
      }
      uint64_t v14 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    BOOL v12 = 0;
    if (!v11) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!v12) {
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v14 = a3[3];
  int v13 = (std::__shared_weak_count *)a3[4];
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v52 = v14;
  int v53 = v13;
  if (!v14) {
    goto LABEL_15;
  }
LABEL_17:
  int v15 = sub_215CEE690(*(void *)(v14 + 8), 0);
  if (*(unsigned char *)(*(void *)(v14 + 8) + 408)) {
    BOOL v16 = 0;
  }
  else {
    BOOL v16 = v15 == 2;
  }
  int v17 = v16;
  if (a4 == 64 || v17)
  {
    if (a4 == 64 && !v15)
    {
      __cxa_allocate_exception(0x88uLL);
      sub_215732BF4(v35, ".obj");
      sub_215732BF4(v39, "mesh is required to have per-vertex colors and normals");
      sub_215AB8814((uint64_t *)v35, v39, (uint64_t)&v23);
      long long v41 = v23;
      LOBYTE(v42) = 0;
      char v51 = 0;
      if (v33)
      {
        char v44 = 0;
        if (v26)
        {
          long long v42 = v24;
          uint64_t v43 = v25;
          uint64_t v25 = 0;
          long long v24 = 0uLL;
          char v44 = 1;
        }
        LOBYTE(v45) = 0;
        char v50 = 0;
        if (v32)
        {
          uint64_t v46 = v28;
          long long v45 = *(_OWORD *)v27;
          v27[0] = 0;
          v27[1] = 0;
          uint64_t v47 = v29;
          long long v48 = *(_OWORD *)v30;
          uint64_t v49 = v31;
          uint64_t v28 = 0;
          v30[0] = 0;
          v30[1] = 0;
          uint64_t v31 = 0;
          char v50 = 1;
        }
        char v51 = 1;
      }
      sub_215AE076C();
    }
    sub_215ADE0C8((char *)v35, a2, a3, (uint64_t)".obj", 4, a4, a5);
    sub_215CF5C8C(&v38, 0x30u, a5, v39);
    if (SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(&__p, v38.__pn_.__r_.__value_.__l.__data_, v38.__pn_.__r_.__value_.__l.__size_);
    }
    else {
      std::__fs::filesystem::path __p = v38;
    }
    sub_215CEEA90((char *)&__p, *(uint64_t **)(v14 + 8), a5, (uint64_t)&v23);
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    }
    if (!v34)
    {
      uint64_t v21 = sub_215983058((uint64_t)&v23);
      sub_21598E6D4(v21);
    }
    if (SHIBYTE(v36) < 0)
    {
      sub_215738B0C((unsigned char *)a1, v35[0], (unint64_t)v35[1]);
      int v19 = v34;
      *(void *)(a1 + 24) = v37;
      *(unsigned char *)(a1 + 32) = 1;
      if (!v19 && v33)
      {
        if (v32)
        {
          if (SHIBYTE(v31) < 0) {
            operator delete(v30[0]);
          }
          if (SHIBYTE(v28) < 0) {
            operator delete(v27[0]);
          }
        }
        if (v26 && SHIBYTE(v25) < 0) {
          operator delete((void *)v24);
        }
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)v35;
      uint64_t v18 = v37;
      *(void *)(a1 + 16) = v36;
      *(void *)(a1 + 24) = v18;
      *(unsigned char *)(a1 + 32) = 1;
    }
    uint64_t v20 = v40;
    if (v40 && !atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if ((SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_41:
        if ((SHIBYTE(v36) & 0x80000000) == 0) {
          goto LABEL_42;
        }
        goto LABEL_46;
      }
    }
    else if ((SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_41;
    }
    operator delete(v38.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
LABEL_42:
      int v13 = v53;
      if (!v53) {
        return;
      }
      goto LABEL_47;
    }
LABEL_46:
    operator delete(v35[0]);
    int v13 = v53;
    if (!v53) {
      return;
    }
    goto LABEL_47;
  }
  sub_215ADD660(a2, a3, a4, a5, 0, 0);
  if (!v13) {
    return;
  }
LABEL_47:
  if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
}

void sub_215ADF9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  sub_21573FF04(v49 - 208);
  sub_21573FF04((uint64_t)&a16);
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a37 < 0)
  {
    operator delete(a32);
    if ((v48 & 1) == 0)
    {
LABEL_8:
      sub_215733368(v49 - 80);
      _Unwind_Resume(a1);
    }
  }
  else if (!v48)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v47);
  sub_215733368(v49 - 80);
  _Unwind_Resume(a1);
}

uint64_t sub_215ADFAA8(uint64_t a1, long long *a2, int a3)
{
  uint64_t v6 = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  uint64_t v7 = a1 + 16;
  uint64_t v8 = MEMORY[0x263F8C328] + 64;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  uint64_t v9 = a1 + 24;
  char v10 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v11 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v12 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v11;
  *(void *)(a1 + 8) = 0;
  int v13 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v13, (void *)(a1 + 24));
  uint64_t v14 = MEMORY[0x263F8C328] + 24;
  v13[1].__vftable = 0;
  v13[1].__fmtflags_ = -1;
  uint64_t v15 = v10[5];
  uint64_t v16 = v10[4];
  *(void *)(a1 + 16) = v16;
  *(void *)(v7 + *(void *)(v16 - 24)) = v15;
  uint64_t v17 = v10[1];
  *(void *)a1 = v17;
  *(void *)(a1 + *(void *)(v17 - 24)) = v10[6];
  *(void *)a1 = v14;
  *(void *)(a1 + 128) = v6;
  *(void *)(a1 + 16) = v8;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  long long v18 = *a2;
  *(void *)(a1 + 104) = *((void *)a2 + 2);
  *(_OWORD *)(a1 + 88) = v18;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(void *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = a3;
  sub_21573B8E0(v9);
  return a1;
}

void sub_215ADFD84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v11 + 111) < 0) {
    operator delete(*v10);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x2166C4BF0](a10);
  _Unwind_Resume(a1);
}

void sub_215ADFDD8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C678638;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215ADFDF8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C678638;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215ADFE4C(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  v7[0] = 0;
  char v9 = 0;
  sub_215AD3D18(a1 + 24, (uint64_t)v7);
  if (v9)
  {
    int v3 = v8;
    if (v8)
    {
      if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  uint64_t v4 = MEMORY[0x263F8C2B8];
  uint64_t v5 = *MEMORY[0x263F8C2B8];
  *(void *)(a1 + 48) = *MEMORY[0x263F8C2B8];
  uint64_t v6 = *(void *)(v4 + 72);
  *(void *)(a1 + 48 + *(void *)(v5 - 24)) = *(void *)(v4 + 64);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 159) < 0) {
    operator delete(*(void **)(a1 + 136));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x2166C4BF0](a1 + 176);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v2);
  }
}

uint64_t sub_215AE002C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 128) = MEMORY[0x263F8C368] + 16;
  uint64_t v4 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v5 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + *(void *)(v6 - 24)) = v5;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v7 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  uint64_t v8 = (std::ios_base *)(a2 + *(void *)(*(void *)a2 - 24));
  std::ios_base::move(v7, v8);
  v7[1].__vftable = v8[1].__vftable;
  v8[1].__vftable = 0;
  v7[1].__fmtflags_ = v8[1].__fmtflags_;
  uint64_t v9 = v4[5];
  uint64_t v10 = v4[4];
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 16 + *(void *)(v10 - 24)) = v9;
  uint64_t v11 = v4[1];
  *(void *)a1 = v11;
  *(void *)(a1 + *(void *)(v11 - 24)) = v4[6];
  *(void *)a1 = MEMORY[0x263F8C328] + 24;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  std::streambuf::basic_streambuf();
  uint64_t v12 = MEMORY[0x263F8C318] + 16;
  *(void *)(a1 + 88) = 0;
  int v13 = (_OWORD *)(a1 + 88);
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  uint64_t v14 = (long long *)(a2 + 88);
  if (*(char *)(a2 + 111) >= 0) {
    uint64_t v15 = a2 + 88;
  }
  else {
    uint64_t v15 = *(void *)(a2 + 88);
  }
  uint64_t v16 = *(void *)(a2 + 40);
  if (v16)
  {
    uint64_t v17 = v16 - v15;
    uint64_t v18 = *(void *)(a2 + 48) - v15;
    uint64_t v19 = *(void *)(a2 + 56) - v15;
    uint64_t v20 = *(void *)(a2 + 64);
    if (v20)
    {
LABEL_6:
      uint64_t v21 = v20 - v15;
      uint64_t v22 = *(void *)(a2 + 72) - v15;
      uint64_t v23 = *(void *)(a2 + 80) - v15;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v19 = -1;
    uint64_t v18 = -1;
    uint64_t v17 = -1;
    uint64_t v20 = *(void *)(a2 + 64);
    if (v20) {
      goto LABEL_6;
    }
  }
  uint64_t v21 = -1;
  uint64_t v22 = -1;
  uint64_t v23 = -1;
LABEL_9:
  uint64_t v24 = *(void *)(a2 + 112);
  uint64_t v25 = v24 - v15;
  if (!v24) {
    uint64_t v25 = -1;
  }
  long long v26 = *v14;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *int v13 = v26;
  *(unsigned char *)(a2 + 111) = 0;
  *(unsigned char *)(a2 + 88) = 0;
  uint64_t v27 = a1 + 88;
  if (*(char *)(a1 + 111) < 0) {
    uint64_t v27 = *(void *)v13;
  }
  if (v17 != -1)
  {
    *(void *)(a1 + 40) = v27 + v17;
    *(void *)(a1 + 48) = v27 + v18;
    *(void *)(a1 + 56) = v27 + v19;
  }
  if (v21 != -1)
  {
    *(void *)(a1 + 80) = v27 + v23;
    *(void *)(a1 + 64) = v27 + v21;
    *(void *)(a1 + 72) = v27 + v21 + v22;
  }
  uint64_t v28 = v27 + v25;
  if (v25 == -1) {
    uint64_t v28 = 0;
  }
  *(void *)(a1 + 112) = v28;
  if (*(char *)(a2 + 111) < 0) {
    uint64_t v14 = *(long long **)(a2 + 88);
  }
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v14;
  *(void *)(a2 + 64) = v14;
  *(void *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 112) = v14;
  std::locale::locale(&v30, (const std::locale *)(a2 + 32));
  (*(void (**)(uint64_t, std::locale *))(*(void *)(a1 + 24) + 16))(a1 + 24, &v30);
  std::locale::locale(&v31, (const std::locale *)(a1 + 32));
  std::locale::operator=((std::locale *)(a1 + 32), &v30);
  std::locale::~locale(&v31);
  std::locale::~locale(&v30);
  *(void *)(a1 + *(void *)(*(void *)a1 - 24) + 40) = a1 + 24;
  return a1;
}

void sub_215AE0498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
  std::locale::~locale(&a9);
  if (*(char *)(v9 + 111) < 0) {
    operator delete(*v11);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x2166C4BF0](v10);
  _Unwind_Resume(a1);
}

void *sub_215AE04F4(void *result)
{
  *(result - 2) = &unk_26C685A00;
  uint64_t v1 = result[1];
  *uint64_t result = &unk_26C685B50;
  result[1] = 0;
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 80);
    if (v2)
    {
      *(void *)(v1 + 88) = v2;
      operator delete(v2);
    }
    if (*(unsigned char *)(v1 + 72)) {
      free(*(void **)(v1 + 56));
    }
    if (*(unsigned char *)(v1 + 40)) {
      free(*(void **)(v1 + 24));
    }
    return (void *)MEMORY[0x2166C4D20](v1, 0x1030C408C1A3048);
  }
  return result;
}

void sub_215AE059C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    *(unsigned char *)(a1 + 40) = 1;
    sub_215AF0948(*(void *)(a1 + 8) + 16);
    unint64_t v2 = v7;
    int v3 = (char)v7;
    if ((v7 & 0x80u) != 0) {
      unint64_t v2 = (unint64_t)__p[1];
    }
    if (v2 == 8)
    {
      uint64_t v4 = (void **)__p[0];
      if ((v7 & 0x80u) == 0) {
        uint64_t v4 = __p;
      }
      if (*(void **)"cv3d.viz" == *v4)
      {
        switch(v8)
        {
          case 0:
          case 14:
            sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/FileIOPrivate.cpp", 651, (uint64_t)"", 0, (uint64_t)"invalid data type", 17, (void (*)(void **))sub_215E1ABD8);
            abort();
          case 1:
            *(unsigned char *)(a1 + 44) = 1;
            int v5 = 5;
            goto LABEL_16;
          case 2:
          case 3:
          case 4:
          case 12:
          case 13:
            *(unsigned char *)(a1 + 42) = 1;
            break;
          case 5:
          case 8:
          case 10:
            *(unsigned char *)(a1 + 41) = 1;
            *(_DWORD *)(a1 + 52) = 2;
            break;
          case 6:
            *(_DWORD *)(a1 + 56) = 3;
            break;
          case 7:
            *(unsigned char *)(a1 + 44) = 1;
            int v5 = 6;
LABEL_16:
            *(_DWORD *)(a1 + 48) = v5;
            break;
          case 11:
            *(unsigned char *)(a1 + 41) = 1;
            *(_DWORD *)(a1 + 52) = 4;
            break;
          default:
            break;
        }
      }
    }
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AE0714(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE076C()
{
  int v0 = 0;
  operator new();
}

void sub_215AE0A38(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_215AE0A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE0A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  uint64_t v29 = *(void *)(v27 - 56);
  *(void *)(v27 - 56) = 0;
  if (v29) {
    sub_215E15464(v27 - 56, v29);
  }
  sub_215742CF0((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_215AE0B20(uint64_t a1)
{
  *(void *)a1 = &unk_26C684F20;
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v3) {
    (*(void (**)(void))(a1 + 24))();
  }
  return a1;
}

void sub_215AE0B88(uint64_t a1)
{
  *(void *)a1 = &unk_26C684F20;
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v3) {
    (*(void (**)(void))(a1 + 24))();
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AE0C18(uint64_t a1, unsigned __int8 *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 4;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE0CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE0CD4(uint64_t a1, char *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE0D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE0D90(uint64_t a1, __int16 *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE0E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE0E4C(uint64_t a1, int *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE0EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE0F08(uint64_t a1, void ***a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = *a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE0FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE0FC4(uint64_t a1, void ***a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = *a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE1068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE1080(uint64_t a1, unsigned __int8 *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 6;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE1124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE113C(uint64_t a1, char *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 5;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE11E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE11F8(uint64_t a1, unsigned __int16 *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = (void **)*a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 6;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE129C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE12B8(uint64_t a1, void ***a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = *a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 6;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE135C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE1374(uint64_t a1, void ***a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    uint64_t v9 = *a2;
    uint64_t v6 = (unsigned __int8 *)sub_215DEBCD0(a1);
    int v7 = *v6;
    unsigned __int8 *v6 = 6;
    int v8 = (void **)*((void *)v6 + 1);
    *((void *)v6 + 1) = v9;
    uint64_t v9 = v8;
    sub_215CEB204(&v9, v7);
  }
}

void sub_215AE1418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  sub_215CEB204(v9, a9);
  _Unwind_Resume(a1);
}

void sub_215AE1430(uint64_t a1, float *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    sub_215DEE144(a1, a2);
  }
}

void sub_215AE1474(uint64_t a1, double *a2)
{
  if (!*(unsigned char *)(a1 + 88)
    || *(void *)(a1 + 80) != 7
    || ((v2 = *(int **)(a1 + 72), int v3 = *v2, v4 = *(int *)((char *)v2 + 3), v3 == *(_DWORD *)"version")
      ? (BOOL v5 = v4 == *(_DWORD *)"sion")
      : (BOOL v5 = 0),
        !v5))
  {
    sub_215DEE340(a1, a2);
  }
}

void sub_215AE14BC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEFEE4(a1, v3);
}

void sub_215AE14E4(uint64_t a1, size_t a2, size_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEE64C(a1, v3);
}

void sub_215AE150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEE8C4(a1, (uint64_t)v3);
}

void sub_215AE1534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEEB3C(a1, (uint64_t)v3);
}

void sub_215AE155C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEEDB4(a1, (uint64_t)v3);
}

void sub_215AE1584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEF02C(a1, (uint64_t)v3);
}

void sub_215AE15AC(uint64_t a1, size_t a2, size_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEC208(a1, v3);
}

void sub_215AE15D4(uint64_t a1, size_t a2, size_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEE788(a1, v3);
}

void sub_215AE15FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEEA00(a1, (uint64_t)v3);
}

void sub_215AE1624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEEC78(a1, (uint64_t)v3);
}

void sub_215AE164C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEEEF0(a1, (uint64_t)v3);
}

void sub_215AE1674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEF168(a1, (uint64_t)v3);
}

void sub_215AE169C(uint64_t a1, float *a2, float *a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEF750(a1, v3);
}

void sub_215AE16C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DEFB74(a1, v3);
}

void sub_215AE16EC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_215DF0038(a1, v3);
}

void sub_215AE1718(uint64_t a1, size_t *a2)
{
  size_t v2 = a2[1];
  v3[0] = *a2;
  v3[1] = v2;
  sub_215DEC208(a1, v3);
}

void sub_215AE174C(uint64_t a1)
{
  sub_215DF07E4(a1);
  int v6 = 1;
  int v2 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "version";
  *(void *)(a1 + 96) = 7;
  if (!v2) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF1DC8((void *)a1, &v6);
  int v3 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "protocol_info";
  *(void *)(a1 + 96) = 13;
  if (!v3) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF07E4(a1);
  int v6 = 1;
  int v4 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "version";
  *(void *)(a1 + 96) = 7;
  if (!v4) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215DF1DC8((void *)a1, &v6);
  int v5 = *(unsigned __int8 *)(a1 + 104);
  *(void *)(a1 + 88) = "current";
  *(void *)(a1 + 96) = 7;
  if (!v5) {
    *(unsigned char *)(a1 + 104) = 1;
  }
  sub_215A9B7D8((void *)a1);
}

size_t sub_215AE18BC(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  int v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6786A0[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    int v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    int v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215AE19AC(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  int v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  int v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    int v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6786A0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215AE1B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE1BAC(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  int v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    uint64_t v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)uint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    uint64_t v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *uint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215AE1E40(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE1E58(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_215AE1E60()
{
}

void sub_215AE2040(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AE2064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = a10;
  a10 = 0;
  if (!v11) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464((uint64_t)&a10, v11);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_215AE208C(_DWORD ***a1)
{
  return sub_215AE254C(**a1, (char *)(*a1)[1]);
}

void sub_215AE2098(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  int v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  size_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  unint64_t v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6786A0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215AE2254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE2298(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  int v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    uint64_t v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)uint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    uint64_t v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *uint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215AE252C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE2544(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_215AE254C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6786A0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_215AE2640(_DWORD ***a1)
{
  return sub_2158B25D8(**a1, (char *)(*a1)[1]);
}

void sub_215AE264C(uint64_t a1, uint64_t a2)
{
}

void sub_215AE265C(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6786A0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215AE2814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215AE2858(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    size_t result = sub_215AE2954((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  size_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215AE294C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215AE2954(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  size_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215AE2B54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_215AE2B68(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6786A0[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    unint64_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215AE2C58(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  unint64_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    unint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6786A0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215AE2E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE2E58(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    uint64_t v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    uint64_t v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215AE30EC(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE3104(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

size_t sub_215AE310C(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6786A0[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    size_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215AE31FC(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  unint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)uint64_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6786A0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215AE33B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE33FC(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  unint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      void v5[2] = v15 | 0x8000000000000000;
      void *v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  unint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    uint64_t v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)unint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    uint64_t v20 = v17;
    if (!v18)
    {
      uint64_t v21 = &v13[24 * v12];
      *unint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  uint64_t v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215AE3690(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE36A8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_215AE36B0(void *a1)
{
  *a1 = &unk_26C685A00;
  uint64_t v1 = a1[3];
  a1[2] = &unk_26C685B50;
  a1[3] = 0;
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 80);
    if (v2)
    {
      *(void *)(v1 + 88) = v2;
      operator delete(v2);
    }
    if (*(unsigned char *)(v1 + 72)) {
      free(*(void **)(v1 + 56));
    }
    if (*(unsigned char *)(v1 + 40)) {
      free(*(void **)(v1 + 24));
    }
    MEMORY[0x2166C4D20](v1, 0x1030C408C1A3048);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AE3780(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 304))();
}

void sub_215AE37AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(*(void *)(v1 + 88) - 8);
  sub_215E001AC((uint64_t *)(v1 + 48), *(void *)(v1 + 16) - v2 - 9);
  size_t v3 = *(void *)(v1 + 48);
  if (v3) {
    memmove((void *)(*(void *)(v1 + 24) + v2), *(const void **)(v1 + 56), v3);
  }
  *(void *)(v1 + 48) = 0;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88) - 8;
  *(void *)(v1 + 88) = v5;
  if (v4 == v5)
  {
    std::ostream::write();
    if (*(unsigned char *)(v1 + 40))
    {
      free(*(void **)(v1 + 24));
      *(unsigned char *)(v1 + 40) = 0;
    }
  }
}

uint64_t **sub_215AE3844(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    uint64_t v4 = (uint64_t *)(v2 + 16);
    return sub_215E06FCC((uint64_t)v5, &v4, a2);
  }
  else
  {
    if (*a2) {
      v5[1] = -61;
    }
    else {
      void v5[2] = -62;
    }
    return (uint64_t **)std::ostream::write();
  }
}

char *sub_215AE38D4(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    uint64_t v5 = (uint64_t *)(v2 + 16);
    return sub_215E05278(&v5, *a2);
  }
  else
  {
    int v4 = *a2;
    if (v4 > -33)
    {
      char v6 = *a2;
    }
    else
    {
      char v7 = -48;
      char v8 = v4;
    }
    return (char *)std::ostream::write();
  }
}

unsigned char *sub_215AE3964(uint64_t a1, __int16 *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E0551C(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E057EC();
  }
}

unsigned char *sub_215AE39C4(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E05AC4(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E05EEC();
  }
}

unsigned char *sub_215AE3A24(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E06360(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E068A8();
  }
}

unsigned char *sub_215AE3A84(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E06360(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E068A8();
  }
}

char *sub_215AE3AE4(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    uint64_t v5 = (uint64_t *)(v2 + 16);
    return sub_215E053CC(&v5, *a2);
  }
  else
  {
    int v4 = *a2;
    if (v4 < 0)
    {
      char v6 = -52;
      char v7 = v4;
    }
    else
    {
      char v8 = *a2;
    }
    return (char *)std::ostream::write();
  }
}

char *sub_215AE3B70(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    uint64_t v5 = (uint64_t *)(v2 + 16);
    return sub_215E05278(&v5, *a2);
  }
  else
  {
    int v4 = *a2;
    if (v4 > -33)
    {
      char v6 = *a2;
    }
    else
    {
      char v7 = -48;
      char v8 = v4;
    }
    return (char *)std::ostream::write();
  }
}

unsigned char *sub_215AE3C00(uint64_t a1, _WORD *a2)
{
  return sub_215DFF030(*(void *)(a1 + 24), a2);
}

unsigned char *sub_215AE3C08(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v2 + 40)) {
    return (unsigned char *)sub_215E0626C((uint64_t)&v5, v2 + 8);
  }
  int v4 = (uint64_t *)(v2 + 16);
  return sub_215E05FEC(&v4, *a2);
}

unsigned char *sub_215AE3C64(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E069EC(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E06D00();
  }
}

unsigned char *sub_215AE3CC4(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v2 + 40))
  {
    int v4 = (uint64_t *)(v2 + 16);
    return sub_215E069EC(&v4, *a2);
  }
  else
  {
    return (unsigned char *)sub_215E06D00();
  }
}

uint64_t **sub_215AE3D24(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v2 + 40)) {
    return (uint64_t **)std::ostream::write();
  }
  int v4 = (uint64_t *)(v2 + 16);
  return sub_215E06DFC((uint64_t)&v5, &v4, a2);
}

uint64_t **sub_215AE3D94(uint64_t a1, unint64_t *a2)
{
  void v5[2] = *(uint64_t **)MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v2 + 40)) {
    return (uint64_t **)std::ostream::write();
  }
  v5[0] = (uint64_t *)(v2 + 16);
  return sub_215E06EE4((uint64_t)&v4, v5, a2);
}

uint64_t **sub_215AE3E3C(uint64_t a1, const void **a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v2 + 40)) {
    return (uint64_t **)sub_215E0752C((uint64_t)&v6, v2 + 8, (uint64_t)a2);
  }
  char v4 = (uint64_t *)(v2 + 16);
  return sub_215E07110((uint64_t)&v5, &v4, a2);
}

uint64_t sub_215AE3E94(uint64_t result, uint64_t a2, unsigned char *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void *)(result + 24);
  if (*(unsigned char *)(v5 + 40))
  {
    char v6 = (uint64_t *)(v5 + 16);
    if (a2)
    {
      do
      {
        size_t result = (uint64_t)sub_215E06FCC((uint64_t)v7, &v6, a3++);
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    do
    {
      while (!*a3)
      {
        v7[2] = -62;
        size_t result = std::ostream::write();
        ++a3;
        if (!--v4) {
          return result;
        }
      }
      v7[1] = -61;
      size_t result = std::ostream::write();
      ++a3;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_215AE3F60(uint64_t result, uint64_t a2, char *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void *)(result + 24);
  if (*(unsigned char *)(v5 + 40))
  {
    char v8 = (uint64_t *)(v5 + 16);
    if (a2)
    {
      do
      {
        int v6 = *a3++;
        size_t result = (uint64_t)sub_215E05278(&v8, v6);
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    do
    {
      while (1)
      {
        int v7 = *a3;
        if (v7 <= -33) {
          break;
        }
        char v9 = *a3;
        size_t result = std::ostream::write();
        ++a3;
        if (!--v4) {
          return result;
        }
      }
      char v10 = -48;
      char v11 = v7;
      size_t result = std::ostream::write();
      ++a3;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_215AE4020(uint64_t result, uint64_t a2, __int16 *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 2 * a2;
      do
      {
        signed int v6 = *a3++;
        size_t result = (uint64_t)sub_215E0551C(&v8, v6);
        v5 -= 2;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 2 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E057EC();
      v7 -= 2;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE40A4(uint64_t result, uint64_t a2, unsigned int *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 4 * a2;
      do
      {
        unsigned int v6 = *a3++;
        size_t result = (uint64_t)sub_215E05AC4(&v8, v6);
        v5 -= 4;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 4 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E05EEC();
      v7 -= 4;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE4128(uint64_t result, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 8 * a2;
      do
      {
        unint64_t v6 = *a3++;
        size_t result = (uint64_t)sub_215E06360(&v8, v6);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 8 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E068A8();
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE41AC(uint64_t result, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 8 * a2;
      do
      {
        unint64_t v6 = *a3++;
        size_t result = (uint64_t)sub_215E06360(&v8, v6);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 8 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E068A8();
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE4230(uint64_t result, uint64_t a2, char *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void *)(result + 24);
  if (*(unsigned char *)(v5 + 40))
  {
    char v8 = (uint64_t *)(v5 + 16);
    if (a2)
    {
      do
      {
        char v6 = *a3++;
        size_t result = (uint64_t)sub_215E053CC(&v8, v6);
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    do
    {
      while (1)
      {
        int v7 = *a3;
        if ((v7 & 0x80000000) == 0) {
          break;
        }
        char v9 = -52;
        char v10 = v7;
        size_t result = std::ostream::write();
        ++a3;
        if (!--v4) {
          return result;
        }
      }
      char v11 = *a3;
      size_t result = std::ostream::write();
      ++a3;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_215AE42EC(uint64_t result, uint64_t a2, char *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void *)(result + 24);
  if (*(unsigned char *)(v5 + 40))
  {
    char v8 = (uint64_t *)(v5 + 16);
    if (a2)
    {
      do
      {
        int v6 = *a3++;
        size_t result = (uint64_t)sub_215E05278(&v8, v6);
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    do
    {
      while (1)
      {
        int v7 = *a3;
        if (v7 <= -33) {
          break;
        }
        char v9 = *a3;
        size_t result = std::ostream::write();
        ++a3;
        if (!--v4) {
          return result;
        }
      }
      char v10 = -48;
      char v11 = v7;
      size_t result = std::ostream::write();
      ++a3;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_215AE43AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_215DFF1B4(*(void *)(a1 + 24), v4);
}

uint64_t sub_215AE43D8(uint64_t result, uint64_t a2, unsigned int *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v9 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 4 * a2;
      do
      {
        unsigned int v6 = *a3++;
        size_t result = (uint64_t)sub_215E05FEC(&v9, v6);
        v5 -= 4;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = v4 + 8;
    uint64_t v8 = 4 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E0626C((uint64_t)&v10, v7);
      v8 -= 4;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_215AE4460(uint64_t result, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 8 * a2;
      do
      {
        unint64_t v6 = *a3++;
        size_t result = (uint64_t)sub_215E069EC(&v8, v6);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 8 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E06D00();
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE44E4(uint64_t result, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 8 * a2;
      do
      {
        unint64_t v6 = *a3++;
        size_t result = (uint64_t)sub_215E069EC(&v8, v6);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v7 = 8 * a2;
    do
    {
      ++a3;
      size_t result = sub_215E06D00();
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_215AE4568(uint64_t result, uint64_t a2, unsigned int *a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 4 * a2;
      do
      {
        size_t result = (uint64_t)sub_215E06DFC((uint64_t)v9, &v8, a3++);
        v5 -= 4;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v6 = 4 * a2;
    do
    {
      unsigned int v7 = *a3++;
      v9[1] = -54;
      unsigned int v10 = bswap32(v7);
      size_t result = std::ostream::write();
      v6 -= 4;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215AE4608(uint64_t result, uint64_t a2, unint64_t *a3)
{
  unsigned char v9[2] = *(uint64_t **)MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    v9[0] = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 8 * a2;
      do
      {
        size_t result = (uint64_t)sub_215E06EE4((uint64_t)&v8, v9, a3++);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v6 = 8 * a2;
    do
    {
      unint64_t v7 = *a3++;
      LOBYTE(v9[0]) = -53;
      *(uint64_t **)((char *)v9 + 1) = (uint64_t *)bswap64(v7);
      size_t result = std::ostream::write();
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_215AE46D4(uint64_t result, uint64_t a2, const void **a3)
{
  uint64_t v4 = *(void *)(result + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    char v8 = (uint64_t *)(v4 + 16);
    if (a2)
    {
      uint64_t v5 = 24 * a2;
      do
      {
        size_t result = (uint64_t)sub_215E07110((uint64_t)&v9, &v8, a3);
        a3 += 3;
        v5 -= 24;
      }
      while (v5);
    }
  }
  else if (a2)
  {
    uint64_t v6 = v4 + 8;
    uint64_t v7 = 24 * a2;
    do
    {
      size_t result = sub_215E0752C((uint64_t)&v10, v6, (uint64_t)a3);
      a3 += 3;
      v7 -= 24;
    }
    while (v7);
  }
  return result;
}

uint64_t **sub_215AE4770(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v6 = (uint64_t *)(v4 + 16);
    v7[0] = v2;
    uint64_t v8 = v3;
    return sub_215E04FC4((uint64_t)&v9, &v6, v7);
  }
  else
  {
    if (v2 > 0xFF)
    {
      if (HIWORD(v2))
      {
        LOBYTE(v7[0]) = -58;
        *(unsigned int *)((char *)v7 + 1) = bswap32(v2);
      }
      else
      {
        LOBYTE(v7[0]) = -59;
        *(_WORD *)((char *)v7 + 1) = bswap32(v2) >> 16;
      }
    }
    else
    {
      LOBYTE(v7[0]) = -60;
      BYTE1(v7[0]) = v2;
    }
    std::ostream::write();
    return (uint64_t **)std::ostream::write();
  }
}

uint64_t **sub_215AE4864(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v4 + 40))
  {
    uint64_t v6 = (uint64_t *)(v4 + 16);
    v7[0] = v2;
    uint64_t v8 = v3;
    return sub_215E04FC4((uint64_t)&v9, &v6, v7);
  }
  else
  {
    if (v2 > 0xFF)
    {
      if (HIWORD(v2))
      {
        LOBYTE(v7[0]) = -58;
        *(unsigned int *)((char *)v7 + 1) = bswap32(v2);
      }
      else
      {
        LOBYTE(v7[0]) = -59;
        *(_WORD *)((char *)v7 + 1) = bswap32(v2) >> 16;
      }
    }
    else
    {
      LOBYTE(v7[0]) = -60;
      BYTE1(v7[0]) = v2;
    }
    std::ostream::write();
    return (uint64_t **)std::ostream::write();
  }
}

void sub_215AE4960(void *a1)
{
  *(a1 - 2) = &unk_26C685A00;
  uint64_t v1 = a1[1];
  *a1 = &unk_26C685B50;
  a1[1] = 0;
  if (v1)
  {
    unsigned int v2 = *(void **)(v1 + 80);
    if (v2)
    {
      *(void *)(v1 + 88) = v2;
      operator delete(v2);
    }
    if (*(unsigned char *)(v1 + 72)) {
      free(*(void **)(v1 + 56));
    }
    if (*(unsigned char *)(v1 + 40)) {
      free(*(void **)(v1 + 24));
    }
    MEMORY[0x2166C4D20](v1, 0x1030C408C1A3048);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AE4A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (const void **)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v5 + 40))
  {
    uint64_t v22 = (uint64_t *)(v5 + 16);
    sub_215E05FEC(&v22, 2u);
    sub_215E0076C(*(void *)(a1 + 24));
    uint64_t v6 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v6 + 40)) {
      goto LABEL_3;
    }
LABEL_6:
    sub_215E0752C((uint64_t)&v22, v6 + 8, (uint64_t)v4);
    uint64_t v7 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v7 + 40)) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_215E0626C((uint64_t)&v22, v5 + 8);
  sub_215E0076C(*(void *)(a1 + 24));
  uint64_t v6 = *(void *)(a1 + 24);
  if (!*(unsigned char *)(v6 + 40)) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v22 = (uint64_t *)(v6 + 16);
  sub_215E07110((uint64_t)&v24, &v22, v4);
  uint64_t v7 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v7 + 40))
  {
LABEL_4:
    uint64_t v22 = (uint64_t *)(v7 + 16);
    sub_215E05FEC(&v22, *(_DWORD *)(a2 + 32));
    goto LABEL_8;
  }
LABEL_7:
  sub_215E0626C((uint64_t)&v22, v7 + 8);
LABEL_8:
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(*(void *)(v8 + 88) - 8);
  sub_215E001AC((uint64_t *)(v8 + 48), *(void *)(v8 + 16) - v9 - 9);
  size_t v10 = *(void *)(v8 + 48);
  if (v10) {
    memmove((void *)(*(void *)(v8 + 24) + v9), *(const void **)(v8 + 56), v10);
  }
  *(void *)(v8 + 48) = 0;
  uint64_t v11 = *(void *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 88) - 8;
  *(void *)(v8 + 88) = v12;
  if (v11 == v12)
  {
    std::ostream::write();
    if (*(unsigned char *)(v8 + 40))
    {
      free(*(void **)(v8 + 24));
      *(unsigned char *)(v8 + 40) = 0;
    }
  }
  if (*(_DWORD *)(a2 + 56) > 1u) {
    sub_215742D4C();
  }
  uint64_t v14 = *(void *)(a2 + 40);
  char v13 = *(std::__shared_weak_count **)(a2 + 48);
  if (v13)
  {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  uint64_t v22 = (uint64_t *)&unk_26C6746E8;
  uint64_t v23 = v14;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 16))(v14);
  uint64_t v16 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v16 + 40))
  {
    uint64_t v24 = (uint64_t *)(v16 + 16);
    sub_215E05FEC(&v24, v15);
  }
  else
  {
    sub_215E0626C((uint64_t)&v24, v16 + 8);
  }
  sub_215E0076C(*(void *)(a1 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v23 + 32))(v23, a1, v15);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(*(void *)(v17 + 88) - 8);
  sub_215E001AC((uint64_t *)(v17 + 48), *(void *)(v17 + 16) - v18 - 9);
  size_t v19 = *(void *)(v17 + 48);
  if (v19) {
    memmove((void *)(*(void *)(v17 + 24) + v18), *(const void **)(v17 + 56), v19);
  }
  *(void *)(v17 + 48) = 0;
  uint64_t v20 = *(void *)(v17 + 80);
  uint64_t v21 = *(void *)(v17 + 88) - 8;
  *(void *)(v17 + 88) = v21;
  if (v20 == v21)
  {
    std::ostream::write();
    if (*(unsigned char *)(v17 + 40))
    {
      free(*(void **)(v17 + 24));
      *(unsigned char *)(v17 + 40) = 0;
    }
  }
}

void sub_215AE4D34(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  sub_215AE50A8((uint64_t)v23, a2);
  if (*(void *)(a1 + 40))
  {
    uint64_t v3 = *(void **)(a1 + 24);
    LOBYTE(v20) = *(unsigned char *)(a1 + 32);
    sub_215731D94(v3, (uint64_t)&v20, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  sub_215DF933C(a1, (uint64_t)&v24);
  if (*(void *)(a1 + 40))
  {
    uint64_t v4 = *(void **)(a1 + 24);
    LOBYTE(v20) = *(unsigned char *)(a1 + 32);
    sub_215731D94(v4, (uint64_t)&v20, 1);
  }
  std::ostream::operator<<();
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 34);
  *(void *)(a1 + 40) = v5 + 1;
  if (v5 != -1)
  {
    uint64_t v7 = *(void **)(a1 + 24);
    LOBYTE(v20) = *(unsigned char *)(a1 + 32);
    sub_215731D94(v7, (uint64_t)&v20, 1);
  }
  uint64_t v8 = *(void **)(a1 + 24);
  LOBYTE(v20) = v6;
  sub_215731D94(v8, (uint64_t)&v20, 1);
  ++*(void *)(a1 + 40);
  if (v28 > 1) {
    sub_215742D4C();
  }
  uint64_t v9 = v26;
  size_t v10 = v27;
  if (v27)
  {
    atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  uint64_t v20 = &unk_26C6746E8;
  uint64_t v21 = v9;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
  if (*(void *)(a1 + 40))
  {
    uint64_t v12 = *(void **)(a1 + 24);
    char v22 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v12, (uint64_t)&v22, 1);
  }
  std::ostream::operator<<();
  ++*(void *)(a1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v21 + 32))(v21, a1, v11);
  char v13 = *(unsigned char *)(a1 + 34);
  if (*(void *)(a1 + 40))
  {
    uint64_t v14 = *(void **)(a1 + 24);
    char v22 = *(unsigned char *)(a1 + 32);
    sub_215731D94(v14, (uint64_t)&v22, 1);
  }
  uint64_t v15 = *(void **)(a1 + 24);
  char v22 = v13;
  sub_215731D94(v15, (uint64_t)&v22, 1);
  ++*(void *)(a1 + 40);
  uint64_t v16 = (char *)__p;
  if (__p)
  {
    uint64_t v17 = v30;
    uint64_t v18 = __p;
    if (v30 != __p)
    {
      do
      {
        size_t v19 = (std::__shared_weak_count *)*((void *)v17 - 1);
        if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
        v17 -= 16;
      }
      while (v17 != v16);
      uint64_t v18 = __p;
    }
    std::locale v30 = v16;
    operator delete(v18);
  }
  if (v28 != -1) {
    ((void (*)(void **, uint64_t *))off_26C678678[v28])(&v20, &v26);
  }
  unsigned int v28 = -1;
  if (v25 < 0) {
    operator delete(v24);
  }
}

void sub_215AE5078(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE5094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215AC31A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AE50A8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 31) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  int v5 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 56) = -1;
  uint64_t v6 = *(unsigned int *)(a2 + 56);
  if (v6 != -1)
  {
    ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C678AC8[v6])(v8, a1 + 40, a2 + 40);
    *(_DWORD *)(a1 + 56) = v6;
  }
  sub_2157BB1A4((void *)(a1 + 64), (uint64_t *)(a2 + 64));
  return a1;
}

void sub_215AE5168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v17 = *(unsigned int *)(v14 + 56);
  if (v17 != -1) {
    ((void (*)(char *, uint64_t))off_26C678678[v17])(&a13, v15);
  }
  *(_DWORD *)(v14 + 56) = -1;
  if (*(char *)(v14 + 31) < 0) {
    operator delete(*v13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AE51C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = (char *)a1;
  int v3 = *((_DWORD *)a1 + 6);
  if (v3 == 1)
  {
    int v24 = -1;
    if ((char)a2[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long __dst = *(_OWORD *)a2;
      int64_t v23 = *((void *)a2 + 2);
    }
    uint64_t v21 = v23;
    *(_OWORD *)std::__fs::filesystem::path __p = __dst;
    if (v23 >= 0) {
      uint64_t v16 = __p;
    }
    else {
      LODWORD(v16) = __dst;
    }
    if (v23 >= 0) {
      unint64_t v17 = HIBYTE(v23);
    }
    else {
      LODWORD(v17) = DWORD2(__dst);
    }
    if (v2[23] < 0)
    {
      size_t v19 = v2;
      unsigned int v2 = *(char **)v2;
      std::string::size_type v18 = *((void *)v19 + 1);
    }
    else
    {
      std::string::size_type v18 = v2[23];
    }
    sub_215E13F30((int)v16, v17, v2, v18, 0);
  }
  if (v3) {
    sub_215742D4C();
  }
  uint64_t v4 = a1[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a1[23];
  }
  else {
    uint64_t v5 = *((void *)a1 + 1);
  }
  uint64_t v6 = a2[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *v2++;
    int v9 = v10;
    int v12 = *a2++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
  }
  while (v9 == v11 && v14);
  return v9 == v11;
}

void sub_215AE536C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE5380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_215AE539C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *((_DWORD *)a1 + 6);
  int v3 = *((_DWORD *)a2 + 6);
  if (!v2)
  {
    if (!v3)
    {
      uint64_t v18 = a1[23];
      size_t v5 = *((void *)a1 + 1);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = a1[23];
      }
      else {
        uint64_t v19 = *((void *)a1 + 1);
      }
      uint64_t v20 = a2[23];
      int v21 = (char)v20;
      if ((v20 & 0x80u) != 0) {
        uint64_t v20 = *((void *)a2 + 1);
      }
      if (v19 == v20)
      {
        if (v21 < 0) {
          a2 = *(unsigned __int8 **)a2;
        }
        if ((v18 & 0x80) == 0)
        {
          if (a1[23])
          {
            uint64_t v22 = v18 - 1;
            do
            {
              int v24 = *a1++;
              int v23 = v24;
              int v26 = *a2++;
              int v25 = v26;
              BOOL v14 = v22-- != 0;
              char v27 = v14;
              BOOL v16 = v23 == v25;
              BOOL v17 = v23 == v25;
            }
            while (v16 && (v27 & 1) != 0);
            return v17;
          }
          return 1;
        }
        return memcmp(*(const void **)a1, a2, v5) == 0;
      }
    }
    return 0;
  }
  if (v3 != 1) {
    return 0;
  }
  if (v2 != 1) {
    sub_215742D4C();
  }
  uint64_t v4 = a1[23];
  size_t v5 = *((void *)a1 + 1);
  if ((v4 & 0x80u) == 0) {
    uint64_t v6 = a1[23];
  }
  else {
    uint64_t v6 = *((void *)a1 + 1);
  }
  uint64_t v7 = a2[23];
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)a2 + 1);
  }
  if (v6 != v7) {
    return 0;
  }
  if (v8 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, v5) == 0;
  }
  if (a1[23])
  {
    uint64_t v9 = v4 - 1;
    do
    {
      int v11 = *a1++;
      int v10 = v11;
      int v13 = *a2++;
      int v12 = v13;
      BOOL v14 = v9-- != 0;
      char v15 = v14;
      BOOL v16 = v10 == v12;
      BOOL v17 = v10 == v12;
    }
    while (v16 && (v15 & 1) != 0);
    return v17;
  }
  return 1;
}

void sub_215AE54E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 56);
  if (v1 != 1)
  {
    if (!v1)
    {
      int v2 = 0;
      sub_215947348();
    }
    sub_215742D4C();
  }
  int v2 = 0;
  sub_215947348();
}

void sub_215AE579C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE57F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE5808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_215AE581C(void *a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == 1) {
      sub_215AE5988();
    }
    sub_215742D4C();
  }
  int v12 = -1;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_215738B0C(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::__fs::filesystem::path __p = *(_OWORD *)a2;
    int64_t v11 = *(void *)(a2 + 16);
  }
  uint64_t v9 = v11;
  *(_OWORD *)int v8 = *(_OWORD *)__p;
  if (v11 >= 0) {
    uint64_t v4 = v8;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if (v11 >= 0) {
    size_t v5 = (void *)HIBYTE(v11);
  }
  else {
    size_t v5 = __p[1];
  }
  uint64_t v6 = sub_215731D94(a1, (uint64_t)v4, (uint64_t)v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(v8[0]);
  }
  return v6;
}

void sub_215AE5944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE5958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE5988()
{
  int v0 = 0;
  operator new();
}

void sub_215AE5BF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  MEMORY[0x2166C4D20](v2, 0x10B2C40EED050F3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE5C24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE5C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL sub_215AE5C88(uint64_t a1, std::__shared_weak_count *a2)
{
  if (!a2) {
    return a1 != 0;
  }
  atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1 != 0;
  }
  ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
  std::__shared_weak_count::__release_weak(a2);
  return a1 != 0;
}

void sub_215AE5D14(uint64_t a1, uint64_t a2)
{
  v36[2] = *MEMORY[0x263EF8340];
  LOBYTE(v27[0]) = 0;
  char v29 = 0;
  int v4 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a2 + 40))
  {
    if (*(char *)(a2 + 39) < 0)
    {
      sub_215738B0C(v27, *(void **)(a2 + 16), *(void *)(a2 + 24));
    }
    else
    {
      *(_OWORD *)char v27 = *(_OWORD *)(a2 + 16);
      uint64_t v28 = *(void *)(a2 + 32);
    }
    int v4 = 1;
    char v29 = 1;
  }
  LOBYTE(__p[0]) = 0;
  unsigned __int8 v35 = 0;
  if (!*(unsigned char *)(a2 + 160))
  {
    int v5 = 0;
    if (v4) {
      goto LABEL_14;
    }
LABEL_10:
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v6 = a1 + 32;
    *(unsigned char *)(a1 + 80) = 0;
    if (!v5) {
      goto LABEL_46;
    }
    goto LABEL_43;
  }
  if (*(char *)(a2 + 135) < 0)
  {
    sub_215738B0C(__p, *(void **)(a2 + 112), *(void *)(a2 + 120));
  }
  else
  {
    *(_OWORD *)std::__fs::filesystem::path __p = *(_OWORD *)(a2 + 112);
    uint64_t v32 = *(void *)(a2 + 128);
  }
  _X0 = 0;
  _X1 = 0;
  __asm { CASPAL          X0, X1, X0, X1, [X8] }
  uint64_t v33 = _X0;
  uint64_t v34 = 0;
  int v5 = 1;
  unsigned __int8 v35 = 1;
  if (!v29) {
    goto LABEL_10;
  }
LABEL_14:
  *(void *)&v30[1] = v28;
  v30[0] = *(_OWORD *)v27;
  v27[0] = 0;
  v27[1] = 0;
  uint64_t v28 = 0;
  char v14 = BYTE7(v30[1]);
  unint64_t v15 = *((void *)&v30[0] + 1);
  uint64_t v16 = *(void *)&v30[0];
  if ((SBYTE7(v30[1]) & 0x80u) == 0) {
    BOOL v17 = v30;
  }
  else {
    BOOL v17 = *(_OWORD **)&v30[0];
  }
  if ((SBYTE7(v30[1]) & 0x80u) == 0) {
    unint64_t v15 = BYTE7(v30[1]);
  }
  if (v15)
  {
    uint64_t v18 = v17;
    if (v15 >= 8)
    {
      uint64_t v18 = (char *)v17 + (v15 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v19 = (char *)v17 + 3;
      unint64_t v20 = v15 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        int8x8_t v21 = vceq_s8(*(int8x8_t *)(v19 - 3), (int8x8_t)0x2323232323232323);
        if (v21.i8[0])
        {
          *(v19 - 3) = 95;
          if ((v21.i8[1] & 1) == 0)
          {
LABEL_25:
            if ((v21.i8[2] & 1) == 0) {
              goto LABEL_26;
            }
            goto LABEL_34;
          }
        }
        else if ((v21.i8[1] & 1) == 0)
        {
          goto LABEL_25;
        }
        *(v19 - 2) = 95;
        if ((v21.i8[2] & 1) == 0)
        {
LABEL_26:
          if ((v21.i8[3] & 1) == 0) {
            goto LABEL_27;
          }
          goto LABEL_35;
        }
LABEL_34:
        *(v19 - 1) = 95;
        if ((v21.i8[3] & 1) == 0)
        {
LABEL_27:
          if ((v21.i8[4] & 1) == 0) {
            goto LABEL_28;
          }
          goto LABEL_36;
        }
LABEL_35:
        *uint64_t v19 = 95;
        if ((v21.i8[4] & 1) == 0)
        {
LABEL_28:
          if ((v21.i8[5] & 1) == 0) {
            goto LABEL_29;
          }
          goto LABEL_37;
        }
LABEL_36:
        v19[1] = 95;
        if ((v21.i8[5] & 1) == 0)
        {
LABEL_29:
          if ((v21.i8[6] & 1) == 0) {
            goto LABEL_30;
          }
          goto LABEL_38;
        }
LABEL_37:
        v19[2] = 95;
        if ((v21.i8[6] & 1) == 0)
        {
LABEL_30:
          if (v21.i8[7]) {
            goto LABEL_39;
          }
          goto LABEL_22;
        }
LABEL_38:
        void v19[3] = 95;
        if (v21.i8[7]) {
LABEL_39:
        }
          v19[4] = 95;
LABEL_22:
        v19 += 8;
        v20 -= 8;
        if (!v20)
        {
          if (v15 == (v15 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_41;
          }
          break;
        }
      }
    }
    int v26 = (char *)v17 + v15;
    do
    {
      if (*v18 == 35) {
        *uint64_t v18 = 95;
      }
      ++v18;
    }
    while (v18 != v26);
LABEL_41:
    uint64_t v16 = *(void *)&v30[0];
    char v14 = BYTE7(v30[1]);
    int v5 = v35;
  }
  v36[0] = *((void *)&v30[0] + 1);
  *(void *)((char *)v36 + 7) = *(void *)((char *)v30 + 15);
  memset(v30, 0, 24);
  uint64_t v22 = v36[0];
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v22;
  *(void *)(a1 + 15) = *(void *)((char *)v36 + 7);
  *(unsigned char *)(a1 + 23) = v14;
  *(unsigned char *)(a1 + 24) = 1;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t v6 = a1 + 32;
  *(unsigned char *)(a1 + 80) = 0;
  if (v5)
  {
LABEL_43:
    _X0 = 0;
    _X1 = 0;
    *(void *)(v6 + 16) = v32;
    *(_OWORD *)uint64_t v6 = *(_OWORD *)__p;
    __p[1] = 0;
    uint64_t v32 = 0;
    __p[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *(void *)(a1 + 64) = _X0;
    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 1;
    if (v35 && SHIBYTE(v32) < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_46:
  if (v29)
  {
    if (SHIBYTE(v28) < 0) {
      operator delete(v27[0]);
    }
  }
}

void sub_215AE603C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a29 && a25 < 0) {
    operator delete(__p);
  }
  if (a15)
  {
    if (a14 < 0) {
      operator delete(a9);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AE6080(void *a1, uint64_t a2)
{
  sub_215731D94(a1, (uint64_t)"{", 1);
  char v36 = 1;
  uint64_t v34 = &v36;
  unsigned __int8 v35 = a1;
  v33[0] = 0;
  v33[24] = 0;
  sub_215AE7B10((uint64_t)&v34, "package_id", a2, (uint64_t)v33);
  if (*(unsigned char *)(a2 + 64))
  {
    if (v36) {
      char v36 = 0;
    }
    else {
      sub_215731D94(a1, (uint64_t)",", 1);
    }
    int v4 = sub_215731D94(a1, (uint64_t)"data_type_id", 12);
    sub_215731D94(v4, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (*(unsigned char *)(a2 + 112))
  {
    if (v36) {
      char v36 = 0;
    }
    else {
      sub_215731D94(a1, (uint64_t)",", 1);
    }
    int v5 = sub_215731D94(a1, (uint64_t)"package_data_id", 15);
    sub_215731D94(v5, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (*(unsigned char *)(a2 + 152))
  {
    if (v36) {
      char v36 = 0;
    }
    else {
      sub_215731D94(a1, (uint64_t)",", 1);
    }
    uint64_t v6 = sub_215731D94(a1, (uint64_t)"context_name", 12);
    sub_215731D94(v6, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (*(unsigned char *)(a2 + 224))
  {
    if (v36) {
      char v36 = 0;
    }
    else {
      sub_215731D94(a1, (uint64_t)",", 1);
    }
    uint64_t v7 = sub_215731D94(a1, (uint64_t)"context_id", 10);
    sub_215731D94(v7, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (!*(unsigned char *)(a2 + 256))
  {
    int v10 = 7;
    HIBYTE(v39) = 7;
    LODWORD(v37) = 1819047278;
    int v11 = 1953525612;
LABEL_29:
    *(_DWORD *)((char *)&v37 + 3) = v11;
    HIBYTE(v37) = 0;
    goto LABEL_30;
  }
  uint64_t v9 = *(void *)(a2 + 240);
  int v8 = *(std::__shared_weak_count **)(a2 + 248);
  if (v8)
  {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if (v9) {
        goto LABEL_25;
      }
      goto LABEL_28;
    }
  }
  if (!v9)
  {
LABEL_28:
    int v10 = 7;
    HIBYTE(v39) = 7;
    LODWORD(v37) = 1819047278;
    int v11 = 1920233580;
    goto LABEL_29;
  }
LABEL_25:
  sub_215AF0590(a2 + 232, (uint64_t)&v37);
  int v10 = HIBYTE(v39);
LABEL_30:
  int v12 = v37;
  unint64_t v13 = v38;
  v32[0] = v39;
  *(_DWORD *)((char *)v32 + 3) = *(_DWORD *)((char *)&v39 + 3);
  unint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v37 = 0;
  if (!*(unsigned char *)(a2 + 256)) {
    goto LABEL_44;
  }
  if (*v34)
  {
    *uint64_t v34 = 0;
    char v14 = v35;
  }
  else
  {
    char v14 = v35;
    sub_215731D94(v35, (uint64_t)",", 1);
  }
  unint64_t v15 = sub_215731D94(v14, (uint64_t)"value", 5);
  uint64_t v16 = sub_215731D94(v15, (uint64_t)": ", 2);
  if ((v10 & 0x80) != 0)
  {
    sub_215738B0C(&v41, v12, v13);
    unsigned int v18 = v44;
    BOOL v17 = v41;
    unint64_t v13 = v42;
  }
  else
  {
    long long v41 = (void **)v12;
    unint64_t v42 = v13;
    *(_DWORD *)uint64_t v43 = v32[0];
    *(_DWORD *)&v43[3] = *(_DWORD *)((char *)v32 + 3);
    unsigned __int8 v44 = v10;
    BOOL v17 = (void **)v12;
    unsigned int v18 = v10;
  }
  uint64_t v19 = (v18 & 0x80u) == 0 ? (void **)&v41 : v17;
  uint64_t v20 = (v18 & 0x80u) == 0 ? v18 : v13;
  sub_215731D94(v16, (uint64_t)v19, v20);
  if (((char)v44 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v10 & 0x80) == 0) {
      goto LABEL_45;
    }
LABEL_52:
    operator delete(v12);
    if ((SHIBYTE(v39) & 0x80000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_53;
  }
  operator delete(v41);
  if ((v10 & 0x80) != 0) {
    goto LABEL_52;
  }
LABEL_45:
  if ((SHIBYTE(v39) & 0x80000000) == 0) {
    goto LABEL_46;
  }
LABEL_53:
  operator delete(v37);
LABEL_46:
  v31[0] = 0;
  v31[24] = 0;
  sub_215AE7B10((uint64_t)&v34, "name", a2 + 264, (uint64_t)v31);
  if (*(unsigned char *)(a2 + 416))
  {
    if (*v34)
    {
      *uint64_t v34 = 0;
      int8x8_t v21 = v35;
    }
    else
    {
      int8x8_t v21 = v35;
      sub_215731D94(v35, (uint64_t)",", 1);
    }
    uint64_t v22 = sub_215731D94(v21, (uint64_t)"instance_id", 11);
    sub_215731D94(v22, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (*(unsigned char *)(a2 + 576))
  {
    if (*v34)
    {
      *uint64_t v34 = 0;
      int v23 = v35;
    }
    else
    {
      int v23 = v35;
      sub_215731D94(v35, (uint64_t)",", 1);
    }
    int v24 = sub_215731D94(v23, (uint64_t)"reference_id", 12);
    sub_215731D94(v24, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  if (*(unsigned char *)(a2 + 624))
  {
    if (*v34)
    {
      *uint64_t v34 = 0;
      int v25 = v35;
    }
    else
    {
      int v25 = v35;
      sub_215731D94(v35, (uint64_t)",", 1);
    }
    int v26 = sub_215731D94(v25, (uint64_t)"references", 10);
    sub_215731D94(v26, (uint64_t)": ", 2);
    int v40 = 0;
    operator new();
  }
  v30[0] = 0;
  v30[24] = 0;
  sub_215AE7B10((uint64_t)&v34, "space", a2 + 632, (uint64_t)v30);
  v29[0] = 0;
  v29[24] = 0;
  sub_215AE7EF0((uint64_t)&v34, "custom_timestamp", a2 + 688, (uint64_t)v29);
  v28[0] = 0;
  v28[24] = 0;
  sub_215AE7EF0((uint64_t)&v34, "auto_timestamp", a2 + 720, (uint64_t)v28);
  sub_215731D94(a1, (uint64_t)"}", 1);
  return a1;
}

void sub_215AE78D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (*(char *)(v44 - 129) < 0) {
    operator delete(*(void **)(v44 - 152));
  }
  uint64_t v46 = *(void *)(v44 - 176);
  *(void *)(v44 - 176) = 0;
  if (v46) {
    sub_215E15464(v44 - 176, v46);
  }
  sub_215742CF0((uint64_t)&a39);
  _Unwind_Resume(a1);
}

void sub_215AE7B10(uint64_t a1, char *__s, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a3 + 48))
  {
    if (**(unsigned char **)a1) {
      **(unsigned char **)a1 = 0;
    }
    else {
      sub_215731D94(*(void **)(a1 + 8), (uint64_t)",", 1);
    }
    size_t v7 = strlen(__s);
    int v8 = sub_215731D94(*(void **)(a1 + 8), (uint64_t)__s, v7);
    uint64_t v9 = sub_215731D94(v8, (uint64_t)": ", 2);
    if (!*(unsigned char *)(a4 + 24))
    {
      int v14 = 0;
      operator new();
    }
    if (*(char *)(a4 + 23) < 0)
    {
      sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)std::__fs::filesystem::path __p = *(_OWORD *)a4;
      uint64_t v13 = *(void *)(a4 + 16);
    }
    if (v13 >= 0) {
      int v10 = __p;
    }
    else {
      int v10 = (void **)__p[0];
    }
    if (v13 >= 0) {
      uint64_t v11 = HIBYTE(v13);
    }
    else {
      uint64_t v11 = (uint64_t)__p[1];
    }
    sub_215731D94(v9, (uint64_t)v10, v11);
    if (SHIBYTE(v13) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AE7E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  MEMORY[0x2166C4D20](v4, 0x10B2C40EED050F3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE7E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE7E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE7E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22)
{
  if (a21 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_215AE7ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE7EF0(uint64_t a1, char *__s, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a3 + 24))
  {
    if (**(unsigned char **)a1) {
      **(unsigned char **)a1 = 0;
    }
    else {
      sub_215731D94(*(void **)(a1 + 8), (uint64_t)",", 1);
    }
    size_t v7 = strlen(__s);
    int v8 = sub_215731D94(*(void **)(a1 + 8), (uint64_t)__s, v7);
    uint64_t v9 = sub_215731D94(v8, (uint64_t)": ", 2);
    if (!*(unsigned char *)(a4 + 24))
    {
      int v14 = 0;
      operator new();
    }
    if (*(char *)(a4 + 23) < 0)
    {
      sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)std::__fs::filesystem::path __p = *(_OWORD *)a4;
      uint64_t v13 = *(void *)(a4 + 16);
    }
    if (v13 >= 0) {
      int v10 = __p;
    }
    else {
      int v10 = (void **)__p[0];
    }
    if (v13 >= 0) {
      uint64_t v11 = HIBYTE(v13);
    }
    else {
      uint64_t v11 = (uint64_t)__p[1];
    }
    sub_215731D94(v9, (uint64_t)v10, v11);
    if (SHIBYTE(v13) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215AE8230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  MEMORY[0x2166C4D20](v4, 0x10B2C40EED050F3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE825C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE8270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE8284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22)
{
  if (a21 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_215AE82D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AE82EC(void *a1)
{
  *a1 = off_26C678AE8;
  sub_215948050((uint64_t)(a1 + 2));
  return a1;
}

void sub_215AE8330(void *a1)
{
  *a1 = off_26C678AE8;
  sub_215948050((uint64_t)(a1 + 2));

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AE8394(uint64_t a1, unsigned __int8 *a2, void *a3, size_t a4)
{
  std::string __src = a3;
  size_t __len = a4;
  if (*(unsigned char *)(a1 + 80))
  {
    if (!*(unsigned char *)(a1 + 76) || *(_DWORD *)(a1 + 72) != *((_DWORD *)a2 + 6)) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 64))
  {
    if ((char)a2[23] < 0)
    {
      sub_215738B0C(__p, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      *(_OWORD *)std::__fs::filesystem::path __p = *(_OWORD *)a2;
      *(void *)&__p[16] = *((void *)a2 + 2);
    }
    LOBYTE(v33) = 1;
    BOOL v7 = sub_215AEAACC(a1 + 16, (uint64_t)__p);
    if ((_BYTE)v33 && (__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    if (!v7) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 128))
  {
    if (!*(unsigned char *)(a1 + 120)) {
      return 0;
    }
    uint64_t v8 = *(unsigned __int8 *)(a1 + 111);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = *(unsigned __int8 *)(a1 + 111);
    }
    else {
      uint64_t v9 = *(void *)(a1 + 96);
    }
    uint64_t v10 = a2[23];
    int v11 = (char)v10;
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *((void *)a2 + 1);
    }
    if (v9 != v10) {
      return 0;
    }
    int v12 = (const void **)(a1 + 88);
    if (v11 >= 0) {
      uint64_t v13 = a2;
    }
    else {
      uint64_t v13 = *(unsigned __int8 **)a2;
    }
    if ((v8 & 0x80) != 0)
    {
      if (memcmp(*v12, v13, *(void *)(a1 + 96))) {
        return 0;
      }
    }
    else if (*(unsigned char *)(a1 + 111))
    {
      while (*(unsigned __int8 *)v12 == *v13)
      {
        int v12 = (const void **)((char *)v12 + 1);
        ++v13;
        if (!--v8) {
          goto LABEL_32;
        }
      }
      return 0;
    }
LABEL_32:
    if (*(_DWORD *)(a1 + 112) != *((_DWORD *)a2 + 6)) {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 168)) {
    goto LABEL_41;
  }
  LODWORD(v33) = 0;
  sub_215AE92E0((uint64_t)&v40, (uint64_t)__p, (uint64_t)&__src);
  if (v33 == -1) {
    sub_215742D4C();
  }
  int v40 = &v39;
  ((void (*)(void **__return_ptr, char **, unsigned char *))off_26C678B38[v33])(v37, &v40, __p);
  if (v33 != -1) {
    ((void (*)(char **, unsigned char *))off_26C678B20[v33])(&v40, __p);
  }
  int v14 = sub_215AE51C4((unsigned __int8 *)(a1 + 136), (unsigned __int8 *)v37);
  int v15 = v14;
  if (v38 < 0)
  {
    operator delete(v37[0]);
    if (v15) {
      goto LABEL_41;
    }
  }
  else if (v14)
  {
LABEL_41:
    if (!*(unsigned char *)(a1 + 240)) {
      return 1;
    }
    size_t v16 = __len;
    if (__len >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v17 = a1 + 176;
    unsigned int v18 = __src;
    if (__len >= 0x17)
    {
      size_t v20 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((__len | 7) != 0x17) {
        size_t v20 = __len | 7;
      }
      size_t v21 = v20 + 1;
      p_dst = operator new(v20 + 1);
      *(void *)&long long v31 = v16;
      *((void *)&v31 + 1) = v21 | 0x8000000000000000;
      long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v31) = __len;
      p_dst = &__dst;
      if (!__len) {
        goto LABEL_50;
      }
    }
    memmove(p_dst, v18, v16);
LABEL_50:
    *((unsigned char *)p_dst + v16) = 0;
    *(void *)&__p[15] = *(void *)((char *)&v31 + 7);
    unint64_t v22 = HIBYTE(v31);
    *(void *)std::__fs::filesystem::path __p = __dst;
    *(void *)&__p[8] = v31;
    __p[23] = HIBYTE(v31);
    LOBYTE(v33) = 0;
    char v34 = 0;
    int v23 = __p;
    if (v31 < 0)
    {
      int v23 = __dst;
      unint64_t v22 = *(void *)&__p[8];
    }
    if (!v22) {
      goto LABEL_74;
    }
    int v24 = v23;
    if (v22 < 8) {
      goto LABEL_76;
    }
    int v24 = &v23[v22 & 0xFFFFFFFFFFFFFFF8];
    int v25 = v23 + 3;
    unint64_t v26 = v22 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int8x8_t v27 = vceq_s8(*(int8x8_t *)(v25 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
      if (v27.i8[0])
      {
        *(v25 - 3) = 95;
        if ((v27.i8[1] & 1) == 0) {
          goto LABEL_58;
        }
      }
      else if ((v27.i8[1] & 1) == 0)
      {
LABEL_58:
        if (v27.i8[2]) {
          goto LABEL_59;
        }
        goto LABEL_67;
      }
      *(v25 - 2) = 95;
      if (v27.i8[2])
      {
LABEL_59:
        *(v25 - 1) = 95;
        if ((v27.i8[3] & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_68;
      }
LABEL_67:
      if ((v27.i8[3] & 1) == 0)
      {
LABEL_60:
        if (v27.i8[4]) {
          goto LABEL_61;
        }
        goto LABEL_69;
      }
LABEL_68:
      *int v25 = 95;
      if (v27.i8[4])
      {
LABEL_61:
        v25[1] = 95;
        if ((v27.i8[5] & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
LABEL_69:
      if ((v27.i8[5] & 1) == 0)
      {
LABEL_62:
        if (v27.i8[6]) {
          goto LABEL_63;
        }
        goto LABEL_71;
      }
LABEL_70:
      v25[2] = 95;
      if (v27.i8[6])
      {
LABEL_63:
        v25[3] = 95;
        if (v27.i8[7]) {
          goto LABEL_72;
        }
        goto LABEL_55;
      }
LABEL_71:
      if (v27.i8[7]) {
LABEL_72:
      }
        v25[4] = 95;
LABEL_55:
      v25 += 8;
      v26 -= 8;
      if (!v26)
      {
        if (v22 == (v22 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_74;
        }
LABEL_76:
        char v29 = &v23[v22];
        do
        {
          if (*v24 == 58) {
            *int v24 = 95;
          }
          ++v24;
        }
        while (v24 != v29);
LABEL_74:
        sub_215AE54E8(v17);
      }
    }
  }
  return 0;
}

void sub_215AE87CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21578D208((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE87E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (*(char *)(v19 - 65) < 0) {
    operator delete(*(void **)(v19 - 88));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AE8840(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  unsigned __int8 v32 = 1;
  uint64_t v4 = a2 + 16;
  uint64_t v6 = *(void *)(a2 + 24);
  int v5 = *(std::__shared_weak_count **)(a2 + 32);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6) {
        goto LABEL_4;
      }
LABEL_8:
      LOBYTE(__p) = 0;
      char v36 = 0;
      if (!*(unsigned char *)(a1 + 64))
      {
        int v7 = 0;
        goto LABEL_17;
      }
      int v7 = 0;
      LOBYTE(__dst) = 0;
      goto LABEL_11;
    }
  }
  if (!v6) {
    goto LABEL_8;
  }
LABEL_4:
  sub_215AF0948(v4);
  long long __p = __dst;
  uint64_t v34 = v44;
  int v35 = v45;
  int v7 = 1;
  char v36 = 1;
  if (!*(unsigned char *)(a1 + 64)) {
    goto LABEL_16;
  }
  if (SHIBYTE(v34) < 0)
  {
    sub_215738B0C(&__dst, (void *)__p, *((unint64_t *)&__p + 1));
  }
  else
  {
    long long __dst = __p;
    uint64_t v44 = v34;
  }
LABEL_11:
  LOBYTE(v45) = v7;
  if (!sub_215AEAACC(a1 + 16, (uint64_t)&__dst)) {
    unsigned __int8 v32 = 0;
  }
  if ((_BYTE)v45 && SHIBYTE(v44) < 0) {
    operator delete((void *)__dst);
  }
LABEL_16:
  if (!v32) {
    goto LABEL_71;
  }
LABEL_17:
  if (*(unsigned char *)(a1 + 80))
  {
    if (v7)
    {
      if (!*(unsigned char *)(a1 + 76) || *(_DWORD *)(a1 + 72) != v35) {
        goto LABEL_71;
      }
    }
    else if (*(unsigned char *)(a1 + 76))
    {
      goto LABEL_71;
    }
  }
  if (*(unsigned char *)(a1 + 128))
  {
    if (*(unsigned char *)(a1 + 120) && v7)
    {
      uint64_t v8 = *(unsigned __int8 *)(a1 + 111);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = *(unsigned __int8 *)(a1 + 111);
      }
      else {
        uint64_t v9 = *(void *)(a1 + 96);
      }
      uint64_t v10 = HIBYTE(v34);
      if (v34 < 0) {
        uint64_t v10 = *((void *)&__p + 1);
      }
      if (v9 != v10) {
        goto LABEL_71;
      }
      int v11 = (const void **)(a1 + 88);
      if (v34 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = (long long *)__p;
      }
      if ((v8 & 0x80) != 0)
      {
        if (memcmp(*v11, p_p, *(void *)(a1 + 96))) {
          goto LABEL_71;
        }
      }
      else if (*(unsigned char *)(a1 + 111))
      {
        while (*(unsigned __int8 *)v11 == *(unsigned __int8 *)p_p)
        {
          int v11 = (const void **)((char *)v11 + 1);
          p_p = (long long *)((char *)p_p + 1);
          if (!--v8) {
            goto LABEL_44;
          }
        }
        goto LABEL_71;
      }
LABEL_44:
      if (*(_DWORD *)(a1 + 112) != v35) {
        goto LABEL_71;
      }
    }
    else if ((*(unsigned char *)(a1 + 120) != 0) != (v7 != 0))
    {
      goto LABEL_71;
    }
  }
  if (*(unsigned char *)(a1 + 168) && !sub_215AE51C4((unsigned __int8 *)(a1 + 136), *(unsigned __int8 **)a2)) {
    goto LABEL_71;
  }
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v13 = *(std::__shared_weak_count **)(a2 + 32);
  if (v13)
  {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (!v14)
  {
    uint64_t v15 = 0;
    if (!*(unsigned char *)(a1 + 240)) {
      goto LABEL_55;
    }
LABEL_54:
    sub_215AE54E8(a1 + 176);
  }
  uint64_t v15 = sub_215AF0140(v4);
  if (*(unsigned char *)(a1 + 240)) {
    goto LABEL_54;
  }
LABEL_55:
  if (*(unsigned char *)(a1 + 272))
  {
    uint64_t v17 = *(void *)(a2 + 24);
    size_t v16 = *(std::__shared_weak_count **)(a2 + 32);
    if (v16)
    {
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    if (!v17) {
      goto LABEL_66;
    }
    uint64_t v19 = *(void *)(a1 + 256);
    unsigned int v18 = *(std::__shared_weak_count **)(a1 + 264);
    if (v18)
    {
      atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
    {
      if ((sub_215AF0058(a1 + 248, v4) & 1) == 0) {
        goto LABEL_71;
      }
    }
    else
    {
LABEL_66:
      uint64_t v21 = *(void *)(a2 + 24);
      size_t v20 = *(std::__shared_weak_count **)(a2 + 32);
      if (v20)
      {
        atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21 || sub_215AE5C88(*(void *)(a1 + 256), *(std::__shared_weak_count **)(a1 + 264))) {
        goto LABEL_71;
      }
    }
  }
  int v22 = v32;
  if (*(unsigned char *)(a1 + 328))
  {
    if (v14)
    {
      sub_215AEA104(&__dst, (long long *)(v15 + 16));
    }
    else
    {
      LOBYTE(__dst) = 0;
      LOBYTE(v45) = 0;
    }
    if (!sub_215AEAACC(a1 + 280, (uint64_t)&__dst))
    {
      int v22 = 0;
      unsigned __int8 v32 = 0;
    }
    if ((_BYTE)v45 && SHIBYTE(v44) < 0) {
      operator delete((void *)__dst);
    }
    if (!v22) {
      goto LABEL_72;
    }
  }
  if (*(unsigned char *)(a1 + 432))
  {
    if (v14)
    {
      sub_215AEA190(&__dst, (long long *)(v15 + 112));
    }
    else
    {
      LOBYTE(__dst) = 0;
      LOBYTE(v47) = 0;
    }
    if (!sub_215AEAD34(a1 + 336, (uint64_t)&__dst))
    {
      int v22 = 0;
      unsigned __int8 v32 = 0;
    }
    if ((_BYTE)v47 && SHIBYTE(v44) < 0) {
      operator delete((void *)__dst);
    }
    if (!v22) {
      goto LABEL_72;
    }
  }
  if (*(unsigned char *)(a1 + 592))
  {
    if (v14 && (*(unsigned char *)(v15 + 40) || *(unsigned char *)(v15 + 160)))
    {
      sub_215AE5D14((uint64_t)&v37, v15);
      LOBYTE(__dst) = 0;
      LOBYTE(v45) = 0;
      if (v39)
      {
        long long __dst = v37;
        uint64_t v44 = v38;
        uint64_t v38 = 0;
        long long v37 = 0uLL;
        LOBYTE(v45) = 1;
      }
      LOBYTE(v46) = 0;
      char v50 = 0;
      int v24 = 1;
      if (v42)
      {
        _X0 = 0;
        _X1 = 0;
        uint64_t v47 = v41;
        long long v46 = v40;
        uint64_t v41 = 0;
        long long v40 = 0uLL;
        __asm { CASPAL          X0, X1, X0, X1, [X8] }
        uint64_t v48 = _X0;
        uint64_t v49 = 0;
        char v50 = 1;
      }
    }
    else
    {
      int v24 = 0;
      LOBYTE(__dst) = 0;
    }
    char v51 = v24;
    if (sub_215AEB0AC(a1 + 448, (uint64_t)&__dst))
    {
      sub_215AEA230((uint64_t)&__dst);
      if (!v24) {
        goto LABEL_107;
      }
    }
    else
    {
      unsigned __int8 v32 = 0;
      sub_215AEA230((uint64_t)&__dst);
      if (!v24)
      {
LABEL_107:
        int v22 = v32;
        if (!v32) {
          goto LABEL_72;
        }
        goto LABEL_111;
      }
    }
    sub_21582B784((uint64_t)&v37);
    int v22 = v32;
    if (!v32) {
      goto LABEL_72;
    }
  }
LABEL_111:
  if (*(unsigned char *)(a1 + 696))
  {
    if (v14)
    {
      sub_215AEA104(&__dst, (long long *)(v15 + 48));
    }
    else
    {
      LOBYTE(__dst) = 0;
      LOBYTE(v45) = 0;
    }
    if (!sub_215AEAACC(a1 + 648, (uint64_t)&__dst))
    {
      int v22 = 0;
      unsigned __int8 v32 = 0;
    }
    if ((_BYTE)v45 && SHIBYTE(v44) < 0) {
      operator delete((void *)__dst);
    }
    if (!v22) {
      goto LABEL_72;
    }
  }
  if (*(unsigned char *)(a1 + 640))
  {
    if (v14)
    {
      sub_215746DAC((uint64_t)&__dst, v15 + 176);
    }
    else
    {
      LOBYTE(__dst) = 0;
      LOBYTE(v45) = 0;
    }
    sub_215AEAC88((uint64_t)&v32, a1 + 608, (uint64_t)&__dst);
    sub_215AEA29C((uint64_t)&__dst);
    LOBYTE(v22) = v32;
    if (!v32) {
      goto LABEL_72;
    }
  }
  if (*(unsigned char *)(a1 + 728))
  {
    if (!v14)
    {
      if (*(unsigned char *)(a1 + 720) || *(unsigned char *)(a1 + 760) && *(unsigned char *)(a1 + 752)) {
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (*(unsigned char *)(v15 + 96) && *(unsigned char *)(a1 + 720))
    {
      if (*(void *)(a1 + 704) != *(void *)(v15 + 80)
        || *(unsigned __int8 *)(a1 + 712) != *(unsigned __int8 *)(v15 + 88))
      {
        goto LABEL_71;
      }
    }
    else if ((*(unsigned char *)(v15 + 96) != 0) != (*(unsigned char *)(a1 + 720) != 0))
    {
      goto LABEL_71;
    }
  }
  if (!*(unsigned char *)(a1 + 760)) {
    goto LABEL_72;
  }
  if (!v14)
  {
    if (!*(unsigned char *)(a1 + 752)) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  if (!*(unsigned char *)(a1 + 752)
    || *(void *)(a1 + 736) != *(void *)v15
    || *(unsigned __int8 *)(a1 + 744) != *(unsigned __int8 *)(v15 + 8))
  {
LABEL_71:
    LOBYTE(v22) = 0;
  }
LABEL_72:
  if (v36 && SHIBYTE(v34) < 0) {
    operator delete((void *)__p);
  }
  return v22 & 1;
}

void sub_215AE9088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,char a46,uint64_t a47,char a48)
{
  if (a46)
  {
    if (a44 < 0) {
      operator delete(__p);
    }
  }
  sub_215AEA534((uint64_t)&a29);
  sub_215AEA534((uint64_t)&a20);
  sub_215AE9144((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_215AE9144(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 72)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (!*(unsigned char *)(a1 + 24) || (*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_215AE91B0()
{
  int v0 = 0;
  sub_215AEB430();
}

void sub_215AE929C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE92B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE92CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AE92E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v3 = *(void *)(a3 + 8);
  if (v3 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  int v5 = *(const void **)a3;
  if (v3 >= 0x17)
  {
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v7 = v3 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = (void **)operator new(v7 + 1);
    __dst[1] = (void *)v3;
    unint64_t v11 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v11) = *(void *)(a3 + 8);
  uint64_t v6 = __dst;
  if (v3) {
LABEL_8:
  }
    memmove(v6, v5, v3);
  *((unsigned char *)v6 + v3) = 0;
  v12[0] = a2;
  v12[1] = __dst;
  v12[2] = a2;
  _OWORD v12[3] = __dst;
  void v12[4] = __dst;
  uint64_t v9 = *(unsigned int *)(a2 + 24);
  if (v9 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = v12;
  ((void (*)(void **, uint64_t))off_26C678B08[v9])(&v13, a2);
  if (SHIBYTE(v11) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_215AE93FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AE9418()
{
}

void sub_215AE9618(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AE963C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AE9680(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int v5 = *(unsigned __int8 *)(*a3 + 48);
  if (*(unsigned char *)(*a2 + 48)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if ((*(unsigned char *)(*a2 + 48) != 0) != (v5 != 0)) {
      return 0;
    }
  }
  else if (!sub_215AE9F88(*a2, *a3))
  {
    return 0;
  }
  uint64_t v8 = a2[1];
  uint64_t v9 = a3[1];
  BOOL v10 = *(unsigned char *)(v8 + 8) != 0;
  BOOL v11 = *(unsigned char *)(v9 + 8) != 0;
  if (*(unsigned char *)(v8 + 8)) {
    BOOL v12 = *(unsigned char *)(v9 + 8) == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12
    || ((BOOL v10 = *(unsigned char *)(v8 + 4) != 0, v11 = *(unsigned char *)(v9 + 4) != 0, *(unsigned char *)(v8 + 4))
      ? (BOOL v13 = *(unsigned char *)(v9 + 4) == 0)
      : (BOOL v13 = 1),
        v13))
  {
    if ((v10 ^ v11)) {
      return 0;
    }
  }
  else if (*(_DWORD *)v8 != *(_DWORD *)v9)
  {
    return 0;
  }
  uint64_t v14 = a2[2];
  uint64_t v15 = (unsigned __int8 **)a3[2];
  if (*(unsigned char *)(v14 + 40)) {
    BOOL v16 = *((unsigned char *)v15 + 40) == 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v16)
  {
    char v17 = (*(unsigned char *)(v14 + 40) != 0) ^ (*((unsigned char *)v15 + 40) != 0);
    goto LABEL_45;
  }
  char v17 = (*(unsigned char *)(v14 + 32) != 0) ^ (*((unsigned char *)v15 + 32) != 0);
  if (!*(unsigned char *)(v14 + 32) || !*((unsigned char *)v15 + 32))
  {
LABEL_45:
    if (v17) {
      return 0;
    }
    goto LABEL_46;
  }
  uint64_t v18 = *(unsigned __int8 *)(v14 + 23);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = (unsigned __int8 *)*(unsigned __int8 *)(v14 + 23);
  }
  else {
    uint64_t v19 = *(unsigned __int8 **)(v14 + 8);
  }
  size_t v20 = (unsigned __int8 *)*((unsigned __int8 *)v15 + 23);
  int v21 = (char)v20;
  if ((char)v20 < 0) {
    size_t v20 = v15[1];
  }
  if (v19 != v20) {
    return 0;
  }
  if (v21 >= 0) {
    int v22 = (unsigned __int8 *)a3[2];
  }
  else {
    int v22 = *v15;
  }
  if ((v18 & 0x80) != 0)
  {
    if (memcmp(*(const void **)v14, v22, *(void *)(v14 + 8))) {
      return 0;
    }
  }
  else if (*(unsigned char *)(v14 + 23))
  {
    int v23 = (unsigned __int8 *)a2[2];
    while (*v23 == *v22)
    {
      ++v23;
      ++v22;
      if (!--v18) {
        goto LABEL_84;
      }
    }
    return 0;
  }
LABEL_84:
  if (*(_DWORD *)(v14 + 24) != *((_DWORD *)v15 + 6)) {
    return 0;
  }
LABEL_46:
  int v24 = (unsigned __int8 *)a2[3];
  int v25 = (unsigned __int8 *)a3[3];
  int v26 = v25[32];
  if (v24[32]) {
    BOOL v27 = v26 == 0;
  }
  else {
    BOOL v27 = 1;
  }
  if (v27)
  {
    if ((v24[32] != 0) != (v26 != 0)) {
      return 0;
    }
  }
  else if (!sub_215AE539C(v24, v25))
  {
    return 0;
  }
  uint64_t v28 = (unsigned __int8 *)a2[4];
  char v29 = (unsigned __int8 *)a3[4];
  int v30 = v29[64];
  if (v28[64]) {
    BOOL v31 = v30 == 0;
  }
  else {
    BOOL v31 = 1;
  }
  if (v31)
  {
    if ((v28[64] != 0) != (v30 != 0)) {
      return 0;
    }
  }
  else
  {
    int v36 = *((_DWORD *)v28 + 14);
    int v37 = *((_DWORD *)v29 + 14);
    if (v36)
    {
      if (v37 != 1) {
        return 0;
      }
      if (v36 != 1) {
        goto LABEL_229;
      }
      uint64_t v38 = v28[23];
      if ((v38 & 0x80u) == 0) {
        uint64_t v39 = v28[23];
      }
      else {
        uint64_t v39 = *((void *)v28 + 1);
      }
      uint64_t v40 = v29[23];
      int v41 = (char)v40;
      if ((v40 & 0x80u) != 0) {
        uint64_t v40 = *((void *)v29 + 1);
      }
      if (v39 != v40) {
        return 0;
      }
      if (v41 < 0) {
        char v29 = *(unsigned __int8 **)v29;
      }
      if ((v38 & 0x80) != 0)
      {
        if (memcmp(*(const void **)v28, v29, *((void *)v28 + 1))) {
          return 0;
        }
      }
      else if (v28[23])
      {
        while (*v28 == *v29)
        {
          ++v28;
          ++v29;
          if (!--v38) {
            goto LABEL_60;
          }
        }
        return 0;
      }
    }
    else if (v37 || (sub_21598E8F8(v28, v29) & 1) == 0)
    {
      return 0;
    }
  }
LABEL_60:
  uint64_t v32 = a2[5];
  uint64_t v33 = a3[5];
  int v34 = *(unsigned __int8 *)(v33 + 24);
  if (*(unsigned char *)(v32 + 24)) {
    BOOL v35 = v34 == 0;
  }
  else {
    BOOL v35 = 1;
  }
  if (v35)
  {
    if ((*(unsigned char *)(v32 + 24) != 0) != (v34 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v43 = *(void *)(v32 + 8);
    char v42 = *(std::__shared_weak_count **)(v32 + 16);
    if (v42)
    {
      atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
    if (!v43) {
      goto LABEL_99;
    }
    uint64_t v45 = *(void *)(v33 + 8);
    uint64_t v44 = *(std::__shared_weak_count **)(v33 + 16);
    if (v44)
    {
      atomic_fetch_add_explicit(&v44->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v44->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
    if (v45)
    {
      if ((sub_215AF0058(v32, v33) & 1) == 0) {
        return 0;
      }
    }
    else
    {
LABEL_99:
      uint64_t v47 = *(void *)(v32 + 8);
      long long v46 = *(std::__shared_weak_count **)(v32 + 16);
      if (v46)
      {
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v46->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      if (v47) {
        return 0;
      }
      uint64_t v49 = *(void *)(v33 + 8);
      uint64_t v48 = *(std::__shared_weak_count **)(v33 + 16);
      if (v48)
      {
        atomic_fetch_add_explicit(&v48->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v48->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      if (v49) {
        return 0;
      }
    }
  }
  uint64_t v50 = a2[6];
  uint64_t v51 = a3[6];
  int v52 = *(unsigned __int8 *)(v51 + 48);
  if (*(unsigned char *)(v50 + 48)) {
    BOOL v53 = v52 == 0;
  }
  else {
    BOOL v53 = 1;
  }
  if (v53)
  {
    if ((*(unsigned char *)(v50 + 48) != 0) != (v52 != 0)) {
      return 0;
    }
  }
  else if (!sub_215AE9F88(v50, v51))
  {
    return 0;
  }
  uint64_t v54 = a2[7];
  uint64_t v55 = a3[7];
  int v56 = *(unsigned __int8 *)(v54 + 96);
  int v57 = *(unsigned __int8 *)(v55 + 96);
  if (!*(unsigned char *)(v54 + 96) || !*(unsigned char *)(v55 + 96)) {
    goto LABEL_153;
  }
  int v58 = *(_DWORD *)(v54 + 80);
  int v59 = *(_DWORD *)(v55 + 80);
  if (v58)
  {
    if (v59 != 1) {
      return 0;
    }
    if (v58 != 1) {
      goto LABEL_229;
    }
    uint64_t v60 = *(unsigned __int8 *)(v54 + 39);
    size_t v61 = *(void *)(v54 + 24);
    if ((v60 & 0x80u) == 0) {
      uint64_t v62 = *(unsigned __int8 *)(v54 + 39);
    }
    else {
      uint64_t v62 = *(void *)(v54 + 24);
    }
    uint64_t v63 = *(unsigned __int8 *)(v55 + 39);
    int v64 = (char)v63;
    if ((v63 & 0x80u) != 0) {
      uint64_t v63 = *(void *)(v55 + 24);
    }
    if (v62 != v63) {
      return 0;
    }
    long long v65 = (const void **)(v54 + 16);
    std::__fs::filesystem::path::__string_view v68 = *(unsigned __int8 **)(v55 + 16);
    uint64_t v66 = (unsigned __int8 *)(v55 + 16);
    uint64_t v67 = v68;
    if (v64 >= 0) {
      unint64_t v69 = v66;
    }
    else {
      unint64_t v69 = v67;
    }
    if ((v60 & 0x80) == 0)
    {
      if (v60)
      {
        while (*(unsigned __int8 *)v65 == *v69)
        {
          long long v65 = (const void **)((char *)v65 + 1);
          ++v69;
          if (!--v60) {
            goto LABEL_154;
          }
        }
        return 0;
      }
      goto LABEL_154;
    }
LABEL_201:
    if (memcmp(*v65, v69, v61)) {
      return 0;
    }
    goto LABEL_154;
  }
  if (v59) {
    return 0;
  }
  int v56 = *(unsigned __int8 *)(v54 + 64);
  int v57 = *(unsigned __int8 *)(v55 + 64);
  if (!*(unsigned char *)(v54 + 64) || !*(unsigned char *)(v55 + 64))
  {
LABEL_153:
    if ((v56 != 0) != (v57 != 0)) {
      return 0;
    }
    goto LABEL_154;
  }
  uint64_t v70 = *(unsigned __int8 *)(v54 + 39);
  size_t v61 = *(void *)(v54 + 24);
  if ((v70 & 0x80u) == 0) {
    uint64_t v71 = *(unsigned __int8 *)(v54 + 39);
  }
  else {
    uint64_t v71 = *(void *)(v54 + 24);
  }
  uint64_t v72 = *(unsigned __int8 *)(v55 + 39);
  int v73 = (char)v72;
  if ((v72 & 0x80u) != 0) {
    uint64_t v72 = *(void *)(v55 + 24);
  }
  if (v71 != v72) {
    return 0;
  }
  long long v65 = (const void **)(v54 + 16);
  int v76 = *(unsigned __int8 **)(v55 + 16);
  float v74 = (unsigned __int8 *)(v55 + 16);
  BOOL v75 = v76;
  if (v73 >= 0) {
    unint64_t v69 = v74;
  }
  else {
    unint64_t v69 = v75;
  }
  if ((v70 & 0x80) != 0) {
    goto LABEL_201;
  }
  if (v70)
  {
    while (*(unsigned __int8 *)v65 == *v69)
    {
      long long v65 = (const void **)((char *)v65 + 1);
      ++v69;
      if (!--v70) {
        goto LABEL_154;
      }
    }
    return 0;
  }
LABEL_154:
  uint64_t v77 = a2[8];
  uint64_t v78 = a3[8];
  BOOL v79 = *(unsigned char *)(v77 + 144) != 0;
  BOOL v80 = *(unsigned char *)(v78 + 144) != 0;
  if (*(unsigned char *)(v77 + 144)) {
    BOOL v81 = *(unsigned char *)(v78 + 144) == 0;
  }
  else {
    BOOL v81 = 1;
  }
  if (v81) {
    goto LABEL_159;
  }
  int v92 = *(_DWORD *)(v77 + 128);
  int v93 = *(_DWORD *)(v78 + 128);
  if (v92)
  {
    if (v93 != 1) {
      return 0;
    }
    if (v92 == 1)
    {
      uint64_t v94 = *(unsigned __int8 *)(v77 + 39);
      size_t v95 = *(void *)(v77 + 24);
      if ((v94 & 0x80u) == 0) {
        uint64_t v96 = *(unsigned __int8 *)(v77 + 39);
      }
      else {
        uint64_t v96 = *(void *)(v77 + 24);
      }
      uint64_t v97 = *(unsigned __int8 *)(v78 + 39);
      int v98 = (char)v97;
      if ((v97 & 0x80u) != 0) {
        uint64_t v97 = *(void *)(v78 + 24);
      }
      if (v96 != v97) {
        return 0;
      }
      char v99 = (const void **)(v77 + 16);
      uint64_t v102 = *(unsigned __int8 **)(v78 + 16);
      std::string::value_type v100 = (unsigned __int8 *)(v78 + 16);
      char v101 = v102;
      if (v98 >= 0) {
        uint64_t v103 = v100;
      }
      else {
        uint64_t v103 = v101;
      }
      if ((v94 & 0x80) != 0)
      {
        if (memcmp(*v99, v103, v95)) {
          return 0;
        }
      }
      else if (v94)
      {
        while (*(unsigned __int8 *)v99 == *v103)
        {
          char v99 = (const void **)((char *)v99 + 1);
          ++v103;
          if (!--v94) {
            goto LABEL_160;
          }
        }
        return 0;
      }
      goto LABEL_160;
    }
LABEL_229:
    sub_215742D4C();
  }
  if (v93) {
    return 0;
  }
  BOOL v79 = *(unsigned char *)(v77 + 112) != 0;
  BOOL v80 = *(unsigned char *)(v78 + 112) != 0;
  if (!*(unsigned char *)(v77 + 112) || *(unsigned char *)(v78 + 112) == 0)
  {
LABEL_159:
    if ((v79 ^ v80)) {
      return 0;
    }
  }
  else if ((sub_215AEF77C((unsigned __int8 *)(v77 + 16), (unsigned __int8 *)(v78 + 16)) & 1) == 0)
  {
    return 0;
  }
LABEL_160:
  uint64_t v82 = a2[9];
  uint64_t v83 = a3[9];
  BOOL v84 = *(unsigned char *)(v82 + 32) != 0;
  BOOL v85 = *(unsigned char *)(v83 + 32) != 0;
  if (*(unsigned char *)(v82 + 32)) {
    BOOL v86 = *(unsigned char *)(v83 + 32) == 0;
  }
  else {
    BOOL v86 = 1;
  }
  if (v86
    || ((BOOL v84 = *(unsigned char *)(v82 + 24) != 0, v85 = *(unsigned char *)(v83 + 24) != 0, *(unsigned char *)(v82 + 24))
      ? (BOOL v87 = *(unsigned char *)(v83 + 24) == 0)
      : (BOOL v87 = 1),
        v87))
  {
    if ((v84 ^ v85)) {
      return 0;
    }
  }
  else
  {
    char v105 = *(unsigned __int8 **)v82;
    char v106 = *(unsigned __int8 **)(v82 + 8);
    std::basic_string_view<_CharT, _Traits>::size_type v107 = *(unsigned __int8 **)v83;
    if (&v106[-*(void *)v82] != (unsigned __int8 *)(*(void *)(v83 + 8) - *(void *)v83)) {
      return 0;
    }
    for (; v105 != v106; v107 += 96)
    {
      uint64_t result = sub_215AEF77C(v105, v107);
      if (!result) {
        return result;
      }
      v105 += 96;
    }
  }
  uint64_t v88 = a2[10];
  uint64_t v89 = a3[10];
  int v90 = *(unsigned __int8 *)(v89 + 48);
  if (*(unsigned char *)(v88 + 48)) {
    BOOL v91 = v90 == 0;
  }
  else {
    BOOL v91 = 1;
  }
  if (v91)
  {
    if ((*(unsigned char *)(v88 + 48) != 0) != (v90 != 0)) {
      return 0;
    }
  }
  else if (!sub_215AE9F88(v88, v89))
  {
    return 0;
  }
  uint64_t v108 = a2[11];
  uint64_t v109 = a3[11];
  if (*(unsigned char *)(v108 + 24)) {
    BOOL v110 = *(unsigned char *)(v109 + 24) == 0;
  }
  else {
    BOOL v110 = 1;
  }
  if (v110)
  {
    char v111 = (*(unsigned char *)(v108 + 24) != 0) ^ (*(unsigned char *)(v109 + 24) != 0);
    goto LABEL_215;
  }
  char v111 = (*(unsigned char *)(v108 + 16) != 0) ^ (*(unsigned char *)(v109 + 16) != 0);
  if (!*(unsigned char *)(v108 + 16) || !*(unsigned char *)(v109 + 16))
  {
LABEL_215:
    if ((v111 & 1) == 0) {
      goto LABEL_216;
    }
    return 0;
  }
  if (*(void *)v108 != *(void *)v109 || *(unsigned __int8 *)(v108 + 8) != *(unsigned __int8 *)(v109 + 8)) {
    return 0;
  }
LABEL_216:
  uint64_t v112 = a2[12];
  uint64_t v113 = a3[12];
  uint64_t result = (*(unsigned char *)(v112 + 24) != 0) == (*(unsigned char *)(v113 + 24) != 0);
  if (*(unsigned char *)(v112 + 24))
  {
    if (*(unsigned char *)(v113 + 24))
    {
      uint64_t result = (*(unsigned char *)(v112 + 16) != 0) == (*(unsigned char *)(v113 + 16) != 0);
      if (*(unsigned char *)(v112 + 16))
      {
        if (*(unsigned char *)(v113 + 16))
        {
          if (*(void *)v112 == *(void *)v113) {
            return *(unsigned __int8 *)(v112 + 8) == *(unsigned __int8 *)(v113 + 8);
          }
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_215AE9F88(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 40);
  int v3 = *(_DWORD *)(a2 + 40);
  if (v2)
  {
    if (v3 == 1)
    {
      if (v2 != 1) {
        sub_215742D4C();
      }
      uint64_t v4 = *(unsigned __int8 *)(a1 + 31);
      size_t v5 = *(void *)(a1 + 16);
      if ((v4 & 0x80u) == 0) {
        uint64_t v6 = *(unsigned __int8 *)(a1 + 31);
      }
      else {
        uint64_t v6 = *(void *)(a1 + 16);
      }
      uint64_t v7 = *(unsigned __int8 *)(a2 + 31);
      int v8 = (char)v7;
      if ((v7 & 0x80u) != 0) {
        uint64_t v7 = *(void *)(a2 + 16);
      }
      if (v6 == v7)
      {
        uint64_t v9 = (const void **)(a1 + 8);
        BOOL v12 = *(unsigned __int8 **)(a2 + 8);
        BOOL v10 = (unsigned __int8 *)(a2 + 8);
        BOOL v11 = v12;
        if (v8 < 0) {
          BOOL v10 = v11;
        }
        if ((v4 & 0x80) == 0)
        {
          if (*(unsigned char *)(a1 + 31))
          {
            uint64_t v13 = v4 - 1;
            do
            {
              int v15 = *(unsigned __int8 *)v9;
              uint64_t v9 = (const void **)((char *)v9 + 1);
              int v14 = v15;
              int v17 = *v10++;
              int v16 = v17;
              BOOL v18 = v13-- != 0;
              char v19 = v18;
              BOOL result = v14 == v16;
            }
            while (v14 == v16 && (v19 & 1) != 0);
            return result;
          }
          return 1;
        }
        return memcmp(*v9, v10, v5) == 0;
      }
    }
    return 0;
  }
  if (v3) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 32)) {
    BOOL v21 = *(unsigned char *)(a2 + 32) == 0;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21) {
    return (*(unsigned char *)(a1 + 32) != 0) == (*(unsigned char *)(a2 + 32) != 0);
  }
  uint64_t v22 = *(unsigned __int8 *)(a1 + 31);
  size_t v5 = *(void *)(a1 + 16);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v23 = *(void *)(a1 + 16);
  }
  uint64_t v24 = *(unsigned __int8 *)(a2 + 31);
  int v25 = (char)v24;
  if ((v24 & 0x80u) != 0) {
    uint64_t v24 = *(void *)(a2 + 16);
  }
  if (v23 != v24) {
    return 0;
  }
  uint64_t v9 = (const void **)(a1 + 8);
  if (v25 >= 0) {
    BOOL v10 = (unsigned __int8 *)(a2 + 8);
  }
  else {
    BOOL v10 = *(unsigned __int8 **)(a2 + 8);
  }
  if ((v22 & 0x80) != 0) {
    return memcmp(*v9, v10, v5) == 0;
  }
  if (!*(unsigned char *)(a1 + 31)) {
    return 1;
  }
  uint64_t v26 = v22 - 1;
  do
  {
    int v28 = *(unsigned __int8 *)v9;
    uint64_t v9 = (const void **)((char *)v9 + 1);
    int v27 = v28;
    int v30 = *v10++;
    int v29 = v30;
    BOOL v18 = v26-- != 0;
    char v31 = v18;
    BOOL result = v27 == v29;
  }
  while (v27 == v29 && (v31 & 1) != 0);
  return result;
}

unsigned char *sub_215AEA104(unsigned char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[24] = 0;
  if (*((unsigned char *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)long long __dst = v3;
    }
    __dst[24] = 1;
  }
  return __dst;
}

void sub_215AEA16C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_215AEA190(unsigned char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[48] = 0;
  if (*((unsigned char *)a2 + 48))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)long long __dst = v3;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)__dst + 4) = _X0;
    *((void *)__dst + 5) = 0;
    __dst[48] = 1;
  }
  return __dst;
}

void sub_215AEA20C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AEA230(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 96)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (!*(unsigned char *)(a1 + 24) || (*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_215AEA29C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    int v2 = *(void ***)a1;
    if (*(void *)a1)
    {
      long long v3 = *(void ***)(a1 + 8);
      uint64_t v4 = *(void ***)a1;
      if (v3 == v2)
      {
LABEL_14:
        *(void *)(a1 + 8) = v2;
        operator delete(v4);
        return a1;
      }
      while (1)
      {
        if (*((unsigned char *)v3 - 16) && *((char *)v3 - 41) < 0)
        {
          operator delete(*(v3 - 8));
          if (*((unsigned char *)v3 - 72))
          {
LABEL_9:
            if (*((char *)v3 - 73) < 0) {
              operator delete(*(v3 - 12));
            }
          }
        }
        else if (*((unsigned char *)v3 - 72))
        {
          goto LABEL_9;
        }
        v3 -= 12;
        if (v3 == v2)
        {
          uint64_t v4 = *(void ***)a1;
          goto LABEL_14;
        }
      }
    }
  }
  return a1;
}

void *sub_215AEA344(void *a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 40);
  if (v3)
  {
    if (v3 == 1) {
      sub_215AE5988();
    }
    sub_215742D4C();
  }
  sub_215AEA430((long long *)(a2 + 8));
  if ((v9 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v9 & 0x80u) == 0) {
    uint64_t v5 = v9;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  BOOL result = sub_215731D94(a1, (uint64_t)v4, v5);
  uint64_t v7 = result;
  if ((char)v9 < 0)
  {
    operator delete(__p[0]);
    return v7;
  }
  return result;
}

void sub_215AEA410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AEA430(long long *a1)
{
  int v5 = 0;
  if (*((unsigned char *)a1 + 24))
  {
    int v5 = -1;
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v3, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v3 = *a1;
      uint64_t v4 = *((void *)a1 + 2);
    }
    int v1 = 1;
    int v5 = 1;
  }
  else
  {
    sub_21574344C(&v3, "nullopt");
    int v1 = v5;
    if (v5 == -1) {
      sub_215742D4C();
    }
  }
  uint64_t v7 = &v6;
  uint64_t result = ((uint64_t (*)(char **, long long *))off_26C678B38[v1])(&v7, &v3);
  if (v5 != -1) {
    return ((uint64_t (*)(char **, long long *))off_26C678B20[v5])(&v7, &v3);
  }
  return result;
}

void sub_215AEA508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AEA520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215AEA534(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if (!*(unsigned char *)(a1 + 24)) {
      return a1;
    }
  }
  else if (!*(unsigned char *)(a1 + 24))
  {
    return a1;
  }
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

_DWORD *sub_215AEA5A4(_DWORD ***a1)
{
  return sub_21576B740(**a1, (char *)(*a1)[1]);
}

void sub_215AEA5B0(uint64_t a1, uint64_t a2)
{
}

void sub_215AEA5C0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  long long v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)int v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  int v5 = __p;
  char v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  int v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    int v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C678B20[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215AEA778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215AEA7BC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215AEA8B8((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215AEA8B0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215AEA8B8(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  int v8 = &v7[24 * v3];
  BOOL v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)int v8 = v17;
    int v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *int v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      int v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  int v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  int v14 = (void **)*a1;
  char v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215AEAAB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_215AEAACC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      if (v4 == 1)
      {
        sub_215AEA430((long long *)a2);
        if ((v28 & 0x80u) == 0) {
          p_s1 = &__s1;
        }
        else {
          LODWORD(p_s1) = __s1;
        }
        if ((v28 & 0x80u) == 0) {
          int v6 = v28;
        }
        else {
          int v6 = __n;
        }
        if (*(char *)(a1 + 31) < 0)
        {
          size_t v7 = *(char **)(a1 + 8);
          std::string::size_type v8 = *(void *)(a1 + 16);
        }
        else
        {
          size_t v7 = (char *)(a1 + 8);
          std::string::size_type v8 = *(unsigned __int8 *)(a1 + 31);
        }
        sub_215E13F30((int)p_s1, v6, v7, v8, 0);
      }
      sub_215742D4C();
    }
    return 0;
  }
  sub_215AEA430((long long *)(a1 + 8));
  sub_215AEA430((long long *)a2);
  unsigned __int8 v9 = v28;
  if ((v28 & 0x80u) == 0) {
    size_t v10 = v28;
  }
  else {
    size_t v10 = __n;
  }
  unint64_t v11 = v25;
  int v12 = (char)v25;
  if ((v25 & 0x80u) != 0) {
    unint64_t v11 = (unint64_t)__p[1];
  }
  if (v10 != v11)
  {
    BOOL v22 = 0;
    if (((char)v25 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_41;
  }
  if ((v25 & 0x80u) == 0) {
    uint64_t v13 = __p;
  }
  else {
    uint64_t v13 = (void **)__p[0];
  }
  if ((char)v28 < 0)
  {
    BOOL v22 = memcmp(__s1, v13, __n) == 0;
    goto LABEL_37;
  }
  if (v28)
  {
    uint64_t v14 = v28 - 1;
    uint64_t v15 = &__s1;
    do
    {
      int v17 = *(unsigned __int8 *)v15;
      uint64_t v15 = (void **)((char *)v15 + 1);
      int v16 = v17;
      int v19 = *(unsigned __int8 *)v13;
      uint64_t v13 = (void **)((char *)v13 + 1);
      int v18 = v19;
      BOOL v21 = v14-- != 0;
      BOOL v22 = v16 == v18;
    }
    while (v16 == v18 && v21);
LABEL_37:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_41;
  }
  BOOL v22 = 1;
  if (((char)v25 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v9 & 0x80) != 0) {
      goto LABEL_42;
    }
    return v22;
  }
LABEL_41:
  operator delete(__p[0]);
  if ((v28 & 0x80) == 0) {
    return v22;
  }
LABEL_42:
  operator delete(__s1);
  return v22;
}

void sub_215AEAC68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AEAC88(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = (unsigned char *)result;
  int v4 = *(unsigned __int8 *)(a3 + 24);
  if (*(unsigned char *)(a2 + 24)) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    if ((*(unsigned char *)(a2 + 24) != 0) == (v4 != 0)) {
      return result;
    }
LABEL_13:
    *unint64_t v3 = 0;
    return result;
  }
  int v6 = *(unsigned __int8 **)a2;
  size_t v7 = *(unsigned __int8 **)(a2 + 8);
  std::string::size_type v8 = *(unsigned __int8 **)a3;
  if (&v7[-*(void *)a2] != (unsigned __int8 *)(*(void *)(a3 + 8) - *(void *)a3)) {
    goto LABEL_13;
  }
  if (v6 != v7)
  {
    while (1)
    {
      uint64_t result = sub_215AEF77C(v6, v8);
      if (!result) {
        break;
      }
      v6 += 96;
      v8 += 96;
      if (v6 == v7) {
        return result;
      }
    }
    goto LABEL_13;
  }
  return result;
}

BOOL sub_215AEAD34(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  if (v3)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      if (v3 == 1)
      {
        int v27 = 0;
        sub_215AE9418();
      }
      sub_215742D4C();
    }
    return 0;
  }
  int v27 = 0;
  if (*(unsigned char *)(a1 + 64)) {
    sub_215AE9418();
  }
  sub_21574344C(v26, "nullopt");
  if (v27 == -1) {
    sub_215742D4C();
  }
  __p[0] = &v25;
  ((void (*)(void **__return_ptr, void **, _DWORD *))off_26C678B38[v27])(&__s1, __p, v26);
  if (v27 != -1) {
    ((void (*)(void **, _DWORD *))off_26C678B20[v27])(__p, v26);
  }
  int v27 = 0;
  if (*(unsigned char *)(a2 + 48)) {
    sub_215AE9418();
  }
  sub_21574344C(v26, "nullopt");
  if (v27 == -1) {
    sub_215742D4C();
  }
  unsigned __int8 v25 = &v24;
  ((void (*)(void **__return_ptr, char **, _DWORD *))off_26C678B38[v27])(__p, &v25, v26);
  if (v27 != -1) {
    ((void (*)(char **, _DWORD *))off_26C678B20[v27])(&v25, v26);
  }
  unsigned __int8 v6 = v23;
  if ((v23 & 0x80u) == 0) {
    size_t v7 = v23;
  }
  else {
    size_t v7 = __n;
  }
  unint64_t v8 = v20;
  int v9 = (char)v20;
  if ((v20 & 0x80u) != 0) {
    unint64_t v8 = (unint64_t)__p[1];
  }
  if (v7 != v8)
  {
    BOOL v4 = 0;
    if (((char)v20 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_42;
  }
  if ((v20 & 0x80u) == 0) {
    size_t v10 = __p;
  }
  else {
    size_t v10 = (void **)__p[0];
  }
  if ((char)v23 < 0)
  {
    BOOL v4 = memcmp(__s1, v10, __n) == 0;
    goto LABEL_38;
  }
  if (v23)
  {
    uint64_t v11 = v23 - 1;
    p_s1 = &__s1;
    do
    {
      int v14 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v13 = v14;
      int v16 = *(unsigned __int8 *)v10;
      size_t v10 = (void **)((char *)v10 + 1);
      int v15 = v16;
      BOOL v18 = v11-- != 0;
      BOOL v4 = v13 == v15;
    }
    while (v13 == v15 && v18);
LABEL_38:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_42;
  }
  BOOL v4 = 1;
  if (((char)v20 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x80) != 0) {
      goto LABEL_43;
    }
    return v4;
  }
LABEL_42:
  operator delete(__p[0]);
  if ((v23 & 0x80) == 0) {
    return v4;
  }
LABEL_43:
  operator delete(__s1);
  return v4;
}

void sub_215AEB02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215AEB084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AEB098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_215AEB0AC(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 128);
  if (v3)
  {
    if (*(unsigned char *)(a2 + 96))
    {
      if (v3 == 1)
      {
        int v27 = 0;
        sub_215991FA8();
      }
      sub_215742D4C();
    }
    return 0;
  }
  int v27 = 0;
  if (*(unsigned char *)(a1 + 112)) {
    sub_215991FA8();
  }
  sub_21574344C(v26, "nullopt");
  if (v27 == -1) {
    sub_215742D4C();
  }
  __p[0] = &v25;
  ((void (*)(void **__return_ptr, void **, _DWORD *))off_26C678B38[v27])(&__s1, __p, v26);
  if (v27 != -1) {
    ((void (*)(void **, _DWORD *))off_26C678B20[v27])(__p, v26);
  }
  int v27 = 0;
  if (*(unsigned char *)(a2 + 96)) {
    sub_215991FA8();
  }
  sub_21574344C(v26, "nullopt");
  if (v27 == -1) {
    sub_215742D4C();
  }
  unsigned __int8 v25 = &v24;
  ((void (*)(void **__return_ptr, char **, _DWORD *))off_26C678B38[v27])(__p, &v25, v26);
  if (v27 != -1) {
    ((void (*)(char **, _DWORD *))off_26C678B20[v27])(&v25, v26);
  }
  unsigned __int8 v6 = v23;
  if ((v23 & 0x80u) == 0) {
    size_t v7 = v23;
  }
  else {
    size_t v7 = __n;
  }
  unint64_t v8 = v20;
  int v9 = (char)v20;
  if ((v20 & 0x80u) != 0) {
    unint64_t v8 = (unint64_t)__p[1];
  }
  if (v7 != v8)
  {
    BOOL v4 = 0;
    if (((char)v20 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_42;
  }
  if ((v20 & 0x80u) == 0) {
    size_t v10 = __p;
  }
  else {
    size_t v10 = (void **)__p[0];
  }
  if ((char)v23 < 0)
  {
    BOOL v4 = memcmp(__s1, v10, __n) == 0;
    goto LABEL_38;
  }
  if (v23)
  {
    uint64_t v11 = v23 - 1;
    p_s1 = &__s1;
    do
    {
      int v14 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v13 = v14;
      int v16 = *(unsigned __int8 *)v10;
      size_t v10 = (void **)((char *)v10 + 1);
      int v15 = v16;
      BOOL v18 = v11-- != 0;
      BOOL v4 = v13 == v15;
    }
    while (v13 == v15 && v18);
LABEL_38:
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_42;
  }
  BOOL v4 = 1;
  if (((char)v20 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x80) != 0) {
      goto LABEL_43;
    }
    return v4;
  }
LABEL_42:
  operator delete(__p[0]);
  if ((v23 & 0x80) == 0) {
    return v4;
  }
LABEL_43:
  operator delete(__s1);
  return v4;
}

void sub_215AEB3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215AEB408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AEB41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AEB430()
{
}

void sub_215AEB61C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AEB640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AEB684(void *a1, uint64_t a2)
{
  v47[5] = *MEMORY[0x263EF8340];
  BOOL v4 = sub_215731D94(a1, (uint64_t)"{", 1);
  sub_215731D94(v4, (uint64_t)"Device: ", 8);
  if (*(unsigned char *)(a2 + 200))
  {
    BOOL v5 = sub_215731D94(a1, (uint64_t)"{", 1);
    unsigned __int8 v6 = sub_215731D94(v5, (uint64_t)"Name: ", 6);
    int v7 = *(char *)(a2 + 79);
    if (v7 >= 0) {
      uint64_t v8 = a2 + 56;
    }
    else {
      uint64_t v8 = *(void *)(a2 + 56);
    }
    if (v7 >= 0) {
      uint64_t v9 = *(unsigned __int8 *)(a2 + 79);
    }
    else {
      uint64_t v9 = *(void *)(a2 + 64);
    }
    size_t v10 = sub_215731D94(v6, v8, v9);
    uint64_t v11 = sub_215731D94(v10, (uint64_t)", ", 2);
    int v12 = sub_215731D94(v11, (uint64_t)"Product: ", 9);
    int v13 = *(char *)(a2 + 103);
    if (v13 >= 0) {
      uint64_t v14 = a2 + 80;
    }
    else {
      uint64_t v14 = *(void *)(a2 + 80);
    }
    if (v13 >= 0) {
      uint64_t v15 = *(unsigned __int8 *)(a2 + 103);
    }
    else {
      uint64_t v15 = *(void *)(a2 + 88);
    }
    int v16 = sub_215731D94(v12, v14, v15);
    int v17 = sub_215731D94(v16, (uint64_t)", ", 2);
    BOOL v18 = sub_215731D94(v17, (uint64_t)"SN: ", 4);
    int v19 = *(char *)(a2 + 151);
    if (v19 >= 0) {
      uint64_t v20 = a2 + 128;
    }
    else {
      uint64_t v20 = *(void *)(a2 + 128);
    }
    if (v19 >= 0) {
      uint64_t v21 = *(unsigned __int8 *)(a2 + 151);
    }
    else {
      uint64_t v21 = *(void *)(a2 + 136);
    }
    BOOL v22 = sub_215731D94(v18, v20, v21);
    unsigned __int8 v23 = sub_215731D94(v22, (uint64_t)", ", 2);
    char v24 = sub_215731D94(v23, (uint64_t)"OS: ", 4);
    int v25 = *(char *)(a2 + 199);
    if (v25 >= 0) {
      uint64_t v26 = a2 + 176;
    }
    else {
      uint64_t v26 = *(void *)(a2 + 176);
    }
    if (v25 >= 0) {
      uint64_t v27 = *(unsigned __int8 *)(a2 + 199);
    }
    else {
      uint64_t v27 = *(void *)(a2 + 184);
    }
    unsigned __int8 v28 = sub_215731D94(v24, v26, v27);
    int v29 = sub_215731D94(v28, (uint64_t)" (", 2);
    int v30 = *(char *)(a2 + 175);
    if (v30 >= 0) {
      uint64_t v31 = a2 + 152;
    }
    else {
      uint64_t v31 = *(void *)(a2 + 152);
    }
    if (v30 >= 0) {
      uint64_t v32 = *(unsigned __int8 *)(a2 + 175);
    }
    else {
      uint64_t v32 = *(void *)(a2 + 160);
    }
    uint64_t v33 = sub_215731D94(v29, v31, v32);
    int v34 = ")}";
    uint64_t v35 = 2;
  }
  else
  {
    int v34 = "not available";
    uint64_t v33 = a1;
    uint64_t v35 = 13;
  }
  sub_215731D94(v33, (uint64_t)v34, v35);
  int v36 = sub_215731D94(a1, (uint64_t)", ", 2);
  sub_215731D94(v36, (uint64_t)"Process: ", 9);
  if (*(unsigned char *)(a2 + 48))
  {
    int v37 = *(char *)(a2 + 47);
    if (v37 >= 0) {
      uint64_t v38 = a2 + 24;
    }
    else {
      uint64_t v38 = *(void *)(a2 + 24);
    }
    if (v37 >= 0) {
      uint64_t v39 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      uint64_t v39 = *(void *)(a2 + 32);
    }
    uint64_t v40 = sub_215731D94(a1, v38, v39);
    sub_215731D94(v40, (uint64_t)" ", 1);
  }
  sub_215731D94(a1, (uint64_t)"(", 1);
  int v41 = (void *)std::ostream::operator<<();
  char v42 = sub_215731D94(v41, (uint64_t)"), ", 3);
  uint64_t v43 = sub_215731D94(v42, (uint64_t)"UUID: ", 6);
  sub_215E08B14((unsigned __int8 *)a2, v47);
  uint64_t v44 = sub_215731D94(v43, (uint64_t)v47, 36);
  uint64_t v45 = sub_215731D94(v44, (uint64_t)", ", 2);
  sub_215731D94(v45, (uint64_t)"Protocol: ", 10);
  int v46 = 0;
  operator new();
}

void sub_215AEBBF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AEBC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v22 = a21;
  a21 = 0;
  if (v22) {
    sub_215E15464((uint64_t)&a21, v22);
  }
  sub_215742CF0((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_215AEBCB8(void *a1, unsigned char *a2)
{
  sub_215731D94(a1, (uint64_t)"{Type: ", 7);
  int v4 = *a2;
  if (v4 == 2)
  {
    BOOL v5 = "TCP/IP";
  }
  else
  {
    if (v4 != 1)
    {
      if (*a2)
      {
        BOOL v5 = "invalid connection type";
        unsigned __int8 v6 = a1;
        uint64_t v7 = 23;
      }
      else
      {
        BOOL v5 = "Unknown";
        unsigned __int8 v6 = a1;
        uint64_t v7 = 7;
      }
LABEL_9:
      sub_215731D94(v6, (uint64_t)v5, v7);
      sub_215731D94(a1, (uint64_t)", Client:", 9);
      sub_215AEB684(a1, (uint64_t)(a2 + 8));
    }
    BOOL v5 = "Direct";
  }
  unsigned __int8 v6 = a1;
  uint64_t v7 = 6;
  goto LABEL_9;
}

__n128 sub_215AEBD80@<Q0>(uint64_t a1@<X0>, char a2@<W1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (long long *)sub_215E10158();
  if (a2)
  {
    *(_OWORD *)a4 = *(_OWORD *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  }
  else
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
  }
  uint64_t v9 = sub_21573D95C();
  int v10 = *v9;
  *(unsigned char *)(a4 + 24) = 0;
  *(_DWORD *)(a4 + 16) = v10;
  *(unsigned char *)(a4 + 48) = 0;
  if (*((unsigned char *)v9 + 32))
  {
    if (*((char *)v9 + 31) < 0)
    {
      sub_215738B0C((unsigned char *)(a4 + 24), *((void **)v9 + 1), *((void *)v9 + 2));
    }
    else
    {
      long long v11 = *(_OWORD *)(v9 + 2);
      *(void *)(a4 + 40) = *((void *)v9 + 3);
      *(_OWORD *)(a4 + 24) = v11;
    }
    *(unsigned char *)(a4 + 48) = 1;
  }
  int v12 = (char *)(a4 + 56);
  if (v8)
  {
    sub_2157B6F84(v12, v8);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *int v12 = 0;
  }
  *(unsigned char *)(a4 + 200) = v13;
  __n128 result = *a3;
  *(__n128 *)(a4 + 208) = *a3;
  *(void *)(a4 + 224) = a3[1].n128_u64[0];
  return result;
}

void sub_215AEBE8C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*v2);
    }
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_215AEBEB4@<Q0>(uint64_t a1@<X0>, char a2@<W1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (long long *)sub_215E10158();
  if (a2)
  {
    *(_OWORD *)a4 = *(_OWORD *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  }
  else
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
  }
  uint64_t v9 = sub_21573D95C();
  int v10 = *v9;
  *(unsigned char *)(a4 + 24) = 0;
  *(_DWORD *)(a4 + 16) = v10;
  *(unsigned char *)(a4 + 48) = 0;
  if (*((unsigned char *)v9 + 32))
  {
    if (*((char *)v9 + 31) < 0)
    {
      sub_215738B0C((unsigned char *)(a4 + 24), *((void **)v9 + 1), *((void *)v9 + 2));
    }
    else
    {
      long long v11 = *(_OWORD *)(v9 + 2);
      *(void *)(a4 + 40) = *((void *)v9 + 3);
      *(_OWORD *)(a4 + 24) = v11;
    }
    *(unsigned char *)(a4 + 48) = 1;
  }
  int v12 = (char *)(a4 + 56);
  if (v8)
  {
    sub_2157B6F84(v12, v8);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *int v12 = 0;
  }
  *(unsigned char *)(a4 + 200) = v13;
  __n128 result = *a3;
  *(__n128 *)(a4 + 208) = *a3;
  *(void *)(a4 + 224) = a3[1].n128_u64[0];
  return result;
}

void sub_215AEBFC0(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*v2);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215AEBFE8(void *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 48))
  {
    int v3 = *(_DWORD *)(a2 + 40);
    sub_215731D94(a1, (uint64_t)"Sync{", 5);
    if (v3)
    {
      if (*(_DWORD *)(a2 + 40) == 1) {
        sub_215AED238();
      }
    }
    else if (!*(_DWORD *)(a2 + 40))
    {
      sub_215AED238();
    }
    sub_215742D4C();
  }
  sub_215731D94(a1, (uint64_t)"Sync{", 5);
  sub_215AED238();
}

void sub_215AEC748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30)
{
}

uint64_t sub_215AEC864(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215AEC8B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AEC92C(uint64_t a1)
{
  int v5 = 0;
  sub_2157491FC(v4, "{");
  LOBYTE(v6) = 1;
  uint64_t v7 = (const char *)v4;
  uint64_t v8 = &v3;
  sub_215AED4C0(a1, (uint64_t)&v6);
  unsigned __int8 v6 = (void **)v4;
  uint64_t v7 = "}";
  uint64_t v8 = (char *)v4;
  uint64_t v9 = "}";
  int v10 = "}";
  if (v5 == -1) {
    sub_215742D4C();
  }
  long long v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C678C50[v5])(&v11, v4);
  if (v5 == -1) {
    sub_215742D4C();
  }
  unsigned __int8 v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C678C08[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C678BF0[v5])(&v6, v4);
  }
  return result;
}

void sub_215AECA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AECA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AECA68(std::mutex *a1@<X0>, uint64_t a2@<X8>)
{
  int v5 = a1 + 1;
  std::mutex::lock(a1 + 1);
  uint64_t sig = a1[2].__m_.__sig;
  uint64_t v7 = *(void *)a1[2].__m_.__opaque;
  if (sig == v7)
  {
    int v11 = 0;
    LOBYTE(v8) = 0;
    std::mutex::unlock(v5);
    if (!a1->__m_.__opaque[8]) {
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v8 = *(void *)(v7 - 40);
    if (*(unsigned char *)(v7 - 24))
    {
      uint64_t v9 = *(void *)(v7 - 32);
      a1->__m_.__opaque[8] = *(unsigned char *)(v7 - 24);
      *(void *)a1->__m_.__opaque = v9;
    }
    if (*(unsigned char *)(v7 - 8))
    {
      uint64_t v10 = *(void *)(v7 - 16);
      a1->__m_.__opaque[24] = *(unsigned char *)(v7 - 8);
      *(void *)&a1->__m_.__opaque[16] = v10;
    }
    if (a1->__m_.__opaque[8] || a1->__m_.__opaque[24])
    {
      *(void *)&a1->__m_.__opaque[32] = *(void *)(v7 - 40);
      a1->__m_.__opaque[40] = 1;
    }
    else
    {
      LOBYTE(a1->__m_.__sig) = 2;
    }
    unint64_t v2 = v8 >> 8;
    *(void *)a1[2].__m_.__opaque = sig;
    int v11 = 1;
    std::mutex::unlock(v5);
    if (!a1->__m_.__opaque[8]) {
      goto LABEL_16;
    }
  }
  uint64_t v12 = *(void *)a1->__m_.__opaque;
  if (!v12)
  {
    int v11 = 1;
    LOBYTE(a1->__m_.__sig) = 1;
    a1->__m_.__opaque[0] = 0;
    a1->__m_.__opaque[8] = 0;
    if (sig == v7)
    {
      unint64_t v8 = *(void *)&a1->__m_.__opaque[32];
      unint64_t v2 = v8 >> 8;
      int v11 = a1->__m_.__opaque[40];
      if (a1->__m_.__opaque[24]) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
LABEL_16:
    if (a1->__m_.__opaque[24]) {
      goto LABEL_17;
    }
LABEL_23:
    int sig_low = LOBYTE(a1->__m_.__sig);
    unint64_t v13 = *(void *)&a1->__m_.__opaque[48];
    if (sig_low != 1) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  *(void *)a1->__m_.__opaque = v12 - 1;
  LOBYTE(a1->__m_.__sig) = 3;
  if (!a1->__m_.__opaque[24]) {
    goto LABEL_23;
  }
LABEL_17:
  unint64_t v13 = *(void *)&a1->__m_.__opaque[48];
  if (*(void *)&a1->__m_.__opaque[16] > v13)
  {
    LOBYTE(sig_low) = 3;
    LOBYTE(a1->__m_.__sig) = 3;
LABEL_25:
    *(unsigned char *)a2 = sig_low;
    *(void *)&a1->__m_.__opaque[48] = v13 + 1;
    goto LABEL_26;
  }
  LOBYTE(a1->__m_.__sig) = 1;
  a1->__m_.__opaque[16] = 0;
  a1->__m_.__opaque[24] = 0;
  if (!v11)
  {
    unint64_t v8 = *(void *)&a1->__m_.__opaque[32];
    unint64_t v2 = v8 >> 8;
    int v11 = a1->__m_.__opaque[40];
  }
LABEL_24:
  a1->__m_.__opaque[32] = 0;
  a1->__m_.__opaque[40] = 0;
  *(unsigned char *)a2 = 1;
LABEL_26:
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v8 | (v2 << 8);
  *(unsigned char *)(a2 + 24) = v11;
}

uint64_t sub_215AECC28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v22.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 64);
  v22.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 64));
  if (!a4)
  {
    if (*(void *)(a1 + 128) == *(void *)(a1 + 136))
    {
      do
      {
        uint64_t v19 = *(void *)(a2 + 24);
        if (!v19) {
          sub_21573D7DC();
        }
        int v20 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 48))(v19);
        if (v20) {
          break;
        }
        std::condition_variable::wait((std::condition_variable *)(a1 + 152), &v22);
      }
      while (*(void *)(a1 + 128) == *(void *)(a1 + 136));
      uint64_t v9 = v20 ^ 1u;
      if (!v22.__owns_) {
        return v9;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
LABEL_27:
    std::mutex::unlock(v22.__m_);
    return v9;
  }
  v8.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + a3;
  do
  {
    uint64_t v12 = *(void *)(a1 + 128);
    uint64_t v13 = *(void *)(a1 + 136);
    BOOL v14 = v12 != v13;
    if (v12 != v13) {
      goto LABEL_26;
    }
    uint64_t v15 = *(void *)(a2 + 24);
    if (!v15) {
      goto LABEL_37;
    }
    if ((*(uint64_t (**)(uint64_t))(*(void *)v15 + 48))(v15)) {
      goto LABEL_26;
    }
    if (v8.__d_.__rep_ <= std::chrono::steady_clock::now().__d_.__rep_) {
      break;
    }
    v16.__d_.__rep_ = v8.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v16.__d_.__rep_ < 1) {
      continue;
    }
    std::chrono::steady_clock::now();
    v17.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v17.__d_.__rep_)
    {
      if (v17.__d_.__rep_ < 1)
      {
        if ((unint64_t)v17.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v10 = 0x8000000000000000;
          goto LABEL_6;
        }
      }
      else if ((unint64_t)v17.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v10 = 0x7FFFFFFFFFFFFFFFLL;
        if ((v16.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL) != 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_23;
        }
        goto LABEL_6;
      }
      std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v10 = 1000 * v17.__d_.__rep_;
      if (1000 * v17.__d_.__rep_ > (v16.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
LABEL_23:
        v11.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_7;
      }
    }
    else
    {
      std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v10 = 0;
      if (v16.__d_.__rep_ < 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    v11.__d_.__rep_ = v10 + v16.__d_.__rep_;
LABEL_7:
    std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 152), &v22, v11);
    std::chrono::steady_clock::now();
  }
  while (std::chrono::steady_clock::now().__d_.__rep_ < v8.__d_.__rep_);
  if (*(void *)(a1 + 128) != *(void *)(a1 + 136))
  {
    BOOL v14 = 1;
LABEL_26:
    uint64_t v9 = v14;
    if (!v22.__owns_) {
      return v9;
    }
    goto LABEL_27;
  }
  uint64_t v21 = *(void *)(a2 + 24);
  if (!v21) {
LABEL_37:
  }
    sub_21573D7DC();
  (*(void (**)(uint64_t))(*(void *)v21 + 48))(v21);
  uint64_t v9 = 0;
  if (v22.__owns_) {
    goto LABEL_27;
  }
  return v9;
}

void sub_215AECEA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AECEC8(uint64_t a1, long long *a2)
{
  int v4 = (std::mutex *)(a1 + 64);
  std::mutex::lock((std::mutex *)(a1 + 64));
  unsigned __int8 v6 = *(char **)(a1 + 136);
  unint64_t v5 = *(void *)(a1 + 144);
  if ((unint64_t)v6 >= v5)
  {
    std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v10 = *(char **)(a1 + 128);
    unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((v6 - v10) >> 3) + 1;
    if (v11 > 0x666666666666666) {
      sub_215AED220();
    }
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - (void)v10) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x333333333333333) {
      unint64_t v13 = 0x666666666666666;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 > 0x666666666666666) {
        sub_215738AD8();
      }
      BOOL v14 = (char *)operator new(40 * v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    uint64_t v15 = &v14[8 * ((v6 - v10) >> 3)];
    long long v16 = a2[1];
    *(_OWORD *)uint64_t v15 = *a2;
    *((_OWORD *)v15 + 1) = v16;
    *((void *)v15 + 4) = *((void *)a2 + 4);
    uint64_t v9 = v15 + 40;
    if (v6 != v10)
    {
      do
      {
        long long v17 = *(_OWORD *)(v6 - 40);
        long long v18 = *(_OWORD *)(v6 - 24);
        *((void *)v15 - 1) = *((void *)v6 - 1);
        *(_OWORD *)(v15 - 24) = v18;
        *(_OWORD *)(v15 - 40) = v17;
        v15 -= 40;
        v6 -= 40;
      }
      while (v6 != v10);
      unsigned __int8 v6 = *(char **)(a1 + 128);
    }
    *(void *)(a1 + 128) = v15;
    *(void *)(a1 + 136) = v9;
    *(void *)(a1 + 144) = &v14[40 * v13];
    if (v6) {
      operator delete(v6);
    }
  }
  else
  {
    long long v7 = *a2;
    long long v8 = a2[1];
    *((void *)v6 + 4) = *((void *)a2 + 4);
    *(_OWORD *)unsigned __int8 v6 = v7;
    *((_OWORD *)v6 + 1) = v8;
    uint64_t v9 = v6 + 40;
  }
  *(void *)(a1 + 136) = v9;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 152));
  std::mutex::unlock(v4);
}

void sub_215AED04C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AED060(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))();
}

uint64_t sub_215AED088(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))();
}

uint64_t sub_215AED0B0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (*(void *)*a2 != *(void *)*a3 || *(void *)(*a2 + 8) != *(void *)(*a3 + 8)) {
    return 0;
  }
  uint64_t result = sub_21573D864(a2[1], a3[1]);
  if (result)
  {
    uint64_t v7 = a2[2];
    long long v8 = (unsigned __int8 *)a3[2];
    int v9 = v8[144];
    if (*(unsigned char *)(v7 + 144)) {
      BOOL v10 = v9 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10)
    {
      if ((*(unsigned char *)(v7 + 144) != 0) != (v9 != 0)) {
        return 0;
      }
    }
    else
    {
      std::unique_lock<std::mutex> v22 = (const void **)a2[2];
      uint64_t v23 = v7 + 24;
      uint64_t v24 = v7 + 48;
      uint64_t v25 = v7 + 72;
      uint64_t v26 = v7 + 96;
      uint64_t v27 = v7 + 120;
      v21[0] = v8;
      v21[1] = v8 + 24;
      v21[2] = v8 + 48;
      v21[3] = v8 + 72;
      v21[4] = v8 + 96;
      v21[5] = v8 + 120;
      char v11 = sub_215E102E4((uint64_t)&v28, &v22, v21);
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = a2[3];
    uint64_t v13 = a3[3];
    uint64_t v14 = *(unsigned int *)(v12 + 8);
    std::unique_lock<std::mutex> v22 = *(const void ***)v12;
    LODWORD(v23) = v14;
    if (v22 != *(const void ***)v13 || v14 != *(_DWORD *)(v13 + 8)) {
      return 0;
    }
    long long v16 = *(const void ***)(v12 + 12);
    uint64_t v17 = *(unsigned int *)(v12 + 20);
    std::unique_lock<std::mutex> v22 = v16;
    LODWORD(v23) = v17;
    long long v18 = *(const void ***)(v13 + 12);
    uint64_t v19 = *(unsigned int *)(v13 + 20);
    return v16 == v18 && v17 == v19;
  }
  return result;
}

void sub_215AED220()
{
}

void sub_215AED238()
{
}

void sub_215AED458(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215AED47C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AED4C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unint64_t **)a1;
  if (!*(unsigned char *)a2)
  {
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = (std::string *)",";
    uint64_t v15 = v13;
    long long v16 = (std::string *)",";
    uint64_t v17 = (std::string *)",";
    uint64_t v5 = *(unsigned int *)(v13 + 24);
    if (v5 == -1) {
      goto LABEL_15;
    }
    v12.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
    ((void (*)(std::string *))off_26C678C50[v5])(&v12);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  std::to_string(&v12, *v4);
  uint64_t v13 = v6;
  uint64_t v14 = &v12;
  uint64_t v15 = v6;
  long long v16 = &v12;
  uint64_t v17 = &v12;
  uint64_t v7 = *(unsigned int *)(v6 + 24);
  if (v7 == -1) {
    sub_215742D4C();
  }
  long long v18 = &v13;
  ((void (*)(uint64_t **, uint64_t))off_26C678BD8[v7])(&v18, v6);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v12.__r_.__value_.__l.__data_);
    uint64_t v8 = *(void *)(a1 + 8);
    if (*(unsigned char *)a2) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 8);
    if (*(unsigned char *)a2) {
      goto LABEL_11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t v14 = (std::string *)",";
  uint64_t v15 = v13;
  long long v16 = (std::string *)",";
  uint64_t v17 = (std::string *)",";
  uint64_t v9 = *(unsigned int *)(v13 + 24);
  if (v9 == -1) {
    goto LABEL_15;
  }
  v12.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
  ((void (*)(std::string *))off_26C678C50[v9])(&v12);
LABEL_11:
  *(unsigned char *)a2 = 0;
  sub_215AED698(*(void *)(a2 + 8), *(void *)v8, *(unsigned char *)(v8 + 8));
  uint64_t v10 = *(void *)(a1 + 16);
  if (!*(unsigned char *)a2)
  {
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = (std::string *)",";
    uint64_t v15 = v13;
    long long v16 = (std::string *)",";
    uint64_t v17 = (std::string *)",";
    uint64_t v11 = *(unsigned int *)(v13 + 24);
    if (v11 != -1)
    {
      v12.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
      ((void (*)(std::string *))off_26C678C50[v11])(&v12);
      goto LABEL_14;
    }
LABEL_15:
    sub_215742D4C();
  }
LABEL_14:
  *(unsigned char *)a2 = 0;
  sub_215AED698(*(void *)(a2 + 8), *(void *)v10, *(unsigned char *)(v10 + 8));
}

void sub_215AED67C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AED698(uint64_t a1, unint64_t __val, char a3)
{
  if (a3)
  {
    std::to_string(&v6, __val);
    uint64_t v8 = a1;
    uint64_t v9 = &v6;
    uint64_t v10 = a1;
    uint64_t v11 = &v6;
    std::string v12 = &v6;
    uint64_t v4 = *(unsigned int *)(a1 + 24);
    if (v4 == -1) {
      sub_215742D4C();
    }
    uint64_t v7 = &v8;
    ((void (*)(uint64_t **, uint64_t))off_26C678BD8[v4])(&v7, a1);
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v6.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v8 = a1;
    uint64_t v9 = (std::string *)"nullopt";
    uint64_t v10 = a1;
    uint64_t v11 = (std::string *)"nullopt";
    std::string v12 = (std::string *)"nullopt";
    uint64_t v5 = *(unsigned int *)(a1 + 24);
    if (v5 == -1) {
      sub_215742D4C();
    }
    v6.__r_.__value_.__r.__words[0] = (std::string::size_type)&v8;
    ((void (*)(std::string *, uint64_t))off_26C678C38[v5])(&v6, a1);
  }
}

void sub_215AED78C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215AED7A8(uint64_t *a1, unsigned char *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EA70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EA70))
  {
    LOWORD(v20) = 256;
    BYTE2(v20) = 2;
    sub_215AEDBDC(&v20, 3uLL);
    __cxa_atexit((void (*)(void *))sub_215AEDC70, &qword_26788EA90, &dword_21572C000);
    __cxa_guard_release(&qword_26788EA70);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EA78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EA78))
  {
    *(void *)&xmmword_26788EAC0 = qword_26788EA90;
    qword_26788EAD0 = qword_26788EA98;
    __cxa_guard_release(&qword_26788EA78);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EA80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EA80))
  {
    xmmword_26788EAE0 = xmmword_26788EAC0;
    qword_26788EAF0 = qword_26788EA90;
    *(_OWORD *)byte_26788EAF8 = *(_OWORD *)&qword_26788EAD0;
    *(void *)&byte_26788EAF8[16] = qword_26788EA98;
    __cxa_guard_release(&qword_26788EA80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EA88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EA88))
  {
    long long v20 = xmmword_26788EAE0;
    uint64_t v21 = qword_26788EAF0;
    std::string v19 = *(std::string *)byte_26788EAF8;
    sub_215AEEB0C(&v20, &v19);
    __cxa_atexit((void (*)(void *))sub_215AEDCA4, &qword_26788EAA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788EA88);
  }
  long long v20 = 0uLL;
  uint64_t v21 = 0;
  sub_215A9B3F0(a1, (uint64_t)&v20);
  uint64_t v4 = sub_215837FE8((uint64_t)&qword_26788EAA8, (const void **)&v20);
  if (v4 == &qword_26788EAB0)
  {
    uint64_t v7 = HIBYTE(v21);
    char v8 = HIBYTE(v21);
    if (v21 < 0) {
      uint64_t v7 = *((void *)&v20 + 1);
    }
    if (v7 != 4) {
      goto LABEL_24;
    }
    uint64_t v9 = (long long *)v20;
    if (v21 >= 0) {
      uint64_t v9 = &v20;
    }
    if (*(_DWORD *)v9 != 1701736270)
    {
LABEL_24:
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::operator+<char>();
      sub_215AEDCD0("', expected ", &v17, &v18);
      sub_215AEDD30();
      if ((v16 & 0x80u) == 0) {
        uint64_t v11 = (const std::string::value_type *)v15;
      }
      else {
        uint64_t v11 = (const std::string::value_type *)v15[0];
      }
      if ((v16 & 0x80u) == 0) {
        std::string::size_type v12 = v16;
      }
      else {
        std::string::size_type v12 = v15[1];
      }
      uint64_t v13 = std::string::append(&v18, v11, v12);
      long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
      v19.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v14;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      std::logic_error::logic_error(exception, &v19);
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
    }
    *a2 = 0;
    if ((v8 & 0x80) == 0) {
      return a1;
    }
  }
  else
  {
    char v5 = HIBYTE(v21);
    *a2 = *((unsigned char *)v4 + 56);
    if ((v5 & 0x80) == 0) {
      return a1;
    }
  }
  operator delete((void *)v20);
  return a1;
}

void sub_215AEDAD0(_Unwind_Exception *a1)
{
}

void sub_215AEDAE8(_Unwind_Exception *a1)
{
}

void sub_215AEDB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0)
  {
    operator delete(a28);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a27 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_4:
    if (a21 < 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a22);
  if (a21 < 0)
  {
LABEL_5:
    operator delete(__p);
    if ((v34 & 1) == 0)
    {
LABEL_12:
      if (*(char *)(v35 - 41) < 0) {
        operator delete(*(void **)(v35 - 64));
      }
      _Unwind_Resume(a1);
    }
LABEL_11:
    __cxa_free_exception(v33);
    goto LABEL_12;
  }
LABEL_10:
  if (!v34) {
    goto LABEL_12;
  }
  goto LABEL_11;
}

void *sub_215AEDBDC(void *result, size_t __sz)
{
  qword_26788EA90 = 0;
  qword_26788EA98 = 0;
  qword_26788EAA0 = 0;
  if (__sz)
  {
    if ((__sz & 0x8000000000000000) != 0) {
      sub_215738AC0();
    }
    char v3 = result;
    qword_26788EA90 = (uint64_t)operator new(__sz);
    qword_26788EA98 = qword_26788EA90;
    uint64_t v4 = qword_26788EA90 + __sz;
    qword_26788EAA0 = qword_26788EA90 + __sz;
    uint64_t result = memmove((void *)qword_26788EA90, v3, __sz);
    qword_26788EA98 = v4;
  }
  return result;
}

void sub_215AEDC4C(_Unwind_Exception *exception_object)
{
  if (qword_26788EA90)
  {
    qword_26788EA98 = qword_26788EA90;
    operator delete((void *)qword_26788EA90);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AEDC70(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_215AEDCA4(uint64_t a1)
{
  return a1;
}

__n128 sub_215AEDCD0@<Q0>(char *__s@<X1>, std::string *a2@<X0>, std::string *a3@<X8>)
{
  size_t v6 = strlen(__s);
  uint64_t v7 = (__n128 *)std::string::append(a2, __s, v6);
  __n128 result = *v7;
  *a3 = *(std::string *)v7->n128_u8;
  v7->n128_u64[0] = 0;
  v7->n128_u64[1] = 0;
  v7[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_215AEDD30()
{
  int v2 = 0;
  if (qword_26788EAD0 - (uint64_t)xmmword_26788EAC0 > 0)
  {
    sub_2157491FC(v1, "{");
    sub_215AEEE5C();
  }
  sub_21576E734(v1, "{}");
  if (v2 == -1) {
    sub_215742D4C();
  }
  p_p = &__p;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C678CC8[v2])(&p_p, v1);
  if (v2 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C678CB0[v2])(&p_p, v1);
  }
  return result;
}

void sub_215AEDFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

char *sub_215AEDFF4@<X0>(char *__src@<X0>, size_t __len@<X1>, uint64_t a3@<X8>)
{
  size_t v3 = __len;
  if (!__len)
  {
    HIBYTE(v56) = 0;
    uint64_t v13 = &v55;
LABEL_21:
    *((unsigned char *)v13 + v3) = 0;
    unint64_t v16 = v56;
    *(void *)(a3 + 16) = v56;
    *(_OWORD *)a3 = v55;
    *(unsigned char *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 48) = 0;
    unint64_t v17 = HIBYTE(v16);
    std::string v18 = *(unsigned char **)a3;
    unint64_t v19 = *(void *)(a3 + 8);
    if ((v17 & 0x80u) == 0)
    {
      std::string v18 = (unsigned char *)a3;
      unint64_t v19 = v17;
    }
    if (!v19) {
      return __src;
    }
    long long v20 = v18;
    if (v19 < 8)
    {
LABEL_45:
      uint64_t v24 = &v18[v19];
      do
      {
        if (*v20 == 58) {
          *long long v20 = 95;
        }
        ++v20;
      }
      while (v20 != v24);
      return __src;
    }
    long long v20 = &v18[v19 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v21 = v18 + 3;
    unint64_t v22 = v19 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int8x8_t v23 = vceq_s8(*(int8x8_t *)(v21 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
      if (v23.i8[0])
      {
        *(v21 - 3) = 95;
        if ((v23.i8[1] & 1) == 0)
        {
LABEL_29:
          if ((v23.i8[2] & 1) == 0) {
            goto LABEL_30;
          }
          goto LABEL_38;
        }
      }
      else if ((v23.i8[1] & 1) == 0)
      {
        goto LABEL_29;
      }
      *(v21 - 2) = 95;
      if ((v23.i8[2] & 1) == 0)
      {
LABEL_30:
        if ((v23.i8[3] & 1) == 0) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
LABEL_38:
      *(v21 - 1) = 95;
      if ((v23.i8[3] & 1) == 0)
      {
LABEL_31:
        if ((v23.i8[4] & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_40;
      }
LABEL_39:
      *uint64_t v21 = 95;
      if ((v23.i8[4] & 1) == 0)
      {
LABEL_32:
        if ((v23.i8[5] & 1) == 0) {
          goto LABEL_33;
        }
        goto LABEL_41;
      }
LABEL_40:
      v21[1] = 95;
      if ((v23.i8[5] & 1) == 0)
      {
LABEL_33:
        if ((v23.i8[6] & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_42;
      }
LABEL_41:
      v21[2] = 95;
      if ((v23.i8[6] & 1) == 0)
      {
LABEL_34:
        if (v23.i8[7]) {
          goto LABEL_43;
        }
        goto LABEL_26;
      }
LABEL_42:
      v21[3] = 95;
      if (v23.i8[7]) {
LABEL_43:
      }
        v21[4] = 95;
LABEL_26:
      v21 += 8;
      v22 -= 8;
      if (!v22)
      {
        if (v19 == (v19 & 0xFFFFFFFFFFFFFFF8)) {
          return __src;
        }
        goto LABEL_45;
      }
    }
  }
  uint64_t v5 = (uint64_t)__src;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  char v8 = __src + 1;
  uint64_t v9 = __src - 1;
  do
  {
    if (__len == v6) {
      goto LABEL_13;
    }
    int v10 = v9[__len];
    ++v7;
    --v8;
    --v9;
    ++v6;
  }
  while (v10 != 58);
  size_t v11 = __len - v7;
  if (__len - v7 == -1)
  {
LABEL_13:
    if (__len > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (__len >= 0x17)
    {
      size_t v14 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((__len | 7) != 0x17) {
        size_t v14 = __len | 7;
      }
      size_t v15 = v14 + 1;
      uint64_t v13 = (long long *)operator new(v14 + 1);
      *((void *)&v55 + 1) = v3;
      unint64_t v56 = v15 | 0x8000000000000000;
      *(void *)&long long v55 = v13;
    }
    else
    {
      HIBYTE(v56) = __len;
      uint64_t v13 = &v55;
    }
    std::string __src = (char *)memmove(v13, (const void *)v5, v3);
    goto LABEL_21;
  }
  if (v11)
  {
    if (__len <= v11) {
      sub_215739FA4("string_view::substr");
    }
    size_t v25 = v7 - 1;
    if (v25 >= __len) {
      size_t v26 = __len;
    }
    else {
      size_t v26 = v25;
    }
    if (v26 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v26 >= 0x17)
    {
      uint64_t v38 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v26 | 7) != 0x17) {
        uint64_t v38 = v26 | 7;
      }
      uint64_t v39 = v38 + 1;
      uint64_t v27 = (long long *)operator new(v38 + 1);
      *((void *)&v59 + 1) = v26;
      unint64_t v60 = v39 | 0x8000000000000000;
      *(void *)&long long v59 = v27;
    }
    else
    {
      HIBYTE(v60) = v26;
      uint64_t v27 = &v59;
      if (!v26) {
        goto LABEL_88;
      }
    }
    memmove(v27, &v8[v3], v26);
LABEL_88:
    *((unsigned char *)v27 + v26) = 0;
    if (v3 >= v11) {
      size_t v3 = v11;
    }
    if (v3 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v3 >= 0x17)
    {
      uint64_t v41 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17) {
        uint64_t v41 = v3 | 7;
      }
      uint64_t v42 = v41 + 1;
      uint64_t v40 = operator new(v41 + 1);
      *(void *)&long long v58 = v3;
      *((void *)&v58 + 1) = v42 | 0x8000000000000000;
      int v57 = v40;
    }
    else
    {
      HIBYTE(v58) = v3;
      uint64_t v40 = &v57;
    }
    std::string __src = (char *)memmove(v40, (const void *)v5, v3);
    *((unsigned char *)v40 + v3) = 0;
    uint64_t v43 = v58;
    *(void *)(a3 + 24) = v57;
    *(void *)(a3 + 32) = v43;
    *(void *)(a3 + 39) = *(void *)((char *)&v58 + 7);
    LOBYTE(v43) = HIBYTE(v58);
    unint64_t v44 = v60;
    *(_OWORD *)a3 = v59;
    *(void *)(a3 + 16) = v44;
    *(unsigned char *)(a3 + 47) = v43;
    *(unsigned char *)(a3 + 48) = 1;
    unint64_t v45 = HIBYTE(v44);
    BOOL v46 = (v44 & 0x8000000000000000) != 0;
    uint64_t v47 = *(unsigned char **)a3;
    unint64_t v48 = *(void *)(a3 + 8);
    if (!v46)
    {
      uint64_t v47 = (unsigned char *)a3;
      unint64_t v48 = v45;
    }
    if (!v48) {
      return __src;
    }
    uint64_t v49 = v47;
    if (v48 < 8)
    {
LABEL_126:
      uint64_t v54 = &v47[v48];
      do
      {
        if (*v49 == 58) {
          *uint64_t v49 = 95;
        }
        ++v49;
      }
      while (v49 != v54);
      return __src;
    }
    uint64_t v49 = &v47[v48 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v50 = v47 + 3;
    unint64_t v51 = v48 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int8x8_t v52 = vceq_s8(*(int8x8_t *)(v50 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
      if (v52.i8[0])
      {
        *(v50 - 3) = 95;
        if ((v52.i8[1] & 1) == 0)
        {
LABEL_104:
          if ((v52.i8[2] & 1) == 0) {
            goto LABEL_105;
          }
          goto LABEL_113;
        }
      }
      else if ((v52.i8[1] & 1) == 0)
      {
        goto LABEL_104;
      }
      *(v50 - 2) = 95;
      if ((v52.i8[2] & 1) == 0)
      {
LABEL_105:
        if ((v52.i8[3] & 1) == 0) {
          goto LABEL_106;
        }
        goto LABEL_114;
      }
LABEL_113:
      *(v50 - 1) = 95;
      if ((v52.i8[3] & 1) == 0)
      {
LABEL_106:
        if ((v52.i8[4] & 1) == 0) {
          goto LABEL_107;
        }
        goto LABEL_115;
      }
LABEL_114:
      *uint64_t v50 = 95;
      if ((v52.i8[4] & 1) == 0)
      {
LABEL_107:
        if ((v52.i8[5] & 1) == 0) {
          goto LABEL_108;
        }
        goto LABEL_116;
      }
LABEL_115:
      v50[1] = 95;
      if ((v52.i8[5] & 1) == 0)
      {
LABEL_108:
        if ((v52.i8[6] & 1) == 0) {
          goto LABEL_109;
        }
        goto LABEL_117;
      }
LABEL_116:
      v50[2] = 95;
      if ((v52.i8[6] & 1) == 0)
      {
LABEL_109:
        if (v52.i8[7]) {
          goto LABEL_118;
        }
        goto LABEL_101;
      }
LABEL_117:
      v50[3] = 95;
      if (v52.i8[7]) {
LABEL_118:
      }
        v50[4] = 95;
LABEL_101:
      v50 += 8;
      v51 -= 8;
      if (!v51)
      {
        if (v48 == (v48 & 0xFFFFFFFFFFFFFFF8)) {
          return __src;
        }
        goto LABEL_126;
      }
    }
  }
  if (__len - 1 < __len) {
    size_t v3 = __len - 1;
  }
  if (v3 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v3 >= 0x17)
  {
    uint64_t v28 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v28 = v3 | 7;
    }
    uint64_t v29 = v28 + 1;
    p_dst = (long long *)operator new(v28 + 1);
    *((void *)&__dst + 1) = v3;
    unint64_t v62 = v29 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v62) = v3;
    p_dst = &__dst;
    if (!v3) {
      goto LABEL_61;
    }
  }
  std::string __src = (char *)memmove(p_dst, (const void *)(v5 + 1), v3);
LABEL_61:
  *((unsigned char *)p_dst + v3) = 0;
  unint64_t v30 = v62;
  *(void *)(a3 + 16) = v62;
  *(_OWORD *)a3 = __dst;
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 48) = 0;
  unint64_t v31 = HIBYTE(v30);
  uint64_t v32 = *(unsigned char **)a3;
  unint64_t v33 = *(void *)(a3 + 8);
  if ((v31 & 0x80u) == 0)
  {
    uint64_t v32 = (unsigned char *)a3;
    unint64_t v33 = v31;
  }
  if (!v33) {
    return __src;
  }
  int v34 = v32;
  if (v33 < 8)
  {
LABEL_120:
    BOOL v53 = &v32[v33];
    do
    {
      if (*v34 == 58) {
        *int v34 = 95;
      }
      ++v34;
    }
    while (v34 != v53);
    return __src;
  }
  int v34 = &v32[v33 & 0xFFFFFFFFFFFFFFF8];
  uint64_t v35 = v32 + 3;
  unint64_t v36 = v33 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    int8x8_t v37 = vceq_s8(*(int8x8_t *)(v35 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
    if (v37.i8[0])
    {
      *(v35 - 3) = 95;
      if ((v37.i8[1] & 1) == 0)
      {
LABEL_69:
        if ((v37.i8[2] & 1) == 0) {
          goto LABEL_70;
        }
        goto LABEL_78;
      }
    }
    else if ((v37.i8[1] & 1) == 0)
    {
      goto LABEL_69;
    }
    *(v35 - 2) = 95;
    if ((v37.i8[2] & 1) == 0)
    {
LABEL_70:
      if ((v37.i8[3] & 1) == 0) {
        goto LABEL_71;
      }
      goto LABEL_79;
    }
LABEL_78:
    *(v35 - 1) = 95;
    if ((v37.i8[3] & 1) == 0)
    {
LABEL_71:
      if ((v37.i8[4] & 1) == 0) {
        goto LABEL_72;
      }
      goto LABEL_80;
    }
LABEL_79:
    *uint64_t v35 = 95;
    if ((v37.i8[4] & 1) == 0)
    {
LABEL_72:
      if ((v37.i8[5] & 1) == 0) {
        goto LABEL_73;
      }
      goto LABEL_81;
    }
LABEL_80:
    v35[1] = 95;
    if ((v37.i8[5] & 1) == 0)
    {
LABEL_73:
      if (v37.i8[6]) {
        goto LABEL_82;
      }
      goto LABEL_74;
    }
LABEL_81:
    v35[2] = 95;
    if (v37.i8[6])
    {
LABEL_82:
      v35[3] = 95;
      if ((v37.i8[7] & 1) == 0) {
        goto LABEL_66;
      }
      goto LABEL_83;
    }
LABEL_74:
    if ((v37.i8[7] & 1) == 0) {
      goto LABEL_66;
    }
LABEL_83:
    v35[4] = 95;
LABEL_66:
    v35 += 8;
    v36 -= 8;
  }
  while (v36);
  if (v33 != (v33 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_120;
  }
  return __src;
}

void sub_215AEE674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AEE690(uint64_t a1, void *__src, size_t __len, char a4)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (__len >= 0x17)
  {
    size_t v9 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v9 = __len | 7;
    }
    size_t v10 = v9 + 1;
    char v8 = (long long *)operator new(v9 + 1);
    *((void *)&v11 + 1) = __len;
    unint64_t v12 = v10 | 0x8000000000000000;
    *(void *)&long long v11 = v8;
    goto LABEL_8;
  }
  HIBYTE(v12) = __len;
  char v8 = &v11;
  if (__len) {
LABEL_8:
  }
    memmove(v8, __src, __len);
  *((unsigned char *)v8 + __len) = 0;
  *(_OWORD *)long long __p = v11;
  unint64_t v16 = v12;
  char v17 = a4;
  v14[0] = 0;
  v14[1] = 0;
  uint64_t v13 = v14;
  sub_2157B75C4((uint64_t **)&v13, (uint64_t *)v14, (const void **)__p, (uint64_t)__p);
  (*(void (**)(uint64_t, char ***))(*(void *)a1 + 32))(a1, &v13);
  sub_21573AE84((uint64_t)&v13, v14[0]);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_215AEE7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AEE828(uint64_t a1, const void ***a2)
{
  v9[0] = 0;
  v9[1] = 0;
  char v8 = v9;
  size_t v3 = a2 + 1;
  uint64_t v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v8, (uint64_t *)v9, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          uint64_t v6 = (const void ***)v5;
          uint64_t v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (const void ***)v4[2];
          BOOL v7 = *v6 == v4;
          uint64_t v4 = (const void **)v6;
        }
        while (!v7);
      }
      uint64_t v4 = (const void **)v6;
    }
    while (v6 != v3);
  }
  (*(void (**)(uint64_t, char ***))(*(void *)a1 + 32))(a1, &v8);
  sub_21573AE84((uint64_t)&v8, v9[0]);
}

void sub_215AEE900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

void sub_215AEE918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

uint64_t sub_215AEE930(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)a1 + 56))();
  if (v9) {
    return v6;
  }
  if (a3)
  {
    size_t v11 = a3;
    do
    {
      if (!v11) {
        goto LABEL_8;
      }
      int v12 = a2[--v11];
    }
    while (v12 != 46);
    if (v11 == -1)
    {
LABEL_8:
      unsigned __int8 v7 = 0;
      uint64_t v8 = 256;
      *(_WORD *)&v20[7] = 256;
      LOBYTE(__p[0]) = 0;
      goto LABEL_21;
    }
    if (a3 >= v11) {
      a3 = v11;
    }
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (a3 >= 0x17)
    {
      uint64_t v14 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((a3 | 7) != 0x17) {
        uint64_t v14 = a3 | 7;
      }
      uint64_t v15 = v14 + 1;
      p_dst = (long long *)operator new(v14 + 1);
      *((void *)&__dst + 1) = a3;
      unint64_t v22 = v15 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v22) = a3;
      p_dst = &__dst;
      if (!a3) {
        goto LABEL_20;
      }
    }
    memmove(p_dst, a2, a3);
LABEL_20:
    *((unsigned char *)p_dst + a3) = 0;
    *(_OWORD *)long long __p = __dst;
    *(void *)long long v20 = v22;
    v20[8] = 1;
    unsigned __int8 v7 = HIBYTE(v22);
    uint64_t v8 = *((void *)&__dst + 1);
    goto LABEL_21;
  }
  LOBYTE(__p[0]) = 0;
  v20[8] = 0;
LABEL_21:
  if ((v7 & 0x80u) == 0) {
    unint64_t v16 = __p;
  }
  else {
    unint64_t v16 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v17 = v7;
  }
  else {
    uint64_t v17 = v8;
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(*(void *)a1 + 64))(a1, v16, v17);
  if (v20[8] && (v20[7] & 0x80000000) != 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_215AEEAE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AEEB0C(void *result, void *a2)
{
  qword_26788EAB8 = 0;
  qword_26788EAB0 = 0;
  qword_26788EAA8 = (uint64_t)&qword_26788EAB0;
  if (*result != *a2 || result[2] != a2[2]) {
    sub_215AEEE5C();
  }
  return result;
}

void sub_215AEEE18(_Unwind_Exception *a1)
{
  if (v2 < 0)
  {
    operator delete(v1);
    sub_21573AE84((uint64_t)&qword_26788EAA8, (char *)qword_26788EAB0);
    _Unwind_Resume(a1);
  }
  sub_21573AE84((uint64_t)&qword_26788EAA8, (char *)qword_26788EAB0);
  _Unwind_Resume(a1);
}

void sub_215AEEE5C()
{
  int v0 = 0;
  operator new();
}

void sub_215AEF0DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  MEMORY[0x2166C4D20](v2, 0x10B2C40EED050F3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AEF108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AEF120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

unint64_t sub_215AEF16C(const std::string *a1)
{
  _X20 = 0;
  _X21 = 0;
  __asm { CASPAL          X20, X21, X20, X21, [X8] }
  unint64_t v7 = _X20 >> 8;
  unint64_t v26 = std::stoll(a1, 0, 10);
  LOBYTE(v27) = 1;
  sub_215ABA544((uint64_t *)&v26);
  if ((v25 & 0x80u) == 0) {
    size_t v9 = v25;
  }
  else {
    size_t v9 = __n;
  }
  std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  int v11 = (char)size;
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
  }
  if (v9 != size)
  {
    if ((v25 & 0x80) != 0) {
      operator delete(__p);
    }
    goto LABEL_23;
  }
  if (v11 >= 0) {
    int v12 = a1;
  }
  else {
    int v12 = (const std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if ((v25 & 0x80) == 0)
  {
    if (!v25) {
      goto LABEL_24;
    }
    uint64_t v13 = 0;
    do
    {
      int v14 = *((unsigned __int8 *)&__p + v13);
      int v15 = v12->__r_.__value_.__s.__data_[v13];
      _ZF = v14 != v15 || v25 - 1 == v13++;
    }
    while (!_ZF);
    if (v14 == v15) {
      goto LABEL_24;
    }
LABEL_23:
    LOBYTE(_X0) = 0;
    return _X0 | (v7 << 8);
  }
  int v17 = memcmp(__p, v12, __n);
  operator delete(__p);
  if (v17) {
    goto LABEL_23;
  }
LABEL_24:
  _X0 = v26;
  long long __p = (void *)v26;
  size_t __n = v27;
  std::string::size_type v19 = a1[1].__r_.__value_.__l.__size_;
  do
  {
    _X5 = a1[1].__r_.__value_.__r.__words[2];
    __asm { CASPAL          X4, X5, X0, X1, [X8] }
    _ZF = _X4 == v19;
    std::string::size_type v19 = _X4;
  }
  while (!_ZF);
  unint64_t v7 = v26 >> 8;
  return _X0 | (v7 << 8);
}

void sub_215AEF2DC(void *a1)
{
}

void sub_215AEF2F0(unsigned char *__src@<X0>, uint64_t __len@<X1>, uint64_t a3@<X8>)
{
  v42[2] = *MEMORY[0x263EF8340];
  if (!__len)
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 32) = 0;
    *(unsigned char *)(a3 + 80) = 0;
    return;
  }
  int64_t v7 = 0;
  size_t v8 = __len;
  while (__src[v7] != 35)
  {
    if (__len == ++v7)
    {
      LOBYTE(v9) = 0;
      uint64_t v10 = -1;
      goto LABEL_14;
    }
  }
  LOBYTE(v9) = 0;
  uint64_t v10 = -1;
  if (__len != v7 && v7 != -1)
  {
    if (__len >= v7) {
      size_t v8 = v7;
    }
    else {
      size_t v8 = __len;
    }
    int v9 = 1;
    if (!v8)
    {
      int64_t v32 = __len + ~v7;
      if (__len >= v32) {
        size_t v15 = v32;
      }
      else {
        size_t v15 = __len;
      }
      if (v15 <= 0x7FFFFFFFFFFFFFF7) {
        goto LABEL_25;
      }
LABEL_81:
      sub_215731CD8();
    }
    uint64_t v10 = v7;
  }
LABEL_14:
  if (v8 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v8 >= 0x17)
  {
    uint64_t v12 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v12 = v8 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_dst = (void **)operator new(v12 + 1);
    *(void *)&long long v36 = v8;
    *((void *)&v36 + 1) = v13 | 0x8000000000000000;
    long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v36) = v8;
    p_dst = (void **)&__dst;
  }
  memmove(p_dst, __src, v8);
  *((unsigned char *)p_dst + v8) = 0;
  size_t v8 = (size_t)__dst;
  v42[0] = v36;
  *(void *)((char *)v42 + 7) = *(void *)((char *)&v36 + 7);
  unsigned __int8 v3 = HIBYTE(v36);
  long long __dst = 0;
  long long v36 = 0uLL;
  if ((v9 & 1) == 0)
  {
    int v17 = 0;
    char v18 = 0;
    goto LABEL_36;
  }
  int v9 = 0;
  if (__len >= __len + ~v10) {
    size_t v15 = __len + ~v10;
  }
  else {
    size_t v15 = __len;
  }
  if (v15 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_81;
  }
LABEL_25:
  if (v15 >= 0x17)
  {
    uint64_t v19 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17) {
      uint64_t v19 = v15 | 7;
    }
    uint64_t v20 = v19 + 1;
    unint64_t v16 = operator new(v19 + 1);
    *(void *)&long long v34 = v15;
    *((void *)&v34 + 1) = v20 | 0x8000000000000000;
    unint64_t v33 = v16;
  }
  else
  {
    HIBYTE(v34) = v15;
    unint64_t v16 = &v33;
    if (!v15) {
      goto LABEL_33;
    }
  }
  memmove(v16, &__src[__len - v15], v15);
LABEL_33:
  *((unsigned char *)v16 + v15) = 0;
  int v17 = v33;
  v40[0] = v34;
  *(void *)((char *)v40 + 7) = *(void *)((char *)&v34 + 7);
  char v14 = HIBYTE(v34);
  long long v34 = 0uLL;
  unint64_t v33 = 0;
  v41[0] = v40[0];
  *(void *)((char *)v41 + 7) = *(void *)((char *)v40 + 7);
  v40[0] = 0;
  *(void *)((char *)v40 + 7) = 0;
  if (v9)
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 32) = 0;
    char v21 = 1;
    *(unsigned char *)(a3 + 80) = 0;
    goto LABEL_66;
  }
  char v18 = 1;
LABEL_36:
  *(void *)&v38[7] = *(void *)((char *)v42 + 7);
  size_t v37 = v8;
  *(void *)uint64_t v38 = v42[0];
  unsigned __int8 v39 = v3;
  v42[0] = 0;
  *(void *)((char *)v42 + 7) = 0;
  if ((v3 & 0x80u) == 0) {
    unint64_t v22 = &v37;
  }
  else {
    unint64_t v22 = (size_t *)v8;
  }
  unint64_t v23 = v3;
  if ((v3 & 0x80u) != 0) {
    unint64_t v23 = *(void *)v38;
  }
  if (v23)
  {
    uint64_t v24 = v22;
    if (v23 >= 8)
    {
      uint64_t v24 = (size_t *)((char *)v22 + (v23 & 0xFFFFFFFFFFFFFFF8));
      unsigned __int8 v25 = (char *)v22 + 3;
      unint64_t v26 = v23 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        int8x8_t v27 = vceq_s8(*(int8x8_t *)(v25 - 3), (int8x8_t)0x2323232323232323);
        if (v27.i8[0])
        {
          *(v25 - 3) = 95;
          if ((v27.i8[1] & 1) == 0)
          {
LABEL_47:
            if ((v27.i8[2] & 1) == 0) {
              goto LABEL_48;
            }
            goto LABEL_56;
          }
        }
        else if ((v27.i8[1] & 1) == 0)
        {
          goto LABEL_47;
        }
        *(v25 - 2) = 95;
        if ((v27.i8[2] & 1) == 0)
        {
LABEL_48:
          if ((v27.i8[3] & 1) == 0) {
            goto LABEL_49;
          }
          goto LABEL_57;
        }
LABEL_56:
        *(v25 - 1) = 95;
        if ((v27.i8[3] & 1) == 0)
        {
LABEL_49:
          if ((v27.i8[4] & 1) == 0) {
            goto LABEL_50;
          }
          goto LABEL_58;
        }
LABEL_57:
        *unsigned __int8 v25 = 95;
        if ((v27.i8[4] & 1) == 0)
        {
LABEL_50:
          if ((v27.i8[5] & 1) == 0) {
            goto LABEL_51;
          }
          goto LABEL_59;
        }
LABEL_58:
        v25[1] = 95;
        if ((v27.i8[5] & 1) == 0)
        {
LABEL_51:
          if ((v27.i8[6] & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_60;
        }
LABEL_59:
        v25[2] = 95;
        if ((v27.i8[6] & 1) == 0)
        {
LABEL_52:
          if (v27.i8[7]) {
            goto LABEL_61;
          }
          goto LABEL_44;
        }
LABEL_60:
        v25[3] = 95;
        if (v27.i8[7]) {
LABEL_61:
        }
          v25[4] = 95;
LABEL_44:
        v25 += 8;
        v26 -= 8;
        if (!v26)
        {
          if (v23 == (v23 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_63;
          }
          break;
        }
      }
    }
    unint64_t v31 = (size_t *)((char *)v22 + v23);
    do
    {
      if (*(unsigned char *)v24 == 35) {
        *(unsigned char *)uint64_t v24 = 95;
      }
      uint64_t v24 = (size_t *)((char *)v24 + 1);
    }
    while (v24 != v31);
LABEL_63:
    size_t v8 = v37;
    unsigned __int8 v3 = v39;
  }
  uint64_t v28 = *(void *)v38;
  uint64_t v29 = *(void *)&v38[7];
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v28;
  *(void *)(a3 + 15) = v29;
  *(unsigned char *)(a3 + 23) = v3;
  *(unsigned char *)(a3 + 24) = 1;
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 80) = 0;
  if ((v18 & 1) == 0) {
    goto LABEL_68;
  }
  size_t v8 = 0;
  unsigned __int8 v3 = 0;
  char v21 = 0;
LABEL_66:
  uint64_t v30 = v41[0];
  *(void *)(a3 + 32) = v17;
  *(void *)(a3 + 40) = v30;
  *(void *)(a3 + 47) = *(void *)((char *)v41 + 7);
  *(unsigned char *)(a3 + 55) = v14;
  v41[0] = 0;
  *(void *)((char *)v41 + 7) = 0;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(unsigned char *)(a3 + 80) = 1;
  if (v21) {
    return;
  }
  if ((v3 & 0x80) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_69;
  }
  operator delete((void *)v8);
  if (SHIBYTE(v36) < 0) {
LABEL_69:
  }
    operator delete(__dst);
}

void sub_215AEF754(_Unwind_Exception *exception_object)
{
  if ((v3 & 1) == 0 && v2 < 0)
  {
    operator delete(v1);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AEF77C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2 = a2;
  int v4 = a2[24];
  if (a1[24]) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    if ((a1[24] != 0) != (v4 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = a1[23];
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = a1[23];
    }
    else {
      uint64_t v8 = *((void *)a1 + 1);
    }
    uint64_t v9 = a2[23];
    int v10 = (char)v9;
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *((void *)a2 + 1);
    }
    if (v8 != v9) {
      return 0;
    }
    if (v10 < 0) {
      a2 = *(unsigned __int8 **)a2;
    }
    if ((v7 & 0x80) != 0)
    {
      if (memcmp(*(const void **)a1, a2, *((void *)a1 + 1))) {
        return 0;
      }
    }
    else if (a1[23])
    {
      int v11 = a1;
      while (*v11 == *a2)
      {
        ++v11;
        ++a2;
        if (!--v7) {
          goto LABEL_23;
        }
      }
      return 0;
    }
  }
LABEL_23:
  uint64_t result = (a1[80] != 0) == (v2[80] != 0);
  if (!a1[80] || !v2[80]) {
    return result;
  }
  uint64_t v12 = a1[55];
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = a1[55];
  }
  else {
    uint64_t v13 = *((void *)a1 + 5);
  }
  uint64_t v14 = v2[55];
  int v15 = (char)v14;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *((void *)v2 + 5);
  }
  if (v13 != v14) {
    return 0;
  }
  unint64_t v16 = (const void **)(a1 + 32);
  if (v15 >= 0) {
    int v17 = v2 + 32;
  }
  else {
    int v17 = (unsigned __int8 *)*((void *)v2 + 4);
  }
  if ((v12 & 0x80) != 0) {
    return memcmp(*v16, v17, *((void *)a1 + 5)) == 0;
  }
  if (!a1[55]) {
    return 1;
  }
  uint64_t v18 = v12 - 1;
  do
  {
    int v20 = *(unsigned __int8 *)v16;
    unint64_t v16 = (const void **)((char *)v16 + 1);
    int v19 = v20;
    int v22 = *v17++;
    int v21 = v22;
    BOOL v24 = v18-- != 0;
    uint64_t result = v19 == v21;
  }
  while (v19 == v21 && v24);
  return result;
}

void sub_215AEF928(void *a1, uint64_t a2)
{
}

void sub_215AEFAC4(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_215AEFACC(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215AEFB48(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AEFBD4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (!result)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    return *(void *)(a1 + 8);
  }
  return result;
}

uint64_t sub_215AEFC4C(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  int v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4
    && (atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v7 = a2[1];
    uint64_t v6 = (std::__shared_weak_count *)a2[2];
    if (v5)
    {
LABEL_4:
      if (v6
        && (atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed),
            !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
        if (!v7) {
          return 0;
        }
      }
      else if (!v7)
      {
        return 0;
      }
      if (*(void *)(a1 + 8)) {
        goto LABEL_10;
      }
      if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 228, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_37;
      }
      if (*(void *)(a1 + 8))
      {
LABEL_10:
        uint64_t result = (*(uint64_t (**)(void *))(*a2 + 24))(a2);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_37;
        }
        uint64_t result = (*(uint64_t (**)(void *, void))(*a2 + 24))(a2, *(void *)(a1 + 8));
        if (!result) {
          return result;
        }
      }
      uint64_t v9 = *(void *)(a1 + 8);
      if (!v9)
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          goto LABEL_37;
        }
        uint64_t v9 = *(void *)(a1 + 8);
      }
      uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
      uint64_t v11 = a2[1];
      if (v11)
      {
LABEL_17:
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 16))(v11);
        v18[0] = v10;
        v18[1] = v10 + 16;
        v18[2] = v10 + 48;
        void v18[3] = v10 + 80;
        v18[4] = v10 + 112;
        uint64_t v19 = v10 + 176;
        v16[0] = v12;
        v16[1] = v12 + 16;
        _OWORD v16[2] = v12 + 48;
        v16[3] = v12 + 80;
        v16[4] = v12 + 112;
        uint64_t v17 = v12 + 176;
        uint64_t result = sub_215AF0A90((uint64_t)&v20, v18, v16);
        if (!result) {
          return result;
        }
        uint64_t result = (*(unsigned char *)(v19 + 24) != 0) == (*(unsigned char *)(v17 + 24) != 0);
        if (!*(unsigned char *)(v19 + 24) || !*(unsigned char *)(v17 + 24)) {
          return result;
        }
        uint64_t v13 = *(unsigned __int8 **)v19;
        uint64_t v14 = *(unsigned __int8 **)(v19 + 8);
        int v15 = *(unsigned __int8 **)v17;
        if (&v14[-*(void *)v19] == (unsigned __int8 *)(*(void *)(v17 + 8) - *(void *)v17))
        {
          if (v13 == v14) {
            return 1;
          }
          do
          {
            uint64_t result = sub_215AEF77C(v13, v15);
            if (!result) {
              break;
            }
            v13 += 96;
            v15 += 96;
          }
          while (v13 != v14);
          return result;
        }
        return 0;
      }
      if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        uint64_t v11 = a2[1];
        goto LABEL_17;
      }
LABEL_37:
      abort();
    }
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v6 = (std::__shared_weak_count *)a2[2];
    if (v5) {
      goto LABEL_4;
    }
  }
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return v7 == 0;
}

uint64_t sub_215AF0058(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 228, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_9;
    }
    uint64_t v3 = *(void *)(a1 + 8);
    if (v3) {
      goto LABEL_6;
    }
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
LABEL_9:
      abort();
    }
    uint64_t v3 = *(void *)(a1 + 8);
  }
LABEL_6:
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24);

  return v5(a2, v3);
}

uint64_t sub_215AF0140(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 16);

  return v3();
}

void sub_215AF01DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  v16[0] = v2;
  v16[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v2)
  {
    HIBYTE(v14) = 0;
    LOBYTE(__p[0]) = 0;
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(std::string *__return_ptr))(*(void *)v4 + 32))(&v18);
  uint64_t v6 = std::string::insert(&v18, 0, ",", 1uLL);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  std::string::size_type v14 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  uint64_t v3 = (std::__shared_weak_count *)v16[1];
  if (v16[1])
  {
LABEL_14:
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = v8;
  strcpy((char *)v16, "viz::SharedData");
  _OWORD v16[2] = 0xF00000000000000;
  int v17 = 1;
  v18.__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
  v18.__r_.__value_.__l.__size_ = (std::string::size_type)"{";
  v18.__r_.__value_.__r.__words[2] = (std::string::size_type)v16;
  uint64_t v19 = "{";
  char v20 = "{";
  sub_2157492F0((uint64_t *)&v18.__r_.__value_.__r.__words[2], (uint64_t)v16);
  sub_215748F40((uint64_t)&v15, (uint64_t)v16, &v10);
  v18.__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
  v18.__r_.__value_.__l.__size_ = (std::string::size_type)__p;
  v18.__r_.__value_.__r.__words[2] = (std::string::size_type)v16;
  uint64_t v19 = (const char *)__p;
  char v20 = (const char *)__p;
  if (v17 == -1) {
    sub_215742D4C();
  }
  int v21 = &v18;
  ((void (*)(std::string **, void *))off_26C678DD8[v17])(&v21, v16);
  v18.__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
  v18.__r_.__value_.__l.__size_ = (std::string::size_type)"}";
  v18.__r_.__value_.__r.__words[2] = (std::string::size_type)v16;
  uint64_t v19 = "}";
  char v20 = "}";
  if (v17 == -1) {
    sub_215742D4C();
  }
  int v21 = &v18;
  ((void (*)(std::string **, void *))off_26C678DF0[v17])(&v21, v16);
  if (v17 == -1) {
    sub_215742D4C();
  }
  v18.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  ((void (*)(std::string *, void *))off_26C678DC0[v17])(&v18, v16);
  if (v17 != -1) {
    ((void (*)(std::string *, void *))off_26C678DA8[v17])(&v18, v16);
  }
  if (!v9 || atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete(__p[0]);
    return;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_28;
  }
}

void sub_215AF0520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  if (*(char *)(v3 - 57) < 0) {
    operator delete(*(void **)(v3 - 80));
  }
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215AF0554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215AF0590(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  __p[0] = v4;
  __p[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4)
  {
    uint64_t v9 = 0;
    char v10 = 0;
    if (!v5) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(std::string *__return_ptr))(*(void *)v6 + 40))(&__dst);
  uint64_t v8 = std::string::insert(&__dst, 0, ",", 1uLL);
  uint64_t v9 = (void *)v8->__r_.__value_.__r.__words[0];
  char v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  uint64_t v5 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
LABEL_14:
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
LABEL_16:
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v11)
  {
    *(unsigned char *)(a2 + 23) = 7;
    strcpy((char *)a2, "nullptr");
    if (v12) {
      goto LABEL_31;
    }
LABEL_32:
    if ((v10 & 0x80) == 0) {
      return;
    }
LABEL_35:
    operator delete(v9);
    return;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  std::string::size_type v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(void **__return_ptr))(*(void *)v13 + 40))(__p);
  int v21 = -1;
  if (SHIBYTE(v17) < 0)
  {
    sub_215738B0C(&__dst, __p[0], (unint64_t)__p[1]);
    int v15 = SHIBYTE(v17);
    *(std::string *)a2 = __dst;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)__p;
    *(void *)(a2 + 16) = v17;
  }
  if (v14)
  {
    if (!atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  uint64_t v12 = v19;
  if (!v19) {
    goto LABEL_32;
  }
LABEL_31:
  if (atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (v10 < 0) {
    goto LABEL_35;
  }
}

void sub_215AF0888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, char a20)
{
  sub_215742CF0((uint64_t)&a20);
  if (a17 < 0)
  {
    operator delete(__p);
    sub_215733368((uint64_t)&a10);
    sub_215733368((uint64_t)&a18);
    if ((v21 & 0x80) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    sub_215733368((uint64_t)&a10);
    sub_215733368((uint64_t)&a18);
    if ((v21 & 0x80) == 0) {
      goto LABEL_3;
    }
  }
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_215AF0900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    sub_215733368((uint64_t)&a15);
    sub_215733368((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
  sub_215733368((uint64_t)&a15);
  sub_215733368((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF0948(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 48);

  return v3();
}

uint64_t sub_215AF09EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 56);

  return v3();
}

uint64_t sub_215AF0A90(uint64_t a1, void *a2, void *a3)
{
  if (*(void *)*a2 != *(void *)*a3 || *(unsigned __int8 *)(*a2 + 8) != *(unsigned __int8 *)(*a3 + 8)) {
    return 0;
  }
  uint64_t v5 = (unsigned __int8 *)a2[1];
  uint64_t v6 = (unsigned __int8 **)a3[1];
  int v7 = *((unsigned __int8 *)v6 + 24);
  if (v5[24]) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if ((v5[24] != 0) != (v7 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = v5[23];
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = (unsigned __int8 *)v5[23];
    }
    else {
      uint64_t v11 = (unsigned __int8 *)*((void *)v5 + 1);
    }
    uint64_t v12 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
    int v13 = (char)v12;
    if ((char)v12 < 0) {
      uint64_t v12 = v6[1];
    }
    if (v11 != v12) {
      return 0;
    }
    if (v13 >= 0) {
      std::string::size_type v14 = (unsigned __int8 *)a3[1];
    }
    else {
      std::string::size_type v14 = *v6;
    }
    if ((v10 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v5, v14, *((void *)v5 + 1))) {
        return 0;
      }
    }
    else if (v5[23])
    {
      while (*v5 == *v14)
      {
        ++v5;
        ++v14;
        if (!--v10) {
          goto LABEL_26;
        }
      }
      return 0;
    }
  }
LABEL_26:
  int v15 = (unsigned __int8 *)a2[2];
  unint64_t v16 = (unsigned __int8 **)a3[2];
  int v17 = *((unsigned __int8 *)v16 + 24);
  if (v15[24]) {
    BOOL v18 = v17 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    if ((v15[24] != 0) != (v17 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v23 = v15[23];
    if ((v23 & 0x80u) == 0) {
      BOOL v24 = (unsigned __int8 *)v15[23];
    }
    else {
      BOOL v24 = (unsigned __int8 *)*((void *)v15 + 1);
    }
    unsigned __int8 v25 = (unsigned __int8 *)*((unsigned __int8 *)v16 + 23);
    int v26 = (char)v25;
    if ((char)v25 < 0) {
      unsigned __int8 v25 = v16[1];
    }
    if (v24 != v25) {
      return 0;
    }
    if (v26 >= 0) {
      int8x8_t v27 = (unsigned __int8 *)a3[2];
    }
    else {
      int8x8_t v27 = *v16;
    }
    if ((v23 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v15, v27, *((void *)v15 + 1))) {
        return 0;
      }
    }
    else if (v15[23])
    {
      while (*v15 == *v27)
      {
        ++v15;
        ++v27;
        if (!--v23) {
          goto LABEL_32;
        }
      }
      return 0;
    }
  }
LABEL_32:
  uint64_t v19 = a2[3];
  uint64_t v20 = a3[3];
  int v21 = *(unsigned __int8 *)(v20 + 16);
  if (*(unsigned char *)(v19 + 16)) {
    BOOL v22 = v21 == 0;
  }
  else {
    BOOL v22 = 1;
  }
  if (v22)
  {
    if ((*(unsigned char *)(v19 + 16) != 0) == (v21 != 0)) {
      goto LABEL_55;
    }
    return 0;
  }
  if (*(void *)v19 != *(void *)v20 || *(unsigned __int8 *)(v19 + 8) != *(unsigned __int8 *)(v20 + 8)) {
    return 0;
  }
LABEL_55:
  uint64_t v28 = (unsigned __int8 *)a2[4];
  uint64_t v29 = (unsigned __int8 **)a3[4];
  if (v28[48]) {
    BOOL v30 = *((unsigned char *)v29 + 48) == 0;
  }
  else {
    BOOL v30 = 1;
  }
  if (v30) {
    return (v28[48] != 0) == (*((unsigned char *)v29 + 48) != 0);
  }
  uint64_t v31 = v28[23];
  if ((v31 & 0x80u) == 0) {
    int64_t v32 = (unsigned __int8 *)v28[23];
  }
  else {
    int64_t v32 = (unsigned __int8 *)*((void *)v28 + 1);
  }
  unint64_t v33 = (unsigned __int8 *)*((unsigned __int8 *)v29 + 23);
  int v34 = (char)v33;
  if ((char)v33 < 0) {
    unint64_t v33 = v29[1];
  }
  if (v32 != v33) {
    return 0;
  }
  if (v34 >= 0) {
    uint64_t v35 = (unsigned __int8 *)a3[4];
  }
  else {
    uint64_t v35 = *v29;
  }
  if ((v31 & 0x80) != 0) {
    return memcmp(*(const void **)v28, v35, *((void *)v28 + 1)) == 0;
  }
  if (!v28[23]) {
    return 1;
  }
  uint64_t v36 = v31 - 1;
  do
  {
    int v38 = *v28++;
    int v37 = v38;
    int v40 = *v35++;
    int v39 = v40;
    BOOL v42 = v36-- != 0;
    uint64_t result = v37 == v39;
  }
  while (v37 == v39 && v42);
  return result;
}

void sub_215AF0D78(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF0DB0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_215AF0DE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void *sub_215AF0E54(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_215AF0F10(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF0FDC(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      return sub_2158CA858((uint64_t)a1 + 8, result + 8);
    }
  }
  return result;
}

void sub_215AF107C(uint64_t *a1, uint64_t a2, void *__src, size_t __len)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  *a1 = a2;
  if (__len > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (__len >= 0x17)
  {
    size_t v9 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v9 = __len | 7;
    }
    size_t v10 = v9 + 1;
    int v7 = operator new(v9 + 1);
    v11[1] = __len;
    unint64_t v12 = v10 | 0x8000000000000000;
    v11[0] = v7;
  }
  else
  {
    HIBYTE(v12) = __len;
    int v7 = v11;
    if (!__len)
    {
      LOBYTE(v11[0]) = 0;
      uint64_t v8 = *a1;
      if (*a1) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  memmove(v7, __src, __len);
  *((unsigned char *)v7 + __len) = 0;
  uint64_t v8 = *a1;
  if (*a1)
  {
LABEL_5:
    LOBYTE(__p[0]) = 0;
    LOBYTE(v15) = 0;
    if (*(unsigned char *)(v8 + 264))
    {
      if (*(char *)(v8 + 263) < 0)
      {
        sub_215738B0C(__p, *(void **)(v8 + 240), *(void *)(v8 + 248));
      }
      else
      {
        *(_OWORD *)long long __p = *(_OWORD *)(v8 + 240);
        uint64_t v14 = *(void *)(v8 + 256);
      }
      LOBYTE(v15) = 1;
    }
LABEL_15:
    operator new();
  }
LABEL_12:
  LOBYTE(__p[0]) = 0;
  LOBYTE(v15) = 0;
  goto LABEL_15;
}

void sub_215AF164C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,char a24)
{
  if (a22 && a21 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AF1718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_215742CF0((uint64_t)&a9);
  sub_215733368(v24);
  _Unwind_Resume(a1);
}

void sub_215AF1730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15 = a13;
  a13 = 0;
  if (v15) {
    sub_215E15464((uint64_t)&a13, v15);
  }
  sub_215742CF0((uint64_t)&a9);
  sub_215733368(v13);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF1760(uint64_t a1)
{
  return a1 + 240;
}

uint64_t *sub_215AF1768(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*(unsigned char *)(v2 + 48) && *(char *)(v2 + 47) < 0)
    {
      operator delete(*(void **)(v2 + 24));
      if ((*(char *)(v2 + 23) & 0x80000000) == 0) {
        goto LABEL_6;
      }
    }
    else if ((*(char *)(v2 + 23) & 0x80000000) == 0)
    {
LABEL_6:
      MEMORY[0x2166C4D20](v2, 0x1012C4045E9F9B4);
      return a1;
    }
    operator delete(*(void **)v2);
    goto LABEL_6;
  }
  return a1;
}

void sub_215AF17E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void **)(v1 + 80);
  unint64_t v3 = (void *)(v1 + 88);
  *(_OWORD *)long long __p = 0u;
  long long v182 = 0u;
  long long v183 = 0u;
  if (v2 == v3) {
    goto LABEL_205;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v2;
  do
  {
    uint64_t v6 = v4;
    int v7 = (void *)v5[1];
    if (v7)
    {
      do
      {
        uint64_t v8 = v7;
        int v7 = (void *)*v7;
      }
      while (v7);
    }
    else
    {
      do
      {
        uint64_t v8 = (void *)v5[2];
        BOOL v9 = *v8 == (void)v5;
        uint64_t v5 = v8;
      }
      while (!v9);
    }
    ++v4;
    uint64_t v5 = v8;
  }
  while (v8 != v3);
  __int16 v10 = v6 + 2;
  unint64_t v11 = (unint64_t)(v6 + 2) >> 9;
  if ((v10 & 0x1FF) != 0) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!v12)
  {
    int v64 = 0;
    uint64_t v15 = 0;
    uint64_t v65 = v4 + ((uint64_t)-MEMORY[0] >> 3);
    if (v65 < 1) {
      goto LABEL_74;
    }
    goto LABEL_71;
  }
  uint64_t v13 = (char *)operator new(8 * v12);
  uint64_t v14 = &v13[8 * v12];
  uint64_t v15 = v13;
  uint64_t v16 = v13;
  do
  {
    int v17 = operator new(0x1000uLL);
    if (v16 != v14) {
      goto LABEL_16;
    }
    if (v15 > v13)
    {
      uint64_t v18 = (v15 - v13) >> 3;
      if (v18 >= -1) {
        uint64_t v19 = v18 + 1;
      }
      else {
        uint64_t v19 = v18 + 2;
      }
      uint64_t v20 = v19 >> 1;
      int v21 = &v15[-8 * (v19 >> 1)];
      BOOL v22 = v14;
      if (v14 != v15)
      {
        memmove(v21, v15, v14 - v15);
        BOOL v22 = v15;
      }
      uint64_t v16 = &v21[v14 - v15];
      uint64_t v15 = &v22[-8 * v20];
      goto LABEL_16;
    }
    if (v14 == v13) {
      unint64_t v23 = 1;
    }
    else {
      unint64_t v23 = (v14 - v13) >> 2;
    }
    if (v23 >> 61) {
      sub_215738AD8();
    }
    uint64_t v24 = (char *)operator new(8 * v23);
    unsigned __int8 v25 = v13;
    unint64_t v26 = v23 >> 2;
    int8x8_t v27 = &v24[8 * (v23 >> 2)];
    uint64_t v16 = v27;
    int64_t v28 = v14 - v15;
    if (v14 != v15)
    {
      uint64_t v16 = &v27[v28 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v29 = v28 - 8;
      if (v29 >= 0x38 && (uint64_t v30 = 8 * v26, (unint64_t)(&v24[8 * v26] - v15) >= 0x20))
      {
        uint64_t v34 = (v29 >> 3) + 1;
        uint64_t v35 = 8 * (v34 & 0x3FFFFFFFFFFFFFFCLL);
        uint64_t v31 = &v27[v35];
        int64_t v32 = &v15[v35];
        uint64_t v36 = (long long *)(v15 + 16);
        int v37 = &v24[v30 + 16];
        uint64_t v38 = v34 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v39 = *v36;
          *((_OWORD *)v37 - 1) = *(v36 - 1);
          *(_OWORD *)int v37 = v39;
          v36 += 2;
          v37 += 32;
          v38 -= 4;
        }
        while (v38);
        if (v34 == (v34 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v31 = &v24[8 * (v23 >> 2)];
        int64_t v32 = v15;
      }
      do
      {
        uint64_t v33 = *(void *)v32;
        v32 += 8;
        *(void *)uint64_t v31 = v33;
        v31 += 8;
      }
      while (v31 != v16);
    }
LABEL_33:
    uint64_t v14 = &v24[8 * v23];
    if (v25) {
      operator delete(v25);
    }
    uint64_t v15 = &v24[8 * (v23 >> 2)];
    uint64_t v13 = v24;
LABEL_16:
    *(void *)uint64_t v16 = v17;
    v16 += 8;
    --v12;
  }
  while (v12);
  int v40 = (char *)__p[1];
  uint64_t v41 = (char *)v182;
  while (v41 != v40)
  {
    if (v15 == v13)
    {
      if (v16 >= v14)
      {
        if (v14 == v13) {
          unint64_t v47 = 1;
        }
        else {
          unint64_t v47 = (v14 - v13) >> 2;
        }
        if (v47 >> 61) {
          sub_215738AD8();
        }
        unint64_t v48 = (char *)operator new(8 * v47);
        uint64_t v49 = v48;
        unint64_t v50 = (v47 + 3) >> 2;
        uint64_t v15 = &v48[8 * v50];
        int64_t v51 = v16 - v13;
        BOOL v9 = v16 == v13;
        uint64_t v16 = v15;
        if (!v9)
        {
          uint64_t v16 = &v15[v51 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v52 = v51 - 8;
          BOOL v53 = &v48[8 * v50];
          uint64_t v54 = v13;
          if (v52 < 0x38) {
            goto LABEL_228;
          }
          uint64_t v55 = 8 * v50;
          BOOL v53 = &v48[8 * v50];
          uint64_t v54 = v13;
          if ((unint64_t)(v53 - v13) < 0x20) {
            goto LABEL_228;
          }
          uint64_t v56 = (v52 >> 3) + 1;
          uint64_t v57 = 8 * (v56 & 0x3FFFFFFFFFFFFFFCLL);
          BOOL v53 = &v15[v57];
          uint64_t v54 = &v13[v57];
          long long v58 = (long long *)(v13 + 16);
          long long v59 = &v48[v55 + 16];
          uint64_t v60 = v56 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v61 = *v58;
            *((_OWORD *)v59 - 1) = *(v58 - 1);
            *(_OWORD *)long long v59 = v61;
            v58 += 2;
            v59 += 32;
            v60 -= 4;
          }
          while (v60);
          if (v56 != (v56 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_228:
            do
            {
              uint64_t v62 = *(void *)v54;
              v54 += 8;
              *(void *)BOOL v53 = v62;
              v53 += 8;
            }
            while (v53 != v16);
          }
        }
        uint64_t v14 = &v48[8 * v47];
        if (v13) {
          operator delete(v13);
        }
        uint64_t v13 = v49;
      }
      else
      {
        uint64_t v43 = (v14 - v16) >> 3;
        if (v43 >= -1) {
          uint64_t v44 = v43 + 1;
        }
        else {
          uint64_t v44 = v43 + 2;
        }
        uint64_t v45 = v44 >> 1;
        uint64_t v15 = &v13[8 * (v44 >> 1)];
        BOOL v46 = v13;
        if (v16 != v13)
        {
          memmove(v15, v13, v16 - v13);
          BOOL v46 = v16;
        }
        uint64_t v16 = &v46[8 * v45];
      }
    }
    uint64_t v42 = *((void *)v41 - 1);
    v41 -= 8;
    *((void *)v15 - 1) = v42;
    v15 -= 8;
    int v40 = (char *)__p[1];
  }
  uint64_t v63 = __p[0];
  __p[0] = v13;
  __p[1] = v15;
  *(void *)&long long v182 = v16;
  *((void *)&v182 + 1) = v14;
  *(void *)&long long v183 = 0;
  if (v63) {
    operator delete(v63);
  }
  if (v16 == v15)
  {
    int v64 = 0;
    uint64_t v65 = v4 + ((uint64_t)-*(void *)v15 >> 3);
    if (v65 < 1) {
      goto LABEL_74;
    }
    goto LABEL_71;
  }
  int v64 = *(void **)v15;
  uint64_t v65 = v4;
  if (v4 >= 1)
  {
LABEL_71:
    uint64_t v66 = &v15[8 * ((unint64_t)v65 >> 9)];
    uint64_t v67 = *(void *)v66 + 8 * (v65 & 0x1FF);
    if (v64 == (void *)v67) {
      goto LABEL_205;
    }
LABEL_75:
    uint64_t v68 = 0;
    do
    {
      uint64_t v69 = v67;
      if (v15 != v66) {
        uint64_t v69 = *(void *)v15 + 4096;
      }
      if (v64 == (void *)v69)
      {
        uint64_t v69 = (uint64_t)v64;
      }
      else
      {
        uint64_t v70 = v64;
        do
        {
          *v70++ = v2[4];
          uint64_t v71 = (void *)v2[1];
          uint64_t v72 = v2;
          if (v71)
          {
            do
            {
              uint64_t v2 = v71;
              uint64_t v71 = (void *)*v71;
            }
            while (v71);
          }
          else
          {
            do
            {
              uint64_t v2 = (void *)v72[2];
              BOOL v9 = *v2 == (void)v72;
              uint64_t v72 = v2;
            }
            while (!v9);
          }
        }
        while (v70 != (void *)v69);
      }
      v68 += (v69 - (uint64_t)v64) >> 3;
      if (v15 == v66) {
        break;
      }
      int v73 = (void *)*((void *)v15 + 1);
      v15 += 8;
      int v64 = v73;
    }
    while (v73 != (void *)v67);
    *((void *)&v183 + 1) = v68;
    if (!v68) {
      goto LABEL_205;
    }
    unint64_t v74 = 0;
    BOOL v75 = (void **)__p[1];
    while (1)
    {
      uint64_t v76 = *(uint64_t *)((char *)v75 + ((v74 >> 6) & 0x3FFFFFFFFFFFFF8));
      uint64_t v77 = *(void *)(v76 + 8 * (v74 & 0x1FF));
      if (!**(unsigned char **)(v77 + 32))
      {
        BOOL v79 = *(atomic_ullong **)(v77 + 40);
        unint64_t v80 = atomic_load(*(unint64_t **)(a1 + 40));
        atomic_exchange(v79, v80);
        uint64_t v81 = *(void *)(*(void *)(v76 + 8 * (v74 & 0x1FF)) + 48);
        uint64_t v82 = *(void **)(v81 + 80);
        uint64_t v68 = *((void *)&v183 + 1);
        unint64_t v74 = v183;
        char v180 = (void *)(v81 + 88);
        if (v82 != (void *)(v81 + 88)) {
          break;
        }
      }
LABEL_94:
      BOOL v75 = (void **)__p[1];
      --v68;
      unint64_t v78 = v74 + 1;
      *(void *)&long long v183 = v74 + 1;
      *((void *)&v183 + 1) = v68;
      if (v74 + 1 >= 0x400)
      {
        BOOL v75 = (void **)((char *)__p[1] + 8);
        operator delete(*(void **)__p[1]);
        unint64_t v78 = v74 - 511;
        __p[1] = v75;
        *(void *)&long long v183 = v74 - 511;
      }
      unint64_t v74 = v78;
      if (!v68) {
        goto LABEL_206;
      }
    }
    while (1)
    {
      BOOL v84 = (char *)__p[1];
      uint64_t v83 = (char *)v182;
      uint64_t v85 = v182 - (unint64_t)__p[1];
      if ((void *)v182 == __p[1]) {
        unint64_t v86 = 0;
      }
      else {
        unint64_t v86 = (((void)v182 - (unint64_t)__p[1]) << 6) - 1;
      }
      unint64_t v87 = v74 + v68;
      if (v86 != v74 + v68) {
        goto LABEL_185;
      }
      if (v74 >= 0x200)
      {
        *(void *)&long long v183 = v74 - 512;
        uint64_t v88 = (char *)__p[1] + 8;
        uint64_t v89 = *(void *)__p[1];
        __p[1] = (char *)__p[1] + 8;
        if ((void)v182 != *((void *)&v182 + 1))
        {
LABEL_182:
          *(void *)uint64_t v83 = v89;
          goto LABEL_183;
        }
        int v90 = __p[0];
        if (v88 > __p[0])
        {
          uint64_t v91 = (v88 - (char *)__p[0]) >> 3;
          if (v91 >= -1) {
            uint64_t v92 = v91 + 1;
          }
          else {
            uint64_t v92 = v91 + 2;
          }
          uint64_t v93 = v92 >> 1;
          uint64_t v94 = &v88[-8 * (v92 >> 1)];
          uint64_t v95 = v182 - (void)v88;
          if ((char *)v182 != v88)
          {
            memmove(&v88[-8 * (v92 >> 1)], v84 + 8, v182 - (void)v88);
            uint64_t v83 = v84 + 8;
          }
          uint64_t v96 = &v83[-8 * v93];
          uint64_t v83 = &v94[v95];
          __p[1] = v96;
          *(void *)&long long v182 = &v94[v95];
          goto LABEL_182;
        }
        if ((void *)v182 == __p[0]) {
          unint64_t v107 = 1;
        }
        else {
          unint64_t v107 = (uint64_t)(v182 - (unint64_t)__p[0]) >> 2;
        }
        if (v107 >> 61) {
          goto LABEL_222;
        }
        uint64_t v108 = operator new(8 * v107);
        unint64_t v109 = v107 >> 2;
        BOOL v110 = &v108[8 * (v107 >> 2)];
        int64_t v111 = v83 - v88;
        BOOL v9 = v83 == v88;
        uint64_t v83 = v110;
        if (!v9)
        {
          uint64_t v83 = &v110[v111 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v112 = v111 - 8;
          if (v112 < 0x38)
          {
            uint64_t v113 = &v108[8 * (v107 >> 2)];
            goto LABEL_179;
          }
          uint64_t v145 = 8 * v109;
          unint64_t v146 = &v108[8 * v109] - v88;
          uint64_t v113 = &v108[8 * (v107 >> 2)];
          if (v146 < 0x20) {
            goto LABEL_229;
          }
          uint64_t v147 = (v112 >> 3) + 1;
          uint64_t v148 = 8 * (v147 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v113 = &v110[v148];
          v88 += v148;
          std::string::value_type v149 = (long long *)(v84 + 24);
          uint64_t v150 = &v108[v145 + 16];
          uint64_t v151 = v147 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v152 = *v149;
            *(v150 - 1) = *(v149 - 1);
            *uint64_t v150 = v152;
            v149 += 2;
            v150 += 2;
            v151 -= 4;
          }
          while (v151);
          if (v147 != (v147 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_229:
            do
            {
LABEL_179:
              uint64_t v153 = *(void *)v88;
              v88 += 8;
              *(void *)uint64_t v113 = v153;
              v113 += 8;
            }
            while (v113 != v83);
          }
        }
        __p[0] = v108;
        __p[1] = &v108[8 * (v107 >> 2)];
        *(void *)&long long v182 = v83;
        *((void *)&v182 + 1) = &v108[8 * v107];
        if (v90) {
          operator delete(v90);
        }
        goto LABEL_182;
      }
      uint64_t v97 = v85 >> 3;
      int v98 = __p[0];
      if (v85 >> 3 >= (unint64_t)((uint64_t)(*((void *)&v182 + 1) - (unint64_t)__p[0]) >> 3)) {
        break;
      }
      if (*((void *)&v182 + 1) == (void)v182)
      {
        long long v184 = operator new(0x1000uLL);
        sub_215739AC0(__p, &v184);
        char v115 = (char *)__p[1];
        uint64_t v114 = (char *)v182;
        long long v116 = (char *)__p[1] + 8;
        uint64_t v117 = *(void *)__p[1];
        __p[1] = (char *)__p[1] + 8;
        if ((void)v182 != *((void *)&v182 + 1)) {
          goto LABEL_136;
        }
        char v139 = __p[0];
        if (v116 > __p[0])
        {
          uint64_t v140 = (v116 - (char *)__p[0]) >> 3;
          if (v140 >= -1) {
            unint64_t v141 = v140 + 1;
          }
          else {
            unint64_t v141 = v140 + 2;
          }
          unint64_t v142 = v141 >> 1;
          size_t v143 = &v116[-8 * v142];
          uint64_t v144 = v182 - (void)v116;
          if ((char *)v182 != v116) {
            memmove(&v116[-8 * v142], v116, v182 - (void)v116);
          }
          __p[1] = v143;
          *(void *)&long long v182 = &v143[v144];
          *(void *)&v143[v144] = v117;
          goto LABEL_183;
        }
        if ((void *)v182 == __p[0]) {
          unint64_t v156 = 1;
        }
        else {
          unint64_t v156 = (uint64_t)(v182 - (unint64_t)__p[0]) >> 2;
        }
        if (v156 >> 61) {
          goto LABEL_222;
        }
        long long v157 = operator new(8 * v156);
        unint64_t v158 = v156 >> 2;
        long long v159 = &v157[8 * (v156 >> 2)];
        int64_t v160 = v114 - v116;
        BOOL v9 = v114 == v116;
        uint64_t v114 = v159;
        if (!v9)
        {
          uint64_t v114 = &v159[v160 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v161 = v160 - 8;
          if (v161 < 0x38)
          {
            char v162 = &v157[8 * (v156 >> 2)];
            goto LABEL_202;
          }
          uint64_t v163 = 8 * v158;
          unint64_t v164 = &v157[8 * v158] - v116;
          char v162 = &v157[8 * (v156 >> 2)];
          if (v164 < 0x20) {
            goto LABEL_230;
          }
          uint64_t v165 = (v161 >> 3) + 1;
          uint64_t v166 = 8 * (v165 & 0x3FFFFFFFFFFFFFFCLL);
          char v162 = &v159[v166];
          v116 += v166;
          char v167 = (long long *)(v115 + 24);
          char v168 = &v157[v163 + 16];
          uint64_t v169 = v165 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v170 = *v167;
            *(v168 - 1) = *(v167 - 1);
            *char v168 = v170;
            v167 += 2;
            v168 += 2;
            v169 -= 4;
          }
          while (v169);
          if (v165 != (v165 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_230:
            do
            {
LABEL_202:
              uint64_t v171 = *(void *)v116;
              v116 += 8;
              *(void *)char v162 = v171;
              v162 += 8;
            }
            while (v162 != v114);
          }
        }
        __p[0] = v157;
        __p[1] = &v157[8 * (v156 >> 2)];
        *(void *)&long long v182 = v114;
        *((void *)&v182 + 1) = &v157[8 * v156];
        if (v139) {
          operator delete(v139);
        }
LABEL_136:
        *(void *)uint64_t v114 = v117;
LABEL_183:
        *(void *)&long long v182 = v182 + 8;
        goto LABEL_184;
      }
      long long v184 = operator new(0x1000uLL);
      sub_215739930((char **)__p, &v184);
LABEL_184:
      uint64_t v68 = *((void *)&v183 + 1);
      unint64_t v74 = v183;
      BOOL v84 = (char *)__p[1];
      unint64_t v87 = v183 + *((void *)&v183 + 1);
LABEL_185:
      *(void *)(*(void *)&v84[(v87 >> 6) & 0x3FFFFFFFFFFFFF8] + 8 * (v87 & 0x1FF)) = v82[4];
      *((void *)&v183 + 1) = ++v68;
      long long v154 = (void *)v82[1];
      if (v154)
      {
        do
        {
          v155 = v154;
          long long v154 = (void *)*v154;
        }
        while (v154);
      }
      else
      {
        do
        {
          v155 = (void *)v82[2];
          BOOL v9 = *v155 == (void)v82;
          uint64_t v82 = v155;
        }
        while (!v9);
      }
      uint64_t v82 = v155;
      if (v155 == v180) {
        goto LABEL_94;
      }
    }
    if (*((void **)&v182 + 1) == __p[0]) {
      unint64_t v99 = 1;
    }
    else {
      unint64_t v99 = (uint64_t)(*((void *)&v182 + 1) - (unint64_t)__p[0]) >> 2;
    }
    if (v99 >> 61) {
LABEL_222:
    }
      sub_215738AD8();
    std::string::value_type v100 = (char *)operator new(8 * v99);
    char v101 = operator new(0x1000uLL);
    uint64_t v102 = &v100[8 * v97];
    uint64_t v103 = &v100[8 * v99];
    if (v97 != v99)
    {
      *(void *)uint64_t v102 = v101;
      uint64_t v104 = v102 + 8;
      if (v83 == v84) {
        goto LABEL_121;
      }
      do
      {
LABEL_145:
        if (v102 == v100)
        {
          if (v104 >= v103)
          {
            if (v103 == v102) {
              unint64_t v124 = 1;
            }
            else {
              unint64_t v124 = (v103 - v102) >> 2;
            }
            if (v124 >> 61) {
              sub_215738AD8();
            }
            v125 = (char *)operator new(8 * v124);
            std::string::value_type v100 = v125;
            unint64_t v126 = (v124 + 3) >> 2;
            long long v119 = &v125[8 * v126];
            int64_t v127 = v104 - v102;
            BOOL v9 = v104 == v102;
            uint64_t v104 = v119;
            if (!v9)
            {
              uint64_t v104 = &v119[v127 & 0xFFFFFFFFFFFFFFF8];
              unint64_t v128 = v127 - 8;
              char v129 = &v125[8 * v126];
              char v130 = v102;
              if (v128 < 0x38) {
                goto LABEL_231;
              }
              uint64_t v131 = 8 * v126;
              char v129 = &v125[8 * v126];
              char v130 = v102;
              if ((unint64_t)(v129 - v102) < 0x20) {
                goto LABEL_231;
              }
              uint64_t v132 = (v128 >> 3) + 1;
              uint64_t v133 = 8 * (v132 & 0x3FFFFFFFFFFFFFFCLL);
              char v129 = &v119[v133];
              char v130 = &v102[v133];
              char v134 = (long long *)(v102 + 16);
              char v135 = &v125[v131 + 16];
              uint64_t v136 = v132 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v137 = *v134;
                *((_OWORD *)v135 - 1) = *(v134 - 1);
                *(_OWORD *)char v135 = v137;
                v134 += 2;
                v135 += 32;
                v136 -= 4;
              }
              while (v136);
              if (v132 != (v132 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_231:
                do
                {
                  uint64_t v138 = *(void *)v130;
                  v130 += 8;
                  *(void *)char v129 = v138;
                  v129 += 8;
                }
                while (v129 != v104);
              }
            }
            uint64_t v103 = &v125[8 * v124];
            operator delete(v102);
          }
          else
          {
            uint64_t v121 = (v103 - v104) >> 3;
            if (v121 >= -1) {
              unint64_t v122 = v121 + 1;
            }
            else {
              unint64_t v122 = v121 + 2;
            }
            long long v123 = &v104[8 * (v122 >> 1)];
            long long v119 = &v102[8 * (v122 >> 1)];
            if (v104 == v102)
            {
              std::string::value_type v100 = v104;
            }
            else
            {
              memmove(&v102[8 * (v122 >> 1)], v102, v104 - v102);
              std::string::value_type v100 = v102;
            }
            uint64_t v104 = v123;
          }
        }
        else
        {
          long long v119 = v102;
        }
        uint64_t v120 = *((void *)v83 - 1);
        v83 -= 8;
        *((void *)v119 - 1) = v120;
        uint64_t v102 = v119 - 8;
      }
      while (v83 != __p[1]);
      int v98 = __p[0];
      __p[0] = v100;
      __p[1] = v102;
      *(void *)&long long v182 = v104;
      *((void *)&v182 + 1) = v103;
      if (!v98) {
        goto LABEL_184;
      }
LABEL_167:
      operator delete(v98);
      goto LABEL_184;
    }
    char v105 = v101;
    if (v85 < 1)
    {
      if (v83 == v84) {
        unint64_t v118 = 1;
      }
      else {
        unint64_t v118 = v85 >> 2;
      }
      if (v118 >> 61) {
        sub_215738AD8();
      }
      uint64_t v102 = (char *)operator new(8 * v118);
      uint64_t v103 = &v102[8 * v118];
      operator delete(v100);
      std::string::value_type v100 = v102;
      *(void *)uint64_t v102 = v105;
      uint64_t v104 = v102 + 8;
      if (v83 != v84) {
        goto LABEL_145;
      }
    }
    else
    {
      unint64_t v106 = v97 + 2;
      if (v97 >= -1) {
        unint64_t v106 = v97 + 1;
      }
      v102 -= 8 * (v106 >> 1);
      *(void *)uint64_t v102 = v101;
      uint64_t v104 = v102 + 8;
      if (v83 != v84) {
        goto LABEL_145;
      }
    }
LABEL_121:
    __p[0] = v100;
    __p[1] = v102;
    *(void *)&long long v182 = v104;
    *((void *)&v182 + 1) = v103;
    if (!v98) {
      goto LABEL_184;
    }
    goto LABEL_167;
  }
LABEL_74:
  uint64_t v66 = &v15[-8 * ((unint64_t)(511 - v65) >> 9)];
  uint64_t v67 = *(void *)v66 + 8 * (~(511 - (_WORD)v65) & 0x1FF);
  if (v64 != (void *)v67) {
    goto LABEL_75;
  }
LABEL_205:
  BOOL v75 = (void **)__p[1];
LABEL_206:
  long long v172 = (void **)v182;
  *((void *)&v183 + 1) = 0;
  unint64_t v173 = v182 - (void)v75;
  if ((void)v182 - (void)v75 >= 0x11uLL)
  {
    do
    {
      char v174 = *v75++;
      operator delete(v174);
      __p[1] = v75;
      v173 -= 8;
    }
    while (v173 > 0x10);
  }
  if (v173 >> 3 == 1)
  {
    uint64_t v175 = 256;
LABEL_212:
    *(void *)&long long v183 = v175;
  }
  else if (v173 >> 3 == 2)
  {
    uint64_t v175 = 512;
    goto LABEL_212;
  }
  char v176 = (char *)((char *)v75 - (char *)v172);
  if (v75 != v172)
  {
    do
    {
      char v177 = *v75++;
      operator delete(v177);
    }
    while (v75 != v172);
    *(void *)&long long v182 = (char *)v172 + ((unint64_t)(v176 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  long long v178 = __p[0];
  if (__p[0])
  {
    operator delete(v178);
  }
}

void sub_215AF2404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (a13 == a12)
  {
    uint64_t v14 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = __p;
    if (!__p) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_215AF2418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  operator delete(v12);
  operator delete(v11);
  sub_21573D498((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215AF2440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  if (v13)
  {
    operator delete(v13);
    if (a13 == a12)
    {
LABEL_3:
      uint64_t v15 = a11;
      if (!a11) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if (a13 == a12)
  {
    goto LABEL_3;
  }
  uint64_t v15 = a11;
  if (!a11) {
LABEL_4:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_215AF24A4()
{
}

void sub_215AF2544(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v6 = (std::__shared_mutex_base *)(*a1 + 72);
    std::__shared_mutex_base::lock(v6);
    int v7 = *(unsigned char **)(a2 + 32);
    if (!*v7) {
      operator new();
    }
    if (*v7 != a3)
    {
      *int v7 = a3;
      uint64_t v8 = *a1;
      BOOL v9 = *(std::mutex **)(*a1 + 8);
      std::mutex::lock(v9);
      __int16 v10 = *(void **)(v8 + 16);
      unint64_t v11 = (void *)(v8 + 24);
      if (v10 != v11)
      {
        do
        {
          int v12 = *(char *)(a2 + 31);
          if (v12 >= 0) {
            uint64_t v13 = a2 + 8;
          }
          else {
            uint64_t v13 = *(void *)(a2 + 8);
          }
          if (v12 >= 0) {
            uint64_t v14 = *(unsigned __int8 *)(a2 + 31);
          }
          else {
            uint64_t v14 = *(void *)(a2 + 16);
          }
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)v10[4] + 16))(v10[4], v13, v14, a3);
          uint64_t v15 = (void *)v10[1];
          if (v15)
          {
            do
            {
              uint64_t v16 = v15;
              uint64_t v15 = (void *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              uint64_t v16 = (void *)v10[2];
              BOOL v17 = *v16 == (void)v10;
              __int16 v10 = v16;
            }
            while (!v17);
          }
          __int16 v10 = v16;
        }
        while (v16 != v11);
      }
      std::mutex::unlock(v9);
    }
  }
  else
  {
    uint64_t v18 = *(unsigned __int8 *)(a2 + 31);
    if ((v18 & 0x80u) != 0) {
      uint64_t v18 = *(void *)(a2 + 16);
    }
    if (!v18)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Cannot set root context to inherit its enable-state");
      __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
    }
    uint64_t v6 = (std::__shared_mutex_base *)(*a1 + 72);
    std::__shared_mutex_base::lock(v6);
    if (**(unsigned char **)(a2 + 32))
    {
      uint64_t v19 = *(atomic_ullong **)(a2 + 40);
      unint64_t v20 = atomic_load(*(unint64_t **)(a1[9] + 40));
      atomic_exchange(v19, v20);
      sub_215AF17E4(a2);
      operator new();
    }
  }
  std::__shared_mutex_base::unlock(v6);
}

void sub_215AF2908(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AF2920(_Unwind_Exception *a1)
{
  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF2950(uint64_t a1)
{
  return a1 + 8;
}

void sub_215AF2958(uint64_t a1, void *__src, size_t __len)
{
  *(void *)a1 = &unk_26C678EE0;
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    *(void *)(a1 + 16) = __len;
    *(void *)(a1 + 24) = v8 | 0x8000000000000000;
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    *(unsigned char *)(a1 + 31) = __len;
    uint64_t v6 = (unsigned char *)(a1 + 8);
    if (!__len)
    {
LABEL_9:
      v6[__len] = 0;
      operator new();
    }
  }
  memmove(v6, __src, __len);
  goto LABEL_9;
}

void sub_215AF2A84(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = 0;
  if (v4)
  {
    MEMORY[0x2166C4D20](v4, 0x1000C4077774924);
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AF2AE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    sub_215AF5D14(v2);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x80C40B8603338);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v4) {
    MEMORY[0x2166C4D20](v4, 0x1000C4077774924);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_215AF2B74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    sub_215AF5D14(v2);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x80C40B8603338);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v4) {
    MEMORY[0x2166C4D20](v4, 0x1000C4077774924);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AF2C18(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_215AF2C28(uint64_t a1)
{
  return **(void **)(a1 + 48);
}

uint64_t sub_215AF2C34(uint64_t a1)
{
  return *(void *)(a1 + 48) + 8;
}

uint64_t sub_215AF2C40(uint64_t a1)
{
  return *(void *)(a1 + 48) + 24;
}

uint64_t sub_215AF2C4C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (std::__shared_mutex_base *)(**(void **)(a1 + 48) + 72);
  std::__shared_mutex_base::lock_shared(v6);
  size_t v7 = &a2[a3];
  uint64_t v8 = 0;
  if (a3)
  {
    while (a2[v8] != 46)
    {
      if (a3 == ++v8)
      {
        uint64_t v8 = a3;
        break;
      }
    }
  }
  uint64_t v9 = 0;
  v15[0] = (uint64_t)a2;
  v15[1] = (uint64_t)&a2[a3];
  void v15[2] = (uint64_t)a2;
  v15[3] = (uint64_t)a2;
  v15[4] = v8;
  char v16 = 46;
  BOOL v17 = &unk_215ED9150;
  uint64_t v18 = &unk_215ED9150;
  uint64_t v19 = &unk_215ED9150;
  unint64_t v20 = &unk_215ED9150;
  uint64_t v21 = 0;
  char v22 = 0;
  if (a3 && a2 != (char *)&unk_215ED9150)
  {
    uint64_t v9 = 0;
    do
    {
      ++v9;
      __int16 v10 = &a2[v8];
      if (v10 == v7) {
        break;
      }
      a2 = v10 + 1;
      if (v10 + 1 == v7)
      {
        uint64_t v8 = 0;
        a2 = v7;
      }
      else
      {
        uint64_t v8 = 0;
        while (a2[v8] != 46)
        {
          if (v7 - a2 == ++v8)
          {
            uint64_t v8 = v7 - a2;
            break;
          }
        }
      }
    }
    while (a2 != (char *)&unk_215ED9150);
  }
  uint64_t v23 = v9;
  uint64_t v13 = a1;
  LOBYTE(v14) = 0;
  sub_215AF5E14(a1, v15, 0, (uint64_t)&v13);
  uint64_t v11 = v13;
  std::__shared_mutex_base::unlock_shared(v6);
  return v11;
}

void sub_215AF2DA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215AF2DB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF2DB4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    std::__shared_mutex_base::unlock_shared(*(std::__shared_mutex_base **)a1);
  }
  return a1;
}

uint64_t **sub_215AF2DEC(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  size_t v7 = sub_215AF2F9C(a1, a2, a3);
  std::__shared_mutex_base::unlock(v6);
  return v7;
}

void sub_215AF2E50(_Unwind_Exception *a1)
{
  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_215AF2E68(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v6 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  uint64_t v9 = *(uint64_t **)(a1 + 56);
  size_t v7 = (uint64_t *)(a1 + 56);
  uint64_t v8 = v9;
  if (!v9) {
    goto LABEL_32;
  }
  __int16 v10 = v7;
  do
  {
    while (1)
    {
      int v11 = *((char *)v8 + 55);
      int v12 = v11 >= 0 ? v8 + 4 : (uint64_t *)v8[4];
      size_t v13 = v11 >= 0 ? *((unsigned __int8 *)v8 + 55) : v8[5];
      size_t v14 = v13 >= a3 ? a3 : v13;
      int v15 = memcmp(a2, v12, v14);
      if (v15) {
        break;
      }
      if (a3 <= v13) {
        goto LABEL_17;
      }
LABEL_3:
      uint64_t v8 = (uint64_t *)v8[1];
      if (!v8) {
        goto LABEL_18;
      }
    }
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_17:
    __int16 v10 = v8;
    uint64_t v8 = (uint64_t *)*v8;
  }
  while (v8);
LABEL_18:
  if (v10 == v7) {
    goto LABEL_32;
  }
  int v16 = *((char *)v10 + 55);
  if (v16 >= 0) {
    BOOL v17 = v10 + 4;
  }
  else {
    BOOL v17 = (const void *)v10[4];
  }
  if (v16 >= 0) {
    size_t v18 = *((unsigned __int8 *)v10 + 55);
  }
  else {
    size_t v18 = v10[5];
  }
  if (v18 >= a3) {
    size_t v19 = a3;
  }
  else {
    size_t v19 = v18;
  }
  int v20 = memcmp(a2, v17, v19);
  if (v20)
  {
    if ((v20 & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_32:
    uint64_t v22 = 0;
    unint64_t v21 = 0;
  }
  else
  {
    if (a3 < v18) {
      goto LABEL_32;
    }
LABEL_30:
    unint64_t v21 = v10[7] & 0xFFFFFFFFFFFFFF00;
    uint64_t v22 = v10[7];
  }
  std::__shared_mutex_base::unlock(v6);
  return v21 | v22;
}

uint64_t **sub_215AF2F9C(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5 = &a2[a3];
  uint64_t v6 = 0;
  if (a3)
  {
    while (a2[v6] != 46)
    {
      if (a3 == ++v6)
      {
        uint64_t v6 = a3;
        break;
      }
    }
  }
  uint64_t v7 = 0;
  uint64_t v8 = *(void *)(a1 + 40);
  v41[0] = (uint64_t)a2;
  v41[1] = (uint64_t)&a2[a3];
  void v41[2] = (uint64_t)a2;
  v41[3] = (uint64_t)a2;
  v41[4] = v6;
  char v42 = 46;
  uint64_t v43 = &unk_215ED9150;
  uint64_t v44 = &unk_215ED9150;
  uint64_t v45 = &unk_215ED9150;
  BOOL v46 = &unk_215ED9150;
  uint64_t v47 = 0;
  char v48 = 0;
  if (a3 && a2 != (char *)&unk_215ED9150)
  {
    uint64_t v7 = 0;
    uint64_t v9 = a2;
    do
    {
      ++v7;
      __int16 v10 = &v9[v6];
      if (v10 == v5) {
        break;
      }
      uint64_t v9 = v10 + 1;
      if (v10 + 1 == v5)
      {
        uint64_t v6 = 0;
        uint64_t v9 = &a2[a3];
      }
      else
      {
        uint64_t v6 = 0;
        while (v9[v6] != 46)
        {
          if (v5 - v9 == ++v6)
          {
            uint64_t v6 = v5 - v9;
            break;
          }
        }
      }
    }
    while (v9 != (char *)&unk_215ED9150);
  }
  uint64_t v49 = v7;
  uint64_t v38 = (uint64_t **)v8;
  LOBYTE(v39) = 0;
  sub_215AF5E14(v8, v41, 0, (uint64_t)&v38);
  if (!(_BYTE)v39)
  {
    int v11 = v38[6];
    long long v39 = 0;
    uint64_t v40 = 0;
    int v37 = v11;
    uint64_t v38 = &v39;
    int v12 = (uint64_t *)v11[10];
    size_t v13 = v11 + 11;
    if (v12 == v11 + 11) {
LABEL_65:
    }
      operator new();
    while (1)
    {
      unint64_t v15 = v12[4];
      if (*(char *)(v15 + 31) < 0)
      {
        int v16 = *(char **)(v15 + 8);
        unint64_t v17 = *(void *)(v15 + 16);
        if (v17 <= a3) {
          goto LABEL_27;
        }
      }
      else
      {
        int v16 = (char *)(v15 + 8);
        unint64_t v17 = *(unsigned __int8 *)(v15 + 31);
        if (v17 <= a3) {
          goto LABEL_27;
        }
      }
      if (!a3) {
        goto LABEL_48;
      }
      if ((uint64_t)v17 >= (uint64_t)a3)
      {
        unint64_t v21 = &v16[v17];
        int v22 = *a2;
        int64_t v23 = v17;
        uint64_t v24 = v16;
        while (1)
        {
          size_t v25 = v23 - a3;
          if (v25 == -1) {
            goto LABEL_27;
          }
          unint64_t v26 = (char *)memchr(v24, v22, v25 + 1);
          if (!v26) {
            goto LABEL_27;
          }
          int8x8_t v27 = v26;
          if (!memcmp(v26, a2, a3)) {
            break;
          }
          uint64_t v24 = v27 + 1;
          int64_t v23 = v21 - (v27 + 1);
          if (v23 < (uint64_t)a3) {
            goto LABEL_27;
          }
        }
        if (v27 != v21 && v16 == v27 && v17 > a3 + 1 && v16[a3] == 46)
        {
          size_t v28 = a3;
          while (v16[v28 + 1] == 46)
          {
            if (v17 - 1 == ++v28) {
              goto LABEL_27;
            }
          }
          if (v28 != -2)
          {
LABEL_48:
            unint64_t v29 = &v39;
            uint64_t v30 = &v39;
            if (v39)
            {
              uint64_t v31 = v39;
              do
              {
                while (1)
                {
                  unint64_t v29 = (uint64_t **)v31;
                  unint64_t v32 = v31[4];
                  if (v15 >= v32) {
                    break;
                  }
                  uint64_t v31 = *v29;
                  uint64_t v30 = v29;
                  if (!*v29) {
                    goto LABEL_55;
                  }
                }
                if (v32 >= v15) {
                  goto LABEL_58;
                }
                uint64_t v31 = v29[1];
              }
              while (v31);
              uint64_t v30 = v29 + 1;
            }
LABEL_55:
            uint64_t v33 = (uint64_t *)operator new(0x28uLL);
            v33[4] = v15;
            *uint64_t v33 = 0;
            v33[1] = 0;
            v33[2] = (uint64_t)v29;
            *uint64_t v30 = v33;
            if (*v38)
            {
              uint64_t v38 = (uint64_t **)*v38;
              uint64_t v33 = *v30;
            }
            sub_21573B048(v39, v33);
            ++v40;
LABEL_58:
            uint64_t v34 = (uint64_t *)v12[1];
            uint64_t v35 = v12;
            if (v34)
            {
              do
              {
                size_t v19 = v34;
                uint64_t v34 = (uint64_t *)*v34;
              }
              while (v34);
            }
            else
            {
              do
              {
                size_t v19 = (uint64_t *)v35[2];
                BOOL v20 = *v19 == (void)v35;
                uint64_t v35 = v19;
              }
              while (!v20);
            }
            if ((uint64_t *)v37[10] == v12) {
              v37[10] = (uint64_t)v19;
            }
            size_t v14 = (uint64_t *)v37[11];
            --v37[12];
            sub_21573B1FC(v14, v12);
            operator delete(v12);
            goto LABEL_20;
          }
        }
      }
LABEL_27:
      size_t v18 = (uint64_t *)v12[1];
      if (v18)
      {
        do
        {
          size_t v19 = v18;
          size_t v18 = (uint64_t *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          size_t v19 = (uint64_t *)v12[2];
          BOOL v20 = *v19 == (void)v12;
          int v12 = v19;
        }
        while (!v20);
      }
LABEL_20:
      int v12 = v19;
      if (v19 == v13) {
        goto LABEL_65;
      }
    }
  }
  return v38;
}

void sub_215AF3840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
}

void sub_215AF38D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215AF6C4C((uint64_t *)va);
  JUMPOUT(0x215AF38E4);
}

void sub_215AF3900(_Unwind_Exception *a1)
{
  sub_215ACFF54(v1);
  _Unwind_Resume(a1);
}

void sub_215AF3914()
{
  std::mutex::unlock(v0);
  JUMPOUT(0x215AF3920);
}

uint64_t sub_215AF3934(uint64_t a1, unint64_t a2)
{
  uint64_t v44 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  uint64_t v43 = *(std::mutex **)(a1 + 8);
  std::mutex::lock(v43);
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v3 = *(void **)(a1 + 48);
  uint64_t v41 = a1;
  uint64_t v45 = (void *)(a1 + 56);
  BOOL v46 = &v47;
  if (v3 == (void *)(a1 + 56)) {
    goto LABEL_2;
  }
  while (2)
  {
    size_t v13 = *(char **)(v3[7] + 32);
    if (!v13) {
      goto LABEL_49;
    }
    char v14 = *v13;
    unint64_t v15 = v47;
    int v16 = &v47;
    unint64_t v17 = &v47;
    if (!v47) {
      goto LABEL_43;
    }
    int v18 = *((char *)v3 + 55);
    if (v18 >= 0) {
      size_t v19 = v3 + 4;
    }
    else {
      size_t v19 = (const void *)v3[4];
    }
    if (v18 >= 0) {
      unint64_t v20 = *((unsigned __int8 *)v3 + 55);
    }
    else {
      unint64_t v20 = v3[5];
    }
    do
    {
      while (1)
      {
        unint64_t v17 = (uint64_t **)v15;
        uint64_t v23 = v15[4];
        unint64_t v21 = v15 + 4;
        int v22 = (uint64_t *)v23;
        int v24 = *((char *)v21 + 23);
        size_t v25 = v24 >= 0 ? v21 : v22;
        unint64_t v26 = v24 >= 0 ? *((unsigned __int8 *)v21 + 23) : v21[1];
        size_t v27 = v26 >= v20 ? v20 : v26;
        int v28 = memcmp(v19, v25, v27);
        if (v28) {
          break;
        }
        if (v20 >= v26) {
          goto LABEL_37;
        }
LABEL_23:
        unint64_t v15 = *v17;
        int v16 = v17;
        if (!*v17) {
          goto LABEL_43;
        }
      }
      if (v28 < 0) {
        goto LABEL_23;
      }
LABEL_37:
      int v29 = memcmp(v25, v19, v27);
      if (v29)
      {
        if ((v29 & 0x80000000) == 0) {
          goto LABEL_49;
        }
      }
      else if (v26 >= v20)
      {
        goto LABEL_49;
      }
      unint64_t v15 = v17[1];
    }
    while (v15);
    int v16 = v17 + 1;
LABEL_43:
    uint64_t v30 = (char *)operator new(0x40uLL);
    uint64_t v31 = v30 + 32;
    if (*((char *)v3 + 55) < 0)
    {
      sub_215738B0C(v31, (void *)v3[4], v3[5]);
    }
    else
    {
      long long v32 = *((_OWORD *)v3 + 2);
      *((void *)v30 + 6) = v3[6];
      *(_OWORD *)uint64_t v31 = v32;
    }
    v30[56] = v14;
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    *((void *)v30 + 2) = v17;
    char *v16 = (uint64_t *)v30;
    if (*v46)
    {
      BOOL v46 = (uint64_t **)*v46;
      uint64_t v30 = (char *)*v16;
    }
    sub_21573B048(v47, (uint64_t *)v30);
    ++v48;
LABEL_49:
    uint64_t v33 = (void *)v3[1];
    if (v33)
    {
      do
      {
        uint64_t v34 = v33;
        uint64_t v33 = (void *)*v33;
      }
      while (v33);
    }
    else
    {
      do
      {
        uint64_t v34 = (void *)v3[2];
        BOOL v35 = *v34 == (void)v3;
        uint64_t v3 = v34;
      }
      while (!v35);
    }
    uint64_t v3 = v34;
    if (v34 != v45) {
      continue;
    }
    break;
  }
LABEL_2:
  uint64_t v5 = (uint64_t **)(v41 + 24);
  uint64_t v4 = *(uint64_t **)(v41 + 24);
  if (!v4)
  {
    uint64_t v36 = (uint64_t **)(v41 + 24);
    uint64_t v8 = a2;
LABEL_61:
    uint64_t v38 = (uint64_t *)operator new(0x28uLL);
    v38[4] = v8;
    *uint64_t v38 = 0;
    v38[1] = 0;
    v38[2] = (uint64_t)v36;
    char *v5 = v38;
    uint64_t v39 = **(void **)(v41 + 16);
    if (v39)
    {
      *(void *)(v41 + 16) = v39;
      uint64_t v38 = *v5;
    }
    sub_21573B048(*(uint64_t **)(v41 + 24), v38);
    ++*(void *)(v41 + 32);
    goto LABEL_64;
  }
  uint64_t v6 = (uint64_t **)(v41 + 24);
  uint64_t v7 = *(void **)(v41 + 24);
  uint64_t v8 = a2;
  do
  {
    unint64_t v9 = v7[4];
    BOOL v10 = v9 >= a2;
    if (v9 >= a2) {
      int v11 = v7;
    }
    else {
      int v11 = v7 + 1;
    }
    if (v10) {
      uint64_t v6 = (uint64_t **)v7;
    }
    uint64_t v7 = (void *)*v11;
  }
  while (*v11);
  if (v6 == v5 || (unint64_t)v6[4] > a2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v36 = (uint64_t **)v4;
        unint64_t v37 = v4[4];
        if (v37 <= a2) {
          break;
        }
        uint64_t v4 = *v36;
        uint64_t v5 = v36;
        if (!*v36) {
          goto LABEL_61;
        }
      }
      if (v37 >= a2) {
        break;
      }
      uint64_t v4 = v36[1];
      if (!v4)
      {
        uint64_t v5 = v36 + 1;
        goto LABEL_61;
      }
    }
LABEL_64:
    (*(void (**)(uint64_t, uint64_t ***))(*(void *)v8 + 32))(v8, &v46);
    uint64_t v12 = 1;
    goto LABEL_65;
  }
  uint64_t v12 = 0;
LABEL_65:
  sub_21573AE84((uint64_t)&v46, (char *)v47);
  std::mutex::unlock(v43);
  std::__shared_mutex_base::unlock(v44);
  return v12;
}

void sub_215AF3C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, std::__shared_mutex_base *a12, uint64_t a13, char a14, uint64_t a15)
{
}

uint64_t sub_215AF3CA0(void *a1, unint64_t a2)
{
  uint64_t v4 = (std::mutex *)a1[1];
  std::mutex::lock(v4);
  uint64_t v6 = a1 + 3;
  uint64_t v5 = (uint64_t *)a1[3];
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v7 = a1 + 3;
  uint64_t v8 = (void *)a1[3];
  do
  {
    unint64_t v9 = v8[4];
    BOOL v10 = v9 >= a2;
    if (v9 >= a2) {
      int v11 = v8;
    }
    else {
      int v11 = v8 + 1;
    }
    if (v10) {
      uint64_t v7 = v8;
    }
    uint64_t v8 = (void *)*v11;
  }
  while (*v11);
  if (v7 != v6 && v7[4] <= a2)
  {
    char v14 = a1 + 3;
    unint64_t v15 = (void *)a1[3];
    do
    {
      unint64_t v16 = v15[4];
      BOOL v17 = v16 >= a2;
      if (v16 >= a2) {
        int v18 = v15;
      }
      else {
        int v18 = v15 + 1;
      }
      if (v17) {
        char v14 = v15;
      }
      unint64_t v15 = (void *)*v18;
    }
    while (*v18);
    if (v14 != v6 && v14[4] <= a2)
    {
      size_t v19 = (uint64_t *)v14[1];
      if (v19)
      {
        do
        {
          unint64_t v20 = v19;
          size_t v19 = (uint64_t *)*v19;
        }
        while (v19);
      }
      else
      {
        unint64_t v21 = v14;
        do
        {
          unint64_t v20 = (uint64_t *)v21[2];
          BOOL v22 = *v20 == (void)v21;
          unint64_t v21 = v20;
        }
        while (!v22);
      }
      if ((uint64_t *)a1[2] == v14) {
        a1[2] = v20;
      }
      --a1[4];
      sub_21573B1FC(v5, v14);
      operator delete(v14);
    }
    uint64_t v12 = 1;
  }
  else
  {
LABEL_12:
    uint64_t v12 = 0;
  }
  std::mutex::unlock(v4);
  return v12;
}

void sub_215AF3DC8(uint64_t a1, void *a2)
{
  char v27 = 0;
  LOBYTE(__p[0]) = 0;
  uint64_t v4 = sub_215837FE8((uint64_t)a2, (const void **)__p);
  uint64_t v5 = v4;
  if (v27 < 0)
  {
    operator delete(__p[0]);
    uint64_t v6 = a2 + 1;
    if (a2 + 1 == v5) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v6 = a2 + 1;
    if (a2 + 1 == v4) {
      goto LABEL_8;
    }
  }
  char v27 = 0;
  LOBYTE(__p[0]) = 0;
  uint64_t v7 = sub_215837FE8((uint64_t)a2, (const void **)__p);
  if (v27 < 0) {
    operator delete(__p[0]);
  }
  if (!*((unsigned char *)v7 + 56))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Cannot set root context to inherit its enable-state");
    __cxa_throw(exception, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
LABEL_8:
  uint64_t v8 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  unint64_t v9 = (void *)*a2;
  if ((void *)*a2 != v6)
  {
    do
    {
      if (*((char *)v9 + 55) < 0)
      {
        size_t v13 = (char *)v9[4];
        size_t v14 = v9[5];
      }
      else
      {
        size_t v13 = (char *)(v9 + 4);
        size_t v14 = *((unsigned __int8 *)v9 + 55);
      }
      unint64_t v15 = sub_215AF2F9C(a1, v13, v14);
      int v16 = *((unsigned __int8 *)v9 + 56);
      BOOL v17 = v15[4];
      if (*((unsigned char *)v9 + 56))
      {
        if (!*(unsigned char *)v17) {
          operator new();
        }
        if (*(unsigned __int8 *)v17 != v16) {
          *(unsigned char *)BOOL v17 = v16;
        }
      }
      else if (*(unsigned char *)v17)
      {
        int v18 = v15[5];
        unint64_t v19 = atomic_load(*(unint64_t **)(v15[6][9] + 40));
        atomic_exchange(v18, v19);
        sub_215AF17E4((uint64_t)v15);
        operator new();
      }
      unint64_t v20 = (void *)v9[1];
      if (v20)
      {
        do
        {
          unint64_t v21 = v20;
          unint64_t v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          unint64_t v21 = (void *)v9[2];
          BOOL v22 = *v21 == (void)v9;
          unint64_t v9 = v21;
        }
        while (!v22);
      }
      unint64_t v9 = v21;
    }
    while (v21 != v6);
  }
  BOOL v10 = *(std::mutex **)(a1 + 8);
  std::mutex::lock(v10);
  int v11 = *(void **)(a1 + 16);
  uint64_t v12 = (void *)(a1 + 24);
  if (v11 != v12)
  {
    do
    {
      (*(void (**)(void, void *))(*(void *)v11[4] + 24))(v11[4], a2);
      uint64_t v23 = (void *)v11[1];
      if (v23)
      {
        do
        {
          int v24 = v23;
          uint64_t v23 = (void *)*v23;
        }
        while (v23);
      }
      else
      {
        do
        {
          int v24 = (void *)v11[2];
          BOOL v22 = *v24 == (void)v11;
          int v11 = v24;
        }
        while (!v22);
      }
      int v11 = v24;
    }
    while (v24 != v12);
  }
  std::mutex::unlock(v10);
  std::__shared_mutex_base::unlock(v8);
}

void sub_215AF40D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215AF40EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AF413C(void *a1)
{
  uint64_t v1 = *MEMORY[0x263EF8340];
  *a1 = &unk_26C678F90;
  operator new();
}

void sub_215AF4868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, void *a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26)
{
  sub_215AF49E0((uint64_t)&a19);
  uint64_t v27 = *(void *)(a15 + 8);
  *(void *)(a15 + 8) = 0;
  if (!v27) {
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF49E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    *(void *)(v2 + 48) = 0;
    if (v3) {
      sub_215AF5D14(v3);
    }
    uint64_t v4 = *(void *)(v2 + 40);
    *(void *)(v2 + 40) = 0;
    if (v4) {
      MEMORY[0x2166C4D20](v4, 0x80C40B8603338);
    }
    uint64_t v5 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = 0;
    if (v5) {
      MEMORY[0x2166C4D20](v5, 0x1000C4077774924);
    }
    if (*(char *)(v2 + 31) < 0) {
      operator delete(*(void **)(v2 + 8));
    }
    MEMORY[0x2166C4D20](v2, 0x10B3C406DCED8F8);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_215AF4AA8(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C678F90;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215AF4B14(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C678F90;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF4BA0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = *(void *)(a1 + 8);
    a2 = v2;
  }
  return sub_215AF3934(v4, a2);
}

uint64_t sub_215AF4C44(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = *(void **)(a1 + 8);
    a2 = v2;
  }
  return sub_215AF3CA0(v4, a2);
}

uint64_t sub_215AF4CE8(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    uint64_t v7 = (std::__shared_mutex_base *)(v6 + 72);
    std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v6 + 72));
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v7 = (std::__shared_mutex_base *)(*(void *)(a1 + 8) + 72);
    std::__shared_mutex_base::lock(v7);
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8)
    {
LABEL_3:
      unint64_t v9 = (uint64_t *)(v8 + 56);
      BOOL v10 = *(uint64_t **)(v8 + 56);
      if (!v10) {
        goto LABEL_37;
      }
      goto LABEL_9;
    }
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = (uint64_t *)(v8 + 56);
  BOOL v10 = *(uint64_t **)(v8 + 56);
  if (!v10) {
    goto LABEL_37;
  }
LABEL_9:
  int v11 = v9;
  do
  {
    while (1)
    {
      int v12 = *((char *)v10 + 55);
      size_t v13 = v12 >= 0 ? v10 + 4 : (uint64_t *)v10[4];
      size_t v14 = v12 >= 0 ? *((unsigned __int8 *)v10 + 55) : v10[5];
      size_t v15 = v14 >= a3 ? a3 : v14;
      int v16 = memcmp(a2, v13, v15);
      if (v16) {
        break;
      }
      if (a3 <= v14) {
        goto LABEL_24;
      }
LABEL_10:
      BOOL v10 = (uint64_t *)v10[1];
      if (!v10) {
        goto LABEL_25;
      }
    }
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v11 = v10;
    BOOL v10 = (uint64_t *)*v10;
  }
  while (v10);
LABEL_25:
  if (v11 == v9) {
    goto LABEL_37;
  }
  int v17 = *((char *)v11 + 55);
  if (v17 >= 0) {
    int v18 = v11 + 4;
  }
  else {
    int v18 = (const void *)v11[4];
  }
  if (v17 >= 0) {
    size_t v19 = *((unsigned __int8 *)v11 + 55);
  }
  else {
    size_t v19 = v11[5];
  }
  if (v19 >= a3) {
    size_t v20 = a3;
  }
  else {
    size_t v20 = v19;
  }
  int v21 = memcmp(a2, v18, v20);
  if (!v21)
  {
    if (a3 >= v19) {
      goto LABEL_38;
    }
LABEL_37:
    int v11 = v9;
    goto LABEL_38;
  }
  if (v21 < 0) {
    goto LABEL_37;
  }
LABEL_38:
  if (!v8)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v8 = *(void *)(a1 + 8);
  }
  if (v11 == (uint64_t *)(v8 + 56))
  {
    v27[0] = "Context with name ";
    v27[1] = 18;
    v27[2] = a2;
    v27[3] = a3;
    v27[4] = " not found";
    v27[5] = 10;
    sub_2157430CC((uint64_t)v27, (uint64_t)&v28, 0, 0, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 645, (uint64_t)"", 0, (uint64_t)p_p, size, (void (*)(void **))sub_215E1ABD8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    abort();
  }
  uint64_t v22 = v11[7];
  std::__shared_mutex_base::unlock(v7);
  return v22;
}

void sub_215AF4FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::__shared_mutex_base::unlock(v14);
  _Unwind_Resume(a1);
}

uint64_t **sub_215AF5048(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v5 = *(void *)(a1 + 8);
  }
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v5 + 72));
  uint64_t v7 = sub_215AF2F9C(v5, a2, a3);
  std::__shared_mutex_base::unlock((std::__shared_mutex_base *)(v5 + 72));
  return v7;
}

void sub_215AF50F8(_Unwind_Exception *a1)
{
  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_215AF5110(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v6 = *(void *)(a1 + 8);
  }

  return sub_215AF2E68(v6, a2, a3);
}

BOOL sub_215AF51A4(uint64_t a1, void *__s1, size_t a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    uint64_t v8 = *(uint64_t **)(v5 + 56);
    uint64_t v6 = (uint64_t *)(v5 + 56);
    uint64_t v7 = v8;
    if (!v8)
    {
LABEL_34:
      int v12 = v6;
      return v12 != v6;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v10 = *(void *)(a1 + 8);
    int v11 = *(uint64_t **)(v10 + 56);
    uint64_t v6 = (uint64_t *)(v10 + 56);
    uint64_t v7 = v11;
    if (!v11) {
      goto LABEL_34;
    }
  }
  int v12 = v6;
  do
  {
    while (1)
    {
      int v13 = *((char *)v7 + 55);
      size_t v14 = v13 >= 0 ? v7 + 4 : (uint64_t *)v7[4];
      size_t v15 = v13 >= 0 ? *((unsigned __int8 *)v7 + 55) : v7[5];
      size_t v16 = v15 >= a3 ? a3 : v15;
      int v17 = memcmp(__s1, v14, v16);
      if (v17) {
        break;
      }
      if (a3 <= v15) {
        goto LABEL_21;
      }
LABEL_7:
      uint64_t v7 = (uint64_t *)v7[1];
      if (!v7) {
        goto LABEL_22;
      }
    }
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_7;
    }
LABEL_21:
    int v12 = v7;
    uint64_t v7 = (uint64_t *)*v7;
  }
  while (v7);
LABEL_22:
  if (v12 == v6) {
    goto LABEL_34;
  }
  int v18 = *((char *)v12 + 55);
  if (v18 >= 0) {
    size_t v19 = v12 + 4;
  }
  else {
    size_t v19 = (const void *)v12[4];
  }
  if (v18 >= 0) {
    size_t v20 = *((unsigned __int8 *)v12 + 55);
  }
  else {
    size_t v20 = v12[5];
  }
  if (v20 >= a3) {
    size_t v21 = a3;
  }
  else {
    size_t v21 = v20;
  }
  int v22 = memcmp(__s1, v19, v21);
  if (!v22)
  {
    if (a3 >= v20) {
      return v12 != v6;
    }
    goto LABEL_34;
  }
  if (v22 < 0) {
    goto LABEL_34;
  }
  return v12 != v6;
}

void sub_215AF52F8(uint64_t a1, char *a2, size_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v7 = *(void *)(a1 + 8);
  }
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v7 + 72));
  unint64_t v9 = sub_215AF2F9C(v7, a2, a3);
  std::__shared_mutex_base::unlock((std::__shared_mutex_base *)(v7 + 72));
  uint64_t v10 = v9[6];

  sub_215AF2544(v10, (uint64_t)v9, a4);
}

void sub_215AF53CC(_Unwind_Exception *a1)
{
  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215AF53E4(uint64_t a1, void *a2)
{
  unint64_t v2 = a2;
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = *(void *)(a1 + 8);
    a2 = v2;
  }
  sub_215AF3DC8(v4, a2);
}

uint64_t sub_215AF5488(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1) {
    return v1 + 240;
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  return *(void *)(a1 + 8) + 240;
}

void sub_215AF5508(uint64_t a1, int a2, char a3)
{
  char v26 = a3;
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v5 = *(void *)(a1 + 8);
  }
  uint64_t v6 = (std::__shared_mutex_base *)(v5 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v5 + 72));
  int v24 = 0;
  uint64_t v25 = 0;
  uint64_t v7 = operator new(0x40uLL);
  v7[55] = 0;
  unsigned char v7[32] = 0;
  v7[56] = a2;
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 2) = &v24;
  uint64_t v23 = v7;
  int v24 = v7;
  sub_21573B048((uint64_t *)v7, (uint64_t *)v7);
  ++v25;
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = *(void **)(v8 + 40);
    uint64_t v10 = (unsigned char *)v9[4];
    int v11 = *v10;
    if (a2)
    {
LABEL_6:
      if (!v11) {
        operator new();
      }
      if (v11 != a2) {
        *uint64_t v10 = a2;
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    unint64_t v9 = *(void **)(*(void *)(a1 + 8) + 40);
    uint64_t v10 = (unsigned char *)v9[4];
    int v11 = *v10;
    if (a2) {
      goto LABEL_6;
    }
  }
  if (v11)
  {
    int v12 = (atomic_ullong *)v9[5];
    unint64_t v13 = atomic_load(*(unint64_t **)(*(void *)(v9[6] + 72) + 40));
    atomic_exchange(v12, v13);
    sub_215AF17E4((uint64_t)v9);
    operator new();
  }
LABEL_14:
  uint64_t v14 = *(void *)(a1 + 8);
  if (!v14)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      goto LABEL_29;
    }
    uint64_t v14 = *(void *)(a1 + 8);
  }
  uint64_t v15 = *(void *)(v14 + 40);
  v27[0] = &v26;
  v27[1] = &v23;
  sub_215AF65B0((uint64_t)v27, v15, (uint64_t)v27);
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16) {
    goto LABEL_20;
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
LABEL_29:
    abort();
  }
  uint64_t v16 = *(void *)(a1 + 8);
LABEL_20:
  int v17 = *(std::mutex **)(v16 + 8);
  std::mutex::lock(v17);
  int v18 = *(void **)(v16 + 16);
  size_t v19 = (void *)(v16 + 24);
  if (v18 != v19)
  {
    do
    {
      (*(void (**)(void, unsigned char **))(*(void *)v18[4] + 24))(v18[4], &v23);
      size_t v20 = (void *)v18[1];
      if (v20)
      {
        do
        {
          size_t v21 = v20;
          size_t v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          size_t v21 = (void *)v18[2];
          BOOL v22 = *v21 == (void)v18;
          int v18 = v21;
        }
        while (!v22);
      }
      int v18 = v21;
    }
    while (v21 != v19);
  }
  std::mutex::unlock(v17);
  sub_21573AE84((uint64_t)&v23, v24);
  std::__shared_mutex_base::unlock(v6);
}

void sub_215AF58AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_21573AE84((uint64_t)&a9, a10);
  std::__shared_mutex_base::unlock(v10);
  _Unwind_Resume(a1);
}

void sub_215AF58E4(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = *(void *)(a1 + 8);
  }
  uint64_t v31 = (std::__shared_mutex_base *)(v4 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v4 + 72));
  a2[1] = 0;
  uint64_t v5 = a2 + 1;
  a2[2] = 0;
  *a2 = (uint64_t *)(a2 + 1);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(v6 + 48);
  uint64_t v33 = (void *)(v6 + 56);
  if (v7 != (void *)(v6 + 56))
  {
    long long v32 = a2;
    while (1)
    {
      char v34 = **(unsigned char **)(v7[7] + 32);
      uint64_t v8 = v5;
      unint64_t v9 = v5;
      if (*v5) {
        break;
      }
LABEL_35:
      uint64_t v23 = (char *)operator new(0x40uLL);
      int v24 = v23 + 32;
      if (*((char *)v7 + 55) < 0)
      {
        sub_215738B0C(v24, (void *)v7[4], v7[5]);
      }
      else
      {
        long long v25 = *((_OWORD *)v7 + 2);
        *((void *)v23 + 6) = v7[6];
        *(_OWORD *)int v24 = v25;
      }
      v23[56] = 0;
      *(void *)uint64_t v23 = 0;
      *((void *)v23 + 1) = 0;
      *((void *)v23 + 2) = v9;
      *uint64_t v8 = (uint64_t *)v23;
      char v26 = (uint64_t *)**v32;
      uint64_t v27 = (uint64_t *)v23;
      if (v26)
      {
        *long long v32 = v26;
        uint64_t v27 = *v8;
      }
      sub_21573B048(v32[1], v27);
      _DWORD v32[2] = (uint64_t *)((char *)v32[2] + 1);
      v23[56] = v34;
      uint64_t v28 = (void *)v7[1];
      if (!v28) {
        goto LABEL_45;
      }
      do
      {
LABEL_43:
        int v29 = v28;
        uint64_t v28 = (void *)*v28;
      }
      while (v28);
LABEL_6:
      uint64_t v7 = v29;
      if (v29 == v33) {
        goto LABEL_48;
      }
    }
    int v10 = *((char *)v7 + 55);
    if (v10 >= 0) {
      int v11 = v7 + 4;
    }
    else {
      int v11 = (const void *)v7[4];
    }
    if (v10 >= 0) {
      size_t v12 = *((unsigned __int8 *)v7 + 55);
    }
    else {
      size_t v12 = v7[5];
    }
    unint64_t v13 = *v5;
    while (1)
    {
      unint64_t v9 = v13;
      uint64_t v16 = (uint64_t *)v13[4];
      uint64_t v14 = v13 + 4;
      uint64_t v15 = v16;
      int v17 = *((char *)v14 + 23);
      if (v17 >= 0) {
        int v18 = v14;
      }
      else {
        int v18 = v15;
      }
      if (v17 >= 0) {
        size_t v19 = *((unsigned __int8 *)v14 + 23);
      }
      else {
        size_t v19 = v14[1];
      }
      if (v19 >= v12) {
        size_t v20 = v12;
      }
      else {
        size_t v20 = v19;
      }
      int v21 = memcmp(v11, v18, v20);
      if (v21)
      {
        if (v21 < 0) {
          goto LABEL_15;
        }
LABEL_29:
        int v22 = memcmp(v18, v11, v20);
        if (v22)
        {
          if ((v22 & 0x80000000) == 0) {
            goto LABEL_42;
          }
        }
        else if (v19 >= v12)
        {
LABEL_42:
          *((unsigned char *)v9 + 56) = v34;
          uint64_t v28 = (void *)v7[1];
          if (v28) {
            goto LABEL_43;
          }
          do
          {
LABEL_45:
            int v29 = (void *)v7[2];
            BOOL v30 = *v29 == (void)v7;
            uint64_t v7 = v29;
          }
          while (!v30);
          goto LABEL_6;
        }
        unint64_t v13 = (uint64_t *)v9[1];
        if (!v13)
        {
          uint64_t v8 = (uint64_t **)(v9 + 1);
          goto LABEL_35;
        }
      }
      else
      {
        if (v12 >= v19) {
          goto LABEL_29;
        }
LABEL_15:
        unint64_t v13 = (uint64_t *)*v9;
        uint64_t v8 = (uint64_t **)v9;
        if (!*v9) {
          goto LABEL_35;
        }
      }
    }
  }
LABEL_48:
  std::__shared_mutex_base::unlock(v31);
}

void sub_215AF5B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::__shared_mutex_base *a9, uint64_t a10)
{
  operator delete(v11);
  sub_21573AE84(a10, *v10);
  std::__shared_mutex_base::unlock(a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF5B9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1) {
    return *(void *)(v1 + 40);
  }
  if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  return *(void *)(*(void *)(a1 + 8) + 40);
}

BOOL sub_215AF5C1C(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)atomic_load(*(unint64_t **)(a1 + 40));
  return *v1 == 1;
}

uint64_t sub_215AF5C34(uint64_t a1)
{
  return **(unsigned __int8 **)(a1 + 32);
}

void sub_215AF5C44(uint64_t a1)
{
  sub_215AF68F0(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF5C7C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v5 = *(void *)(a1 + 8);
  }
  uint64_t v7 = *(void *)(v5 + 40);

  return sub_215AF2C4C(v7, a2, a3);
}

void sub_215AF5D14(uint64_t a1)
{
  sub_215ACFF54(*(void **)(a1 + 88));
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v4 = *(void **)(a1 + 48);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0) {
          operator delete(*(void **)(v3 - 24));
        }
        v3 -= 24;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 48);
    }
    *(void *)(a1 + 56) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_15:

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF5E14(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
LABEL_1:
  uint64_t v37 = a1;
  uint64_t v38 = a4;
  uint64_t v36 = *(void **)(a1 + 48);
  uint64_t v5 = v36[6];
  uint64_t v4 = v36[7];
  unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
  unint64_t v7 = a2[12];
  unint64_t v33 = v7;
  unint64_t v34 = a3;
  if (v7 >= v6) {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
  }
  unint64_t v32 = v7;
  uint64_t v8 = v7 - a3;
  int64_t v9 = v6 - a3;
  if (v6 < a3) {
    int64_t v9 = 0;
  }
  if ((uint64_t)v6 < v9) {
    int64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
  }
  int v10 = (unsigned __int8 *)(v5 + 24 * (v6 - v9));
  int64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (uint64_t)v10) >> 3);
  if (v11 >= v8) {
    int64_t v11 = v8;
  }
  size_t v12 = &v10[24 * v11];
  BOOL v35 = a2;
  sub_215AF60F0((uint64_t)v39, a2, a3, v8);
  unint64_t v13 = v40;
  uint64_t v14 = v41;
  uint64_t v15 = v42;
  size_t v16 = v43;
  int v17 = v44;
  uint64_t v18 = v45;
  size_t v19 = v46;
  uint64_t v20 = v47;
LABEL_11:
  while (1)
  {
    if (v10 == v12)
    {
      BOOL v21 = v20 == v18 && v15 == v13;
      if (v21 || v14 == v19) {
        break;
      }
    }
    if ((char)v10[23] < 0)
    {
      int v22 = *(unsigned __int8 **)v10;
      if (v16 != *((void *)v10 + 1)) {
        goto LABEL_28;
      }
    }
    else
    {
      int v22 = v10;
      if (v16 != v10[23]) {
        goto LABEL_28;
      }
    }
    if (memcmp(v14, v22, v16))
    {
LABEL_28:
      a4 = v38;
      if (*(void *)v38 != v37) {
        return 0;
      }
      uint64_t v25 = v36[9];
      if (!v25) {
        return 1;
      }
      *(void *)uint64_t v38 = v25;
      a1 = v36[9];
      a3 = v34;
      a2 = v35;
LABEL_32:
      goto LABEL_1;
    }
    v10 += 24;
    uint64_t v15 = &v14[v16];
    uint64_t v14 = v13;
    size_t v16 = 0;
    if (v15 != v13)
    {
      size_t v16 = 0;
      uint64_t v23 = v15 + 1;
      uint64_t v14 = v13;
      if (v15 + 1 != v13)
      {
        size_t v16 = 0;
        do
        {
          if (v23[v16] == v17)
          {
            uint64_t v14 = v15 + 1;
            goto LABEL_11;
          }
          ++v16;
        }
        while (v13 - v23 != v16);
        uint64_t v14 = v15 + 1;
        size_t v16 = v13 - v23;
      }
    }
  }
  if (v33 > v6)
  {
    *(void *)uint64_t v38 = v37;
    uint64_t v26 = *(void *)(v37 + 48);
    uint64_t v27 = *(void **)(v26 + 80);
    uint64_t v28 = (void *)(v26 + 88);
    if (v27 != (void *)(v26 + 88))
    {
      do
      {
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(*(void *)(*(void *)(v27[4] + 48) + 56) - *(void *)(*(void *)(v27[4] + 48) + 48)) >> 3) <= v35[12]
          && (sub_215AF5E14() & 1) != 0)
        {
          break;
        }
        int v29 = (void *)v27[1];
        if (v29)
        {
          do
          {
            BOOL v30 = v29;
            int v29 = (void *)*v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            BOOL v30 = (void *)v27[2];
            BOOL v21 = *v30 == (void)v27;
            uint64_t v27 = v30;
          }
          while (!v21);
        }
        uint64_t v27 = v30;
      }
      while (v30 != v28);
    }
    return 1;
  }
  if (v6 > v33)
  {
    uint64_t v31 = v36[9];
    a4 = v38;
    if (v31)
    {
      *(void *)uint64_t v38 = v31;
      a1 = v36[9];
      a2 = v35;
      a3 = v32;
      goto LABEL_32;
    }
    return 1;
  }
  *(void *)uint64_t v38 = v37;
  uint64_t result = 1;
  *(unsigned char *)(v38 + 8) = 1;
  return result;
}

uint64_t sub_215AF60F0(uint64_t result, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = 0;
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v7 = a2[4];
  int v9 = *((unsigned __int8 *)a2 + 40);
  uint64_t v11 = a2[7];
  uint64_t v10 = a2[8];
  uint64_t v12 = a2[9];
  BOOL v13 = v8 == v5;
  BOOL v14 = v12 == v11;
  if (v12 != v11) {
    BOOL v13 = 0;
  }
  if (v13)
  {
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    if (v6 != v10)
    {
      unint64_t v4 = 0;
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[4];
      do
      {
        uint64_t v18 = v16 + v17;
        if (v18 == v5)
        {
          uint64_t v17 = 0;
          uint64_t v16 = a2[1];
          ++v4;
          if (v12 == v11) {
            break;
          }
        }
        else
        {
          uint64_t v16 = v18 + 1;
          if (v16 == v5)
          {
            uint64_t v17 = 0;
            uint64_t v16 = a2[1];
            ++v4;
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v17 = v5 - v16;
            while (*(unsigned __int8 *)(v16 + v19) != v9)
            {
              if (v17 == ++v19)
              {
                ++v4;
                goto LABEL_16;
              }
            }
            uint64_t v17 = v19;
            ++v4;
          }
        }
LABEL_16:
        ;
      }
      while (v16 != v10);
      uint64_t v15 = 0;
      uint64_t v20 = a2[4];
      uint64_t v21 = a2[2];
      do
      {
        uint64_t v22 = v21 + v20;
        if (v22 == v5)
        {
          uint64_t v20 = 0;
          uint64_t v21 = a2[1];
          ++v15;
          if (v12 == v11) {
            break;
          }
        }
        else
        {
          uint64_t v21 = v22 + 1;
          if (v21 == v5)
          {
            uint64_t v20 = 0;
            uint64_t v21 = a2[1];
            ++v15;
          }
          else
          {
            uint64_t v23 = 0;
            uint64_t v20 = v5 - v21;
            while (*(unsigned __int8 *)(v21 + v23) != v9)
            {
              if (v20 == ++v23)
              {
                ++v15;
                goto LABEL_28;
              }
            }
            uint64_t v20 = v23;
            ++v15;
          }
        }
LABEL_28:
        ;
      }
      while (v21 != v10);
    }
  }
  BOOL v24 = v4 >= a3;
  uint64_t v25 = v4 - a3;
  if (!v24) {
    uint64_t v25 = 0;
  }
  if (v15 < v25) {
    uint64_t v25 = v15;
  }
  uint64_t v26 = v15 - v25;
  if (v26 >= 1)
  {
    do
    {
      uint64_t v8 = v6 + v7;
      if (v6 + v7 == v5 || (uint64_t v6 = v8 + 1, v8 + 1 == v5))
      {
        uint64_t v7 = 0;
        uint64_t v6 = a2[1];
      }
      else
      {
        uint64_t v7 = 0;
        while (*(unsigned __int8 *)(v6 + v7) != v9)
        {
          if (v5 - v6 == ++v7)
          {
            uint64_t v7 = v5 - v6;
            break;
          }
        }
      }
      BOOL v39 = (unint64_t)v26-- > 1;
    }
    while (v39);
  }
  uint64_t v27 = 0;
  BOOL v28 = v12 == v11 && v8 == v5;
  if (!v28 && v6 != v10)
  {
    uint64_t v27 = 0;
    uint64_t v29 = v7;
    uint64_t v30 = v6;
    do
    {
      uint64_t v31 = v30 + v29;
      if (v31 == v5)
      {
        uint64_t v29 = 0;
        uint64_t v30 = a2[1];
        ++v27;
        if (v14) {
          break;
        }
      }
      else
      {
        uint64_t v30 = v31 + 1;
        if (v30 == v5)
        {
          uint64_t v29 = 0;
          uint64_t v30 = a2[1];
          ++v27;
        }
        else
        {
          uint64_t v32 = 0;
          uint64_t v29 = v5 - v30;
          while (*(unsigned __int8 *)(v30 + v32) != v9)
          {
            if (v29 == ++v32)
            {
              ++v27;
              goto LABEL_52;
            }
          }
          uint64_t v29 = v32;
          ++v27;
        }
      }
LABEL_52:
      ;
    }
    while (v30 != v10);
  }
  unint64_t v33 = (int *)((char *)a2 + 41);
  uint64_t v34 = *a2;
  if (v27 >= a4) {
    uint64_t v35 = a4;
  }
  else {
    uint64_t v35 = v27;
  }
  uint64_t v36 = v6;
  uint64_t v37 = v8;
  uint64_t v38 = v7;
  if (v35 >= 1)
  {
    uint64_t v36 = v6;
    uint64_t v38 = v7;
    do
    {
      uint64_t v37 = v36 + v38;
      if (v36 + v38 == v5 || (uint64_t v36 = v37 + 1, v37 + 1 == v5))
      {
        uint64_t v38 = 0;
        uint64_t v36 = v5;
      }
      else
      {
        uint64_t v38 = 0;
        while (*(unsigned __int8 *)(v36 + v38) != v9)
        {
          if (v5 - v36 == ++v38)
          {
            uint64_t v38 = v5 - v36;
            break;
          }
        }
      }
      BOOL v39 = (unint64_t)v35-- > 1;
    }
    while (v39);
  }
  uint64_t v40 = 0;
  BOOL v41 = v8 == v5;
  *(void *)uint64_t result = v34;
  *(void *)(result + 8) = v5;
  *(void *)(result + 16) = v6;
  *(void *)(result + 24) = v8;
  *(void *)(result + 32) = v7;
  *(unsigned char *)(result + 40) = v9;
  int v42 = *v33;
  *(_DWORD *)(result + 41) = *v33;
  int v43 = *(int *)((char *)v33 + 3);
  *(_DWORD *)(result + 44) = v43;
  *(void *)(result + 48) = v34;
  *(void *)(result + 56) = v5;
  *(void *)(result + 64) = v36;
  *(void *)(result + 72) = v37;
  *(void *)(result + 80) = v38;
  *(unsigned char *)(result + 88) = v9;
  *(_DWORD *)(result + 92) = v43;
  BOOL v44 = v37 == v5 && v41;
  *(_DWORD *)(result + 89) = v42;
  if (!v44 && v6 != v36)
  {
    uint64_t v40 = 0;
    do
    {
      uint64_t v45 = v6 + v7;
      if (v45 == v5)
      {
        uint64_t v7 = 0;
        uint64_t v6 = v5;
        ++v40;
        if (v37 == v5) {
          break;
        }
      }
      else
      {
        uint64_t v6 = v45 + 1;
        if (v6 == v5)
        {
          uint64_t v7 = 0;
          uint64_t v6 = v5;
          ++v40;
        }
        else
        {
          uint64_t v46 = 0;
          uint64_t v7 = v5 - v6;
          while (*(unsigned __int8 *)(v6 + v46) != v9)
          {
            if (v7 == ++v46)
            {
              ++v40;
              goto LABEL_92;
            }
          }
          uint64_t v7 = v46;
          ++v40;
        }
      }
LABEL_92:
      ;
    }
    while (v6 != v36);
  }
  *(void *)(result + 96) = v40;
  return result;
}

void sub_215AF650C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    sub_215AF5D14(v2);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x80C40B8603338);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v4) {
    MEMORY[0x2166C4D20](v4, 0x1000C4077774924);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF65B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *(void **)(v3 + 80);
  uint64_t v36 = (void *)(v3 + 88);
  if (v4 != (void *)(v3 + 88))
  {
    uint64_t v5 = (unsigned __int8 **)result;
    uint64_t v35 = (unsigned __int8 **)result;
    do
    {
      uint64_t v6 = (void *)v4[4];
      int v7 = **v5;
      uint64_t v8 = (unsigned char *)v6[4];
      if (**v5)
      {
        if (!*v8) {
          operator new();
        }
        if (*v8 != v7) {
          *uint64_t v8 = v7;
        }
      }
      else if (*v8)
      {
        int v9 = (atomic_ullong *)v6[5];
        unint64_t v10 = atomic_load(*(unint64_t **)(*(void *)(v6[6] + 72) + 40));
        atomic_exchange(v9, v10);
        sub_215AF17E4((uint64_t)v6);
        operator new();
      }
      uint64_t v11 = v4[4];
      uint64_t v12 = v5[1];
      uint64_t v38 = *v5;
      BOOL v14 = v12 + 8;
      BOOL v13 = (void *)*((void *)v12 + 1);
      if (!v13)
      {
        uint64_t v18 = v12 + 8;
        BOOL v28 = operator new(0x40uLL);
        uint64_t v29 = v28 + 32;
        if ((*(char *)(v11 + 31) & 0x80000000) == 0) {
          goto LABEL_39;
        }
LABEL_41:
        sub_215738B0C(v29, *(void **)(v11 + 8), *(void *)(v11 + 16));
        goto LABEL_42;
      }
      int v15 = *(char *)(v11 + 31);
      if (v15 >= 0) {
        uint64_t v16 = (const void *)(v11 + 8);
      }
      else {
        uint64_t v16 = *(const void **)(v11 + 8);
      }
      if (v15 >= 0) {
        unint64_t v17 = *(unsigned __int8 *)(v11 + 31);
      }
      else {
        unint64_t v17 = *(void *)(v11 + 16);
      }
      do
      {
        while (1)
        {
          uint64_t v18 = v13;
          uint64_t v21 = (void *)v13[4];
          uint64_t v19 = v13 + 4;
          uint64_t v20 = v21;
          int v22 = *((char *)v19 + 23);
          uint64_t v23 = v22 >= 0 ? v19 : v20;
          unint64_t v24 = v22 >= 0 ? *((unsigned __int8 *)v19 + 23) : v19[1];
          size_t v25 = v24 >= v17 ? v17 : v24;
          int v26 = memcmp(v16, v23, v25);
          if (v26) {
            break;
          }
          if (v17 >= v24) {
            goto LABEL_32;
          }
LABEL_18:
          BOOL v13 = (void *)*v18;
          BOOL v14 = v18;
          if (!*v18) {
            goto LABEL_38;
          }
        }
        if (v26 < 0) {
          goto LABEL_18;
        }
LABEL_32:
        int v27 = memcmp(v23, v16, v25);
        if (v27)
        {
          if ((v27 & 0x80000000) == 0) {
            goto LABEL_45;
          }
        }
        else if (v24 >= v17)
        {
          goto LABEL_45;
        }
        BOOL v13 = (void *)v18[1];
      }
      while (v13);
      BOOL v14 = v18 + 1;
LABEL_38:
      BOOL v28 = operator new(0x40uLL);
      uint64_t v29 = v28 + 32;
      if (*(char *)(v11 + 31) < 0) {
        goto LABEL_41;
      }
LABEL_39:
      long long v30 = *(_OWORD *)(v11 + 8);
      *((void *)v29 + 2) = *(void *)(v11 + 24);
      *(_OWORD *)uint64_t v29 = v30;
LABEL_42:
      v28[56] = *v38;
      *(void *)BOOL v28 = 0;
      *((void *)v28 + 1) = 0;
      *((void *)v28 + 2) = v18;
      *BOOL v14 = v28;
      uint64_t v31 = **(void **)v12;
      if (v31)
      {
        *(void *)uint64_t v12 = v31;
        BOOL v28 = (unsigned char *)*v14;
      }
      sub_21573B048(*((uint64_t **)v12 + 1), (uint64_t *)v28);
      ++*((void *)v12 + 2);
      uint64_t v11 = v4[4];
LABEL_45:
      uint64_t v5 = v35;
      uint64_t result = sub_215AF65B0(a3, v11, a3);
      uint64_t v32 = (void *)v4[1];
      if (v32)
      {
        do
        {
          unint64_t v33 = v32;
          uint64_t v32 = (void *)*v32;
        }
        while (v32);
      }
      else
      {
        do
        {
          unint64_t v33 = (void *)v4[2];
          BOOL v34 = *v33 == (void)v4;
          uint64_t v4 = v33;
        }
        while (!v34);
      }
      uint64_t v4 = v33;
    }
    while (v33 != v36);
  }
  return result;
}

void sub_215AF68DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215AF68F0(uint64_t a1)
{
  *(void *)a1 = &unk_26C678F38;
  if (*(unsigned char *)(a1 + 264) && *(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 184));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 136));
  std::mutex::~mutex((std::mutex *)(a1 + 72));
  sub_215AF6D28(*(char **)(a1 + 56));
  sub_215ACFF54(*(void **)(a1 + 24));
  uint64_t v2 = *(std::mutex **)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2)
  {
    std::mutex::~mutex(v2);
    MEMORY[0x2166C4D20]();
  }
  return a1;
}

void sub_215AF699C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF69D4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    if (*(unsigned char *)(v1 + 48) && *(char *)(v1 + 47) < 0)
    {
      operator delete(*(void **)(v1 + 24));
      if ((*(char *)(v1 + 23) & 0x80000000) == 0)
      {
LABEL_6:
        JUMPOUT(0x2166C4D20);
      }
    }
    else if ((*(char *)(v1 + 23) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(*(void **)v1);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_215AF6A5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t *sub_215AF6AD0(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = result;
    uint64_t v6 = result + 1;
    do
    {
      int v7 = (uint64_t *)v5[1];
      uint64_t v8 = v6;
      if ((uint64_t *)*v5 == v6) {
        goto LABEL_10;
      }
      int v9 = (uint64_t *)v5[1];
      unint64_t v10 = v6;
      if (v7)
      {
        do
        {
          uint64_t v8 = v9;
          int v9 = (uint64_t *)v9[1];
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v8 = (uint64_t *)v10[2];
          BOOL v11 = *v8 == (void)v10;
          unint64_t v10 = v8;
        }
        while (v11);
      }
      unint64_t v12 = v4[4];
      if (v8[4] < v12)
      {
LABEL_10:
        if (v7) {
          BOOL v13 = (uint64_t **)v8;
        }
        else {
          BOOL v13 = (uint64_t **)v6;
        }
        if (v7) {
          BOOL v14 = (uint64_t **)(v8 + 1);
        }
        else {
          BOOL v14 = (uint64_t **)v6;
        }
        if (*v14) {
          goto LABEL_29;
        }
      }
      else
      {
        BOOL v14 = (uint64_t **)v6;
        BOOL v13 = (uint64_t **)v6;
        if (v7)
        {
          while (1)
          {
            while (1)
            {
              BOOL v13 = (uint64_t **)v7;
              unint64_t v15 = v7[4];
              if (v15 <= v12) {
                break;
              }
              int v7 = *v13;
              BOOL v14 = v13;
              if (!*v13) {
                goto LABEL_25;
              }
            }
            if (v15 >= v12) {
              goto LABEL_29;
            }
            int v7 = v13[1];
            if (!v7)
            {
              BOOL v14 = v13 + 1;
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v16 = (uint64_t *)operator new(0x28uLL);
      v16[4] = v4[4];
      uint64_t *v16 = 0;
      v16[1] = 0;
      _OWORD v16[2] = (uint64_t)v13;
      *BOOL v14 = v16;
      uint64_t v17 = *(void *)*v5;
      if (v17)
      {
        uint64_t *v5 = v17;
        uint64_t v18 = *v14;
      }
      else
      {
        uint64_t v18 = v16;
      }
      uint64_t result = sub_21573B048((uint64_t *)v5[1], v18);
      ++v5[2];
LABEL_29:
      uint64_t v19 = (void *)v4[1];
      if (v19)
      {
        do
        {
          uint64_t v20 = v19;
          uint64_t v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          uint64_t v20 = (void *)v4[2];
          BOOL v11 = *v20 == (void)v4;
          uint64_t v4 = v20;
        }
        while (!v11);
      }
      uint64_t v4 = v20;
    }
    while (v20 != a3);
  }
  return result;
}

uint64_t *sub_215AF6C4C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v3 = *(void *)(v2 + 56);
      *(void *)(v2 + 56) = 0;
      if (v3)
      {
        uint64_t v4 = *(void *)(v3 + 48);
        *(void *)(v3 + 48) = 0;
        if (v4) {
          sub_215AF5D14(v4);
        }
        uint64_t v5 = *(void *)(v3 + 40);
        *(void *)(v3 + 40) = 0;
        if (v5) {
          MEMORY[0x2166C4D20](v5, 0x80C40B8603338);
        }
        uint64_t v6 = *(void *)(v3 + 32);
        *(void *)(v3 + 32) = 0;
        if (v6) {
          MEMORY[0x2166C4D20](v6, 0x1000C4077774924);
        }
        if (*(char *)(v3 + 31) < 0) {
          operator delete(*(void **)(v3 + 8));
        }
        MEMORY[0x2166C4D20](v3, 0x10B3C406DCED8F8);
      }
      if (*(char *)(v2 + 55) < 0) {
        operator delete(*(void **)(v2 + 32));
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

void sub_215AF6D28(char *a1)
{
  if (a1)
  {
    sub_215AF6D28(*(void *)a1);
    sub_215AF6D28(*((void *)a1 + 1));
    uint64_t v2 = *((void *)a1 + 7);
    *((void *)a1 + 7) = 0;
    if (v2)
    {
      uint64_t v3 = *(void *)(v2 + 48);
      *(void *)(v2 + 48) = 0;
      if (v3) {
        sub_215AF5D14(v3);
      }
      uint64_t v4 = *(void *)(v2 + 40);
      *(void *)(v2 + 40) = 0;
      if (v4) {
        MEMORY[0x2166C4D20](v4, 0x80C40B8603338);
      }
      uint64_t v5 = *(void *)(v2 + 32);
      *(void *)(v2 + 32) = 0;
      if (v5) {
        MEMORY[0x2166C4D20](v5, 0x1000C4077774924);
      }
      if (*(char *)(v2 + 31) < 0) {
        operator delete(*(void **)(v2 + 8));
      }
      MEMORY[0x2166C4D20](v2, 0x10B3C406DCED8F8);
    }
    if (a1[55] < 0)
    {
      operator delete(*((void **)a1 + 4));
      uint64_t v6 = a1;
    }
    else
    {
      uint64_t v6 = a1;
    }
    operator delete(v6);
  }
}

void sub_215AF6E28(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 104))
  {
    __s2.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 184);
    __s2.__owns_ = 1;
    std::mutex::lock((std::mutex *)(a1 + 184));
    if (*(unsigned char *)(a1 + 96))
    {
      signed int v4 = atomic_load((unsigned int *)(a1 + 128));
      if (*(void *)(a1 + 88) <= (unint64_t)v4)
      {
        v5.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
        signed int v6 = atomic_load((unsigned int *)(a1 + 128));
        if (!*(unsigned char *)(a1 + 96)) {
          goto LABEL_53;
        }
        if (*(void *)(a1 + 88) > (unint64_t)v6) {
          goto LABEL_6;
        }
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = v5.__d_.__rep_;
        v15.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
        std::chrono::steady_clock::now();
        v16.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        v17.__d_.__rep_ = 1000000000;
        if (v16.__d_.__rep_)
        {
          if (v16.__d_.__rep_ <= 0)
          {
            if ((unint64_t)v16.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
              v17.__d_.__rep_ = 1000 * v16.__d_.__rep_ + 1000000000;
            }
            else {
              v17.__d_.__rep_ = 0x800000003B9ACA00;
            }
          }
          else if ((unint64_t)v16.__d_.__rep_ < 0x20C49BA5D411B8)
          {
            v17.__d_.__rep_ = 1000 * v16.__d_.__rep_ + 1000000000;
          }
          else
          {
            v17.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 136), &__s2, v17);
        std::chrono::steady_clock::now();
        signed int v18 = atomic_load((unsigned int *)(a1 + 128));
        if (!*(unsigned char *)(a1 + 96)) {
LABEL_53:
        }
          sub_2157B6F38();
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v19 = v15.__d_.__rep_ - rep;
        while (*(void *)(a1 + 88) <= (unint64_t)v18)
        {
          if (std::chrono::steady_clock::now().__d_.__rep_ - (v19 + rep) >= 500000000) {
            std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v19 = std::chrono::steady_clock::now().__d_.__rep_ - rep;
          }
          std::chrono::steady_clock::now();
          v21.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
          v20.__d_.__rep_ = 1000000000;
          if (v21.__d_.__rep_)
          {
            if (v21.__d_.__rep_ < 1)
            {
              if ((unint64_t)v21.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
                v20.__d_.__rep_ = 1000 * v21.__d_.__rep_ + 1000000000;
              }
              else {
                v20.__d_.__rep_ = 0x800000003B9ACA00;
              }
            }
            else if ((unint64_t)v21.__d_.__rep_ >= 0x20C49BA5D411B8)
            {
              v20.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
            }
            else
            {
              v20.__d_.__rep_ = 1000 * v21.__d_.__rep_ + 1000000000;
            }
          }
          std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 136), &__s2, v20);
          std::chrono::steady_clock::now();
          signed int v18 = atomic_load((unsigned int *)(a1 + 128));
          if (!*(unsigned char *)(a1 + 96)) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_6:
    atomic_fetch_add((atomic_uint *volatile)(a1 + 128), 1u);
    (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 120) + 72) + 88) + 16))();
    if (__s2.__owns_) {
      std::mutex::unlock(__s2.__m_);
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_26;
    }
    goto LABEL_11;
  }
  (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 120) + 72) + 88) + 16))();
  if (!*(unsigned char *)(a1 + 104))
  {
LABEL_26:
    uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 120) + 72) + 72);
    (*(void (**)(uint64_t))(*(void *)v13 + 64))(v13);
    return;
  }
LABEL_11:
  sub_215AF0948(a2 + 16);
  BOOL v7 = 0;
  strcpy((char *)&__s2, "cv3d.net");
  char v23 = 8;
  int v24 = 2;
  char v25 = 1;
  unsigned __int8 v8 = v28;
  if ((v28 & 0x80u) == 0) {
    size_t v9 = v28;
  }
  else {
    size_t v9 = __n;
  }
  if (v9 != 8)
  {
LABEL_24:
    if ((v8 & 0x80) != 0) {
      goto LABEL_33;
    }
LABEL_25:
    if (!v7) {
      return;
    }
    goto LABEL_26;
  }
  if ((v28 & 0x80) != 0)
  {
    if (memcmp(__s1, &__s2, __n))
    {
      operator delete(__s1);
      return;
    }
    goto LABEL_23;
  }
  if (!v28)
  {
LABEL_23:
    BOOL v7 = v29 == 2;
    goto LABEL_24;
  }
  p_s1 = &__s1;
  p_s2 = &__s2;
  uint64_t v12 = v28;
  while (*(unsigned __int8 *)p_s1 == LOBYTE(p_s2->__m_))
  {
    p_s1 = (void **)((char *)p_s1 + 1);
    p_s2 = (std::unique_lock<std::mutex> *)((char *)p_s2 + 1);
    if (!--v12) {
      goto LABEL_23;
    }
  }
  BOOL v7 = 0;
  if ((v28 & 0x80) == 0) {
    goto LABEL_25;
  }
LABEL_33:
  operator delete(__s1);
  if (v7) {
    goto LABEL_26;
  }
}

void sub_215AF7218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, char a11)
{
  if (a11) {
    std::mutex::unlock(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AF723C()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_215AF73B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AF73EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v5 = *(void *)(a2 + 40);
    if (v5)
    {
      if (v5 == a2 + 16)
      {
        *(void *)(a1 + 40) = v4;
        (*(void (**)(void, uint64_t))(**(void **)(a2 + 40) + 24))(*(void *)(a2 + 40), a1 + 16);
        goto LABEL_9;
      }
      uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16))(v5);
    }
    *(void *)(a1 + 40) = v5;
LABEL_9:
    *(unsigned char *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_215AF74BC(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48))
  {
    uint64_t v4 = *(void *)(v1 + 40);
    if (v4 == v2)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    }
    else if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
    }
  }
  uint64_t v5 = *(std::__shared_weak_count **)(v1 + 8);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_215AF7578(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t sub_215AF7608(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = a1 + 16;
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3 == a1 + 16)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 16);
      uint64_t v4 = *(std::__shared_weak_count **)(a1 + 8);
      if (!v4) {
        return a1;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4) {
    return a1;
  }
LABEL_6:
  if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_215AF76F8(uint64_t a1, long long *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267890888))
  {
    mach_timebase_info((mach_timebase_info_t)&info);
    LODWORD(v4) = DWORD1(info);
    LODWORD(v3) = info;
    *(double *)&qword_267890880 = (double)v3 / (double)v4;
    __cxa_guard_release(&qword_267890888);
  }
  long long info = *a2;
  int v6 = *((_DWORD *)a2 + 4);
  LOBYTE(__p[0]) = 0;
  char v8 = 0;
  if (*((unsigned char *)a2 + 48))
  {
    if (*((char *)a2 + 47) < 0)
    {
      sub_215738B0C(__p, *((void **)a2 + 3), *((void *)a2 + 4));
    }
    else
    {
      *(_OWORD *)std::string __p = *(long long *)((char *)a2 + 24);
      __p[2] = *((void **)a2 + 5);
    }
    char v8 = 1;
  }
  LOBYTE(v9) = 0;
  char v10 = 0;
  if (*((unsigned char *)a2 + 200))
  {
    sub_2157B6F84((char *)&v9, (long long *)((char *)a2 + 56));
    char v10 = 1;
  }
  long long v11 = a2[13];
  uint64_t v12 = *((void *)a2 + 28);
  operator new();
}

void sub_215AF7B28(_Unwind_Exception *a1)
{
}

void sub_215AF7B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45,char a46)
{
  if (a46)
  {
    if (a45 < 0)
    {
      operator delete(__p);
      sub_2157C6F18((uint64_t)&a11);
      _Unwind_Resume(a1);
    }
  }
  sub_2157C6F18((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void *sub_215AF7BF4(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C679318;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

uint64_t ***sub_215AF7C60(uint64_t ***a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    unint64_t v3 = *v2;
    *uint64_t v2 = 0;
    if (v3)
    {
      unint64_t v4 = sub_215D0892C(v3);
      MEMORY[0x2166C4D20](v4, 0x1020C4014B85259);
    }
    MEMORY[0x2166C4D20](v2, 0x20C4093837F09);
  }
  return a1;
}

uint64_t *sub_215AF7CCC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    unint64_t v3 = *(std::__shared_weak_count **)(v2 + 40);
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    sub_215B02FE8(v2 + 8, *(void *)(v2 + 16));
    MEMORY[0x2166C4D20](v2, 0x1020C401722722ELL);
  }
  return a1;
}

uint64_t sub_215AF7D70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215AF7DEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AF7E78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 16) + 16))();
}

uint64_t *sub_215AF7EA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = *(uint64_t (**)(void))(**(void **)(v1 + 16) + 24);
    return (uint64_t *)v2();
  }
  else if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB10, memory_order_acquire) & 1) != 0 {
         || !__cxa_guard_acquire(&qword_26788EB10))
  }
  {
    return &qword_26788EB38;
  }
  else
  {
    qword_26788EB38 = 0;
    unk_26788EB40 = 0;
    __cxa_guard_release(&qword_26788EB10);
    return &qword_26788EB38;
  }
}

void sub_215AF7F58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 120) = 1;
}

uint64_t sub_215AF7F88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 16) + 40))();
}

uint64_t sub_215AF7FB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 16) + 48))();
}

void sub_215AF7FE0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  v42[0] = &unk_26C683078;
  v42[1] = 1;
  v42[2] = &unk_26C6831C8;
  int v6 = operator new(0xAuLL);
  *(void *)int v6 = 0;
  v6[4] = 0;
  int v43 = v6;
  std::string __dst = v6 + 5;
  uint64_t v45 = (char *)(v6 + 5);
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  sub_215B030BC(__p, a2);
  LOBYTE(v22[1]) = 1;
  uint64_t v33 = 0x500000001;
  int v34 = 0;
  uint64_t v35 = 1;
  int v36 = 0;
  v7.n128_f64[0] = sub_215B031E4((uint64_t)&v37, (uint64_t)__p);
  if (LOBYTE(v22[1]))
  {
    char v8 = (char *)__p[0];
    if (__p[0])
    {
      size_t v9 = (char *)__p[1];
      char v10 = __p[0];
      if (__p[1] != __p[0])
      {
        do
        {
          long long v11 = (std::__shared_weak_count *)*((void *)v9 - 1);
          if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *, __n128))v11->__on_zero_shared)(v11, v7);
            std::__shared_weak_count::__release_weak(v11);
          }
          v9 -= 24;
        }
        while (v9 != v8);
        char v10 = __p[0];
      }
      __p[1] = v8;
      operator delete(v10);
    }
  }
  LODWORD(__p[0]) = 1;
  sub_215D04A50((uint64_t)&v43, (char *)__dst, (char *)__p, (char *)__p + 4, 4);
  sub_215D02034(v42);
  sub_215B0C1C8((uint64_t)v42, (uint64_t)v32);
  *(void *)((char *)v43 + *((void *)v47 - 1) + 10) = (unsigned char *)__dst - ((unsigned char *)v43 + *((void *)v47 - 1)) - 18;
  v47 -= 8;
  if ((*(uint64_t (**)(void, void *, uint64_t))(**(void **)(a1 + 320) + 24))(*(void *)(a1 + 320), v42, 1))
  {
    *(unsigned char *)(a3 + 120) = 1;
    if (!v41) {
      goto LABEL_44;
    }
    goto LABEL_30;
  }
  sub_2157CFEA8((uint64_t)&v49, "failed to broadcast command(s) to clients");
  char v57 = 1;
  sub_215982968(3u, &v49, (uint64_t)__p);
  if (v57)
  {
    if (!v56) {
      goto LABEL_18;
    }
    if (v55 < 0)
    {
      operator delete(v54);
      if ((v53 & 0x80000000) == 0)
      {
LABEL_18:
        if (!v51) {
          goto LABEL_21;
        }
LABEL_19:
        if (v50 < 0) {
          operator delete((void *)v49);
        }
        goto LABEL_21;
      }
    }
    else if ((v53 & 0x80000000) == 0)
    {
      goto LABEL_18;
    }
    operator delete(v52);
    if (!v51) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
LABEL_21:
  *(_OWORD *)a3 = *(_OWORD *)__p;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v31)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v41) {
      goto LABEL_44;
    }
    goto LABEL_30;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v12 = v24;
  if (v24)
  {
    *(_OWORD *)(a3 + 16) = *(_OWORD *)v22;
    *(void *)(a3 + 32) = v23;
    v22[1] = 0;
    uint64_t v23 = 0;
    v22[0] = 0;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v30)
  {
    uint64_t v13 = v27;
    *(void *)(a3 + 64) = v26;
    *(_OWORD *)(a3 + 48) = v25;
    long long v25 = 0uLL;
    *(void *)(a3 + 72) = v13;
    *(_OWORD *)(a3 + 80) = v28;
    *(void *)(a3 + 96) = v29;
    uint64_t v26 = 0;
    long long v28 = 0uLL;
    uint64_t v29 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v12 && SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  if (v41)
  {
LABEL_30:
    BOOL v14 = (char *)v39;
    if (v39)
    {
      std::chrono::steady_clock::time_point v15 = v40;
      std::chrono::system_clock::time_point v16 = v39;
      if (v40 != v39)
      {
        do
        {
          std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = (std::__shared_weak_count *)*((void *)v15 - 1);
          if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
          v15 -= 16;
        }
        while (v15 != v14);
        std::chrono::system_clock::time_point v16 = v39;
      }
      uint64_t v40 = v14;
      operator delete(v16);
    }
    signed int v18 = v37;
    if (v37)
    {
      uint64_t v19 = (uint64_t)v38;
      std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v20 = v37;
      if (v38 != v37)
      {
        do
        {
          v19 -= 88;
          sub_215B0389C(v19);
        }
        while ((void *)v19 != v18);
        std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v20 = v37;
      }
      uint64_t v38 = v18;
      operator delete(v20);
    }
  }
LABEL_44:
  if (v46)
  {
    uint64_t v47 = (char *)v46;
    operator delete(v46);
  }
  if (v43)
  {
    std::string __dst = v43;
    operator delete(v43);
  }
}

void sub_215AF8434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  sub_21573FE74(v36 - 184);
  sub_215B039AC(v35);
  sub_215D01EE8(&a35);
  _Unwind_Resume(a1);
}

void sub_215AF8458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  sub_215B039AC(v35);
  sub_215D01EE8(&a35);
  _Unwind_Resume(a1);
}

void *sub_215AF84AC(void *a1, uint64_t a2, unint64_t a3)
{
  std::string __p = 0;
  std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = 0;
  signed int v18 = 0;
  if (a3)
  {
    if (a3 >= 0xAAAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    uint64_t v5 = 24 * a3;
    int v6 = (char *)operator new(24 * a3);
    uint64_t v7 = 0;
    std::string __p = v6;
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = v6;
    signed int v18 = &v6[v5];
    do
    {
      char v8 = &v6[v7];
      uint64_t v10 = *(void *)(a2 + v7 + 8);
      uint64_t v9 = *(void *)(a2 + v7 + 16);
      *(void *)char v8 = &unk_26C678D20;
      *((void *)v8 + 1) = v10;
      *((void *)v8 + 2) = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 24;
    }
    while (v5 != v7);
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = &v6[v7];
  }
  sub_215B030BC(a1, (uint64_t *)&__p);
  long long v11 = (char *)__p;
  if (__p)
  {
    int v12 = v17;
    uint64_t v13 = __p;
    if (v17 != __p)
    {
      do
      {
        BOOL v14 = (std::__shared_weak_count *)*((void *)v12 - 1);
        if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
        v12 -= 24;
      }
      while (v12 != v11);
      uint64_t v13 = __p;
    }
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = v11;
    operator delete(v13);
  }
  return a1;
}

void sub_215AF861C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215986E24((void **)va);
  _Unwind_Resume(a1);
}

void sub_215AF8630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, void *a11)
{
  if (__p)
  {
    int v12 = a11;
    uint64_t v13 = __p;
    if (a11 != __p)
    {
      do
        int v12 = (void *)sub_215AEFACC((uint64_t)v12 - 24);
      while (v12 != __p);
      uint64_t v13 = __p;
    }
    operator delete(v13);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_215AF8674(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x108uLL);
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)uint64_t v2 = &unk_26C679FC0;
  unsigned char v2[24] = *(unsigned char *)a1;
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 8);
  *((_DWORD *)v2 + 12) = *(_DWORD *)(a1 + 24);
  v2[56] = 0;
  v2[80] = 0;
  if (*(unsigned char *)(a1 + 56))
  {
    *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 32);
    *((void *)v2 + 9) = *(void *)(a1 + 48);
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 32) = 0;
    v2[80] = 1;
  }
  v2[88] = 0;
  v2[232] = 0;
  if (*(unsigned char *)(a1 + 208))
  {
    *(_OWORD *)(v2 + 88) = *(_OWORD *)(a1 + 64);
    *((void *)v2 + 13) = *(void *)(a1 + 80);
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    long long v3 = *(_OWORD *)(a1 + 88);
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *((_OWORD *)v2 + 7) = v3;
    *((void *)v2 + 16) = *(void *)(a1 + 104);
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *((void *)v2 + 19) = *(void *)(a1 + 128);
    *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 112);
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
    long long v4 = *(_OWORD *)(a1 + 136);
    *((void *)v2 + 22) = *(void *)(a1 + 152);
    *((_OWORD *)v2 + 10) = v4;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    long long v5 = *(_OWORD *)(a1 + 160);
    *((void *)v2 + 25) = *(void *)(a1 + 176);
    *(_OWORD *)(v2 + 184) = v5;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
    long long v6 = *(_OWORD *)(a1 + 184);
    *((void *)v2 + 28) = *(void *)(a1 + 200);
    *((_OWORD *)v2 + 13) = v6;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
    v2[232] = 1;
  }
  __n128 result = *(__n128 *)(a1 + 216);
  *((__n128 *)v2 + 15) = result;
  *((void *)v2 + 32) = *(void *)(a1 + 232);
  qword_26788EB48 = (uint64_t)(v2 + 24);
  unk_26788EB50 = v2;
  return result;
}

uint64_t sub_215AF87C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215AF8844(void *a1, uint64_t a2, const void **a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v7 = *(void *)(a2 + 240);
  char v8 = (std::mutex *)(v7 + 24);
  uint64_t v9 = a5;
  if (a5)
  {
    int v12 = *(uint64_t **)(v7 + 8);
    uint64_t v10 = (uint64_t *)(v7 + 8);
    long long v11 = v12;
    if (!v12) {
      goto LABEL_49;
    }
  }
  else
  {
    std::mutex::lock((std::mutex *)(v7 + 24));
    uint64_t v14 = *(void *)(a2 + 240);
    std::chrono::steady_clock::time_point v15 = *(uint64_t **)(v14 + 8);
    uint64_t v10 = (uint64_t *)(v14 + 8);
    long long v11 = v15;
    if (!v15) {
      goto LABEL_49;
    }
  }
  int v16 = *((char *)a3 + 23);
  if (v16 >= 0) {
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = a3;
  }
  else {
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = *a3;
  }
  if (v16 >= 0) {
    size_t v18 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v18 = (size_t)a3[1];
  }
  unsigned int v19 = *((unsigned __int16 *)a3 + 12);
  std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v20 = v10;
  do
  {
    int v21 = *((char *)v11 + 55);
    if (v21 >= 0) {
      int v22 = v11 + 4;
    }
    else {
      int v22 = (const void *)v11[4];
    }
    if (v21 >= 0) {
      size_t v23 = *((unsigned __int8 *)v11 + 55);
    }
    else {
      size_t v23 = v11[5];
    }
    if (v18 >= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v18;
    }
    int v25 = memcmp(v22, v17, v24);
    if (v25)
    {
      if (v25 < 0) {
        goto LABEL_12;
      }
LABEL_25:
      std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v20 = v11;
      goto LABEL_13;
    }
    if (v23 != v18)
    {
      if (v23 < v18)
      {
LABEL_12:
        ++v11;
        goto LABEL_13;
      }
      goto LABEL_25;
    }
    if (*((unsigned __int16 *)v11 + 28) < v19) {
      ++v11;
    }
    else {
      std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v20 = v11;
    }
LABEL_13:
    long long v11 = (uint64_t *)*v11;
  }
  while (v11);
  if (v20 == v10) {
    goto LABEL_49;
  }
  int v26 = *((char *)v20 + 55);
  if (v26 >= 0) {
    uint64_t v27 = v20 + 4;
  }
  else {
    uint64_t v27 = (const void *)v20[4];
  }
  if (v26 >= 0) {
    size_t v28 = *((unsigned __int8 *)v20 + 55);
  }
  else {
    size_t v28 = v20[5];
  }
  if (v28 >= v18) {
    size_t v29 = v18;
  }
  else {
    size_t v29 = v28;
  }
  int v30 = memcmp(v17, v27, v29);
  if (v30)
  {
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_44;
    }
LABEL_49:
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB18, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788EB18))
    {
      v33[0] = 2;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      int v36 = 0;
      __int16 v38 = 270;
      strcpy(v37, "unknown client");
      char v39 = 0;
      char v40 = 0;
      uint64_t v42 = 0;
      uint64_t v43 = 0;
      uint64_t v41 = 0;
      sub_215AF8674((uint64_t)v33);
      sub_21596C1D4((uint64_t)v33);
      __cxa_atexit((void (*)(void *))sub_215AF87C8, &qword_26788EB48, &dword_21572C000);
      __cxa_guard_release(&qword_26788EB18);
    }
    uint64_t v31 = unk_26788EB50;
    *a1 = qword_26788EB48;
    a1[1] = v31;
    if (v31) {
      goto LABEL_51;
    }
  }
  else
  {
    BOOL v32 = v18 >= v28;
    if (v18 == v28) {
      BOOL v32 = v19 >= *((unsigned __int16 *)v20 + 28);
    }
    if (!v32) {
      goto LABEL_49;
    }
LABEL_44:
    *a1 = v20[8];
    uint64_t v31 = v20[9];
    a1[1] = v31;
    if (v31) {
LABEL_51:
    }
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 8), 1uLL, memory_order_relaxed);
  }
  if (!v9) {
    std::mutex::unlock(v8);
  }
}

void sub_215AF8ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21596C1D4((uint64_t)&a9);
  __cxa_guard_abort(&qword_26788EB18);
  if (!v10) {
    std::mutex::unlock(v9);
  }
  _Unwind_Resume(a1);
}

void sub_215AF8AF8(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v47[0] = &unk_26C683078;
  v47[1] = 1;
  v47[2] = &unk_26C6831C8;
  char v8 = (char *)operator new(0xAuLL);
  *(void *)char v8 = 0;
  *((_WORD *)v8 + 4) = 0;
  uint64_t v48 = v8;
  long long v49 = v8 + 10;
  char v50 = v8 + 10;
  char v51 = 0;
  unint64_t v52 = 0;
  uint64_t v53 = 0;
  sub_215B030BC(__p, a2);
  char v36 = 1;
  uint64_t v38 = 0x500000001;
  int v39 = 0;
  uint64_t v40 = 1;
  int v41 = 0;
  v9.n128_f64[0] = sub_215B031E4((uint64_t)&v42, (uint64_t)__p);
  if (v36)
  {
    uint64_t v10 = (char *)__p[0];
    if (__p[0])
    {
      long long v11 = (char *)__p[1];
      int v12 = __p[0];
      if (__p[1] != __p[0])
      {
        do
        {
          uint64_t v13 = (std::__shared_weak_count *)*((void *)v11 - 1);
          if (v13 && !atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v9);
            std::__shared_weak_count::__release_weak(v13);
          }
          v11 -= 24;
        }
        while (v11 != v10);
        int v12 = __p[0];
      }
      __p[1] = v10;
      operator delete(v12);
    }
  }
  LODWORD(__p[0]) = 1;
  sub_215D04A50((uint64_t)&v48, v49, (char *)__p, (char *)__p + 4, 4);
  sub_215D02034(v47);
  sub_215B0C1C8((uint64_t)v47, (uint64_t)v37);
  *(void *)&v48[*((void *)v52 - 1) + 10] = v49 - &v48[*((void *)v52 - 1)] - 18;
  v52 -= 8;
  uint64_t v14 = (std::mutex *)(*(void *)(a1 + 240) + 24);
  std::mutex::lock(v14);
  std::chrono::steady_clock::time_point v15 = *(void **)(a1 + 240);
  size_t v18 = (void *)*v15;
  int v16 = v15 + 1;
  std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = v18;
  if (v18 != v16)
  {
    while (1)
    {
      uint64_t v19 = v17[8];
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v20 = *(void *)(v19 + 16);
      BOOL v22 = v21 == *a3 && v20 == a3[1];
      if (v22) {
        break;
      }
      size_t v23 = (void *)v17[1];
      if (v23)
      {
        do
        {
          size_t v24 = v23;
          size_t v23 = (void *)*v23;
        }
        while (v23);
      }
      else
      {
        do
        {
          size_t v24 = (void *)v17[2];
          BOOL v22 = *v24 == (void)v17;
          std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = v24;
        }
        while (!v22);
      }
      std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17 = v24;
      if (v24 == v16) {
        goto LABEL_26;
      }
    }
  }
  if (v17 == v16) {
LABEL_26:
  }
    sub_215AB91F8((uint64_t)a3, 13, (uint64_t)"client not found");
  if (*((char *)v17 + 55) < 0)
  {
    sub_215738B0C(v32, (void *)v17[4], v17[5]);
  }
  else
  {
    *(_OWORD *)BOOL v32 = *((_OWORD *)v17 + 2);
    uint64_t v33 = v17[6];
  }
  __int16 v34 = *((_WORD *)v17 + 28);
  std::mutex::unlock(v14);
  if (((*(uint64_t (**)(void, void **, void *, uint64_t))(**(void **)(a1 + 320) + 32))(*(void *)(a1 + 320), v32, v47, 1) & 1) == 0)sub_215AB91F8((uint64_t)a3, 3, 0); {
  *(unsigned char *)(a4 + 120) = 1;
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(v32[0]);
  }
  if (v46)
  {
    int v25 = (char *)v44;
    if (v44)
    {
      int v26 = v45;
      uint64_t v27 = v44;
      if (v45 != v44)
      {
        do
        {
          size_t v28 = (std::__shared_weak_count *)*((void *)v26 - 1);
          if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
          v26 -= 16;
        }
        while (v26 != v25);
        uint64_t v27 = v44;
      }
      uint64_t v45 = v25;
      operator delete(v27);
    }
    size_t v29 = v42;
    if (v42)
    {
      uint64_t v30 = (uint64_t)v43;
      uint64_t v31 = v42;
      if (v43 != v42)
      {
        do
        {
          v30 -= 88;
          sub_215B0389C(v30);
        }
        while ((void *)v30 != v29);
        uint64_t v31 = v42;
      }
      uint64_t v43 = v29;
      operator delete(v31);
    }
  }
  if (v51)
  {
    unint64_t v52 = v51;
    operator delete(v51);
  }
  if (v48)
  {
    long long v49 = v48;
    operator delete(v48);
  }
}

void sub_215AF909C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::mutex::unlock(v15);
  sub_215B039AC(v14);
  sub_215D01EE8((void *)(v16 - 152));
  _Unwind_Resume(a1);
}

void sub_215AF90F4(_Unwind_Exception *a1)
{
  sub_215B039AC(v1);
  sub_215D01EE8((void *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_215AF9110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215AF915C((char **)va);
  sub_215D01EE8((void *)(v6 - 152));
  _Unwind_Resume(a1);
}

void sub_215AF912C(_Unwind_Exception *a1)
{
  sub_215D01EE8((void *)(v1 - 152));
  _Unwind_Resume(a1);
}

char **sub_215AF915C(char **a1)
{
  if (*((unsigned char *)a1 + 24))
  {
    uint64_t v2 = *a1;
    if (*a1)
    {
      long long v3 = a1[1];
      long long v4 = *a1;
      if (v3 != v2)
      {
        do
        {
          long long v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 24;
        }
        while (v3 != v2);
        long long v4 = *a1;
      }
      a1[1] = v2;
      operator delete(v4);
    }
  }
  return a1;
}

uint64_t sub_215AF9218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))();
}

uint64_t sub_215AF9240(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))();
}

uint64_t sub_215AF9268(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  long long v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  uint64_t v6 = *(void *)(a2 + 32);
  return (*(uint64_t (**)(uint64_t, _OWORD *))(*(void *)v2 + 56))(v2, v5);
}

void sub_215AF92C0(uint64_t a1, const void **a2, uint64_t a3, unsigned int a4)
{
  if (!*(unsigned char *)(a1 + 200)) {
    return;
  }
  sub_215AF8844(&v29, *(void *)a1, a2, 0, 0);
  uint64_t v7 = v29;
  sub_215E10780(a3, &v10);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v10.__r_.__value_.__l.__data_, v10.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v10;
  }
  char v12 = 1;
  LOBYTE(v13) = 0;
  char v17 = 0;
  char v18 = 1;
  sub_21598929C((uint64_t)v19, a4, (long long *)&__dst);
  uint64_t v8 = *(void *)(a1 + 192);
  if (!v8) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 48))(v8, v7, v19);
  if (v28)
  {
    if (!v27) {
      goto LABEL_10;
    }
    if (v26 < 0)
    {
      operator delete(v25);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_10:
        if (!v22) {
          goto LABEL_13;
        }
LABEL_11:
        if (v21 < 0) {
          operator delete(__p);
        }
        goto LABEL_13;
      }
    }
    else if ((v24 & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v23);
    if (!v22) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
LABEL_13:
  if (!v18) {
    goto LABEL_20;
  }
  if (!v17) {
    goto LABEL_17;
  }
  if (v16 < 0)
  {
    operator delete(v15);
    if ((v14 & 0x80000000) == 0)
    {
LABEL_17:
      if (v12) {
        goto LABEL_18;
      }
      goto LABEL_20;
    }
  }
  else if ((v14 & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(v13);
  if (v12)
  {
LABEL_18:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
LABEL_20:
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  __n128 v9 = v30;
  if (v30)
  {
    if (!atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_215AF94E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_215AF87C8(v29 - 64);
  _Unwind_Resume(a1);
}

void sub_215AF9538()
{
}

void sub_215AFABAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AFAE30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215AFAE84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t *sub_215AFAEF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v2 = *(uint64_t (**)(void))(**(void **)(v1 + 8) + 16);
    return (uint64_t *)v2();
  }
  else if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB30, memory_order_acquire) & 1) != 0 {
         || !__cxa_guard_acquire(&qword_26788EB30))
  }
  {
    return &qword_26788EB78;
  }
  else
  {
    qword_26788EB78 = 0;
    unk_26788EB80 = 0;
    __cxa_guard_release(&qword_26788EB30);
    return &qword_26788EB78;
  }
}

uint64_t *sub_215AFAFAC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v1 = *(uint64_t (**)(void))(**(void **)(a1 + 8) + 16);
    return (uint64_t *)v1();
  }
  else if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB30, memory_order_acquire) & 1) != 0 {
         || !__cxa_guard_acquire(&qword_26788EB30))
  }
  {
    return &qword_26788EB78;
  }
  else
  {
    qword_26788EB78 = 0;
    unk_26788EB80 = 0;
    __cxa_guard_release(&qword_26788EB30);
    return &qword_26788EB78;
  }
}

void sub_215AFB05C(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
}

void sub_215AFB064(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_215AFB06C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 8) + 40))();
}

uint64_t sub_215AFB098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 8) + 48))();
}

uint64_t sub_215AFB0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  long long v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  uint64_t v6 = *(void *)(a2 + 32);
  return (*(uint64_t (**)(uint64_t, _OWORD *))(*(void *)v2 + 56))(v2, v5);
}

void sub_215AFB124(void *a1)
{
  sub_215B07C70(a1);

  JUMPOUT(0x2166C4D20);
}

void **sub_215AFB15C(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    long long v3 = (void **)a1[1];
    long long v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 17) < 0) {
          operator delete(*(v3 - 5));
        }
        v3 -= 5;
      }
      while (v3 != v2);
      long long v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_215AFB1D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AFB20C(uint64_t result)
{
  uint64_t v1 = *(uint64_t ***)(result + 24);
  if (v1)
  {
    uint64_t v2 = *v1;
    std::__shared_weak_count *v1 = 0;
    if (v2)
    {
      long long v3 = sub_215D0892C(v2);
      MEMORY[0x2166C4D20](v3, 0x1020C4014B85259);
    }
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215AFB284(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit11concurrency17NodeTaskSchedulerEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit11concurrency17NodeTaskSchedulerEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit11concurrency17NodeTaskSchedulerEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit11concurrency17NodeTaskSchedulerEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_215AFB2FC(uint64_t a1)
{
  sub_215B02E7C(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215AFB338(uint64_t a1)
{
  sub_215B02C08(a1);

  JUMPOUT(0x2166C4D20);
}

void *sub_215AFB370(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C6792A8;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_215AFB3DC(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C6792A8;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AFB468(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))();
}

void *sub_215AFB490(void *a1)
{
  *a1 = &unk_26C6792E0;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215AFB4DC(void *a1)
{
  *a1 = &unk_26C6792E0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AFB548(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    long long v5 = std::__shared_weak_count::lock(v3);
    uint64_t v13 = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v12 = v7;
      if (v7)
      {
        uint64_t v8 = *(void *)(a2 + 8);
        *(void *)(a2 + 8) = 0;
        std::string v10 = &unk_26C679318;
        uint64_t v11 = v8;
        (*(void (**)(uint64_t, void **))(*(void *)v7 + 16))(v7, &v10);
        uint64_t v9 = v11;
        std::string v10 = &unk_26C679318;
        uint64_t v11 = 0;
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
      }
      if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_215AFB678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (a3) {
    (*(void (**)(uint64_t))(*(void *)a3 + 8))(a3);
  }
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AFB6BC(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C679318;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AFB748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))();
}

void *sub_215AFB770(void *a1)
{
  *a1 = &unk_26C679350;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215AFB7BC(void *a1)
{
  *a1 = &unk_26C679350;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215AFB828(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      long long v4 = v3;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215AFB8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFB90C(uint64_t a1)
{
  sub_215AFE390(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215AFB944(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if ((*(unsigned int (**)(void *))(*a1 + 48))(a1))
  {
    if (!a1[9]
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 234, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    if (a1[18])
    {
      long long v4 = operator new(0x40uLL);
      v4[1] = 0;
      void v4[2] = 0;
      void *v4 = &unk_26C658088;
      uint64_t v5 = a2[1];
      v4[3] = *a2;
      v4[4] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v7 = a2[3];
      uint64_t v6 = a2[4];
      v4[5] = &unk_26C678D20;
      _DWORD v4[6] = v7;
      v4[7] = v6;
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      atomic_fetch_add_explicit(v4 + 2, 1uLL, memory_order_relaxed);
      operator new();
    }
    uint64_t v8 = (uint64_t **)a1[9];
    *(_OWORD *)char v16 = 0uLL;
    uint64_t v9 = (std::__shared_weak_count *)a1[5];
    if (v9)
    {
      std::string v10 = std::__shared_weak_count::lock(v9);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = (std::__shared_weak_count *)a1[4];
        atomic_fetch_add_explicit(&v10->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        v16[0] = v12;
        v16[1] = v10;
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      else
      {
        *(_OWORD *)char v16 = 0uLL;
      }
    }
    uint64_t v13 = a2[1];
    *(void *)&long long v17 = *a2;
    *((void *)&v17 + 1) = v13;
    if (v13) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v14 = a2[4];
    *(void *)&long long v18 = a2[3];
    *((void *)&v18 + 1) = v14;
    if (v14) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
    }
    std::chrono::steady_clock::time_point v15 = (char *)operator new(0x40uLL);
    *(_OWORD *)(v15 + 8) = *(_OWORD *)v16;
    *(void *)std::chrono::steady_clock::time_point v15 = &unk_26C6796C8;
    *(_OWORD *)(v15 + 24) = v17;
    *((void *)v15 + 5) = &unk_26C678D20;
    *((_OWORD *)v15 + 3) = v18;
    uint64_t v20 = (long long *)v15;
    sub_215D08154(*v8, (uint64_t)&v19);
    if (v20 == &v19)
    {
      (*(void (**)(long long *))(v19 + 32))(&v19);
    }
    else if (v20)
    {
      (*(void (**)(long long *))(*(void *)v20 + 40))(v20);
    }
  }
}

void sub_215AFBFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

void sub_215AFBFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFBFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_215ACCDF8((void *)(v9 - 88));
  sub_215AFE698((uint64_t)va1);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AFC014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_215AFE648((std::mutex ***)va1);
  std::__shared_weak_count::__release_weak(v9);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AFC038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  MEMORY[0x2166C4D20](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215AFC06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  std::__shared_weak_count::__release_weak(v17);
  sub_215733368((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_215AFC08C(uint64_t result)
{
  return result;
}

uint64_t sub_215AFC09C(uint64_t result)
{
  return result;
}

uint64_t sub_215AFC0A8(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_215AFC0B8(void *a1, void *a2, void *a3)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if (((*(uint64_t (**)(void *))(*a1 + 48))(a1) & 1) == 0)
  {
    v33[0] = "Invalid operation. Interface is disabled for ";
    v33[1] = 45;
    char v22 = (void *)a1[6];
    uint64_t v21 = a1 + 6;
    uint64_t v20 = v22;
    size_t v23 = (void *)*((unsigned __int8 *)v21 + 23);
    if ((char)v23 < 0) {
      size_t v23 = (void *)v21[1];
    }
    else {
      uint64_t v20 = v21;
    }
    v33[2] = v20;
    __int16 v34 = v23;
    sub_2157430CC((uint64_t)v33, (uint64_t)&v35, 0, 0, &v36);
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v24 = &v36;
    }
    else {
      char v24 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    std::runtime_error::runtime_error(&v30, (const char *)v24);
    v30.__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    char v26 = std::runtime_error::runtime_error(exception, &v30);
    v26->__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    __cxa_throw(v26, (struct type_info *)&unk_26C683710, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  if (a1[18])
  {
    uint64_t v6 = operator new(0x20uLL);
    v6[2] = 0;
    v6[3] = *a3;
    void *v6 = &unk_26C679748;
    v6[1] = 0;
    *a3 = 0;
    atomic_fetch_add_explicit(v6 + 1, 1uLL, memory_order_relaxed);
    if (a1[18]
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      uint64_t v7 = operator new(0x40uLL);
      v7[1] = 0;
      unsigned int v7[2] = 0;
      *uint64_t v7 = &unk_26C658088;
      uint64_t v8 = a2[1];
      unsigned char v7[3] = *a2;
      v7[4] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v10 = a2[3];
      uint64_t v9 = a2[4];
      v7[5] = &unk_26C678D20;
      v7[6] = v10;
      v7[7] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v31 = v7 + 3;
      BOOL v32 = v7;
      atomic_fetch_add_explicit(v7 + 2, 1uLL, memory_order_relaxed);
      operator new();
    }
    abort();
  }
  uint64_t v11 = (uint64_t **)a1[9];
  *(_OWORD *)char v27 = 0uLL;
  uint64_t v12 = (std::__shared_weak_count *)a1[5];
  if (v12)
  {
    uint64_t v13 = std::__shared_weak_count::lock(v12);
    if (v13)
    {
      uint64_t v14 = v13;
      std::chrono::steady_clock::time_point v15 = (std::__shared_weak_count *)a1[4];
      atomic_fetch_add_explicit(&v13->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      v27[0] = v15;
      v27[1] = v13;
      if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    else
    {
      *(_OWORD *)char v27 = 0uLL;
    }
  }
  uint64_t v16 = a2[1];
  *(void *)&long long v28 = *a2;
  *((void *)&v28 + 1) = v16;
  if (v16) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v17 = a2[4];
  *(void *)&long long v29 = a2[3];
  *((void *)&v29 + 1) = v17;
  if (v17) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
  }
  long long v18 = operator new(0x20uLL);
  v18[1] = 0;
  v18[2] = 0;
  *long long v18 = &unk_26C679748;
  void v18[3] = *a3;
  *a3 = 0;
  long long v19 = (char *)operator new(0x50uLL);
  *(_OWORD *)(v19 + 8) = *(_OWORD *)v27;
  *(void *)long long v19 = &unk_26C679818;
  *(_OWORD *)(v19 + 24) = v28;
  *((void *)v19 + 5) = &unk_26C678D20;
  *((_OWORD *)v19 + 3) = v29;
  *((void *)v19 + 8) = v18 + 3;
  *((void *)v19 + 9) = v18;
  __int16 v34 = v19;
  sub_215D08154(*v11, (uint64_t)v33);
  if (v34 == v33)
  {
    (*(void (**)(void *))(v33[0] + 32))(v33);
  }
  else if (v34)
  {
    (*(void (**)(void *))(*v34 + 40))(v34);
  }
}

void sub_215AFC9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::runtime_error a22,std::exception_ptr a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    long long v28 = *v26;
    if (*v26)
    {
      std::exception_ptr::exception_ptr(&a26, &a23);
      v29.__ptr_ = &a26;
      std::__assoc_sub_state::set_exception(v28, v29);
      std::exception_ptr::~exception_ptr(&a26);
      std::exception_ptr::~exception_ptr(&a23);
      std::runtime_error::~runtime_error(&a22);
      if (*(char *)(v27 - 81) < 0) {
        operator delete(*(void **)(v27 - 104));
      }
      JUMPOUT(0x215AFC8C0);
    }
    sub_215AFF27C(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AFCA54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::runtime_error a22,std::exception_ptr a23,uint64_t a24,uint64_t a25,std::exception_ptr a26)
{
  std::exception_ptr::~exception_ptr(&a23);
  std::runtime_error::~runtime_error(&a22);
  if (*(char *)(v26 - 81) < 0)
  {
    operator delete(*(void **)(v26 - 104));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AFCAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

void sub_215AFCAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFCAD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  sub_21594B664(v10);
  if (a10)
  {
    std::__shared_weak_count::__release_weak(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215AFCB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27)
{
  sub_215ACCDF8((void *)(v27 - 104));
  sub_215AFFC6C(&a27);
  sub_215733368((uint64_t)&a25);
  sub_215733368((uint64_t)&a18);
  sub_215733368((uint64_t)&a20);
  _Unwind_Resume(a1);
}

void sub_215AFCB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215AFCB9C(uint64_t a1)
{
  unsigned __int8 v1 = *(uint64_t ***)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = *v1;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = **(uint64_t ***)(a1 + 72);
  }
  sub_215D082C4(v2);
}

void sub_215AFCC3C(void *a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  long long v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    long long v4 = (uint64_t **)a1[9];
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v8 = operator new(0x28uLL);
  *uint64_t v8 = &unk_26C679898;
  v8[1] = v5;
  unsigned char v8[2] = v6;
  int v8[3] = &unk_26C679318;
  v8[4] = v7;
  uint64_t v10 = v8;
  sub_215D08154(*v4, (uint64_t)v9);
  if (v10 == v9)
  {
    (*(void (**)(void *))(v9[0] + 32))(v9);
  }
  else if (v10)
  {
    (*(void (**)(void))(*v10 + 40))();
  }
}

void sub_215AFCE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_215ACCDF8((uint64_t *)va1);
  sub_215B00EC4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215AFCE68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B00EC4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215AFCE7C(void *a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = (uint64_t **)a1[9];
  }
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = operator new(0x20uLL);
  void *v5 = &unk_26C679918;
  v5[1] = v4;
  _OWORD v5[2] = v3;
  uint64_t v8 = v5;
  sub_215D08154(*v2, (uint64_t)v7);
  uint64_t result = (uint64_t)v8;
  if (v8 == v7) {
    return (*(uint64_t (**)(void *))(v7[0] + 32))(v7);
  }
  if (v8) {
    return (*(uint64_t (**)(void))(*v8 + 40))();
  }
  return result;
}

void sub_215AFCFD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215ACCDF8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215AFCFEC(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215AFD004()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_215AFD28C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL))
  {
    sub_215B020A0(&a9);
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  sub_215B020A0(&a9);
  _Unwind_Resume(a1);
}

void sub_215AFD330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215B020A0(&a9);
  _Unwind_Resume(a1);
}

void sub_215AFD34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFD360()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_215AFD5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL))
  {
    sub_215B020A0(&a9);
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  sub_215B020A0(&a9);
  _Unwind_Resume(a1);
}

void sub_215AFD68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215B020A0(&a9);
  _Unwind_Resume(a1);
}

void sub_215AFD6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215AFD6BC(uint64_t a1)
{
  return sub_215AFE390(a1 - 16);
}

void sub_215AFD6C4(uint64_t a1)
{
  sub_215AFE390(a1 - 16);

  JUMPOUT(0x2166C4D20);
}

void sub_215AFD700(uint64_t a1, uint64_t a2)
{
}

void sub_215AFD708()
{
}

void sub_215AFD710()
{
}

uint64_t sub_215AFD718(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_215AFD720(uint64_t a1)
{
  return sub_215AFE390(a1 - 24);
}

void sub_215AFD728(uint64_t a1)
{
  sub_215AFE390(a1 - 24);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215AFD764(uint64_t a1)
{
  return sub_215AFCE7C((void *)(a1 - 24));
}

uint64_t sub_215AFD76C(uint64_t a1)
{
  return a1 - 24;
}

void sub_215AFD778()
{
}

uint64_t sub_215AFD78C(uint64_t a1, long long **a2)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 8);
  v26[1] = 1;
  v26[0] = &unk_26C683078;
  v26[2] = &unk_26C6831C8;
  uint64_t v4 = operator new(0xAuLL);
  v4[4] = 0;
  *(void *)uint64_t v4 = 0;
  uint64_t v27 = v4;
  std::string __dst = v4 + 5;
  std::exception_ptr v29 = (char *)(v4 + 5);
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  std::string __p = 0;
  uint64_t v5 = *a2;
  uint64_t v6 = (std::__shared_weak_count *)a2[1];
  uint64_t v21 = *a2;
  char v22 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = a2[3];
  uint64_t v7 = (std::__shared_weak_count *)a2[4];
  v23[0] = &unk_26C678D20;
  v23[1] = v8;
  char v24 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  char v25 = 1;
  uint64_t v34 = 0x500000001;
  int v35 = 0;
  uint64_t v36 = 1;
  int v37 = 0;
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__src, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v9 = *v5;
    uint64_t v53 = *((void *)v5 + 2);
    long long __src = v9;
  }
  uint64_t v10 = sub_215990AC4(0);
  sub_215990288((uint64_t)&v54, (uint64_t)v23, v10);
  LOBYTE(v62) = 0;
  unsigned __int8 v64 = 0;
  if (*((unsigned char *)v21 + 48))
  {
    if (*((char *)v21 + 47) < 0)
    {
      sub_215738B0C(&v62, *((void **)v21 + 3), *((void *)v21 + 4));
    }
    else
    {
      long long v11 = *(long long *)((char *)v21 + 24);
      uint64_t v63 = *((void *)v21 + 5);
      long long v62 = v11;
    }
    int v12 = 1;
    unsigned __int8 v64 = 1;
  }
  else
  {
    int v12 = 0;
  }
  long long v39 = __src;
  uint64_t v40 = v53;
  long long __src = 0uLL;
  *(_OWORD *)&v41[8] = v55;
  uint64_t v42 = v56;
  uint64_t v53 = 0;
  long long v55 = 0uLL;
  uint64_t v56 = 0;
  int v13 = v59;
  int v43 = v57;
  int v45 = -1;
  v44[0] = 0;
  if (v59 != -1)
  {
    ((void (*)(char *, char *, uint64_t *))off_26C679598[v59])(&v33, v44, &v58);
    int v45 = v13;
    int v12 = v64;
  }
  long long v46 = v60;
  uint64_t v47 = v61;
  uint64_t v61 = 0;
  long long v60 = 0uLL;
  LOBYTE(v48) = 0;
  char v50 = 0;
  if (v12)
  {
    long long v48 = v62;
    uint64_t v49 = v63;
    uint64_t v63 = 0;
    long long v62 = 0uLL;
    char v50 = 1;
  }
  char v51 = 1;
  sub_215AFDF7C((uint64_t)&__src);
  if (v25)
  {
    uint64_t v14 = v24;
    if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  LODWORD(__src) = 1;
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  sub_215D02034(v26);
  LODWORD(__src) = 1;
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  sub_215D02034(v26);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v34, (char *)&v34 + 4, 4);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v34 + 4, (char *)&v35, 4);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v35, (char *)&v36, 4);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v36, (char *)&v36 + 4, 4);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v36 + 4, (char *)&v37, 4);
  sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&v37, v38, 4);
  *(void *)((char *)v27 + *((void *)v31 - 1) + 10) = (unsigned char *)__dst - ((unsigned char *)v27 + *((void *)v31 - 1)) - 18;
  v31 -= 8;
  if (v51)
  {
    LOBYTE(__src) = 1;
    sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
    LODWORD(__src) = 2;
    sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
    unsigned int v15 = __src;
    sub_215D02034(v26);
    sub_215D023C8((uint64_t)v26, (char *)&v39);
    LODWORD(__src) = 2;
    sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
    sub_215D02034(v26);
    sub_215AFE0AC((uint64_t)v26, (uint64_t)v41);
    *(void *)((char *)v27 + *((void *)v31 - 1) + 10) = (unsigned char *)__dst - ((unsigned char *)v27 + *((void *)v31 - 1)) - 18;
    v31 -= 8;
    if (v15 >= 2)
    {
      if (v50)
      {
        LOBYTE(__src) = 1;
        sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
        sub_215D023C8((uint64_t)v26, (char *)&v48);
      }
      else
      {
        LOBYTE(__src) = 0;
        sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
      }
    }
    *(void *)((char *)v27 + *((void *)v31 - 1) + 10) = (unsigned char *)__dst - ((unsigned char *)v27 + *((void *)v31 - 1)) - 18;
    uint64_t v16 = v31 - 8;
    v31 -= 8;
  }
  else
  {
    LOBYTE(__src) = 0;
    sub_215D04A50((uint64_t)&v27, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
    uint64_t v16 = v31;
  }
  *(void *)((char *)v27 + *((void *)v16 - 1) + 10) = (unsigned char *)__dst - ((unsigned char *)v27 + *((void *)v16 - 1)) - 18;
  v31 -= 8;
  uint64_t v17 = *(void *)(v3 + 112);
  if (!v17)
  {
LABEL_38:
    uint64_t v18 = 0;
    if (!v51) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (((*(uint64_t (**)(uint64_t, void *))(*(void *)v17 + 32))(v17, v26) & 1) == 0)
  {
    uint64_t v19 = *(void *)(v3 + 112);
    *(void *)(v3 + 112) = 0;
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    goto LABEL_38;
  }
  uint64_t v18 = 1;
  if (v51) {
LABEL_39:
  }
    sub_215AFDF7C((uint64_t)&v39);
LABEL_40:
  if (__p)
  {
    uint64_t v31 = (char *)__p;
    operator delete(__p);
  }
  if (v27)
  {
    std::string __dst = v27;
    operator delete(v27);
  }
  return v18;
}

void sub_215AFDE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, ...)
{
  va_start(va, a8);
  if (*(unsigned char *)(v10 - 104) && *(char *)(v10 - 105) < 0) {
    operator delete(*(void **)(v10 - 128));
  }
  sub_215AC31A4(v9);
  if (*(char *)(v10 - 217) < 0) {
    operator delete(*(void **)(v10 - 240));
  }
  if (a8)
  {
    sub_215AEFACC(v8);
    if (a4)
    {
      if (!atomic_fetch_add(&a4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))a4->__on_zero_shared)(a4);
        std::__shared_weak_count::__release_weak(a4);
        sub_215D01EE8(va);
        _Unwind_Resume(a1);
      }
    }
  }
  sub_215D01EE8(va);
  _Unwind_Resume(a1);
}

__n128 sub_215AFDF5C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  *a2 = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

__n128 sub_215AFDF6C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  *a2 = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

uint64_t sub_215AFDF7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136) && *(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  uint64_t v2 = *(void *)(a1 + 88);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 96);
    uint64_t v4 = *(void **)(a1 + 88);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 88);
    }
    *(void *)(a1 + 96) = v2;
    operator delete(v4);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if (v6 != -1) {
    ((void (*)(char *, uint64_t))off_26C679588[v6])(&v8, a1 + 64);
  }
  *(_DWORD *)(a1 + 80) = -1;
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
LABEL_19:
    operator delete(*(void **)a1);
    return a1;
  }
  if (*(char *)(a1 + 23) < 0) {
    goto LABEL_19;
  }
  return a1;
}

uint64_t sub_215AFE0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)(a2 + 8);
  LODWORD(__src) = 2;
  uint64_t v5 = a1 + 24;
  sub_215D04A50(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  sub_215D02034((void *)a1);
  sub_215D023C8(a1, v4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 32), (char *)(a2 + 36), 4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) - 8) + *(void *)(a1 + 24);
  *(void *)(v6 + 10) = *(void *)(a1 + 32) - v6 - 18;
  *(void *)(a1 + 56) -= 8;
  if (*(_DWORD *)(a2 + 56) > 1u) {
    sub_215742D4C();
  }
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v7 = *(std::__shared_weak_count **)(a2 + 48);
  if (v7)
  {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  long long __src = &unk_26C6746E8;
  uint64_t v13 = v8;
  unsigned int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 16))(v8);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&v14, (char *)&v15, 4);
  uint64_t v9 = v14;
  sub_215D02034((void *)a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v13 + 32))(v13, a1, v9);
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) - 8) + *(void *)(a1 + 24);
  *(void *)(v11 + 10) = *(void *)(a1 + 32) - v11 - 18;
  *(void *)(a1 + 56) -= 8;
  return result;
}

char ***sub_215AFE290(char ***result)
{
  unsigned __int8 v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    std::mutex::~mutex((std::mutex *)(v1 + 7));
    if (*((unsigned char *)v1 + 48))
    {
      uint64_t v2 = *v1;
      if (*v1)
      {
        uint64_t v3 = v1[1];
        uint64_t v4 = *v1;
        if (v3 != v2)
        {
          do
          {
            uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
            if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
              std::__shared_weak_count::__release_weak(v5);
            }
            v3 -= 16;
          }
          while (v3 != v2);
          uint64_t v4 = *v1;
        }
        v1[1] = v2;
        operator delete(v4);
      }
    }
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215AFE390(uint64_t a1)
{
  *(void *)a1 = &unk_26C679388;
  *(void *)(a1 + 16) = &unk_26C679400;
  *(void *)(a1 + 24) = &unk_26C679440;
  sub_215AFE290((char ***)(a1 + 144));
  if (*(void *)(a1 + 136))
  {
    uint64_t v3 = *(void *)(a1 + 120);
    uint64_t v2 = *(uint64_t **)(a1 + 128);
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(v3 + 8);
    **(void **)(v3 + 8) = v4;
    *(void *)(a1 + 136) = 0;
    if (v2 != (uint64_t *)(a1 + 120))
    {
      do
      {
        uint64_t v5 = (uint64_t *)v2[1];
        operator delete(v2);
        uint64_t v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(void *)(a1 + 112))
  {
    uint64_t v6 = *(void *)(a1 + 96);
    uint64_t v7 = *(uint64_t **)(a1 + 104);
    uint64_t v8 = *v7;
    *(void *)(v8 + 8) = *(void *)(v6 + 8);
    **(void **)(v6 + 8) = v8;
    *(void *)(a1 + 112) = 0;
    if (v7 != (uint64_t *)(a1 + 96))
    {
      do
      {
        uint64_t v9 = (uint64_t *)v7[1];
        (*(void (**)(void))v7[2])();
        operator delete(v7);
        uint64_t v7 = v9;
      }
      while (v9 != (uint64_t *)(a1 + 96));
    }
  }
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v11 || atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    operator delete(*(void **)(a1 + 48));
    int v12 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v12) {
      return a1;
    }
    goto LABEL_13;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_16;
  }
LABEL_12:
  int v12 = *(std::__shared_weak_count **)(a1 + 40);
  if (v12) {
LABEL_13:
  }
    std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void *sub_215AFE57C(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

std::mutex ***sub_215AFE648(std::mutex ***a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    std::mutex::unlock(*v2);
    MEMORY[0x2166C4D20](v2, 0x20C4093837F09);
  }
  return a1;
}

uint64_t sub_215AFE698(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void *sub_215AFE6D4(void *a1)
{
  *a1 = &unk_26C6795E8;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void sub_215AFE72C(void *a1)
{
  *a1 = &unk_26C6795E8;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215AFE7A4(void *a1)
{
  uint64_t result = operator new(0x30uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C6795E8;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a1[4];
  result[3] = a1[3];
  result[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_215AFE818(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C6795E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = result[4];
  a2[3] = result[3];
  a2[4] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215AFE868(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215AFE8B8(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[4];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)__p[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }

  operator delete(__p);
}

void sub_215AFE904(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    uint64_t v4 = (std::__shared_weak_count *)a1[2];
    if (!v4) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    uint64_t v5 = 0;
    uint64_t v4 = (std::__shared_weak_count *)a1[2];
    if (!v4) {
      goto LABEL_10;
    }
LABEL_6:
    uint64_t v6 = std::__shared_weak_count::lock(v4);
    uint64_t v7 = v6;
    if (v6)
    {
      uint64_t v8 = a1[1];
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!v3) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v8 = 0;
      if (!v3) {
        goto LABEL_12;
      }
    }
    goto LABEL_11;
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  uint64_t v5 = a1[3];
  if (v4) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  if (v3) {
LABEL_11:
  }
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_12:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v10) = 0;
      char v11 = 0;
      sub_215AFECB8((uint64_t *)(v8 + 88), v5, &v10);
      if (v11) {
        sub_215AFF2E4(&v10);
      }
    }
  }
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  if (v7)
  {
    p_shared_owners = &v7->__shared_owners_;
    if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_22;
      }
LABEL_28:
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if (!v3) {
        return;
      }
      goto LABEL_23;
    }
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
      goto LABEL_28;
    }
  }
LABEL_22:
  if (!v3) {
    return;
  }
LABEL_23:
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215AFEB1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a10) {
    sub_215AFF2E4(&a9);
  }
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AFEC3C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatc"
                     "hIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessag"
                                "eAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215AFECAC()
{
  return &unk_26C6796A8;
}

void sub_215AFECB8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a1;
  if (!v6)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v6 = *a1;
  }
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 16))(v6, a2);
  uint64_t v7 = a1 + 1;
  for (int i = (void *)a1[2]; i != v7; int i = (void *)i[1])
    (*(void (**)(void *, char *))(i[2] + 16))(i + 2, &v12);
  if (*((unsigned char *)a3 + 8))
  {
    uint64_t v9 = *a3;
    if (!v9) {
      sub_215AFF27C(3u);
    }
    std::mutex::lock((std::mutex *)(v9 + 24));
    if ((*(unsigned char *)(v9 + 136) & 1) != 0
      || (v11.__ptr_ = 0, uint64_t v10 = *(void *)(v9 + 16), std::exception_ptr::~exception_ptr(&v11), v10))
    {
      sub_215AFF27C(2u);
    }
    *(unsigned char *)(v9 + 140) = v12;
    *(_DWORD *)(v9 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v9 + 88));
    std::mutex::unlock((std::mutex *)(v9 + 24));
  }
}

void sub_215AFEE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16)
{
  std::mutex::unlock(v16);
  if (a2 == 1)
  {
    uint64_t v19 = *(void *)__cxa_begin_catch(a1);
    a10 = *(void *)(*(void *)(v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v19 + 16))();
    sub_215AFEF48((uint64_t)&a11, (const char *)&a10, (const char *)&a9);
    if ((a16 & 0x80u) == 0) {
      uint64_t v20 = (uint64_t *)&a11;
    }
    else {
      uint64_t v20 = a11;
    }
    if ((a16 & 0x80u) == 0) {
      uint64_t v21 = a16;
    }
    else {
      uint64_t v21 = a12;
    }
    sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v20, v21, (void (*)(void **))sub_215E1ABD8);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_215AFEF1C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x215AFEF3CLL);
}

uint64_t sub_215AFEF48(uint64_t a1, const char *a2, const char *a3)
{
  int v7 = 0;
  sub_21595659C(v6, "Caught unexpected exception of type: ");
  if (*(void *)a2)
  {
    uint64_t v8 = (void **)v6;
    uint64_t v9 = a2;
    uint64_t v10 = v6;
    std::exception_ptr v11 = a2;
    char v12 = a2;
    if (v7 != -1)
    {
      uint64_t v13 = &v8;
      ((void (*)(void **, _DWORD *))off_26C679660[v7])(&v13, v6);
      goto LABEL_6;
    }
LABEL_18:
    sub_215742D4C();
  }
  uint64_t v8 = (void **)v6;
  uint64_t v9 = "nullptr";
  uint64_t v10 = v6;
  std::exception_ptr v11 = "nullptr";
  char v12 = "nullptr";
  if (v7 == -1) {
    goto LABEL_18;
  }
  uint64_t v13 = &v8;
  ((void (*)(void **, _DWORD *))off_26C679648[v7])(&v13, v6);
LABEL_6:
  uint64_t v8 = (void **)v6;
  uint64_t v9 = "\n";
  uint64_t v10 = v6;
  std::exception_ptr v11 = "\n";
  char v12 = "\n";
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = &v8;
  ((void (*)(void **, _DWORD *))off_26C679678[v7])(&v13, v6);
  uint64_t v8 = (void **)v6;
  uint64_t v9 = "message: ";
  uint64_t v10 = v6;
  std::exception_ptr v11 = "message: ";
  char v12 = "message: ";
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = &v8;
  ((void (*)(void **, _DWORD *))off_26C679690[v7])(&v13, v6);
  if (*(void *)a3)
  {
    uint64_t v8 = (void **)v6;
    uint64_t v9 = a3;
    uint64_t v10 = v6;
    std::exception_ptr v11 = a3;
    char v12 = a3;
    if (v7 != -1)
    {
      uint64_t v13 = &v8;
      ((void (*)(void **, _DWORD *))off_26C679660[v7])(&v13, v6);
      goto LABEL_13;
    }
LABEL_21:
    sub_215742D4C();
  }
  uint64_t v8 = (void **)v6;
  uint64_t v9 = "nullptr";
  uint64_t v10 = v6;
  std::exception_ptr v11 = "nullptr";
  char v12 = "nullptr";
  if (v7 == -1) {
    goto LABEL_21;
  }
  uint64_t v13 = &v8;
  ((void (*)(void **, _DWORD *))off_26C679648[v7])(&v13, v6);
LABEL_13:
  uint64_t v8 = (void **)v6;
  uint64_t v9 = "\n";
  uint64_t v10 = v6;
  std::exception_ptr v11 = "\n";
  char v12 = "\n";
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v13 = &v8;
  ((void (*)(void **, _DWORD *))off_26C679678[v7])(&v13, v6);
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v8 = &v13;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C6795C0[v7])(&v8, v6);
  if (v7 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C6795A8[v7])(&v8, v6);
  }
  return result;
}

void sub_215AFF1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215AFF27C(unsigned int a1)
{
  exception = __cxa_allocate_exception(0x20uLL);
  unint64_t v3 = std::future_category();
  MEMORY[0x2166C4330](exception, a1, v3);
  __cxa_throw(exception, MEMORY[0x263F8C1A0], MEMORY[0x263F8C0C0]);
}

void sub_215AFF2D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_215AFF2E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v10.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v10);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      uint64_t v5 = std::future_category();
      MEMORY[0x2166C4330](&v8, 4, v5);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      int v7 = std::logic_error::logic_error(exception, &v8);
      v7->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C2E0] + 16);
      v7[1] = v9;
      __cxa_throw(v7, MEMORY[0x263F8C1A0], MEMORY[0x263F8C0C0]);
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void *sub_215AFF440(void *a1)
{
  *a1 = &unk_26C6796C8;
  uint64_t v2 = (std::__shared_weak_count *)a1[7];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void sub_215AFF528(void *a1)
{
  *a1 = &unk_26C6796C8;
  uint64_t v2 = (std::__shared_weak_count *)a1[7];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215AFF630(void *a1)
{
  uint64_t result = operator new(0x40uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C6796C8;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a1[4];
  result[3] = a1[3];
  result[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = a1[6];
  uint64_t v6 = a1[7];
  result[5] = &unk_26C678D20;
  result[6] = v7;
  result[7] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_215AFF6DC(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C6796C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = result[4];
  a2[3] = result[3];
  a2[4] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = result[6];
  uint64_t v5 = result[7];
  a2[5] = &unk_26C678D20;
  a2[6] = v6;
  a2[7] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215AFF764(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[7];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_215AFF844(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[7];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)__p[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)__p[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)__p[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }

  operator delete(__p);
}

void sub_215AFF920(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v6) = 0;
        char v7 = 0;
        sub_215AFECB8((uint64_t *)(v5 + 88), a1 + 24, &v6);
        if (v7) {
          sub_215AFF2E4(&v6);
        }
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215AFF9DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a10)
  {
    sub_215AFF2E4(&a9);
    if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    goto LABEL_3;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215AFFA50(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_215AFFAC0()
{
  return &unk_26C679728;
}

void *sub_215AFFACC(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = (std::__shared_weak_count *)a1[6];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[6];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[3];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return a1;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (std::__shared_weak_count *)a1[1];
  if (v5) {
LABEL_10:
  }
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_215AFFBEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679748;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215AFFC0C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679748;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t *sub_215AFFC60(uint64_t a1)
{
  return sub_215AFF2E4((uint64_t *)(a1 + 24));
}

void *sub_215AFFC6C(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[3];
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  unint64_t v3 = (std::__shared_weak_count *)a1[3];
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void *sub_215AFFCFC(void *a1)
{
  *a1 = &unk_26C679798;
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  unint64_t v3 = (std::__shared_weak_count *)a1[4];
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void sub_215AFFDA8(void *a1)
{
  *a1 = &unk_26C679798;
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3)
    {
LABEL_5:
      uint64_t v4 = (std::__shared_weak_count *)a1[2];
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_5;
    }
  }
  std::__shared_weak_count::__release_weak(v3);
  goto LABEL_5;
}

void *sub_215AFFE74(void *a1)
{
  uint64_t result = operator new(0x38uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C679798;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a1[4];
  result[3] = a1[3];
  result[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = a1[6];
  result[5] = a1[5];
  result[6] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_215AFFF00(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C679798;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = result[4];
  a2[3] = result[3];
  a2[4] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = result[6];
  a2[5] = result[5];
  a2[6] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215AFFF68(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = (std::__shared_weak_count *)a1[4];
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_215B0000C(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[6];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = (std::__shared_weak_count *)__p[4];
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = (std::__shared_weak_count *)__p[4];
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  uint64_t v4 = (std::__shared_weak_count *)__p[2];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }

  operator delete(__p);
}

void sub_215B000AC(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = (std::__shared_weak_count *)a1[2];
      uint64_t v5 = a1[3];
      if (!v4)
      {
LABEL_10:
        char v7 = 0;
        uint64_t v8 = 0;
        if (!v3) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v4 = (std::__shared_weak_count *)a1[2];
      if (!v4) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    uint64_t v4 = (std::__shared_weak_count *)a1[2];
    if (!v4) {
      goto LABEL_10;
    }
  }
  uint64_t v6 = std::__shared_weak_count::lock(v4);
  char v7 = v6;
  if (v6)
  {
    uint64_t v8 = a1[1];
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!v3) {
      goto LABEL_12;
    }
LABEL_11:
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    goto LABEL_12;
  }
  uint64_t v8 = 0;
  if (v3) {
    goto LABEL_11;
  }
LABEL_12:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v17, "Processor is no longer available.");
    v17.__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    uint64_t v13 = std::runtime_error::runtime_error(exception, &v17);
    v13->__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    __cxa_throw(v13, (struct type_info *)&unk_26C683710, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v16, "Message was dropped.");
    v16.__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    unsigned int v14 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    uint64_t v15 = std::runtime_error::runtime_error(v14, &v16);
    v15->__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    __cxa_throw(v15, (struct type_info *)&unk_26C683710, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  std::logic_error v9 = (uint64_t *)(v8 + 88);
  std::exception_ptr v10 = (std::runtime_error_vtbl **)a1[5];
  v16.__vftable = *v10;
  *std::exception_ptr v10 = 0;
  LOBYTE(v16.__imp_.__imp_) = 1;
  sub_215AFECB8(v9, v5, (uint64_t *)&v16);
  if (LOBYTE(v16.__imp_.__imp_)) {
    sub_215AFF2E4((uint64_t *)&v16);
  }
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  if (v7)
  {
    p_shared_owners = &v7->__shared_owners_;
    if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_22;
      }
LABEL_28:
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if (!v3) {
        return;
      }
      goto LABEL_23;
    }
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
      goto LABEL_28;
    }
  }
LABEL_22:
  if (!v3) {
    return;
  }
LABEL_23:
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215B00434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  if (v15)
  {
    if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    if (!atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_215B00460(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  std::runtime_error v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15) {
      JUMPOUT(0x215B001C8);
    }
    JUMPOUT(0x215B00188);
  }
  sub_215AFF27C(3u);
}

void sub_215B004BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  if (v16)
  {
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_215B004E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11) {
    sub_215AFF2E4(&a10);
  }
  if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215B00610(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatc"
                     "hIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessag"
                                "eAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B00680()
{
  return &unk_26C6797F8;
}

void *sub_215B0068C(void *a1)
{
  *a1 = &unk_26C679818;
  uint64_t v2 = (std::__shared_weak_count *)a1[9];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[4];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[2];
    if (!v5) {
      return a1;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (std::__shared_weak_count *)a1[2];
  if (v5) {
LABEL_10:
  }
    std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_215B007C8(void *a1)
{
  *a1 = &unk_26C679818;
  uint64_t v2 = (std::__shared_weak_count *)a1[9];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[4];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
    {
LABEL_11:
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    uint64_t v5 = (std::__shared_weak_count *)a1[2];
    if (!v5) {
      goto LABEL_11;
    }
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_11;
}

void *sub_215B00924(void *a1)
{
  uint64_t result = operator new(0x50uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C679818;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a1[4];
  result[3] = a1[3];
  result[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = a1[6];
  uint64_t v6 = a1[7];
  result[5] = &unk_26C678D20;
  result[6] = v7;
  result[7] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = a1[9];
  result[8] = a1[8];
  result[9] = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_215B009E8(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C679818;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = result[4];
  a2[3] = result[3];
  a2[4] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = result[6];
  uint64_t v5 = result[7];
  a2[5] = &unk_26C678D20;
  a2[6] = v6;
  a2[7] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = result[9];
  a2[8] = result[8];
  a2[9] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B00A88(uint64_t a1)
{
}

void sub_215B00A90(void *a1)
{
  sub_215B00D94(a1 + 1);

  operator delete(a1);
}

void sub_215B00ACC(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (uint64_t v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v8, "Invalid operation. Processor is released.");
    v8.__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    uint64_t v7 = std::runtime_error::runtime_error(exception, &v8);
    v7->__vftable = (std::runtime_error_vtbl *)&unk_26C6836F8;
    __cxa_throw(v7, (struct type_info *)&unk_26C683710, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  uint64_t v5 = (std::runtime_error_vtbl **)a1[8];
  v8.__vftable = *v5;
  std::__shared_weak_count *v5 = 0;
  LOBYTE(v8.__imp_.__imp_) = 1;
  sub_215AFECB8((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v8);
  if (LOBYTE(v8.__imp_.__imp_)) {
    sub_215AFF2E4((uint64_t *)&v8);
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215B00C24(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
}

void sub_215B00C9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11) {
    JUMPOUT(0x215B00CD0);
  }
  JUMPOUT(0x215B00D10);
}

uint64_t sub_215B00D18(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_N"
                                "St3__17promiseIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B00D88()
{
  return &unk_26C679878;
}

void sub_215B00D94(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = (std::__shared_weak_count *)a1[6];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v3 = (std::__shared_weak_count *)a1[6];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[3];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return;
    }
  }
  else
  {
    uint64_t v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return;
    }
  }

  std::__shared_weak_count::__release_weak(v5);
}

void *sub_215B00EC4(void *a1)
{
  uint64_t v2 = a1[3];
  a1[2] = &unk_26C679318;
  a1[3] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (std::__shared_weak_count *)a1[1];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void *sub_215B00F40(void *a1)
{
  *a1 = &unk_26C679898;
  uint64_t v2 = a1[4];
  a1[3] = &unk_26C679318;
  a1[4] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void sub_215B00FD8(void *a1)
{
  *a1 = &unk_26C679898;
  uint64_t v2 = a1[4];
  a1[3] = &unk_26C679318;
  a1[4] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  unint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B01090(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  unint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *uint64_t v2 = &unk_26C679898;
  v2[1] = v5;
  v2[2] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 16), 1uLL, memory_order_relaxed);
  }
  v2[3] = &unk_26C679318;
  (*(void (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32));
  return v3;
}

void sub_215B01140(_Unwind_Exception *a1)
{
  unint64_t v3 = (std::__shared_weak_count *)v1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215B01160(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  *a2 = &unk_26C679898;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  a2[3] = &unk_26C679318;
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32));
}

void sub_215B01200(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B01218(void *a1)
{
  uint64_t v2 = a1[4];
  a1[3] = &unk_26C679318;
  a1[4] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
  {
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215B012A8(void *__p)
{
  uint64_t v2 = __p[4];
  __p[3] = &unk_26C679318;
  __p[4] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)__p[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }

  operator delete(__p);
}

void sub_215B01334(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = a1[1];
      if (v5)
      {
        uint64_t v6 = operator new(0x20uLL);
        uint64_t v7 = a1[4];
        a1[4] = 0;
        v6[2] = &unk_26C679318;
        v6[3] = v7;
        uint64_t v9 = *(void *)(v5 + 96);
        std::runtime_error v8 = (void *)(v5 + 96);
        void *v6 = v9;
        v6[1] = v8;
        *(void *)(v9 + 8) = v6;
        *std::runtime_error v8 = v6;
        ++v8[2];
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215B01420(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B0146C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_1"
                                "2ChannelInputIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B014DC()
{
  return &unk_26C6798F8;
}

void *sub_215B014E8(void *a1)
{
  *a1 = &unk_26C679918;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B01534(void *a1)
{
  *a1 = &unk_26C679918;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B015A0(uint64_t a1)
{
  uint64_t result = operator new(0x20uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = &unk_26C679918;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215B015FC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C679918;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B01634(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B01644(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B01684(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5)
      {
        uint64_t v6 = operator new(0x18uLL);
        uint64_t v8 = *(void *)(v5 + 120);
        uint64_t v7 = (void *)(v5 + 120);
        void *v6 = v8;
        v6[1] = v7;
        *(void *)(v8 + 8) = v6;
        *uint64_t v7 = v6;
        ++v7[2];
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215B0173C(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B01788(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12Cha"
                     "nnelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandle"
                                "rENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B017F8()
{
  return &unk_26C679978;
}

void sub_215B01804(uint64_t a1)
{
  *(void *)a1 = MEMORY[0x263F8C320] + 16;
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_215B01870(uint64_t a1)
{
  *(void *)a1 = MEMORY[0x263F8C320] + 16;
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B018F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(void **)(a1 + 144);
    if (v2)
    {
      *(void *)(a1 + 152) = v2;
      operator delete(v2);
    }
  }
  unint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v3(a1);
}

void *sub_215B0195C(void *a1)
{
  *a1 = &unk_26C6799E0;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B019A8(void *a1)
{
  *a1 = &unk_26C6799E0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B01A14(void *a1)
{
  uint64_t result = operator new(0x20uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C6799E0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  result[3] = a1[3];
  return result;
}

void *sub_215B01A78(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C6799E0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  a2[3] = result[3];
  return result;
}

void sub_215B01AB8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B01AC8(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B01B08(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2) {
    return;
  }
  uint64_t v3 = std::__shared_weak_count::lock(v2);
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  uint64_t v5 = a1[1];
  if (v5)
  {
    uint64_t v6 = (uint64_t *)a1[3];
    unint64_t v7 = *(void *)(v5 + 112);
    int v37 = 0;
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    if (v7)
    {
      if (v7 >> 61) {
        sub_2157E81A4();
      }
      uint64_t v8 = (uint64_t *)operator new(8 * v7);
      uint64_t v9 = (char *)&v8[v7];
      uint64_t v36 = v8;
      int v37 = v8;
      uint64_t v38 = (uint64_t *)v9;
      uint64_t v10 = v5 + 96;
      uint64_t v11 = *(void *)(v5 + 104);
      char v12 = v8;
      if (v11 == v5 + 96)
      {
LABEL_33:
        __p[0] = v12;
        __p[1] = v8;
        __p[2] = v9;
        if (!*v6) {
          sub_215AFF27C(3u);
        }
        sub_215B01F0C(*v6, (uint64_t)__p);
        if (__p[0]) {
          operator delete(__p[0]);
        }
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      uint64_t v10 = v5 + 96;
      uint64_t v11 = *(void *)(v5 + 104);
      char v12 = 0;
      if (v11 == v5 + 96) {
        goto LABEL_33;
      }
    }
    char v33 = v6;
    uint64_t v34 = v4;
    while (1)
    {
      uint64_t v13 = (*(uint64_t (**)(void))(**(void **)(v11 + 24) + 48))(*(void *)(v11 + 24));
      uint64_t v14 = v13;
      uint64_t v15 = v37;
      uint64_t v9 = (char *)v38;
      if (v37 >= v38) {
        break;
      }
      *int v37 = v13;
      uint64_t v8 = v15 + 1;
LABEL_11:
      int v37 = v8;
      uint64_t v11 = *(void *)(v11 + 8);
      if (v11 == v10)
      {
        char v12 = v36;
        uint64_t v6 = v33;
        uint64_t v4 = v34;
        goto LABEL_33;
      }
    }
    std::runtime_error v16 = v36;
    std::runtime_error v17 = (char *)((char *)v37 - (char *)v36);
    uint64_t v18 = v37 - v36;
    unint64_t v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 61) {
      sub_2157E81A4();
    }
    if (((char *)v38 - (char *)v36) >> 2 > v19) {
      unint64_t v19 = ((char *)v38 - (char *)v36) >> 2;
    }
    if ((unint64_t)((char *)v38 - (char *)v36) >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v20 = v19;
    }
    if (v20)
    {
      if (v20 >> 61) {
        sub_215738AD8();
      }
      uint64_t v21 = (char *)operator new(8 * v20);
      char v22 = (uint64_t *)&v21[8 * v18];
      *char v22 = v14;
      uint64_t v8 = v22 + 1;
      int64_t v23 = (char *)v15 - (char *)v16;
      if (v15 == v16) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v21 = 0;
      char v22 = (uint64_t *)(8 * v18);
      *(void *)(8 * v18) = v14;
      uint64_t v8 = (uint64_t *)(8 * v18 + 8);
      int64_t v23 = (char *)v15 - (char *)v16;
      if (v15 == v16)
      {
LABEL_30:
        uint64_t v9 = &v21[8 * v20];
        uint64_t v36 = v22;
        uint64_t v38 = (uint64_t *)v9;
        if (v16) {
          operator delete(v16);
        }
        goto LABEL_11;
      }
    }
    unint64_t v24 = v23 - 8;
    if (v24 < 0x58) {
      goto LABEL_47;
    }
    if ((unint64_t)((char *)v15 - v21 - (void)v17) < 0x20) {
      goto LABEL_47;
    }
    uint64_t v25 = (v24 >> 3) + 1;
    uint64_t v26 = 8 * (v25 & 0x3FFFFFFFFFFFFFFCLL);
    uint64_t v27 = &v15[v26 / 0xFFFFFFFFFFFFFFF8];
    char v22 = (uint64_t *)((char *)v22 - v26);
    long long v28 = &v21[8 * v18 - 16];
    std::exception_ptr v29 = v15 - 2;
    uint64_t v30 = v25 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v31 = *(_OWORD *)v29;
      *((_OWORD *)v28 - 1) = *((_OWORD *)v29 - 1);
      *(_OWORD *)long long v28 = v31;
      v28 -= 32;
      v29 -= 4;
      v30 -= 4;
    }
    while (v30);
    uint64_t v15 = v27;
    if (v25 != (v25 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_47:
      do
      {
        uint64_t v32 = *--v15;
        *--char v22 = v32;
      }
      while (v15 != v16);
    }
    goto LABEL_30;
  }
LABEL_36:
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_215B01E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B01E90(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_215B01F00()
{
  return &unk_26C679A40;
}

void sub_215B01F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 136) & 1) != 0
    || (v6.__ptr_ = 0, uint64_t v5 = *(void *)(a1 + 16), std::exception_ptr::~exception_ptr(&v6), v5))
  {
    sub_215AFF27C(2u);
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)a2;
  *(void *)(a1 + 160) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_215B01FB4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B01FC8(uint64_t a1, uint64_t a2)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a2 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a2 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a2, &__lk);
  uint64_t v4 = *(void *)(a2 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a2 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 16) = *(void *)(a2 + 160);
    *(void *)(a2 + 152) = 0;
    *(void *)(a2 + 160) = 0;
    *(void *)(a2 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_215B02074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_215B020A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v10.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v10);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      std::exception_ptr v5 = std::future_category();
      MEMORY[0x2166C4330](&v8, 4, v5);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v7 = std::logic_error::logic_error(exception, &v8);
      v7->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C2E0] + 16);
      v7[1] = v9;
      __cxa_throw(v7, MEMORY[0x263F8C1A0], MEMORY[0x263F8C0C0]);
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void *sub_215B021FC(void *a1)
{
  *a1 = &unk_26C679A60;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B02248(void *a1)
{
  *a1 = &unk_26C679A60;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B022B4(void *a1)
{
  uint64_t result = operator new(0x20uLL);
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  *uint64_t result = &unk_26C679A60;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  result[3] = a1[3];
  return result;
}

void *sub_215B02318(void *result, void *a2)
{
  uint64_t v3 = result[1];
  uint64_t v2 = result[2];
  *a2 = &unk_26C679A60;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  a2[3] = result[3];
  return result;
}

void sub_215B02358(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B02368(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B023A8(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      if (a1[1])
      {
        std::exception_ptr v5 = (uint64_t *)a1[3];
        memset(__p, 0, sizeof(__p));
        if (!*v5) {
          sub_215AFF27C(3u);
        }
        sub_215B01F0C(*v5, (uint64_t)__p);
        if (__p[0]) {
          operator delete(__p[0]);
        }
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215B0247C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p)
  {
    operator delete(__p);
    if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    goto LABEL_3;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B024EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_215B0255C()
{
  return &unk_26C679AC0;
}

void sub_215B0256C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B025A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_215B025D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__sh"
                     "ared_ptr_default_deleteIS8_S8_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb"
                                "0EEEE27__shared_ptr_default_deleteIS8_S8_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__shared_ptr_default_deleteIS8_S8_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__shared_ptr_default_deleteIS8_S8_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215B02648(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B02678(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215B026C8()
{
}

void sub_215B0273C(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 32))(v5);
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215B02808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B0281C(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
      }
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_215B028E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215B028FC(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = std::__shared_weak_count::lock(v2);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 48))(v5);
    if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      return v6;
    }
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_215B029F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215B02A08(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = std::__shared_weak_count::lock(v2);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
    if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      return v6;
    }
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_215B02B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B02B14(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)(a1 + 8);
      if (v7) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 16))(v7, a2);
      }
      if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_215B02BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215B02C08(uint64_t a1)
{
  *(void *)a1 = &unk_26C679278;
  uint64_t v2 = (void *)(a1 + 72);
  if (*(void *)(a1 + 72))
  {
    unint64_t v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      atomic_fetch_add_explicit(&v3->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      uint64_t v4 = *(std::__shared_weak_count **)(a1 + 80);
      *uint64_t v2 = 0;
      *(void *)(a1 + 80) = 0;
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *uint64_t v2 = 0;
      *(void *)(a1 + 80) = 0;
    }
    uint64_t v5 = *(uint64_t ***)(a1 + 56);
    if (v5) {
      sub_215D082C4(*v5);
    }
    if (v3) {
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  *(void *)(a1 + 144) = &unk_26C679350;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 160);
  if (v6) {
    std::__shared_weak_count::__release_weak(v6);
  }
  *(void *)(a1 + 120) = &unk_26C6792E0;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 136);
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
  std::logic_error v8 = *(std::__shared_weak_count **)(a1 + 112);
  if (v8) {
    std::__shared_weak_count::__release_weak(v8);
  }
  uint64_t v9 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = &unk_26C6792A8;
  *(void *)(a1 + 96) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  std::exception_ptr v10 = *(std::__shared_weak_count **)(a1 + 80);
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  uint64_t v11 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v11 || atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      goto LABEL_27;
    }
LABEL_30:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_31;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_30;
  }
LABEL_27:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_31:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_215B02E7C(uint64_t a1)
{
  *(void *)a1 = &unk_26C679248;
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2)
  {
    uint64_t v3 = sub_215B02C08(v2);
    MEMORY[0x2166C4D20](v3, 0x10B2C4085F70915);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 64);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = *(void *)(a1 + 72);
    *(void *)(a1 + 72) = 0;
    if (!v5) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v5)
  {
LABEL_6:
    uint64_t v6 = sub_215B02C08(v5);
    MEMORY[0x2166C4D20](v6, 0x10B2C4085F70915);
  }
LABEL_7:
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v7 || atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_15:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_16;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_15;
  }
LABEL_10:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_16:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_215B02FE8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_215B02FE8(a1, *(void *)a2);
    sub_215B02FE8(a1, *(void *)(a2 + 8));
    uint64_t v4 = *(std::__shared_weak_count **)(a2 + 64);
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
      {
LABEL_5:
        uint64_t v5 = (void *)a2;
LABEL_7:
        operator delete(v5);
        return;
      }
    }
    else if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(*(void **)(a2 + 32));
    uint64_t v5 = (void *)a2;
    goto LABEL_7;
  }
}

void *sub_215B030BC(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  int64_t v5 = v4 - *a2;
  if (v4 != *a2)
  {
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * (v5 >> 3);
    if (v6 >= 0xAAAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    uint64_t v7 = (char *)operator new(v5);
    uint64_t v8 = 0;
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[24 * v6];
    do
    {
      uint64_t v9 = &v7[v8];
      uint64_t v11 = *(void *)(v3 + v8 + 8);
      uint64_t v10 = *(void *)(v3 + v8 + 16);
      *(void *)uint64_t v9 = &unk_26C678D20;
      *((void *)v9 + 1) = v11;
      *((void *)v9 + 2) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v8 += 24;
    }
    while (v3 + v8 != v4);
    a1[1] = &v7[v8];
  }
  return a1;
}

void sub_215B031A0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = (uint64_t)v1[1];
    int64_t v5 = *v1;
    if ((void *)v4 != v3)
    {
      do
        uint64_t v4 = sub_215AEFACC(v4 - 24);
      while ((void *)v4 != v3);
      int64_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

double sub_215B031E4(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)a2;
    uint64_t v3 = *(void *)(a2 + 8);
    if (v3 != *(void *)a2)
    {
      if (0xAAAAAAAAAAAAAAABLL * ((v3 - *(void *)a2) >> 3) > 0x2E8BA2E8BA2E8BALL) {
        sub_215738AC0();
      }
      size_t v4 = 0xAAAAAAAAAAAAAAC8 * ((v3 - *(void *)a2) >> 3);
      int64_t v5 = (char *)operator new(v4);
      unint64_t v6 = &v5[v4];
      uint64_t v7 = v5;
      uint64_t v40 = v3;
      while (1)
      {
        uint64_t v8 = sub_215990AC4(0);
        sub_215990288((uint64_t)v45, v2, v8);
        if (v7 < v6)
        {
          long long v9 = *(_OWORD *)&v45[8];
          uint64_t v10 = *(void *)&v45[24];
          v7[40] = 0;
          *((void *)v7 + 3) = v10;
          *(_OWORD *)(v7 + 8) = v9;
          memset(&v45[8], 0, 24);
          *((_DWORD *)v7 + 8) = v46;
          *((_DWORD *)v7 + 14) = -1;
          unsigned int v11 = v47;
          if (v47 != -1)
          {
            ((void (*)(char *))off_26C679598[v47])(&v44);
            *((_DWORD *)v7 + 14) = v11;
          }
          *((void *)v7 + 8) = 0;
          *((void *)v7 + 9) = 0;
          *((void *)v7 + 10) = 0;
          *((_OWORD *)v7 + 4) = *(_OWORD *)__p;
          *((void *)v7 + 10) = v49;
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v49 = 0;
          v7 += 88;
          uint64_t v12 = v47;
          if (v47 == -1) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }
        unint64_t v13 = 0x2E8BA2E8BA2E8BA3 * ((v7 - v5) >> 3) + 1;
        if (v13 > 0x2E8BA2E8BA2E8BALL) {
          sub_215738AC0();
        }
        if (0x5D1745D1745D1746 * ((v6 - v5) >> 3) > v13) {
          unint64_t v13 = 0x5D1745D1745D1746 * ((v6 - v5) >> 3);
        }
        if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((v6 - v5) >> 3)) >= 0x1745D1745D1745DLL) {
          unint64_t v14 = 0x2E8BA2E8BA2E8BALL;
        }
        else {
          unint64_t v14 = v13;
        }
        unint64_t v42 = v14;
        if (v14)
        {
          if (v14 > 0x2E8BA2E8BA2E8BALL) {
            sub_215738AD8();
          }
          uint64_t v15 = (char *)operator new(88 * v14);
        }
        else
        {
          uint64_t v15 = 0;
        }
        int v43 = v15;
        std::runtime_error v16 = &v15[8 * ((v7 - v5) >> 3)];
        *(_OWORD *)(v16 + 8) = *(_OWORD *)&v45[8];
        *((void *)v16 + 3) = *(void *)&v45[24];
        memset(&v45[8], 0, 24);
        uint64_t v17 = v47;
        *((_DWORD *)v16 + 8) = v46;
        v16[40] = 0;
        *((_DWORD *)v16 + 14) = -1;
        if (v17 != -1)
        {
          ((void (*)(char *, char *, char *))off_26C679598[v17])(&v44, v16 + 40, (char *)&v46 + 8);
          *((_DWORD *)v16 + 14) = v17;
        }
        uint64_t v18 = v43;
        unint64_t v19 = &v43[8 * ((v7 - v5) >> 3)];
        *((_OWORD *)v19 + 4) = *(_OWORD *)__p;
        *((void *)v19 + 10) = v49;
        __p[1] = 0;
        uint64_t v49 = 0;
        __p[0] = 0;
        if (v7 == v5)
        {
          int v41 = v16;
          unint64_t v31 = v42;
          if (v5) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v20 = 0;
          do
          {
            uint64_t v21 = &v16[v20];
            char v22 = &v7[v20];
            long long v23 = *(_OWORD *)&v7[v20 - 80];
            *((void *)v21 - 8) = *(void *)&v7[v20 - 64];
            *((_OWORD *)v21 - 5) = v23;
            *((void *)v22 - 9) = 0;
            *((void *)v22 - 8) = 0;
            *((void *)v22 - 10) = 0;
            *((_DWORD *)v21 - 14) = *(_DWORD *)&v7[v20 - 56];
            v16[v20 - 48] = 0;
            uint64_t v24 = (uint64_t)&v16[v20 - 48];
            *((_DWORD *)v21 - 8) = -1;
            uint64_t v25 = *(unsigned int *)&v7[v20 - 32];
            if (v25 != -1)
            {
              ((void (*)(char *, uint64_t, char *))off_26C679598[v25])(&v44, v24, v22 - 48);
              *((_DWORD *)v21 - 8) = v25;
            }
            *((void *)v21 - 3) = 0;
            *((void *)v21 - 2) = 0;
            *((void *)v21 - 1) = 0;
            *(_OWORD *)(v21 - 24) = *(_OWORD *)(v22 - 24);
            *((void *)v21 - 1) = *((void *)v22 - 1);
            *((void *)v22 - 3) = 0;
            *((void *)v22 - 2) = 0;
            *((void *)v22 - 1) = 0;
            v20 -= 88;
          }
          while (&v7[v20] != v5);
          int v41 = &v16[v20];
          do
          {
            uint64_t v26 = *((void *)v7 - 3);
            if (v26)
            {
              uint64_t v27 = *((void *)v7 - 2);
              long long v28 = (void *)*((void *)v7 - 3);
              if (v27 != v26)
              {
                do
                {
                  std::exception_ptr v29 = *(std::__shared_weak_count **)(v27 - 8);
                  if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                  {
                    ((void (*)(std::__shared_weak_count *, uint64_t))v29->__on_zero_shared)(v29, v24);
                    std::__shared_weak_count::__release_weak(v29);
                  }
                  v27 -= 16;
                }
                while (v27 != v26);
                long long v28 = (void *)*((void *)v7 - 3);
              }
              *((void *)v7 - 2) = v26;
              operator delete(v28);
            }
            uint64_t v30 = *((unsigned int *)v7 - 8);
            if (v30 != -1) {
              ((void (*)(char *, char *))off_26C679588[v30])(&v44, v7 - 48);
            }
            *((_DWORD *)v7 - 8) = -1;
            if (*(v7 - 57) < 0) {
              operator delete(*((void **)v7 - 10));
            }
            v7 -= 88;
          }
          while (v7 != v5);
          uint64_t v3 = v40;
          uint64_t v18 = v43;
          unint64_t v31 = v42;
          if (v5) {
LABEL_44:
          }
            operator delete(v5);
        }
        unint64_t v6 = &v18[88 * v31];
        uint64_t v7 = v16 + 88;
        uint64_t v32 = (char *)__p[0];
        if (__p[0])
        {
          char v33 = (char *)__p[1];
          uint64_t v34 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              int v35 = (std::__shared_weak_count *)*((void *)v33 - 1);
              if (v35 && !atomic_fetch_add(&v35->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                std::__shared_weak_count::__release_weak(v35);
              }
              v33 -= 16;
            }
            while (v33 != v32);
            uint64_t v34 = __p[0];
          }
          __p[1] = v32;
          operator delete(v34);
          int64_t v5 = v41;
          uint64_t v12 = v47;
          if (v47 == -1) {
            goto LABEL_59;
          }
LABEL_58:
          ((void (*)(char *, char *))off_26C679588[v12])(&v44, (char *)&v46 + 8);
          goto LABEL_59;
        }
        int64_t v5 = v41;
        uint64_t v12 = v47;
        if (v47 != -1) {
          goto LABEL_58;
        }
LABEL_59:
        unsigned int v47 = -1;
        if ((v45[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v45[8]);
        }
        v2 += 24;
        if (v2 == v3) {
          goto LABEL_63;
        }
      }
    }
    int64_t v5 = 0;
    uint64_t v7 = 0;
    unint64_t v6 = 0;
LABEL_63:
    *(void *)int v45 = v5;
    *(void *)&v45[8] = v7;
    *(void *)&v45[16] = v6;
    uint64_t v36 = sub_215990AC4(0);
    sub_2157BB1A4(&v45[24], v36);
    long long v37 = *(_OWORD *)&v45[16];
    *(_OWORD *)a1 = *(_OWORD *)v45;
    *(_OWORD *)(a1 + 16) = v37;
    double result = *(double *)&v46;
    *(_OWORD *)(a1 + 32) = v46;
    *(unsigned char *)(a1 + 48) = 1;
  }
  else
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 48) = 0;
  }
  return result;
}

void sub_215B037E4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t sub_215B03848(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 88;
    sub_215B0389C(i - 88);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_215B0389C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 72);
    size_t v4 = *(void **)(a1 + 64);
    if (v3 != v2)
    {
      do
      {
        int64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      size_t v4 = *(void **)(a1 + 64);
    }
    *(void *)(a1 + 72) = v2;
    operator delete(v4);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if (v6 != -1) {
    ((void (*)(char *, uint64_t))off_26C679588[v6])(&v7, a1 + 40);
  }
  *(_DWORD *)(a1 + 56) = -1;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
}

uint64_t sub_215B039AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(void *)(a1 + 24);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 32);
      size_t v4 = *(void **)(a1 + 24);
      if (v3 != v2)
      {
        do
        {
          int64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        size_t v4 = *(void **)(a1 + 24);
      }
      *(void *)(a1 + 32) = v2;
      operator delete(v4);
    }
    uint64_t v6 = *(void **)a1;
    if (*(void *)a1)
    {
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = *(void **)a1;
      if ((void *)v7 != v6)
      {
        do
        {
          v7 -= 88;
          sub_215B0389C(v7);
        }
        while ((void *)v7 != v6);
        uint64_t v8 = *(void **)a1;
      }
      *(void *)(a1 + 8) = v6;
      operator delete(v8);
    }
  }
  return a1;
}

void sub_215B03AA4()
{
}

void sub_215B03AB8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = (void *)*v1;
  unint64_t v3 = *(void *)(*v1 + 48);
  unint64_t v4 = *(void *)(*v1 + 56);
  BOOL v5 = v4 >= v3;
  unint64_t v6 = v4 - v3;
  if (!v5) {
    unint64_t v6 = 0;
  }
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    goto LABEL_21;
  }
  uint64_t v7 = v1[1];
  _DWORD v2[6] = v3 + 4;
  sub_215D02644(v2);
  sub_215A9E064((uint64_t)v20, v2, (_DWORD *)(v7 + 4));
  unint64_t v9 = v2[6];
  unint64_t v8 = v2[7];
  if (v8 <= v9)
  {
LABEL_20:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
LABEL_21:
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  int v10 = *(unsigned __int8 *)(v2[3] + v9);
  unint64_t v11 = v9 + 1;
  _DWORD v2[6] = v11;
  if (v10)
  {
    if (!*(unsigned char *)(v7 + 176))
    {
      *(_OWORD *)(v7 + 144) = 0u;
      *(_OWORD *)(v7 + 160) = 0u;
      *(_OWORD *)(v7 + 112) = 0u;
      *(_OWORD *)(v7 + 128) = 0u;
      *(_OWORD *)(v7 + 80) = 0u;
      *(_OWORD *)(v7 + 96) = 0u;
      *(_OWORD *)(v7 + 48) = 0u;
      *(_OWORD *)(v7 + 64) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      uint64_t v12 = sub_215990AC4(0);
      *(_OWORD *)(v7 + 64) = 0u;
      *(_DWORD *)(v7 + 112) = 0;
      *(_OWORD *)(v7 + 80) = 0u;
      *(_OWORD *)(v7 + 96) = 0u;
      sub_2157BB1A4((void *)(v7 + 120), v12);
      *(unsigned char *)(v7 + 144) = 0;
      *(unsigned char *)(v7 + 168) = 0;
      *(unsigned char *)(v7 + 176) = 1;
      unint64_t v11 = v2[6];
      unint64_t v8 = v2[7];
    }
    BOOL v5 = v8 >= v11;
    unint64_t v13 = v8 - v11;
    if (!v5) {
      unint64_t v13 = 0;
    }
    if (v13 > 3)
    {
      unsigned int v14 = *(_DWORD *)(v2[3] + v11);
      _DWORD v2[6] = v11 + 4;
      sub_215D02644(v2);
      if (v14 >= 2) {
        unsigned int v14 = 2;
      }
      sub_215D029A0(v2, v7 + 32);
      sub_215B03D88(v2, v7 + 56);
      if (v14 >= 2) {
        sub_2159B5724(v2, v7 + 144);
      }
      uint64_t v15 = v2[12];
      uint64_t v16 = v2[9];
      _DWORD v2[6] = *(void *)(v15 - 8) + *(void *)(v16 - 8) + 8;
      v2[9] = v16 - 8;
      v2[12] = v15 - 8;
      goto LABEL_18;
    }
    goto LABEL_20;
  }
  if (*(unsigned char *)(v7 + 176))
  {
    sub_215AFDF7C(v7 + 32);
    *(unsigned char *)(v7 + 176) = 0;
  }
LABEL_18:
  uint64_t v17 = v2[12];
  uint64_t v18 = v2[9];
  _DWORD v2[6] = *(void *)(v17 - 8) + *(void *)(v18 - 8) + 8;
  v2[9] = v18 - 8;
  v2[12] = v17 - 8;
}

void sub_215B03CD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v17 = *(unsigned int *)(v14 + 112);
  if (v17 != -1) {
    ((void (*)(char *, uint64_t))off_26C674850[v17])(&a13, v14 + 96);
  }
  *(_DWORD *)(v14 + 112) = -1;
  if (*(char *)(v14 + 87) < 0)
  {
    operator delete(*v15);
    if ((*(char *)(v14 + 55) & 0x80000000) == 0) {
LABEL_5:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v14 + 55) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(*v13);
  _Unwind_Resume(exception_object);
}

void sub_215B03D4C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215B03D60(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215B03D74(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215B03D88(void *a1, uint64_t a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  unint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  BOOL v4 = v3 >= v2;
  unint64_t v5 = v3 - v2;
  if (!v4) {
    unint64_t v5 = 0;
  }
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  unsigned int v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  if (v8 <= 1)
  {
    int v44 = 0;
    long long v43 = 0u;
    long long v42 = 0u;
    *(_OWORD *)int v41 = 0u;
    sub_2157BB1A4(&v45, (uint64_t *)(a2 + 64));
    sub_215B04390(a1, (uint64_t)v41);
    sub_21598FEFC((uint64_t)&v40);
    if (v44) {
      sub_215742D4C();
    }
    uint64_t v16 = v43;
    char v33 = &unk_26C674658;
    uint64_t v34 = (void *)v43;
    unint64_t v17 = a1[6];
    unint64_t v18 = a1[7];
    BOOL v4 = v18 >= v17;
    unint64_t v19 = v18 - v17;
    if (!v4) {
      unint64_t v19 = 0;
    }
    if (v19 <= 3)
    {
      unint64_t v31 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v31, "Not enough data to read");
      v31->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
      __cxa_throw(v31, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
    }
    uint64_t v20 = *(unsigned int *)(a1[3] + v17);
    a1[6] = v17 + 4;
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)v16 + 40))(v16, a1, v20);
    sub_215994890((uint64_t)&v33, (uint64_t)&v40);
    sub_2159949FC(a2, (uint64_t)&v33);
    uint64_t v21 = (char *)__p;
    if (__p)
    {
      char v22 = v39;
      long long v23 = __p;
      if (v39 != __p)
      {
        do
        {
          uint64_t v24 = (std::__shared_weak_count *)*((void *)v22 - 1);
          if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
          v22 -= 16;
        }
        while (v22 != v21);
        long long v23 = __p;
      }
      long long v39 = v21;
      operator delete(v23);
    }
    if (v37 != -1) {
      ((void (*)(char *, uint64_t *))off_26C679588[v37])(&v32, &v36);
    }
    int v37 = -1;
    if (v35 < 0) {
      operator delete(v34);
    }
    uint64_t v25 = v45;
    if (v45)
    {
      uint64_t v26 = v46;
      uint64_t v27 = v45;
      if (v46 != v45)
      {
        do
        {
          long long v28 = (std::__shared_weak_count *)*((void *)v26 - 1);
          if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
          v26 -= 16;
        }
        while (v26 != v25);
        uint64_t v27 = v45;
      }
      long long v46 = v25;
      operator delete(v27);
    }
    if (v44 != -1) {
      ((void (*)(void **, long long *))off_26C679588[v44])(&v33, &v43);
    }
    int v44 = -1;
    if (SBYTE7(v42) < 0) {
      operator delete(v41[0]);
    }
  }
  else
  {
    sub_215D02644(a1);
    sub_215B04390(a1, a2 + 8);
    sub_2159905B0(a2);
    if (*(_DWORD *)(a2 + 56)) {
      sub_215742D4C();
    }
    unint64_t v9 = *(void **)(a2 + 40);
    uint64_t v40 = &unk_26C6746A0;
    v41[0] = v9;
    unint64_t v10 = a1[6];
    unint64_t v11 = a1[7];
    BOOL v4 = v11 >= v10;
    unint64_t v12 = v11 - v10;
    if (!v4) {
      unint64_t v12 = 0;
    }
    if (v12 <= 3)
    {
      uint64_t v30 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_21573A000(v30, "Not enough data to read");
      __cxa_throw(v30, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
    }
    uint64_t v13 = *(unsigned int *)(a1[3] + v10);
    a1[6] = v10 + 4;
    sub_215D02644(a1);
    (*(void (**)(void *, void *, uint64_t))(*(void *)v41[0] + 40))(v41[0], a1, v13);
    uint64_t v14 = a1[12];
    uint64_t v15 = a1[9];
    a1[6] = *(void *)(v14 - 8) + *(void *)(v15 - 8) + 8;
    a1[6] = *(void *)(v14 - 16) + *(void *)(v15 - 16) + 8;
    a1[9] = v15 - 16;
    a1[12] = v14 - 16;
  }
}

void sub_215B0422C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int16 a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32)
{
  __cxa_free_exception(v32);
  uint64_t v35 = *(void *)(v33 + 64);
  if (v35)
  {
    uint64_t v36 = *(void *)(v33 + 72);
    int v37 = *(void **)(v33 + 64);
    if (v36 != v35)
    {
      do
      {
        uint64_t v38 = *(std::__shared_weak_count **)(v36 - 8);
        if (v38 && !atomic_fetch_add(&v38->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
        v36 -= 16;
      }
      while (v36 != v35);
      int v37 = *(void **)(v33 + 64);
    }
    *(void *)(v33 + 72) = v35;
    operator delete(v37);
  }
  uint64_t v39 = *(unsigned int *)(v33 + 56);
  if (v39 != -1) {
    ((void (*)(char *, uint64_t *))off_26C679588[v39])(&a12, &a32);
  }
  *(_DWORD *)(v33 + 56) = -1;
  if (a30 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215B04390(void *a1, uint64_t a2)
{
  unint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  BOOL v4 = v3 >= v2;
  unint64_t v5 = v3 - v2;
  if (!v4) {
    unint64_t v5 = 0;
  }
  if (v5 <= 3) {
    goto LABEL_20;
  }
  unsigned int v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  if (v8 > 1)
  {
    sub_215D02644(a1);
    sub_215D029A0(a1, a2);
    unint64_t v9 = a1[6];
    unint64_t v10 = a1[7];
    BOOL v4 = v10 >= v9;
    unint64_t v11 = v10 - v9;
    if (!v4) {
      unint64_t v11 = 0;
    }
    if (v11 > 3)
    {
      *(_DWORD *)(a2 + 24) = *(_DWORD *)(a1[3] + v9);
      a1[6] += 4;
      uint64_t v12 = a1[12];
      uint64_t v13 = a1[9];
      a1[6] = *(void *)(v12 - 8) + *(void *)(v13 - 8) + 8;
      a1[9] = v13 - 8;
      a1[12] = v12 - 8;
      return;
    }
LABEL_20:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21573A000(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  HIBYTE(v24) = 0;
  LOBYTE(__p[0]) = 0;
  int v25 = 0;
  sub_215D029A0(a1, (uint64_t)__p);
  unint64_t v15 = a1[6];
  unint64_t v14 = a1[7];
  BOOL v4 = v14 >= v15;
  unint64_t v16 = v14 - v15;
  if (!v4) {
    unint64_t v16 = 0;
  }
  if (v16 <= 3)
  {
    unint64_t v19 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v19, "Not enough data to read");
    v19->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
    __cxa_throw(v19, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  int v17 = *(_DWORD *)(a1[3] + v15);
  int v25 = v17;
  a1[6] = v15 + 4;
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    long long v20 = *(_OWORD *)__p;
    uint64_t v21 = v24;
    int v22 = v17;
    if ((*(char *)(a2 + 23) & 0x80000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  sub_215738B0C(&v20, __p[0], (unint64_t)__p[1]);
  int v17 = v25;
  int v22 = v25;
  if (*(char *)(a2 + 23) < 0)
  {
LABEL_15:
    operator delete(*(void **)a2);
    int v17 = v22;
  }
LABEL_16:
  *(_OWORD *)a2 = v20;
  *(void *)(a2 + 16) = v21;
  *(_DWORD *)(a2 + 24) = v17;
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
}

void sub_215B045BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B04614(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void *sub_215B046AC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_215B0473C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_215B047CC(void *a1)
{
  uint64_t v2 = a1 + 4;
  unint64_t v3 = (void *)a1[7];
  if (v3 != v2)
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    BOOL v4 = (void *)a1[3];
    if (v4 != a1) {
      goto LABEL_5;
    }
LABEL_9:
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  (*(void (**)(void *))(*v2 + 32))(v2);
  BOOL v4 = (void *)a1[3];
  if (v4 == a1) {
    goto LABEL_9;
  }
LABEL_5:
  if (v4) {
    (*(void (**)(void *))(*v4 + 40))(v4);
  }
  return a1;
}

uint64_t sub_215B048C8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1 + 16;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4 != a1 + 16) {
      goto LABEL_4;
    }
LABEL_8:
    (*(void (**)(uint64_t))(*(void *)v3 + 32))(v3);
    return a1;
  }
  uint64_t v3 = a1 + 16;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4 == a1 + 16) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
  return a1;
}

void sub_215B049B4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679BE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B049D4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679BE8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B04A30(void *a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_owners_ = 0;
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679BE8;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A030;
  uint64_t v4 = &v2[1].__vftable;
  unint64_t v5 = v2;
  sub_2158B2BE0(a1, (uint64_t)&v4, 1uLL);
  uint64_t v3 = v5;
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_215B04B74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_215733368((uint64_t)va1);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B04B90(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679C38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B04BB0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679C38;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B04C04(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 32);

  sub_215B04C44(v2);
}

void sub_215B04C44(uint64_t a1)
{
  if (a1)
  {
    sub_215B04C44(*(void *)a1);
    sub_215B04C44(*(void *)(a1 + 8));
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 72);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      {
LABEL_5:
        uint64_t v3 = (void *)a1;
LABEL_7:
        operator delete(v3);
        return;
      }
    }
    else if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(*(void **)(a1 + 32));
    uint64_t v3 = (void *)a1;
    goto LABEL_7;
  }
}

uint64_t sub_215B04D10(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = *(void *)(a2 + 40);
  if (v5)
  {
    if (v5 == a2 + 16)
    {
      *(void *)(a1 + 40) = v4;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 40) + 24))(*(void *)(a2 + 40), v4);
      uint64_t v6 = a1 + 48;
      uint64_t v7 = *(void *)(a2 + 72);
      if (!v7)
      {
LABEL_10:
        *(void *)(a1 + 72) = v7;
        goto LABEL_12;
      }
    }
    else
    {
      *(void *)(a1 + 40) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16))(v5);
      uint64_t v6 = a1 + 48;
      uint64_t v7 = *(void *)(a2 + 72);
      if (!v7) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    *(void *)(a1 + 40) = 0;
    uint64_t v6 = a1 + 48;
    uint64_t v7 = *(void *)(a2 + 72);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 != a2 + 48)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
    goto LABEL_10;
  }
  *(void *)(a1 + 72) = v6;
  (*(void (**)(void, uint64_t))(**(void **)(a2 + 72) + 24))(*(void *)(a2 + 72), v6);
LABEL_12:
  uint64_t v8 = *(void *)(a2 + 104);
  if (!v8)
  {
LABEL_15:
    *(void *)(a1 + 104) = v8;
    goto LABEL_17;
  }
  if (v8 != a2 + 80)
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 16))(v8);
    goto LABEL_15;
  }
  *(void *)(a1 + 104) = a1 + 80;
  (*(void (**)(void, uint64_t))(**(void **)(a2 + 104) + 24))(*(void *)(a2 + 104), a1 + 80);
LABEL_17:
  uint64_t v9 = *(void *)(a2 + 136);
  if (!v9)
  {
LABEL_20:
    *(void *)(a1 + 136) = v9;
    goto LABEL_22;
  }
  if (v9 != a2 + 112)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
    goto LABEL_20;
  }
  *(void *)(a1 + 136) = a1 + 112;
  (*(void (**)(void, uint64_t))(**(void **)(a2 + 136) + 24))(*(void *)(a2 + 136), a1 + 112);
LABEL_22:
  sub_2157BB1A4((void *)(a1 + 144), (uint64_t *)(a2 + 144));
  *(unsigned char *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  if (*(unsigned char *)(a2 + 200))
  {
    uint64_t v10 = *(void *)(a2 + 192);
    if (v10)
    {
      if (v10 == a2 + 168)
      {
        *(void *)(a1 + 192) = a1 + 168;
        (*(void (**)(void, uint64_t))(**(void **)(a2 + 192) + 24))(*(void *)(a2 + 192), a1 + 168);
        goto LABEL_28;
      }
      uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
    }
    *(void *)(a1 + 192) = v10;
LABEL_28:
    *(unsigned char *)(a1 + 200) = 1;
  }
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

void sub_215B04FEC(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v3 + 200))
  {
    uint64_t v9 = *(void *)(v3 + 192);
    if (v9 == v7)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 32))(v7);
    }
    else if (v9)
    {
      (*(void (**)(uint64_t))(*(void *)v9 + 40))(v9);
    }
  }
  sub_215831280(v6);
  sub_2157B0C80(v5);
  sub_2157B0950(v4);
  sub_215B046AC(v2);
  sub_215B0473C(v1);
  _Unwind_Resume(a1);
}

void *sub_215B050C8(void *a1)
{
  *a1 = &unk_26C679C88;
  sub_215B07980((uint64_t)(a1 + 1));
  return a1;
}

void sub_215B0510C(void *a1)
{
  *a1 = &unk_26C679C88;
  sub_215B07980((uint64_t)(a1 + 1));

  JUMPOUT(0x2166C4D20);
}

void *sub_215B05170(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0xE0uLL);
  *uint64_t v2 = &unk_26C679C88;
  sub_215B04D10((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_215B051C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215B051D8(uint64_t a1, void *a2)
{
  *a2 = &unk_26C679C88;
  return sub_215B04D10((uint64_t)(a2 + 1), a1 + 8);
}

uint64_t sub_215B05204(uint64_t a1)
{
  return sub_215B07980(a1 + 8);
}

void sub_215B0520C(void *a1)
{
  sub_215B07980((uint64_t)a1 + 8);

  operator delete(a1);
}

void sub_215B05248(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v151 = *MEMORY[0x263EF8340];
  uint64_t v114 = 0x500000001;
  int v115 = 0;
  uint64_t v116 = 1;
  int v117 = 0;
  HIBYTE(v132[2]) = 0;
  LOBYTE(v132[0]) = 0;
  long long v135 = 0u;
  long long v136 = 0u;
  LODWORD(v137) = 0;
  sub_2157BB1A4(&v138, (uint64_t *)(a1 + 152));
  LOBYTE(v140) = 0;
  LOBYTE(v142) = 0;
  long long v118 = *(_OWORD *)v132;
  uint64_t v6 = v132[2];
  memset(v132, 0, sizeof(v132));
  *(_OWORD *)&v120[8] = 0u;
  long long v119 = v6;
  uint64_t v121 = 0;
  long long v134 = 0uLL;
  *(void *)&long long v135 = 0;
  int v122 = 0;
  v123[0] = 0;
  int v124 = -1;
  ((void (*)(long long *, char *, long long *))off_26C679598[0])(&v100, v123, &v136);
  int v124 = 0;
  long long v125 = v138;
  unint64_t v126 = v139;
  char v139 = 0;
  long long v138 = 0uLL;
  LOBYTE(v127) = 0;
  char v129 = 0;
  if ((_BYTE)v142)
  {
    long long v127 = v140;
    unint64_t v128 = v141;
    unint64_t v141 = 0;
    long long v140 = 0uLL;
    char v129 = 1;
  }
  char v130 = 1;
  sub_215AFDF7C((uint64_t)v132);
  *(void *)&long long v100 = a3;
  *((void *)&v100 + 1) = &v113;
  *(void *)&long long v94 = &unk_26C679BA8;
  *((void *)&v94 + 1) = &v100;
  sub_215E12638((uint64_t)&v94, (uint64_t)v132);
  uint64_t v7 = (uint64_t *)(a1 + 8);
  if (BYTE8(v140))
  {
    if (!v130)
    {
      LOBYTE(v94) = 0;
      char v97 = 0;
      goto LABEL_73;
    }
    if (SHIBYTE(v119) < 0)
    {
      sub_215738B0C(__dst, (void *)v118, *((unint64_t *)&v118 + 1));
    }
    else
    {
      *(_OWORD *)std::string __dst = v118;
      *(void *)&__dst[16] = v119;
    }
    *(void **)((char *)&v132[1] + 7) = *(void **)&__dst[15];
    uint64_t v9 = *(void **)__dst;
    uint64_t v10 = *(void **)&__dst[8];
    unint64_t v11 = __dst[23];
    int v12 = __dst[23];
    memset(__dst, 0, sizeof(__dst));
    v132[1] = v10;
    v132[0] = v9;
    HIBYTE(v132[2]) = v11;
    LOBYTE(v133) = 0;
    LOBYTE(v135) = 0;
    uint64_t v13 = v132;
    if (v12 < 0)
    {
      uint64_t v13 = (void **)v9;
      unint64_t v11 = (unint64_t)v132[1];
    }
    if (!v11) {
      goto LABEL_64;
    }
    unint64_t v14 = v13;
    if (v11 < 8) {
      goto LABEL_92;
    }
    unint64_t v14 = (char *)v13 + (v11 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v15 = (char *)v13 + 3;
    unint64_t v16 = v11 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int8x8_t v17 = vceq_s8(*(int8x8_t *)(v15 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
      if (v17.i8[0])
      {
        *(v15 - 3) = 95;
        if ((v17.i8[1] & 1) == 0) {
          goto LABEL_48;
        }
      }
      else if ((v17.i8[1] & 1) == 0)
      {
LABEL_48:
        if (v17.i8[2]) {
          goto LABEL_49;
        }
        goto LABEL_57;
      }
      *(v15 - 2) = 95;
      if (v17.i8[2])
      {
LABEL_49:
        *(v15 - 1) = 95;
        if ((v17.i8[3] & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_58;
      }
LABEL_57:
      if ((v17.i8[3] & 1) == 0)
      {
LABEL_50:
        if (v17.i8[4]) {
          goto LABEL_51;
        }
        goto LABEL_59;
      }
LABEL_58:
      *unint64_t v15 = 95;
      if (v17.i8[4])
      {
LABEL_51:
        v15[1] = 95;
        if ((v17.i8[5] & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_60;
      }
LABEL_59:
      if ((v17.i8[5] & 1) == 0)
      {
LABEL_52:
        if (v17.i8[6]) {
          goto LABEL_53;
        }
        goto LABEL_61;
      }
LABEL_60:
      void v15[2] = 95;
      if (v17.i8[6])
      {
LABEL_53:
        v15[3] = 95;
        if (v17.i8[7]) {
          goto LABEL_62;
        }
        goto LABEL_45;
      }
LABEL_61:
      if (v17.i8[7]) {
LABEL_62:
      }
        v15[4] = 95;
LABEL_45:
      v15 += 8;
      v16 -= 8;
      if (!v16)
      {
        if (v11 == (v11 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_64;
        }
LABEL_92:
        uint64_t v27 = (char *)v13 + v11;
        do
        {
          if (*v14 == 58) {
            *unint64_t v14 = 95;
          }
          ++v14;
        }
        while (v14 != v27);
LABEL_64:
        sub_2159904A8((uint64_t)v120, &v98);
        sub_215989A54(&v100, (uint64_t)v132, (uint64_t)&v98);
        unint64_t v18 = v99;
        if (v99 && !atomic_fetch_add(&v99->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        if ((_BYTE)v135 && SHIBYTE(v134) < 0) {
          operator delete(v133);
        }
        if (SHIBYTE(v132[2]) < 0)
        {
          operator delete(v132[0]);
          if ((__dst[23] & 0x80000000) != 0) {
            goto LABEL_97;
          }
        }
        else
        {
          if ((__dst[23] & 0x80000000) == 0) {
            goto LABEL_72;
          }
LABEL_97:
          operator delete(*(void **)__dst);
        }
LABEL_72:
        long long v94 = v100;
        uint64_t v95 = &unk_26C678D20;
        long long v96 = v102;
        char v97 = 1;
LABEL_73:
        sub_215AF0948((uint64_t)&v95);
        unint64_t v19 = (void *)HIBYTE(v132[2]);
        if (SHIBYTE(v132[2]) < 0) {
          unint64_t v19 = v132[1];
        }
        if (v19 == (void *)8)
        {
          long long v20 = (void **)v132[0];
          if (SHIBYTE(v132[2]) >= 0) {
            long long v20 = v132;
          }
          BOOL v21 = *(void *)"cv3d.net" == (void)*v20;
          if ((SHIBYTE(v132[2]) & 0x80000000) == 0)
          {
LABEL_79:
            if (v21) {
              goto LABEL_80;
            }
LABEL_89:
            sub_215AF8844(v132, *v7, a2, 0, 0);
            uint64_t v25 = *(void *)(a1 + 48);
            if (!v25) {
              sub_21573D7DC();
            }
            (*(void (**)(uint64_t, void *, long long *))(*(void *)v25 + 48))(v25, v132[0], &v94);
            uint64_t v26 = (std::__shared_weak_count *)v132[1];
            if (!v132[1])
            {
LABEL_229:
              if (v97)
              {
                BOOL v84 = (std::__shared_weak_count *)*((void *)&v96 + 1);
                if (*((void *)&v96 + 1)
                  && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
                  std::__shared_weak_count::__release_weak(v84);
                }
                uint64_t v85 = (std::__shared_weak_count *)*((void *)&v94 + 1);
                if (*((void *)&v94 + 1)
                  && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v94 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
                  std::__shared_weak_count::__release_weak(v85);
                }
              }
              goto LABEL_236;
            }
LABEL_227:
            if (!atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
              std::__shared_weak_count::__release_weak(v26);
            }
            goto LABEL_229;
          }
        }
        else
        {
          BOOL v21 = 0;
          if ((SHIBYTE(v132[2]) & 0x80000000) == 0) {
            goto LABEL_79;
          }
        }
        operator delete(v132[0]);
        if (!v21) {
          goto LABEL_89;
        }
LABEL_80:
        sub_215AF0948((uint64_t)&v95);
        int v22 = (int)v133;
        if ((SHIBYTE(v132[2]) & 0x80000000) == 0)
        {
          if (v133 == 1) {
            goto LABEL_82;
          }
LABEL_99:
          sub_215AF8844(&v111, *v7, a2, 0, 0);
          sub_215AF0948((uint64_t)&v95);
          int v72 = (int)v133;
          if ((SHIBYTE(v132[2]) & 0x80000000) == 0)
          {
            if (v133 == 2) {
              goto LABEL_180;
            }
LABEL_186:
            sub_215AF0948((uint64_t)&v95);
            int v75 = (int)v133;
            if (SHIBYTE(v132[2]) < 0)
            {
              operator delete(v132[0]);
              if (v75 != 3) {
                goto LABEL_226;
              }
            }
            else if (v133 != 3)
            {
LABEL_226:
              uint64_t v26 = v112;
              if (!v112) {
                goto LABEL_229;
              }
              goto LABEL_227;
            }
            long long v79 = v96;
            if (*((void *)&v96 + 1)) {
              atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
            }
            if ((void)v79)
            {
              BOOL v80 = __dynamic_cast((const void *)v79, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6743E8, 0) != 0;
              if (!*((void *)&v79 + 1)) {
                goto LABEL_218;
              }
            }
            else
            {
              BOOL v80 = 0;
              if (!*((void *)&v79 + 1)) {
                goto LABEL_218;
              }
            }
            if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v79 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
            {
              (*(void (**)(void))(**((void **)&v79 + 1) + 16))(*((void *)&v79 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v79 + 1));
            }
LABEL_218:
            if (v80)
            {
              long long v81 = v96;
              if (!*((void *)&v96 + 1))
              {
                uint64_t v82 = v96 + 8;
                uint64_t v83 = *(void *)(a1 + 144);
                if (!v83) {
                  goto LABEL_240;
                }
                goto LABEL_225;
              }
              atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
              uint64_t v82 = v81 + 8;
              if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v81 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
              {
                (*(void (**)(void))(**((void **)&v81 + 1) + 16))(*((void *)&v81 + 1));
                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v81 + 1));
                uint64_t v83 = *(void *)(a1 + 144);
                if (!v83) {
LABEL_240:
                }
                  sub_21573D7DC();
LABEL_225:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v83 + 48))(v83, v111, v82);
                goto LABEL_226;
              }
            }
            else
            {
              uint64_t v82 = 8;
            }
            uint64_t v83 = *(void *)(a1 + 144);
            if (!v83) {
              goto LABEL_240;
            }
            goto LABEL_225;
          }
          operator delete(v132[0]);
          if (v72 != 2) {
            goto LABEL_186;
          }
LABEL_180:
          long long v73 = v96;
          if (*((void *)&v96 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          if ((void)v73)
          {
            BOOL v74 = __dynamic_cast((const void *)v73, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6744B8, 0) != 0;
            if (!*((void *)&v73 + 1))
            {
LABEL_191:
              if (v74) {
                goto LABEL_192;
              }
LABEL_210:
              uint64_t v77 = 8;
LABEL_211:
              uint64_t v78 = *(void *)(a1 + 80);
              if (v78) {
                goto LABEL_212;
              }
              goto LABEL_214;
            }
          }
          else
          {
            BOOL v74 = 0;
            if (!*((void *)&v73 + 1)) {
              goto LABEL_191;
            }
          }
          if (atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v73 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_191;
          }
          (*(void (**)(void))(**((void **)&v73 + 1) + 16))(*((void *)&v73 + 1));
          std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v73 + 1));
          if (!v74) {
            goto LABEL_210;
          }
LABEL_192:
          long long v76 = v96;
          if (*((void *)&v96 + 1))
          {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
            uint64_t v77 = v76 + 8;
            if (atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v76 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL)) {
              goto LABEL_211;
            }
            (*(void (**)(void))(**((void **)&v76 + 1) + 16))(*((void *)&v76 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v76 + 1));
            uint64_t v78 = *(void *)(a1 + 80);
            if (v78)
            {
LABEL_212:
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v78 + 48))(v78, v111, *v7, v77);
              goto LABEL_226;
            }
          }
          else
          {
            uint64_t v77 = v96 + 8;
            uint64_t v78 = *(void *)(a1 + 80);
            if (v78) {
              goto LABEL_212;
            }
          }
LABEL_214:
          sub_21573D7DC();
        }
        operator delete(v132[0]);
        if (v22 != 1) {
          goto LABEL_99;
        }
LABEL_82:
        uint64_t v93 = a2;
        long long v23 = v96;
        if (*((void *)&v96 + 1)) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
        }
        if ((void)v23)
        {
          BOOL v24 = __dynamic_cast((const void *)v23, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C675170, 0) != 0;
          if (!*((void *)&v23 + 1))
          {
LABEL_102:
            if (v24) {
              goto LABEL_103;
            }
LABEL_107:
            uint64_t v28 = 0;
            goto LABEL_108;
          }
        }
        else
        {
          BOOL v24 = 0;
          if (!*((void *)&v23 + 1)) {
            goto LABEL_102;
          }
        }
        if (atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v23 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_102;
        }
        (*(void (**)(void))(**((void **)&v23 + 1) + 16))(*((void *)&v23 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v23 + 1));
        if (!v24) {
          goto LABEL_107;
        }
LABEL_103:
        std::exception_ptr v29 = (std::__shared_weak_count *)*((void *)&v96 + 1);
        uint64_t v28 = v96;
        if (*((void *)&v96 + 1))
        {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v96 + 1) + 8), 1uLL, memory_order_relaxed);
          uint64_t v30 = v28 + 8;
          if (!atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        else
        {
LABEL_108:
          uint64_t v30 = v28 + 8;
        }
        uint64_t v31 = *v7;
        uint64_t v92 = (std::mutex *)(*(void *)(*v7 + 240) + 24);
        std::mutex::lock(v92);
        uint64_t v91 = (uint64_t *)(a1 + 8);
        LOBYTE(v132[0]) = 2;
        *(_OWORD *)&v132[1] = *(_OWORD *)v30;
        LODWORD(v133) = *(_DWORD *)(v30 + 16);
        LOBYTE(v134) = 0;
        BYTE8(v135) = 0;
        if (*(unsigned char *)(v30 + 48))
        {
          if (*(char *)(v30 + 47) < 0)
          {
            sub_215738B0C(&v134, *(void **)(v30 + 24), *(void *)(v30 + 32));
          }
          else
          {
            long long v32 = *(_OWORD *)(v30 + 24);
            *(void *)&long long v135 = *(void *)(v30 + 40);
            long long v134 = v32;
          }
          BYTE8(v135) = 1;
        }
        uint64_t v90 = a1;
        LOBYTE(v136) = 0;
        char v148 = 0;
        int v33 = *(unsigned __int8 *)(v30 + 200);
        if (*(unsigned char *)(v30 + 200))
        {
          sub_2157B6F84((char *)&v136, (long long *)(v30 + 56));
          char v148 = 1;
        }
        long long v34 = *(_OWORD *)(v30 + 208);
        uint64_t v150 = *(void *)(v30 + 224);
        long long v149 = v34;
        uint64_t v35 = (char *)operator new(0x108uLL);
        uint64_t v36 = v35;
        *((void *)v35 + 1) = 0;
        *((void *)v35 + 2) = 0;
        *(void *)uint64_t v35 = &unk_26C679FC0;
        v35[24] = (char)v132[0];
        uint64_t v89 = v35 + 24;
        *((_OWORD *)v35 + 2) = *(_OWORD *)&v132[1];
        *((_DWORD *)v35 + 12) = v133;
        v35[56] = 0;
        v35[80] = 0;
        if (BYTE8(v135))
        {
          *(_OWORD *)(v35 + 56) = v134;
          *((void *)v35 + 9) = v135;
          *(void *)&long long v135 = 0;
          long long v134 = 0uLL;
          v35[80] = 1;
        }
        v35[88] = 0;
        v35[232] = 0;
        if (v33)
        {
          *(_OWORD *)(v35 + 88) = v136;
          *((void *)v35 + 13) = v137;
          long long v137 = 0;
          long long v136 = 0uLL;
          *((_OWORD *)v35 + 7) = v138;
          int v37 = v141;
          *((void *)v35 + 16) = v139;
          long long v138 = 0uLL;
          *((void *)v35 + 19) = v37;
          *(_OWORD *)(v35 + 136) = v140;
          char v139 = 0;
          long long v140 = 0uLL;
          unint64_t v141 = 0;
          long long v38 = v142;
          uint64_t v39 = v145;
          *((void *)v35 + 22) = v143;
          *((_OWORD *)v35 + 10) = v38;
          long long v142 = 0uLL;
          long long v40 = v144;
          *((void *)v35 + 25) = v39;
          *(_OWORD *)(v35 + 184) = v40;
          size_t v143 = 0;
          long long v144 = 0uLL;
          uint64_t v145 = 0;
          long long v41 = v146;
          *((void *)v35 + 28) = v147;
          *((_OWORD *)v35 + 13) = v41;
          long long v146 = 0uLL;
          uint64_t v147 = 0;
          v35[232] = 1;
        }
        long long v42 = *(_OWORD *)(v30 + 208);
        *((void *)v35 + 32) = *(void *)(v30 + 224);
        *((_OWORD *)v35 + 15) = v42;
        long long v43 = *(uint64_t ***)(v31 + 240);
        int v45 = v43 + 1;
        int v44 = v43[1];
        if (!v44)
        {
          uint64_t v50 = (uint64_t *)(v43 + 1);
LABEL_156:
          uint64_t v65 = (char *)operator new(0x50uLL);
          uint64_t v66 = v65 + 32;
          long long v62 = v93;
          if (*((char *)v93 + 23) < 0)
          {
            sub_215738B0C(v66, (void *)*v93, (unint64_t)v93[1]);
          }
          else
          {
            *(_OWORD *)uint64_t v66 = *(_OWORD *)v93;
            *((void *)v65 + 6) = v93[2];
          }
          *((_WORD *)v65 + 28) = *((_WORD *)v93 + 12);
          *((void *)v65 + 8) = 0;
          *((void *)v65 + 9) = 0;
          *(void *)uint64_t v65 = 0;
          *((void *)v65 + 1) = 0;
          *((void *)v65 + 2) = v50;
          *int v45 = (uint64_t *)v65;
          uint64_t v67 = (uint64_t *)**v43;
          uint64_t v68 = (uint64_t *)v65;
          if (v67)
          {
            *long long v43 = v67;
            uint64_t v68 = *v45;
          }
          sub_21573B048(v43[1], v68);
          v43[2] = (uint64_t *)((char *)v43[2] + 1);
          uint64_t v63 = v92;
          unsigned __int8 v64 = (std::__shared_weak_count *)*((void *)v65 + 9);
          *((void *)v65 + 8) = v89;
          *((void *)v65 + 9) = v36;
          if (v64) {
            goto LABEL_162;
          }
          goto LABEL_164;
        }
        int v46 = *((char *)v93 + 23);
        if (v46 >= 0) {
          uint64_t v47 = v93;
        }
        else {
          uint64_t v47 = *v93;
        }
        if (v46 >= 0) {
          size_t v48 = *((unsigned __int8 *)v93 + 23);
        }
        else {
          size_t v48 = (size_t)v93[1];
        }
        unsigned int v49 = *((unsigned __int16 *)v93 + 12);
        while (1)
        {
          uint64_t v50 = v44;
          uint64_t v53 = (uint64_t *)v44[4];
          char v51 = v44 + 4;
          unint64_t v52 = v53;
          int v54 = *((char *)v51 + 23);
          if (v54 >= 0) {
            long long v55 = v51;
          }
          else {
            long long v55 = v52;
          }
          if (v54 >= 0) {
            size_t v56 = *((unsigned __int8 *)v51 + 23);
          }
          else {
            size_t v56 = v51[1];
          }
          if (v56 >= v48) {
            size_t v57 = v48;
          }
          else {
            size_t v57 = v56;
          }
          int v58 = memcmp(v47, v55, v57);
          if (v58)
          {
            if (v58 < 0) {
              goto LABEL_128;
            }
          }
          else if (v48 == v56)
          {
            if (v49 < *((unsigned __int16 *)v50 + 28)) {
              goto LABEL_128;
            }
          }
          else if (v48 < v56)
          {
LABEL_128:
            int v44 = (uint64_t *)*v50;
            int v45 = (uint64_t **)v50;
            if (!*v50) {
              goto LABEL_156;
            }
            continue;
          }
          int v59 = memcmp(v55, v47, v57);
          if (v59)
          {
            if ((v59 & 0x80000000) == 0) {
              goto LABEL_154;
            }
          }
          else
          {
            BOOL v60 = v56 >= v48;
            if (v56 == v48) {
              BOOL v60 = *((unsigned __int16 *)v50 + 28) >= v49;
            }
            if (v60)
            {
LABEL_154:
              uint64_t v61 = v50;
              long long v62 = v93;
              uint64_t v63 = v92;
              unsigned __int8 v64 = (std::__shared_weak_count *)v61[9];
              v61[8] = (uint64_t)v89;
              v61[9] = (uint64_t)v36;
              if (!v64) {
                goto LABEL_164;
              }
LABEL_162:
              if (!atomic_fetch_add(&v64->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                std::__shared_weak_count::__release_weak(v64);
              }
LABEL_164:
              if (!v148) {
                goto LABEL_171;
              }
              if (SHIBYTE(v147) < 0)
              {
                operator delete((void *)v146);
                if (SHIBYTE(v145) < 0) {
                  goto LABEL_203;
                }
LABEL_167:
                if ((SHIBYTE(v143) & 0x80000000) == 0) {
                  goto LABEL_168;
                }
LABEL_204:
                operator delete((void *)v142);
                if (SHIBYTE(v141) < 0) {
                  goto LABEL_205;
                }
LABEL_169:
                if ((SHIBYTE(v139) & 0x80000000) == 0) {
                  goto LABEL_170;
                }
LABEL_206:
                operator delete((void *)v138);
                if (SHIBYTE(v137) < 0) {
                  goto LABEL_207;
                }
LABEL_171:
                if (!BYTE8(v135))
                {
LABEL_174:
                  std::mutex::unlock(v63);
                  sub_215AF8844(&v111, *v91, v62, 0, 0);
                  *(void *)std::string __dst = 0x500000001;
                  v132[0] = (void *)1;
                  LODWORD(v132[1]) = 0;
                  *(void *)&long long v100 = 0x200000001;
                  *(_DWORD *)&__dst[8] = 0;
                  *(_DWORD *)&__dst[20] = 0;
                  *(void *)&__dst[12] = 0x200000001;
                  if (*(unsigned char *)(v90 + 16))
                  {
                    uint64_t v69 = *v91;
                    unint64_t v70 = *v91 & 0xFFFFFFFFFFFFFF00;
                    char v71 = 1;
                  }
                  else
                  {
                    unint64_t v70 = 0;
                    char v71 = 0;
                    LOBYTE(v69) = 0;
                  }
                  sub_215AEBEB4(v69 | v70, v71, (__n128 *)__dst, (uint64_t)v132);
                  sub_215AF76F8((uint64_t)v131, (long long *)v132);
                }
              }
              else
              {
                if ((SHIBYTE(v145) & 0x80000000) == 0) {
                  goto LABEL_167;
                }
LABEL_203:
                operator delete((void *)v144);
                if (SHIBYTE(v143) < 0) {
                  goto LABEL_204;
                }
LABEL_168:
                if ((SHIBYTE(v141) & 0x80000000) == 0) {
                  goto LABEL_169;
                }
LABEL_205:
                operator delete((void *)v140);
                if (SHIBYTE(v139) < 0) {
                  goto LABEL_206;
                }
LABEL_170:
                if ((SHIBYTE(v137) & 0x80000000) == 0) {
                  goto LABEL_171;
                }
LABEL_207:
                operator delete((void *)v136);
                if (!BYTE8(v135)) {
                  goto LABEL_174;
                }
              }
              if (SBYTE7(v135) < 0) {
                operator delete((void *)v134);
              }
              goto LABEL_174;
            }
          }
          int v44 = (uint64_t *)v50[1];
          if (!v44)
          {
            int v45 = (uint64_t **)(v50 + 1);
            goto LABEL_156;
          }
        }
      }
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EB20))
  {
    unint64_t v86 = sub_215AB74CC();
    qword_26788EB58 = 9;
    qword_26788EB60 = (uint64_t)v86;
    __cxa_guard_release(&qword_26788EB20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EB28))
  {
    unint64_t v87 = sub_215AB74CC();
    qword_26788EB68 = 10;
    qword_26788EB70 = (uint64_t)v87;
    __cxa_guard_release(&qword_26788EB28);
  }
  if (BYTE8(v140))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &unk_26C65A5B0;
    __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
  }
  long long v100 = *(_OWORD *)v132;
  sub_215741BFC(&v101, (long long *)&v132[2]);
  if (*((void *)&v100 + 1) == qword_26788EB60 && v100 == qword_26788EB58)
  {
    if (!*(unsigned char *)(a1 + 216))
    {
      unsigned int v8 = 5;
LABEL_19:
      sub_215AF92C0(a1 + 8, a2, (uint64_t)&v100, v8);
    }
  }
  else
  {
    unsigned int v8 = 7;
    if (*((void *)&v100 + 1) != qword_26788EB70 || v100 != qword_26788EB68) {
      goto LABEL_19;
    }
    if (!*(unsigned char *)(a1 + 216))
    {
      unsigned int v8 = 6;
      goto LABEL_19;
    }
  }
  if (v109)
  {
    if (v108)
    {
      if (v107 < 0) {
        operator delete(__p);
      }
      if (v105 < 0) {
        operator delete(v104);
      }
    }
    if (v103 && SHIBYTE(v102) < 0) {
      operator delete(v101);
    }
  }
  if (!BYTE8(v140) && (_BYTE)v140)
  {
    if ((_BYTE)v139)
    {
      if (SHIBYTE(v138) < 0) {
        operator delete(v137);
      }
      if (SBYTE7(v136) < 0) {
        operator delete((void *)v135);
      }
    }
    if (BYTE8(v134) && SBYTE7(v134) < 0) {
      operator delete(v132[2]);
    }
  }
LABEL_236:
  if (v130) {
    sub_215AFDF7C((uint64_t)&v118);
  }
}

void sub_215B06708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::mutex *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __cxa_guard_abort(&qword_26788EB28);
  if (!LOBYTE(STACK[0x280]) && LOBYTE(STACK[0x278]))
  {
    if (LOBYTE(STACK[0x270]))
    {
      if (SLOBYTE(STACK[0x26F]) < 0) {
        operator delete((void *)STACK[0x258]);
      }
      if (SLOBYTE(STACK[0x24F]) < 0) {
        operator delete((void *)STACK[0x238]);
      }
    }
    if (LOBYTE(STACK[0x230]) && SLOBYTE(STACK[0x22F]) < 0) {
      operator delete((void *)STACK[0x218]);
    }
  }
  if (!a70) {
    _Unwind_Resume(a1);
  }
  sub_215AFDF7C(a15);
  _Unwind_Resume(a1);
}

uint64_t sub_215B06D38(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3viz13NetworkServer7Private19ProcessReceivedDataE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"N4cv3d3kit3viz13NetworkServer7Private19ProcessReceivedDataE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3viz13NetworkServer7Private19ProcessReceivedDataE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3viz13NetworkServer7Private19ProcessReceivedDataE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B06DA8()
{
  return &unk_26C679CE8;
}

uint64_t sub_215B06DB4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a2 + 40;
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v5)
  {
    uint64_t v4 = a1 + 40;
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(void *)(a1 + 40) = v5;
LABEL_5:
    *(void *)uint64_t v4 = 0;
    goto LABEL_7;
  }
  *(void *)(a1 + 40) = a1 + 16;
  (*(void (**)(void))(**(void **)v4 + 24))();
LABEL_7:
  uint64_t v6 = a2 + 72;
  uint64_t v7 = *(void *)(a2 + 72);
  if (!v7)
  {
    uint64_t v6 = a1 + 72;
    goto LABEL_11;
  }
  if (v7 != a2 + 48)
  {
    *(void *)(a1 + 72) = v7;
LABEL_11:
    *(void *)uint64_t v6 = 0;
    goto LABEL_13;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)v6 + 24))();
LABEL_13:
  uint64_t v8 = a2 + 104;
  uint64_t v9 = *(void *)(a2 + 104);
  if (!v9)
  {
    uint64_t v8 = a1 + 104;
    goto LABEL_17;
  }
  if (v9 != a2 + 80)
  {
    *(void *)(a1 + 104) = v9;
LABEL_17:
    *(void *)uint64_t v8 = 0;
    goto LABEL_19;
  }
  *(void *)(a1 + 104) = a1 + 80;
  (*(void (**)(void))(**(void **)v8 + 24))();
LABEL_19:
  uint64_t v10 = a2 + 136;
  uint64_t v11 = *(void *)(a2 + 136);
  if (!v11)
  {
    uint64_t v10 = a1 + 136;
    goto LABEL_23;
  }
  if (v11 != a2 + 112)
  {
    *(void *)(a1 + 136) = v11;
LABEL_23:
    *(void *)uint64_t v10 = 0;
    goto LABEL_25;
  }
  *(void *)(a1 + 136) = a1 + 112;
  (*(void (**)(void))(**(void **)v10 + 24))();
LABEL_25:
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  if (*(unsigned char *)(a2 + 200))
  {
    uint64_t v12 = a2 + 192;
    uint64_t v13 = *(void *)(a2 + 192);
    if (v13)
    {
      if (v13 == a2 + 168)
      {
        *(void *)(a1 + 192) = a1 + 168;
        (*(void (**)(void))(**(void **)v12 + 24))();
        goto LABEL_32;
      }
      *(void *)(a1 + 192) = v13;
    }
    else
    {
      uint64_t v12 = a1 + 192;
    }
    *(void *)uint64_t v12 = 0;
LABEL_32:
    *(unsigned char *)(a1 + 200) = 1;
  }
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

void *sub_215B07004(void *a1)
{
  *a1 = &unk_26C679D08;
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3) {
      goto LABEL_4;
    }
LABEL_8:
    (*(void (**)(void *))(*v3 + 32))(v3);
    return a1;
  }
  unint64_t v3 = a1 + 3;
  uint64_t v4 = (void *)a1[6];
  if (v4 == a1 + 3) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4) {
    (*(void (**)(void *))(*v4 + 40))(v4);
  }
  return a1;
}

void sub_215B0710C(void *a1)
{
  *a1 = &unk_26C679D08;
  uint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    unint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3)
    {
LABEL_4:
      if (v4) {
        (*(void (**)(void *))(*v4 + 40))(v4);
      }
LABEL_8:
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    unint64_t v3 = a1 + 3;
    uint64_t v4 = (void *)a1[6];
    if (v4 != a1 + 3) {
      goto LABEL_4;
    }
  }
  (*(void (**)(void *))(*v3 + 32))(v3);
  goto LABEL_8;
}

char *sub_215B07228(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x48uLL);
  *(void *)uint64_t v2 = &unk_26C679D08;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3) {
    goto LABEL_4;
  }
  if (v3 != a1 + 24)
  {
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
LABEL_4:
    *((void *)v2 + 6) = v3;
    goto LABEL_6;
  }
  *((void *)v2 + 6) = v2 + 24;
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 64);
  *((void *)v2 + 7) = *(void *)(a1 + 56);
  *((void *)v2 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return v2;
}

void sub_215B07300(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215B07314(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C679D08;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    if (result == a1 + 24)
    {
      *(void *)(a2 + 48) = a2 + 24;
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 48) + 24))(*(void *)(a1 + 48));
      uint64_t v5 = *(void *)(a1 + 64);
      *(void *)(a2 + 56) = *(void *)(a1 + 56);
      *(void *)(a2 + 64) = v5;
      if (!v5) {
        return result;
      }
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      *(void *)(a2 + 48) = result;
      uint64_t v5 = *(void *)(a1 + 64);
      *(void *)(a2 + 56) = *(void *)(a1 + 56);
      *(void *)(a2 + 64) = v5;
      if (!v5) {
        return result;
      }
    }
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    uint64_t v5 = *(void *)(a1 + 64);
    *(void *)(a2 + 56) = *(void *)(a1 + 56);
    *(void *)(a2 + 64) = v5;
    if (!v5) {
      return result;
    }
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  return result;
}

uint64_t sub_215B07404(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1 + 24;
    uint64_t result = *(void *)(a1 + 48);
    if (result != a1 + 24)
    {
LABEL_4:
      if (result)
      {
        uint64_t v5 = *(uint64_t (**)(void))(*(void *)result + 40);
        return v5();
      }
      return result;
    }
  }
  else
  {
    uint64_t v3 = a1 + 24;
    uint64_t result = *(void *)(a1 + 48);
    if (result != a1 + 24) {
      goto LABEL_4;
    }
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 32);

  return v6(v3);
}

void sub_215B0750C(char *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)__p + 8);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = __p + 24;
    uint64_t v4 = (char *)*((void *)__p + 6);
    if (v4 != __p + 24) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v3 = __p + 24;
    uint64_t v4 = (char *)*((void *)__p + 6);
    if (v4 != __p + 24)
    {
LABEL_4:
      if (v4) {
        (*(void (**)(char *))(*(void *)v4 + 40))(v4);
      }
      uint64_t v5 = __p;
      goto LABEL_8;
    }
  }
  (*(void (**)(char *))(*(void *)v3 + 32))(v3);
  uint64_t v5 = __p;

LABEL_8:
  operator delete(v5);
}

void sub_215B07618(uint64_t a1, const void **a2, unsigned __int8 *a3)
{
  int v31 = *a3;
  uint64_t v5 = (std::mutex *)(*(void *)(*(void *)(a1 + 8) + 240) + 24);
  long long v34 = v5;
  char v35 = 1;
  std::mutex::lock(v5);
  uint64_t v30 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(v30 + 240);
  uint64_t v9 = *(uint64_t **)(v6 + 8);
  uint64_t v7 = (uint64_t *)(v6 + 8);
  uint64_t v8 = v9;
  if (!v9) {
    goto LABEL_50;
  }
  int v10 = *((char *)a2 + 23);
  if (v10 >= 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = *a2;
  }
  if (v10 >= 0) {
    size_t v12 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v12 = (size_t)a2[1];
  }
  unsigned int v13 = *((unsigned __int16 *)a2 + 12);
  unint64_t v14 = v7;
  do
  {
    int v15 = *((char *)v8 + 55);
    if (v15 >= 0) {
      unint64_t v16 = v8 + 4;
    }
    else {
      unint64_t v16 = (const void *)v8[4];
    }
    if (v15 >= 0) {
      size_t v17 = *((unsigned __int8 *)v8 + 55);
    }
    else {
      size_t v17 = v8[5];
    }
    if (v12 >= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v12;
    }
    int v19 = memcmp(v16, v11, v18);
    if (v19)
    {
      if (v19 < 0) {
        goto LABEL_9;
      }
LABEL_22:
      unint64_t v14 = v8;
      goto LABEL_10;
    }
    if (v17 != v12)
    {
      if (v17 < v12)
      {
LABEL_9:
        ++v8;
        goto LABEL_10;
      }
      goto LABEL_22;
    }
    if (*((unsigned __int16 *)v8 + 28) < v13) {
      ++v8;
    }
    else {
      unint64_t v14 = v8;
    }
LABEL_10:
    uint64_t v8 = (uint64_t *)*v8;
  }
  while (v8);
  if (v14 == v7) {
    goto LABEL_50;
  }
  int v20 = *((char *)v14 + 55);
  if (v20 >= 0) {
    BOOL v21 = v14 + 4;
  }
  else {
    BOOL v21 = (const void *)v14[4];
  }
  if (v20 >= 0) {
    size_t v22 = *((unsigned __int8 *)v14 + 55);
  }
  else {
    size_t v22 = v14[5];
  }
  if (v22 >= v12) {
    size_t v23 = v12;
  }
  else {
    size_t v23 = v22;
  }
  int v24 = memcmp(v11, v21, v23);
  if (v24)
  {
    if ((v24 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_50:
    char v25 = v31;
    if (v31 != 1) {
      goto LABEL_51;
    }
LABEL_58:
    std::mutex::unlock(v5);
  }
  else
  {
    BOOL v27 = v12 >= v22;
    if (v12 == v22) {
      BOOL v27 = v13 >= *((unsigned __int16 *)v14 + 28);
    }
    if (!v27) {
      goto LABEL_50;
    }
LABEL_41:
    char v25 = v31;
    if (v31 == 1 && v14 == v7) {
      goto LABEL_58;
    }
LABEL_51:
    sub_215AF8844(&v32, v30, a2, (uint64_t)&v34, 1u);
    if (v35)
    {
      std::mutex::unlock(v34);
      char v35 = 0;
      char v36 = v25;
      uint64_t v28 = *(void *)(a1 + 48);
      if (!v28) {
        sub_21573D7DC();
      }
      (*(void (**)(uint64_t, uint64_t, char *))(*(void *)v28 + 48))(v28, v32, &v36);
      std::exception_ptr v29 = v33;
      if (v33)
      {
        if (!atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v35)
      {
        uint64_t v5 = v34;
        goto LABEL_58;
      }
    }
    else
    {
      std::__throw_system_error(1, "unique_lock::unlock: not locked");
      __break(1u);
    }
  }
}

void sub_215B07898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::mutex *a14, char a15)
{
  if (a15) {
    std::mutex::unlock(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B07904(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3viz13NetworkServer7Private24ForwardConnectionChangedE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"N4cv3d3kit3viz13NetworkServer7Private24ForwardConnectionChangedE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3viz13NetworkServer7Private24ForwardConnectionChangedE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3viz13NetworkServer7Private24ForwardConnectionChangedE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B07974()
{
  return &unk_26C679D68;
}

uint64_t sub_215B07980(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 200))
  {
    uint64_t v2 = a1 + 168;
    uint64_t v3 = *(void *)(a1 + 192);
    if (v3 == a1 + 168)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 168);
      uint64_t v4 = *(char **)(a1 + 144);
      if (!v4) {
        goto LABEL_14;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  uint64_t v4 = *(char **)(a1 + 144);
  if (!v4) {
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v5 = *(char **)(a1 + 152);
  uint64_t v6 = v4;
  if (v5 != v4)
  {
    do
    {
      uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 1);
      if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
      v5 -= 16;
    }
    while (v5 != v4);
    uint64_t v6 = *(char **)(a1 + 144);
  }
  *(void *)(a1 + 152) = v4;
  operator delete(v6);
LABEL_14:
  uint64_t v8 = *(void *)(a1 + 136);
  if (v8 == a1 + 112)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 32))(a1 + 112);
    uint64_t v9 = a1 + 80;
    uint64_t v10 = *(void *)(a1 + 104);
    if (v10 != a1 + 80) {
      goto LABEL_18;
    }
LABEL_28:
    (*(void (**)(uint64_t))(*(void *)v9 + 32))(v9);
    uint64_t v11 = a1 + 48;
    uint64_t v12 = *(void *)(a1 + 72);
    if (v12 != a1 + 48) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 40))(v8);
  }
  uint64_t v9 = a1 + 80;
  uint64_t v10 = *(void *)(a1 + 104);
  if (v10 == a1 + 80) {
    goto LABEL_28;
  }
LABEL_18:
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 40))(v10);
  }
  uint64_t v11 = a1 + 48;
  uint64_t v12 = *(void *)(a1 + 72);
  if (v12 != a1 + 48)
  {
LABEL_21:
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 40))(v12);
    }
    uint64_t v13 = a1 + 16;
    uint64_t v14 = *(void *)(a1 + 40);
    if (v14 != a1 + 16) {
      goto LABEL_24;
    }
LABEL_30:
    (*(void (**)(uint64_t))(*(void *)v13 + 32))(v13);
    return a1;
  }
LABEL_29:
  (*(void (**)(uint64_t))(*(void *)v11 + 32))(v11);
  uint64_t v13 = a1 + 16;
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14 == a1 + 16) {
    goto LABEL_30;
  }
LABEL_24:
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 40))(v14);
  }
  return a1;
}

void *sub_215B07C70(void *a1)
{
  *a1 = &unk_26C679178;
  uint64_t v2 = a1[40];
  a1[40] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[39];
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    uint64_t v4 = a1 + 34;
    uint64_t v5 = (void *)a1[37];
    if (v5 != a1 + 34)
    {
LABEL_6:
      if (v5) {
        (*(void (**)(void *))(*v5 + 40))(v5);
      }
      uint64_t v6 = (std::__shared_weak_count *)a1[31];
      if (!v6) {
        goto LABEL_9;
      }
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = a1 + 34;
    uint64_t v5 = (void *)a1[37];
    if (v5 != a1 + 34) {
      goto LABEL_6;
    }
  }
  (*(void (**)(void *))(*v4 + 32))(v4);
  uint64_t v6 = (std::__shared_weak_count *)a1[31];
  if (!v6)
  {
LABEL_9:
    sub_215B07980((uint64_t)(a1 + 3));
    return a1;
  }
LABEL_12:
  if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_9;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  sub_215B07980((uint64_t)(a1 + 3));
  return a1;
}

void sub_215B07E08(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679D88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B07E28(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679D88;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B07E7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 320) && (sub_2157B69B0(a1 + 144), *(unsigned char *)(a1 + 136)) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    uint64_t v2 = (std::mutex *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (std::mutex *)(a1 + 24);
  }
  std::mutex::~mutex(v2);
}

uint64_t sub_215B07EFC(uint64_t a1)
{
  *(void *)a1 = &unk_26C679DD8;
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = a1 + 24;
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3 == a1 + 24)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 24);
      uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v4) {
        return a1;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v4) {
    return a1;
  }
LABEL_6:
  if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_215B08008(uint64_t a1)
{
  *(void *)a1 = &unk_26C679DD8;
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = a1 + 24;
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3 == a1 + 24)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 24);
      uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v4) {
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v4) {
    goto LABEL_9;
  }
LABEL_6:
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
LABEL_9:

  JUMPOUT(0x2166C4D20);
}

void *sub_215B08124(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x40uLL);
  *uint64_t v2 = &unk_26C679DD8;
  sub_215AF73EC((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_215B08178(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215B0818C(uint64_t a1, void *a2)
{
  *a2 = &unk_26C679DD8;
  return sub_215AF73EC((uint64_t)(a2 + 1), a1 + 8);
}

void sub_215B081B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = a1 + 24;
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3 == a1 + 24)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 24);
      uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v4) {
        return;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v4) {
    return;
  }
LABEL_6:
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_215B082A8(unsigned char *__p)
{
  if (!__p[56]) {
    goto LABEL_5;
  }
  uint64_t v2 = __p + 24;
  uint64_t v3 = (unsigned char *)*((void *)__p + 6);
  if (v3 != __p + 24)
  {
    if (v3) {
      (*(void (**)(unsigned char *))(*(void *)v3 + 40))(v3);
    }
LABEL_5:
    uint64_t v4 = (std::__shared_weak_count *)*((void *)__p + 2);
    if (!v4) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *))(*(void *)v2 + 32))(__p + 24);
  uint64_t v4 = (std::__shared_weak_count *)*((void *)__p + 2);
  if (!v4)
  {
LABEL_7:
    uint64_t v5 = __p;
    goto LABEL_9;
  }
LABEL_6:
  if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  uint64_t v5 = __p;

LABEL_9:
  operator delete(v5);
}

void sub_215B083B8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v132 = *MEMORY[0x263EF8340];
  sub_215B04A30(__p);
  uint64_t v118 = 0x500000001;
  int v119 = 0;
  uint64_t v120 = 1;
  int v121 = 0;
  memset(__s2, 0, 24);
  sub_2157BB1A4(&__s2[24], (uint64_t *)__p);
  *(_OWORD *)int v122 = *(_OWORD *)__s2;
  *(_OWORD *)long long v123 = *(_OWORD *)&__s2[16];
  long long v124 = *(_OWORD *)&__s2[32];
  unsigned __int8 v125 = 1;
  uint64_t v4 = (char *)__p[0];
  if (__p[0])
  {
    uint64_t v5 = (char *)__p[1];
    uint64_t v6 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 1);
        if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v5 -= 16;
      }
      while (v5 != v4);
      uint64_t v6 = __p[0];
    }
    __p[1] = v4;
    operator delete(v6);
  }
  unint64_t v8 = a3[6];
  unint64_t v9 = a3[7];
  BOOL v10 = v9 >= v8;
  unint64_t v11 = v9 - v8;
  if (!v10) {
    unint64_t v11 = 0;
  }
  if (v11 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read");
    goto LABEL_192;
  }
  a3[6] = v8 + 4;
  sub_215D02644(a3);
  sub_215A9E064((uint64_t)__s2, a3, &v118);
  unint64_t v14 = a3[6];
  unint64_t v13 = a3[7];
  if (v13 <= v14) {
    goto LABEL_191;
  }
  int v15 = *(unsigned __int8 *)(a3[3] + v14);
  unint64_t v16 = v14 + 1;
  a3[6] = v16;
  if (!v15)
  {
    if (v125)
    {
      char v25 = (char *)v123[1];
      if (v123[1])
      {
        uint64_t v26 = (char *)v124;
        BOOL v27 = v123[1];
        if ((void *)v124 != v123[1])
        {
          do
          {
            uint64_t v28 = (std::__shared_weak_count *)*((void *)v26 - 1);
            if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
            v26 -= 16;
          }
          while (v26 != v25);
          BOOL v27 = v123[1];
        }
        *(void *)&long long v124 = v25;
        operator delete(v27);
      }
      int v54 = (char *)v122[0];
      if (v122[0])
      {
        long long v55 = (char *)v122[1];
        size_t v56 = v122[0];
        if (v122[1] != v122[0])
        {
          do
          {
            v55 -= 88;
            sub_215B0389C((uint64_t)v55);
          }
          while (v55 != v54);
          size_t v56 = v122[0];
        }
        v122[1] = v54;
        operator delete(v56);
      }
      unsigned __int8 v125 = 0;
    }
    int v53 = 0;
    uint64_t v47 = a3[12];
    uint64_t v51 = a3[9];
    goto LABEL_82;
  }
  if (!v125)
  {
    *(_OWORD *)long long v123 = 0u;
    long long v124 = 0u;
    *(_OWORD *)int v122 = 0u;
    size_t v17 = sub_215990AC4(0);
    sub_2157BB1A4(&v123[1], v17);
    unsigned __int8 v125 = 1;
    unint64_t v16 = a3[6];
    unint64_t v13 = a3[7];
  }
  BOOL v10 = v13 >= v16;
  unint64_t v18 = v13 - v16;
  if (!v10) {
    unint64_t v18 = 0;
  }
  if (v18 <= 3) {
    goto LABEL_191;
  }
  a3[6] = v16 + 4;
  sub_215D02644(a3);
  unint64_t v19 = a3[6];
  unint64_t v20 = a3[7];
  BOOL v10 = v20 >= v19;
  unint64_t v21 = v20 - v19;
  if (!v10) {
    unint64_t v21 = 0;
  }
  if (v21 <= 7)
  {
LABEL_191:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read");
LABEL_192:
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
  }
  unint64_t v22 = *(void *)(a3[3] + v19);
  a3[6] = v19 + 8;
  size_t v23 = (char *)v122[1];
  unint64_t v24 = 0x2E8BA2E8BA2E8BA3 * (((char *)v122[1] - (char *)v122[0]) >> 3);
  unint64_t v113 = v22;
  unint64_t v12 = v22 - v24;
  if (v22 > v24)
  {
    sub_215B0973C(v122, v12);
LABEL_38:
    uint64_t v30 = 0;
    while (1)
    {
      int v129 = 0;
      memset(&__s2[8], 0, 48);
      sub_2157BB1A4(&v130, (uint64_t *)&v123[1]);
      int v31 = a3;
      sub_215B03D88(a3, (uint64_t)__s2);
      uint64_t v32 = (char *)v122[0];
      int v33 = (char *)v122[0] + 88 * v30;
      if (v33 != __s2)
      {
        long long v34 = (void **)(v33 + 8);
        if (v33[31] < 0)
        {
          if (__s2[31] >= 0) {
            char v36 = &__s2[8];
          }
          else {
            char v36 = *(unsigned char **)&__s2[8];
          }
          if (__s2[31] >= 0) {
            size_t v37 = __s2[31];
          }
          else {
            size_t v37 = *(void *)&__s2[16];
          }
          sub_21573ABD0(v34, v36, v37);
        }
        else if ((__s2[31] & 0x80) != 0)
        {
          sub_21573AB08(v34, *(void **)&__s2[8], *(size_t *)&__s2[16]);
        }
        else
        {
          long long v35 = *(_OWORD *)&__s2[8];
          *((void *)v33 + 3) = *(void *)&__s2[24];
          *(_OWORD *)long long v34 = v35;
        }
      }
      long long v38 = &v32[88 * v30];
      unsigned int v41 = *((_DWORD *)v38 + 14);
      long long v40 = v38 + 56;
      uint64_t v39 = v41;
      *(v40 - 6) = *(_DWORD *)&__s2[32];
      unint64_t v12 = (unint64_t)(v40 - 4);
      if (v41 == -1)
      {
        if (v129 != -1)
        {
LABEL_56:
          __p[0] = v40 - 4;
          ((void (*)(void **))off_26C679E38[v129])(__p);
        }
      }
      else
      {
        if (v129 != -1) {
          goto LABEL_56;
        }
        ((void (*)(void **, unint64_t))off_26C679588[v39])(__p, v12);
        *long long v40 = -1;
      }
      if (v33 != __s2) {
        sub_215ACEB28((uint64_t)&v32[88 * v30 + 64], v130, v131, (v131 - (unsigned char *)v130) >> 4);
      }
      long long v42 = (char *)v130;
      if (v130)
      {
        long long v43 = v131;
        int v44 = v130;
        if (v131 != v130)
        {
          do
          {
            int v45 = (std::__shared_weak_count *)*((void *)v43 - 1);
            if (v45 && !atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
              std::__shared_weak_count::__release_weak(v45);
            }
            v43 -= 16;
          }
          while (v43 != v42);
          int v44 = v130;
        }
        uint64_t v131 = v42;
        operator delete(v44);
      }
      if (v129 != -1) {
        ((void (*)(void **, unsigned char *))off_26C679588[v129])(__p, &__s2[40]);
      }
      int v129 = -1;
      a3 = v31;
      if ((__s2[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__s2[8]);
      }
      if (++v30 == v113) {
        goto LABEL_72;
      }
    }
  }
  if (v22 < v24)
  {
    std::exception_ptr v29 = (char *)v122[0] + 88 * v22;
    if (v122[1] != v29)
    {
      do
      {
        v23 -= 88;
        sub_215B0389C((uint64_t)v23);
      }
      while (v23 != v29);
    }
    v122[1] = v29;
  }
  if (v113) {
    goto LABEL_38;
  }
LABEL_72:
  uint64_t v46 = a3[12];
  uint64_t v49 = *(void *)(v46 - 8);
  uint64_t v47 = v46 - 8;
  uint64_t v48 = v49;
  uint64_t v50 = a3[9];
  uint64_t v52 = *(void *)(v50 - 8);
  uint64_t v51 = v50 - 8;
  a3[6] = v48 + v52 + 8;
  a3[9] = v51;
  a3[12] = v47;
  int v53 = v125;
LABEL_82:
  a3[6] = *(void *)(v47 - 8) + *(void *)(v51 - 8) + 8;
  a3[9] = v51 - 8;
  a3[12] = v47 - 8;
  if (v53)
  {
    int v58 = (char *)v122[0];
    size_t v57 = (char *)v122[1];
    memset(__p, 0, sizeof(__p));
    long long v59 = 0uLL;
    int64_t v60 = (char *)v122[1] - (char *)v122[0];
    if (v122[1] != v122[0])
    {
      unint64_t v61 = 0x2E8BA2E8BA2E8BA3 * (v60 >> 3);
      if (v61 > 0xAAAAAAAAAAAAAAALL) {
        sub_215738AC0();
      }
      __p[0] = operator new(0x5D1745D1745D1748 * (v60 >> 3));
      __p[1] = __p[0];
      __p[2] = (char *)__p[0] + 24 * v61;
      do
      {
        sub_2159904A8((uint64_t)v58, __s2);
        long long v62 = (char *)__p[1];
        if (__p[1] >= __p[2])
        {
          unsigned __int8 v64 = (char *)__p[0];
          unint64_t v65 = 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3);
          unint64_t v66 = v65 + 1;
          if (v65 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_215738AC0();
          }
          if (0x5555555555555556 * (((char *)__p[2] - (char *)__p[0]) >> 3) > v66) {
            unint64_t v66 = 0x5555555555555556 * (((char *)__p[2] - (char *)__p[0]) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * (((char *)__p[2] - (char *)__p[0]) >> 3) >= 0x555555555555555) {
            unint64_t v67 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v67 = v66;
          }
          if (v67 > 0xAAAAAAAAAAAAAAALL) {
            sub_215738AD8();
          }
          uint64_t v68 = (char *)operator new(24 * v67);
          uint64_t v69 = &v68[24 * v65];
          *(void *)uint64_t v69 = &unk_26C678D20;
          *(_OWORD *)(v69 + 8) = *(_OWORD *)&__s2[8];
          unint64_t v70 = &v68[24 * v67];
          *(void *)&__s2[8] = 0;
          *(void *)&__s2[16] = 0;
          uint64_t v63 = v69 + 24;
          if (v62 == v64)
          {
            __p[0] = &v68[24 * v65];
            __p[1] = v69 + 24;
            __p[2] = v70;
          }
          else
          {
            uint64_t v71 = 0;
            do
            {
              int v72 = &v69[v71];
              *((void *)v72 - 3) = &unk_26C678D20;
              long long v73 = &v62[v71];
              *((_OWORD *)v72 - 1) = *(_OWORD *)&v62[v71 - 16];
              *((void *)v73 - 2) = 0;
              *((void *)v73 - 1) = 0;
              v71 -= 24;
            }
            while (&v62[v71] != v64);
            long long v62 = (char *)__p[0];
            BOOL v74 = (char *)__p[1];
            __p[0] = &v69[v71];
            __p[1] = v69 + 24;
            __p[2] = v70;
            while (v74 != v62)
            {
              int v75 = (std::__shared_weak_count *)*((void *)v74 - 1);
              if (v75 && !atomic_fetch_add(&v75->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                std::__shared_weak_count::__release_weak(v75);
              }
              v74 -= 24;
            }
          }
          if (v62) {
            operator delete(v62);
          }
        }
        else
        {
          *(void *)__p[1] = &unk_26C678D20;
          *(_OWORD *)(v62 + 8) = *(_OWORD *)&__s2[8];
          *(void *)&__s2[8] = 0;
          *(void *)&__s2[16] = 0;
          uint64_t v63 = v62 + 24;
        }
        __p[1] = v63;
        long long v76 = *(std::__shared_weak_count **)&__s2[16];
        if (*(void *)&__s2[16]
          && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&__s2[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
        v58 += 88;
      }
      while (v58 != v57);
      long long v59 = *(_OWORD *)__p;
      int64_t v60 = (int64_t)__p[2];
    }
    *(_OWORD *)std::unique_lock<std::mutex> __s2 = v59;
    *(void *)&__s2[16] = v60;
    sub_215B030BC(__p, (uint64_t *)__s2);
    uint64_t v77 = *(void *)__s2;
    if (*(void *)__s2)
    {
      uint64_t v78 = *(void *)&__s2[8];
      long long v79 = *(void **)__s2;
      if (*(void *)&__s2[8] != *(void *)__s2)
      {
        do
        {
          BOOL v80 = *(std::__shared_weak_count **)(v78 - 8);
          if (v80 && !atomic_fetch_add(&v80->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
            std::__shared_weak_count::__release_weak(v80);
          }
          v78 -= 24;
        }
        while (v78 != v77);
        long long v79 = *(void **)__s2;
      }
      *(void *)&__s2[8] = v77;
      operator delete(v79);
    }
    long long v81 = (char *)__p[0];
    int v115 = __p[0];
    long long v116 = *(_OWORD *)&__p[1];
    char v117 = 1;
    uint64_t v82 = (char *)__p[1];
    uint64_t v83 = a1;
    if (__p[0] != __p[1])
    {
      while (1)
      {
        sub_215AF0948((uint64_t)v81);
        BOOL v84 = 0;
        strcpy(__s2, "cv3d.net");
        __s2[23] = 8;
        *(_DWORD *)&__s2[24] = 1;
        __s2[32] = 1;
        char v85 = HIBYTE(__p[2]);
        if (SHIBYTE(__p[2]) >= 0) {
          unint64_t v86 = (void *)HIBYTE(__p[2]);
        }
        else {
          unint64_t v86 = __p[1];
        }
        if (v86 != (void *)8) {
          goto LABEL_138;
        }
        if ((HIBYTE(__p[2]) & 0x80) != 0) {
          break;
        }
        if (!HIBYTE(__p[2])) {
          goto LABEL_137;
        }
        unint64_t v87 = __p;
        uint64_t v88 = __s2;
        uint64_t v89 = HIBYTE(__p[2]);
        while (*(unsigned __int8 *)v87 == *v88)
        {
          unint64_t v87 = (void **)((char *)v87 + 1);
          ++v88;
          if (!--v89) {
            goto LABEL_137;
          }
        }
        BOOL v84 = 0;
        if ((HIBYTE(__p[2]) & 0x80) == 0)
        {
LABEL_139:
          if (v84) {
            goto LABEL_143;
          }
          goto LABEL_124;
        }
LABEL_142:
        operator delete(__p[0]);
        if (v84)
        {
LABEL_143:
          uint64_t v91 = (const void *)*((void *)v81 + 1);
          uint64_t v92 = (std::__shared_weak_count *)*((void *)v81 + 2);
          if (v92) {
            atomic_fetch_add_explicit(&v92->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          if (v91)
          {
            BOOL v93 = __dynamic_cast(v91, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C675170, 0) != 0;
            if (!v92)
            {
LABEL_150:
              if (v93) {
                goto LABEL_151;
              }
LABEL_155:
              uint64_t v94 = 0;
              goto LABEL_156;
            }
          }
          else
          {
            BOOL v93 = 0;
            if (!v92) {
              goto LABEL_150;
            }
          }
          if (atomic_fetch_add(&v92->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_150;
          }
          ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
          std::__shared_weak_count::__release_weak(v92);
          if (!v93) {
            goto LABEL_155;
          }
LABEL_151:
          uint64_t v94 = *((void *)v81 + 1);
          uint64_t v95 = (std::__shared_weak_count *)*((void *)v81 + 2);
          if (v95)
          {
            atomic_fetch_add_explicit(&v95->__shared_owners_, 1uLL, memory_order_relaxed);
            uint64_t v96 = v94 + 8;
            uint64_t v97 = a1;
            if (!atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
              std::__shared_weak_count::__release_weak(v95);
            }
          }
          else
          {
LABEL_156:
            uint64_t v97 = a1;
            uint64_t v96 = v94 + 8;
          }
          int v98 = *(std::mutex **)(v97 + 8);
          std::mutex::lock(v98);
          uint64_t v99 = *(void *)(v97 + 8);
          if (!*(unsigned char *)(v99 + 296))
          {
            sub_2159891A8(v99 + 64, v96);
            *(unsigned char *)(v99 + 296) = 1;
          }
          std::mutex::unlock(v98);
        }
LABEL_124:
        v81 += 24;
        uint64_t v83 = a1;
        if (v81 == v82) {
          goto LABEL_159;
        }
      }
      uint64_t v90 = __p[0];
      if (memcmp(__p[0], __s2, (size_t)__p[1]))
      {
        operator delete(v90);
        goto LABEL_124;
      }
LABEL_137:
      BOOL v84 = v127 == 1;
LABEL_138:
      if ((v85 & 0x80) == 0) {
        goto LABEL_139;
      }
      goto LABEL_142;
    }
LABEL_159:
    if (*(unsigned char *)(v83 + 56))
    {
      uint64_t v100 = *(void *)(v83 + 48);
      if (!v100) {
        sub_21573D7DC();
      }
      (*(void (**)(uint64_t, void **))(*(void *)v100 + 48))(v100, &v115);
    }
    if (v117)
    {
      char v101 = (char *)v115;
      if (v115)
      {
        long long v102 = (char *)v116;
        char v103 = v115;
        if ((void *)v116 != v115)
        {
          do
          {
            uint64_t v104 = (std::__shared_weak_count *)*((void *)v102 - 1);
            if (v104 && !atomic_fetch_add(&v104->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
              std::__shared_weak_count::__release_weak(v104);
            }
            v102 -= 24;
          }
          while (v102 != v101);
          char v103 = v115;
        }
        *(void *)&long long v116 = v101;
        operator delete(v103);
      }
    }
  }
  if (v125)
  {
    char v105 = (char *)v123[1];
    if (v123[1])
    {
      unint64_t v106 = (char *)v124;
      char v107 = v123[1];
      if ((void *)v124 != v123[1])
      {
        do
        {
          char v108 = (std::__shared_weak_count *)*((void *)v106 - 1);
          if (v108 && !atomic_fetch_add(&v108->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *, unint64_t))v108->__on_zero_shared)(v108, v12);
            std::__shared_weak_count::__release_weak(v108);
          }
          v106 -= 16;
        }
        while (v106 != v105);
        char v107 = v123[1];
      }
      *(void *)&long long v124 = v105;
      operator delete(v107);
    }
    char v109 = (char *)v122[0];
    if (v122[0])
    {
      BOOL v110 = (char *)v122[1];
      uint64_t v111 = v122[0];
      if (v122[1] != v122[0])
      {
        do
        {
          v110 -= 88;
          sub_215B0389C((uint64_t)v110);
        }
        while (v110 != v109);
        uint64_t v111 = v122[0];
      }
      v122[1] = v109;
      operator delete(v111);
    }
  }
}

void sub_215B0914C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22,char *a23,uint64_t a24,char *__p,char *a26,uint64_t a27,char a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,void *a44,uint64_t a45)
{
  __cxa_free_exception(v45);
  if (a28)
  {
    if (__p)
    {
      uint64_t v47 = a26;
      uint64_t v48 = __p;
      if (a26 != __p)
      {
        do
        {
          uint64_t v49 = (std::__shared_weak_count *)*((void *)v47 - 1);
          if (v49 && !atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v49);
          }
          v47 -= 16;
        }
        while (v47 != __p);
        uint64_t v48 = __p;
      }
      operator delete(v48);
    }
    if (a22)
    {
      uint64_t v50 = a23;
      uint64_t v51 = a22;
      if (a23 != a22)
      {
        do
        {
          v50 -= 88;
          sub_215B0389C((uint64_t)v50);
        }
        while (v50 != a22);
        uint64_t v51 = a22;
      }
      operator delete(v51);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215B096C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B09730()
{
  return &unk_26C679E48;
}

void sub_215B0973C(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (0x2E8BA2E8BA2E8BA3 * ((v4 - v5) >> 3) >= a2)
  {
    if (a2)
    {
      uint64_t v11 = 0;
      unint64_t v12 = &v5[88 * a2];
      uint64_t v13 = 88 * a2;
      do
      {
        unint64_t v14 = sub_215990AC4(0);
        int v15 = &v5[v11];
        *((_DWORD *)v15 + 14) = 0;
        *(_OWORD *)(v15 + 40) = 0u;
        *(_OWORD *)(v15 + 24) = 0u;
        *(_OWORD *)(v15 + 8) = 0u;
        sub_2157BB1A4(&v5[v11 + 64], v14);
        v11 += 88;
      }
      while (v13 != v11);
    }
    else
    {
      unint64_t v12 = (char *)a1[1];
    }
    a1[1] = v12;
  }
  else
  {
    uint64_t v6 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (unsigned char *)*a1) >> 3);
    unint64_t v7 = v6 + a2;
    if (v6 + a2 > 0x2E8BA2E8BA2E8BALL) {
      sub_215738AC0();
    }
    unint64_t v8 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (unsigned char *)*a1) >> 3);
    if (2 * v8 > v7) {
      unint64_t v7 = 2 * v8;
    }
    if (v8 >= 0x1745D1745D1745DLL) {
      unint64_t v9 = 0x2E8BA2E8BA2E8BALL;
    }
    else {
      unint64_t v9 = v7;
    }
    if (v9)
    {
      if (v9 > 0x2E8BA2E8BA2E8BALL) {
        sub_215738AD8();
      }
      BOOL v10 = (char *)operator new(88 * v9);
    }
    else
    {
      BOOL v10 = 0;
    }
    uint64_t v16 = 0;
    size_t v17 = &v10[88 * v6];
    int v31 = v17;
    int v33 = &v10[88 * v9];
    uint64_t v18 = 88 * a2;
    unint64_t v19 = &v17[v18];
    do
    {
      unint64_t v20 = sub_215990AC4(0);
      unint64_t v21 = &v17[v16];
      *((_DWORD *)v21 + 14) = 0;
      *(_OWORD *)(v21 + 40) = 0u;
      *(_OWORD *)(v21 + 24) = 0u;
      *(_OWORD *)(v21 + 8) = 0u;
      sub_2157BB1A4(&v17[v16 + 64], v20);
      v16 += 88;
    }
    while (v18 != v16);
    uint64_t v32 = &v17[v18];
    size_t v23 = (char *)*a1;
    unint64_t v22 = (char *)a1[1];
    unint64_t v24 = v17;
    if (v22 == *a1)
    {
      uint64_t v30 = (char *)a1[1];
    }
    else
    {
      uint64_t v25 = 0;
      do
      {
        uint64_t v26 = &v31[v25];
        BOOL v27 = &v22[v25];
        long long v28 = *(_OWORD *)&v22[v25 - 80];
        *((void *)v26 - 8) = *(void *)&v22[v25 - 64];
        *((_OWORD *)v26 - 5) = v28;
        *((void *)v27 - 9) = 0;
        *((void *)v27 - 8) = 0;
        *((void *)v27 - 10) = 0;
        *((_DWORD *)v26 - 14) = *(_DWORD *)&v22[v25 - 56];
        v31[v25 - 48] = 0;
        *((_DWORD *)v26 - 8) = -1;
        uint64_t v29 = *(unsigned int *)&v22[v25 - 32];
        if (v29 != -1)
        {
          ((void (*)(char *, char *, char *))off_26C679598[v29])(&v34, &v31[v25 - 48], v27 - 48);
          *((_DWORD *)v26 - 8) = v29;
        }
        *((void *)v26 - 3) = 0;
        *((void *)v26 - 2) = 0;
        *((void *)v26 - 1) = 0;
        *(_OWORD *)(v26 - 24) = *(_OWORD *)(v27 - 24);
        *((void *)v26 - 1) = *((void *)v27 - 1);
        *((void *)v27 - 3) = 0;
        *((void *)v27 - 2) = 0;
        *((void *)v27 - 1) = 0;
        v25 -= 88;
      }
      while (&v22[v25] != v23);
      uint64_t v30 = (char *)*a1;
      unint64_t v22 = (char *)a1[1];
      unint64_t v24 = &v31[v25];
      unint64_t v19 = v32;
    }
    *a1 = v24;
    a1[1] = v19;
    a1[2] = v33;
    if (v22 != v30)
    {
      do
      {
        sub_215B0389C((uint64_t)(v22 - 88));
        v22 -= 88;
      }
      while (v22 != v30);
      unint64_t v22 = v30;
    }
    if (v22) {
      operator delete(v22);
    }
  }
}

void sub_215B09A18(_Unwind_Exception *exception_object, ...)
{
  va_start(va, exception_object);
  uint64_t v6 = *(unsigned int *)(v4 + 56);
  if (v6 != -1) {
    ((void (*)(uint64_t *, uint64_t))off_26C674850[v6])((uint64_t *)va, v2 + v3 + 40);
  }
  *(_DWORD *)(v4 + 56) = -1;
  if (*(char *)(v4 + 31) < 0)
  {
    operator delete(*(void **)(v4 + 8));
    *(void *)(v1 + 8) = v2 + v3;
    _Unwind_Resume(exception_object);
  }
  *(void *)(v1 + 8) = v2 + v3;
  _Unwind_Resume(exception_object);
}

void sub_215B09A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v21 = *(unsigned int *)(v19 + 56);
  if (v21 != -1) {
    ((void (*)(char *, uint64_t))off_26C674850[v21])(&a17, v18 + v17 + 40);
  }
  *(_DWORD *)(v19 + 56) = -1;
  if (*(char *)(v19 + 31) < 0)
  {
    operator delete(*(void **)(v19 + 8));
    a11 = v18 + v17;
    sub_215B03848((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  a11 = v18 + v17;
  sub_215B03848((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215B09B00(uint64_t *a1, void *a2, uint64_t *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 16);
  if (v5 != -1)
  {
    if (!v5)
    {
      uint64_t v7 = *a3;
      uint64_t v6 = a3[1];
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      unint64_t v8 = (std::__shared_weak_count *)a2[1];
      *a2 = v7;
      a2[1] = v6;
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      return;
    }
    ((void (*)(char *, uint64_t))off_26C679588[v5])(&v10, v4);
  }
  *(_DWORD *)(v4 + 16) = -1;
  uint64_t v9 = a3[1];
  *(void *)uint64_t v4 = *a3;
  *(void *)(v4 + 8) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(_DWORD *)(v4 + 16) = 0;
}

void sub_215B09C08(uint64_t *a1, void *a2, uint64_t *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned int *)(*a1 + 16);
  if (v5 != -1)
  {
    if (v5 == 1)
    {
      uint64_t v7 = *a3;
      uint64_t v6 = a3[1];
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      unint64_t v8 = (std::__shared_weak_count *)a2[1];
      *a2 = v7;
      a2[1] = v6;
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      return;
    }
    ((void (*)(char *, uint64_t))off_26C679588[v5])(&v10, v4);
  }
  *(_DWORD *)(v4 + 16) = -1;
  uint64_t v9 = a3[1];
  *(void *)uint64_t v4 = *a3;
  *(void *)(v4 + 8) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(_DWORD *)(v4 + 16) = 1;
}

uint64_t sub_215B09D18(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_215B09DAC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 == v1)
  {
    (*(void (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215B09E54()
{
}

void sub_215B09F38(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10A1C400AA0B987);
  _Unwind_Resume(a1);
}

void sub_215B09F5C()
{
}

void sub_215B09FA4()
{
}

uint64_t sub_215B09FEC()
{
  return 1;
}

uint64_t sub_215B09FF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ChannelInputModel.h", 301, (uint64_t)"processor_", 10, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v2 = *(void *)(a1 + 32);
    if (!v2) {
      sub_21573D7DC();
    }
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 48);

  return v3();
}

void sub_215B0A0A8()
{
}

void *sub_215B0A0BC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_26C679EE0;
  result[1] = v3;
  return result;
}

uint64_t sub_215B0A104(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26C679EE0;
  a2[1] = v2;
  return result;
}

void sub_215B0A130(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v1 + 184));
  atomic_fetch_add((atomic_uint *volatile)(v1 + 128), 0xFFFFFFFF);
  std::condition_variable::notify_one((std::condition_variable *)(v1 + 136));

  std::mutex::unlock((std::mutex *)(v1 + 184));
}

uint64_t sub_215B0A184(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B0A1F4()
{
  return &unk_26C679F50;
}

void sub_215B0A200(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679F70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0A220(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679F70;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B0A274(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 144) + 72) + 72);
  (*(void (**)(uint64_t))(*(void *)v2 + 64))(v2);
  std::mutex::~mutex((std::mutex *)(a1 + 208));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 160));
  uint64_t v3 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  if (!*(unsigned char *)(a1 + 104))
  {
LABEL_9:
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 64);
    if (!v6) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(a1 + 96);
  if (v5 != a1 + 72)
  {
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
    }
    goto LABEL_9;
  }
  (*(void (**)(uint64_t))(*(void *)(a1 + 72) + 32))(a1 + 72);
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_10:
  if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_13:
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 32);
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_215B0A458(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, uint64_t a7)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  int v8 = *a2;
  long long v18 = *a5;
  uint64_t v19 = *((void *)a5 + 2);
  long long v17 = *a6;
  LOBYTE(v20[0]) = 0;
  char v22 = 0;
  int v9 = *(unsigned __int8 *)(a7 + 32);
  if (!*(unsigned char *)(a7 + 32))
  {
LABEL_8:
    uint64_t v11 = (char *)operator new(0x148uLL);
    *((void *)v11 + 1) = 0;
    *(void *)uint64_t v11 = &unk_26C679D88;
    long long v12 = 0uLL;
    *(_OWORD *)(v11 + 88) = 0u;
    *(_OWORD *)(v11 + 104) = 0u;
    *(_OWORD *)(v11 + 120) = 0u;
    *(_OWORD *)(v11 + 136) = 0u;
    *(_OWORD *)(v11 + 152) = 0u;
    *(_OWORD *)(v11 + 168) = 0u;
    *(_OWORD *)(v11 + 184) = 0u;
    *(_OWORD *)(v11 + 200) = 0u;
    *(_OWORD *)(v11 + 216) = 0u;
    *(_OWORD *)(v11 + 232) = 0u;
    *(_OWORD *)(v11 + 248) = 0u;
    *(_OWORD *)(v11 + 264) = 0u;
    *(_OWORD *)(v11 + 280) = 0u;
    *(_OWORD *)(v11 + 296) = 0u;
    *(_OWORD *)(v11 + 312) = 0u;
    *((void *)v11 + 2) = 0;
    *((void *)v11 + 3) = 850045863;
    *((_OWORD *)v11 + 2) = 0u;
    *((_OWORD *)v11 + 3) = 0u;
    *((_OWORD *)v11 + 4) = 0u;
    *(_OWORD *)(v11 + 73) = 0u;
    *(void *)a1 = v11 + 24;
    *(void *)(a1 + 8) = v11;
    *(_OWORD *)(a1 + 16) = v17;
    *(void *)(a1 + 32) = v11 + 24;
    *(void *)(a1 + 40) = v11;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v11 + 1, 1uLL, memory_order_relaxed);
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 80) = 0;
    if (v9)
    {
      if (v21)
      {
        if (v21 == v20)
        {
          *(void *)(a1 + 72) = a1 + 48;
          (*(void (**)(void *))(v20[0] + 24))(v20);
          long long v12 = 0uLL;
        }
        else
        {
          *(void *)(a1 + 72) = v21;
          uint64_t v21 = 0;
        }
      }
      else
      {
        *(void *)(a1 + 72) = 0;
      }
      *(unsigned char *)(a1 + 80) = 1;
    }
    *(void *)(a1 + 184) = 850045863;
    *(_OWORD *)(a1 + 88) = v18;
    *(void *)(a1 + 104) = v19;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 136) = 1018212795;
    *(void *)(a1 + 120) = 0;
    *(_DWORD *)(a1 + 128) = 0;
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 160) = v12;
    *(void *)(a1 + 176) = 0;
    *(_OWORD *)(a1 + 192) = v12;
    *(_OWORD *)(a1 + 208) = v12;
    *(_OWORD *)(a1 + 224) = v12;
    *(void *)(a1 + 240) = 0;
    if (v8)
    {
      sub_215AF73EC((uint64_t)&v25, a1 + 32);
      size_t v23 = 0;
      uint64_t v13 = (char *)operator new(0x40uLL);
      unint64_t v14 = v13;
      *(void *)uint64_t v13 = &unk_26C679DD8;
      *(_OWORD *)(v13 + 8) = v25;
      long long v25 = 0uLL;
      v13[24] = 0;
      v13[56] = 0;
      if (v28)
      {
        if (v27)
        {
          if (v27 == v26)
          {
            *((void *)v13 + 6) = v13 + 24;
            (*(void (**)(void *))(v26[0] + 24))(v26);
          }
          else
          {
            *((void *)v13 + 6) = v27;
            BOOL v27 = 0;
          }
        }
        else
        {
          *((void *)v13 + 6) = 0;
        }
        v14[56] = 1;
      }
      size_t v23 = v14;
      operator new();
    }
    sub_215AF73EC((uint64_t)&v25, a1 + 32);
    unint64_t v24 = 0;
    int v15 = (char *)operator new(0x40uLL);
    uint64_t v16 = v15;
    *(void *)int v15 = &unk_26C679DD8;
    *(_OWORD *)(v15 + 8) = v25;
    long long v25 = 0uLL;
    v15[24] = 0;
    v15[56] = 0;
    if (v28)
    {
      if (v27)
      {
        if (v27 == v26)
        {
          *((void *)v15 + 6) = v15 + 24;
          (*(void (**)(void *))(v26[0] + 24))(v26);
        }
        else
        {
          *((void *)v15 + 6) = v27;
          BOOL v27 = 0;
        }
      }
      else
      {
        *((void *)v15 + 6) = 0;
      }
      v16[56] = 1;
    }
    unint64_t v24 = v16;
    sub_215AF723C();
  }
  uint64_t v10 = *(void *)(a7 + 24);
  if (v10)
  {
    if (v10 == a7)
    {
      uint64_t v21 = v20;
      (*(void (**)(uint64_t, void *))(*(void *)a7 + 24))(a7, v20);
      goto LABEL_7;
    }
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
  }
  uint64_t v21 = (void *)v10;
LABEL_7:
  char v22 = 1;
  goto LABEL_8;
}

void sub_215B0BA30(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215B0C09C()
{
}

void sub_215B0C0A4()
{
}

void sub_215B0C0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48)
{
  sub_215733368(v50);
  sub_215B02FE8(v48, *(void *)(v49 + 16));
  sub_215AFB15C(&a48);
  MEMORY[0x2166C4D20](v49, 0x1020C401722722ELL);
  JUMPOUT(0x215B0BFBCLL);
}

void sub_215B0C0E8()
{
}

void sub_215B0C0F0()
{
}

void sub_215B0C0F8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679FC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0C118(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C679FC0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B0C16C(uint64_t a1)
{
  sub_2157B69B0(a1 + 88);
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 79) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 56);
    operator delete(v2);
  }
}

void sub_215B0C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)(a2 + 4);
  LODWORD(v17) = 1;
  uint64_t v5 = a1 + 24;
  sub_215D04A50(a1 + 24, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 4, 4);
  sub_215D02034((void *)a1);
  sub_215D04A50(v5, *(char **)(a1 + 32), v4, (char *)(a2 + 8), 4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 12), 4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 12), (char *)(a2 + 16), 4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 16), (char *)(a2 + 20), 4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 20), (char *)(a2 + 24), 4);
  sub_215D04A50(v5, *(char **)(a1 + 32), (char *)(a2 + 24), (char *)(a2 + 28), 4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) - 8) + *(void *)(a1 + 24);
  *(void *)(v6 + 10) = *(void *)(a1 + 32) - v6 - 18;
  *(void *)(a1 + 56) -= 8;
  if (*(unsigned char *)(a2 + 80))
  {
    LOBYTE(v17) = 1;
    sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 1, 1);
    LODWORD(v17) = 1;
    sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 4, 4);
    sub_215D02034((void *)a1);
    unint64_t v17 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&v17, v18, 8);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    unint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v8 - v7) >> 3);
    if (v17 <= v9)
    {
      if (v17 < v9)
      {
        uint64_t v10 = v7 + 88 * v17;
        while (v8 != v10)
        {
          v8 -= 88;
          sub_215B0389C(v8);
        }
        *(void *)(a2 + 40) = v10;
      }
    }
    else
    {
      sub_215B0973C((void **)(a2 + 32), v17 - v9);
    }
    unint64_t v11 = v17;
    if (v17)
    {
      uint64_t v12 = 0;
      do
      {
        uint64_t v13 = *(void *)(a2 + 32) + v12;
        int __src = 2;
        sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v20, 4);
        sub_215D02034((void *)a1);
        sub_215AFE0AC(a1, v13);
        uint64_t v14 = *(void *)(*(void *)(a1 + 56) - 8) + *(void *)(a1 + 24);
        *(void *)(v14 + 10) = *(void *)(a1 + 32) - v14 - 18;
        uint64_t v15 = *(void *)(a1 + 56) - 8;
        *(void *)(a1 + 56) = v15;
        v12 += 88;
        --v11;
      }
      while (v11);
    }
    else
    {
      uint64_t v15 = *(void *)(a1 + 56);
    }
    uint64_t v16 = *(void *)(v15 - 8) + *(void *)(a1 + 24);
    *(void *)(v16 + 10) = *(void *)(a1 + 32) - v16 - 18;
    *(void *)(a1 + 56) -= 8;
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_215D04A50(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 1, 1);
  }
}

void sub_215B0C4C8()
{
}

const char *sub_215B0C4DC()
{
  return "cv3d.net";
}

void sub_215B0C4EC(int a1@<W1>, void *a2@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  switch(a1)
  {
    case 1:
      char v9 = 0;
      char v10 = 0;
      char v11 = 0;
      char v12 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v13 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      LODWORD(v8) = 0;
      uint64_t v3 = operator new(0x1B8uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *uint64_t v3 = &unk_26C67A170;
      LOBYTE(v32) = 0;
      char v35 = 0;
      LOBYTE(v36) = 0;
      char v52 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      int v31 = 0;
      uint64_t v53 = 0;
      uint64_t v55 = 0;
      uint64_t v54 = 0;
      char v20 = 0;
      char v21 = 0;
      char v22 = 0;
      char v23 = 0;
      char v24 = 0;
      char v25 = 0;
      char v26 = 0;
      char v27 = 0;
      char v28 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 0;
      LOBYTE(v18) = 0;
      v3[3] = &unk_26C675020;
      v3[4] = &unk_26C675080;
      sub_215B0EA88((uint64_t)&v16, (uint64_t)(v3 + 5));
      sub_215998268((uint64_t)(v3 + 28), &v29);
      v3[3] = &unk_26C674F78;
      v3[4] = &unk_26C674FD8;
      sub_2157C6F18((uint64_t)&v16);
      if (!v52) {
        goto LABEL_9;
      }
      if (v51 < 0)
      {
        operator delete(v50);
        if ((v49 & 0x80000000) == 0)
        {
LABEL_5:
          if ((v46 & 0x80000000) == 0) {
            goto LABEL_6;
          }
          goto LABEL_24;
        }
      }
      else if ((v49 & 0x80000000) == 0)
      {
        goto LABEL_5;
      }
      operator delete(v47);
      if ((v46 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v44 & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_25;
      }
LABEL_24:
      operator delete(v45);
      if ((v44 & 0x80000000) == 0)
      {
LABEL_7:
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_8;
        }
        goto LABEL_26;
      }
LABEL_25:
      operator delete(v42);
      if ((v41 & 0x80000000) == 0)
      {
LABEL_8:
        if ((v38 & 0x80000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_27;
      }
LABEL_26:
      operator delete(v39);
      if ((v38 & 0x80000000) == 0)
      {
LABEL_9:
        if (v35) {
          goto LABEL_10;
        }
        goto LABEL_12;
      }
LABEL_27:
      operator delete(v36);
      if (v35)
      {
LABEL_10:
        if (v34 < 0) {
          operator delete(v32);
        }
      }
LABEL_12:
      *a2 = v3 + 3;
      goto LABEL_19;
    case 2:
      uint64_t v3 = operator new(0x120uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *uint64_t v3 = &unk_26C67A0D8;
      uint64_t v4 = (char *)(v3 + 3);
      char v33 = 0;
      char v35 = 0;
      char v37 = 0;
      LOBYTE(v39) = 0;
      char v40 = 0;
      char v43 = 0;
      char v48 = 0;
      LOBYTE(v50) = 0;
      char v52 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      LOBYTE(v31) = 0;
      v3[3] = &unk_26C674E68;
      v3[4] = &unk_26C674EC8;
      sub_215B0EA88((uint64_t)&v29, (uint64_t)(v3 + 5));
      *((unsigned char *)v3 + 224) = 0;
      *((unsigned char *)v3 + 232) = 0;
      *((unsigned char *)v3 + 280) = 0;
      v3[3] = &unk_26C674DC0;
      uint64_t v5 = &unk_26C674E20;
      goto LABEL_17;
    case 3:
      unint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v16 = &v17;
      uint64_t v3 = operator new(0xF8uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *uint64_t v3 = &unk_26C67A1C0;
      uint64_t v4 = (char *)(v3 + 3);
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v6 = &v7;
      char v33 = 0;
      char v35 = 0;
      char v37 = 0;
      LOBYTE(v39) = 0;
      char v40 = 0;
      char v43 = 0;
      char v48 = 0;
      LOBYTE(v50) = 0;
      char v52 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      LOBYTE(v31) = 0;
      sub_215B0F554((uint64_t)(v3 + 3), (const void ***)&v6, (uint64_t)&v29);
      v3[3] = &unk_26C675200;
      v3[4] = &unk_26C675260;
      sub_2157C6F18((uint64_t)&v29);
      sub_21573AE84((uint64_t)&v6, v7);
      sub_21573AE84((uint64_t)&v16, v17);
      goto LABEL_18;
    case 4:
      char v21 = 0;
      char v19 = 0;
      uint64_t v3 = operator new(0x118uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *uint64_t v3 = &unk_26C67A210;
      uint64_t v4 = (char *)(v3 + 3);
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      unint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v16 = 0;
      char v9 = 0;
      char v10 = 0;
      char v33 = 0;
      char v35 = 0;
      char v37 = 0;
      LOBYTE(v39) = 0;
      char v40 = 0;
      char v43 = 0;
      char v48 = 0;
      LOBYTE(v50) = 0;
      char v52 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      LOBYTE(v31) = 0;
      sub_215B0F78C((uint64_t)(v3 + 3), (uint64_t)&v6, (uint64_t)&v29);
      v3[3] = &unk_26C6753B8;
      uint64_t v5 = &unk_26C675418;
      goto LABEL_17;
    case 5:
      uint64_t v3 = operator new(0x118uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *uint64_t v3 = &unk_26C67A260;
      uint64_t v4 = (char *)(v3 + 3);
      char v33 = 0;
      char v35 = 0;
      char v37 = 0;
      LOBYTE(v39) = 0;
      char v40 = 0;
      char v43 = 0;
      char v48 = 0;
      LOBYTE(v50) = 0;
      char v52 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      LOBYTE(v31) = 0;
      v3[3] = &unk_26C6756B8;
      v3[4] = &unk_26C675718;
      sub_215B0EA88((uint64_t)&v29, (uint64_t)(v3 + 5));
      *((unsigned char *)v3 + 232) = 0;
      *((unsigned char *)v3 + 272) = 0;
      v3[3] = &unk_26C675610;
      uint64_t v5 = &unk_26C675670;
LABEL_17:
      v3[4] = v5;
      sub_2157C6F18((uint64_t)&v29);
LABEL_18:
      *a2 = v4;
LABEL_19:
      a2[1] = v3;
      return;
    default:
      *a2 = 0;
      a2[1] = 0;
      return;
  }
}

void sub_215B0CB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v71 = *(unsigned int *)(v68 + 216);
  if (v71 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A118[v71])(&a12, v69);
  }
  *(_DWORD *)(v68 + 216) = -1;
  sub_2157C6F18((uint64_t)&a42);
  sub_215A943C8((uint64_t)&a68);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v68);
  operator delete(v72);
  sub_215A943C8((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_215B0CC50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215A943C8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_215B0CC78@<D0>(int a1@<W1>, const void *a2@<X2>, uint64_t a3@<X8>)
{
  switch(a1)
  {
    case 1:
      sub_215B0D000(a2, &v5);
      double result = *(double *)&v5;
      *(_OWORD *)a3 = v5;
      break;
    case 2:
      sub_215B0CD98(a2, &v5);
      double result = *(double *)&v5;
      *(_OWORD *)a3 = v5;
      break;
    case 3:
      sub_215B0D3A4(a2, &v5);
      double result = *(double *)&v5;
      *(_OWORD *)a3 = v5;
      break;
    case 4:
      sub_215B0D594(a2, &v5);
      double result = *(double *)&v5;
      *(_OWORD *)a3 = v5;
      break;
    case 5:
      sub_215B0D788(a2, &v5);
      double result = *(double *)&v5;
      *(_OWORD *)a3 = v5;
      break;
    default:
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      break;
  }
  return result;
}

void sub_215B0CD98(const void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6744B8, 0);
  uint64_t v14 = a2;
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 64;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 64;
  }
  uint64_t v6 = operator new(0x120uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A0D8;
  uint64_t v8 = *(void *)v4;
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v12 = *(void *)(v4 + 32);
  uint64_t v13 = *(void *)(v4 + 24);
  int v10 = *(_DWORD *)(v4 + 40);
  int v11 = *(unsigned __int8 *)(v4 + 48);
  v6[3] = &unk_26C674E68;
  v6[4] = &unk_26C674EC8;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  if (v11)
  {
    if (v10)
    {
      *((unsigned char *)v6 + 224) = 2;
      *((unsigned char *)v6 + 232) = 0;
      *((unsigned char *)v6 + 280) = 0;
      if (v10 != 1) {
        sub_215742D4C();
      }
      *((unsigned char *)v6 + 232) = v8;
      v6[30] = v7;
      v6[31] = v9;
      v6[32] = v13;
      *((_DWORD *)v6 + 68) = 1;
    }
    else
    {
      *((unsigned char *)v6 + 224) = 1;
      v6[29] = v8;
      v6[30] = v7;
      v6[31] = v9;
      v6[32] = v13;
      v6[33] = v12;
      *((_DWORD *)v6 + 68) = 0;
    }
    *((unsigned char *)v6 + 280) = 1;
  }
  else
  {
    *((unsigned char *)v6 + 224) = 0;
    *((unsigned char *)v6 + 232) = 0;
    *((unsigned char *)v6 + 280) = 0;
  }
  v6[3] = &unk_26C674DC0;
  v6[4] = &unk_26C674E20;
  *uint64_t v14 = v6 + 3;
  v14[1] = v6;
}

void sub_215B0CFC8(_Unwind_Exception *a1)
{
  sub_215B0EE28(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B0CFE8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215B0D000(const void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C675170, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 240;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 240;
  }
  uint64_t v6 = operator new(0x1B8uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A170;
  long long v9 = *(_OWORD *)v4;
  int v10 = *(_DWORD *)(v4 + 16);
  LOBYTE(__p) = 0;
  char v13 = 0;
  if (*(unsigned char *)(v4 + 48))
  {
    if (*(char *)(v4 + 47) < 0)
    {
      sub_215738B0C(&__p, *(void **)(v4 + 24), *(void *)(v4 + 32));
    }
    else
    {
      long long v7 = *(_OWORD *)(v4 + 24);
      uint64_t v12 = *(void *)(v4 + 40);
      long long __p = v7;
    }
    char v13 = 1;
  }
  LOBYTE(v14) = 0;
  char v26 = 0;
  if (*(unsigned char *)(v4 + 200))
  {
    sub_2157B6F84((char *)&v14, (long long *)(v4 + 56));
    char v26 = 1;
  }
  long long v8 = *(_OWORD *)(v4 + 208);
  uint64_t v28 = *(void *)(v4 + 224);
  long long v27 = v8;
  v6[3] = &unk_26C675020;
  v6[4] = &unk_26C675080;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  sub_215998268((uint64_t)(v6 + 28), &v9);
  v6[3] = &unk_26C674F78;
  v6[4] = &unk_26C674FD8;
  if (!v26) {
    goto LABEL_19;
  }
  if (v25 < 0)
  {
    operator delete(v24);
    if ((v23 & 0x80000000) == 0)
    {
LABEL_15:
      if ((v21 & 0x80000000) == 0) {
        goto LABEL_16;
      }
      goto LABEL_25;
    }
  }
  else if ((v23 & 0x80000000) == 0)
  {
    goto LABEL_15;
  }
  operator delete(v22);
  if ((v21 & 0x80000000) == 0)
  {
LABEL_16:
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete(v20);
  if ((v19 & 0x80000000) == 0)
  {
LABEL_17:
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
LABEL_26:
  operator delete(v18);
  if (v17 < 0)
  {
LABEL_27:
    operator delete(v16);
    if (v15 < 0) {
      goto LABEL_28;
    }
LABEL_19:
    if (!v13) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
LABEL_18:
  if ((v15 & 0x80000000) == 0) {
    goto LABEL_19;
  }
LABEL_28:
  operator delete(v14);
  if (!v13) {
    goto LABEL_22;
  }
LABEL_20:
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)__p);
  }
LABEL_22:
  *a2 = v6 + 3;
  a2[1] = v6;
}

void sub_215B0D310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a23)
  {
    if (a22 < 0) {
      operator delete(__p);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v23);
  operator delete(v25);
  _Unwind_Resume(a1);
}

void sub_215B0D3A4(const void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6743E8, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  uint64_t v6 = operator new(0xF8uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A1C0;
  v14[0] = 0;
  v14[1] = 0;
  char v13 = v14;
  long long v9 = *(const void ***)v4;
  long long v7 = (const void ***)(v4 + 8);
  long long v8 = v9;
  if (v9 != (const void **)v7)
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v13, (uint64_t *)v14, v8 + 4, (uint64_t)(v8 + 4));
      int v10 = (const void **)v8[1];
      if (v10)
      {
        do
        {
          int v11 = (const void ***)v10;
          int v10 = (const void **)*v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (const void ***)v8[2];
          BOOL v12 = *v11 == v8;
          long long v8 = (const void **)v11;
        }
        while (!v12);
      }
      long long v8 = (const void **)v11;
    }
    while (v11 != v7);
  }
  sub_215B0F554((uint64_t)(v6 + 3), (const void ***)&v13, v5);
  v6[3] = &unk_26C675200;
  v6[4] = &unk_26C675260;
  sub_21573AE84((uint64_t)&v13, v14[0]);
  *a2 = v6 + 3;
  a2[1] = v6;
}

void sub_215B0D56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_21573AE84((uint64_t)&a10, a11);
  std::__shared_weak_count::~__shared_weak_count(v11);
  operator delete(v13);
  _Unwind_Resume(a1);
}

void sub_215B0D594(const void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6742E8, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 64;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 64;
  }
  uint64_t v6 = operator new(0x118uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A210;
  sub_215B0F94C((uint64_t)&v10, v4);
  sub_215B0F78C((uint64_t)(v6 + 3), (uint64_t)&v10, v5);
  v6[3] = &unk_26C6753B8;
  v6[4] = &unk_26C675418;
  if (v14 && v13 < 0) {
    operator delete(__p);
  }
  long long v7 = (void **)v10;
  if (v10)
  {
    long long v8 = v11;
    long long v9 = v10;
    if (v11 != v10)
    {
      do
      {
        if (*((char *)v8 - 9) < 0) {
          operator delete(*(v8 - 4));
        }
        v8 -= 4;
      }
      while (v8 != v7);
      long long v9 = v10;
    }
    int v11 = v7;
    operator delete(v9);
  }
  *a2 = v6 + 3;
  a2[1] = v6;
}

void sub_215B0D750(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2159A3A08((uint64_t)va);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B0D770(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215B0D788(const void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674368, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 64;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 64;
  }
  uint64_t v6 = operator new(0x118uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A260;
  uint64_t v7 = *(void *)v4;
  long long v10 = *(_OWORD *)(v4 + 24);
  long long v11 = *(_OWORD *)(v4 + 8);
  int v8 = *(unsigned __int8 *)(v4 + 40);
  v6[3] = &unk_26C6756B8;
  v6[4] = &unk_26C675718;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  if (v8)
  {
    v6[29] = v7;
    *((_OWORD *)v6 + 15) = v11;
    *((_OWORD *)v6 + 16) = v10;
    char v9 = 1;
  }
  else
  {
    char v9 = 0;
    *((unsigned char *)v6 + 232) = 0;
  }
  *((unsigned char *)v6 + 272) = v9;
  v6[3] = &unk_26C675610;
  v6[4] = &unk_26C675670;
  *a2 = v6 + 3;
  a2[1] = v6;
}

void sub_215B0D94C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

BOOL sub_215B0D964(uint64_t a1, int a2)
{
  return (a2 - 1) < 5;
}

void sub_215B0D974()
{
  int v0 = 0;
  operator new();
}

void sub_215B0DC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19)
{
  MEMORY[0x2166C4D20](v19, 0x10B2C40EED050F3);
  if (a12 != -1) {
    ((void (*)(uint64_t, uint64_t *))off_26C67A098[a12])(v20 - 49, &a9);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_215B0DC94(uint64_t *a1, _DWORD *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EB90))
  {
    long long v31 = xmmword_215ED75F8;
    long long v32 = unk_215ED7608;
    sub_215B0E12C(&v31, 8uLL);
    __cxa_atexit((void (*)(void *))sub_215B0E1C4, &qword_26788EBB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788EB90);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EB98))
  {
    *(void *)&xmmword_26788EBE0 = qword_26788EBB0;
    qword_26788EBF0 = qword_26788EBB8;
    __cxa_guard_release(&qword_26788EB98);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EBA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EBA0))
  {
    *(_OWORD *)&qword_26788EC00 = xmmword_26788EBE0;
    qword_26788EC10 = qword_26788EBB0;
    unk_26788EC18 = *(_OWORD *)&qword_26788EBF0;
    qword_26788EC28 = qword_26788EBB8;
    __cxa_guard_release(&qword_26788EBA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788EBA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788EBA8))
  {
    sub_215B0E1F8();
    __cxa_atexit((void (*)(void *))sub_215B0E53C, &qword_26788EBC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788EBA8);
  }
  long long v31 = 0uLL;
  *(void *)&long long v32 = 0;
  sub_215A9B3F0(a1, (uint64_t)&v31);
  uint64_t v4 = qword_26788EBD0;
  if (!qword_26788EBD0) {
    goto LABEL_44;
  }
  int v5 = SBYTE7(v32);
  uint64_t v6 = (void *)v31;
  if ((SBYTE7(v32) & 0x80u) == 0) {
    uint64_t v7 = &v31;
  }
  else {
    uint64_t v7 = (long long *)v31;
  }
  if ((SBYTE7(v32) & 0x80u) == 0) {
    size_t v8 = BYTE7(v32);
  }
  else {
    size_t v8 = *((void *)&v31 + 1);
  }
  char v9 = &qword_26788EBD0;
  do
  {
    while (1)
    {
      int v10 = *(char *)(v4 + 55);
      long long v11 = v10 >= 0 ? (const void *)(v4 + 32) : *(const void **)(v4 + 32);
      size_t v12 = v10 >= 0 ? *(unsigned __int8 *)(v4 + 55) : *(void *)(v4 + 40);
      size_t v13 = v8 >= v12 ? v12 : v8;
      int v14 = memcmp(v11, v7, v13);
      if (v14) {
        break;
      }
      if (v12 >= v8) {
        goto LABEL_27;
      }
LABEL_13:
      uint64_t v4 = *(void *)(v4 + 8);
      if (!v4) {
        goto LABEL_28;
      }
    }
    if (v14 < 0) {
      goto LABEL_13;
    }
LABEL_27:
    char v9 = (uint64_t *)v4;
    uint64_t v4 = *(void *)v4;
  }
  while (v4);
LABEL_28:
  if (v9 == &qword_26788EBD0) {
    goto LABEL_44;
  }
  int v15 = *((char *)v9 + 55);
  if (v15 >= 0) {
    uint64_t v16 = v9 + 4;
  }
  else {
    uint64_t v16 = (const void *)v9[4];
  }
  if (v15 >= 0) {
    size_t v17 = *((unsigned __int8 *)v9 + 55);
  }
  else {
    size_t v17 = v9[5];
  }
  if (v17 >= v8) {
    size_t v18 = v8;
  }
  else {
    size_t v18 = v17;
  }
  int v19 = memcmp(v7, v16, v18);
  if (v19)
  {
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    sub_215AEDCD0(", expected ", &v28, &v29);
    sub_215B0E568();
    if ((v27 & 0x80u) == 0) {
      char v22 = (const std::string::value_type *)v26;
    }
    else {
      char v22 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v23 = v27;
    }
    else {
      std::string::size_type v23 = v26[1];
    }
    char v24 = std::string::append(&v29, v22, v23);
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  if (v8 < v17) {
    goto LABEL_44;
  }
LABEL_40:
  *a2 = *((_DWORD *)v9 + 14);
  if (v5 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_215B0E024(_Unwind_Exception *a1)
{
}

void sub_215B0E03C(_Unwind_Exception *a1)
{
}

void sub_215B0E054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a33 < 0)
  {
    operator delete(__p);
    if (a15 < 0)
    {
LABEL_5:
      operator delete(a10);
      if (a27 < 0)
      {
LABEL_8:
        operator delete(a22);
        if ((a21 & 0x80000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_12;
      }
LABEL_11:
      if ((a21 & 0x80000000) == 0)
      {
LABEL_9:
        if (!v41)
        {
LABEL_14:
          if (a40 < 0) {
            operator delete(a35);
          }
          _Unwind_Resume(a1);
        }
LABEL_13:
        __cxa_free_exception(v40);
        goto LABEL_14;
      }
LABEL_12:
      operator delete(a16);
      if ((v41 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if (a15 < 0)
  {
    goto LABEL_5;
  }
  if (a27 < 0) {
    goto LABEL_8;
  }
  goto LABEL_11;
}

void *sub_215B0E12C(void *result, unint64_t a2)
{
  qword_26788EBB0 = 0;
  qword_26788EBB8 = 0;
  qword_26788EBC0 = 0;
  if (a2)
  {
    if (a2 >> 62) {
      sub_215738AC0();
    }
    uint64_t v2 = result;
    size_t v3 = 4 * a2;
    qword_26788EBB0 = (uint64_t)operator new(4 * a2);
    qword_26788EBB8 = qword_26788EBB0;
    uint64_t v4 = qword_26788EBB0 + v3;
    qword_26788EBC0 = qword_26788EBB0 + v3;
    double result = memmove((void *)qword_26788EBB0, v2, v3);
    qword_26788EBB8 = v4;
  }
  return result;
}

void sub_215B0E1A0(_Unwind_Exception *exception_object)
{
  if (qword_26788EBB0)
  {
    qword_26788EBB8 = qword_26788EBB0;
    operator delete((void *)qword_26788EBB0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B0E1C4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_215B0E1F8()
{
  qword_26788EBD8 = 0;
  qword_26788EBD0 = 0;
  qword_26788EBC8 = (uint64_t)&qword_26788EBD0;
  if (qword_26788EC00 != unk_26788EC18 || qword_26788EC10 != qword_26788EC28) {
    sub_215B0E828();
  }
}

void sub_215B0E500(_Unwind_Exception *a1)
{
  if (v2 < 0)
  {
    operator delete(v1);
    sub_215B0E8FC((char *)qword_26788EBD0);
    _Unwind_Resume(a1);
  }
  sub_215B0E8FC((char *)qword_26788EBD0);
  _Unwind_Resume(a1);
}

uint64_t sub_215B0E53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_215B0E568()
{
  int v2 = 0;
  if ((uint64_t)xmmword_26788EBE0 - qword_26788EBF0 < 0)
  {
    sub_2157491FC(v1, "{");
    sub_215B0E828();
  }
  sub_21576E734(v1, "{}");
  if (v2 == -1) {
    sub_215742D4C();
  }
  p_p = &__p;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C67A0B0[v2])(&p_p, v1);
  if (v2 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C67A098[v2])(&p_p, v1);
  }
  return result;
}

void sub_215B0E7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_215B0E828()
{
  int v0 = 0;
  sub_215AA69A0();
}

void sub_215B0E8C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C67A098[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B0E8FC(char *a1)
{
  if (a1)
  {
    sub_215B0E8FC(*(void *)a1);
    sub_215B0E8FC(*((void *)a1 + 1));
    if (a1[55] < 0)
    {
      operator delete(*((void **)a1 + 4));
      int v2 = a1;
    }
    else
    {
      int v2 = a1;
    }
    operator delete(v2);
  }
}

void sub_215B0E978(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A0D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0E998(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A0D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B0E9EC(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)(result + 24) = &unk_26C674E68;
  *(void *)(result + 32) = &unk_26C674EC8;
  uint64_t v2 = *(unsigned int *)(result + 216);
  if (v2 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C674B60[v2])(&v3, result + 40);
  }
  *(_DWORD *)(v1 + 216) = -1;
  return result;
}

void sub_215B0EA88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (*(unsigned __int8 *)(a1 + 200) | *(unsigned __int8 *)(a1 + 160))
  {
    sub_2159A3DA4((uint64_t)v10, (uint64_t *)a1);
    long long v3 = v11;
    *(unsigned char *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v3;
    *(unsigned char *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(void *)(a2 + 40) = v13;
      v12[1] = 0;
      uint64_t v13 = 0;
      v12[0] = 0;
      *(unsigned char *)(a2 + 48) = 1;
    }
    *(unsigned char *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(void *)(a2 + 72) = v16;
    *(unsigned char *)(a2 + 104) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(void *)(a2 + 96) = v18;
      v17[1] = 0;
      uint64_t v18 = 0;
      v17[0] = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 0;
    *(unsigned char *)(a2 + 136) = 0;
    int v5 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(void *)(a2 + 128) = v21;
      __p[1] = 0;
      uint64_t v21 = 0;
      __p[0] = 0;
      *(unsigned char *)(a2 + 136) = 1;
    }
    *(unsigned char *)(a2 + 144) = 0;
    *(unsigned char *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(void *)(a2 + 160) = v24;
      uint64_t v24 = 0;
      long long v23 = 0uLL;
      *(unsigned char *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 0;
    if (!v5) {
      goto LABEL_34;
    }
LABEL_32:
    if (SHIBYTE(v21) < 0)
    {
      operator delete(__p[0]);
      int v4 = v19;
    }
    goto LABEL_34;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    sub_215B0EE84((uint64_t)v10, (uint64_t *)a1);
    long long v6 = v11;
    *(unsigned char *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v6;
    *(unsigned char *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(void *)(a2 + 40) = v13;
      v12[1] = 0;
      uint64_t v13 = 0;
      v12[0] = 0;
      *(unsigned char *)(a2 + 48) = 1;
    }
    *(unsigned char *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(void *)(a2 + 72) = v16;
    *(unsigned char *)(a2 + 104) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(void *)(a2 + 96) = v18;
      v17[1] = 0;
      uint64_t v18 = 0;
      v17[0] = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 0;
    *(unsigned char *)(a2 + 136) = 0;
    int v7 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(void *)(a2 + 128) = v21;
      __p[1] = 0;
      uint64_t v21 = 0;
      __p[0] = 0;
      *(unsigned char *)(a2 + 136) = 1;
    }
    *(unsigned char *)(a2 + 144) = 0;
    *(unsigned char *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(void *)(a2 + 160) = v24;
      uint64_t v24 = 0;
      long long v23 = 0uLL;
      *(unsigned char *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 1;
    if (v7) {
      goto LABEL_32;
    }
  }
  else
  {
    sub_21598F930((uint64_t)v10, (uint64_t *)a1);
    long long v8 = v11;
    *(unsigned char *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(void *)(a2 + 40) = v13;
      v12[1] = 0;
      uint64_t v13 = 0;
      v12[0] = 0;
      *(unsigned char *)(a2 + 48) = 1;
    }
    *(unsigned char *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(void *)(a2 + 72) = v16;
    *(unsigned char *)(a2 + 104) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(void *)(a2 + 96) = v18;
      v17[1] = 0;
      uint64_t v18 = 0;
      v17[0] = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 0;
    *(unsigned char *)(a2 + 136) = 0;
    int v9 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(void *)(a2 + 128) = v21;
      __p[1] = 0;
      uint64_t v21 = 0;
      __p[0] = 0;
      *(unsigned char *)(a2 + 136) = 1;
    }
    *(unsigned char *)(a2 + 144) = 0;
    *(unsigned char *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(void *)(a2 + 160) = v24;
      uint64_t v24 = 0;
      long long v23 = 0uLL;
      *(unsigned char *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 2;
    if (v9) {
      goto LABEL_32;
    }
  }
LABEL_34:
  if (v4 && SHIBYTE(v18) < 0) {
    operator delete(v17[0]);
  }
  if (v14)
  {
    if (SHIBYTE(v13) < 0) {
      operator delete(v12[0]);
    }
  }
}

uint64_t sub_215B0EE28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 176);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A118[v2])(&v4, a1);
  }
  *(_DWORD *)(a1 + 176) = -1;
  return a1;
}

uint64_t sub_215B0EE84(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 48) = 0;
  if (*((unsigned char *)a2 + 40))
  {
    if (*((char *)a2 + 39) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 24), (void *)a2[2], a2[3]);
    }
    else
    {
      long long v6 = *((_OWORD *)a2 + 1);
      *(void *)(a1 + 40) = a2[4];
      *(_OWORD *)(a1 + 24) = v6;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  if (*((unsigned char *)a2 + 96))
  {
    char v7 = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 56) = a2[10];
    *(unsigned char *)(a1 + 64) = v7;
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v8 = a1 + 80;
    *(unsigned char *)(a1 + 72) = 1;
    *(unsigned char *)(a1 + 104) = 0;
    if (!*((unsigned char *)a2 + 72)) {
      goto LABEL_8;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = 0;
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v8 = a1 + 80;
    *(unsigned char *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (!*((unsigned char *)a2 + 72))
    {
LABEL_8:
      uint64_t v9 = a1 + 112;
      if (*((unsigned char *)a2 + 160)) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_215738B0C((unsigned char *)v8, (void *)a2[6], a2[7]);
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *(void *)(v8 + 16) = a2[8];
    *(_OWORD *)uint64_t v8 = v10;
  }
  *(unsigned char *)(a1 + 104) = 1;
  uint64_t v9 = a1 + 112;
  if (*((unsigned char *)a2 + 160))
  {
LABEL_9:
    if (*((char *)a2 + 135) < 0)
    {
      sub_215738B0C(&v13, (void *)a2[14], a2[15]);
    }
    else
    {
      long long v13 = *((_OWORD *)a2 + 7);
      uint64_t v14 = a2[16];
    }
    *(_OWORD *)uint64_t v9 = v13;
    *(void *)(v9 + 16) = v14;
    *(unsigned char *)(a1 + 136) = 1;
    char v11 = *((unsigned char *)a2 + 200);
    if (v11) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_16:
  *(unsigned char *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  char v11 = *((unsigned char *)a2 + 200);
  if (v11)
  {
LABEL_20:
    sub_215B0F0B0(a2 + 22, (uint64_t)&v13);
    *(_OWORD *)(a1 + 144) = v13;
    *(void *)(a1 + 160) = v14;
    char v11 = 1;
    goto LABEL_21;
  }
LABEL_17:
  *(unsigned char *)(a1 + 144) = 0;
LABEL_21:
  *(unsigned char *)(a1 + 168) = v11;
  return a1;
}

void sub_215B0F044(_Unwind_Exception *exception_object)
{
  if (v1[104] && v1[103] < 0) {
    operator delete(*v3);
  }
  if (v1[48])
  {
    if (v1[47] < 0) {
      operator delete(*v2);
    }
  }
  _Unwind_Resume(exception_object);
}

double sub_215B0F0B0@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = (a1[1] - *a1) >> 5;
  uint64_t v7 = 0;
  long long v6 = 0uLL;
  sub_215742B04((uint64_t)&v6, 0xAAAAAAAAAAAAAAABLL * v4);
  sub_215B0F1BC(*a1, a1[1], (uint64_t)&v6);
  double result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(void *)(a2 + 16) = v7;
  return result;
}

void sub_215B0F128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10)
{
  if (__p)
  {
    char v11 = a10;
    size_t v12 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != __p);
      size_t v12 = __p;
    }
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B0F1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2) {
    sub_215991FA8();
  }
  return a3;
}

void sub_215B0F2CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B0F320(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A170;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0F340(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A170;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B0F394(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C675020;
  *(void *)(a1 + 32) = &unk_26C675080;
  uint64_t result = sub_2159A3688(a1 + 224);
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C674B60[v3])(&v4, a1 + 40);
  }
  *(_DWORD *)(a1 + 216) = -1;
  return result;
}

void sub_215B0F438(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A1C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0F458(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A1C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B0F4AC(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C6752A8;
  *(void *)(a1 + 32) = &unk_26C675308;
  sub_21573AE84(a1 + 224, *(char **)(a1 + 232));
  uint64_t v2 = *(unsigned int *)(a1 + 216);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C674B60[v2])(&v3, a1 + 40);
  }
  *(_DWORD *)(a1 + 216) = -1;
}

uint64_t sub_215B0F554(uint64_t a1, const void ***a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C6752A8;
  *(void *)(a1 + 8) = &unk_26C675308;
  sub_215B0EA88(a3, a1 + 16);
  v16[0] = 0;
  v16[1] = 0;
  long long v15 = v16;
  uint64_t v7 = *a2;
  char v5 = a2 + 1;
  long long v6 = v7;
  if (v7 == (const void **)v5)
  {
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 200) = a1 + 208;
  }
  else
  {
    do
    {
      sub_2157B75C4((uint64_t **)&v15, (uint64_t *)v16, v6 + 4, (uint64_t)(v6 + 4));
      uint64_t v8 = (const void **)v6[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = (const void ***)v8;
          uint64_t v8 = (const void **)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (const void ***)v6[2];
          BOOL v10 = *v9 == v6;
          long long v6 = (const void **)v9;
        }
        while (!v10);
      }
      long long v6 = (const void **)v9;
    }
    while (v9 != v5);
    *(void *)(a1 + 208) = 0;
    char v11 = (uint64_t *)v15;
    *(void *)(a1 + 200) = a1 + 208;
    *(void *)(a1 + 216) = 0;
    if (v11 != (uint64_t *)v16)
    {
      do
      {
        sub_2157B75C4((uint64_t **)(a1 + 200), (uint64_t *)(a1 + 208), (const void **)v11 + 4, (uint64_t)(v11 + 4));
        long long v13 = (char *)v11[1];
        if (v13)
        {
          do
          {
            uint64_t v14 = (char **)v13;
            long long v13 = *(char **)v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            uint64_t v14 = (char **)v11[2];
            BOOL v10 = *v14 == (char *)v11;
            char v11 = (uint64_t *)v14;
          }
          while (!v10);
        }
        char v11 = (uint64_t *)v14;
      }
      while (v14 != v16);
    }
  }
  sub_21573AE84((uint64_t)&v15, v16[0]);
  return a1;
}

void sub_215B0F6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_21573AE84(v13, *v12);
  sub_21573AE84((uint64_t)&a10, a11);
  sub_215B0EE28(v11);
  _Unwind_Resume(a1);
}

void sub_215B0F70C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A210;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0F72C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A210;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B0F780(uint64_t a1)
{
  return sub_21599C054(a1 + 24);
}

uint64_t sub_215B0F78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C675460;
  *(void *)(a1 + 8) = &unk_26C6754C0;
  sub_215B0EA88(a3, a1 + 16);
  sub_215B0F94C((uint64_t)&v11, a2);
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  sub_215AA7A70((char *)(a1 + 200), (uint64_t)v11, (uint64_t)v12, ((char *)v12 - (unsigned char *)v11) >> 5);
  *(unsigned char *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 248) = 0;
  if (v15)
  {
    if (SHIBYTE(v14) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 224), (void *)__p, *((unint64_t *)&__p + 1));
      int v5 = v15;
      int v6 = SHIBYTE(v14);
      *(unsigned char *)(a1 + 248) = 1;
      if (v5 && v6 < 0) {
        operator delete((void *)__p);
      }
    }
    else
    {
      *(_OWORD *)(a1 + 224) = __p;
      *(void *)(a1 + 240) = v14;
      *(unsigned char *)(a1 + 248) = 1;
    }
  }
  uint64_t v7 = (void **)v11;
  if (v11)
  {
    uint64_t v8 = v12;
    uint64_t v9 = v11;
    if (v12 != v11)
    {
      do
      {
        if (*((char *)v8 - 9) < 0) {
          operator delete(*(v8 - 4));
        }
        v8 -= 4;
      }
      while (v8 != v7);
      uint64_t v9 = v11;
    }
    size_t v12 = v7;
    operator delete(v9);
  }
  return a1;
}

void sub_215B0F8F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(unsigned char *)(v2 + 248))
  {
    if (*(char *)(v2 + 247) < 0) {
      operator delete(*v5);
    }
  }
  sub_2157C3C78(v4);
  sub_2159A3A08((uint64_t)va);
  sub_215B0EE28(v3);
  _Unwind_Resume(a1);
}

void sub_215B0F938(_Unwind_Exception *a1)
{
  sub_215B0EE28(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215B0F94C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_215AA7A70((char *)a1, *(void *)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5);
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    if (*(char *)(a2 + 47) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 24), *(void **)(a2 + 24), *(void *)(a2 + 32));
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v4;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_215B0F9E0(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48) && *(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  long long v4 = *(void ***)v1;
  if (*(void *)v1)
  {
    int v5 = *(void ***)(v1 + 8);
    int v6 = *(void ***)v1;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0) {
          operator delete(*(v5 - 4));
        }
        v5 -= 4;
      }
      while (v5 != v4);
      int v6 = *(void ***)v1;
    }
    *(void *)(v1 + 8) = v4;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B0FA4C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A260;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B0FA6C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A260;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B0FAC0(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)(result + 24) = &unk_26C6756B8;
  *(void *)(result + 32) = &unk_26C675718;
  uint64_t v2 = *(unsigned int *)(result + 216);
  if (v2 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C674B60[v2])(&v3, result + 40);
  }
  *(_DWORD *)(v1 + 216) = -1;
  return result;
}

void sub_215B0FB60()
{
}

const char *sub_215B0FB74()
{
  return "cv3d.viz";
}

void sub_215B0FB84(int a1@<W1>, void *a2@<X8>)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  switch(a1)
  {
    case 1:
      char v3 = operator new(0x140uLL);
      v3[1] = 0;
      size_t v3[2] = 0;
      *char v3 = &unk_26C67A310;
      sub_21599594C((uint64_t)(v3 + 3));
    case 2:
      std::string v30 = 0;
      long long v31 = 0;
      *(void *)&long long v32 = 0;
      sub_215D1482C(__p, 7, (uint64_t)&v30);
      uint64_t v5 = *(void *)__p;
      long long v4 = *(std::__shared_weak_count **)&__p[8];
      *(void *)unsigned __int8 v15 = *(void *)__p;
      *(void *)&v15[8] = *(void *)&__p[8];
      if (v30)
      {
        long long v31 = v30;
        operator delete(v30);
      }
      int v6 = (char *)operator new(0x100uLL);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = &unk_26C67A410;
      uint64_t v7 = v6 + 24;
      *(void *)long long __p = v5;
      *(void *)&__p[8] = v4;
      *(void *)unsigned __int8 v15 = 0;
      *(void *)&v15[8] = 0;
      char v33 = 0;
      char v34 = 0;
      char v35 = 0;
      char v36 = 0;
      char v37 = 0;
      char v38 = 0;
      char v39 = 0;
      char v40 = 0;
      char v41 = 0;
      std::string v30 = 0;
      long long v31 = 0;
      uint64_t v8 = v6 + 32;
      LOBYTE(v32) = 0;
      *((void *)v6 + 3) = &unk_26C675EA0;
      *((void *)v6 + 4) = &unk_26C675F00;
      sub_215B0EA88((uint64_t)&v30, (uint64_t)(v6 + 40));
      v6[224] = *(unsigned char *)v5;
      *((void *)v6 + 29) = *(void *)(v5 + 56);
      *((void *)v6 + 30) = v5;
      *((void *)v6 + 31) = v4;
      if (!v4)
      {
        *uint64_t v7 = &unk_26C675DF8;
        *uint64_t v8 = &unk_26C675E58;
        goto LABEL_41;
      }
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      *uint64_t v7 = &unk_26C675DF8;
      *uint64_t v8 = &unk_26C675E58;
      sub_2157C6F18((uint64_t)&v30);
      if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_42;
      }
      goto LABEL_34;
    case 3:
      std::string v30 = 0;
      long long v31 = 0;
      *(void *)&long long v32 = 0;
      sub_215D17DD8();
    case 4:
      std::string v30 = 0;
      long long v31 = 0;
      *(void *)&long long v32 = 0;
      sub_215D1835C();
    case 5:
      sub_215D23008(v15);
      int v6 = (char *)operator new(0x108uLL);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = &unk_26C67A500;
      *(void *)long long __p = &unk_26C684548;
      *(_OWORD *)&__p[8] = *(_OWORD *)&v15[8];
      *(void *)&v15[8] = 0;
      *(void *)&v15[16] = 0;
      char v33 = 0;
      char v34 = 0;
      char v35 = 0;
      char v36 = 0;
      char v37 = 0;
      char v38 = 0;
      char v39 = 0;
      char v40 = 0;
      char v41 = 0;
      std::string v30 = 0;
      long long v31 = 0;
      LOBYTE(v32) = 0;
      *((void *)v6 + 3) = &unk_26C676470;
      *((void *)v6 + 4) = &unk_26C6764D0;
      sub_215B0EA88((uint64_t)&v30, (uint64_t)(v6 + 40));
      sub_215D1CFB4((uint64_t)(v6 + 224), (uint64_t)__p);
      *((void *)v6 + 3) = &unk_26C6763C8;
      *((void *)v6 + 4) = &unk_26C676428;
      sub_2157C6F18((uint64_t)&v30);
      *(void *)long long __p = &unk_26C684548;
      BOOL v10 = *(std::__shared_weak_count **)&__p[16];
      if (*(void *)&__p[16]
        && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&__p[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
      *(void *)unsigned __int8 v15 = &unk_26C684548;
      uint64_t v11 = *(std::__shared_weak_count **)&v15[16];
      if (*(void *)&v15[16]
        && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v15[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
      *a2 = v6 + 24;
      goto LABEL_46;
    case 6:
      sub_215CE95C8();
    case 7:
      int v6 = (char *)operator new(0x270uLL);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = &unk_26C67A5A0;
      bzero(v6 + 40, 0x210uLL);
      *((void *)v6 + 3) = &unk_26C676B18;
      *((void *)v6 + 4) = &unk_26C676B90;
      v6[56] = 0;
      v6[88] = 0;
      v6[112] = 0;
      v6[144] = 0;
      v6[176] = 0;
      v6[208] = 0;
      *((void *)v6 + 28) = 0;
      *((void *)v6 + 29) = 0;
      *((void *)v6 + 27) = 0;
      *((_DWORD *)v6 + 71) = 0;
      *((void *)v6 + 33) = 0;
      *((void *)v6 + 34) = 0;
      *((void *)v6 + 32) = 0;
      *((_DWORD *)v6 + 81) = 0;
      *((void *)v6 + 38) = 0;
      *((void *)v6 + 39) = 0;
      *((void *)v6 + 37) = 0;
      *((_DWORD *)v6 + 91) = 0;
      *((void *)v6 + 43) = 0;
      *((void *)v6 + 44) = 0;
      *((void *)v6 + 42) = 0;
      *((void *)v6 + 48) = 0;
      *((void *)v6 + 49) = 0;
      *((void *)v6 + 47) = 0;
      v6[536] = 0;
      *(void *)(v6 + 420) = 0;
      *((_DWORD *)v6 + 107) = 0;
      *(void *)(v6 + 404) = 0;
      *(void *)(v6 + 412) = 0;
      *(void *)(v6 + 452) = 0;
      *((_DWORD *)v6 + 115) = 0;
      *(void *)(v6 + 436) = 0;
      *(void *)(v6 + 444) = 0;
      *(void *)(v6 + 476) = 0;
      *(void *)(v6 + 468) = 0;
      *((_DWORD *)v6 + 123) = 0;
      *(void *)(v6 + 484) = 0;
      *(void *)(v6 + 508) = 0;
      *(void *)(v6 + 500) = 0;
      *((_DWORD *)v6 + 131) = 0;
      *(void *)(v6 + 516) = 0;
      *((_OWORD *)v6 + 38) = 0u;
      *(_OWORD *)(v6 + 580) = 0u;
      *(_OWORD *)(v6 + 596) = 0u;
      *(_OWORD *)(v6 + 564) = 0u;
      *a2 = v6 + 32;
      goto LABEL_46;
    case 8:
      size_t v12 = operator new(4uLL);
      *size_t v12 = 0;
      uint64_t v13 = operator new(0x108uLL);
      v13[1] = 0;
      v13[2] = 0;
      *uint64_t v13 = &unk_26C67A360;
      __p[0] = 7;
      *(void *)&__p[8] = v12;
      *(void *)&__p[16] = v12 + 1;
      *(void *)&unsigned char __p[24] = v12 + 1;
      char v33 = 0;
      char v34 = 0;
      char v35 = 0;
      char v36 = 0;
      char v37 = 0;
      char v38 = 0;
      char v39 = 0;
      char v40 = 0;
      char v41 = 0;
      std::string v30 = 0;
      long long v31 = 0;
      LOBYTE(v32) = 0;
      sub_215B1342C((uint64_t)(v13 + 3), __p, (uint64_t)&v30);
      sub_2157C6F18((uint64_t)&v30);
      operator delete(v12);
      *a2 = v13 + 3;
      a2[1] = v13;
      return;
    case 9:
      memset(__p, 0, 24);
      sub_215D0B178((uint64_t)&v30, (uint64_t)__p);
      uint64_t v9 = v30;
      long long v4 = v31;
      *(void *)unsigned __int8 v15 = v30;
      *(void *)&v15[8] = v31;
      *(_OWORD *)&v15[16] = v32;
      if (*(void *)__p)
      {
        *(void *)&__p[8] = *(void *)__p;
        operator delete(*(void **)__p);
      }
      int v6 = (char *)operator new(0x108uLL);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = &unk_26C67A5F0;
      uint64_t v7 = v6 + 24;
      *(void *)long long __p = v9;
      *(void *)&__p[8] = v4;
      *(void *)unsigned __int8 v15 = 0;
      *(void *)&v15[8] = 0;
      *(_OWORD *)&__p[16] = *(_OWORD *)&v15[16];
      char v33 = 0;
      char v34 = 0;
      char v35 = 0;
      char v36 = 0;
      char v37 = 0;
      char v38 = 0;
      char v39 = 0;
      char v40 = 0;
      char v41 = 0;
      std::string v30 = 0;
      long long v31 = 0;
      LOBYTE(v32) = 0;
      *((void *)v6 + 3) = &unk_26C676D48;
      *((void *)v6 + 4) = &unk_26C676DA8;
      sub_215B0EA88((uint64_t)&v30, (uint64_t)(v6 + 40));
      *((void *)v6 + 28) = *(void *)&__p[16];
      *((void *)v6 + 29) = v9;
      *((void *)v6 + 30) = v4;
      if (v4)
      {
        atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
        *(_OWORD *)(v6 + 248) = *(_OWORD *)&__p[16];
        *((void *)v6 + 3) = &unk_26C676CA0;
        *((void *)v6 + 4) = &unk_26C676D00;
        sub_2157C6F18((uint64_t)&v30);
        if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_34:
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }
      else
      {
        *(_OWORD *)(v6 + 248) = *(_OWORD *)&__p[16];
        *((void *)v6 + 3) = &unk_26C676CA0;
        *((void *)v6 + 4) = &unk_26C676D00;
LABEL_41:
        sub_2157C6F18((uint64_t)&v30);
      }
LABEL_42:
      if (*(void *)&v15[8])
      {
        if (!atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v15[8] + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          (*(void (**)(void))(**(void **)&v15[8] + 16))(*(void *)&v15[8]);
          std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v15[8]);
        }
      }
      *a2 = v7;
      goto LABEL_46;
    case 10:
      v15[23] = 0;
      v15[0] = 0;
      *(_DWORD *)&v15[24] = 6;
      HIBYTE(v17) = 0;
      LOBYTE(v16) = 0;
      LODWORD(v18) = 0;
      HIBYTE(v20[0]) = 0;
      LOBYTE(v19) = 0;
      HIBYTE(v21) = 0;
      int v6 = (char *)operator new(0x150uLL);
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      *(void *)int v6 = &unk_26C67A640;
      *(_OWORD *)long long __p = *(_OWORD *)v15;
      *(void *)&__p[16] = *(void *)&v15[16];
      memset(v15, 0, 24);
      *(_DWORD *)&unsigned char __p[24] = 6;
      long long v23 = v16;
      uint64_t v24 = v17;
      long long v16 = 0uLL;
      uint64_t v17 = 0;
      int v25 = 0;
      long long v26 = v19;
      uint64_t v27 = v20[0];
      long long v19 = 0uLL;
      memset(v20, 0, sizeof(v20));
      uint64_t v14 = v21;
      long long v28 = *(_OWORD *)&v20[1];
      uint64_t v21 = 0;
      char v33 = 0;
      char v34 = 0;
      char v35 = 0;
      char v36 = 0;
      char v37 = 0;
      char v38 = 0;
      char v39 = 0;
      char v40 = 0;
      char v41 = 0;
      std::string v30 = 0;
      long long v31 = 0;
      uint64_t v29 = v14;
      LOBYTE(v32) = 0;
      sub_215B13EEC((uint64_t)(v6 + 24), (long long *)__p, (uint64_t)&v30);
      sub_2157C6F18((uint64_t)&v30);
      if (SHIBYTE(v29) < 0)
      {
        operator delete((void *)v28);
        if ((SHIBYTE(v27) & 0x80000000) == 0)
        {
LABEL_30:
          if ((SHIBYTE(v24) & 0x80000000) == 0) {
            goto LABEL_31;
          }
          goto LABEL_37;
        }
      }
      else if ((SHIBYTE(v27) & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete((void *)v26);
      if ((SHIBYTE(v24) & 0x80000000) == 0)
      {
LABEL_31:
        if ((__p[23] & 0x80000000) == 0) {
          goto LABEL_32;
        }
        goto LABEL_38;
      }
LABEL_37:
      operator delete((void *)v23);
      if ((__p[23] & 0x80000000) == 0) {
        goto LABEL_32;
      }
LABEL_38:
      operator delete(*(void **)__p);
LABEL_32:
      *a2 = v6 + 24;
LABEL_46:
      a2[1] = v6;
      return;
    case 11:
      sub_215B272BC();
    case 12:
      std::string v30 = 0;
      long long v31 = 0;
      *(void *)&long long v32 = 0;
      sub_215D0E244();
    case 13:
      std::string v30 = 0;
      long long v31 = 0;
      *(void *)&long long v32 = 0;
      sub_215D0E824();
    default:
      *a2 = 0;
      a2[1] = 0;
      return;
  }
}

void sub_215B10E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  uint64_t v45 = *(unsigned int *)(v42 + 216);
  if (v45 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A3E8[v45])(&a13, v43);
  }
  *(_DWORD *)(v42 + 216) = -1;
  sub_2157C6F18((uint64_t)&a42);
  sub_215D2319C(&a28);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v42);
  operator delete(v46);
  sub_215D2319C(&a14);
  _Unwind_Resume(a1);
}

void sub_215B11004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215D2319C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215B11018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_215733368((uint64_t)&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_215733368((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215B11048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B11060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_21596F318(&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_21596F318(&a11);
  _Unwind_Resume(a1);
}

void sub_215B11090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_21596F318((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215B110A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_215733368((uint64_t)&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_215733368((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215B110D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B110E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215B11104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_215733368((uint64_t)&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_215733368((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215B11134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B1114C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_215733368((uint64_t)&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_215733368((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215B1117C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B11194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_2157C6F18((uint64_t)&a39);
  sub_215733368((uint64_t)&a25);
  std::__shared_weak_count::~__shared_weak_count(v39);
  operator delete(v41);
  sub_215733368((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_215B111C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B111D8(_Unwind_Exception *exception_object)
{
  char v3 = *(void **)(v1 + 112);
  if (v3)
  {
    *(void *)(v1 + 120) = v3;
    operator delete(v3);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B111F4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215B11250(void *lpsrc@<X2>, int a2@<W1>, void *a3@<X8>)
{
  switch(a2)
  {
    case 1:
      long long v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0);
      if (!v4
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_42;
      }
      uint64_t v5 = operator new(0x140uLL);
      v5[1] = 0;
      _OWORD v5[2] = 0;
      void *v5 = &unk_26C67A780;
      sub_215995784(v5 + 3, (uint64_t)v4);
      goto LABEL_12;
    case 2:
      sub_215B11B9C(&v26, lpsrc);
      goto LABEL_23;
    case 3:
      sub_215B11E34(&v26, lpsrc);
      goto LABEL_23;
    case 4:
      sub_215B120D0(&v26, lpsrc);
      goto LABEL_23;
    case 5:
      uint64_t v7 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A3E0, 0);
      if (v7)
      {
        uint64_t v8 = (uint64_t)v7 + 8;
        uint64_t v9 = (uint64_t)v7 + 32;
LABEL_27:
        uint64_t v14 = *(void *)(v8 + 8);
        uint64_t v13 = *(std::__shared_weak_count **)(v8 + 16);
        unsigned __int8 v15 = operator new(0x108uLL);
        long long v16 = v15;
        v15[1] = 0;
        void v15[2] = 0;
        *unsigned __int8 v15 = &unk_26C67A500;
        uint64_t v17 = v15 + 3;
        *(void *)&long long v26 = &unk_26C684548;
        *((void *)&v26 + 1) = v14;
        uint64_t v27 = v13;
        if (v13) {
          atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v18 = v15 + 4;
        v15[3] = &unk_26C676470;
        v15[4] = &unk_26C6764D0;
        sub_215B0EA88(v9, (uint64_t)(v15 + 5));
        sub_215D1CFB4((uint64_t)(v16 + 28), (uint64_t)&v26);
        *uint64_t v17 = &unk_26C6763C8;
        *uint64_t v18 = &unk_26C676428;
        *(void *)&long long v26 = &unk_26C684548;
        long long v19 = v27;
        if (v27 && !atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
        *a3 = v17;
        a3[1] = v16;
        return;
      }
      if (!sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        uint64_t v8 = 8;
        uint64_t v9 = 32;
        goto LABEL_27;
      }
      goto LABEL_42;
    case 6:
      BOOL v10 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674630, 0);
      if (v10)
      {
        uint64_t v11 = (uint64_t)v10 + 8;
        uint64_t v12 = (uint64_t)v10 + 32;
      }
      else
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
LABEL_42:
          abort();
        }
        uint64_t v11 = 8;
        uint64_t v12 = 32;
      }
      uint64_t v20 = operator new(0xF0uLL);
      uint64_t v21 = v20;
      v20[1] = 0;
      unsigned char v20[2] = 0;
      *uint64_t v20 = &unk_26C67A550;
      unsigned __int8 v22 = v20 + 3;
      uint64_t v24 = *(void *)v11;
      long long v23 = *(std::__shared_weak_count **)(v11 + 8);
      if (v23) {
        atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v25 = v20 + 4;
      void v20[3] = &unk_26C6768E0;
      v20[4] = &unk_26C676940;
      sub_215B0EA88(v12, (uint64_t)(v20 + 5));
      v21[28] = v24;
      v21[29] = v23;
      if (v23)
      {
        atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
        *unsigned __int8 v22 = &unk_26C676838;
        *int v25 = &unk_26C676898;
        if (!atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      else
      {
        *unsigned __int8 v22 = &unk_26C676838;
        *int v25 = &unk_26C676898;
      }
      *a3 = v22;
      a3[1] = v21;
      return;
    case 7:
      int v6 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6728B0, 0);
      if (!v6
        && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
      {
        goto LABEL_42;
      }
      uint64_t v5 = operator new(0x270uLL);
      v5[1] = 0;
      _OWORD v5[2] = 0;
      void *v5 = &unk_26C67A7D0;
      sub_215996E48((uint64_t)(v5 + 3), (uint64_t)v6);
LABEL_12:
      *a3 = v5 + 4;
      a3[1] = v5;
      return;
    case 8:
      sub_215B119D4(&v26, lpsrc);
      goto LABEL_23;
    case 9:
      sub_215B12378(&v26, lpsrc);
      goto LABEL_23;
    case 10:
      sub_215B12618(&v26, lpsrc);
      goto LABEL_23;
    case 11:
      sub_215B12928((int)&v26, lpsrc);
    case 12:
      sub_215B12AD0(&v26, lpsrc);
      goto LABEL_23;
    case 13:
      sub_215B12D6C(&v26, lpsrc);
LABEL_23:
      *(_OWORD *)a3 = v26;
      return;
    default:
      *a3 = 0;
      a3[1] = 0;
      return;
  }
}

void sub_215B118CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v18 = *(unsigned int *)(v15 + 216);
  if (v18 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A3E8[v18])(&a15, v16);
  }
  *(_DWORD *)(v15 + 216) = -1;
  sub_215D2319C(&a9);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v15);
  operator delete(v19);
  _Unwind_Resume(a1);
}

void sub_215B11980()
{
}

void sub_215B119D4(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A768, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 48;
  }
  int v6 = operator new(0x108uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A360;
  v11[0] = *(unsigned char *)v4;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = 0;
  uint64_t v8 = *(unsigned char **)(v4 + 8);
  uint64_t v7 = *(unsigned char **)(v4 + 16);
  size_t v9 = v7 - v8;
  if (v7 == v8)
  {
    BOOL v10 = 0;
  }
  else
  {
    if ((v9 & 0x8000000000000000) != 0) {
      sub_215738AC0();
    }
    BOOL v10 = (char *)operator new(v7 - v8);
    uint64_t v12 = v10;
    uint64_t v14 = &v10[v9];
    memcpy(v10, v8, v9);
    uint64_t v13 = &v10[v9];
  }
  sub_215B1342C((uint64_t)(v6 + 3), v11, v5);
  if (v10) {
    operator delete(v10);
  }
  *a1 = v6 + 3;
  a1[1] = v6;
}

void sub_215B11B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (v12) {
    operator delete(v12);
  }
  std::__shared_weak_count::~__shared_weak_count(v11);
  operator delete(v14);
  _Unwind_Resume(a1);
}

void sub_215B11B9C(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A838, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  int v6 = operator new(0x100uLL);
  uint64_t v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A410;
  uint64_t v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  size_t v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6 + 4;
  v6[3] = &unk_26C675EA0;
  v6[4] = &unk_26C675F00;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  *((unsigned char *)v7 + 224) = *(unsigned char *)v10;
  v7[29] = *(void *)(v10 + 56);
  v7[30] = v10;
  v7[31] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    *uint64_t v8 = &unk_26C675DF8;
    *uint64_t v11 = &unk_26C675E58;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    *uint64_t v8 = &unk_26C675DF8;
    *uint64_t v11 = &unk_26C675E58;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B11DD8(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B11E34(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A908, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  int v6 = operator new(0x100uLL);
  uint64_t v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A460;
  uint64_t v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  size_t v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6 + 4;
  v6[3] = &unk_26C676090;
  v6[4] = &unk_26C6760F0;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  *((unsigned char *)v7 + 224) = *(unsigned char *)v10;
  v7[29] = *(void *)(v10 + 56) >> 1;
  v7[30] = v10;
  v7[31] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    *uint64_t v8 = &unk_26C675FE8;
    *uint64_t v11 = &unk_26C676048;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    *uint64_t v8 = &unk_26C675FE8;
    *uint64_t v11 = &unk_26C676048;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B12074(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B120D0(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A9D8, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  int v6 = operator new(0x100uLL);
  uint64_t v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A4B0;
  uint64_t v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  size_t v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6 + 4;
  v6[3] = &unk_26C676280;
  v6[4] = &unk_26C6762E0;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  *((unsigned char *)v7 + 224) = *(unsigned char *)v10;
  v7[29] = *(void *)(v10 + 56) / 3uLL;
  v7[30] = v10;
  v7[31] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    *uint64_t v8 = &unk_26C6761D8;
    *uint64_t v11 = &unk_26C676238;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    *uint64_t v8 = &unk_26C6761D8;
    *uint64_t v11 = &unk_26C676238;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B1231C(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B12378(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6598A0, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 48;
  }
  int v6 = operator new(0x108uLL);
  uint64_t v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A5F0;
  uint64_t v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  size_t v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = *(void *)(v4 + 16);
  uint64_t v11 = *(void *)(v4 + 24);
  v6[3] = &unk_26C676D48;
  v6[4] = &unk_26C676DA8;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  v7[28] = v12;
  v7[29] = v10;
  v7[30] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    v7[31] = v12;
    unsigned char v7[32] = v11;
    void v7[3] = &unk_26C676CA0;
    v7[4] = &unk_26C676D00;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    v7[31] = v12;
    unsigned char v7[32] = v11;
    void v7[3] = &unk_26C676CA0;
    v7[4] = &unk_26C676D00;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B125BC(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B12618(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6770D8, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 128;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 128;
  }
  int v6 = operator new(0x150uLL);
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A640;
  if (*(char *)(v4 + 23) < 0)
  {
    sub_215738B0C(v12, *(void **)v4, *(void *)(v4 + 8));
  }
  else
  {
    long long v7 = *(_OWORD *)v4;
    uint64_t v13 = *(void *)(v4 + 16);
    *(_OWORD *)uint64_t v12 = v7;
  }
  int v14 = *(_DWORD *)(v4 + 24);
  if (*(char *)(v4 + 55) < 0)
  {
    sub_215738B0C(&v15, *(void **)(v4 + 32), *(void *)(v4 + 40));
  }
  else
  {
    long long v8 = *(_OWORD *)(v4 + 32);
    uint64_t v16 = *(void *)(v4 + 48);
    long long v15 = v8;
  }
  int v17 = *(_DWORD *)(v4 + 56);
  if (*(char *)(v4 + 87) < 0)
  {
    sub_215738B0C(&v18, *(void **)(v4 + 64), *(void *)(v4 + 72));
  }
  else
  {
    long long v9 = *(_OWORD *)(v4 + 64);
    uint64_t v19 = *(void *)(v4 + 80);
    long long v18 = v9;
  }
  if (*(char *)(v4 + 111) < 0)
  {
    sub_215738B0C(&__p, *(void **)(v4 + 88), *(void *)(v4 + 96));
  }
  else
  {
    long long v10 = *(_OWORD *)(v4 + 88);
    uint64_t v21 = *(void *)(v4 + 104);
    long long __p = v10;
  }
  uint64_t v11 = v6 + 3;
  sub_215B13EEC((uint64_t)(v6 + 3), (long long *)v12, v5);
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v19) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v16) & 0x80000000) == 0) {
        goto LABEL_20;
      }
LABEL_24:
      operator delete((void *)v15);
      if ((SHIBYTE(v13) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_25;
    }
  }
  else if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete((void *)v18);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_24;
  }
LABEL_20:
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
LABEL_21:
    *a1 = v11;
    a1[1] = v6;
    return;
  }
LABEL_25:
  operator delete(v12[0]);
  *a1 = v11;
  a1[1] = v6;
}

void sub_215B12864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a14 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  if ((a14 & 0x80000000) == 0)
  {
LABEL_4:
    std::__shared_weak_count::~__shared_weak_count(v28);
    operator delete(v30);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a9);
  std::__shared_weak_count::~__shared_weak_count(v28);
  operator delete(v31);
  _Unwind_Resume(a1);
}

void sub_215B128F0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215B12908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2159A2CC0((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_215B12928(int a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C672F78, 0)&& sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v2 = operator new(0x198uLL);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = &unk_26C67A690;
  sub_21596E3EC();
}

void sub_215B12A98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21596F318((uint64_t *)va);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B12AB8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215B12AD0(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AAA8, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  int v6 = operator new(0x100uLL);
  long long v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A6E0;
  long long v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  long long v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6 + 4;
  v6[3] = &unk_26C6773C8;
  v6[4] = &unk_26C677428;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  *((unsigned char *)v7 + 224) = *(unsigned char *)v10;
  v7[29] = *(void *)(v10 + 56) >> 2;
  v7[30] = v10;
  v7[31] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    *long long v8 = &unk_26C677320;
    *uint64_t v11 = &unk_26C677380;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    *long long v8 = &unk_26C677320;
    *uint64_t v11 = &unk_26C677380;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B12D10(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_215B12D6C(void *a1, void *lpsrc)
{
  char v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AB78, 0);
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3 + 8;
    uint64_t v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = 8;
    uint64_t v5 = 32;
  }
  int v6 = operator new(0x100uLL);
  long long v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C67A730;
  long long v8 = v6 + 3;
  uint64_t v10 = *(void *)v4;
  long long v9 = *(std::__shared_weak_count **)(v4 + 8);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6 + 4;
  v6[3] = &unk_26C677580;
  v6[4] = &unk_26C6775E0;
  sub_215B0EA88(v5, (uint64_t)(v6 + 5));
  *((unsigned char *)v7 + 224) = *(unsigned char *)v10;
  v7[29] = *(void *)(v10 + 56) / 6uLL;
  v7[30] = v10;
  v7[31] = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    *long long v8 = &unk_26C6774D8;
    *uint64_t v11 = &unk_26C677538;
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  else
  {
    *long long v8 = &unk_26C6774D8;
    *uint64_t v11 = &unk_26C677538;
  }
  *a1 = v8;
  a1[1] = v7;
}

void sub_215B12FB8(_Unwind_Exception *a1)
{
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

BOOL sub_215B13014(uint64_t a1, int a2)
{
  return (a2 - 1) < 0xD;
}

uint64_t sub_215B13024(uint64_t a1, unsigned int a2)
{
  v3[0] = a2;
  if (a2 - 1 < 0xD)
  {
    v3[7] = 0;
    sub_215B14934();
  }
  return sub_215B13130("unknown type id ", v3);
}

void sub_215B130F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C67A3B8[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B13130(char *__s, unsigned int *a2)
{
  int v5 = 0;
  sub_21583358C(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  unsigned int v7[2] = v4;
  void v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  long long v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C67A3A0[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C67A3D0[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C67A3B8[v5])(v7, v4);
  }
  return result;
}

void sub_215B13230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B1324C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x215B1323CLL);
}

void sub_215B13270(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A310;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13290(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A310;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B132E4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_215B1330C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A360;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B1332C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A360;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B13380(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C675910;
  *(void *)(a1 + 32) = &unk_26C675970;
  uint64_t v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(void *)(a1 + 248) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
    ((void (*)(char *, uint64_t))off_26C674B60[v3])(&v4, a1 + 40);
  }
  *(_DWORD *)(a1 + 216) = -1;
}

uint64_t sub_215B1342C(uint64_t a1, char *a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C675910;
  *(void *)(a1 + 8) = &unk_26C675970;
  sub_215B0EA88(a3, a1 + 16);
  char v5 = *a2;
  *(void *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 200) = v5;
  *(unsigned char *)(a1 + 208) = v5;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  long long v7 = (unsigned char *)*((void *)a2 + 1);
  std::string v6 = (unsigned char *)*((void *)a2 + 2);
  size_t v8 = v6 - v7;
  if (v6 != v7)
  {
    if ((v8 & 0x8000000000000000) != 0) {
      sub_215738AC0();
    }
    long long v9 = (char *)operator new(v6 - v7);
    *(void *)(a1 + 216) = v9;
    *(void *)(a1 + 224) = v9;
    uint64_t v10 = &v9[v8];
    *(void *)(a1 + 232) = &v9[v8];
    memcpy(v9, v7, v8);
    *(void *)(a1 + 224) = v10;
  }
  *(void *)a1 = &unk_26C675868;
  *(void *)(a1 + 8) = &unk_26C6758C8;
  return a1;
}

void sub_215B13548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  int v17 = *v15;
  if (*v15)
  {
    *(void *)(v13 + 224) = v17;
    operator delete(v17);
  }
  uint64_t v18 = *(unsigned int *)(v13 + 192);
  if (v18 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A3E8[v18])(&a13, v14);
  }
  *(_DWORD *)(v13 + 192) = -1;
  _Unwind_Resume(exception_object);
}

void sub_215B13594(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A410;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B135B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A410;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B13608(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C675EA0;
  *(void *)(a1 + 32) = &unk_26C675F00;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B136FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A460;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B1371C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A460;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B13770(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C676090;
  *(void *)(a1 + 32) = &unk_26C6760F0;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B13864(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A4B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13884(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A4B0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B138D8(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C676280;
  *(void *)(a1 + 32) = &unk_26C6762E0;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B139CC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A500;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B139EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A500;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void *sub_215B13A40(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (uint64_t (*)(void))result[29];
  result[3] = &unk_26C676470;
  result[4] = &unk_26C6764D0;
  if (v2) {
    uint64_t result = (void *)v2(0);
  }
  uint64_t v3 = *((unsigned int *)v1 + 54);
  if (v3 != -1) {
    uint64_t result = (void *)((uint64_t (*)(char *, void *))off_26C674B60[v3])(&v4, v1 + 5);
  }
  *((_DWORD *)v1 + 54) = -1;
  return result;
}

void sub_215B13B00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A550;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13B20(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A550;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B13B74(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C6768E0;
  *(void *)(a1 + 32) = &unk_26C676940;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 232);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B13C68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A5A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13C88(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A5A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B13CDC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_215B13D04(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A5F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13D24(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A5F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B13D78(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C676D48;
  *(void *)(a1 + 32) = &unk_26C676DA8;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 240);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B13E6C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A640;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B13E8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A640;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B13EE0(uint64_t a1)
{
  return sub_21599B36C(a1 + 24);
}

uint64_t sub_215B13EEC(uint64_t a1, long long *a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C676F38;
  *(void *)(a1 + 8) = &unk_26C676F98;
  sub_215B0EA88(a3, a1 + 16);
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 200), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 216) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 200) = v5;
  }
  *(unsigned char *)(a1 + 224) = *((_DWORD *)a2 + 6);
  if (*((char *)a2 + 55) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 232), *((void **)a2 + 4), *((void *)a2 + 5));
  }
  else
  {
    long long v6 = a2[2];
    *(void *)(a1 + 248) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 232) = v6;
  }
  *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 14);
  if (*((char *)a2 + 87) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 264), *((void **)a2 + 8), *((void *)a2 + 9));
  }
  else
  {
    long long v7 = a2[4];
    *(void *)(a1 + 280) = *((void *)a2 + 10);
    *(_OWORD *)(a1 + 264) = v7;
  }
  size_t v8 = (unsigned char *)(a1 + 288);
  if (*((char *)a2 + 111) < 0)
  {
    sub_215738B0C(v8, *((void **)a2 + 11), *((void *)a2 + 12));
  }
  else
  {
    long long v9 = *(long long *)((char *)a2 + 88);
    *(void *)(a1 + 304) = *((void *)a2 + 13);
    *(_OWORD *)size_t v8 = v9;
  }
  *(void *)a1 = &unk_26C676E90;
  *(void *)(a1 + 8) = &unk_26C676EF0;
  return a1;
}

void sub_215B14080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  if (*(char *)(v13 + 287) < 0)
  {
    operator delete(*v17);
    if ((*(char *)(v13 + 255) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v13 + 223) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((*(char *)(v13 + 255) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v16);
  if ((*(char *)(v13 + 223) & 0x80000000) == 0)
  {
LABEL_4:
    uint64_t v19 = *(unsigned int *)(v13 + 192);
    if (v19 == -1)
    {
LABEL_10:
      *(_DWORD *)(v13 + 192) = -1;
      _Unwind_Resume(exception_object);
    }
LABEL_9:
    ((void (*)(char *, uint64_t))off_26C67A3E8[v19])(&a13, v14);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(*v15);
  uint64_t v19 = *(unsigned int *)(v13 + 192);
  if (v19 == -1) {
    goto LABEL_10;
  }
  goto LABEL_9;
}

void sub_215B14140(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A690;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B14160(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A690;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B141B4(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C677210;
  *(void *)(a1 + 32) = &unk_26C677270;
  if (*(unsigned char *)(a1 + 400) && *(char *)(a1 + 399) < 0) {
    operator delete(*(void **)(a1 + 376));
  }
  if (*(unsigned char *)(a1 + 368) && *(char *)(a1 + 367) < 0)
  {
    operator delete(*(void **)(a1 + 344));
    uint64_t v2 = *(unsigned int *)(a1 + 216);
    if (v2 == -1) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 216);
  if (v2 != -1) {
LABEL_7:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v2])(&v3, a1 + 40);
LABEL_8:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B14290(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = &unk_26C677210;
  a1[1] = &unk_26C677270;
  sub_215B0EA88(a3, (uint64_t)(a1 + 2));
  operator new();
}

void sub_215B1447C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14)
{
  if (*(unsigned char *)(v14 + 376) && *(char *)(v14 + 375) < 0) {
    operator delete(*v17);
  }
  if (*(unsigned char *)(v14 + 344) && *(char *)(v14 + 343) < 0) {
    operator delete(*v16);
  }
  uint64_t v19 = *(unsigned int *)(v14 + 192);
  if (v19 != -1) {
    ((void (*)(char *, uint64_t))off_26C67A3E8[v19])(&a13, v15);
  }
  *(_DWORD *)(v14 + 192) = -1;
  _Unwind_Resume(exception_object);
}

void sub_215B1452C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A6E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B1454C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A6E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B145A0(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C6773C8;
  *(void *)(a1 + 32) = &unk_26C677428;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B14694(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A730;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B146B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A730;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B14708(uint64_t a1)
{
  *(void *)(a1 + 24) = &unk_26C677580;
  *(void *)(a1 + 32) = &unk_26C6775E0;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(unsigned int *)(a1 + 216);
    if (v3 == -1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 216);
  if (v3 != -1) {
LABEL_4:
  }
    ((void (*)(char *, uint64_t))off_26C67A3E8[v3])(&v4, a1 + 40);
LABEL_5:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_215B147FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A780;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B1481C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A780;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B14870(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_215B14898(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A7D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B148B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67A7D0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B1490C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_215B14934()
{
}

void sub_215B14B20(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215B14B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215B14B8C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t sub_215B14C1C(uint64_t a1, long long *a2)
{
  LOBYTE(v5) = 0;
  char v16 = *((unsigned char *)a2 + 120);
  if (!v16)
  {
    long long v5 = *a2;
    LOBYTE(__p[0]) = 0;
    char v15 = 0;
    if (*((unsigned char *)a2 + 112))
    {
      char v8 = 0;
      if (*((unsigned char *)a2 + 40))
      {
        *(_OWORD *)long long __p = a2[1];
        uint64_t v7 = *((void *)a2 + 4);
        *((void *)a2 + 3) = 0;
        *((void *)a2 + 4) = 0;
        *((void *)a2 + 2) = 0;
        char v8 = 1;
      }
      LOBYTE(v9) = 0;
      char v14 = 0;
      if (*((unsigned char *)a2 + 104))
      {
        uint64_t v3 = *((void *)a2 + 9);
        uint64_t v10 = *((void *)a2 + 8);
        long long v9 = a2[3];
        *((void *)a2 + 7) = 0;
        *((void *)a2 + 8) = 0;
        *((void *)a2 + 6) = 0;
        uint64_t v11 = v3;
        *(_OWORD *)uint64_t v12 = a2[5];
        uint64_t v13 = *((void *)a2 + 12);
        *((void *)a2 + 10) = 0;
        *((void *)a2 + 11) = 0;
        *((void *)a2 + 12) = 0;
        char v14 = 1;
      }
      char v15 = 1;
    }
  }
  sub_2157413BC((uint64_t)&v5, a1);
  if (v16 || !v15) {
    return a1;
  }
  if (v14)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
      if ((SHIBYTE(v10) & 0x80000000) == 0) {
        goto LABEL_14;
      }
LABEL_18:
      operator delete((void *)v9);
      if (!v8) {
        return a1;
      }
      goto LABEL_15;
    }
    operator delete(v12[0]);
    if (SHIBYTE(v10) < 0) {
      goto LABEL_18;
    }
  }
LABEL_14:
  if (!v8) {
    return a1;
  }
LABEL_15:
  if ((SHIBYTE(v7) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(__p[0]);
  return a1;
}

uint64_t sub_215B14D84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 608)) {
    *(unsigned char *)(a1 + 608) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 592);
  *(void *)(a1 + 592) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(unsigned char *)(a1 + 552))
  {
    uint64_t v3 = *(void *)(a1 + 544);
    *(void *)(a1 + 544) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    *(unsigned char *)(a1 + 552) = 0;
  }
  sub_215B20A20(*(void **)(a1 + 632));
  char v4 = *(std::mutex **)(a1 + 616);
  *(void *)(a1 + 616) = 0;
  if (v4)
  {
    std::mutex::~mutex(v4);
    MEMORY[0x2166C4D20]();
  }
  uint64_t v5 = *(void *)(a1 + 592);
  *(void *)(a1 + 592) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 568);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 576);
    char v8 = *(void **)(a1 + 568);
    if (v7 != v6)
    {
      do
      {
        v7 -= 288;
        sub_215B203C8(v7);
      }
      while (v7 != v6);
      char v8 = *(void **)(a1 + 568);
    }
    *(void *)(a1 + 576) = v6;
    operator delete(v8);
  }
  long long v9 = *(std::mutex **)(a1 + 560);
  *(void *)(a1 + 560) = 0;
  if (v9)
  {
    std::mutex::~mutex(v9);
    MEMORY[0x2166C4D20]();
  }
  if (*(unsigned char *)(a1 + 552))
  {
    uint64_t v10 = *(void *)(a1 + 544);
    *(void *)(a1 + 544) = 0;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
  }
  uint64_t v11 = *(std::__shared_weak_count **)(a1 + 528);
  if (v11) {
    std::__shared_weak_count::__release_weak(v11);
  }
  if (*(unsigned char *)(a1 + 464))
  {
    uint64_t v12 = *(void *)(a1 + 456);
    if (v12 == a1 + 432)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 432) + 32))(a1 + 432);
      sub_21596CD84(a1 + 272);
      sub_2157B69B0(a1 + 96);
      if (!*(unsigned char *)(a1 + 88)) {
        return a1;
      }
      goto LABEL_30;
    }
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 40))(v12);
    }
  }
  sub_21596CD84(a1 + 272);
  sub_2157B69B0(a1 + 96);
  if (!*(unsigned char *)(a1 + 88)) {
    return a1;
  }
LABEL_30:
  if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 64));
  return a1;
}

void sub_215B14FE4(uint64_t a1)
{
  sub_215B14D84(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B1501C(std::string::size_type a1@<X0>, const void ***a2@<X1>, uint64_t a3@<X8>)
{
  char v33 = "data";
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    uint64_t v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 240);
      if (v8)
      {
        sub_215B1634C(a3, v8, a1, a2);
LABEL_29:
        if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_215B20D44((uint64_t)v11, (const char *)&v33);
  if (SHIBYTE(v12) < 0)
  {
    sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)v11;
    uint64_t v14 = v12;
  }
  char v15 = 1;
  LOBYTE(v16) = 0;
  char v20 = 0;
  char v21 = 1;
  sub_215982968(0xAu, (long long *)__dst, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v32)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v21) {
      goto LABEL_26;
    }
LABEL_20:
    if (!v20) {
      goto LABEL_23;
    }
    if (v19 < 0)
    {
      operator delete(v18);
      if ((v17 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v15) {
          goto LABEL_26;
        }
LABEL_24:
        if (SHIBYTE(v14) < 0) {
          operator delete(__dst[0]);
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v16);
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v9 = v25;
  if (v25)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v24;
    uint64_t v24 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v31)
  {
    uint64_t v10 = v28;
    *(void *)(a3 + 64) = v27;
    *(_OWORD *)(a3 + 48) = v26;
    long long v26 = 0uLL;
    *(void *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v29;
    *(void *)(a3 + 96) = v30;
    uint64_t v27 = 0;
    long long v29 = 0uLL;
    uint64_t v30 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  if (v21) {
    goto LABEL_20;
  }
LABEL_26:
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
  if (v7) {
    goto LABEL_29;
  }
}

void sub_215B15290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B15350(std::string::size_type a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v33 = "sync update";
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    uint64_t v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 240);
      if (v8)
      {
        sub_215B167BC(a3, v8, a1, a2);
LABEL_29:
        if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_215B20D44((uint64_t)v11, (const char *)&v33);
  if (SHIBYTE(v12) < 0)
  {
    sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)v11;
    uint64_t v14 = v12;
  }
  char v15 = 1;
  LOBYTE(v16) = 0;
  char v20 = 0;
  char v21 = 1;
  sub_215982968(0xAu, (long long *)__dst, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v32)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v21) {
      goto LABEL_26;
    }
LABEL_20:
    if (!v20) {
      goto LABEL_23;
    }
    if (v19 < 0)
    {
      operator delete(v18);
      if ((v17 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v15) {
          goto LABEL_26;
        }
LABEL_24:
        if (SHIBYTE(v14) < 0) {
          operator delete(__dst[0]);
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v16);
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v9 = v25;
  if (v25)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v24;
    uint64_t v24 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v31)
  {
    uint64_t v10 = v28;
    *(void *)(a3 + 64) = v27;
    *(_OWORD *)(a3 + 48) = v26;
    long long v26 = 0uLL;
    *(void *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v29;
    *(void *)(a3 + 96) = v30;
    uint64_t v27 = 0;
    long long v29 = 0uLL;
    uint64_t v30 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  if (v21) {
    goto LABEL_20;
  }
LABEL_26:
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
  if (v7) {
    goto LABEL_29;
  }
}

void sub_215B155C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B15684(std::string::size_type a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v33 = "connection status update";
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    uint64_t v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 240);
      if (v8)
      {
        sub_215B177C0(a3, v8, a1, a2);
LABEL_29:
        if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_215B20D44((uint64_t)v11, (const char *)&v33);
  if (SHIBYTE(v12) < 0)
  {
    sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)v11;
    uint64_t v14 = v12;
  }
  char v15 = 1;
  LOBYTE(v16) = 0;
  char v20 = 0;
  char v21 = 1;
  sub_215982968(0xAu, (long long *)__dst, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v32)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v21) {
      goto LABEL_26;
    }
LABEL_20:
    if (!v20) {
      goto LABEL_23;
    }
    if (v19 < 0)
    {
      operator delete(v18);
      if ((v17 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v15) {
          goto LABEL_26;
        }
LABEL_24:
        if (SHIBYTE(v14) < 0) {
          operator delete(__dst[0]);
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v16);
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v9 = v25;
  if (v25)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v24;
    uint64_t v24 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v31)
  {
    uint64_t v10 = v28;
    *(void *)(a3 + 64) = v27;
    *(_OWORD *)(a3 + 48) = v26;
    long long v26 = 0uLL;
    *(void *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v29;
    *(void *)(a3 + 96) = v30;
    uint64_t v27 = 0;
    long long v29 = 0uLL;
    uint64_t v30 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  if (v21) {
    goto LABEL_20;
  }
LABEL_26:
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
  if (v7) {
    goto LABEL_29;
  }
}

void sub_215B158F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B159B8(std::string::size_type a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v33 = "contexts status update";
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    uint64_t v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 240);
      if (v8)
      {
        sub_215B188B8(a3, v8, a1, a2);
LABEL_29:
        if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_215B20D44((uint64_t)v11, (const char *)&v33);
  if (SHIBYTE(v12) < 0)
  {
    sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)v11;
    uint64_t v14 = v12;
  }
  char v15 = 1;
  LOBYTE(v16) = 0;
  char v20 = 0;
  char v21 = 1;
  sub_215982968(0xAu, (long long *)__dst, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v32)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v21) {
      goto LABEL_26;
    }
LABEL_20:
    if (!v20) {
      goto LABEL_23;
    }
    if (v19 < 0)
    {
      operator delete(v18);
      if ((v17 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v15) {
          goto LABEL_26;
        }
LABEL_24:
        if (SHIBYTE(v14) < 0) {
          operator delete(__dst[0]);
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v16);
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v9 = v25;
  if (v25)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v24;
    uint64_t v24 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v31)
  {
    uint64_t v10 = v28;
    *(void *)(a3 + 64) = v27;
    *(_OWORD *)(a3 + 48) = v26;
    long long v26 = 0uLL;
    *(void *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v29;
    *(void *)(a3 + 96) = v30;
    uint64_t v27 = 0;
    long long v29 = 0uLL;
    uint64_t v30 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  if (v21) {
    goto LABEL_20;
  }
LABEL_26:
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
  if (v7) {
    goto LABEL_29;
  }
}

void sub_215B15C2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  if (!atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B15CEC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  char v43 = 1;
  uint64_t v39 = 0x500000001;
  LODWORD(v40) = 0;
  HIDWORD(v40) = 0;
  *(void *)((char *)&v40 + 4) = 0x200000001;
  sub_215AEBD80(a2, 1, (__n128 *)&v39, (uint64_t)&v44);
  *(unsigned char *)a3 = v43;
  *(_OWORD *)(a3 + 8) = v44;
  *(_DWORD *)(a3 + 24) = v45;
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 56) = 0;
  if (v48)
  {
    if (SHIBYTE(v47) < 0)
    {
      sub_215738B0C((unsigned char *)(a3 + 32), (void *)__p, *((unint64_t *)&__p + 1));
    }
    else
    {
      *(_OWORD *)(a3 + 32) = __p;
      *(void *)(a3 + 48) = v47;
    }
    *(unsigned char *)(a3 + 56) = 1;
  }
  *(unsigned char *)(a3 + 64) = 0;
  *(unsigned char *)(a3 + 208) = 0;
  if (v61)
  {
    sub_2157B6F84((char *)(a3 + 64), &v49);
    *(unsigned char *)(a3 + 208) = 1;
  }
  *(_OWORD *)(a3 + 216) = v62;
  uint64_t v6 = a1[65];
  *(void *)(a3 + 232) = v63;
  *(void *)(a3 + 240) = v6;
  uint64_t v7 = a1[66];
  *(void *)(a3 + 248) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a3 + 256) = *(void *)(a2 + 24);
  *(void *)(a3 + 264) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 16), 1uLL, memory_order_relaxed);
  }
  int v9 = (char *)operator new(0x90uLL);
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(void *)int v9 = &unk_26C67AE00;
  *(_OWORD *)(v9 + 24) = xmmword_215ED00F0;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *((void *)v9 + 11) = 0;
  *((void *)v9 + 12) = 1018212795;
  *(_OWORD *)(v9 + 104) = 0u;
  *(_OWORD *)(v9 + 120) = 0u;
  *((void *)v9 + 17) = 0;
  *(void *)(a3 + 272) = v9 + 24;
  *(void *)(a3 + 280) = v9;
  uint64_t v10 = (std::mutex *)a1[70];
  std::mutex::lock(v10);
  unint64_t v11 = a1[72];
  unint64_t v12 = a1[73];
  if (v11 < v12)
  {
    sub_215B2048C(a1[72], a3);
    uint64_t v13 = v11 + 288;
    a1[72] = v13;
    goto LABEL_35;
  }
  uint64_t v14 = a1[71];
  unint64_t v15 = 0x8E38E38E38E38E39 * ((uint64_t)(v11 - v14) >> 5);
  if (v15 + 1 > 0xE38E38E38E38E3) {
    sub_215738AC0();
  }
  unint64_t v16 = 0x8E38E38E38E38E39 * ((uint64_t)(v12 - v14) >> 5);
  uint64_t v17 = 2 * v16;
  if (2 * v16 <= v15 + 1) {
    uint64_t v17 = v15 + 1;
  }
  if (v16 >= 0x71C71C71C71C71) {
    unint64_t v18 = 0xE38E38E38E38E3;
  }
  else {
    unint64_t v18 = v17;
  }
  uint64_t v42 = a1 + 73;
  if (v18)
  {
    if (v18 > 0xE38E38E38E38E3) {
      sub_215738AD8();
    }
    char v19 = (char *)operator new(288 * v18);
  }
  else
  {
    char v19 = 0;
  }
  uint64_t v39 = (uint64_t)v19;
  *(void *)&long long v40 = &v19[288 * v15];
  *((void *)&v40 + 1) = v40;
  char v41 = &v19[288 * v18];
  sub_215B2048C(v40, a3);
  uint64_t v20 = v40;
  uint64_t v13 = *((void *)&v40 + 1) + 288;
  char v21 = (char *)a1[72];
  long long v22 = (char *)a1[71];
  if (v21 == v22)
  {
    a1[71] = v40;
    a1[72] = v13;
    a1[73] = v41;
    if (v21) {
LABEL_34:
    }
      operator delete(v21);
  }
  else
  {
    uint64_t v23 = 0;
    do
    {
      uint64_t v27 = v20 + v23;
      uint64_t v28 = &v21[v23];
      *(unsigned char *)(v20 + v23 - 288) = v21[v23 - 288];
      *(_OWORD *)(v20 + v23 - 280) = *(_OWORD *)&v21[v23 - 280];
      *(_DWORD *)(v20 + v23 - 264) = *(_DWORD *)&v21[v23 - 264];
      *(unsigned char *)(v20 + v23 - 256) = 0;
      *(unsigned char *)(v20 + v23 - 232) = 0;
      if (v21[v23 - 232])
      {
        long long v29 = *((_OWORD *)v28 - 16);
        *(void *)(v20 + v23 - 240) = *((void *)v28 - 30);
        *(_OWORD *)(v20 + v23 - 256) = v29;
        *((void *)v28 - 31) = 0;
        *((void *)v28 - 30) = 0;
        *((void *)v28 - 32) = 0;
        *(unsigned char *)(v27 - 232) = 1;
      }
      *(unsigned char *)(v27 - 224) = 0;
      *(unsigned char *)(v27 - 80) = 0;
      if (*(v28 - 80))
      {
        uint64_t v30 = &v21[v23];
        long long v31 = *(_OWORD *)&v21[v23 - 224];
        *(void *)(v27 - 208) = *(void *)&v21[v23 - 208];
        *(_OWORD *)(v27 - 224) = v31;
        *((void *)v30 - 27) = 0;
        *((void *)v30 - 26) = 0;
        *((void *)v30 - 28) = 0;
        uint64_t v32 = v20 + v23;
        long long v33 = *(_OWORD *)&v21[v23 - 200];
        *(void *)(v32 - 184) = *(void *)&v21[v23 - 184];
        *(_OWORD *)(v32 - 200) = v33;
        *((void *)v30 - 24) = 0;
        *((void *)v30 - 23) = 0;
        *((void *)v30 - 25) = 0;
        long long v34 = *(_OWORD *)&v21[v23 - 176];
        *(void *)(v32 - 160) = *(void *)&v21[v23 - 160];
        *(_OWORD *)(v32 - 176) = v34;
        *((void *)v30 - 21) = 0;
        *((void *)v30 - 20) = 0;
        *((void *)v30 - 22) = 0;
        long long v35 = *(_OWORD *)&v21[v23 - 152];
        *(void *)(v32 - 136) = *(void *)&v21[v23 - 136];
        *(_OWORD *)(v32 - 152) = v35;
        *((void *)v30 - 19) = 0;
        *((void *)v30 - 18) = 0;
        *((void *)v30 - 17) = 0;
        long long v36 = *(_OWORD *)&v21[v23 - 128];
        *(void *)(v32 - 112) = *(void *)&v21[v23 - 112];
        *(_OWORD *)(v32 - 128) = v36;
        *((void *)v30 - 16) = 0;
        *((void *)v30 - 15) = 0;
        *((void *)v30 - 14) = 0;
        long long v37 = *(_OWORD *)&v21[v23 - 104];
        *(void *)(v32 - 88) = *(void *)&v21[v23 - 88];
        *(_OWORD *)(v32 - 104) = v37;
        *((void *)v30 - 13) = 0;
        *((void *)v30 - 12) = 0;
        *((void *)v30 - 11) = 0;
        *(unsigned char *)(v27 - 80) = 1;
      }
      uint64_t v24 = v20 + v23;
      unsigned __int8 v25 = &v21[v23];
      long long v26 = *(_OWORD *)&v21[v23 - 72];
      *(void *)(v24 - 56) = *(void *)&v21[v23 - 56];
      *(_OWORD *)(v24 - 72) = v26;
      *(_OWORD *)(v24 - 48) = *(_OWORD *)&v21[v23 - 48];
      *((void *)v25 - 6) = 0;
      *((void *)v25 - 5) = 0;
      *(_OWORD *)(v24 - 32) = *(_OWORD *)&v21[v23 - 32];
      *((void *)v25 - 4) = 0;
      *((void *)v25 - 3) = 0;
      *(_OWORD *)(v24 - 16) = *(_OWORD *)&v21[v23 - 16];
      *((void *)v25 - 2) = 0;
      *((void *)v25 - 1) = 0;
      v23 -= 288;
    }
    while (&v21[v23] != v22);
    char v21 = (char *)a1[71];
    uint64_t v38 = a1[72];
    a1[71] = v20 + v23;
    a1[72] = v13;
    a1[73] = v41;
    while ((char *)v38 != v21)
    {
      v38 -= 288;
      sub_215B203C8(v38);
    }
    if (v21) {
      goto LABEL_34;
    }
  }
LABEL_35:
  a1[72] = v13;
  std::mutex::unlock(v10);
  if (!v61) {
    goto LABEL_42;
  }
  if (v60 < 0)
  {
    operator delete(v59);
    if ((v58 & 0x80000000) == 0)
    {
LABEL_38:
      if ((v56 & 0x80000000) == 0) {
        goto LABEL_39;
      }
      goto LABEL_48;
    }
  }
  else if ((v58 & 0x80000000) == 0)
  {
    goto LABEL_38;
  }
  operator delete(v57);
  if ((v56 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v54 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_49;
  }
LABEL_48:
  operator delete(v55);
  if ((v54 & 0x80000000) == 0)
  {
LABEL_40:
    if ((v52 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_50;
  }
LABEL_49:
  operator delete(v53);
  if ((v52 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v50 & 0x80000000) == 0) {
      goto LABEL_42;
    }
LABEL_51:
    operator delete((void *)v49);
    if (!v48) {
      return;
    }
    goto LABEL_43;
  }
LABEL_50:
  operator delete(v51);
  if (v50 < 0) {
    goto LABEL_51;
  }
LABEL_42:
  if (!v48) {
    return;
  }
LABEL_43:
  if (SHIBYTE(v47) < 0) {
    operator delete((void *)__p);
  }
}

void sub_215B1628C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  if (*(unsigned char *)(v10 + 56))
  {
    if (*(char *)(v10 + 55) < 0)
    {
      operator delete(*v11);
      sub_21596C1D4((uint64_t)va);
      _Unwind_Resume(a1);
    }
  }
  sub_21596C1D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B1634C(uint64_t a1, uint64_t a2, std::string::size_type a3, const void ***a4)
{
  uint64_t v8 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v8);
  int v9 = sub_215B20FC8((uint64_t **)(a2 + 624), a3 + 8, (_OWORD *)(a3 + 8));
  unint64_t v11 = v9[6];
  uint64_t v10 = (std::__shared_weak_count *)v9[7];
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(v8);
  if (v11)
  {
    std::mutex::lock((std::mutex *)v11);
    sub_21573D640((uint64_t **)v11 + 10, *a4, (uint64_t)*a4);
    std::mutex::unlock((std::mutex *)v11);
  }
  if (!*(unsigned char *)(a2 + 304)) {
    goto LABEL_8;
  }
  v16.__r_.__value_.__r.__words[0] = a2 + 272;
  v16.__r_.__value_.__l.__size_ = a3;
  *(void *)&long long v34 = &unk_26C67AE50;
  *((void *)&v34 + 1) = &v16;
  *(void *)&long long v35 = a4;
  sub_215E12638((uint64_t)&v34, (uint64_t)v44);
  if (v54)
  {
    *(unsigned char *)a1 = 0;
LABEL_8:
    *(unsigned char *)(a1 + 120) = 1;
    goto LABEL_9;
  }
  sub_215E10780((uint64_t)v44, &v16);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v16.__r_.__value_.__l.__data_, v16.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v16;
  }
  char v27 = 1;
  LOBYTE(v28) = 0;
  char v32 = 0;
  char v33 = 1;
  sub_21598929C((uint64_t)&v34, 2u, (long long *)&__dst);
  if (v33)
  {
    if (v32)
    {
      if (v31 < 0) {
        operator delete(__p);
      }
      if (v29 < 0) {
        operator delete(v28);
      }
    }
    if (v27 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a2 + 464)) {
      goto LABEL_31;
    }
LABEL_29:
    uint64_t v12 = *(void *)(a2 + 456);
    if (!v12) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, std::string::size_type, long long *))(*(void *)v12 + 48))(v12, a3, &v34);
    goto LABEL_31;
  }
  operator delete(v16.__r_.__value_.__l.__data_);
  if (*(unsigned char *)(a2 + 464)) {
    goto LABEL_29;
  }
LABEL_31:
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v34;
  uint64_t v13 = sub_215741BFC(&v16.__r_.__value_.__s.__data_[16], &v35);
  *(_OWORD *)a1 = *(_OWORD *)&v16.__r_.__value_.__l.__data_;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v25)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v14 = v18;
    if (v18)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v13;
      *(void *)(a1 + 32) = *((void *)v13 + 2);
      *((void *)v13 + 1) = 0;
      *((void *)v13 + 2) = 0;
      *(void *)uint64_t v13 = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v24)
    {
      uint64_t v15 = v21;
      *(void *)(a1 + 64) = v20;
      *(_OWORD *)(a1 + 48) = v19;
      long long v19 = 0uLL;
      *(void *)(a1 + 72) = v15;
      *(_OWORD *)(a1 + 80) = v22;
      *(void *)(a1 + 96) = v23;
      uint64_t v20 = 0;
      long long v22 = 0uLL;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v14 && v17 < 0) {
      operator delete((void *)v16.__r_.__value_.__r.__words[2]);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v43)
  {
    if (v42)
    {
      if (v41 < 0) {
        operator delete(v40);
      }
      if (v39 < 0) {
        operator delete(v38);
      }
    }
    if (v37 && v36 < 0) {
      operator delete((void *)v35);
    }
  }
  if (!v54 && v53)
  {
    if (v52)
    {
      if (v51 < 0) {
        operator delete(v50);
      }
      if (v49 < 0) {
        operator delete(v48);
      }
    }
    if (v47 && v46 < 0) {
      operator delete(v45);
    }
  }
LABEL_9:
  if (v10)
  {
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215B1670C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_2157407D4(v43 - 192);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215B16764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B16778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215B16794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B167A8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B167BC(uint64_t a1, uint64_t a2, std::string::size_type a3, uint64_t a4)
{
  if (!*(unsigned char *)(a4 + 48))
  {
    *(_OWORD *)&unsigned char v30[8] = xmmword_215ED7D50;
    strcpy((char *)operator new(0x68uLL), "Received outdated Sync from client. Update the client to protocol 1.3.0 to sync with the server.");
    LODWORD(v31) = 1;
    sub_2159651D4();
  }
  if (*(_DWORD *)(a4 + 40) != 1)
  {
    LODWORD(v31) = 0;
    sub_215806F18(v30, "Received invalid Sync update from client ");
    sub_2159651D4();
  }
  if (*(unsigned char *)(a2 + 608)) {
    (*(void (**)(void, std::string::size_type, uint64_t))(**(void **)(a2 + 600) + 40))(*(void *)(a2 + 600), a3 + 8, a4);
  }
  if (!*(unsigned char *)(a2 + 344)) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a4 + 40) != 1) {
    sub_215742D4C();
  }
  if (!*(unsigned char *)a4) {
    goto LABEL_10;
  }
  v12.__r_.__value_.__r.__words[0] = a2 + 312;
  v12.__r_.__value_.__l.__size_ = a3;
  *(void *)uint64_t v30 = &unk_26C67AE90;
  *(void *)&unsigned char v30[8] = &v12;
  *(void *)&v30[16] = a2;
  uint64_t v31 = a4;
  sub_215E12638((uint64_t)v30, (uint64_t)v40);
  if (v50)
  {
    *(unsigned char *)a1 = 0;
LABEL_10:
    *(unsigned char *)(a1 + 120) = 1;
    return;
  }
  sub_215E10780((uint64_t)v40, &v12);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&v22, v12.__r_.__value_.__l.__data_, v12.__r_.__value_.__l.__size_);
  }
  else {
    std::string v22 = v12;
  }
  char v23 = 1;
  LOBYTE(v24) = 0;
  char v28 = 0;
  char v29 = 1;
  sub_21598929C((uint64_t)v30, 2u, (long long *)&v22);
  if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (*(unsigned char *)(a2 + 464))
  {
    uint64_t v8 = *(void *)(a2 + 456);
    if (!v8) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, std::string::size_type, unsigned char *))(*(void *)v8 + 48))(v8, a3, v30);
  }
  *(_OWORD *)&v12.__r_.__value_.__l.__data_ = *(_OWORD *)v30;
  int v9 = sub_215741BFC(&v12.__r_.__value_.__s.__data_[16], (long long *)&v30[16]);
  *(_OWORD *)a1 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v21)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v10 = v14;
    if (v14)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
      *(void *)(a1 + 32) = *((void *)v9 + 2);
      *((void *)v9 + 1) = 0;
      *((void *)v9 + 2) = 0;
      *(void *)int v9 = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v20)
    {
      uint64_t v11 = v17;
      *(void *)(a1 + 64) = v16;
      *(_OWORD *)(a1 + 48) = v15;
      long long v15 = 0uLL;
      *(void *)(a1 + 72) = v11;
      *(_OWORD *)(a1 + 80) = v18;
      *(void *)(a1 + 96) = v19;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      uint64_t v19 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v10 && v13 < 0) {
      operator delete((void *)v12.__r_.__value_.__r.__words[2]);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0) {
        operator delete(v36[0]);
      }
      if (SHIBYTE(v35) < 0) {
        operator delete(v34[0]);
      }
    }
    if (v33 && v32 < 0) {
      operator delete(*(void **)&v30[16]);
    }
  }
  if (!v50 && v49)
  {
    if (!v48) {
      goto LABEL_17;
    }
    if (v47 < 0)
    {
      operator delete(v46);
      if ((v45 & 0x80000000) == 0)
      {
LABEL_17:
        if (!v43) {
          return;
        }
LABEL_18:
        if (v42 < 0) {
          operator delete(v41);
        }
        return;
      }
    }
    else if ((v45 & 0x80000000) == 0)
    {
      goto LABEL_17;
    }
    operator delete(v44);
    if (!v43) {
      return;
    }
    goto LABEL_18;
  }
}

void sub_215B16F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  sub_2157407D4(v42 - 184);
  _Unwind_Resume(a1);
}

void sub_215B16FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215B1707C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_215B17090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_215B170A4(_Unwind_Exception *a1)
{
  sub_21573FF04(v1 - 184);
  _Unwind_Resume(a1);
}

void sub_215B170B8(_Unwind_Exception *a1)
{
  sub_21573FF04(v1 - 184);
  _Unwind_Resume(a1);
}

void sub_215B170CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_215B170E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215742CF0((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_215B170F4(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int v50 = 3;
  LOBYTE(v51) = 0;
  char v61 = 0;
  uint64_t v8 = *(std::mutex **)(a1 + 560);
  std::mutex::lock(v8);
  uint64_t v9 = *(void *)(a1 + 568);
  uint64_t v10 = *(void *)(a1 + 576);
  if (v9 == v10)
  {
    char v11 = 0;
LABEL_28:
    std::mutex::unlock(v8);
    if (*(unsigned char *)(a1 + 552)) {
      goto LABEL_29;
    }
    goto LABEL_31;
  }
  char v11 = 0;
  while (1)
  {
    char v13 = *(std::__shared_weak_count **)(v9 + 264);
    if (!v13) {
      goto LABEL_6;
    }
    unsigned __int8 v14 = std::__shared_weak_count::lock(v13);
    if (!v14) {
      goto LABEL_6;
    }
    long long v15 = v14;
    uint64_t v16 = *(void *)(v9 + 256);
    if (v16)
    {
      uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 24))(v16);
      if (*v17 == *a3 && v17[1] == a3[1]) {
        break;
      }
    }
    if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      char v12 = 1;
LABEL_5:
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if ((v12 & 1) == 0) {
        goto LABEL_28;
      }
    }
LABEL_6:
    v9 += 288;
    if (v9 == v10) {
      goto LABEL_28;
    }
  }
  sub_215984B30(v16, a2, (uint64_t)&v38);
  if (!v49)
  {
    sub_215983BB0((uint64_t)&v50, (uint64_t)&v38);
    if (!v49)
    {
      if (v48)
      {
        if (v47)
        {
          if (SHIBYTE(v46) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v43) < 0) {
            operator delete(v42[0]);
          }
        }
        if (v41 && v40 < 0) {
          operator delete(v39[0]);
        }
      }
    }
  }
  if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    char v12 = 0;
    char v11 = 1;
    goto LABEL_5;
  }
  char v11 = 1;
  std::mutex::unlock(v8);
  if (!*(unsigned char *)(a1 + 552)) {
    goto LABEL_31;
  }
LABEL_29:
  if ((v11 & 1) != 0 || (sub_215AF8AF8(*(void *)(a1 + 544), a2, a3, (uint64_t)&v38), v49))
  {
LABEL_31:
    if (v61)
    {
      long long v38 = v51;
      uint64_t v19 = sub_215741BFC(v39, &v52);
      *(_OWORD *)a4 = v38;
      *(unsigned char *)(a4 + 16) = 0;
      *(unsigned char *)(a4 + 112) = 0;
      if (v48)
      {
        *(unsigned char *)(a4 + 40) = 0;
        int v20 = v41;
        if (v41)
        {
          *(_OWORD *)(a4 + 16) = *(_OWORD *)v19;
          *(void *)(a4 + 32) = *((void *)v19 + 2);
          *((void *)v19 + 1) = 0;
          *((void *)v19 + 2) = 0;
          *(void *)uint64_t v19 = 0;
          *(unsigned char *)(a4 + 40) = 1;
        }
        *(unsigned char *)(a4 + 48) = 0;
        *(unsigned char *)(a4 + 104) = 0;
        if (v47)
        {
          uint64_t v24 = v44;
          *(void *)(a4 + 64) = v43;
          *(_OWORD *)(a4 + 48) = *(_OWORD *)v42;
          v42[0] = 0;
          v42[1] = 0;
          *(void *)(a4 + 72) = v24;
          *(_OWORD *)(a4 + 80) = *(_OWORD *)__p;
          *(void *)(a4 + 96) = v46;
          uint64_t v43 = 0;
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v46 = 0;
          *(unsigned char *)(a4 + 104) = 1;
        }
        *(unsigned char *)(a4 + 112) = 1;
        *(unsigned char *)(a4 + 120) = 0;
        if (v20) {
          goto LABEL_52;
        }
      }
      else
      {
        *(unsigned char *)(a4 + 120) = 0;
      }
    }
    else
    {
      if (!((*(unsigned char *)(a1 + 552) != 0) | v11 & 1)) {
        sub_215AB91F8((uint64_t)a3, 13, (uint64_t)"client not found");
      }
      *(unsigned char *)(a4 + 120) = 1;
    }
  }
  else
  {
    if (*((void (****)(std::error_category *__hidden))&v38 + 1) != sub_215AB78E8() || v38 != 13)
    {
      if (v49)
      {
        exception = __cxa_allocate_exception(8uLL);
        void *exception = &unk_26C65A5B0;
        __cxa_throw(exception, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
      }
      sub_215983BB0((uint64_t)&v50, (uint64_t)&v38);
      if (!v49 && v48)
      {
        if (v47)
        {
          if (SHIBYTE(v46) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v43) < 0) {
            operator delete(v42[0]);
          }
        }
        if (v41 && v40 < 0) {
          operator delete(v39[0]);
        }
      }
      goto LABEL_31;
    }
    if (v49)
    {
      long long v26 = __cxa_allocate_exception(8uLL);
      *long long v26 = &unk_26C65A5B0;
      __cxa_throw(v26, (struct type_info *)&unk_26C6566F8, (void (*)(void *))std::exception::~exception);
    }
    long long v27 = v38;
    char v21 = sub_215741BFC(&v28, (long long *)v39);
    *(_OWORD *)a4 = v27;
    *(unsigned char *)(a4 + 16) = 0;
    *(unsigned char *)(a4 + 112) = 0;
    if (v37)
    {
      *(unsigned char *)(a4 + 40) = 0;
      int v22 = v30;
      if (v30)
      {
        *(_OWORD *)(a4 + 16) = *(_OWORD *)v21;
        *(void *)(a4 + 32) = *((void *)v21 + 2);
        *((void *)v21 + 1) = 0;
        *((void *)v21 + 2) = 0;
        *(void *)char v21 = 0;
        *(unsigned char *)(a4 + 40) = 1;
      }
      *(unsigned char *)(a4 + 48) = 0;
      *(unsigned char *)(a4 + 104) = 0;
      if (v36)
      {
        uint64_t v23 = v33;
        *(void *)(a4 + 64) = v32;
        *(_OWORD *)(a4 + 48) = v31;
        long long v31 = 0uLL;
        *(void *)(a4 + 72) = v23;
        *(_OWORD *)(a4 + 80) = v34;
        *(void *)(a4 + 96) = v35;
        uint64_t v32 = 0;
        long long v34 = 0uLL;
        uint64_t v35 = 0;
        *(unsigned char *)(a4 + 104) = 1;
      }
      *(unsigned char *)(a4 + 112) = 1;
      *(unsigned char *)(a4 + 120) = 0;
      if (v22 && v29 < 0) {
        operator delete(v28);
      }
    }
    else
    {
      *(unsigned char *)(a4 + 120) = 0;
    }
    if (!v49 && v48)
    {
      if (v47)
      {
        if (SHIBYTE(v46) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v43) < 0) {
          operator delete(v42[0]);
        }
      }
      if (v41)
      {
LABEL_52:
        if (v40 < 0) {
          operator delete(v39[0]);
        }
      }
    }
  }
  if (!v61 || !v60) {
    return;
  }
  if (!v59) {
    goto LABEL_60;
  }
  if ((v58 & 0x80000000) == 0)
  {
    if ((v56 & 0x80000000) == 0) {
      goto LABEL_60;
    }
LABEL_76:
    operator delete(v55);
    if (!v54) {
      return;
    }
LABEL_61:
    if (v53 < 0) {
      operator delete((void *)v52);
    }
    return;
  }
  operator delete(v57);
  if (v56 < 0) {
    goto LABEL_76;
  }
LABEL_60:
  if (v54) {
    goto LABEL_61;
  }
}

void sub_215B17714(_Unwind_Exception *a1)
{
  sub_215984060(v1 - 224);
  _Unwind_Resume(a1);
}

void sub_215B17728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_2157407D4((uint64_t)&a27);
  sub_215984060(v27 - 224);
  _Unwind_Resume(a1);
}

void sub_215B1774C(_Unwind_Exception *a1)
{
  sub_215984060(v1 - 224);
  _Unwind_Resume(a1);
}

void sub_215B17760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_2157407D4((uint64_t)&a27);
  sub_215733368((uint64_t)&a11);
  std::mutex::unlock(a10);
  sub_215984060(v27 - 224);
  _Unwind_Resume(a1);
}

void sub_215B177C0(uint64_t a1, uint64_t a2, std::string::size_type a3, int a4)
{
  uint64_t v81 = *MEMORY[0x263EF8340];
  char v51 = a4;
  if (a4 == 1)
  {
    if (*(unsigned char *)(a2 + 608)) {
      (*(void (**)(void, std::string::size_type))(**(void **)(a2 + 600) + 56))(*(void *)(a2 + 600), a3 + 8);
    }
    std::mutex::lock(*(std::mutex **)(a2 + 616));
    uint64_t v7 = (char *)operator new(0x80uLL);
    *((void *)v7 + 1) = 0;
    *((void *)v7 + 2) = 0;
    *(void *)uint64_t v7 = &unk_26C67AED0;
    *(_OWORD *)(v7 + 104) = 0u;
    *((void *)v7 + 15) = 0;
    *(_OWORD *)(v7 + 88) = 0u;
    *((void *)v7 + 3) = 850045863;
    *((_OWORD *)v7 + 2) = 0u;
    *((_OWORD *)v7 + 3) = 0u;
    *((_OWORD *)v7 + 4) = 0u;
    *((void *)v7 + 10) = 0;
    v41[1] = 0;
    *(void *)&long long v42 = 0;
    v41[0] = 0;
    LOBYTE(__p[0]) = 0;
    char v71 = 0;
    sub_215AF413C((void *)v7 + 11);
  }
  if (*(unsigned char *)(a2 + 608)) {
    (*(void (**)(void, std::string::size_type))(**(void **)(a2 + 600) + 64))(*(void *)(a2 + 600), a3 + 8);
  }
  uint64_t v8 = *(std::mutex **)(a2 + 560);
  std::mutex::lock(v8);
  *(_OWORD *)long long __p = *(_OWORD *)(a3 + 8);
  uint64_t v9 = *(void *)(a2 + 568);
  uint64_t v10 = *(void *)(a2 + 576);
  if (v9 != v10)
  {
    while (1)
    {
      BOOL v11 = *(void **)(v9 + 8) == __p[0] && *(void **)(v9 + 16) == __p[1];
      if (v11) {
        break;
      }
      v9 += 288;
      if (v9 == v10) {
        goto LABEL_29;
      }
    }
  }
  if (v9 != v10)
  {
    if (v9 + 288 != v10)
    {
      do
      {
        uint64_t v12 = v9;
        *(unsigned char *)uint64_t v9 = *(unsigned char *)(v9 + 288);
        sub_215988DE4(v9 + 8, v9 + 296);
        long long v13 = *(_OWORD *)(v9 + 528);
        *(_OWORD *)(v9 + 528) = 0u;
        unsigned __int8 v14 = *(std::__shared_weak_count **)(v9 + 248);
        *(_OWORD *)(v9 + 240) = v13;
        if (v14) {
          std::__shared_weak_count::__release_weak(v14);
        }
        long long v15 = *(_OWORD *)(v9 + 544);
        *(_OWORD *)(v9 + 544) = 0u;
        uint64_t v16 = *(std::__shared_weak_count **)(v9 + 264);
        *(_OWORD *)(v9 + 256) = v15;
        if (v16) {
          std::__shared_weak_count::__release_weak(v16);
        }
        long long v17 = *(_OWORD *)(v9 + 560);
        *(_OWORD *)(v9 + 560) = 0u;
        long long v18 = *(std::__shared_weak_count **)(v9 + 280);
        *(_OWORD *)(v12 + 272) = v17;
        if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        uint64_t v9 = v12 + 288;
      }
      while (v12 + 576 != v10);
      uint64_t v10 = *(void *)(a2 + 576);
    }
    while (v10 != v9)
    {
      v10 -= 288;
      sub_215B203C8(v10);
    }
    *(void *)(a2 + 576) = v9;
  }
LABEL_29:
  uint64_t v19 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v19);
  int v20 = *(uint64_t **)(a2 + 632);
  if (v20)
  {
    char v21 = (uint64_t *)(a2 + 632);
    int v22 = *(void **)(a2 + 632);
    do
    {
      uint64_t v23 = 0;
      do
      {
        unsigned int v24 = *((unsigned __int8 *)v22 + v23 + 32);
        unsigned int v25 = *((unsigned __int8 *)__p + v23);
      }
      while (v24 == v25 && v23++ != 15);
      uint64_t v27 = v22 + 1;
      if (v24 >= v25)
      {
        uint64_t v27 = v22;
        char v21 = v22;
      }
      int v22 = (void *)*v27;
    }
    while (*v27);
    if (v21 != (uint64_t *)(a2 + 632))
    {
      uint64_t v28 = 0;
      do
      {
        unsigned int v29 = *((unsigned __int8 *)__p + v28);
        unsigned int v30 = *((unsigned __int8 *)v21 + v28 + 32);
      }
      while (v29 == v30 && v28++ != 15);
      if (v29 >= v30)
      {
        uint64_t v32 = (uint64_t *)v21[1];
        if (v32)
        {
          do
          {
            uint64_t v33 = v32;
            uint64_t v32 = (uint64_t *)*v32;
          }
          while (v32);
        }
        else
        {
          long long v34 = v21;
          do
          {
            uint64_t v33 = (uint64_t *)v34[2];
            BOOL v11 = *v33 == (void)v34;
            long long v34 = v33;
          }
          while (!v11);
        }
        if (*(uint64_t **)(a2 + 624) == v21) {
          *(void *)(a2 + 624) = v33;
        }
        --*(void *)(a2 + 640);
        sub_21573B1FC(v20, v21);
        uint64_t v35 = (std::__shared_weak_count *)v21[7];
        if (v35 && !atomic_fetch_add(&v35->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
        operator delete(v21);
      }
    }
  }
  std::mutex::unlock(v19);
  std::mutex::unlock(v8);
  if (!*(unsigned char *)(a2 + 384)) {
    goto LABEL_63;
  }
  v60.__r_.__value_.__r.__words[0] = a2 + 352;
  v60.__r_.__value_.__l.__size_ = a3;
  v41[0] = &unk_26C67AF20;
  v41[1] = &v60;
  *(void *)&long long v42 = &v51;
  sub_215E12638((uint64_t)v41, (uint64_t)__p);
  if (v80)
  {
    *(unsigned char *)a1 = 0;
LABEL_63:
    *(unsigned char *)(a1 + 120) = 1;
    return;
  }
  sub_215E10780((uint64_t)__p, &v60);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v60;
  }
  char v53 = 1;
  LOBYTE(v54) = 0;
  char v58 = 0;
  char v59 = 1;
  sub_21598929C((uint64_t)v41, 2u, (long long *)&__dst);
  if (v59)
  {
    if (v58)
    {
      if (v57 < 0) {
        operator delete(v56);
      }
      if (v55 < 0) {
        operator delete(v54);
      }
    }
    if (v53 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  if ((SHIBYTE(v60.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a2 + 464)) {
      goto LABEL_83;
    }
LABEL_81:
    uint64_t v36 = *(void *)(a2 + 456);
    if (!v36) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, std::string::size_type, void **))(*(void *)v36 + 48))(v36, a3, v41);
    goto LABEL_83;
  }
  operator delete(v60.__r_.__value_.__l.__data_);
  if (*(unsigned char *)(a2 + 464)) {
    goto LABEL_81;
  }
LABEL_83:
  *(_OWORD *)&v60.__r_.__value_.__l.__data_ = *(_OWORD *)v41;
  char v37 = sub_215741BFC(&v60.__r_.__value_.__s.__data_[16], &v42);
  *(_OWORD *)a1 = *(_OWORD *)&v60.__r_.__value_.__l.__data_;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v69)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v38 = v62;
    if (v62)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v37;
      *(void *)(a1 + 32) = *((void *)v37 + 2);
      *((void *)v37 + 1) = 0;
      *((void *)v37 + 2) = 0;
      *(void *)char v37 = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v68)
    {
      long long v39 = v63;
      uint64_t v40 = v65;
      *(void *)(a1 + 64) = v64;
      *(_OWORD *)(a1 + 48) = v39;
      long long v63 = 0uLL;
      *(void *)(a1 + 72) = v40;
      *(_OWORD *)(a1 + 80) = v66;
      *(void *)(a1 + 96) = v67;
      uint64_t v64 = 0;
      long long v66 = 0uLL;
      uint64_t v67 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v38 && v61 < 0) {
      operator delete((void *)v60.__r_.__value_.__r.__words[2]);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v50)
  {
    if (v49)
    {
      if (v48 < 0) {
        operator delete(v47);
      }
      if (v46 < 0) {
        operator delete(v45);
      }
    }
    if (v44 && v43 < 0) {
      operator delete((void *)v42);
    }
  }
  if (!v80 && v79)
  {
    if (v78)
    {
      if (SHIBYTE(v77) < 0) {
        operator delete(v76);
      }
      if (SHIBYTE(v75) < 0) {
        operator delete(v74);
      }
    }
    if (v73 && v72 < 0) {
      operator delete(__p[2]);
    }
  }
}

void sub_215B18648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  operator delete(v72);
  if (a34 < 0) {
    operator delete(__p);
  }
  sub_2157407D4((uint64_t)&a72);
  sub_215986E24(&a49);
  _Unwind_Resume(a1);
}

void sub_215B18704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215740ECC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215B1871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_215B18748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_2157407D4((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_215B1875C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46)
{
}

void sub_215B18770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_215B18784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(uint64_t))(*(void *)v71 + 8))(v71);
  sub_2157C6F18((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_215B187C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  MEMORY[0x2166C4D20](v71, 0x10B3C406D9A893FLL);
  sub_2157C6F18((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_215B187EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_2157C6F18((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_215B18804(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  JUMPOUT(0x215B18810);
}

void sub_215B18820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  sub_215733368((uint64_t)&a55);
  std::mutex::unlock(v55);
  _Unwind_Resume(a1);
}

void sub_215B1883C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (LOBYTE(STACK[0x208]) && SLOBYTE(STACK[0x207]) < 0) {
    operator delete(__p);
  }
  if (a11) {
    operator delete(a11);
  }
  std::mutex::~mutex(v73);
  std::__shared_weak_count::~__shared_weak_count(v72);
  operator delete(v75);
  std::mutex::unlock(v71);
  _Unwind_Resume(a1);
}

void sub_215B1888C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B188A0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B188B8(uint64_t a1, uint64_t a2, std::string::size_type a3, void *a4)
{
  uint64_t v8 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v8);
  uint64_t v9 = sub_215B20FC8((uint64_t **)(a2 + 624), a3 + 8, (_OWORD *)(a3 + 8));
  BOOL v11 = (std::mutex *)v9[6];
  uint64_t v10 = (std::__shared_weak_count *)v9[7];
  uint64_t v23 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(v8);
  if (v11)
  {
    std::mutex::lock(v11);
    uint64_t v12 = (void *)*a4;
    if ((void *)*a4 != a4 + 1)
    {
      long long v13 = v11;
      do
      {
        unsigned __int8 v14 = (char *)(v12 + 4);
        sub_21573D640((uint64_t **)&v13[1].__m_.__opaque[8], (const void **)v12 + 4, (uint64_t)(v12 + 4));
        if (*((char *)v12 + 55) < 0)
        {
          unsigned __int8 v14 = (char *)v12[4];
          size_t v15 = v12[5];
        }
        else
        {
          size_t v15 = *((unsigned __int8 *)v12 + 55);
        }
        long long v13 = v11;
        sub_215AF52F8((uint64_t)&v11[1], v14, v15, *((unsigned __int8 *)v12 + 56));
        uint64_t v16 = (void *)v12[1];
        if (v16)
        {
          do
          {
            long long v17 = v16;
            uint64_t v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            long long v17 = (void *)v12[2];
            BOOL v18 = *v17 == (void)v12;
            uint64_t v12 = v17;
          }
          while (!v18);
        }
        uint64_t v12 = v17;
      }
      while (v17 != a4 + 1);
    }
    std::mutex::unlock(v11);
  }
  if (!*(unsigned char *)(a2 + 424)) {
    goto LABEL_20;
  }
  v24.__r_.__value_.__r.__words[0] = a2 + 392;
  v24.__r_.__value_.__l.__size_ = a3;
  *(void *)&long long v42 = &unk_26C67AF60;
  *((void *)&v42 + 1) = &v24;
  *(void *)&long long v43 = a4;
  sub_215E12638((uint64_t)&v42, (uint64_t)v52);
  if (v62)
  {
    *(unsigned char *)a1 = 0;
LABEL_20:
    *(unsigned char *)(a1 + 120) = 1;
    goto LABEL_21;
  }
  sub_215E10780((uint64_t)v52, &v24);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v24;
  }
  char v35 = 1;
  LOBYTE(v36) = 0;
  char v40 = 0;
  char v41 = 1;
  sub_21598929C((uint64_t)&v42, 2u, (long long *)&__dst);
  if (v41)
  {
    if (v40)
    {
      if (v39 < 0) {
        operator delete(__p);
      }
      if (v37 < 0) {
        operator delete(v36);
      }
    }
    if (v35 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a2 + 464)) {
      goto LABEL_43;
    }
LABEL_41:
    uint64_t v19 = *(void *)(a2 + 456);
    if (!v19) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t, std::string::size_type, long long *))(*(void *)v19 + 48))(v19, a3, &v42);
    goto LABEL_43;
  }
  operator delete(v24.__r_.__value_.__l.__data_);
  if (*(unsigned char *)(a2 + 464)) {
    goto LABEL_41;
  }
LABEL_43:
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v42;
  int v20 = sub_215741BFC(&v24.__r_.__value_.__s.__data_[16], &v43);
  *(_OWORD *)a1 = *(_OWORD *)&v24.__r_.__value_.__l.__data_;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v33)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v21 = v26;
    if (v26)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v20;
      *(void *)(a1 + 32) = *((void *)v20 + 2);
      *((void *)v20 + 1) = 0;
      *((void *)v20 + 2) = 0;
      *(void *)int v20 = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v32)
    {
      uint64_t v22 = v29;
      *(void *)(a1 + 64) = v28;
      *(_OWORD *)(a1 + 48) = v27;
      long long v27 = 0uLL;
      *(void *)(a1 + 72) = v22;
      *(_OWORD *)(a1 + 80) = v30;
      *(void *)(a1 + 96) = v31;
      uint64_t v28 = 0;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v21 && v25 < 0) {
      operator delete((void *)v24.__r_.__value_.__r.__words[2]);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v51)
  {
    if (v50)
    {
      if (v49 < 0) {
        operator delete(v48);
      }
      if (v47 < 0) {
        operator delete(v46);
      }
    }
    if (v45 && v44 < 0) {
      operator delete((void *)v43);
    }
  }
  if (!v62 && v61)
  {
    if (v60)
    {
      if (v59 < 0) {
        operator delete(v58);
      }
      if (v57 < 0) {
        operator delete(v56);
      }
    }
    if (v55 && v54 < 0) {
      operator delete(v53);
    }
  }
LABEL_21:
  if (v23)
  {
    if (!atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
}

void sub_215B18D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_2157407D4(v43 - 208);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215B18D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B18D74(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B18D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215B18DA4(uint64_t a1)
{
  return a1 + 20;
}

void sub_215B18DAC(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  int v56 = 3;
  LOBYTE(v57) = 0;
  char v67 = 0;
  uint64_t v5 = (std::mutex *)a1[70];
  std::mutex::lock(v5);
  uint64_t v6 = a1[72];
  uint64_t v7 = a1[71];
  char v40 = 0;
  long long v39 = 0uLL;
  uint64_t v8 = v6 - v7;
  uint64_t v36 = a1;
  uint64_t v37 = a3;
  if (v6 == v7)
  {
    uint64_t v10 = 0;
LABEL_37:
    char v53 = v10;
    char v54 = v10;
    uint64_t v55 = v8;
    std::mutex::unlock(v5);
    goto LABEL_49;
  }
  unint64_t v9 = 0x8E38E38E38E38E39 * (v8 >> 5);
  if (v9 >> 60) {
    sub_215738AC0();
  }
  uint64_t v10 = (uint64_t *)operator new(0xE38E38E38E38E390 * (v8 >> 5));
  uint64_t v8 = (uint64_t)&v10[2 * v9];
  *(void *)&long long v39 = v10;
  *((void *)&v39 + 1) = v10;
  char v40 = (void *)v8;
  if (v6 == v7) {
    goto LABEL_37;
  }
  char v35 = v5;
  do
  {
    while (1)
    {
      BOOL v11 = *(std::__shared_weak_count **)(v7 + 264);
      if (!v11) {
        break;
      }
      uint64_t v12 = std::__shared_weak_count::lock(v11);
      if (v12)
      {
        uint64_t v13 = *(void *)(v7 + 256);
        unsigned __int8 v14 = v40;
        if (v10 >= v40) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v13 = 0;
        unsigned __int8 v14 = v40;
        if (v10 >= v40) {
          goto LABEL_13;
        }
      }
LABEL_5:
      *uint64_t v10 = v13;
      v10[1] = (uint64_t)v12;
      v10 += 2;
      *((void *)&v39 + 1) = v10;
      v7 += 288;
      if (v7 == v6) {
        goto LABEL_34;
      }
    }
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    unsigned __int8 v14 = v40;
    if (v10 < v40) {
      goto LABEL_5;
    }
LABEL_13:
    size_t v15 = (uint64_t *)v39;
    uint64_t v16 = (uint64_t)((uint64_t)v10 - v39) >> 4;
    unint64_t v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 60) {
      sub_215738AC0();
    }
    uint64_t v18 = (uint64_t)v14 - v39;
    if (v18 >> 3 > v17) {
      unint64_t v17 = v18 >> 3;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v19 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v19 = v17;
    }
    if (v19 >> 60) {
      sub_215738AD8();
    }
    int v20 = (char *)operator new(16 * v19);
    int v21 = &v20[16 * v16];
    *(void *)int v21 = v13;
    *((void *)v21 + 1) = v12;
    uint64_t v22 = (uint64_t *)(v21 + 16);
    if (v10 == v15)
    {
      *(void *)&long long v39 = &v20[16 * v16];
      char v40 = &v20[16 * v19];
      if (v10) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v23 = v10;
      do
      {
        long long v24 = *((_OWORD *)v23 - 1);
        v23 -= 2;
        *((_OWORD *)v21 - 1) = v24;
        v21 -= 16;
        *uint64_t v23 = 0;
        v23[1] = 0;
      }
      while (v23 != v15);
      *(void *)&long long v39 = v21;
      *((void *)&v39 + 1) = v22;
      char v40 = &v20[16 * v19];
      do
      {
        char v25 = (std::__shared_weak_count *)*(v10 - 1);
        if (v25 && !atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
        v10 -= 2;
      }
      while (v10 != v15);
      uint64_t v10 = v15;
      if (v15) {
LABEL_29:
      }
        operator delete(v10);
    }
    uint64_t v10 = v22;
    *((void *)&v39 + 1) = v22;
    v7 += 288;
  }
  while (v7 != v6);
LABEL_34:
  unsigned __int8 v26 = (uint64_t *)v39;
  char v53 = (void *)v39;
  char v54 = v10;
  uint64_t v55 = (uint64_t)v40;
  std::mutex::unlock(v35);
  if ((uint64_t *)v39 != v10)
  {
    do
    {
      uint64_t v27 = *v26;
      uint64_t v51 = *v26;
      uint64_t v28 = (std::__shared_weak_count *)v26[1];
      long long v52 = v28;
      if (v28) {
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      if (v27)
      {
        sub_215984B30(v27, a2, (uint64_t)&v39);
        if (!v50)
        {
          (*(void (**)(uint64_t))(*(void *)v27 + 24))(v27);
          v68[6] = 0;
          sub_2157D4E8C(v68, "for client ");
          sub_2159651D4();
        }
      }
      if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
      v26 += 2;
    }
    while (v26 != v10);
    uint64_t v10 = (uint64_t *)v53;
  }
LABEL_49:
  if (v10)
  {
    uint64_t v29 = v54;
    long long v30 = v10;
    if (v54 != v10)
    {
      do
      {
        uint64_t v31 = (std::__shared_weak_count *)*(v29 - 1);
        if (v31 && !atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
        v29 -= 2;
      }
      while (v29 != v10);
      long long v30 = v53;
    }
    char v54 = v10;
    operator delete(v30);
  }
  if (*((unsigned char *)v36 + 552))
  {
    sub_215AF7FE0(v36[68], a2, (uint64_t)&v39);
    if (!v50)
    {
      sub_215983BB0((uint64_t)&v56, (uint64_t)&v39);
      if (!v50)
      {
        if (v49)
        {
          if (v48)
          {
            if (SHIBYTE(v47) < 0) {
              operator delete(v46[0]);
            }
            if (SHIBYTE(v44) < 0) {
              operator delete(v43[0]);
            }
          }
          if (v42 && v41 < 0) {
            operator delete(v40);
          }
        }
      }
    }
  }
  if (!v67)
  {
    *(unsigned char *)(v37 + 120) = 1;
    return;
  }
  long long v39 = v57;
  char v32 = sub_215741BFC(&v40, &v58);
  *(_OWORD *)uint64_t v37 = v39;
  *(unsigned char *)(v37 + 16) = 0;
  *(unsigned char *)(v37 + 112) = 0;
  if (v49)
  {
    *(unsigned char *)(v37 + 40) = 0;
    int v33 = v42;
    if (v42)
    {
      *(_OWORD *)(v37 + 16) = *(_OWORD *)v32;
      *(void *)(v37 + 32) = *((void *)v32 + 2);
      *((void *)v32 + 1) = 0;
      *((void *)v32 + 2) = 0;
      *(void *)char v32 = 0;
      *(unsigned char *)(v37 + 40) = 1;
    }
    *(unsigned char *)(v37 + 48) = 0;
    *(unsigned char *)(v37 + 104) = 0;
    if (v48)
    {
      uint64_t v34 = v45;
      *(void *)(v37 + 64) = v44;
      *(_OWORD *)(v37 + 48) = *(_OWORD *)v43;
      v43[0] = 0;
      v43[1] = 0;
      *(void *)(v37 + 72) = v34;
      *(_OWORD *)(v37 + 80) = *(_OWORD *)v46;
      *(void *)(v37 + 96) = v47;
      uint64_t v44 = 0;
      v46[0] = 0;
      v46[1] = 0;
      uint64_t v47 = 0;
      *(unsigned char *)(v37 + 104) = 1;
    }
    *(unsigned char *)(v37 + 112) = 1;
    *(unsigned char *)(v37 + 120) = 0;
    if (v33 && v41 < 0) {
      operator delete(v40);
    }
  }
  else
  {
    *(unsigned char *)(v37 + 120) = 0;
  }
  if (v67 && v66)
  {
    if (!v65) {
      goto LABEL_77;
    }
    if ((v64 & 0x80000000) == 0)
    {
      if ((v62 & 0x80000000) == 0) {
        goto LABEL_77;
      }
LABEL_91:
      operator delete(v61);
      if (!v60) {
        return;
      }
LABEL_78:
      if (v59 < 0) {
        operator delete((void *)v58);
      }
      return;
    }
    operator delete(v63);
    if (v62 < 0) {
      goto LABEL_91;
    }
LABEL_77:
    if (v60) {
      goto LABEL_78;
    }
  }
}

void sub_215B19538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
}

void sub_215B19554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
}

void sub_215B19570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55)
{
  sub_2157361F0(&a34);
  std::mutex::unlock(v55);
  sub_215984060((uint64_t)&a55);
  _Unwind_Resume(a1);
}

uint64_t sub_215B1966C(uint64_t a1)
{
  return *(void *)(a1 + 592);
}

uint64_t sub_215B1967C(uint64_t a1)
{
  return *(void *)(a1 + 592);
}

void sub_215B1968C(uint64_t a1, uint64_t a2)
{
  char v4 = *(std::mutex **)(a1 + 560);
  std::mutex::lock(v4);
  int v5 = *(unsigned __int8 *)(a1 + 512);
  uint64_t v6 = *(void *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 488) = v7;
  *(void *)(a1 + 504) = v6;
  if (v5)
  {
    uint64_t v8 = v4;
  }
  else
  {
    *(unsigned char *)(a1 + 512) = 1;
    uint64_t v8 = v4;
  }
  std::mutex::unlock(v8);
}

uint64_t sub_215B19720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(std::mutex **)(a1 + 616);
  std::mutex::lock(v6);
  long long v7 = *(void **)(a1 + 632);
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v8 = (void *)(a1 + 632);
  do
  {
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = *((unsigned __int8 *)v7 + v9 + 32);
      unsigned int v11 = *(unsigned __int8 *)(a2 + v9);
    }
    while (v10 == v11 && v9++ != 15);
    uint64_t v13 = v7 + 1;
    if (v10 >= v11)
    {
      uint64_t v13 = v7;
      uint64_t v8 = v7;
    }
    long long v7 = (void *)*v13;
  }
  while (*v13);
  if (v8 == (void *)(a1 + 632)) {
    goto LABEL_20;
  }
  uint64_t v14 = 0;
  do
  {
    unsigned int v15 = *(unsigned __int8 *)(a2 + v14);
    unsigned int v16 = *((unsigned __int8 *)v8 + v14 + 32);
  }
  while (v15 == v16 && v14++ != 15);
  if (v15 < v16)
  {
LABEL_20:
    std::mutex::unlock(v6);
    int v18 = 0;
    BOOL v19 = 0;
    return v19 | (v18 << 8);
  }
  int v21 = (std::mutex *)v8[6];
  uint64_t v22 = (std::__shared_weak_count *)v8[7];
  long long v30 = v22;
  if (v22) {
    atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(v6);
  if (!v21)
  {
    BOOL v19 = 0;
    int v18 = 0;
    if (!v22) {
      return v19 | (v18 << 8);
    }
    goto LABEL_34;
  }
  std::mutex::lock(v21);
  uint64_t v23 = *(unsigned __int8 *)(a3 + 23);
  long long v24 = *(char **)a3;
  uint64_t v25 = *(void *)(a3 + 8);
  uint64_t v26 = sub_215AF5B9C((uint64_t)&v21[1]);
  if ((v23 & 0x80u) == 0) {
    uint64_t v27 = (char *)a3;
  }
  else {
    uint64_t v27 = v24;
  }
  if ((v23 & 0x80u) == 0) {
    uint64_t v28 = v23;
  }
  else {
    uint64_t v28 = v25;
  }
  uint64_t v29 = (unsigned __int8 *)atomic_load(*(unint64_t **)(sub_215AF2C4C(v26, v27, v28) + 40));
  BOOL v19 = *v29 == 1;
  std::mutex::unlock(v21);
  int v18 = 1;
  uint64_t v22 = v30;
  if (v30)
  {
LABEL_34:
    if (!atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return v19 | (v18 << 8);
}

void sub_215B198C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B198D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215B198F4(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6 = *(std::mutex **)(a1 + 616);
  std::mutex::lock(v6);
  long long v7 = *(void **)(a1 + 632);
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v8 = (void *)(a1 + 632);
  do
  {
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = *((unsigned __int8 *)v7 + v9 + 32);
      unsigned int v11 = *(unsigned __int8 *)(a2 + v9);
    }
    while (v10 == v11 && v9++ != 15);
    uint64_t v13 = v7 + 1;
    if (v10 >= v11)
    {
      uint64_t v13 = v7;
      uint64_t v8 = v7;
    }
    long long v7 = (void *)*v13;
  }
  while (*v13);
  if (v8 == (void *)(a1 + 632)) {
    goto LABEL_20;
  }
  uint64_t v14 = 0;
  do
  {
    unsigned int v15 = *(unsigned __int8 *)(a2 + v14);
    unsigned int v16 = *((unsigned __int8 *)v8 + v14 + 32);
  }
  while (v15 == v16 && v14++ != 15);
  if (v15 < v16)
  {
LABEL_20:
    std::mutex::unlock(v6);
    LODWORD(v18) = 0;
    unsigned int v19 = 0;
    return v19 | (v18 << 8);
  }
  int v18 = (std::mutex *)v8[6];
  int v21 = (std::__shared_weak_count *)v8[7];
  if (v21) {
    atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(v6);
  if (v18)
  {
    std::mutex::lock(v18);
    int v22 = *((char *)a3 + 23);
    if (v22 >= 0) {
      uint64_t v23 = a3;
    }
    else {
      uint64_t v23 = *a3;
    }
    if (v22 >= 0) {
      size_t v24 = *((unsigned __int8 *)a3 + 23);
    }
    else {
      size_t v24 = (size_t)a3[1];
    }
    if (sub_215AF51A4((uint64_t)&v18[1], v23, v24))
    {
      int v25 = *((char *)a3 + 23);
      if (v25 >= 0) {
        uint64_t v26 = a3;
      }
      else {
        uint64_t v26 = *a3;
      }
      if (v25 >= 0) {
        size_t v27 = *((unsigned __int8 *)a3 + 23);
      }
      else {
        size_t v27 = (size_t)a3[1];
      }
      unsigned int v19 = **(unsigned __int8 **)(sub_215AF4CE8((uint64_t)&v18[1], v26, v27) + 32);
    }
    else
    {
      unsigned int v19 = 0;
    }
    std::mutex::unlock(v18);
    LODWORD(v18) = 1;
    if (!v21) {
      return v19 | (v18 << 8);
    }
  }
  else
  {
    unsigned int v19 = 0;
    if (!v21) {
      return v19 | (v18 << 8);
    }
  }
  if (atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v19 | (v18 << 8);
  }
  ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
  std::__shared_weak_count::__release_weak(v21);
  return v19 | (v18 << 8);
}

void sub_215B19ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex::unlock(v9);
  sub_215733368((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215B19ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B19AF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(std::mutex **)(a1 + 616);
  std::mutex::lock(v6);
  long long v7 = *(void **)(a1 + 632);
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v8 = (void *)(a1 + 632);
  do
  {
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = *((unsigned __int8 *)v7 + v9 + 32);
      unsigned int v11 = *(unsigned __int8 *)(a2 + v9);
    }
    while (v10 == v11 && v9++ != 15);
    uint64_t v13 = v7 + 1;
    if (v10 >= v11)
    {
      uint64_t v13 = v7;
      uint64_t v8 = v7;
    }
    long long v7 = (void *)*v13;
  }
  while (*v13);
  if (v8 == (void *)(a1 + 632)) {
    goto LABEL_20;
  }
  uint64_t v14 = 0;
  do
  {
    unsigned int v15 = *(unsigned __int8 *)(a2 + v14);
    unsigned int v16 = *((unsigned __int8 *)v8 + v14 + 32);
  }
  while (v15 == v16 && v14++ != 15);
  if (v15 < v16)
  {
LABEL_20:
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    std::mutex::unlock(v6);
    int v18 = 0;
    goto LABEL_21;
  }
  unsigned int v19 = (std::mutex *)v8[6];
  int v18 = (std::__shared_weak_count *)v8[7];
  uint64_t v28 = v19;
  uint64_t v29 = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::mutex::unlock(v6);
  if (!v19)
  {
LABEL_21:
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
    if (!v18) {
      return;
    }
    goto LABEL_22;
  }
  v27[0] = 0;
  v27[1] = 0;
  uint64_t v26 = v27;
  std::mutex::lock(v19);
  sub_215AF58E4((uint64_t)&v19[1], &v23);
  uint64_t v20 = v24;
  *(void *)a3 = v23;
  *(void *)(a3 + 8) = v20;
  uint64_t v21 = a3 + 8;
  uint64_t v22 = v25;
  *(void *)(a3 + 16) = v25;
  if (v22)
  {
    *(void *)(v20 + 16) = v21;
    uint64_t v23 = &v24;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    *(void *)a3 = v21;
  }
  *(unsigned char *)(a3 + 24) = 1;
  sub_21573AE84((uint64_t)&v23, (char *)v20);
  std::mutex::unlock(v19);
  sub_21573AE84((uint64_t)&v26, v27[0]);
  if (v18)
  {
LABEL_22:
    if (!atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_215B19CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13, uint64_t a14, char a15)
{
  std::mutex::unlock(v15);
  sub_21573AE84((uint64_t)&a12, a13);
  sub_215733368((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_215B19CFC()
{
  int v0 = (void *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  v55[317] = *MEMORY[0x263EF8340];
  *int v0 = &unk_26C67A820;
  sub_215B20624((uint64_t)v48, v7);
  *(void *)int v38 = *(void *)v6;
  *(void *)&v38[5] = *(void *)(v6 + 5);
  if (*(unsigned char *)(v6 + 40))
  {
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = 0;
  }
  LOBYTE(v45[0]) = 0;
  unsigned __int8 v47 = 0;
  int v8 = *(unsigned __int8 *)(v4 + 32);
  if (!*(unsigned char *)(v4 + 32))
  {
LABEL_10:
    LOBYTE(v42[0]) = 0;
    char v44 = 0;
    if (*(unsigned char *)(v2 + 32))
    {
      uint64_t v10 = *(void *)(v2 + 24);
      if (v10)
      {
        if (v10 == v2)
        {
          uint64_t v43 = v42;
          (*(void (**)(uint64_t, void *))(*(void *)v2 + 24))(v2, v42);
          int v8 = v47;
        }
        else
        {
          uint64_t v43 = *(void **)(v2 + 24);
          *(void *)(v2 + 24) = 0;
        }
      }
      else
      {
        uint64_t v43 = 0;
      }
      char v44 = 1;
    }
    LOBYTE(v49[0]) = 0;
    char v51 = 0;
    if (!v8)
    {
LABEL_24:
      *(void *)__token = &unk_26C67A9B8;
      __token[8] = 0;
      __token[16] = 0;
      *(_OWORD *)&__token[20] = 0uLL;
      __token[64] = 0;
      __token[88] = 0;
      __token[96] = 0;
      __token[240] = 0;
      memset(&__token[248], 0, 24);
      memset(&__token[40], 0, 20);
      sub_215B20624((uint64_t)&__token[272], (uint64_t)v48);
      __token[432] = 0;
      __token[464] = 0;
      if (!v51) {
        goto LABEL_31;
      }
      uint64_t v12 = (uint64_t)v50;
      if (v50)
      {
        if (v50 == v49)
        {
          *(void *)&__token[456] = &__token[432];
          (*(void (**)(void *, unsigned char *))(v49[0] + 24))(v49, &__token[432]);
          goto LABEL_30;
        }
        uint64_t v12 = (*(uint64_t (**)(void))(*v50 + 16))();
      }
      *(void *)&__token[456] = v12;
LABEL_30:
      __token[464] = 1;
LABEL_31:
      __token[472] = 0;
      __token[512] = 0;
      __token[552] = 0;
      __token[608] = 0;
      *(void *)&__token[616] = 0;
      *(void *)&__token[640] = 0;
      *(void *)&__token[632] = 0;
      memset(&__token[520], 0, 17);
      memset(&__token[560], 0, 41);
      *(void *)&__token[624] = &__token[632];
      uint64_t v13 = (char *)operator new(0x2A0uLL);
      uint64_t v14 = v13;
      *((void *)v13 + 1) = 0;
      *(void *)uint64_t v13 = &unk_26C67AC90;
      unsigned int v15 = v13 + 24;
      *((void *)v13 + 2) = 0;
      *((void *)v13 + 3) = &unk_26C67A9B8;
      *((_OWORD *)v13 + 2) = *(_OWORD *)&__token[8];
      *(_OWORD *)(v13 + 44) = *(_OWORD *)&__token[20];
      *((_OWORD *)v13 + 4) = *(_OWORD *)&__token[40];
      *((_DWORD *)v13 + 20) = *(_DWORD *)&__token[56];
      v13[88] = 0;
      v13[112] = 0;
      if (__token[88])
      {
        *(_OWORD *)(v13 + 88) = *(_OWORD *)&__token[64];
        *((void *)v13 + 13) = *(void *)&__token[80];
        memset(&__token[64], 0, 24);
        v13[112] = 1;
      }
      v13[120] = 0;
      v13[264] = 0;
      if (__token[240])
      {
        *(_OWORD *)(v13 + 120) = *(_OWORD *)&__token[96];
        *((void *)v13 + 17) = *(void *)&__token[112];
        memset(&__token[96], 0, 24);
        *((_OWORD *)v13 + 9) = *(_OWORD *)&__token[120];
        uint64_t v16 = *(void *)&__token[160];
        *((void *)v13 + 20) = *(void *)&__token[136];
        *(void *)&__token[128] = 0;
        *(void *)&__token[120] = 0;
        *((void *)v13 + 23) = v16;
        *(_OWORD *)(v13 + 168) = *(_OWORD *)&__token[144];
        memset(&__token[136], 0, 32);
        long long v17 = *(_OWORD *)&__token[168];
        uint64_t v18 = *(void *)&__token[208];
        *((void *)v13 + 26) = *(void *)&__token[184];
        *((_OWORD *)v13 + 12) = v17;
        *(void *)&__token[176] = 0;
        *(void *)&__token[168] = 0;
        long long v19 = *(_OWORD *)&__token[192];
        *((void *)v13 + 29) = v18;
        *(_OWORD *)(v13 + 216) = v19;
        memset(&__token[184], 0, 32);
        long long v20 = *(_OWORD *)&__token[216];
        *((void *)v13 + 32) = *(void *)&__token[232];
        *((_OWORD *)v13 + 15) = v20;
        memset(&__token[216], 0, 24);
        v13[264] = 1;
      }
      *((_OWORD *)v13 + 17) = *(_OWORD *)&__token[248];
      *((void *)v13 + 36) = *(void *)&__token[264];
      sub_215B20624((uint64_t)(v13 + 296), (uint64_t)&__token[272]);
      v14[456] = 0;
      v14[488] = 0;
      if (__token[464])
      {
        if (*(void *)&__token[456])
        {
          if (*(unsigned char **)&__token[456] == &__token[432])
          {
            *((void *)v14 + 60) = v14 + 456;
            (*(void (**)(unsigned char *))(*(void *)&__token[432] + 24))(&__token[432]);
          }
          else
          {
            *((void *)v14 + 60) = *(void *)&__token[456];
            *(void *)&__token[456] = 0;
          }
        }
        else
        {
          *((void *)v14 + 60) = 0;
        }
        v14[488] = 1;
      }
      long long v21 = *(_OWORD *)&__token[488];
      *((_OWORD *)v14 + 31) = *(_OWORD *)&__token[472];
      *((_OWORD *)v14 + 32) = v21;
      long long v22 = *(_OWORD *)&__token[520];
      *((_OWORD *)v14 + 33) = *(_OWORD *)&__token[504];
      *((_OWORD *)v14 + 34) = v22;
      *(void *)&__token[520] = 0;
      *(void *)&__token[528] = 0;
      v14[560] = 0;
      v14[576] = 0;
      if (__token[552])
      {
        *((void *)v14 + 70) = &unk_26C679110;
        uint64_t v23 = *(void *)&__token[544];
        *(void *)&__token[544] = 0;
        *((void *)v14 + 71) = v23;
        v14[576] = 1;
      }
      long long v24 = *(_OWORD *)&__token[560];
      long long v25 = *(_OWORD *)&__token[576];
      *(_OWORD *)&__token[560] = 0u;
      *(_OWORD *)(v14 + 584) = v24;
      *(_OWORD *)(v14 + 600) = v25;
      memset(&__token[576], 0, 24);
      *((void *)v14 + 77) = *(void *)&__token[592];
      long long v26 = *(_OWORD *)&__token[616];
      *(void *)&__token[616] = 0;
      *((_OWORD *)v14 + 39) = *(_OWORD *)&__token[600];
      *((_OWORD *)v14 + 40) = v26;
      size_t v27 = v14 + 656;
      uint64_t v28 = *(void *)&__token[632];
      *((void *)v14 + 82) = *(void *)&__token[632];
      uint64_t v29 = *(void *)&__token[640];
      *((void *)v14 + 83) = *(void *)&__token[640];
      if (v29)
      {
        *(void *)(v28 + 16) = v27;
        *(void *)&__token[624] = &__token[632];
        *(void *)&__token[632] = 0;
        *(void *)&__token[640] = 0;
        long long v30 = v14 + 32;
        char v40 = v15;
        char v41 = v14;
        sub_215B14D84((uint64_t)__token);
        if (!v51) {
          goto LABEL_52;
        }
      }
      else
      {
        *((void *)v14 + 81) = v27;
        long long v30 = v14 + 32;
        char v40 = v15;
        char v41 = v14;
        sub_215B14D84((uint64_t)__token);
        if (!v51) {
          goto LABEL_52;
        }
      }
      if (v50 == v49)
      {
        (*(void (**)(void *))(v49[0] + 32))(v49);
      }
      else if (v50)
      {
        (*(void (**)(void))(*v50 + 40))();
      }
LABEL_52:
      *(void *)long long v30 = *(void *)v38;
      unsigned char v30[8] = v38[8];
      __token[23] = 12;
      strcpy(__token, "/dev/urandom");
      std::random_device::random_device(&v39, (const std::string *)__token);
      if ((__token[23] & 0x80000000) != 0) {
        operator delete(*(void **)__token);
      }
      for (uint64_t i = 0; i != 2496; i += 4)
        *(_DWORD *)((char *)v55 + i) = MEMORY[0x2166C45C0](&v39);
      memcpy(__dst, v55, sizeof(__dst));
      sub_21598BF60(__dst, (uint64_t)__token);
      char v32 = (std::__shared_weak_count *)operator new(0x9F8uLL);
      v32->__shared_owners_ = 0;
      v32->__shared_weak_owners_ = 0;
      v32->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C674310;
      memcpy(&v32[1], __token, 0x9C8uLL);
      v32[105].__shared_owners_ = (uint64_t)&unk_26C686198;
      *(_OWORD *)&v32[105].__shared_weak_owners_ = v53;
      v55[313] = (uint64_t)&v32[1];
      v55[314] = (uint64_t)v32;
      v55[0] = (uint64_t)&v32[1];
      sub_21598C5EC((unsigned int *)__token, v55);
      uint64_t v33 = *(unsigned int *)__token;
      unsigned int v34 = *(_DWORD *)&__token[4];
      int v35 = *(_DWORD *)&__token[8];
      uint64_t v36 = *(unsigned int *)&__token[12];
      if (!atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
      *(void *)(v14 + 44) = v33 | ((unint64_t)v34 << 32) | ((unint64_t)BYTE1(v34) << 40) | ((unint64_t)HIBYTE(v34) << 56) | ((unint64_t)(HIWORD(v34) & 0xF | 0x40) << 48);
      *(void *)(v14 + 52) = ((unint64_t)v36 << 32) | ((unint64_t)BYTE1(v36) << 40) | v35 & 0xFFFFFF00 | (v36 << 32) & 0xFF00000000000000 | ((unint64_t)BYTE2(v36) << 48) | v35 & 0x3F | 0x80u;
      std::random_device::~random_device(&v39);
      atomic_fetch_add_explicit((atomic_ullong *volatile)v14 + 2, 1uLL, memory_order_relaxed);
      *((void *)v14 + 68) = v15;
      uint64_t v37 = (std::__shared_weak_count *)*((void *)v14 + 69);
      *((void *)v14 + 69) = v14;
      if (v37) {
        std::__shared_weak_count::__release_weak(v37);
      }
      operator new();
    }
    uint64_t v11 = (uint64_t)v46;
    if (v46)
    {
      if (v46 == v45)
      {
        char v50 = v49;
        (*(void (**)(void *, void *))(v45[0] + 24))(v45, v49);
        goto LABEL_23;
      }
      uint64_t v11 = (*(uint64_t (**)(void))(*v46 + 16))();
    }
    char v50 = (void *)v11;
LABEL_23:
    char v51 = 1;
    goto LABEL_24;
  }
  uint64_t v9 = *(void *)(v4 + 24);
  if (v9)
  {
    if (v9 == v4)
    {
      char v46 = v45;
      (*(void (**)(uint64_t, void *))(*(void *)v4 + 24))(v4, v45);
      goto LABEL_9;
    }
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  char v46 = (void *)v9;
LABEL_9:
  int v8 = 1;
  unsigned __int8 v47 = 1;
  goto LABEL_10;
}

void sub_215B1B8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, std::__shared_weak_count *a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a54 < 0) {
    operator delete(__p);
  }
  sub_2157407D4((uint64_t)&STACK[0x2B0]);
  sub_215733368((uint64_t)&a47);
  sub_215B1BF48((uint64_t)&a59);
  sub_215B04614((uint64_t)&a64);
  sub_2157B6CA8((uint64_t)&a22);
  sub_21596CD84((uint64_t)&a69);
  _Unwind_Resume(a1);
}

uint64_t sub_215B1BF48(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void *sub_215B1BFE0(void *result)
{
  uint64_t v1 = result;
  *uint64_t result = &unk_26C67A820;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215B1C078(void *a1)
{
  *a1 = &unk_26C67A820;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B1C120(uint64_t a1)
{
  return *(void *)(a1 + 8) + 20;
}

void sub_215B1C12C(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
}

void sub_215B1C134(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_215B1C13C(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 8) + 592);
}

uint64_t sub_215B1C150(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 8) + 592);
}

void sub_215B1C164(uint64_t a1, long long *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  long long v6 = *a2;
  long long v7 = a2[1];
  uint64_t v8 = *((void *)a2 + 4);
  uint64_t v3 = *(std::mutex **)(v2 + 560);
  std::mutex::lock(v3);
  int v4 = *(unsigned __int8 *)(v2 + 512);
  *(_OWORD *)(v2 + 472) = v6;
  *(_OWORD *)(v2 + 488) = v7;
  *(void *)(v2 + 504) = v8;
  if (v4)
  {
    uint64_t v5 = v3;
  }
  else
  {
    *(unsigned char *)(v2 + 512) = 1;
    uint64_t v5 = v3;
  }
  std::mutex::unlock(v5);
}

void sub_215B1C204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a4;
    uint64_t v10 = *(void *)(a4 + 16);
  }
  char v11 = 1;
  v8[0] = 0;
  v8[1] = 0;
  long long v7 = v8;
  sub_2157B75C4(&v7, v8, (const void **)__p, (uint64_t)__p);
  sub_215B1C320(a1, a2, a3, (const void ***)&v7);
}

void sub_215B1C2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215B1C320(uint64_t a1, uint64_t a2, uint64_t a3, const void ***a4)
{
  unsigned char v10[8] = *MEMORY[0x263EF8340];
  v10[0] = 0;
  v10[1] = 0;
  uint64_t v9 = v10;
  int v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (const void **)(a4 + 1))
  {
    do
    {
      sub_2157B75C4(&v9, v10, v5 + 4, (uint64_t)(v5 + 4));
      long long v6 = (const void **)v5[1];
      if (v6)
      {
        do
        {
          long long v7 = (const void ***)v6;
          long long v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          long long v7 = (const void ***)v5[2];
          BOOL v8 = *v7 == v5;
          uint64_t v5 = (const void **)v7;
        }
        while (!v8);
      }
      uint64_t v5 = (const void **)v7;
    }
    while (v7 != v4);
  }
  sub_21598CDA8(&v9);
}

void sub_215B1C568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215986E24((void **)va);
  _Unwind_Resume(a1);
}

void sub_215B1C57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_215B1C59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215B1C5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
}

void sub_215B1C5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a4;
    uint64_t v10 = *(void *)(a4 + 16);
  }
  char v11 = 2;
  v8[0] = 0;
  v8[1] = 0;
  long long v7 = v8;
  sub_2157B75C4(&v7, v8, (const void **)__p, (uint64_t)__p);
  sub_215B1C320(a1, a2, a3, (const void ***)&v7);
}

void sub_215B1C6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215B1C6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_215738B0C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a4;
    uint64_t v12 = *(void *)(a4 + 16);
  }
  char v13 = a5;
  v10[0] = 0;
  v10[1] = 0;
  uint64_t v9 = v10;
  sub_2157B75C4(&v9, v10, (const void **)__p, (uint64_t)__p);
  sub_215B1C320(a1, a2, a3, (const void ***)&v9);
}

void sub_215B1C7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_215B1C80C(void *a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_215731D94(a1, (uint64_t)"Server<", 7);
  uint64_t v16 = a2;
  int v22 = 0;
  sub_215748F40((uint64_t)&v20, (uint64_t)v21, &v16);
  if (v22 == -1) {
    sub_215742D4C();
  }
  long long v20 = &v19;
  ((void (*)(void **__return_ptr, char **, unsigned char *))off_26C67ADA8[v22])(__p, &v20, v21);
  if (v22 != -1) {
    ((void (*)(char **, unsigned char *))off_26C67AD60[v22])(&v20, v21);
  }
  if ((v18 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v18 & 0x80u) == 0) {
    uint64_t v5 = v18;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  long long v6 = sub_215731D94(v3, (uint64_t)v4, v5);
  long long v7 = sub_215731D94(v6, (uint64_t)">{", 2);
  uint64_t v8 = *(void *)(a2 + 8);
  sub_215E08B14((unsigned __int8 *)(v8 + 20), v21);
  uint64_t v9 = sub_215731D94(v7, (uint64_t)v21, 36);
  uint64_t v10 = sub_215731D94(v9, (uint64_t)", tcp/ip ", 9);
  if (*(unsigned char *)(v8 + 552)) {
    char v11 = "enabled";
  }
  else {
    char v11 = "disabled";
  }
  if (*(unsigned char *)(v8 + 552)) {
    uint64_t v12 = 7;
  }
  else {
    uint64_t v12 = 8;
  }
  char v13 = sub_215731D94(v10, (uint64_t)v11, v12);
  uint64_t v14 = sub_215731D94(v13, (uint64_t)"}", 1);
  if ((char)v18 < 0) {
    operator delete(__p[0]);
  }
  return v14;
}

void sub_215B1C9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B1C9F4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 80)) {
    goto LABEL_5;
  }
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 != a1 + 48)
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
LABEL_5:
    if (*(unsigned char *)(a1 + 40)) {
      goto LABEL_6;
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 48);
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 != a1 + 8)
  {
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 32))(a1 + 8);
  return a1;
}

void sub_215B1CB04(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80))
  {
    uint64_t v2 = a1 + 48;
    uint64_t v3 = *(void *)(a1 + 72);
    if (v3 == a1 + 48)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 48);
      if (!*(unsigned char *)(a1 + 40)) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  if (!*(unsigned char *)(a1 + 40)) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 == a1 + 8)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 32))(a1 + 8);
  }
  else if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
LABEL_12:

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B1CC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    if (!v8) {
      sub_21573D7DC();
    }
    (*(void (**)(uint64_t))(*(void *)v8 + 48))(v8);
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 32))(v12, a2);
  if (v21)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(*(void *)a2 + 72))(a2, v12[0], a3, a4);
    if (!*(unsigned char *)(a1 + 80)) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v9 = 0;
    if (!*(unsigned char *)(a1 + 80)) {
      goto LABEL_10;
    }
  }
  char v22 = v9;
  uint64_t v10 = *(void *)(a1 + 72);
  if (!v10) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, char *))(*(void *)v10 + 48))(v10, &v22);
LABEL_10:
  if (v21 || !v20) {
    return v9;
  }
  if (v19)
  {
    if (v18 < 0) {
      operator delete(__p);
    }
    if (v16 < 0) {
      operator delete(v15);
    }
  }
  if (!v14 || (v13 & 0x80000000) == 0) {
    return v9;
  }
  operator delete(v12[2]);
  return v9;
}

void sub_215B1CDC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157407D4((uint64_t)va);
  _Unwind_Resume(a1);
}

const char *sub_215B1CDDC()
{
  return "lockstep";
}

uint64_t sub_215B1CDE8(uint64_t a1)
{
  *(void *)a1 = &unk_26C67A870;
  *(void *)(a1 + 8) = &unk_26C67A908;
  sub_215B1CF74(a1, 0, 0);
  uint64_t v2 = *(std::thread **)(a1 + 448);
  *(void *)(a1 + 448) = 0;
  if (v2)
  {
    std::thread::~thread(v2);
    MEMORY[0x2166C4D20]();
  }
  if (*(unsigned char *)(a1 + 440))
  {
    uint64_t v3 = *(void *)(a1 + 432);
    *(void *)(a1 + 432) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  std::mutex::~mutex((std::mutex *)(a1 + 360));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 312));
  if (*(unsigned char *)(a1 + 304))
  {
    uint64_t v4 = a1 + 248;
    uint64_t v5 = *(std::mutex **)(a1 + 280);
    *(void *)(a1 + 280) = 0;
    if (v5)
    {
      std::mutex::~mutex(v5);
      MEMORY[0x2166C4D20]();
    }
    uint64_t v6 = *(void *)(a1 + 272);
    if (v6 == v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 32))(a1 + 248);
    }
    else if (v6)
    {
      (*(void (**)(uint64_t))(*(void *)v6 + 40))(v6);
    }
  }
  std::mutex::~mutex((std::mutex *)(a1 + 168));
  sub_215ACFF54(*(void **)(a1 + 152));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 96));
  std::mutex::~mutex((std::mutex *)(a1 + 32));
  return a1;
}

void sub_215B1CF74(uint64_t a1, std::unique_lock<std::mutex> *__lk, char a3)
{
  uint64_t v8 = (std::mutex *)(a1 + 168);
  unsigned __int8 v9 = 0;
  if (a3)
  {
    int v5 = 0;
    if (!*(unsigned char *)(a1 + 240)) {
      goto LABEL_11;
    }
  }
  else
  {
    std::mutex::lock((std::mutex *)(a1 + 168));
    int v5 = 1;
    unsigned __int8 v9 = 1;
    std::unique_lock<std::mutex> __lk = (std::unique_lock<std::mutex> *)&v8;
    if (!*(unsigned char *)(a1 + 240)) {
      goto LABEL_11;
    }
  }
  atomic_store(1u, (unsigned __int8 *)(a1 + 241));
  if (!*(unsigned char *)(a1 + 304)) {
    goto LABEL_15;
  }
  uint64_t v6 = *(std::mutex **)(a1 + 280);
  std::mutex::lock(v6);
  long long v7 = *(std::mutex **)(a1 + 296);
  if (v7)
  {
    std::mutex::lock(*(std::mutex **)(a1 + 296));
    std::condition_variable::notify_all(*(std::condition_variable **)(a1 + 288));
    std::mutex::unlock(v7);
  }
  std::mutex::unlock(v6);
  if (*(unsigned char *)(a1 + 240))
  {
LABEL_15:
    do
      std::condition_variable::wait((std::condition_variable *)(a1 + 312), __lk);
    while (*(unsigned char *)(a1 + 240));
    int v5 = v9;
  }
LABEL_11:
  if (v5) {
    std::mutex::unlock(v8);
  }
}

void sub_215B1D070(_Unwind_Exception *a1)
{
  std::mutex::unlock(v2);
  if (!v3) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215B1D09C(uint64_t a1)
{
  return sub_215B1CDE8(a1 - 8);
}

void sub_215B1D0A4(uint64_t a1)
{
  sub_215B1CDE8(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B1D0DC(uint64_t a1)
{
  sub_215B1CDE8(a1 - 8);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B1D118(unint64_t *a1)
{
  sub_215B1CF74((uint64_t)a1, 0, 0);
  atomic_store((unint64_t)"waiting", a1 + 29);
  uint64_t v2 = *(uint64_t (**)(unint64_t *))(*a1 + 64);

  return v2(a1);
}

uint64_t sub_215B1D190(uint64_t a1)
{
  v4.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 168);
  v4.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 168));
  sub_215B1CF74(a1, &v4, 1);
  if (*(unsigned char *)(a1 + 440))
  {
    uint64_t v2 = *(void *)(a1 + 432);
    *(void *)(a1 + 432) = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    *(unsigned char *)(a1 + 440) = 0;
  }
  if (v4.__owns_) {
    std::mutex::unlock(v4.__m_);
  }
  atomic_store((unint64_t)"proceeding", (unint64_t *)(a1 + 232));
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
}

void sub_215B1D268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B1D284(uint64_t a1, uint64_t a2)
{
  sub_215B1CF74(a1, 0, 0);
  std::mutex::lock((std::mutex *)(a1 + 360));
  while (!std::mutex::try_lock((std::mutex *)(a1 + 168)))
  {
    std::mutex::unlock((std::mutex *)(a1 + 360));
    sched_yield();
    std::mutex::lock((std::mutex *)(a1 + 168));
    if (std::mutex::try_lock((std::mutex *)(a1 + 360))) {
      break;
    }
    std::mutex::unlock((std::mutex *)(a1 + 168));
    sched_yield();
    std::mutex::lock((std::mutex *)(a1 + 360));
  }
  if (*(unsigned char *)(a1 + 440))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)(a2 + 8) = 0;
    uint64_t v5 = *(void *)(a1 + 432);
    *(void *)(a1 + 432) = v4;
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)(a2 + 8) = 0;
    *(void *)(a1 + 424) = &unk_26C678B80;
    *(void *)(a1 + 432) = v6;
    *(unsigned char *)(a1 + 440) = 1;
  }
  sub_215B1D3CC(a1);
}

void sub_215B1D3B0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B1D3CC(uint64_t a1)
{
  v3[7] = *MEMORY[0x263EF8340];
  if ((!*(unsigned char *)(a1 + 240)
     || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/Server.cpp", 888, (uint64_t)"!control_.pattern_running", 25, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))&& (!*(void *)(a1 + 448)|| !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Visualization/src/Server.cpp", 889, (uint64_t)"!control_.thread", 16, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8)))
  {
    atomic_store(0, (unsigned __int8 *)(a1 + 241));
    *(unsigned char *)(a1 + 240) = 1;
    atomic_store((*(uint64_t (**)(void))(**(void **)(a1 + 432) + 24))(*(void *)(a1 + 432)), (unint64_t *)(a1 + 232));
    v2[0] = &unk_26C67AFB8;
    v2[1] = a1;
    v3[3] = v3;
    v2[3] = v2;
    v3[0] = &unk_26C67AFB8;
    v3[1] = a1;
    operator new();
  }
  abort();
}

void sub_215B1D8E4(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B1D930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16 == v16)
  {
    (*(void (**)(uint64_t *))(a13 + 32))(&a13);
    sub_2159893FC(&a9);
    _Unwind_Resume(a1);
  }
  if (a16) {
    (*(void (**)(void))(*(void *)a16 + 40))();
  }
  sub_2159893FC(&a9);
  _Unwind_Resume(a1);
}

void sub_215B1D9B4()
{
  uint64_t v1 = *v0;
  *int v0 = 0;
  if (v1)
  {
    uint64_t v2 = MEMORY[0x2166C4640]();
    MEMORY[0x2166C4D20](v2, 0x20C4093837F09);
  }
  JUMPOUT(0x215B1D9E8);
}

void sub_215B1DA14(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 168);
  std::mutex::lock((std::mutex *)(a1 + 168));
  int v3 = *(unsigned __int8 *)(a1 + 240);
  std::mutex::unlock(v2);
  if (!v3)
  {
    std::mutex::lock((std::mutex *)(a1 + 360));
    while (!std::mutex::try_lock(v2))
    {
      std::mutex::unlock((std::mutex *)(a1 + 360));
      sched_yield();
      std::mutex::lock(v2);
      if (std::mutex::try_lock((std::mutex *)(a1 + 360))) {
        break;
      }
      std::mutex::unlock(v2);
      sched_yield();
      std::mutex::lock((std::mutex *)(a1 + 360));
    }
    if (!*(unsigned char *)(a1 + 240) && (uint64_t v4 = (char *)atomic_load((unint64_t *)(a1 + 232)), v4 == "waiting"))
    {
      if (*(unsigned char *)(a1 + 440)) {
        sub_215B1D3CC(a1);
      }
      std::mutex::unlock((std::mutex *)(a1 + 360));
      std::mutex::unlock(v2);
      sub_215B1D190(a1);
      if (!v14 && v13)
      {
        if (v12)
        {
          if (v11 < 0) {
            operator delete(__p);
          }
          if (v9 < 0) {
            operator delete(v8);
          }
        }
        if (v7)
        {
          if (v6 < 0) {
            operator delete(v5);
          }
        }
      }
    }
    else
    {
      std::mutex::unlock((std::mutex *)(a1 + 360));
      std::mutex::unlock(v2);
    }
  }
}

void sub_215B1DBCC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_215B1DBE8(uint64_t a1)
{
  return atomic_load((unint64_t *)(a1 + 232));
}

void sub_215B1DBF4(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v3 + 1;
  v10[0] = v3;
  v10[1] = 0;
  char v11 = 1;
  char v12 = 0;
  char v13 = 0;
  (*(void (**)(uint64_t, void *))(*(void *)v2 + 56))(v2, v10);
  v4[0] = v3;
  v4[1] = 0;
  char v5 = 1;
  char v6 = 0;
  char v7 = 0;
  int v8 = 0;
  char v9 = 1;
  sub_2159897A8((uint64_t)v4);
}

void sub_215B1DDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215986E24((void **)va);
  sub_215AEFACC(v9 - 64);
  _Unwind_Resume(a1);
}

void sub_215B1DDE8(_Unwind_Exception *a1)
{
  sub_215AEFACC(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_215B1DE00(uint64_t a1)
{
}

void sub_215B1DE08(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v3 + 1;
  uint64_t v11 = v3;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v2 + 56))(v2, &v11);
  uint64_t v4 = v3;
  char v5 = 0;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  int v9 = 0;
  char v10 = 1;
  sub_2159897A8((uint64_t)&v4);
}

void sub_215B1DFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_215986E24((void **)va);
  sub_215AEFACC(v9 - 64);
  _Unwind_Resume(a1);
}

void sub_215B1E004(_Unwind_Exception *a1)
{
  sub_215AEFACC(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_215B1E01C(uint64_t a1)
{
}

void sub_215B1E024(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v3 + 1;
  v10[0] = v3;
  v10[1] = 0;
  char v11 = 1;
  char v12 = 0;
  char v13 = 0;
  (*(void (**)(uint64_t, void *))(*(void *)v2 + 56))(v2, v10);
  v4[0] = v3;
  v4[1] = 1;
  LOBYTE(v5) = 1;
  char v6 = 0;
  char v7 = 0;
  int v8 = 0;
  LOBYTE(v9) = 1;
  sub_2159897A8((uint64_t)v4);
}

void sub_215B1E358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_215B1E36C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_215986E24((void **)va);
  sub_215AEFACC(v17 - 96);
  _Unwind_Resume(a1);
}

void sub_215B1E388(_Unwind_Exception *a1)
{
  sub_215AEFACC(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_215B1E3A4(uint64_t a1)
{
}

void sub_215B1E3AC(uint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v8 = a1 + 32;
  v24.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  v24.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  if (a4)
  {
    long long v9 = (std::mutex *)a3[4];
    std::mutex::lock(v9);
    a3[5] = a1 + 96;
    a3[6] = v8;
    std::mutex::unlock(v9);
    char v10 = (void *)(a1 + 152);
    char v11 = *(void **)(a1 + 144);
    if (v11 != (void *)(a1 + 152)) {
      goto LABEL_6;
    }
LABEL_3:
    while (2)
    {
      int v12 = 1;
      uint64_t v13 = a3[3];
      if (!v13) {
        goto LABEL_24;
      }
LABEL_20:
      if (((v12 | (*(unsigned int (**)(uint64_t))(*(void *)v13 + 48))(v13)) & 1) == 0)
      {
        std::condition_variable::wait((std::condition_variable *)(a1 + 96), &v24);
        char v11 = *(void **)(a1 + 144);
        if (v11 == v10) {
          continue;
        }
LABEL_6:
        while (*((unsigned char *)v11 + 104))
        {
          if (*((unsigned char *)v11 + 64))
          {
            if (!*((unsigned char *)v11 + 56))
            {
              int v12 = 0;
              uint64_t v13 = a3[3];
              if (!v13) {
                goto LABEL_24;
              }
              goto LABEL_20;
            }
            unint64_t v14 = v11[6];
            if (v14 <= a2)
            {
              int v12 = 0;
              if (*((unsigned __int8 *)v11 + 64) > 2u || v14 != a2) {
                goto LABEL_19;
              }
            }
          }
          char v15 = (void *)v11[1];
          if (v15)
          {
            do
            {
              uint64_t v16 = v15;
              char v15 = (void *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              uint64_t v16 = (void *)v11[2];
              BOOL v17 = *v16 == (void)v11;
              char v11 = v16;
            }
            while (!v17);
          }
          char v11 = v16;
          if (v16 == v10) {
            goto LABEL_3;
          }
        }
        int v12 = 0;
LABEL_19:
        uint64_t v13 = a3[3];
        if (v13) {
          goto LABEL_20;
        }
LABEL_24:
        sub_21573D7DC();
      }
      break;
    }
    if (!v24.__owns_)
    {
      std::__throw_system_error(1, "unique_lock::unlock: not locked");
      __break(1u);
      return;
    }
    std::mutex::unlock(v24.__m_);
    v24.__owns_ = 0;
    char v18 = (std::mutex *)a3[4];
    std::mutex::lock(v18);
    a3[5] = 0;
    a3[6] = 0;
    std::mutex::unlock(v18);
    if (v24.__owns_) {
      goto LABEL_27;
    }
  }
  else
  {
    char v19 = (void *)(a1 + 152);
    while (1)
    {
      char v20 = *(void **)(a1 + 144);
      if (v20 == v19) {
        break;
      }
      while (*((unsigned char *)v20 + 104))
      {
        if (*((unsigned char *)v20 + 64))
        {
          if (!*((unsigned char *)v20 + 56)) {
            break;
          }
          unint64_t v21 = v20[6];
          if (v21 <= a2 && (*((unsigned __int8 *)v20 + 64) > 2u || v21 != a2)) {
            break;
          }
        }
        char v22 = (void *)v20[1];
        if (v22)
        {
          do
          {
            uint64_t v23 = v22;
            char v22 = (void *)*v22;
          }
          while (v22);
        }
        else
        {
          do
          {
            uint64_t v23 = (void *)v20[2];
            BOOL v17 = *v23 == (void)v20;
            char v20 = v23;
          }
          while (!v17);
        }
        char v20 = v23;
        if (v23 == v19) {
          goto LABEL_44;
        }
      }
      std::condition_variable::wait((std::condition_variable *)(a1 + 96), &v24);
    }
LABEL_44:
    if (v24.__owns_) {
LABEL_27:
    }
      std::mutex::unlock(v24.__m_);
  }
}

void sub_215B1E630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B1E654(uint64_t a1, unint64_t a2, void *a3, char a4)
{
}

void sub_215B1E65C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, unsigned __int8 a5)
{
  uint64_t v10 = a1 + 32;
  v32.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 32);
  v32.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 32));
  uint64_t v11 = a5;
  if (a5)
  {
    int v12 = (std::mutex *)a4[4];
    std::mutex::lock(v12);
    a4[5] = a1 + 96;
    a4[6] = v10;
    std::mutex::unlock(v12);
  }
  v13.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + a3;
  unint64_t v14 = (void *)(a1 + 152);
  while (1)
  {
    BOOL v17 = *(void **)(a1 + 144);
    if (v17 == v14) {
      break;
    }
    while (1)
    {
      if (!*((unsigned char *)v17 + 104))
      {
        char v18 = 0;
LABEL_25:
        if (!v11) {
          goto LABEL_31;
        }
        goto LABEL_26;
      }
      if (*((unsigned char *)v17 + 64)) {
        break;
      }
LABEL_18:
      char v20 = (void *)v17[1];
      if (v20)
      {
        do
        {
          unint64_t v21 = v20;
          char v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          unint64_t v21 = (void *)v17[2];
          BOOL v22 = *v21 == (void)v17;
          BOOL v17 = v21;
        }
        while (!v22);
      }
      BOOL v17 = v21;
      if (v21 == v14) {
        goto LABEL_9;
      }
    }
    if (*((unsigned char *)v17 + 56))
    {
      unint64_t v19 = v17[6];
      if (v19 <= a2)
      {
        char v18 = 0;
        if (*((unsigned __int8 *)v17 + 64) > 2u || v19 != a2) {
          goto LABEL_25;
        }
      }
      goto LABEL_18;
    }
    char v18 = 0;
    if (v11) {
      goto LABEL_26;
    }
LABEL_31:
    if (v18) {
      goto LABEL_67;
    }
LABEL_32:
    if (v13.__d_.__rep_ <= std::chrono::steady_clock::now().__d_.__rep_) {
      goto LABEL_43;
    }
    v24.__d_.__rep_ = v13.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v24.__d_.__rep_ < 1) {
      goto LABEL_7;
    }
    std::chrono::steady_clock::now();
    v25.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (!v25.__d_.__rep_)
    {
      std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v15 = 0;
      goto LABEL_5;
    }
    if (v25.__d_.__rep_ < 1)
    {
      if ((unint64_t)v25.__d_.__rep_ < 0xFFDF3B645A1CAC09)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v15 = 0x8000000000000000;
      }
      else
      {
LABEL_41:
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v15 = 1000 * v25.__d_.__rep_;
        if (1000 * v25.__d_.__rep_ > (v24.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL)) {
          goto LABEL_42;
        }
      }
LABEL_5:
      v16.__d_.__rep_ = v15 + v24.__d_.__rep_;
      goto LABEL_6;
    }
    if ((unint64_t)v25.__d_.__rep_ <= 0x20C49BA5E353F7) {
      goto LABEL_41;
    }
    std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v15 = 0x7FFFFFFFFFFFFFFFLL;
    if ((v24.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL) == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_5;
    }
LABEL_42:
    v16.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_6:
    std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 96), &v32, v16);
    std::chrono::steady_clock::now();
LABEL_7:
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v13.__d_.__rep_)
    {
LABEL_43:
      long long v26 = *(void **)(a1 + 144);
      if (v26 == v14)
      {
LABEL_44:
        if (!v11) {
          goto LABEL_67;
        }
        goto LABEL_61;
      }
      while (*((unsigned char *)v26 + 104))
      {
        if (*((unsigned char *)v26 + 64))
        {
          if (!*((unsigned char *)v26 + 56))
          {
            if (!v11) {
              goto LABEL_67;
            }
LABEL_61:
            uint64_t v30 = a4[3];
            if (v30)
            {
              (*(void (**)(uint64_t))(*(void *)v30 + 48))(v30);
              goto LABEL_63;
            }
LABEL_70:
            sub_21573D7DC();
          }
          unint64_t v27 = v26[6];
          if (v27 <= a2 && (*((unsigned __int8 *)v26 + 64) > 2u || v27 != a2)) {
            break;
          }
        }
        uint64_t v28 = (void *)v26[1];
        if (v28)
        {
          do
          {
            uint64_t v29 = v28;
            uint64_t v28 = (void *)*v28;
          }
          while (v28);
        }
        else
        {
          do
          {
            uint64_t v29 = (void *)v26[2];
            BOOL v22 = *v29 == (void)v26;
            long long v26 = v29;
          }
          while (!v22);
        }
        long long v26 = v29;
        if (v29 == v14) {
          goto LABEL_44;
        }
      }
      if (v11) {
        goto LABEL_61;
      }
LABEL_67:
      if (v32.__owns_) {
        std::mutex::unlock(v32.__m_);
      }
      return;
    }
  }
LABEL_9:
  char v18 = 1;
  if (!v11) {
    goto LABEL_31;
  }
LABEL_26:
  uint64_t v23 = a4[3];
  if (!v23) {
    goto LABEL_70;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)v23 + 48))(v23) & 1) == 0 && (v18 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_63:
  if (v32.__owns_)
  {
    std::mutex::unlock(v32.__m_);
    v32.__owns_ = 0;
    uint64_t v31 = (std::mutex *)a4[4];
    std::mutex::lock(v31);
    a4[5] = 0;
    a4[6] = 0;
    std::mutex::unlock(v31);
    goto LABEL_67;
  }
  std::__throw_system_error(1, "unique_lock::unlock: not locked");
  __break(1u);
}

void sub_215B1E9FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_215B1EA20(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, unsigned __int8 a5)
{
}

void sub_215B1EA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  char v7 = *(void **)(a1 + 152);
  if (v7)
  {
    uint64_t v8 = (void *)(a1 + 152);
    do
    {
      uint64_t v9 = 0;
      do
      {
        unsigned int v10 = *((unsigned __int8 *)v7 + v9 + 32);
        unsigned int v11 = *(unsigned __int8 *)(a2 + v9);
      }
      while (v10 == v11 && v9++ != 15);
      std::chrono::steady_clock::time_point v13 = v7 + 1;
      if (v10 >= v11)
      {
        std::chrono::steady_clock::time_point v13 = v7;
        uint64_t v8 = v7;
      }
      char v7 = (void *)*v13;
    }
    while (*v13);
    if (v8 != (void *)(a1 + 152))
    {
      uint64_t v14 = 0;
      do
      {
        unsigned int v15 = *(unsigned __int8 *)(a2 + v14);
        unsigned int v16 = *((unsigned __int8 *)v8 + v14 + 32);
      }
      while (v15 == v16 && v14++ != 15);
      if (v15 >= v16)
      {
        if (!*((unsigned char *)v8 + 104))
        {
          *(void *)&long long v25 = *(void *)(a3 + 16);
          BYTE8(v25) = *(unsigned char *)(a3 + 24);
          long long v20 = *(_OWORD *)(a3 + 16);
          *((_OWORD *)v8 + 4) = *(_OWORD *)a3;
          *((_OWORD *)v8 + 5) = v20;
          *((_OWORD *)v8 + 3) = v25;
          *((unsigned char *)v8 + 96) = 1;
          *((unsigned char *)v8 + 104) = 1;
LABEL_29:
          std::condition_variable::notify_all((std::condition_variable *)(a1 + 96));
          goto LABEL_30;
        }
        if (*(unsigned char *)(a3 + 24))
        {
          char v18 = (char *)(a3 + 16);
          unint64_t v19 = (_DWORD *)(a3 + 17);
        }
        else
        {
          char v21 = *((unsigned char *)v8 + 88);
          if (!v21)
          {
            char v22 = 0;
LABEL_27:
            *((unsigned char *)v8 + 48) = v22;
            *(_DWORD *)((char *)v8 + 49) = v25;
            *((_DWORD *)v8 + 13) = *(_DWORD *)((char *)&v25 + 3);
            *((unsigned char *)v8 + 56) = v21;
            int v23 = *((unsigned __int8 *)v8 + 96);
            long long v24 = *(_OWORD *)(a3 + 16);
            *((_OWORD *)v8 + 4) = *(_OWORD *)a3;
            *((_OWORD *)v8 + 5) = v24;
            if (!v23) {
              *((unsigned char *)v8 + 96) = 1;
            }
            goto LABEL_29;
          }
          char v18 = (char *)(v8 + 10);
          unint64_t v19 = (_DWORD *)((char *)v8 + 81);
        }
        char v22 = *v18;
        LODWORD(v25) = *v19;
        *(_DWORD *)((char *)&v25 + 3) = *(_DWORD *)((char *)v19 + 3);
        char v21 = 1;
        goto LABEL_27;
      }
    }
  }
LABEL_30:

  std::mutex::unlock(v6);
}

void sub_215B1EBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_215B1EBE4(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  char v5 = sub_215B214E0((uint64_t **)(a1 + 144), (uint64_t)a2, a2);
  *((unsigned char *)v5 + 48) = 0;
  *((unsigned char *)v5 + 104) = 0;

  std::mutex::unlock(v4);
}

void sub_215B1EC48(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B1EC5C(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  char v5 = sub_215B214E0((uint64_t **)(a1 + 136), (uint64_t)a2, a2);
  *((unsigned char *)v5 + 48) = 0;
  *((unsigned char *)v5 + 104) = 0;

  std::mutex::unlock(v4);
}

void sub_215B1ECC0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215B1ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  char v6 = (uint64_t *)(a1 + 152);
  char v5 = *(uint64_t **)(a1 + 152);
  if (v5)
  {
    char v7 = (uint64_t *)(a1 + 152);
    uint64_t v8 = *(void **)(a1 + 152);
    do
    {
      uint64_t v9 = 0;
      do
      {
        unsigned int v10 = *((unsigned __int8 *)v8 + v9 + 32);
        unsigned int v11 = *(unsigned __int8 *)(a2 + v9);
        BOOL v12 = v10 != v11 || v9++ == 15;
      }
      while (!v12);
      std::chrono::steady_clock::time_point v13 = v8 + 1;
      if (v10 >= v11)
      {
        std::chrono::steady_clock::time_point v13 = v8;
        char v7 = v8;
      }
      uint64_t v8 = (void *)*v13;
    }
    while (*v13);
    if (v7 != v6)
    {
      uint64_t v14 = 0;
      unsigned int v15 = v7 + 4;
      do
      {
        unsigned int v16 = *(unsigned __int8 *)(a2 + v14);
        unsigned int v17 = *((unsigned __int8 *)v15 + v14);
      }
      while (v16 == v17 && v14++ != 15);
      if (v16 >= v17)
      {
        unint64_t v19 = (uint64_t *)(a1 + 152);
        long long v20 = *(void **)(a1 + 152);
        do
        {
          uint64_t v21 = 0;
          do
          {
            unsigned int v22 = *((unsigned __int8 *)v20 + v21 + 32);
            unsigned int v23 = *(unsigned __int8 *)(a2 + v21);
          }
          while (v22 == v23 && v21++ != 15);
          long long v25 = v20 + 1;
          if (v22 >= v23)
          {
            long long v25 = v20;
            unint64_t v19 = v20;
          }
          long long v20 = (void *)*v25;
        }
        while (*v25);
        if (v19 == v6) {
          goto LABEL_38;
        }
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *(unsigned __int8 *)(a2 + v26);
          unsigned int v28 = *((unsigned __int8 *)v19 + v26 + 32);
        }
        while (v27 == v28 && v26++ != 15);
        if (v27 < v28) {
LABEL_38:
        }
          unint64_t v19 = (uint64_t *)(a1 + 152);
        uint64_t v30 = (uint64_t *)v19[1];
        if (v30)
        {
          do
          {
            uint64_t v31 = v30;
            uint64_t v30 = (uint64_t *)*v30;
          }
          while (v30);
        }
        else
        {
          std::unique_lock<std::mutex> v32 = v19;
          do
          {
            uint64_t v31 = (uint64_t *)v32[2];
            BOOL v12 = *v31 == (void)v32;
            std::unique_lock<std::mutex> v32 = v31;
          }
          while (!v12);
        }
        if (*(uint64_t **)(a1 + 144) == v19) {
          *(void *)(a1 + 144) = v31;
        }
        --*(void *)(a1 + 160);
        sub_21573B1FC(v5, v19);
        operator delete(v19);
      }
    }
  }
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 96));

  std::mutex::unlock(v4);
}

void sub_215B1EE74(uint64_t a1, uint64_t a2)
{
}

void sub_215B1EE7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  uint64_t v9 = *(void **)(a1 + 152);
  uint64_t v8 = (void *)(a1 + 152);
  char v7 = v9;
  if (!v9) {
    goto LABEL_22;
  }
  unsigned int v10 = v8;
  do
  {
    uint64_t v11 = 0;
    do
    {
      unsigned int v12 = *((unsigned __int8 *)v7 + v11 + 32);
      unsigned int v13 = *(unsigned __int8 *)(a2 + v11);
    }
    while (v12 == v13 && v11++ != 15);
    unsigned int v15 = v7 + 1;
    if (v12 >= v13)
    {
      unsigned int v15 = v7;
      unsigned int v10 = v7;
    }
    char v7 = (void *)*v15;
  }
  while (*v15);
  if (v10 == v8) {
    goto LABEL_22;
  }
  uint64_t v16 = 0;
  do
  {
    unsigned int v17 = *(unsigned __int8 *)(a2 + v16);
    unsigned int v18 = *((unsigned __int8 *)v10 + v16 + 32);
  }
  while (v17 == v18 && v16++ != 15);
  if (v17 >= v18 && *((unsigned char *)v10 + 104))
  {
    long long v20 = *((_OWORD *)v10 + 5);
    *(_OWORD *)a3 = *((_OWORD *)v10 + 4);
    *(_OWORD *)(a3 + 16) = v20;
    char v21 = 1;
  }
  else
  {
LABEL_22:
    char v21 = 0;
    *(unsigned char *)a3 = 0;
  }
  *(unsigned char *)(a3 + 32) = v21;

  std::mutex::unlock(v6);
}

void sub_215B1EF64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v9 = *(void **)(a1 + 144);
  uint64_t v8 = (void *)(a1 + 144);
  char v7 = v9;
  if (!v9) {
    goto LABEL_22;
  }
  unsigned int v10 = v8;
  do
  {
    uint64_t v11 = 0;
    do
    {
      unsigned int v12 = *((unsigned __int8 *)v7 + v11 + 32);
      unsigned int v13 = *(unsigned __int8 *)(a2 + v11);
    }
    while (v12 == v13 && v11++ != 15);
    unsigned int v15 = v7 + 1;
    if (v12 >= v13)
    {
      unsigned int v15 = v7;
      unsigned int v10 = v7;
    }
    char v7 = (void *)*v15;
  }
  while (*v15);
  if (v10 == v8) {
    goto LABEL_22;
  }
  uint64_t v16 = 0;
  do
  {
    unsigned int v17 = *(unsigned __int8 *)(a2 + v16);
    unsigned int v18 = *((unsigned __int8 *)v10 + v16 + 32);
  }
  while (v17 == v18 && v16++ != 15);
  if (v17 >= v18 && *((unsigned char *)v10 + 104))
  {
    long long v20 = *((_OWORD *)v10 + 5);
    *(_OWORD *)a3 = *((_OWORD *)v10 + 4);
    *(_OWORD *)(a3 + 16) = v20;
    char v21 = 1;
  }
  else
  {
LABEL_22:
    char v21 = 0;
    *(unsigned char *)a3 = 0;
  }
  *(unsigned char *)(a3 + 32) = v21;

  std::mutex::unlock(v6);
}

uint64_t sub_215B1F04C(uint64_t a1)
{
  return a1 + 8;
}

void *sub_215B1F054(void *a1)
{
  *a1 = &unk_26C67AA80;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B1F0A0(void *a1)
{
  *a1 = &unk_26C67AA80;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B1F10C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = &unk_26C67AA80;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215B1F168(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C67AA80;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B1F1A0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B1F1B0(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B1F1F0(uint64_t a1, std::string::size_type a2, const void ***a3)
{
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    char v7 = std::__shared_weak_count::lock(v4);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      if (v8)
      {
        sub_215B1634C((uint64_t)&v9, v8, a2, a3);
        goto LABEL_17;
      }
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_215B1F4D4((uint64_t)&v21, (uint64_t)"server cannot receive data from network", 39);
  long long v9 = v21;
  LOBYTE(v10[0]) = 0;
  char v19 = 0;
  if (v31)
  {
    char v12 = 0;
    if (v24)
    {
      *(_OWORD *)unsigned int v10 = __p;
      uint64_t v11 = v23;
      uint64_t v23 = 0;
      long long __p = 0uLL;
      char v12 = 1;
    }
    LOBYTE(v13) = 0;
    char v18 = 0;
    if (v30)
    {
      uint64_t v14 = v26;
      long long v13 = v25;
      long long v25 = 0uLL;
      uint64_t v15 = v27;
      *(_OWORD *)uint64_t v16 = v28;
      uint64_t v17 = v29;
      uint64_t v26 = 0;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      char v18 = 1;
    }
    char v19 = 1;
    char v20 = 0;
    if (v24 && SHIBYTE(v23) < 0) {
      operator delete((void *)__p);
    }
    if (!v7) {
      goto LABEL_18;
    }
  }
  else
  {
    char v20 = 0;
    if (!v7) {
      goto LABEL_18;
    }
  }
LABEL_17:
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v20) {
      return;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (v20) {
    return;
  }
LABEL_21:
  if (v19)
  {
    if (v18)
    {
      if (SHIBYTE(v17) < 0) {
        operator delete(v16[0]);
      }
      if (SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v12)
    {
      if (SHIBYTE(v11) < 0) {
        operator delete(v10[0]);
      }
    }
  }
}

void sub_215B1F400(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B1F458(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8"
                     "functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyn"
                     "cControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18opt"
                                "ionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10uniqu"
                                "e_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_0"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B1F4C8()
{
  return &unk_26C67AAE0;
}

void sub_215B1F4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = ", server object has been destroyed";
  _OWORD v13[3] = 34;
  sub_2157430CC((uint64_t)v13, (uint64_t)&v14, 0, 0, &v4);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__p, v4.__r_.__value_.__l.__data_, v4.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v4;
  }
  char v6 = 1;
  LOBYTE(v7) = 0;
  char v11 = 0;
  char v12 = 1;
  sub_215982968(2u, (long long *)&__p, a1);
  if (!v12) {
    goto LABEL_11;
  }
  if (v11)
  {
    if ((v10 & 0x80000000) == 0)
    {
      if ((v8 & 0x80000000) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      operator delete(v7);
      if (!v6) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
    operator delete(v9);
    if (v8 < 0) {
      goto LABEL_15;
    }
  }
LABEL_8:
  if (!v6) {
    goto LABEL_11;
  }
LABEL_9:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_11:
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
}

void sub_215B1F610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215B1F648(void *a1)
{
  *a1 = &unk_26C67AB00;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B1F694(void *a1)
{
  *a1 = &unk_26C67AB00;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B1F700(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = &unk_26C67AB00;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215B1F75C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C67AB00;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B1F794(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B1F7A4(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B1F7E4(uint64_t a1, std::string::size_type a2, uint64_t a3, uint64_t a4)
{
  char v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    char v8 = std::__shared_weak_count::lock(v5);
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 8);
      if (v9)
      {
        sub_215B167BC((uint64_t)&v10, v9, a2, a4);
        goto LABEL_17;
      }
    }
  }
  else
  {
    char v8 = 0;
  }
  sub_215B1F4D4((uint64_t)&v22, (uint64_t)"server cannot receive sync from network", 39);
  long long v10 = v22;
  LOBYTE(v11[0]) = 0;
  char v20 = 0;
  if (v32)
  {
    char v13 = 0;
    if (v25)
    {
      *(_OWORD *)char v11 = __p;
      uint64_t v12 = v24;
      uint64_t v24 = 0;
      long long __p = 0uLL;
      char v13 = 1;
    }
    LOBYTE(v14) = 0;
    char v19 = 0;
    if (v31)
    {
      uint64_t v15 = v27;
      long long v14 = v26;
      long long v26 = 0uLL;
      uint64_t v16 = v28;
      *(_OWORD *)uint64_t v17 = v29;
      uint64_t v18 = v30;
      uint64_t v27 = 0;
      long long v29 = 0uLL;
      uint64_t v30 = 0;
      char v19 = 1;
    }
    char v20 = 1;
    char v21 = 0;
    if (v25 && SHIBYTE(v24) < 0) {
      operator delete((void *)__p);
    }
    if (!v8) {
      goto LABEL_18;
    }
  }
  else
  {
    char v21 = 0;
    if (!v8) {
      goto LABEL_18;
    }
  }
LABEL_17:
  if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (v21) {
      return;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (v21) {
    return;
  }
LABEL_21:
  if (v20)
  {
    if (v19)
    {
      if (SHIBYTE(v18) < 0) {
        operator delete(v17[0]);
      }
      if (SHIBYTE(v15) < 0) {
        operator delete((void *)v14);
      }
    }
    if (v13)
    {
      if (SHIBYTE(v12) < 0) {
        operator delete(v11[0]);
      }
    }
  }
}

void sub_215B1F9F4(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B1FA4C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8"
                     "functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyn"
                     "cControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18opt"
                                "ionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10uniqu"
                                "e_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_1"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B1FABC()
{
  return &unk_26C67AB70;
}

void *sub_215B1FAC8(void *a1)
{
  *a1 = &unk_26C67AB90;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B1FB14(void *a1)
{
  *a1 = &unk_26C67AB90;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B1FB80(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = &unk_26C67AB90;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215B1FBDC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C67AB90;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B1FC14(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B1FC24(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B1FC64(uint64_t a1, std::string::size_type a2, unsigned __int8 *a3)
{
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    int v6 = *a3;
    char v7 = std::__shared_weak_count::lock(v4);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      if (v8)
      {
        sub_215B177C0((uint64_t)&v9, v8, a2, v6);
        goto LABEL_17;
      }
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_215B1F4D4((uint64_t)&v21, (uint64_t)"server cannot receive connection update from network", 52);
  long long v9 = v21;
  LOBYTE(v10[0]) = 0;
  char v19 = 0;
  if (v31)
  {
    char v12 = 0;
    if (v24)
    {
      *(_OWORD *)long long v10 = __p;
      uint64_t v11 = v23;
      uint64_t v23 = 0;
      long long __p = 0uLL;
      char v12 = 1;
    }
    LOBYTE(v13) = 0;
    char v18 = 0;
    if (v30)
    {
      uint64_t v14 = v26;
      long long v13 = v25;
      long long v25 = 0uLL;
      uint64_t v15 = v27;
      *(_OWORD *)uint64_t v16 = v28;
      uint64_t v17 = v29;
      uint64_t v26 = 0;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      char v18 = 1;
    }
    char v19 = 1;
    char v20 = 0;
    if (v24 && SHIBYTE(v23) < 0) {
      operator delete((void *)__p);
    }
    if (!v7) {
      goto LABEL_18;
    }
  }
  else
  {
    char v20 = 0;
    if (!v7) {
      goto LABEL_18;
    }
  }
LABEL_17:
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v20) {
      return;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (v20) {
    return;
  }
LABEL_21:
  if (v19)
  {
    if (v18)
    {
      if (SHIBYTE(v17) < 0) {
        operator delete(v16[0]);
      }
      if (SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v12)
    {
      if (SHIBYTE(v11) < 0) {
        operator delete(v10[0]);
      }
    }
  }
}

void sub_215B1FE74(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B1FECC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8"
                     "functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyn"
                     "cControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_2")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18opt"
                                "ionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10uniqu"
                                "e_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_2" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_2"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_2" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B1FF3C()
{
  return &unk_26C67ABF0;
}

void *sub_215B1FF48(void *a1)
{
  *a1 = &unk_26C67AC10;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_215B1FF94(void *a1)
{
  *a1 = &unk_26C67AC10;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215B20000(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = &unk_26C67AC10;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215B2005C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C67AC10;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215B20094(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215B200A4(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  operator delete(__p);
}

void sub_215B200E4(uint64_t a1, std::string::size_type a2, void *a3)
{
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    char v7 = std::__shared_weak_count::lock(v4);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      if (v8)
      {
        sub_215B188B8((uint64_t)&v9, v8, a2, a3);
        goto LABEL_17;
      }
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_215B1F4D4((uint64_t)&v21, (uint64_t)"server cannot receive context status update from network", 56);
  long long v9 = v21;
  LOBYTE(v10[0]) = 0;
  char v19 = 0;
  if (v31)
  {
    char v12 = 0;
    if (v24)
    {
      *(_OWORD *)long long v10 = __p;
      uint64_t v11 = v23;
      uint64_t v23 = 0;
      long long __p = 0uLL;
      char v12 = 1;
    }
    LOBYTE(v13) = 0;
    char v18 = 0;
    if (v30)
    {
      uint64_t v14 = v26;
      long long v13 = v25;
      long long v25 = 0uLL;
      uint64_t v15 = v27;
      *(_OWORD *)uint64_t v16 = v28;
      uint64_t v17 = v29;
      uint64_t v26 = 0;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      char v18 = 1;
    }
    char v19 = 1;
    char v20 = 0;
    if (v24 && SHIBYTE(v23) < 0) {
      operator delete((void *)__p);
    }
    if (!v7) {
      goto LABEL_18;
    }
  }
  else
  {
    char v20 = 0;
    if (!v7) {
      goto LABEL_18;
    }
  }
LABEL_17:
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v20) {
      return;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (v20) {
    return;
  }
LABEL_21:
  if (v19)
  {
    if (v18)
    {
      if (SHIBYTE(v17) < 0) {
        operator delete(v16[0]);
      }
      if (SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v12)
    {
      if (SHIBYTE(v11) < 0) {
        operator delete(v10[0]);
      }
    }
  }
}

void sub_215B202F4(_Unwind_Exception *exception_object)
{
  if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B2034C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8"
                     "functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyn"
                     "cControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_3")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18opt"
                                "ionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10uniqu"
                                "e_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_3" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_3"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_3" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B203BC()
{
  return &unk_26C67AC70;
}

void sub_215B203C8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 280);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    unint64_t v3 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 264);
  if (v3) {
LABEL_4:
  }
    std::__shared_weak_count::__release_weak(v3);
LABEL_5:
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 248);
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  sub_2157B69B0(a1 + 64);
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    char v5 = *(void **)(a1 + 32);
    operator delete(v5);
  }
}

uint64_t sub_215B2048C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  int v4 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 56) = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    if (*(char *)(a2 + 55) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
    }
    else
    {
      long long v5 = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = v5;
    }
    *(unsigned char *)(a1 + 56) = 1;
  }
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 208) = 0;
  if (*(unsigned char *)(a2 + 208))
  {
    sub_2157B6F84((char *)(a1 + 64), (long long *)(a2 + 64));
    *(unsigned char *)(a1 + 208) = 1;
  }
  long long v6 = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v6;
  uint64_t v7 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 16), 1uLL, memory_order_relaxed);
  }
  uint64_t v9 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

void sub_215B2059C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 56))
  {
    if (*(char *)(v1 + 55) < 0) {
      operator delete(*v2);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215B205D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 288;
    sub_215B203C8(i - 288);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_215B20624(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 32) = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    int v4 = (void *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      if (v5 == a2)
      {
        *(void *)(a1 + 24) = a1;
        (*(void (**)(void, uint64_t))(*(void *)*v4 + 24))(*v4, a1);
        goto LABEL_8;
      }
      *(void *)(a1 + 24) = v5;
    }
    else
    {
      int v4 = (void *)(a1 + 24);
    }
    void *v4 = 0;
LABEL_8:
    *(unsigned char *)(a1 + 32) = 1;
  }
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  if (!*(unsigned char *)(a2 + 72)) {
    goto LABEL_17;
  }
  uint64_t v6 = a2 + 64;
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    if (v7 == a2 + 40)
    {
      *(void *)(a1 + 64) = a1 + 40;
      (*(void (**)(void))(**(void **)v6 + 24))();
      goto LABEL_16;
    }
    *(void *)(a1 + 64) = v7;
  }
  else
  {
    uint64_t v6 = a1 + 64;
  }
  *(void *)uint64_t v6 = 0;
LABEL_16:
  *(unsigned char *)(a1 + 72) = 1;
LABEL_17:
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!*(unsigned char *)(a2 + 112)) {
    goto LABEL_25;
  }
  uint64_t v8 = a2 + 104;
  uint64_t v9 = *(void *)(a2 + 104);
  if (v9)
  {
    if (v9 == a2 + 80)
    {
      *(void *)(a1 + 104) = a1 + 80;
      (*(void (**)(void))(**(void **)v8 + 24))();
      goto LABEL_24;
    }
    *(void *)(a1 + 104) = v9;
  }
  else
  {
    uint64_t v8 = a1 + 104;
  }
  *(void *)uint64_t v8 = 0;
LABEL_24:
  *(unsigned char *)(a1 + 112) = 1;
LABEL_25:
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  if (*(unsigned char *)(a2 + 152))
  {
    uint64_t v10 = a2 + 144;
    uint64_t v11 = *(void *)(a2 + 144);
    if (v11)
    {
      if (v11 == a2 + 120)
      {
        *(void *)(a1 + 144) = a1 + 120;
        (*(void (**)(void))(**(void **)v10 + 24))();
        goto LABEL_32;
      }
      *(void *)(a1 + 144) = v11;
    }
    else
    {
      uint64_t v10 = a1 + 144;
    }
    *(void *)uint64_t v10 = 0;
LABEL_32:
    *(unsigned char *)(a1 + 152) = 1;
  }
  return a1;
}

uint64_t sub_215B20828(uint64_t a1)
{
  uint64_t v2 = std::__thread_local_data();
  uint64_t v3 = *(const void **)a1;
  *(void *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  uint64_t v4 = *(void *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v4 + 360));
  while (((*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(v4 + 432) + 16))(*(void *)(v4 + 432), v4 + 8, v4 + 248, 1) & 1) != 0);
  std::mutex::lock((std::mutex *)(v4 + 168));
  *(unsigned char *)(v4 + 240) = 0;
  std::thread::detach(*(std::thread **)(v4 + 448));
  uint64_t v5 = *(std::thread **)(v4 + 448);
  *(void *)(v4 + 448) = 0;
  if (v5)
  {
    std::thread::~thread(v5);
    MEMORY[0x2166C4D20]();
  }
  std::condition_variable::notify_all((std::condition_variable *)(v4 + 312));
  std::mutex::unlock((std::mutex *)(v4 + 168));
  std::mutex::unlock((std::mutex *)(v4 + 360));
  uint64_t v6 = *(const void **)a1;
  *(void *)a1 = 0;
  if (v6)
  {
    uint64_t v7 = MEMORY[0x2166C4640]();
    MEMORY[0x2166C4D20](v7, 0x20C4093837F09);
  }
  MEMORY[0x2166C4D20](a1, 0x20C40A4A59CD2);
  return 0;
}

void sub_215B2095C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t *a10)
{
  std::mutex::unlock(v11);
  std::mutex::unlock(v10);
  sub_215B209B4(&a10);
  _Unwind_Resume(a1);
}

void sub_215B20980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t *a10)
{
  std::mutex::unlock(v10);
  sub_215B209B4(&a10);
  _Unwind_Resume(a1);
}

uint64_t **sub_215B209B4(uint64_t **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *v2;
    *uint64_t v2 = 0;
    if (v3)
    {
      uint64_t v4 = MEMORY[0x2166C4640]();
      MEMORY[0x2166C4D20](v4, 0x20C4093837F09);
    }
    MEMORY[0x2166C4D20](v2, 0x20C40A4A59CD2);
  }
  return a1;
}

void sub_215B20A20(void *a1)
{
  if (a1)
  {
    sub_215B20A20(*a1);
    sub_215B20A20(a1[1]);
    uint64_t v2 = (std::__shared_weak_count *)a1[7];
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      uint64_t v3 = a1;
    }
    else
    {
      uint64_t v3 = a1;
    }
    operator delete(v3);
  }
}

void sub_215B20AD4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AC90;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B20AF4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AC90;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215B20B48(uint64_t a1)
{
  return sub_215B14D84(a1 + 24);
}

void sub_215B20B58()
{
}

void *sub_215B20B6C()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = &unk_26C67ACE0;
  return result;
}

void sub_215B20BA4(uint64_t a1, void *a2)
{
  *a2 = &unk_26C67ACE0;
}

void sub_215B20BCC()
{
}

uint64_t sub_215B20CC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8"
                     "functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyn"
                     "cControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_4")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18opt"
                                "ionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10uniqu"
                                "e_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_4" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_4"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz6Server4Impl6CreateENS1_15ServerCallbacksENS1_13ServerOptionsENSt3__18optionalINS6_8functionIFvRKNS1_14ConnectionInfoERKNS_3esn5ErrorEEEEEENS7_INS8_IFNS6_10unique_ptrINS1_18IServerSyncControlENS6_14default_deleteISK_EEEERNS1_7IServerEEEEEEE3$_4" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B20D38()
{
  return &unk_26C67AD50;
}

uint64_t sub_215B20D44(uint64_t a1, const char *a2)
{
  int v5 = 0;
  sub_2158C2970(v4, "server cannot receive ");
  if (*(void *)a2)
  {
    uint64_t v6 = (void **)v4;
    uint64_t v7 = a2;
    uint64_t v8 = v4;
    uint64_t v9 = a2;
    uint64_t v10 = a2;
    if (v5 != -1)
    {
      uint64_t v11 = &v6;
      ((void (*)(void **, _DWORD *))off_26C67ADC0[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_11:
    sub_215742D4C();
  }
  uint64_t v6 = (void **)v4;
  uint64_t v7 = "nullptr";
  uint64_t v8 = v4;
  uint64_t v9 = "nullptr";
  uint64_t v10 = "nullptr";
  if (v5 == -1) {
    goto LABEL_11;
  }
  uint64_t v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C67AD78[v5])(&v11, v4);
LABEL_6:
  uint64_t v6 = (void **)v4;
  uint64_t v7 = ", server object has been destroyed";
  uint64_t v8 = v4;
  uint64_t v9 = ", server object has been destroyed";
  uint64_t v10 = ", server object has been destroyed";
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C67ADD8[v5])(&v11, v4);
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C67ADA8[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C67AD60[v5])(&v6, v4);
  }
  return result;
}

void sub_215B20EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B20ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B20EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B20F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215B20F14(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AE00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B20F34(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AE00;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B20F88(uint64_t a1)
{
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 96));

  std::mutex::~mutex((std::mutex *)(a1 + 32));
}

uint64_t **sub_215B20FC8(uint64_t **a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v6 = a1 + 1;
  int v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = 0;
        uint64_t v7 = (uint64_t **)v5;
        do
        {
          unsigned int v9 = *(unsigned __int8 *)(a2 + v8);
          unsigned int v10 = *((unsigned __int8 *)v7 + v8 + 32);
        }
        while (v9 == v10 && v8++ != 15);
        if (v9 >= v10) {
          break;
        }
        int v5 = *v7;
        uint64_t v6 = v7;
        if (!*v7) {
          goto LABEL_20;
        }
      }
      uint64_t v12 = 0;
      do
      {
        unsigned int v13 = *((unsigned __int8 *)v7 + v12 + 32);
        unsigned int v14 = *(unsigned __int8 *)(a2 + v12);
      }
      while (v13 == v14 && v12++ != 15);
      if (v13 >= v14) {
        break;
      }
      int v5 = v7[1];
      if (!v5)
      {
        uint64_t v6 = v7 + 1;
        goto LABEL_20;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_20:
    uint64_t v16 = (uint64_t *)v7;
    uint64_t v7 = (uint64_t **)operator new(0x40uLL);
    *((_OWORD *)v7 + 2) = *a3;
    v7[6] = 0;
    v7[7] = 0;
    *uint64_t v7 = 0;
    v7[1] = 0;
    unsigned int v7[2] = v16;
    const void *v6 = (uint64_t *)v7;
    uint64_t v17 = (uint64_t *)**a1;
    char v18 = (uint64_t *)v7;
    if (v17)
    {
      *a1 = v17;
      char v18 = *v6;
    }
    sub_21573B048(a1[1], v18);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

void sub_215B210D8()
{
}

uint64_t sub_215B210EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(**(void **)(a1 + 8) + 24);
  if (!v1) {
    sub_21573D7DC();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_215B21154()
{
}

uint64_t sub_215B21168(uint64_t a1)
{
  uint64_t v1 = *(void *)(**(void **)(a1 + 8) + 24);
  if (!v1) {
    sub_21573D7DC();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_215B211CC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AED0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215B211EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C67AED0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215B21240(uint64_t a1)
{
  sub_21573AE84(a1 + 104, *(char **)(a1 + 112));
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = &unk_26C678F90;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  std::mutex::~mutex((std::mutex *)(a1 + 24));
}

void sub_215B212D4()
{
}

uint64_t sub_215B212E8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  LOBYTE(v1) = **(unsigned char **)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  char v6 = (char)v1;
  if (!v4) {
    sub_21573D7DC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(*(void *)v4 + 48))(v4, v2, &v6);
}

void sub_215B2134C()
{
}

uint64_t sub_215B21360(uint64_t a1)
{
  uint64_t v1 = *(void *)(**(void **)(a1 + 8) + 24);
  if (!v1) {
    sub_21573D7DC();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_215B213C8()
{
}

void *sub_215B213DC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_26C67AFB8;
  result[1] = v3;
  return result;
}

uint64_t sub_215B21424(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26C67AFB8;
  a2[1] = v2;
  return result;
}

uint64_t sub_215B21450(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(*(void *)(a1 + 8) + 241));
  return v1 & 1;
}

uint64_t sub_215B21464(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz11SyncControl12StartPatternEvE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz11SyncControl12StartPatternEvE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz11SyncControl12StartPatternEvE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz11SyncControl12StartPatternEvE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215B214D4()
{
  return &unk_26C67B018;
}

uint64_t **sub_215B214E0(uint64_t **a1, uint64_t a2, _OWORD *a3)
{
  char v6 = a1 + 1;
  int v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = 0;
        uint64_t v7 = (uint64_t **)v5;
        do
        {
          unsigned int v9 = *(unsigned __int8 *)(a2 + v8);
          unsigned int v10 = *((unsigned __int8 *)v7 + v8 + 32);
        }
        while (v9 == v10 && v8++ != 15);
        if (v9 >= v10) {
          break;
        }
        int v5 = *v7;
        char v6 = v7;
        if (!*v7) {
          goto LABEL_20;
        }
      }
      uint64_t v12 = 0;
      do
      {
        unsigned int v13 = *((unsigned __int8 *)v7 + v12 + 32);
        unsigned int v14 = *(unsigned __int8 *)(a2 + v12);
      }
      while (v13 == v14 && v12++ != 15);
      if (v13 >= v14) {
        break;
      }
      int v5 = v7[1];
      if (!v5)
      {
        char v6 = v7 + 1;
        goto LABEL_20;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_20:
    uint64_t v16 = (uint64_t *)v7;
    uint64_t v7 = (uint64_t **)operator new(0x70uLL);
    *((_OWORD *)v7 + 2) = *a3;
    *((unsigned char *)v7 + 48) = 0;
    *((unsigned char *)v7 + 104) = 0;
    *uint64_t v7 = 0;
    v7[1] = 0;
    unsigned int v7[2] = v16;
    const void *v6 = (uint64_t *)v7;
    uint64_t v17 = (uint64_t *)**a1;
    char v18 = (uint64_t *)v7;
    if (v17)
    {
      *a1 = v17;
      char v18 = *v6;
    }
    sub_21573B048(a1[1], v18);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

void sub_215B215F0(float32x2_t *a1@<X0>, float *a2@<X1>, uint64_t a3@<X8>)
{
  float v6 = a1[3].f32[1];
  v84[0] = a1[1].f32[1];
  v84[1] = v6;
  float v7 = a1[5].f32[1];
  float v8 = a1[7].f32[1];
  v84[2] = v7;
  v84[3] = v8;
  long long v83 = xmmword_215ED91D0;
  if (v84[0] != 0.0 && fabsf(v84[0]) > *a2
    || v6 != 0.0 && fabsf(v6) > *a2
    || v7 != 0.0 && fabsf(v7) > *a2
    || v8 != 1.0 && (v8 <= 1.0 ? (float v9 = 1.0 - v8) : (float v9 = v8 + -1.0), v9 > *a2))
  {
    LODWORD(v97) = 0;
    sub_2158C402C(&v93, "se3 group matrix must be an affine 3x4 transform:\n");
    uint64_t v100 = (char **)&v93;
    char v101 = "expected last row: ";
    long long v102 = (char **)&v93;
    char v103 = "expected last row: ";
    uint64_t v104 = "expected last row: ";
    if (v97 == -1) {
      sub_215742D4C();
    }
    char v85 = (char *)&v100;
    ((void (*)(char **, char ****))off_26C67B060[v97])(&v85, &v93);
    sub_215B27854((uint64_t)v88, (uint64_t)&v93, (float *)&v83);
    uint64_t v100 = (char **)&v93;
    char v101 = "\n";
    long long v102 = (char **)&v93;
    char v103 = "\n";
    uint64_t v104 = "\n";
    if (v97 == -1) {
      sub_215742D4C();
    }
    char v85 = (char *)&v100;
    ((void (*)(char **, char ****))off_26C67B078[v97])(&v85, &v93);
    uint64_t v100 = (char **)&v93;
    char v101 = "  actual last row: ";
    long long v102 = (char **)&v93;
    char v103 = "  actual last row: ";
    uint64_t v104 = "  actual last row: ";
    if (v97 == -1) {
      sub_215742D4C();
    }
    char v85 = (char *)&v100;
    ((void (*)(char **, char ****))off_26C67B060[v97])(&v85, &v93);
    sub_215B27854((uint64_t)v42, (uint64_t)&v93, v84);
    uint64_t v100 = (char **)&v93;
    char v101 = "\n";
    long long v102 = (char **)&v93;
    char v103 = "\n";
    uint64_t v104 = "\n";
    if (v97 == -1) {
      sub_215742D4C();
    }
    char v85 = (char *)&v100;
    ((void (*)(char **, char ****))off_26C67B078[v97])(&v85, &v93);
    uint64_t v100 = (char **)&v93;
    char v101 = "   with tolerance: ";
    long long v102 = (char **)&v93;
    char v103 = "   with tolerance: ";
    uint64_t v104 = "   with tolerance: ";
    if (v97 == -1) {
      sub_215742D4C();
    }
    char v85 = (char *)&v100;
    ((void (*)(char **, char ****))off_26C67B060[v97])(&v85, &v93);
    sub_2157D208C((uint64_t)&v100, (uint64_t)&v93, a2);
    if (v97 == -1) {
      sub_215742D4C();
    }
    uint64_t v100 = &v85;
    ((void (*)(long long *__return_ptr, char ***, char ****))off_26C67B0A8[v97])(&v90, &v100, &v93);
    if (v97 != -1) {
      ((void (*)(char ***, char ****))off_26C67B048[v97])(&v100, &v93);
    }
    if (SHIBYTE(v91) < 0)
    {
      sub_215738B0C(&__dst, (void *)v90, *((unint64_t *)&v90 + 1));
    }
    else
    {
      long long __dst = v90;
      char v64 = v91;
    }
    char v65 = 1;
    LOBYTE(v66) = 0;
    char v70 = 0;
    char v71 = 1;
    sub_215E0A198((uint64_t)&__dst, (uint64_t)&v72);
    *(_OWORD *)a3 = v72;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    if (v82)
    {
      *(unsigned char *)(a3 + 40) = 0;
      int v31 = v75;
      if (v75)
      {
        *(_OWORD *)(a3 + 16) = __p;
        *(void *)(a3 + 32) = v74;
        uint64_t v74 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a3 + 40) = 1;
      }
      *(unsigned char *)(a3 + 48) = 0;
      *(unsigned char *)(a3 + 104) = 0;
      if (v81)
      {
        uint64_t v32 = v78;
        *(void *)(a3 + 64) = v77;
        *(_OWORD *)(a3 + 48) = v76;
        long long v76 = 0uLL;
        *(void *)(a3 + 72) = v32;
        *(_OWORD *)(a3 + 80) = v79;
        *(void *)(a3 + 96) = v80;
        uint64_t v77 = 0;
        long long v79 = 0uLL;
        uint64_t v80 = 0;
        *(unsigned char *)(a3 + 104) = 1;
      }
      *(unsigned char *)(a3 + 112) = 1;
      *(unsigned char *)(a3 + 120) = 0;
      if (v31)
      {
        if (SHIBYTE(v74) < 0) {
          operator delete((void *)__p);
        }
      }
      if (!v71) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)(a3 + 120) = 0;
      if (!v71) {
        goto LABEL_57;
      }
    }
    if (!v70) {
      goto LABEL_53;
    }
    if (v69 < 0)
    {
      operator delete(v68);
      if ((v67 & 0x80000000) == 0)
      {
LABEL_53:
        if (!v65) {
          goto LABEL_57;
        }
        goto LABEL_54;
      }
    }
    else if ((v67 & 0x80000000) == 0)
    {
      goto LABEL_53;
    }
    operator delete(v66);
    if (!v65) {
      goto LABEL_57;
    }
LABEL_54:
    if (SHIBYTE(v64) < 0)
    {
      uint64_t v33 = (void *)__dst;
LABEL_56:
      operator delete(v33);
    }
LABEL_57:
    if ((SHIBYTE(v91) & 0x80000000) == 0) {
      return;
    }
    unsigned int v34 = (void *)v90;
    goto LABEL_93;
  }
  float v10 = sub_215731A04((uint64_t)a1);
  float v62 = v10;
  if (v10 != 1.0)
  {
    float v14 = v10 >= 1.0 ? v10 + -1.0 : 1.0 - v10;
    if (v14 > a2[1])
    {
      LODWORD(v97) = 0;
      sub_215806F18(&v93, "se3 group matrix must have determinant 1\n");
      uint64_t v100 = (char **)&v93;
      char v101 = "actual determinant: ";
      long long v102 = (char **)&v93;
      char v103 = "actual determinant: ";
      uint64_t v104 = "actual determinant: ";
      if (v97 == -1) {
        sub_215742D4C();
      }
      char v85 = (char *)&v100;
      ((void (*)(char **, char ****))off_26C67B0C0[v97])(&v85, &v93);
      sub_2157D208C((uint64_t)v88, (uint64_t)&v93, &v62);
      uint64_t v100 = (char **)&v93;
      char v101 = "\n";
      long long v102 = (char **)&v93;
      char v103 = "\n";
      uint64_t v104 = "\n";
      if (v97 == -1) {
        sub_215742D4C();
      }
      char v85 = (char *)&v100;
      ((void (*)(char **, char ****))off_26C67B078[v97])(&v85, &v93);
      uint64_t v100 = (char **)&v93;
      char v101 = "    with tolerance: ";
      long long v102 = (char **)&v93;
      char v103 = "    with tolerance: ";
      uint64_t v104 = "    with tolerance: ";
      if (v97 == -1) {
        sub_215742D4C();
      }
      char v85 = (char *)&v100;
      ((void (*)(char **, char ****))off_26C67B0C0[v97])(&v85, &v93);
      sub_2157D208C((uint64_t)&v100, (uint64_t)&v93, a2 + 1);
      if (v97 == -1) {
        sub_215742D4C();
      }
      uint64_t v100 = &v85;
      ((void (*)(long long *__return_ptr, char ***, char ****))off_26C67B0A8[v97])(&v90, &v100, &v93);
      if (v97 != -1) {
        ((void (*)(char ***, char ****))off_26C67B048[v97])(&v100, &v93);
      }
      if (SHIBYTE(v91) < 0)
      {
        sub_215738B0C(&v53, (void *)v90, *((unint64_t *)&v90 + 1));
      }
      else
      {
        long long v53 = v90;
        char v54 = v91;
      }
      char v55 = 1;
      LOBYTE(v56) = 0;
      char v60 = 0;
      char v61 = 1;
      sub_215E0A198((uint64_t)&v53, (uint64_t)&v72);
      *(_OWORD *)a3 = v72;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (v82)
      {
        *(unsigned char *)(a3 + 40) = 0;
        int v37 = v75;
        if (v75)
        {
          *(_OWORD *)(a3 + 16) = __p;
          *(void *)(a3 + 32) = v74;
          uint64_t v74 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v81)
        {
          uint64_t v38 = v78;
          *(void *)(a3 + 64) = v77;
          *(_OWORD *)(a3 + 48) = v76;
          long long v76 = 0uLL;
          *(void *)(a3 + 72) = v38;
          *(_OWORD *)(a3 + 80) = v79;
          *(void *)(a3 + 96) = v80;
          uint64_t v77 = 0;
          long long v79 = 0uLL;
          uint64_t v80 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 120) = 0;
        if (v37 && SHIBYTE(v74) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a3 + 120) = 0;
      }
      if (!v61) {
        goto LABEL_57;
      }
      if (v60)
      {
        if (v59 < 0) {
          operator delete(v58);
        }
        if (v57 < 0) {
          operator delete(v56);
        }
      }
      if (!v55 || (SHIBYTE(v54) & 0x80000000) == 0) {
        goto LABEL_57;
      }
      uint64_t v33 = (void *)v53;
      goto LABEL_56;
    }
  }
  v11.i32[0] = a1[1].i32[0];
  float32x2_t v15 = a1[2];
  v12.i32[0] = a1[3].i32[0];
  float32x2_t v16 = a1[4];
  v13.i32[0] = a1[5].i32[0];
  float32x2_t v17 = (float32x2_t)vzip1_s32((int32x2_t)*a1, (int32x2_t)v15);
  float32x2_t v18 = (float32x2_t)vzip2_s32((int32x2_t)*a1, (int32x2_t)v15);
  *(float32x2_t *)v19.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v17, COERCE_FLOAT(*a1)), v18, *a1, 1), (float32x2_t)__PAIR64__(v12.u32[0], v11.u32[0]), v11.f32[0]);
  *(float32x2_t *)&v19.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v16, *a1), (float32x2_t)vdup_lane_s32((int32x2_t)*a1, 1), v16, 1), v11, v13);
  *(float32x2_t *)v20.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v17, v15.f32[0]), v18, v15, 1), (float32x2_t)__PAIR64__(v12.u32[0], v11.u32[0]), v12.f32[0]);
  *(float32x2_t *)&v20.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v16, v15), (float32x2_t)vdup_lane_s32((int32x2_t)v15, 1), v16, 1), v12, v13);
  *(float32x2_t *)v21.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(v17, v16.f32[0]), v18, v16, 1), (float32x2_t)__PAIR64__(v12.u32[0], v11.u32[0]), v13.f32[0]);
  int32x2_t v24 = (int32x2_t)vmla_f32(vmla_lane_f32(vmul_f32(v16, v16), (float32x2_t)vdup_lane_s32((int32x2_t)v16, 1), v16, 1), v13, v13);
  *(int32x2_t *)&v21.u32[2] = v24;
  __int32 v23 = *((_DWORD *)a2 + 2);
  long long v22 = a2 + 2;
  v24.i32[0] = v23;
  float32x4_t v25 = vaddq_f32(v19, (float32x4_t)xmmword_215ED9170);
  int8x16_t v26 = (int8x16_t)vaddq_f32(v20, (float32x4_t)xmmword_215ED9180);
  v25.i32[3] = v26.i32[0];
  int32x4_t v27 = (int32x4_t)vaddq_f32(v21, (float32x4_t)xmmword_215ED9190);
  int32x4_t v28 = (int32x4_t)vabsq_f32(v25);
  v29.i64[0] = vrev64q_s32(v28).u64[0];
  v29.i64[1] = v28.i64[1];
  float32x4_t v30 = (float32x4_t)vdupq_lane_s32(v24, 0);
  if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vcgeq_f32(v30, v29), (int16x8_t)vcgeq_f32(v30, vabsq_f32((float32x4_t)vextq_s8(vextq_s8(v26, v26, 0xCuLL), (int8x16_t)v27, 8uLL))))), 7uLL))) & 1) != 0&& vabsq_f32((float32x4_t)vdupq_laneq_s32(v27, 2)).f32[0] <= *(float *)v24.i32)
  {
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  float32x4_t v39 = v21;
  float32x4_t v40 = v20;
  float32x4_t v41 = v19;
  int v87 = -1;
  char v85 = (char *)operator new(0x48uLL);
  long long v86 = xmmword_215ED91A0;
  strcpy(v85, "se3 group rotation must be orthogonal (expecting identity R^T*R)\n");
  int v87 = 1;
  uint64_t v100 = &v85;
  char v101 = "  actual R^T*R:\n";
  long long v102 = &v85;
  char v103 = "  actual R^T*R:\n";
  uint64_t v104 = "  actual R^T*R:\n";
  BOOL v93 = &v100;
  sub_215B279F8((uint64_t *)&v93, (uint64_t)&v85);
  __int32 v94 = v41.i32[2];
  __int32 v96 = v40.i32[2];
  uint64_t v95 = v40.i64[0];
  __int32 v98 = v39.i32[2];
  BOOL v93 = (char ***)v41.i64[0];
  uint64_t v97 = v39.i64[0];
  *(void *)&long long v90 = 0x300000003;
  DWORD2(v90) = 3;
  uint64_t v91 = &v93;
  int v92 = 0;
  sub_215D25F20((unsigned int *)&v90, v88);
  uint64_t v100 = &v85;
  char v101 = (const char *)v88;
  long long v102 = &v85;
  char v103 = (const char *)v88;
  uint64_t v104 = (const char *)v88;
  if (v87 == -1) {
    sub_215742D4C();
  }
  uint64_t v99 = &v100;
  ((void (*)(char ****, char **))off_26C67B090[v87])(&v99, &v85);
  if (v89 < 0) {
    operator delete(v88[0]);
  }
  uint64_t v100 = &v85;
  char v101 = "\n";
  long long v102 = &v85;
  char v103 = "\n";
  uint64_t v104 = "\n";
  if (v87 == -1) {
    sub_215742D4C();
  }
  BOOL v93 = &v100;
  ((void (*)(char ****, char **))off_26C67B078[v87])(&v93, &v85);
  uint64_t v100 = &v85;
  char v101 = "with tolerance: ";
  long long v102 = &v85;
  char v103 = "with tolerance: ";
  uint64_t v104 = "with tolerance: ";
  if (v87 == -1) {
    sub_215742D4C();
  }
  BOOL v93 = &v100;
  ((void (*)(char ****, char **))off_26C67B0D8[v87])(&v93, &v85);
  sub_2157D208C((uint64_t)&v100, (uint64_t)&v85, v22);
  if (v87 == -1) {
    sub_215742D4C();
  }
  uint64_t v100 = (char **)&v93;
  ((void (*)(void **__return_ptr, char ***, char **))off_26C67B0A8[v87])(v42, &v100, &v85);
  if (v87 != -1) {
    ((void (*)(char ***, char **))off_26C67B048[v87])(&v100, &v85);
  }
  if (SHIBYTE(v43) < 0)
  {
    sub_215738B0C(v44, v42[0], (unint64_t)v42[1]);
  }
  else
  {
    *(_OWORD *)char v44 = *(_OWORD *)v42;
    uint64_t v45 = v43;
  }
  char v46 = 1;
  LOBYTE(v47) = 0;
  char v51 = 0;
  char v52 = 1;
  sub_215E0A198((uint64_t)v44, (uint64_t)&v72);
  *(_OWORD *)a3 = v72;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v82)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v35 = v75;
    if (v75)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v74;
      uint64_t v74 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v81)
    {
      uint64_t v36 = v78;
      *(void *)(a3 + 64) = v77;
      *(_OWORD *)(a3 + 48) = v76;
      long long v76 = 0uLL;
      *(void *)(a3 + 72) = v36;
      *(_OWORD *)(a3 + 80) = v79;
      *(void *)(a3 + 96) = v80;
      uint64_t v77 = 0;
      long long v79 = 0uLL;
      uint64_t v80 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v35 && SHIBYTE(v74) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
  if (v52)
  {
    if (v51)
    {
      if (v50 < 0) {
        operator delete(v49);
      }
      if (v48 < 0) {
        operator delete(v47);
      }
    }
    if (v46 && SHIBYTE(v45) < 0) {
      operator delete(v44[0]);
    }
  }
  if (SHIBYTE(v43) < 0)
  {
    unsigned int v34 = v42[0];
LABEL_93:
    operator delete(v34);
  }
}

void sub_215B22234(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 201) < 0)
  {
    operator delete(*(void **)(v1 - 224));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215B22340(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v6 = *(double *)(a1 + 56);
  v98[0] = *(double *)(a1 + 24);
  v98[1] = v6;
  double v7 = *(double *)(a1 + 88);
  double v8 = *(double *)(a1 + 120);
  v98[2] = v7;
  v98[3] = v8;
  v97[0] = xmmword_215ED9258;
  v97[1] = unk_215ED9268;
  if (v98[0] != 0.0 && fabs(v98[0]) > *(double *)a2
    || v6 != 0.0 && fabs(v6) > *(double *)a2
    || v7 != 0.0 && fabs(v7) > *(double *)a2
    || v8 != 1.0 && (v8 <= 1.0 ? (double v9 = 1.0 - v8) : (double v9 = v8 + -1.0), v9 > *(double *)a2))
  {
    LODWORD(v114) = 0;
    sub_2158C402C(v113, "se3 group matrix must be an affine 3x4 transform:\n");
    v107.i64[0] = (uint64_t)v113;
    v107.i64[1] = (uint64_t)"expected last row: ";
    char v108 = v113;
    v109.i64[0] = (uint64_t)"expected last row: ";
    v109.i64[1] = (uint64_t)"expected last row: ";
    if (v114 == -1) {
      sub_215742D4C();
    }
    uint64_t v99 = (char *)&v107;
    ((void (*)(char **, uint64_t *))off_26C67B060[v114])(&v99, v113);
    sub_215B27EAC((uint64_t)v102, (uint64_t)v113, (double *)v97);
    v107.i64[0] = (uint64_t)v113;
    v107.i64[1] = (uint64_t)"\n";
    char v108 = v113;
    v109.i64[0] = (uint64_t)"\n";
    v109.i64[1] = (uint64_t)"\n";
    if (v114 == -1) {
      sub_215742D4C();
    }
    uint64_t v99 = (char *)&v107;
    ((void (*)(char **, uint64_t *))off_26C67B078[v114])(&v99, v113);
    v107.i64[0] = (uint64_t)v113;
    v107.i64[1] = (uint64_t)"  actual last row: ";
    char v108 = v113;
    v109.i64[0] = (uint64_t)"  actual last row: ";
    v109.i64[1] = (uint64_t)"  actual last row: ";
    if (v114 == -1) {
      sub_215742D4C();
    }
    uint64_t v99 = (char *)&v107;
    ((void (*)(char **, uint64_t *))off_26C67B060[v114])(&v99, v113);
    sub_215B27EAC((uint64_t)v56, (uint64_t)v113, v98);
    v107.i64[0] = (uint64_t)v113;
    v107.i64[1] = (uint64_t)"\n";
    char v108 = v113;
    v109.i64[0] = (uint64_t)"\n";
    v109.i64[1] = (uint64_t)"\n";
    if (v114 == -1) {
      sub_215742D4C();
    }
    uint64_t v99 = (char *)&v107;
    ((void (*)(char **, uint64_t *))off_26C67B078[v114])(&v99, v113);
    v107.i64[0] = (uint64_t)v113;
    v107.i64[1] = (uint64_t)"   with tolerance: ";
    char v108 = v113;
    v109.i64[0] = (uint64_t)"   with tolerance: ";
    v109.i64[1] = (uint64_t)"   with tolerance: ";
    if (v114 == -1) {
      sub_215742D4C();
    }
    uint64_t v99 = (char *)&v107;
    ((void (*)(char **, uint64_t *))off_26C67B060[v114])(&v99, v113);
    sub_2157CFFD4((uint64_t)&v107, (uint64_t)v113, (double *)a2);
    if (v114 == -1) {
      sub_215742D4C();
    }
    v107.i64[0] = (uint64_t)&v99;
    ((void (*)(long long *__return_ptr, int8x16_t *, uint64_t *))off_26C67B0A8[v114])(&v104, &v107, v113);
    if (v114 != -1) {
      ((void (*)(int8x16_t *, uint64_t *))off_26C67B048[v114])(&v107, v113);
    }
    if (SHIBYTE(v105) < 0)
    {
      sub_215738B0C(&__dst, (void *)v104, *((unint64_t *)&v104 + 1));
    }
    else
    {
      long long __dst = v104;
      uint64_t v78 = v105;
    }
    char v79 = 1;
    LOBYTE(v80) = 0;
    char v84 = 0;
    char v85 = 1;
    sub_215E0A198((uint64_t)&__dst, (uint64_t)&v86);
    *(_OWORD *)a3 = v86;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    if (v96)
    {
      *(unsigned char *)(a3 + 40) = 0;
      int v39 = v89;
      if (v89)
      {
        *(_OWORD *)(a3 + 16) = __p;
        *(void *)(a3 + 32) = v88;
        uint64_t v88 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a3 + 40) = 1;
      }
      *(unsigned char *)(a3 + 48) = 0;
      *(unsigned char *)(a3 + 104) = 0;
      if (v95)
      {
        uint64_t v40 = v92;
        *(void *)(a3 + 64) = v91;
        *(_OWORD *)(a3 + 48) = v90;
        long long v90 = 0uLL;
        *(void *)(a3 + 72) = v40;
        *(_OWORD *)(a3 + 80) = v93;
        *(void *)(a3 + 96) = v94;
        uint64_t v91 = 0;
        long long v93 = 0uLL;
        uint64_t v94 = 0;
        *(unsigned char *)(a3 + 104) = 1;
      }
      *(unsigned char *)(a3 + 112) = 1;
      *(unsigned char *)(a3 + 120) = 0;
      if (v39)
      {
        if (SHIBYTE(v88) < 0) {
          operator delete((void *)__p);
        }
      }
      if (!v85) {
        goto LABEL_57;
      }
    }
    else
    {
      *(unsigned char *)(a3 + 120) = 0;
      if (!v85) {
        goto LABEL_57;
      }
    }
    if (!v84) {
      goto LABEL_53;
    }
    if (v83 < 0)
    {
      operator delete(v82);
      if ((v81 & 0x80000000) == 0)
      {
LABEL_53:
        if (!v79) {
          goto LABEL_57;
        }
        goto LABEL_54;
      }
    }
    else if ((v81 & 0x80000000) == 0)
    {
      goto LABEL_53;
    }
    operator delete(v80);
    if (!v79) {
      goto LABEL_57;
    }
LABEL_54:
    if (SHIBYTE(v78) < 0)
    {
      float32x4_t v41 = (void *)__dst;
LABEL_56:
      operator delete(v41);
    }
LABEL_57:
    if ((SHIBYTE(v105) & 0x80000000) == 0) {
      return;
    }
    unsigned __int8 v42 = (void *)v104;
    goto LABEL_93;
  }
  double v10 = sub_215731A88((float64x2_t *)a1);
  double v76 = v10;
  if (v10 != 1.0)
  {
    double v12 = v10 >= 1.0 ? v10 + -1.0 : 1.0 - v10;
    if (v12 > *(double *)(a2 + 8))
    {
      LODWORD(v114) = 0;
      sub_215806F18(v113, "se3 group matrix must have determinant 1\n");
      v107.i64[0] = (uint64_t)v113;
      v107.i64[1] = (uint64_t)"actual determinant: ";
      char v108 = v113;
      v109.i64[0] = (uint64_t)"actual determinant: ";
      v109.i64[1] = (uint64_t)"actual determinant: ";
      if (v114 == -1) {
        sub_215742D4C();
      }
      uint64_t v99 = (char *)&v107;
      ((void (*)(char **, uint64_t *))off_26C67B0C0[v114])(&v99, v113);
      sub_2157CFFD4((uint64_t)v102, (uint64_t)v113, &v76);
      v107.i64[0] = (uint64_t)v113;
      v107.i64[1] = (uint64_t)"\n";
      char v108 = v113;
      v109.i64[0] = (uint64_t)"\n";
      v109.i64[1] = (uint64_t)"\n";
      if (v114 == -1) {
        sub_215742D4C();
      }
      uint64_t v99 = (char *)&v107;
      ((void (*)(char **, uint64_t *))off_26C67B078[v114])(&v99, v113);
      v107.i64[0] = (uint64_t)v113;
      v107.i64[1] = (uint64_t)"    with tolerance: ";
      char v108 = v113;
      v109.i64[0] = (uint64_t)"    with tolerance: ";
      v109.i64[1] = (uint64_t)"    with tolerance: ";
      if (v114 == -1) {
        sub_215742D4C();
      }
      uint64_t v99 = (char *)&v107;
      ((void (*)(char **, uint64_t *))off_26C67B0C0[v114])(&v99, v113);
      sub_2157CFFD4((uint64_t)&v107, (uint64_t)v113, (double *)(a2 + 8));
      if (v114 == -1) {
        sub_215742D4C();
      }
      v107.i64[0] = (uint64_t)&v99;
      ((void (*)(long long *__return_ptr, int8x16_t *, uint64_t *))off_26C67B0A8[v114])(&v104, &v107, v113);
      if (v114 != -1) {
        ((void (*)(int8x16_t *, uint64_t *))off_26C67B048[v114])(&v107, v113);
      }
      if (SHIBYTE(v105) < 0)
      {
        sub_215738B0C(&v67, (void *)v104, *((unint64_t *)&v104 + 1));
      }
      else
      {
        long long v67 = v104;
        char v68 = v105;
      }
      char v69 = 1;
      LOBYTE(v70) = 0;
      char v74 = 0;
      char v75 = 1;
      sub_215E0A198((uint64_t)&v67, (uint64_t)&v86);
      *(_OWORD *)a3 = v86;
      *(unsigned char *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 112) = 0;
      if (v96)
      {
        *(unsigned char *)(a3 + 40) = 0;
        int v48 = v89;
        if (v89)
        {
          *(_OWORD *)(a3 + 16) = __p;
          *(void *)(a3 + 32) = v88;
          uint64_t v88 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a3 + 40) = 1;
        }
        *(unsigned char *)(a3 + 48) = 0;
        *(unsigned char *)(a3 + 104) = 0;
        if (v95)
        {
          uint64_t v49 = v92;
          *(void *)(a3 + 64) = v91;
          *(_OWORD *)(a3 + 48) = v90;
          long long v90 = 0uLL;
          *(void *)(a3 + 72) = v49;
          *(_OWORD *)(a3 + 80) = v93;
          *(void *)(a3 + 96) = v94;
          uint64_t v91 = 0;
          long long v93 = 0uLL;
          uint64_t v94 = 0;
          *(unsigned char *)(a3 + 104) = 1;
        }
        *(unsigned char *)(a3 + 112) = 1;
        *(unsigned char *)(a3 + 120) = 0;
        if (v48 && SHIBYTE(v88) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a3 + 120) = 0;
      }
      if (!v75) {
        goto LABEL_57;
      }
      if (v74)
      {
        if (v73 < 0) {
          operator delete(v72);
        }
        if (v71 < 0) {
          operator delete(v70);
        }
      }
      if (!v69 || (SHIBYTE(v68) & 0x80000000) == 0) {
        goto LABEL_57;
      }
      float32x4_t v41 = (void *)v67;
      goto LABEL_56;
    }
  }
  float64x2_t v13 = *(float64x2_t *)(a1 + 32);
  double v14 = *(double *)(a1 + 80);
  _Q5 = *(float64x2_t *)(a1 + 64);
  float64x2_t v16 = (float64x2_t)vzip1q_s64(*(int64x2_t *)a1, (int64x2_t)v13);
  float64x2_t v31 = (float64x2_t)vzip2q_s64(*(int64x2_t *)a1, (int64x2_t)v13);
  v17.f64[0] = *(float64_t *)(a1 + 16);
  v17.f64[1] = *(float64_t *)(a1 + 48);
  float64x2_t v18 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v16, *(double *)a1), v31, *(float64x2_t *)a1, 1), v17, v17.f64[0]);
  _Q17 = (int64x2_t)vmulq_f64(_Q5, *(float64x2_t *)a1);
  _D1 = *(void *)(a1 + 8);
  __asm { FMLA            D17, D1, V5.D[1] }
  *(double *)_Q17.i64 = *(double *)_Q17.i64 + v14 * v17.f64[0];
  float64x2_t v25 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v16, v13.f64[0]), v31, v13, 1), v17, v17.f64[1]);
  _D1 = *(void *)(a1 + 40);
  __asm { FMLA            D0, D1, V5.D[1] }
  *(double *)v11.i64 = _D0 + v14 * v17.f64[1];
  float64x2_t v28 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v16, _Q5.f64[0]), v31, _Q5, 1), v17, v14);
  _D1 = *(void *)(a1 + 72);
  __asm { FMLA            D0, D1, V5.D[1] }
  v31.f64[0] = _D0 + v14 * v14;
  uint64_t v33 = *(uint64_t *)(a2 + 16);
  uint64_t v32 = (double *)(a2 + 16);
  double v34 = *(double *)&v33;
  int64x2_t v35 = (int64x2_t)vaddq_f64(v25, (float64x2_t)xmmword_215ED91C0);
  int8x16_t v36 = (int8x16_t)vabsq_f64(vaddq_f64(v18, (float64x2_t)xmmword_215ED91B0));
  float64x2_t v37 = (float64x2_t)vdupq_lane_s64(v33, 0);
  if (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgeq_f64(v37, (float64x2_t)vextq_s8(v36, v36, 8uLL)), (int32x4_t)vcgeq_f64(v37, vabsq_f64((float64x2_t)vzip1q_s64(_Q17, v35)))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgeq_f64(v37, vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v35, v11, 8uLL))), (int32x4_t)vcgeq_f64(v37, vabsq_f64(v28))))), 7uLL))))
  {
    __asm { FMOV            V1.2D, #-1.0 }
    if (vabsq_f64(vaddq_f64(v31, _Q1)).f64[0] <= v34)
    {
      *(unsigned char *)(a3 + 120) = 1;
      return;
    }
  }
  float64_t v50 = v31.f64[0];
  uint64_t v51 = v11.i64[0];
  float64x2_t v52 = v28;
  float64x2_t v53 = v25;
  char v54 = (uint64_t *)_Q17.i64[0];
  float64x2_t v55 = v18;
  int v101 = -1;
  uint64_t v99 = (char *)operator new(0x48uLL);
  long long v100 = xmmword_215ED91A0;
  strcpy(v99, "se3 group rotation must be orthogonal (expecting identity R^T*R)\n");
  int v101 = 1;
  v107.i64[0] = (uint64_t)&v99;
  v107.i64[1] = (uint64_t)"  actual R^T*R:\n";
  char v108 = (uint64_t *)&v99;
  v109.i64[0] = (uint64_t)"  actual R^T*R:\n";
  v109.i64[1] = (uint64_t)"  actual R^T*R:\n";
  v113[0] = (uint64_t)&v107;
  sub_215B279F8(v113, (uint64_t)&v99);
  int8x16_t v43 = (int8x16_t)v55;
  int8x16_t v45 = (int8x16_t)v52;
  int8x16_t v44 = (int8x16_t)v53;
  v43.i64[1] = vextq_s8(v43, v43, 8uLL).u64[0];
  int8x16_t v107 = v43;
  v44.i64[1] = vextq_s8(v44, v44, 8uLL).u64[0];
  char v108 = v54;
  uint64_t v110 = v51;
  int8x16_t v109 = v44;
  float64_t v112 = v50;
  v45.i64[1] = vextq_s8(v45, v45, 8uLL).u64[0];
  int8x16_t v111 = v45;
  *(void *)&long long v104 = 0x300000003;
  DWORD2(v104) = 3;
  char v105 = &v107;
  int v106 = 0;
  sub_215D26678((unsigned int *)&v104, v102);
  v113[0] = (uint64_t)&v99;
  v113[1] = (uint64_t)v102;
  v113[2] = (uint64_t)&v99;
  uint64_t v114 = v102;
  int v115 = v102;
  if (v101 == -1) {
    sub_215742D4C();
  }
  long long v116 = v113;
  ((void (*)(uint64_t **, char **))off_26C67B090[v101])(&v116, &v99);
  if (v103 < 0) {
    operator delete(v102[0]);
  }
  v107.i64[0] = (uint64_t)&v99;
  v107.i64[1] = (uint64_t)"\n";
  char v108 = (uint64_t *)&v99;
  v109.i64[0] = (uint64_t)"\n";
  v109.i64[1] = (uint64_t)"\n";
  if (v101 == -1) {
    sub_215742D4C();
  }
  v113[0] = (uint64_t)&v107;
  ((void (*)(uint64_t *, char **))off_26C67B078[v101])(v113, &v99);
  v107.i64[0] = (uint64_t)&v99;
  v107.i64[1] = (uint64_t)"with tolerance: ";
  char v108 = (uint64_t *)&v99;
  v109.i64[0] = (uint64_t)"with tolerance: ";
  v109.i64[1] = (uint64_t)"with tolerance: ";
  if (v101 == -1) {
    sub_215742D4C();
  }
  v113[0] = (uint64_t)&v107;
  ((void (*)(uint64_t *, char **))off_26C67B0D8[v101])(v113, &v99);
  sub_2157CFFD4((uint64_t)&v107, (uint64_t)&v99, v32);
  if (v101 == -1) {
    sub_215742D4C();
  }
  v107.i64[0] = (uint64_t)v113;
  ((void (*)(void **__return_ptr, int8x16_t *, char **))off_26C67B0A8[v101])(v56, &v107, &v99);
  if (v101 != -1) {
    ((void (*)(int8x16_t *, char **))off_26C67B048[v101])(&v107, &v99);
  }
  if (SHIBYTE(v57) < 0)
  {
    sub_215738B0C(v58, v56[0], (unint64_t)v56[1]);
  }
  else
  {
    *(_OWORD *)long long v58 = *(_OWORD *)v56;
    uint64_t v59 = v57;
  }
  char v60 = 1;
  LOBYTE(v61) = 0;
  char v65 = 0;
  char v66 = 1;
  sub_215E0A198((uint64_t)v58, (uint64_t)&v86);
  *(_OWORD *)a3 = v86;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v96)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v46 = v89;
    if (v89)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v88;
      uint64_t v88 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v95)
    {
      uint64_t v47 = v92;
      *(void *)(a3 + 64) = v91;
      *(_OWORD *)(a3 + 48) = v90;
      long long v90 = 0uLL;
      *(void *)(a3 + 72) = v47;
      *(_OWORD *)(a3 + 80) = v93;
      *(void *)(a3 + 96) = v94;
      uint64_t v91 = 0;
      long long v93 = 0uLL;
      uint64_t v94 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v46 && SHIBYTE(v88) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
  if (v66)
  {
    if (v65)
    {
      if (v64 < 0) {
        operator delete(v63);
      }
      if (v62 < 0) {
        operator delete(v61);
      }
    }
    if (v60 && SHIBYTE(v59) < 0) {
      operator delete(v58[0]);
    }
  }
  if (SHIBYTE(v57) < 0)
  {
    unsigned __int8 v42 = v56[0];
LABEL_93:
    operator delete(v42);
  }
}