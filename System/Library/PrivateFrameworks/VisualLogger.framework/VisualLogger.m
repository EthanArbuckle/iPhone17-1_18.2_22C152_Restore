float sub_215731A04(uint64_t a1)
{
  const float *v1;
  int8x16_t v2;
  int8x16_t v3;
  int8x16_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  int8x16_t v11;
  float32x2x2_t v13;

  v1 = (const float *)a1;
  v13 = vld2_f32(v1);
  v1 += 4;
  v2 = *(int8x16_t *)v1;
  v3 = *(int8x16_t *)(a1 + 32);
  v4 = *(int8x16_t *)(a1 + 48);
  v5 = (float32x4_t)vextq_s8(v3, v3, 8uLL);
  v6 = (float32x4_t)vextq_s8(v4, v4, 0xCuLL);
  v7 = (float32x4_t)vextq_s8(v3, v3, 0xCuLL);
  v8 = (float32x4_t)vextq_s8(v4, v4, 8uLL);
  v9 = (float32x4_t)vextq_s8(v4, v4, 4uLL);
  v10 = (float32x4_t)vextq_s8(v3, v3, 4uLL);
  v11 = (int8x16_t)vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v2, v2, 8uLL), vmlaq_f32(vmulq_f32(v6, vnegq_f32(v10)), v9, v7)), vmlaq_f32(vmulq_f32(v8, vnegq_f32(v7)), v6, v5), (float32x4_t)vextq_s8(v2, v2, 4uLL)), vmlaq_f32(vmulq_f32(v9, vnegq_f32(v5)), v8, v10), (float32x4_t)vextq_s8(v2, v2, 0xCuLL));
  v2.i64[0] = vextq_s8(v11, v11, 8uLL).u64[0];
  return vaddv_f32(vsub_f32(vmul_f32(v13.val[0], (float32x2_t)vzip1_s32(*(int32x2_t *)v11.i8, *(int32x2_t *)v2.i8)), vmul_f32(v13.val[1], (float32x2_t)vzip2_s32(*(int32x2_t *)v11.i8, *(int32x2_t *)v2.i8))));
}

double sub_215731A88(float64x2_t *a1)
{
  float64x2_t v1 = a1[2];
  float64x2_t v2 = a1[4];
  float64x2_t v3 = a1[3];
  float64x2_t v4 = a1[5];
  float64x2_t v5 = a1[6];
  float64x2_t v6 = a1[7];
  float64x2_t v7 = (float64x2_t)vextq_s8((int8x16_t)v1, (int8x16_t)v3, 8uLL);
  float64x2_t v8 = (float64x2_t)vextq_s8((int8x16_t)v3, (int8x16_t)v1, 8uLL);
  float64x2_t v9 = (float64x2_t)vextq_s8((int8x16_t)v5, (int8x16_t)v6, 8uLL);
  float64x2_t v10 = (float64x2_t)vextq_s8((int8x16_t)v6, (int8x16_t)v5, 8uLL);
  float64x2_t v11 = (float64x2_t)vextq_s8((int8x16_t)v2, (int8x16_t)v4, 8uLL);
  float64x2_t v12 = (float64x2_t)vextq_s8((int8x16_t)v4, (int8x16_t)v2, 8uLL);
  float64x2_t v13 = vnegq_f64(v12);
  float64x2_t v14 = vnegq_f64(v11);
  int64x2_t v15 = (int64x2_t)vmulq_f64(a1[1], vmlaq_f64(vmlaq_f64(vmulq_f64(v1, vmlaq_f64(vmulq_f64(v9, v13), v10, v11)), vmlaq_f64(vmulq_f64(v5, v14), v9, v2), v8), vmlaq_f64(vmulq_f64(v10, vnegq_f64(v2)), v5, v12), v7));
  int64x2_t v16 = (int64x2_t)vmulq_f64(*a1, vmlaq_f64(vmlaq_f64(vmulq_f64(v3, vmlaq_f64(vmulq_f64(v10, v14), v9, v12)), vmlaq_f64(vmulq_f64(v6, v13), v10, v4), v7), vmlaq_f64(vmulq_f64(v9, vnegq_f64(v4)), v6, v11), v8));
  return vaddvq_f64(vsubq_f64((float64x2_t)vzip1q_s64(v16, v15), (float64x2_t)vzip2q_s64(v16, v15)));
}

void sub_215731B54(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A678, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788A678))
  {
    sub_215731C04();
  }
  *a1 = qword_26788A670;
}

void sub_215731BEC(_Unwind_Exception *a1)
{
}

void sub_215731C04()
{
}

void sub_215731CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215731CD8()
{
}

void sub_215731CF0(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_215731D4C(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_26425A300, MEMORY[0x263F8C060]);
}

void sub_215731D38(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_215731D4C(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void sub_215731D80(void *a1)
{
}

void *sub_215731D94(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2166C44A0](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      float64x2_t v10 = std::locale::use_facet(&v14, MEMORY[0x263F8C108]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_215731F38(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x2166C44B0](v13);
  return a1;
}

void sub_215731ED0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x2166C44B0](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x215731EB0);
}

void sub_215731F24(_Unwind_Exception *a1)
{
}

uint64_t sub_215731F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      size_t v12 = 0;
    }
    else {
      size_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if ((uint64_t)v12 >= 1)
    {
      if (v12 >= 0x7FFFFFFFFFFFFFF8) {
        sub_215731CD8();
      }
      if (v12 >= 0x17)
      {
        uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v12 | 7) != 0x17) {
          uint64_t v14 = v12 | 7;
        }
        uint64_t v15 = v14 + 1;
        float64x2_t v13 = (void **)operator new(v14 + 1);
        __b[1] = (void *)v12;
        int64_t v22 = v15 | 0x8000000000000000;
        __b[0] = v13;
      }
      else
      {
        HIBYTE(v22) = v12;
        float64x2_t v13 = __b;
      }
      memset(v13, __c, v12);
      *((unsigned char *)v13 + v12) = 0;
      if (v22 >= 0) {
        int64x2_t v16 = __b;
      }
      else {
        int64x2_t v16 = (void **)__b[0];
      }
      uint64_t v17 = (*(uint64_t (**)(uint64_t, void **, size_t))(*(void *)v6 + 96))(v6, v16, v12);
      uint64_t v18 = v17;
      if (SHIBYTE(v22) < 0)
      {
        operator delete(__b[0]);
        if (v18 != v12) {
          return 0;
        }
      }
      else if (v17 != v12)
      {
        return 0;
      }
    }
    uint64_t v19 = a4 - a3;
    if (v19 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v19) == v19)
    {
      *(void *)(a5 + 24) = 0;
      return v6;
    }
    return 0;
  }
  return v6;
}

void sub_21573210C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215732128(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  std::logic_error *result = a2;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 56));
    float64x2_t v3 = *(char **)(v2 + 32);
    if (v3)
    {
      do
      {
        float64x2_t v5 = *(char **)v3;
        uint64_t v6 = *((void *)v3 + 5);
        *((void *)v3 + 5) = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
        if (v3[39] < 0) {
          operator delete(*((void **)v3 + 2));
        }
        operator delete(v3);
        float64x2_t v3 = v5;
      }
      while (v5);
    }
    float64x2_t v4 = *(void **)(v2 + 16);
    *(void *)(v2 + 16) = 0;
    if (v4) {
      operator delete(v4);
    }
    sub_21573220C((uint64_t *)(v2 + 8));
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t *sub_21573220C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 56));
    float64x2_t v3 = *(char **)(v2 + 32);
    if (v3)
    {
      do
      {
        uint64_t v6 = *(char **)v3;
        uint64_t v7 = *((void *)v3 + 5);
        *((void *)v3 + 5) = 0;
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        if (v3[39] < 0) {
          operator delete(*((void **)v3 + 2));
        }
        operator delete(v3);
        float64x2_t v3 = v6;
      }
      while (v6);
    }
    float64x2_t v4 = *(void **)(v2 + 16);
    *(void *)(v2 + 16) = 0;
    if (v4) {
      operator delete(v4);
    }
    sub_21573220C(v2 + 8);
    MEMORY[0x2166C4D20](v2, 0x10A0C400EF86968);
  }
  return a1;
}

uint64_t sub_2157322DC(uint64_t result, char a2)
{
  *(void *)result = &unk_26C656360;
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t sub_21573230C(uint64_t a1, char *__format, ...)
{
  va_start(va, __format);
  uint64_t v2 = a1;
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (!*(void *)(a1 + 56)) {
    operator new();
  }
  uint64_t v18 = 0;
  va_copy(__dst, va);
  unsigned int v3 = vsnprintf(__str, 0x200uLL, __format, va);
  size_t v4 = v3;
  if (v3 >= 0x200) {
    operator new();
  }
  uint64_t v5 = *(void *)(v2 + 56);
  if (v3 >= 0x17)
  {
    uint64_t v7 = v2;
    uint64_t v8 = (v3 & 0xFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v8 = v3 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (va_list *)operator new(v8 + 1);
    size_t v16 = v4;
    int64_t v17 = v9 | 0x8000000000000000;
    va_list __dst = (va_list)p_dst;
    uint64_t v2 = v7;
    goto LABEL_10;
  }
  HIBYTE(v17) = v3;
  p_dst = &__dst;
  if (v3) {
LABEL_10:
  }
    memmove(p_dst, __str, v4);
  *((unsigned char *)p_dst + v4) = 0;
  if (v17 >= 0) {
    float64x2_t v10 = &__dst;
  }
  else {
    float64x2_t v10 = (va_list *)__dst;
  }
  if (v17 >= 0) {
    uint64_t v11 = HIBYTE(v17);
  }
  else {
    uint64_t v11 = v16;
  }
  sub_215731D94((void *)(v5 + 16), (uint64_t)v10, v11);
  if (SHIBYTE(v17) < 0) {
    operator delete(__dst);
  }
  uint64_t v12 = v18;
  if (v18)
  {
    float64x2_t v13 = *(void **)v18;
    if (*(void *)v18)
    {
      *(void *)(v18 + 8) = v13;
      operator delete(v13);
    }
    MEMORY[0x2166C4D20](v12, 0x10C402FEFCB83);
  }
  return v2;
}

void sub_2157327A8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157327DC(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215732800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_215732B9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_215732814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17)
{
  if (a16 < 0)
  {
    operator delete(__p);
    sub_215732B9C(&a17);
    _Unwind_Resume(a1);
  }
  sub_215732B9C(&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_2157328B8(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = MEMORY[0x263F8C328] + 64;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  uint64_t v5 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v7 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + *(void *)(v7 - 24)) = v6;
  *(void *)(a1 + 8) = 0;
  uint64_t v8 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  uint64_t v9 = MEMORY[0x263F8C328] + 24;
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[4];
  *(void *)(a1 + 16) = v11;
  *(void *)(v3 + *(void *)(v11 - 24)) = v10;
  uint64_t v12 = v5[1];
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v5[6];
  *(void *)a1 = v9;
  *(void *)(a1 + 128) = v2;
  *(void *)(a1 + 16) = v4;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_215732B68(_Unwind_Exception *a1)
{
  std::iostream::~basic_iostream();
  MEMORY[0x2166C4BF0](v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_215732B9C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)v2;
    if (*(void *)v2)
    {
      *(void *)(v2 + 8) = v3;
      operator delete(v3);
    }
    MEMORY[0x2166C4D20](v2, 0x10C402FEFCB83);
  }
  return a1;
}

void *sub_215732BF4(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t sub_215732CA8(uint64_t a1, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C((unsigned char *)a1, *(void **)a2, *((void *)a2 + 1));
    uint64_t v5 = a1 + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v4;
    uint64_t v5 = a1 + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(long long *)((char *)a2 + 24);
      *(void *)(v5 + 16) = *((void *)a2 + 5);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_215738B0C((unsigned char *)v5, *((void **)a2 + 3), *((void *)a2 + 4));
LABEL_6:
  uint64_t v7 = *((void *)a2 + 6);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  uint64_t v9 = *((void *)a2 + 7);
  uint64_t v8 = *((void *)a2 + 8);
  if (v8 != v9)
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((v8 - v9) >> 4) >= 0x333333333333334) {
      sub_215738AC0();
    }
    uint64_t v10 = (char *)operator new(v8 - v9);
    uint64_t v11 = 0;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = &v10[16 * ((v8 - v9) >> 4)];
    do
    {
      sub_215732CA8(&v10[v11], v9 + v11);
      v11 += 80;
    }
    while (v9 + v11 != v8);
    *(void *)(a1 + 64) = &v10[v11];
  }
  return a1;
}

void sub_215732DE8(_Unwind_Exception *exception_object)
{
  if ((*(char *)(v1 + 23) & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_215732E60(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 64);
    long long v4 = v2;
    if ((void *)v3 != v2)
    {
      do
        uint64_t v3 = sub_215732E60(v3 - 80);
      while ((void *)v3 != v2);
      long long v4 = *(void **)(a1 + 56);
    }
    *(void *)(a1 + 64) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_215732EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)a1 = &unk_26C656390;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 40) = 0;
  operator new();
}

void sub_2157330F4(_Unwind_Exception *a1)
{
  sub_215733368(v2);
  sub_2157333E4((uint64_t *)(v1 + 48));
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*(void **)(v1 + 16));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215733188(uint64_t a1, void *a2, uint64_t a3)
{
  long long v6 = (uint64_t **)(*(void *)(a1 + 80) + 40);
  uint64_t v7 = (std::__shared_weak_count *)a2[1];
  *(void *)&long long v18 = *a2;
  *((void *)&v18 + 1) = v18;
  uint64_t v19 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_21573AF08(v6, &v18);
  char v9 = v8;
  uint64_t v10 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if ((v9 & 1) == 0) {
      return v9 & 1;
    }
  }
  else if ((v8 & 1) == 0)
  {
    return v9 & 1;
  }
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = a2[1];
  *(void *)&long long v17 = *a2;
  *((void *)&v17 + 1) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 72) = sub_215735888(v11, &v17, a3);
  float64x2_t v13 = (std::__shared_weak_count *)*((void *)&v17 + 1);
  if (*((void *)&v17 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  uint64_t v14 = *a2;
  uint64_t v15 = (std::__shared_weak_count *)a2[1];
  *(void *)&long long v18 = v14;
  *((void *)&v18 + 1) = v15;
  if (v15) {
    atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_215735AE0((uint64_t)&v18, a1);
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  return v9 & 1;
}

void sub_21573332C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215733340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215733354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21573580C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215733368(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_2157333E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v2 + 8);
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    MEMORY[0x2166C4D20](v2, 0x30C40EEE2E2AFLL);
  }
  return a1;
}

uint64_t sub_21573347C(uint64_t a1, uint64_t *a2, long long *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v8 = *a2;
  *(void *)a1 = &unk_26C656390;
  *(void *)(a1 + 8) = v8;
  if (*((char *)a3 + 23) < 0)
  {
    sub_215738B0C((unsigned char *)(a1 + 16), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v9 = *a3;
    *(void *)(a1 + 32) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 16) = v9;
  }
  uint64_t v10 = *a4;
  uint64_t v11 = *(void *)(*a4 + 64);
  *(void *)(a1 + 56) = *(void *)(*a4 + 56);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 72) = 0;
  uint64_t v12 = *a5;
  if (!*a5) {
    operator new();
  }
  *a5 = 0;
  *(void *)(a1 + 80) = v12;
  return a1;
}

void sub_2157335A8(_Unwind_Exception *a1)
{
  sub_215733368(v3);
  sub_2157333E4(v4);
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157335D4(uint64_t a1)
{
  *(void *)a1 = &unk_26C656390;
  sub_215738D04((uint64_t *)(a1 + 80), 0);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = 0;
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = 0;
    if (!v3) {
      goto LABEL_8;
    }
  }
  long long v4 = *(std::__shared_weak_count **)(v3 + 8);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  MEMORY[0x2166C4D20](v3, 0x30C40EEE2E2AFLL);
LABEL_8:
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_215733710(uint64_t a1)
{
  sub_2157335D4(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215733748(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v6 = *a1;
  uint64_t v7 = (std::mutex *)(*a1 + 7);
  std::mutex::lock(v7);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  if ((v8 & 0x80u) == 0) {
    long long v9 = (unsigned char *)a2;
  }
  else {
    long long v9 = *(unsigned char **)a2;
  }
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a2 + 8);
  }
  if (!v8) {
    goto LABEL_15;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v6 + 2;
  while (v9[v10] == 46)
  {
    if (v8 == ++v10) {
      goto LABEL_15;
    }
  }
  if (v10 == -1)
  {
LABEL_15:
    *a3 = **a1;
  }
  else
  {
    if (sub_2157340B8((void *)a2))
    {
      if (*(char *)(a2 + 23) < 0)
      {
        sub_215738B0C(&__dst, *(void **)a2, *(void *)(a2 + 8));
      }
      else
      {
        long long __dst = *(_OWORD *)a2;
        uint64_t v14 = *(void *)(a2 + 16);
      }
    }
    else
    {
      sub_215734350(a2, &__dst);
    }
    uint64_t v12 = sub_21573B6B0(v11, (uint64_t)&__dst);
    if (!v12) {
      operator new();
    }
    *a3 = v12[5];
    if (SHIBYTE(v14) < 0) {
      operator delete((void *)__dst);
    }
  }
  std::mutex::unlock(v7);
}

void sub_215733F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33)
{
  (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
  sub_215738D04((uint64_t *)(v36 - 136), 0);
  sub_2157354F0((uint64_t)&a33);
  MEMORY[0x2166C4D20](v34, 0x60C4044C4A2DFLL);
  if (*(char *)(v36 - 89) < 0) {
    operator delete(*(void **)(v36 - 112));
  }
  std::mutex::unlock(v33);
  _Unwind_Resume(a1);
}

BOOL sub_2157340B8(void *__s)
{
  uint64_t v2 = *((unsigned __int8 *)__s + 23);
  if (*((char *)__s + 23) < 0)
  {
    uint64_t v4 = __s[1];
    if (v4)
    {
      uint64_t v3 = (void *)*__s;
      goto LABEL_6;
    }
    return 1;
  }
  if (!*((unsigned char *)__s + 23)) {
    return 1;
  }
  uint64_t v3 = __s;
  uint64_t v4 = *((unsigned __int8 *)__s + 23);
LABEL_6:
  uint64_t v5 = 0;
  while (*((unsigned char *)v3 + v5) != 46)
  {
    if (v4 == ++v5) {
      goto LABEL_12;
    }
  }
  if (v4 != v5 && !v5) {
    return 0;
  }
LABEL_12:
  uint64_t v7 = (void *)*__s;
  uint64_t v6 = __s[1];
  if ((v2 & 0x80u) == 0) {
    uint64_t v8 = __s;
  }
  else {
    uint64_t v8 = (void *)*__s;
  }
  if ((v2 & 0x80u) == 0) {
    uint64_t v9 = *((unsigned __int8 *)__s + 23);
  }
  else {
    uint64_t v9 = __s[1];
  }
  uint64_t v10 = (char *)v8 - 1;
  while (v9)
  {
    int v11 = v10[v9--];
    if (v11 == 46)
    {
      if ((v2 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
  }
  uint64_t v9 = -1;
  if ((v2 & 0x80) == 0)
  {
LABEL_22:
    uint64_t v7 = __s;
    uint64_t v6 = *((unsigned __int8 *)__s + 23);
    if (v9 == v2 - 1) {
      return 0;
    }
    goto LABEL_27;
  }
LABEL_25:
  if (v9 == v6 - 1) {
    return 0;
  }
LABEL_27:
  if (v6 >= 2)
  {
    uint64_t v12 = (char *)v7 + v6;
    float64x2_t v13 = v7;
    do
    {
      uint64_t v14 = (char *)memchr(v13, 46, v6 - 1);
      if (!v14) {
        break;
      }
      if (*(_WORD *)v14 == 11822)
      {
        if (v14 == v12 || v14 - (char *)v7 == -1) {
          break;
        }
        return 0;
      }
      float64x2_t v13 = v14 + 1;
      uint64_t v6 = v12 - (unsigned char *)v13;
    }
    while (v12 - (unsigned char *)v13 >= 2);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788A688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(qword_26788A688))
  {
    sub_215732BF4(&qword_26788A768, "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.");
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788A768, &dword_21572C000);
    __cxa_guard_release(qword_26788A688);
  }
  int v16 = *((char *)__s + 23);
  if (v16 >= 0) {
    long long v17 = (char *)__s;
  }
  else {
    long long v17 = (char *)*__s;
  }
  if (v16 >= 0) {
    uint64_t v18 = *((unsigned __int8 *)__s + 23);
  }
  else {
    uint64_t v18 = __s[1];
  }
  if (byte_26788A77F >= 0) {
    uint64_t v19 = &qword_26788A768;
  }
  else {
    uint64_t v19 = (uint64_t *)qword_26788A768;
  }
  if (byte_26788A77F >= 0) {
    size_t v20 = byte_26788A77F;
  }
  else {
    size_t v20 = qword_26788A770;
  }
  if (!v18) {
    return 1;
  }
  v21 = v17;
  if (v20)
  {
    while (memchr(v19, *v21, v20))
    {
      ++v21;
      if (!--v18) {
        return 1;
      }
    }
  }
  return v21 - v17 == -1;
}

void sub_215734338(_Unwind_Exception *a1)
{
}

void sub_215734350(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_2157340B8((void *)a1))
  {
    if (*(char *)(a1 + 23) < 0)
    {
      uint64_t v4 = *(void **)a1;
      unint64_t v5 = *(void *)(a1 + 8);
      sub_215738B0C(a2, v4, v5);
    }
    else
    {
      *(_OWORD *)a2 = *(_OWORD *)a1;
      a2[2] = *(void *)(a1 + 16);
    }
    return;
  }
  if (*(char *)(a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a1;
    uint64_t v76 = *(void *)(a1 + 16);
  }
  uint64_t v6 = 1;
LABEL_11:
  uint64_t v7 = HIBYTE(v76);
  uint64_t v8 = *((void *)&__dst + 1);
  uint64_t v9 = (long long *)__dst;
  if (v76 >= 0) {
    uint64_t v10 = HIBYTE(v76);
  }
  else {
    uint64_t v10 = *((void *)&__dst + 1);
  }
  if (v76 >= 0) {
    p_dst = &__dst;
  }
  else {
    p_dst = (long long *)__dst;
  }
  if (v10 < 2)
  {
    uint64_t v6 = v10;
  }
  else
  {
    uint64_t v12 = (char *)p_dst + v10;
    uint64_t v13 = v10;
    uint64_t v14 = p_dst;
    do
    {
      uint64_t v15 = (char *)memchr(v14, 46, v13 - 1);
      if (!v15) {
        break;
      }
      if (*(_WORD *)v15 == 11822)
      {
        if (v15 == v12) {
          break;
        }
        unint64_t v16 = v15 - (char *)p_dst;
        if (v15 - (char *)p_dst == -1) {
          break;
        }
        if (v10 < v16) {
          sub_215739EF4();
        }
        sub_215739F0C(&__dst, v16, 1uLL);
        goto LABEL_11;
      }
      uint64_t v14 = (long long *)(v15 + 1);
      uint64_t v13 = v12 - (char *)v14;
    }
    while (v12 - (char *)v14 >= 2);
  }
  if (v6)
  {
    uint64_t v17 = 0;
    while (*((unsigned char *)p_dst + v17) != 46)
    {
      if (v10 == ++v17) {
        goto LABEL_36;
      }
    }
    if (v10 != v17 && !v17)
    {
      sub_215739F0C(&__dst, 0, 1uLL);
      uint64_t v7 = HIBYTE(v76);
      uint64_t v8 = *((void *)&__dst + 1);
      uint64_t v9 = (long long *)__dst;
    }
  }
LABEL_36:
  if ((v7 & 0x80u) == 0) {
    uint64_t v18 = &__dst;
  }
  else {
    uint64_t v18 = v9;
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v19 = v7;
  }
  else {
    uint64_t v19 = v8;
  }
  size_t v20 = (char *)v18 - 1;
  do
  {
    if (!v19)
    {
      uint64_t v19 = -1;
      if ((v7 & 0x80) != 0) {
        goto LABEL_49;
      }
LABEL_46:
      uint64_t v8 = v7;
      if (v19 == v7 - 1)
      {
LABEL_50:
        sub_215739F0C(&__dst, v8, 1uLL);
        LODWORD(v7) = HIBYTE(v76);
        if (SHIBYTE(v76) < 0) {
          goto LABEL_53;
        }
      }
      if (!v7) {
        goto LABEL_59;
      }
      uint64_t v22 = v7;
      v23 = &__dst;
LABEL_55:
      v24 = (long long *)((char *)v23 + v22);
      uint64_t v25 = v22 - 1;
      while (!sub_21573A034(*(char *)v23))
      {
        v23 = (long long *)((char *)v23 + 1);
        --v25;
        if (v23 == v24) {
          goto LABEL_68;
        }
      }
      if (v23 == v24 || (long long *)((char *)v23 + 1) == v24)
      {
        v24 = v23;
      }
      else
      {
        uint64_t v26 = 1;
        v24 = v23;
        do
        {
          if (!sub_21573A034(*((char *)v23 + v26)))
          {
            *(unsigned char *)v24 = *((unsigned char *)v23 + v26);
            v24 = (long long *)((char *)v24 + 1);
          }
          ++v26;
          --v25;
        }
        while (v25);
      }
LABEL_68:
      unint64_t v27 = HIBYTE(v76);
      v28 = (long long *)__dst;
      v29 = (char *)(__dst + *((void *)&__dst + 1));
      v30 = &__dst;
      if (v76 < 0)
      {
        unint64_t v27 = *((void *)&__dst + 1);
        v30 = (long long *)__dst;
      }
      else
      {
        v29 = (char *)&__dst + HIBYTE(v76);
      }
      uint64_t v31 = (char *)v24 - (char *)v30;
      if (v27 < (char *)v24 - (char *)v30) {
        sub_215739EF4();
      }
      if (v29 - (char *)v24 == -1)
      {
        if (SHIBYTE(v76) < 0)
        {
          *((void *)&__dst + 1) = (char *)v24 - (char *)v30;
        }
        else
        {
          HIBYTE(v76) = v31 & 0x7F;
          v28 = &__dst;
        }
        *((unsigned char *)v28 + v31) = 0;
      }
      else
      {
        sub_215739F0C(&__dst, v31, v29 - (char *)v24);
      }
      v72 = 0;
      v73 = 0;
      unint64_t v74 = 0;
      sub_215734C64((uint64_t)v60, &__dst, 24);
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v59 = 0;
      while (1)
      {
        v33 = sub_215734FB4(v60, (uint64_t)__p, 0x2Eu);
        if ((*((unsigned char *)v33 + *(void *)(*v33 - 24) + 32) & 5) != 0) {
          break;
        }
        uint64_t v34 = v73;
        if ((unint64_t)v73 < v74)
        {
          if (SHIBYTE(v59) < 0)
          {
            sub_215738B0C(v73, __p[0], (unint64_t)__p[1]);
          }
          else
          {
            long long v32 = *(_OWORD *)__p;
            *((void *)v73 + 2) = v59;
            *(_OWORD *)uint64_t v34 = v32;
          }
          v73 = v34 + 24;
        }
        else
        {
          v73 = sub_215738E60(&v72, (uint64_t)__p);
        }
      }
      if (SHIBYTE(v59) < 0) {
        operator delete(__p[0]);
      }
      v60[0] = *MEMORY[0x263F8C2B8];
      uint64_t v35 = v60[0];
      uint64_t v36 = *(void *)(MEMORY[0x263F8C2B8] + 72);
      uint64_t v37 = *(void *)(MEMORY[0x263F8C2B8] + 64);
      *(void *)((char *)v60 + *(void *)(v60[0] - 24)) = v37;
      uint64_t v38 = v36;
      uint64_t v61 = v36;
      uint64_t v62 = MEMORY[0x263F8C318] + 16;
      if (v68 < 0) {
        operator delete(v67);
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x2166C4BF0](v71);
      uint64_t v39 = HIBYTE(v76);
      if (v76 < 0) {
        uint64_t v39 = *((void *)&__dst + 1);
      }
      if (!v39)
      {
        *((unsigned char *)a2 + 23) = 1;
        *(_WORD *)a2 = 95;
        v43 = v72;
        if (!v72) {
          goto LABEL_150;
        }
        goto LABEL_143;
      }
      sub_2157328B8((uint64_t)v60);
      v40 = v72;
      v41 = v73;
      if (v72 != v73)
      {
        if (v72[23] < 0)
        {
          sub_215738B0C(__p, *(void **)v72, *((void *)v72 + 1));
        }
        else
        {
          long long v42 = *(_OWORD *)v72;
          uint64_t v59 = *((void *)v72 + 2);
          *(_OWORD *)__p = v42;
        }
        if (v59 >= 0) {
          uint64_t v44 = HIBYTE(v59);
        }
        else {
          uint64_t v44 = (uint64_t)__p[1];
        }
        if (v44)
        {
          if (v59 >= 0) {
            v45 = __p;
          }
          else {
            v45 = (void **)__p[0];
          }
          sub_215731D94(&v61, (uint64_t)v45, v44);
        }
        else
        {
          sub_215731D94(&v61, (uint64_t)"_", 1);
        }
        if (SHIBYTE(v59) < 0) {
          operator delete(__p[0]);
        }
        for (i = v40 + 24; i != v41; i += 24)
        {
          if (i[23] < 0)
          {
            sub_215738B0C(__p, *(void **)i, *((void *)i + 1));
          }
          else
          {
            long long v47 = *(_OWORD *)i;
            uint64_t v59 = *((void *)i + 2);
            *(_OWORD *)__p = v47;
          }
          sub_215731D94(&v61, (uint64_t)".", 1);
          if (v59 >= 0) {
            uint64_t v48 = HIBYTE(v59);
          }
          else {
            uint64_t v48 = (uint64_t)__p[1];
          }
          if (v48)
          {
            if (v59 >= 0) {
              v49 = __p;
            }
            else {
              v49 = (void **)__p[0];
            }
            sub_215731D94(&v61, (uint64_t)v49, v48);
          }
          else
          {
            sub_215731D94(&v61, (uint64_t)"_", 1);
          }
          if (SHIBYTE(v59) < 0) {
            operator delete(__p[0]);
          }
        }
      }
      if ((v70 & 0x10) != 0)
      {
        unint64_t v51 = v69;
        if (v69 < v66)
        {
          unint64_t v69 = v66;
          unint64_t v51 = v66;
        }
        v52 = v65;
        size_t v50 = v51 - (void)v65;
        if (v51 - (unint64_t)v65 >= 0x7FFFFFFFFFFFFFF8) {
          goto LABEL_154;
        }
      }
      else
      {
        if ((v70 & 8) == 0)
        {
          size_t v50 = 0;
          *((unsigned char *)a2 + 23) = 0;
          goto LABEL_140;
        }
        v52 = v63;
        size_t v50 = v64 - (void)v63;
        if ((unint64_t)(v64 - (void)v63) >= 0x7FFFFFFFFFFFFFF8) {
LABEL_154:
        }
          sub_215731CD8();
      }
      if (v50 >= 0x17)
      {
        uint64_t v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v50 | 7) != 0x17) {
          uint64_t v53 = v50 | 7;
        }
        uint64_t v54 = v53 + 1;
        v55 = operator new(v53 + 1);
        a2[1] = v50;
        a2[2] = v54 | 0x8000000000000000;
        *a2 = v55;
        a2 = v55;
      }
      else
      {
        *((unsigned char *)a2 + 23) = v50;
        if (!v50)
        {
LABEL_140:
          *((unsigned char *)a2 + v50) = 0;
          v60[0] = v35;
          *(void *)((char *)v60 + *(void *)(v35 - 24)) = v37;
          uint64_t v61 = v38;
          uint64_t v62 = MEMORY[0x263F8C318] + 16;
          if (v68 < 0) {
            operator delete(v67);
          }
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x2166C4BF0](v71);
          v43 = v72;
          if (!v72)
          {
LABEL_150:
            if (v76 < 0) {
              goto LABEL_151;
            }
            return;
          }
LABEL_143:
          v56 = v73;
          v57 = v43;
          if (v73 != v43)
          {
            do
            {
              if (*(v56 - 1) < 0) {
                operator delete(*((void **)v56 - 3));
              }
              v56 -= 24;
            }
            while (v56 != v43);
            v57 = v72;
          }
          v73 = v43;
          operator delete(v57);
          goto LABEL_150;
        }
      }
      memmove(a2, v52, v50);
      goto LABEL_140;
    }
    int v21 = v20[v19--];
  }
  while (v21 != 46);
  if ((v7 & 0x80) == 0) {
    goto LABEL_46;
  }
LABEL_49:
  if (v19 == v8 - 1) {
    goto LABEL_50;
  }
LABEL_53:
  uint64_t v22 = *((void *)&__dst + 1);
  if (*((void *)&__dst + 1))
  {
    v23 = (long long *)__dst;
    goto LABEL_55;
  }
LABEL_59:
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  if ((v7 & 0x80) != 0) {
LABEL_151:
  }
    operator delete((void *)__dst);
}

void sub_215734BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  sub_2157351A4((uint64_t)&a16);
  sub_2157352DC((void **)(v16 - 136));
  if (*(char *)(v16 - 89) < 0) {
    operator delete(*(void **)(v16 - 112));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215734C64(uint64_t a1, long long *a2, int a3)
{
  uint64_t v6 = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  uint64_t v7 = a1 + 16;
  uint64_t v8 = MEMORY[0x263F8C328] + 64;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  uint64_t v9 = a1 + 24;
  uint64_t v10 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v11 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v12 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v11;
  *(void *)(a1 + 8) = 0;
  uint64_t v13 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v13, (void *)(a1 + 24));
  uint64_t v14 = MEMORY[0x263F8C328] + 24;
  v13[1].__vftable = 0;
  v13[1].__fmtflags_ = -1;
  uint64_t v15 = v10[5];
  uint64_t v16 = v10[4];
  *(void *)(a1 + 16) = v16;
  *(void *)(v7 + *(void *)(v16 - 24)) = v15;
  uint64_t v17 = v10[1];
  *(void *)a1 = v17;
  *(void *)(a1 + *(void *)(v17 - 24)) = v10[6];
  *(void *)a1 = v14;
  *(void *)(a1 + 128) = v6;
  *(void *)(a1 + 16) = v8;
  std::streambuf::basic_streambuf();
  uint64_t v18 = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 24) = v18;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = a3;
  if ((long long *)(a1 + 88) != a2)
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_21573AB08((void *)(a1 + 88), *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v19 = *a2;
      *(void *)(a1 + 104) = *((void *)a2 + 2);
      *(_OWORD *)(a1 + 88) = v19;
    }
  }
  sub_21573B8E0(v9);
  return a1;
}

void sub_215734F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void *sub_215734FB4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  MEMORY[0x2166C43A0](&v11, a1, 1);
  if (!v11) {
    return a1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    **(unsigned char **)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
  }
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void **)((char *)a1 + *(void *)(*a1 - 24) + 40);
    uint64_t v8 = (unsigned char *)v7[3];
    if (v8 != (unsigned char *)v7[4])
    {
      v7[3] = v8 + 1;
      LOBYTE(v7) = *v8;
      goto LABEL_9;
    }
    LODWORD(v7) = (*(uint64_t (**)(void *))(*v7 + 80))(v7);
    if (v7 == -1) {
      break;
    }
LABEL_9:
    if (v7 == a3)
    {
      int v9 = 0;
      goto LABEL_17;
    }
    std::string::push_back((std::string *)a2, (std::string::value_type)v7);
    --v6;
    if (*(char *)(a2 + 23) < 0 && *(void *)(a2 + 8) == 0x7FFFFFFFFFFFFFF7)
    {
      int v9 = 4;
      goto LABEL_17;
    }
  }
  if (v6) {
    int v9 = 2;
  }
  else {
    int v9 = 6;
  }
LABEL_17:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | v9);
  return a1;
}

void sub_215735114(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = *v1;
  *(_DWORD *)((char *)v1 + *(void *)(*v1 - 24) + 32) |= 1u;
  if ((*((unsigned char *)v1 + *(void *)(v2 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x2157350D4);
  }
  __cxa_rethrow();
}

void sub_215735190(_Unwind_Exception *a1)
{
}

uint64_t sub_2157351A4(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2B8];
  uint64_t v3 = *MEMORY[0x263F8C2B8];
  *(void *)a1 = *MEMORY[0x263F8C2B8];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x2166C4BF0](a1 + 128);
  return a1;
}

void **sub_2157352DC(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*(v3 - 3));
        }
        v3 -= 3;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_215735350(char *a1, char **a2)
{
  int v2 = *((char *)a2 + 23);
  if (v2 >= 0) {
    unint64_t v3 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    unint64_t v3 = (unint64_t)a2[1];
  }
  unint64_t v4 = a1[23];
  if (a1[23] < 0)
  {
    unint64_t v5 = *((void *)a1 + 1);
    if (v3 <= v5) {
      return 0;
    }
  }
  else
  {
    unint64_t v5 = a1[23];
    if (v3 <= v4) {
      return 0;
    }
  }
  if (!v5) {
    return 1;
  }
  if (v2 >= 0) {
    uint64_t v7 = (char *)a2;
  }
  else {
    uint64_t v7 = *a2;
  }
  if ((v4 & 0x80u) == 0) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = *(char **)a1;
  }
  if ((v4 & 0x80u) == 0) {
    int64_t v9 = a1[23];
  }
  else {
    int64_t v9 = *((void *)a1 + 1);
  }
  if (v9)
  {
    if ((uint64_t)v3 >= v9)
    {
      uint64_t v10 = &v7[v3];
      int v11 = *v8;
      int64_t v12 = v3;
      uint64_t v13 = v7;
      while (1)
      {
        int64_t v14 = v12 - v9;
        if (v14 == -1) {
          break;
        }
        uint64_t result = (uint64_t)memchr(v13, v11, v14 + 1);
        if (!result) {
          return result;
        }
        uint64_t v15 = result;
        uint64_t result = memcmp((const void *)result, v8, v9);
        if (!result)
        {
          if ((char *)v15 == v10 || (char *)v15 != v7) {
            return result;
          }
          goto LABEL_30;
        }
        uint64_t result = 0;
        uint64_t v13 = (char *)(v15 + 1);
        int64_t v12 = (int64_t)&v10[-v15 - 1];
        if (v12 < v9) {
          return result;
        }
      }
    }
    return 0;
  }
LABEL_30:
  if (v7[v9] != 46 || v3 <= v9 + 1) {
    return 0;
  }
  while (v7[v9 + 1] == 46)
  {
    uint64_t result = 0;
    if (v3 - 1 == ++v9) {
      return result;
    }
  }
  return v9 != -2;
}

uint64_t sub_2157354F0(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      operator delete(v2);
      int v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_21573553C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

BOOL sub_2157355B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (std::mutex *)(*(void *)(a2 + 80) + 64);
  std::mutex::lock(v4);
  unint64_t v5 = (std::mutex *)(a1 + 64);
  uint64_t v17 = (std::mutex *)(a1 + 64);
  std::mutex::lock((std::mutex *)(a1 + 64));
  uint64_t v6 = *(void *)(a2 + 80);
  uint64_t v7 = *(void **)(v6 + 128);
  uint64_t v8 = (void *)(v6 + 136);
  if (v7 != (void *)(v6 + 136))
  {
    while (1)
    {
      uint64_t v9 = v7[6];
      *(void *)&long long v16 = v7[5];
      *((void *)&v16 + 1) = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      sub_215735888(a1, &v16, (uint64_t)&v17);
      uint64_t v10 = (std::__shared_weak_count *)*((void *)&v16 + 1);
      if (*((void *)&v16 + 1)
        && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v16 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
        int v11 = (void *)v7[1];
        if (!v11)
        {
          do
          {
LABEL_12:
            int64_t v12 = (void *)v7[2];
            BOOL v13 = *v12 == (void)v7;
            uint64_t v7 = v12;
          }
          while (!v13);
          goto LABEL_3;
        }
      }
      else
      {
        int v11 = (void *)v7[1];
        if (!v11) {
          goto LABEL_12;
        }
      }
      do
      {
        int64_t v12 = v11;
        int v11 = (void *)*v11;
      }
      while (v11);
LABEL_3:
      uint64_t v7 = v12;
      if (v12 == v8)
      {
        unint64_t v5 = v17;
        break;
      }
    }
  }
  BOOL v14 = *(void *)(a1 + 152) != 0;
  std::mutex::unlock(v5);
  std::mutex::unlock(v4);
  return v14;
}

void sub_215735704(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215735718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::mutex *a12)
{
  sub_215733368((uint64_t)&a10);
  std::mutex::unlock(a12);
  std::mutex::unlock(v12);
  _Unwind_Resume(a1);
}

uint64_t sub_21573573C(uint64_t a1, void *a2)
{
  uint64_t v8 = (std::mutex *)(*(void *)(a1 + 80) + 64);
  std::mutex::lock(v8);
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  v7[0] = *a2;
  v7[1] = v4;
  *a2 = 0;
  a2[1] = 0;
  uint64_t v5 = sub_215733188(a1, v7, (uint64_t)&v8);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  std::mutex::unlock(v8);
  return v5;
}

void sub_2157357F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::mutex *a12)
{
}

uint64_t sub_21573580C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215735888(uint64_t a1, long long *a2, uint64_t a3)
{
  if (a3)
  {
    long long v5 = *a2;
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    uint64_t v18 = v5;
    long long v19 = v5;
    uint64_t v6 = sub_21573AF08((uint64_t **)(a1 + 128), (long long *)&v18);
    char v8 = v7;
    uint64_t v9 = (std::__shared_weak_count *)*((void *)&v19 + 1);
    if (*((void *)&v19 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v19 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
    if (v8 && *((unsigned char *)v6[4] + 8)) {
      ++*(void *)(a1 + 152);
    }
    uint64_t v10 = *(void *)(a1 + 152);
  }
  else
  {
    int v11 = (std::mutex *)(a1 + 64);
    std::mutex::lock((std::mutex *)(a1 + 64));
    long long v12 = *a2;
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    uint64_t v18 = v12;
    long long v19 = v12;
    BOOL v13 = sub_21573AF08((uint64_t **)(a1 + 128), (long long *)&v18);
    char v15 = v14;
    long long v16 = (std::__shared_weak_count *)*((void *)&v19 + 1);
    if (*((void *)&v19 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v19 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    if (v15 && *((unsigned char *)v13[4] + 8)) {
      ++*(void *)(a1 + 152);
    }
    uint64_t v10 = *(void *)(a1 + 152);
    std::mutex::unlock(v11);
  }
  return v10 != 0;
}

void sub_215735AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_21573580C((uint64_t)va1);
  sub_215733368((uint64_t)va);
  std::mutex::unlock(v4);
  _Unwind_Resume(a1);
}

void sub_215735AC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_21573580C((uint64_t)va1);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215735AE0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(a2 + 80) + 16);
  if (v2)
  {
    uint64_t v3 = (void *)result;
    do
    {
      uint64_t v4 = v2[2];
      uint64_t v5 = v3[1];
      uint64_t v6 = *(void *)(v4 + 80);
      *(void *)&long long v8 = *v3;
      *((void *)&v8 + 1) = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      *(unsigned char *)(v4 + 72) = sub_215735888(v6, &v8, 0);
      uint64_t v7 = (std::__shared_weak_count *)*((void *)&v8 + 1);
      if (*((void *)&v8 + 1))
      {
        if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v8 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      uint64_t result = sub_215735AE0(v3, v2[2]);
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return result;
}

void sub_215735BB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_215E1AEAC(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_215735BD0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (std::mutex *)(*(void *)(a1 + 8) + 56);
  std::mutex::lock(v4);
  uint64_t v7 = (std::mutex *)(*(void *)(a1 + 80) + 64);
  std::mutex::lock(v7);
  uint64_t v5 = sub_215735C7C(a1, a2, (uint64_t)&v7);
  std::mutex::unlock(v7);
  std::mutex::unlock(v4);
  return v5;
}

void sub_215735C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10)
{
  std::mutex::unlock(a10);
  std::mutex::unlock(v10);
  _Unwind_Resume(a1);
}

void sub_215735C68(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_215735C7C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 80);
  uint64_t result = (uint64_t *)v4[6];
  if (result)
  {
    long long v8 = v4 + 6;
    uint64_t v9 = (void *)v4[6];
    do
    {
      unint64_t v10 = v9[4];
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        long long v12 = v9;
      }
      else {
        long long v12 = v9 + 1;
      }
      if (v11) {
        long long v8 = v9;
      }
      uint64_t v9 = (void *)*v12;
    }
    while (*v12);
    if (v8 == v4 + 6)
    {
      return 0;
    }
    else if (v8[4] <= a2)
    {
      BOOL v13 = (uint64_t *)v8[1];
      if (v13)
      {
        do
        {
          char v14 = v13;
          BOOL v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
      else
      {
        char v15 = v8;
        do
        {
          char v14 = (uint64_t *)v15[2];
          BOOL v16 = *v14 == (void)v15;
          char v15 = v14;
        }
        while (!v16);
      }
      if ((uint64_t *)v4[5] == v8) {
        v4[5] = v14;
      }
      --v4[7];
      sub_21573B1FC(result, v8);
      uint64_t v17 = (std::__shared_weak_count *)v8[6];
      if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
      operator delete(v8);
      uint64_t v18 = *(void *)(a1 + 80);
      if (a3)
      {
        sub_2157390A0(*(void **)(a1 + 80), a2);
        uint64_t v19 = *(void *)(v18 + 152);
      }
      else
      {
        size_t v20 = (std::mutex *)(v18 + 64);
        std::mutex::lock((std::mutex *)(v18 + 64));
        sub_2157390A0((void *)v18, a2);
        uint64_t v19 = *(void *)(v18 + 152);
        std::mutex::unlock(v20);
      }
      *(unsigned char *)(a1 + 72) = v19 != 0;
      unint64_t v21 = a2;
      sub_215735E54((uint64_t)&v21, a1);
      return (uint64_t *)1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_215735E40(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215735E54(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(a2 + 80) + 16);
  if (v2)
  {
    uint64_t v3 = (unint64_t *)result;
    do
    {
      uint64_t v4 = v2[2];
      unint64_t v5 = *v3;
      uint64_t v6 = *(void *)(v4 + 80);
      uint64_t v7 = (std::mutex *)(v6 + 64);
      std::mutex::lock((std::mutex *)(v6 + 64));
      sub_2157390A0((void *)v6, v5);
      uint64_t v8 = *(void *)(v6 + 152);
      std::mutex::unlock(v7);
      *(unsigned char *)(v4 + 72) = v8 != 0;
      uint64_t result = sub_215735E54(v3, v2[2]);
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return result;
}

void sub_215735EE0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215735EF4(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(*(void *)(a1 + 8) + 56);
  std::mutex::lock(v2);
  uint64_t v4 = (std::mutex *)(*(void *)(a1 + 80) + 64);
  std::mutex::lock(v4);
  while (1)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    if (!*(void *)(v3 + 56)) {
      break;
    }
    sub_215735C7C(a1, *(void *)(*(void *)(v3 + 40) + 32), (uint64_t)&v4);
  }
  std::mutex::unlock(v4);
  std::mutex::unlock(v2);
}

void sub_215735F70(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215735F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10)
{
  std::mutex::unlock(a10);
  std::mutex::unlock(v10);
  _Unwind_Resume(a1);
}

void sub_215735FA0(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (std::mutex *)(*(void *)(a1 + 80) + 64);
  std::mutex::lock(v4);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_2157360C4((uint64_t)a2, *(void *)(*(void *)(a1 + 80) + 56));
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void **)(v5 + 40);
  uint64_t v7 = (void *)(v5 + 48);
  if (v6 != (void *)(v5 + 48))
  {
    uint64_t v8 = (void *)a2[1];
    do
    {
      if ((unint64_t)v8 >= a2[2])
      {
        uint64_t v8 = sub_2157391F4((uint64_t)a2, (long long *)(v6 + 5));
      }
      else
      {
        uint64_t v9 = v6[6];
        *uint64_t v8 = v6[5];
        v8[1] = v9;
        if (v9) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        }
        v8 += 2;
      }
      a2[1] = v8;
      unint64_t v10 = (void *)v6[1];
      if (v10)
      {
        do
        {
          BOOL v11 = v10;
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          BOOL v11 = (void *)v6[2];
          BOOL v12 = *v11 == (void)v6;
          uint64_t v6 = v11;
        }
        while (!v12);
      }
      uint64_t v6 = v11;
    }
    while (v11 != v7);
  }

  std::mutex::unlock(v4);
}

void sub_2157360A4(_Unwind_Exception *a1)
{
  sub_2157361F0(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2157360C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(char **)a1;
  if (a2 <= (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4) {
    return;
  }
  if (a2 >> 60) {
    sub_215738AC0();
  }
  uint64_t v4 = *(char **)(a1 + 8);
  uint64_t v5 = 16 * a2;
  uint64_t v6 = (char *)operator new(16 * a2);
  uint64_t v7 = &v6[v5];
  uint64_t v8 = &v6[v4 - v2];
  if (v4 == v2)
  {
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
    if (!v2) {
      return;
    }
    goto LABEL_14;
  }
  uint64_t v9 = &v6[v4 - v2];
  do
  {
    long long v10 = *((_OWORD *)v4 - 1);
    v4 -= 16;
    *((_OWORD *)v9 - 1) = v10;
    v9 -= 16;
    *(void *)uint64_t v4 = 0;
    *((void *)v4 + 1) = 0;
  }
  while (v4 != v2);
  BOOL v11 = *(char **)a1;
  uint64_t v2 = *(char **)(a1 + 8);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  if (v2 != v11)
  {
    do
    {
      BOOL v12 = (std::__shared_weak_count *)*((void *)v2 - 1);
      if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
      v2 -= 16;
    }
    while (v2 != v11);
    uint64_t v2 = v11;
  }
  if (v2)
  {
LABEL_14:
    operator delete(v2);
  }
}

void **sub_2157361F0(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

unint64_t sub_2157362A4(uint64_t a1, const char *a2, int a3, unint64_t a4)
{
  uint64_t v8 = (std::mutex *)(*(void *)(a1 + 80) + 64);
  std::mutex::lock(v8);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = v9 + 128;
  uint64_t v11 = 40;
  if (a3) {
    uint64_t v11 = 128;
  }
  else {
    uint64_t v10 = v9 + 40;
  }
  if (!a4) {
    goto LABEL_28;
  }
  BOOL v12 = *(void **)(v10 + 8);
  if (!v12) {
    goto LABEL_28;
  }
  BOOL v13 = (void *)(v10 + 8);
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= a4;
    if (v14 >= a4) {
      BOOL v16 = v12;
    }
    else {
      BOOL v16 = v12 + 1;
    }
    if (v15) {
      BOOL v13 = v12;
    }
    BOOL v12 = (void *)*v16;
  }
  while (*v16);
  if (v13 == (void *)(v10 + 8) || (unint64_t v17 = v13[4], v17 > a4))
  {
LABEL_28:
    if (!a2) {
      goto LABEL_30;
    }
    uint64_t v18 = *(void **)(v9 + v11);
    uint64_t v19 = (void *)(v10 + 8);
    if (v18 == (void *)(v10 + 8)) {
      goto LABEL_30;
    }
    while (1)
    {
      size_t v20 = (const char *)(*(uint64_t (**)(void))(*(void *)v18[4] + 24))(v18[4]);
      if (v20 == a2 || !strcmp(v20, a2)) {
        break;
      }
      unint64_t v21 = (void *)v18[1];
      if (v21)
      {
        do
        {
          uint64_t v22 = v21;
          unint64_t v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          uint64_t v22 = (void *)v18[2];
          BOOL v23 = *v22 == (void)v18;
          uint64_t v18 = v22;
        }
        while (!v23);
      }
      uint64_t v18 = v22;
      if (v22 == v19) {
        goto LABEL_30;
      }
    }
    if (v18 == v19) {
LABEL_30:
    }
      unint64_t v17 = 0;
    else {
      unint64_t v17 = v18[4];
    }
  }
  std::mutex::unlock(v8);
  return v17;
}

void sub_215736404(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215736418(uint64_t result, int a2)
{
  uint64_t v2 = *(_DWORD ***)(result + 48);
  if (!v2)
  {
    std::mutex::lock((std::mutex *)(*(void *)(result + 8) + 56));
    operator new();
  }
  **uint64_t v2 = a2;
  return result;
}

void sub_21573688C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11)
{
  if (a11 == a10)
  {
    BOOL v13 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  else
  {
    BOOL v13 = __p;
    if (!__p)
    {
LABEL_3:
      std::mutex::unlock(v11);
      _Unwind_Resume(a1);
    }
  }
  operator delete(v13);
  std::mutex::unlock(v11);
  _Unwind_Resume(a1);
}

void sub_2157368E4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v3, 0x1000C4052888210);
  MEMORY[0x2166C4D20](v2, 0x30C40EEE2E2AFLL);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215736930(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215736944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573D498((uint64_t)&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_215736960(void *a1)
{
  if (a1[6])
  {
    if (!a1[5]) {
      return 0;
    }
    uint64_t v2 = (std::mutex *)(a1[1] + 56);
    std::mutex::lock(v2);
    uint64_t v3 = a1[5];
    uint64_t v5 = *(void *)(v3 + 56);
    uint64_t v4 = *(void *)(v3 + 64);
    if (v4) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v6 = (std::__shared_weak_count *)a1[8];
    a1[7] = v5;
    a1[8] = v4;
    if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    uint64_t v7 = *(void **)(a1[10] + 16);
    *(_OWORD *)__p = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    unint64_t v8 = 0;
    if (v7)
    {
      uint64_t v9 = v7;
      do
      {
        ++v8;
        uint64_t v9 = (void *)*v9;
      }
      while (v9);
    }
    sub_21573C9D0(__p, v7, v8);
    uint64_t i = *((void *)&v34 + 1);
    if (*((void *)&v34 + 1))
    {
      uint64_t v11 = (char *)__p[1];
      unint64_t v12 = v34;
      do
      {
        uint64_t v13 = *(void *)&v11[(v12 >> 6) & 0x3FFFFFFFFFFFFF8];
        unint64_t v14 = v12 & 0x1FF;
        BOOL v15 = *(void **)(v13 + 8 * v14);
        if (!v15[6])
        {
          uint64_t v17 = a1[7];
          uint64_t v16 = a1[8];
          if (v16) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
          }
          uint64_t v18 = (std::__shared_weak_count *)v15[8];
          v15[7] = v17;
          v15[8] = v16;
          if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
            uint64_t v19 = *(void **)(*(void *)(*(void *)(v13 + 8 * v14) + 80) + 16);
            for (i = *((void *)&v34 + 1); v19; uint64_t v19 = (void *)*v19)
            {
LABEL_26:
              size_t v20 = (char *)__p[1];
              if ((void *)v33 == __p[1]) {
                unint64_t v21 = 0;
              }
              else {
                unint64_t v21 = (((void)v33 - (unint64_t)__p[1]) << 6) - 1;
              }
              unint64_t v22 = v34 + i;
              if (v21 == v22)
              {
                sub_215739360((uint64_t)__p);
                size_t v20 = (char *)__p[1];
                unint64_t v22 = *((void *)&v34 + 1) + v34;
              }
              *(void *)(*(void *)&v20[(v22 >> 6) & 0x3FFFFFFFFFFFFF8] + 8 * (v22 & 0x1FF)) = v19[2];
              uint64_t i = ++*((void *)&v34 + 1);
            }
          }
          else
          {
            uint64_t v19 = *(void **)(*(void *)(*(void *)(v13 + 8 * v14) + 80) + 16);
            uint64_t i = *((void *)&v34 + 1);
            if (v19) {
              goto LABEL_26;
            }
          }
        }
        uint64_t v11 = (char *)__p[1];
        --i;
        unint64_t v12 = v34 + 1;
        *(void *)&long long v34 = v12;
        *((void *)&v34 + 1) = i;
        if (v12 >= 0x400)
        {
          operator delete(*(void **)__p[1]);
          uint64_t v11 = (char *)__p[1] + 8;
          unint64_t v12 = v34 - 512;
          __p[1] = (char *)__p[1] + 8;
          *(void *)&long long v34 = v34 - 512;
          uint64_t i = *((void *)&v34 + 1);
        }
      }
      while (i);
    }
    uint64_t v23 = a1[6];
    a1[6] = 0;
    if (v23)
    {
      v24 = *(std::__shared_weak_count **)(v23 + 8);
      if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
      MEMORY[0x2166C4D20](v23, 0x30C40EEE2E2AFLL);
    }
    uint64_t v25 = (void **)__p[1];
    uint64_t v26 = (void **)v33;
    *((void *)&v34 + 1) = 0;
    unint64_t v27 = v33 - (unint64_t)__p[1];
    if ((unint64_t)v33 - (unint64_t)__p[1] >= 0x11)
    {
      do
      {
        operator delete(*v25);
        uint64_t v26 = (void **)v33;
        uint64_t v25 = (void **)((char *)__p[1] + 8);
        __p[1] = v25;
        unint64_t v27 = v33 - (void)v25;
      }
      while ((void)v33 - (void)v25 > 0x10uLL);
    }
    unint64_t v28 = v27 >> 3;
    if (v28 == 1)
    {
      uint64_t v29 = 256;
    }
    else
    {
      if (v28 != 2) {
        goto LABEL_44;
      }
      uint64_t v29 = 512;
    }
    *(void *)&long long v34 = v29;
LABEL_44:
    if (v25 != v26)
    {
      do
      {
        uint64_t v31 = *v25++;
        operator delete(v31);
      }
      while (v25 != v26);
      if ((void *)v33 != __p[1]) {
        *(void *)&long long v33 = v33 + (((unint64_t)__p[1] - v33 + 7) & 0xFFFFFFFFFFFFFFF8);
      }
    }
    if (__p[0]) {
      operator delete(__p[0]);
    }
    std::mutex::unlock(v2);
  }
  return 1;
}

void sub_215736CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11)
{
  if (a11 == a10)
  {
    uint64_t v13 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = __p;
    if (!__p)
    {
LABEL_3:
      std::mutex::unlock(v11);
      _Unwind_Resume(a1);
    }
  }
  operator delete(v13);
  std::mutex::unlock(v11);
  _Unwind_Resume(a1);
}

void sub_215736D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573D498((uint64_t)&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void sub_215736D64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::mutex *)(*(void *)(a1 + 8) + 56);
  std::mutex::lock(v4);
  sub_215736DD4(a1, a2);

  std::mutex::unlock(v4);
}

void sub_215736DC0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_215736DD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(_DWORD ***)(a1 + 48);
  if (v4)
  {
    unsigned int v5 = **v4 - 1;
    if (v5 > 5)
    {
      uint64_t v6 = "{error}";
      size_t v7 = strlen("{error}");
      if (v7 >= 0x7FFFFFFFFFFFFFF8) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v6 = (&off_26425A550)[v5];
      size_t v7 = strlen(v6);
      if (v7 >= 0x7FFFFFFFFFFFFFF8) {
LABEL_31:
      }
        sub_215731CD8();
    }
  }
  else
  {
    uint64_t v6 = "NONE";
    size_t v7 = strlen("NONE");
    if (v7 >= 0x7FFFFFFFFFFFFFF8) {
      goto LABEL_31;
    }
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v11 = v7 | 7;
    }
    uint64_t v12 = v11 + 1;
    uint64_t v9 = (long long *)operator new(v11 + 1);
    *((void *)&v21 + 1) = v8;
    unint64_t v22 = v12 | 0x8000000000000000;
    *(void *)&long long v21 = v9;
LABEL_13:
    memcpy(v9, v6, v8);
    *((unsigned char *)v9 + v8) = 0;
    uint64_t v10 = *(void *)(*(void *)(a1 + 80) + 56);
    if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_14;
  }
  HIBYTE(v22) = v7;
  uint64_t v9 = &v21;
  if (v7) {
    goto LABEL_13;
  }
  LOBYTE(v21) = 0;
  uint64_t v10 = *(void *)(*(void *)(a1 + 80) + 56);
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
  {
LABEL_9:
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 16);
    *(void *)(a2 + 16) = *(void *)(a1 + 32);
    goto LABEL_15;
  }
LABEL_14:
  sub_215738B0C((unsigned char *)a2, *(void **)(a1 + 16), *(void *)(a1 + 24));
LABEL_15:
  uint64_t v13 = (unsigned char *)(a2 + 24);
  if (SHIBYTE(v22) < 0)
  {
    uint64_t v16 = (void *)v21;
    sub_215738B0C(v13, (void *)v21, *((unint64_t *)&v21 + 1));
    *(void *)(a2 + 56) = 0;
    unint64_t v14 = (void *)(a2 + 56);
    *(void *)(a2 + 48) = v10;
    *(void *)(a2 + 64) = 0;
    *(void *)(a2 + 72) = 0;
    operator delete(v16);
    for (uint64_t i = *(void **)(*(void *)(a1 + 80) + 16); i; uint64_t i = (void *)*i)
    {
LABEL_21:
      while (1)
      {
        sub_215736DD4(&v21, i[2]);
        unint64_t v17 = *(void *)(a2 + 64);
        if (v17 < *(void *)(a2 + 72)) {
          break;
        }
        *(void *)(a2 + 64) = sub_215739C5C(v14, (uint64_t)&v21);
        sub_215732E60((uint64_t)&v21);
        uint64_t i = (void *)*i;
        if (!i) {
          return;
        }
      }
      if (SHIBYTE(v22) < 0)
      {
        sub_215738B0C(*(unsigned char **)(a2 + 64), (void *)v21, *((unint64_t *)&v21 + 1));
      }
      else
      {
        long long v18 = v21;
        *(void *)(v17 + 16) = v22;
        *(_OWORD *)unint64_t v17 = v18;
      }
      uint64_t v19 = (unsigned char *)(v17 + 24);
      if (SHIBYTE(v24) < 0)
      {
        sub_215738B0C(v19, (void *)v23, *((unint64_t *)&v23 + 1));
      }
      else
      {
        long long v20 = v23;
        *(void *)(v17 + 40) = v24;
        *(_OWORD *)uint64_t v19 = v20;
      }
      *(void *)(v17 + 48) = v25;
      *(void *)(v17 + 56) = 0;
      *(void *)(v17 + 64) = 0;
      *(void *)(v17 + 72) = 0;
      *(_OWORD *)(v17 + 56) = v26;
      *(void *)(v17 + 72) = v27;
      long long v26 = 0uLL;
      uint64_t v27 = 0;
      *(void *)(a2 + 64) = v17 + 80;
      *(void *)(a2 + 64) = v17 + 80;
      sub_215732E60((uint64_t)&v21);
    }
  }
  else
  {
    *(_OWORD *)uint64_t v13 = v21;
    *(void *)(a2 + 40) = v22;
    *(void *)(a2 + 56) = 0;
    unint64_t v14 = (void *)(a2 + 56);
    *(void *)(a2 + 48) = v10;
    *(void *)(a2 + 64) = 0;
    *(void *)(a2 + 72) = 0;
    uint64_t i = *(void **)(*(void *)(a1 + 80) + 16);
    if (i) {
      goto LABEL_21;
    }
  }
}

void sub_215737078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 23) < 0)
  {
    operator delete(*(void **)v14);
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2157370B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  *(void *)(v9 + 64) = v10;
  sub_215732E60((uint64_t)&a9);
  sub_215732E60(v9);
  JUMPOUT(0x2157370FCLL);
}

uint64_t sub_215737104(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 80);
  uint64_t v3 = *(void **)(v2 + 128);
  uint64_t v4 = (void *)(v2 + 136);
  if (v3 != (void *)(v2 + 136))
  {
    do
    {
      uint64_t result = v3[5];
      if (*(unsigned char *)(result + 8)) {
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, a2);
      }
      uint64_t v6 = (void *)v3[1];
      if (v6)
      {
        do
        {
          size_t v7 = v6;
          uint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          size_t v7 = (void *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          uint64_t v3 = v7;
        }
        while (!v8);
      }
      uint64_t v3 = v7;
    }
    while (v7 != v4);
  }
  return result;
}

void **sub_2157371B4@<X0>(void **result@<X0>, void *a2@<X8>)
{
  *a2 = **result;
  return result;
}

void sub_2157371C4(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a1;
  sub_215733748(&v3, a2, a3);
}

void sub_2157371F0()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_21573751C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x1093C402D7449D9);
  MEMORY[0x2166C4D20](v2, 0x10A1C40503A8522);
  _Unwind_Resume(a1);
}

void *sub_2157375F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788A6A8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(qword_26788A6A8))
  {
    return &qword_26788A848;
  }
  sub_215732BF4(__p, "%d [%t] %p %c: %m%n");
  sub_21573781C(&qword_26788A848, (long long *)__p);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit((void (*)(void *))sub_2157378D8, &qword_26788A848, &dword_21572C000);
  __cxa_guard_release(qword_26788A6A8);
  return &qword_26788A848;
}

void sub_2157376B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(qword_26788A6A8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(qword_26788A6A8);
  _Unwind_Resume(a1);
}

void *sub_2157376F0(void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60) {
      sub_215738AC0();
    }
    uint64_t v5 = 16 * a3;
    uint64_t v6 = (char *)operator new(16 * a3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      uint64_t v8 = a2 + v7;
      uint64_t v9 = &v6[v7];
      uint64_t v10 = *(void *)(a2 + v7 + 8);
      *(void *)uint64_t v9 = *(void *)(a2 + v7);
      *((void *)v9 + 1) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 16;
    }
    while (v8 + 16 != a2 + v5);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2157377A0(_Unwind_Exception *exception_object)
{
  if (*(void *)v1) {
    sub_215E1AF08((void **)(v1 + 8), *(char **)v1, (void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2157377C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(*(void *)a1 + 48))(&v4);
  *a2 = v4;
  return result;
}

void *sub_21573781C(void *a1, long long *a2)
{
  *a1 = &unk_26C6563B0;
  uint64_t v3 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(v3, *(void **)a2, *((void *)a2 + 1));
    if (atomic_load_explicit((atomic_uchar *volatile)&qword_26788A6C8, memory_order_acquire)) {
      return a1;
    }
  }
  else
  {
    long long v4 = *a2;
    v3[2] = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
    if (atomic_load_explicit((atomic_uchar *volatile)&qword_26788A6C8, memory_order_acquire)) {
      return a1;
    }
  }
  if (!__cxa_guard_acquire(&qword_26788A6C8)) {
    return a1;
  }
  qword_26788A6C0 = std::chrono::steady_clock::now().__d_.__rep_;
  __cxa_guard_release(&qword_26788A6C8);
  return a1;
}

uint64_t sub_2157378D8(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)uint64_t result = &unk_26C6563B0;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

void sub_215737938(uint64_t a1)
{
  *(void *)a1 = &unk_26C6563B0;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  JUMPOUT(0x2166C4D20);
}

char *sub_2157379A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A680, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788A680))
  {
    return aPatternlayout;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], aPatternlayout, &dword_21572C000);
  __cxa_guard_release(&qword_26788A680);
  return aPatternlayout;
}

uint64_t sub_215737A24(uint64_t a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a2 / 1000 % 1000;
  if (v3 >= 0) {
    unint64_t v4 = *a2 / 1000 % 1000;
  }
  else {
    unint64_t v4 = v3 + 1000;
  }
  *(void *)&__t.tm_sec = *a2 - 1000 * v4;
  time_t v21 = std::chrono::system_clock::to_time_t((const std::chrono::system_clock::time_point *)&__t);
  uint64_t v5 = localtime_r(&v21, &__t);
  strcpy(__s, "yyyy.mm.dd.HH-MM.SS.fff");
  size_t v6 = strlen(__s);
  strftime(__s, v6, "%Y-%m-%d %H:%M:%S", v5);
  size_t v7 = strlen(__s);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = (void **)operator new(v10 + 1);
    size_t v18 = v8;
    int64_t v19 = v11 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v19) = v7;
  p_dst = (void **)&__dst;
  if (v7) {
LABEL_11:
  }
    memcpy(p_dst, __s, v8);
  uint64_t v12 = (void *)(a1 + 16);
  *((unsigned char *)p_dst + v8) = 0;
  if (v19 >= 0) {
    uint64_t v13 = (void **)&__dst;
  }
  else {
    uint64_t v13 = __dst;
  }
  if (v19 >= 0) {
    uint64_t v14 = HIBYTE(v19);
  }
  else {
    uint64_t v14 = v18;
  }
  BOOL v15 = sub_215731D94(v12, (uint64_t)v13, v14);
  sub_215731D94(v15, (uint64_t)",", 1);
  if (SHIBYTE(v19) < 0)
  {
    operator delete(__dst);
    if (v4 <= 9) {
      goto LABEL_20;
    }
  }
  else if (v4 <= 9)
  {
LABEL_20:
    sub_215731D94(v12, (uint64_t)"00", 2);
    return std::ostream::operator<<();
  }
  if (v4 <= 0x63) {
    sub_215731D94(v12, (uint64_t)"0", 1);
  }
  return std::ostream::operator<<();
}

void sub_215737C40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215737C68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A680, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788A680))
  {
    return aPatternlayout;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], aPatternlayout, &dword_21572C000);
  __cxa_guard_release(&qword_26788A680);
  return aPatternlayout;
}

void sub_215737CE4(int a1, void **a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A6B8, memory_order_acquire) & 1) == 0)
  {
    char v2 = a2;
    int v3 = __cxa_guard_acquire(&qword_26788A6B8);
    a2 = v2;
    if (v3)
    {
      sub_2157379A8();
      if (byte_2678836F7 < 0)
      {
        sub_215738B0C(v4, *(void **)aPatternlayout, *(unint64_t *)&aPatternlayout[8]);
      }
      else
      {
        *(_OWORD *)unint64_t v4 = *(_OWORD *)aPatternlayout;
        uint64_t v5 = unk_2678836F0;
      }
      uint64_t v7 = 0x700000000000000;
      *(_OWORD *)__p = *(_OWORD *)"ILayout";
      sub_21573A150(qword_26788A780, (uint64_t)v4, 2uLL);
      if (SHIBYTE(v7) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v5) < 0) {
        operator delete(v4[0]);
      }
      __cxa_atexit((void (*)(void *))sub_2157352DC, qword_26788A780, &dword_21572C000);
      __cxa_guard_release(&qword_26788A6B8);
      a2 = v2;
    }
  }
  if (a2 != (void **)qword_26788A780) {
    sub_21573A314(a2, (void **)qword_26788A780[0], unk_26788A788, 0xAAAAAAAAAAAAAAABLL * ((unk_26788A788 - qword_26788A780[0]) >> 3));
  }
}

void sub_215737E50(_Unwind_Exception *a1)
{
}

void sub_215737E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      __cxa_guard_abort(&qword_26788A6B8);
      _Unwind_Resume(a1);
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  __cxa_guard_abort(&qword_26788A6B8);
  _Unwind_Resume(a1);
}

void sub_215737EC0()
{
}

void sub_215737F60(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x1093C402D7449D9);
  _Unwind_Resume(a1);
}

uint64_t sub_215737F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_2157328B8((uint64_t)v42);
  v41 = a3;
  if (*(char *)(a1 + 31) < 0)
  {
    unint64_t v6 = *(void *)(a1 + 16);
    if (v6 < 2) {
      goto LABEL_65;
    }
    goto LABEL_5;
  }
  unint64_t v6 = *(unsigned __int8 *)(a1 + 31);
  if (v6 >= 2)
  {
LABEL_5:
    unint64_t v7 = 0;
    uint64_t v8 = (void *)(a1 + 8);
    unint64_t v9 = 1;
    while (1)
    {
      if (*(char *)(a1 + 31) < 0)
      {
        int v12 = *(char *)(a1 + 31);
        if (*(unsigned char *)(*v8 + v7) != 37)
        {
LABEL_21:
          uint64_t v17 = a1 + 8;
          if (v12 < 0) {
            uint64_t v17 = *v8;
          }
          LOBYTE(__dst) = *(unsigned char *)(v17 + v7);
          sub_215731D94(v43, (uint64_t)&__dst, 1);
          unint64_t v9 = v7;
          goto LABEL_8;
        }
      }
      else
      {
        int v12 = *(char *)(a1 + 31);
        if (*((unsigned char *)v8 + v7) != 37) {
          goto LABEL_21;
        }
      }
      uint64_t v13 = a1 + 8;
      if (v12 < 0) {
        uint64_t v13 = *v8;
      }
      uint64_t v14 = (unsigned char *)(v13 + v9);
      if (v6 <= v9 + 1) {
        unint64_t v15 = v9 + 1;
      }
      else {
        unint64_t v15 = v6;
      }
      while (2)
      {
        switch(*v14)
        {
          case '%':
            int64_t v19 = "%";
            goto LABEL_33;
          case 'F':
            uint64_t v10 = *(char **)(a2 + 32);
            size_t v18 = strrchr(v10, 47);
            if (v18)
            {
              uint64_t v10 = v18 + 1;
            }
            else
            {
              uint64_t v27 = strrchr(v10, 92);
              if (v27) {
                uint64_t v10 = v27 + 1;
              }
            }
            goto LABEL_7;
          case 'L':
            std::ostream::operator<<();
            goto LABEL_8;
          case 'c':
            uint64_t v10 = *(char **)a2;
            goto LABEL_7;
          case 'd':
            sub_215737A24((uint64_t)v42, (void *)(a2 + 16));
            goto LABEL_8;
          case 'f':
            uint64_t v10 = *(char **)(a2 + 48);
            goto LABEL_7;
          case 'm':
            uint64_t v20 = *(void *)(a2 + 56);
            int v21 = *(_DWORD *)(v20 + 120);
            if ((v21 & 0x10) != 0)
            {
              unint64_t v24 = *(void *)(v20 + 112);
              unint64_t v25 = *(void *)(v20 + 72);
              if (v24 < v25)
              {
                *(void *)(v20 + 112) = v25;
                unint64_t v24 = v25;
              }
              long long v26 = *(const void **)(v20 + 64);
              size_t v22 = v24 - (void)v26;
              if (v24 - (unint64_t)v26 > 0x7FFFFFFFFFFFFFF7) {
LABEL_83:
              }
                sub_215731CD8();
            }
            else
            {
              if ((v21 & 8) == 0)
              {
                size_t v22 = 0;
                HIBYTE(v55) = 0;
                p_dst = (void **)&__dst;
                goto LABEL_55;
              }
              long long v26 = *(const void **)(v20 + 40);
              size_t v22 = *(void *)(v20 + 56) - (void)v26;
              if (v22 > 0x7FFFFFFFFFFFFFF7) {
                goto LABEL_83;
              }
            }
            if (v22 >= 0x17)
            {
              uint64_t v28 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v22 | 7) != 0x17) {
                uint64_t v28 = v22 | 7;
              }
              uint64_t v29 = v28 + 1;
              p_dst = (void **)operator new(v28 + 1);
              size_t v54 = v22;
              int64_t v55 = v29 | 0x8000000000000000;
              long long __dst = p_dst;
LABEL_54:
              memmove(p_dst, v26, v22);
              goto LABEL_55;
            }
            HIBYTE(v55) = v22;
            p_dst = (void **)&__dst;
            if (v22) {
              goto LABEL_54;
            }
LABEL_55:
            *((unsigned char *)p_dst + v22) = 0;
            if (v55 >= 0) {
              v30 = (void **)&__dst;
            }
            else {
              v30 = __dst;
            }
            if (v55 >= 0) {
              uint64_t v31 = HIBYTE(v55);
            }
            else {
              uint64_t v31 = v54;
            }
            sub_215731D94(v43, (uint64_t)v30, v31);
            if (SHIBYTE(v55) < 0) {
              operator delete(__dst);
            }
LABEL_8:
            unint64_t v7 = v9 + 1;
            v9 += 2;
            if (v9 >= v6) {
              goto LABEL_65;
            }
            break;
          case 'n':
            int64_t v19 = "\n";
LABEL_33:
            sub_215731D94(v43, (uint64_t)v19, 1);
            goto LABEL_8;
          case 'p':
            uint64_t v10 = (&off_26425A518)[*(unsigned int *)(a2 + 24)];
LABEL_7:
            size_t v11 = strlen(v10);
            sub_215731D94(v43, (uint64_t)v10, v11);
            goto LABEL_8;
          case 'r':
            if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A6C8, memory_order_acquire) & 1) == 0
              && __cxa_guard_acquire(&qword_26788A6C8))
            {
              qword_26788A6C0 = std::chrono::steady_clock::now().__d_.__rep_;
              __cxa_guard_release(&qword_26788A6C8);
            }
            std::ostream::operator<<();
            goto LABEL_8;
          case 't':
            pthread_self();
            std::ostream::operator<<();
            goto LABEL_8;
          default:
            uint64_t v16 = a1 + 8;
            if (*(char *)(a1 + 31) < 0) {
              uint64_t v16 = *v8;
            }
            uint64_t v14 = (unsigned char *)(v16 + v9++ + 1);
            if (v9 < v6) {
              continue;
            }
            unint64_t v9 = v15;
            goto LABEL_8;
        }
        break;
      }
    }
  }
LABEL_65:
  if ((v51 & 0x10) != 0)
  {
    unint64_t v34 = v50;
    long long v32 = v41;
    if (v50 < v47)
    {
      unint64_t v50 = v47;
      unint64_t v34 = v47;
    }
    uint64_t v35 = v46;
    size_t v33 = v34 - (void)v46;
    if (v34 - (unint64_t)v46 > 0x7FFFFFFFFFFFFFF7) {
      goto LABEL_82;
    }
  }
  else
  {
    long long v32 = v41;
    if ((v51 & 8) == 0)
    {
      size_t v33 = 0;
      *((unsigned char *)v41 + 23) = 0;
      goto LABEL_78;
    }
    uint64_t v35 = v44;
    size_t v33 = v45 - (void)v44;
    if ((unint64_t)(v45 - (void)v44) > 0x7FFFFFFFFFFFFFF7) {
LABEL_82:
    }
      sub_215731CD8();
  }
  if (v33 >= 0x17)
  {
    uint64_t v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17) {
      uint64_t v36 = v33 | 7;
    }
    uint64_t v37 = v36 + 1;
    uint64_t v38 = operator new(v36 + 1);
    v32[1] = v33;
    v32[2] = v37 | 0x8000000000000000;
    *long long v32 = v38;
    long long v32 = v38;
    goto LABEL_77;
  }
  *((unsigned char *)v32 + 23) = v33;
  if (v33) {
LABEL_77:
  }
    memmove(v32, v35, v33);
LABEL_78:
  *((unsigned char *)v32 + v33) = 0;
  v42[0] = *MEMORY[0x263F8C2B8];
  uint64_t v39 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v42 + *(void *)(v42[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v43[0] = v39;
  v43[1] = MEMORY[0x263F8C318] + 16;
  if (v49 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x2166C4BF0](&v52);
}

void sub_215738584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2157351A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_21573870C(void *a1)
{
  *a1 = &unk_26C6563F8;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_21573877C(void *a1)
{
  *a1 = &unk_26C6563F8;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

const char *sub_21573880C()
{
  return "ConsoleAppender";
}

void sub_215738818(uint64_t a1, uint64_t a2)
{
  if (((1 << (*(_DWORD *)(a2 + 24) - 1)) | *(_DWORD *)(a1 + 24)) == *(_DWORD *)(a1 + 24))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788A6D0, memory_order_acquire) & 1) == 0)
    {
      uint64_t v8 = a1;
      int v9 = __cxa_guard_acquire(&qword_26788A6D0);
      a1 = v8;
      if (v9)
      {
        __cxa_atexit(MEMORY[0x263F8C118], &stru_2678836F8, &dword_21572C000);
        __cxa_guard_release(&qword_26788A6D0);
        a1 = v8;
      }
    }
    (*(void (**)(void **__return_ptr))(**(void **)(a1 + 16) + 40))(&__p);
    std::mutex::lock(&stru_2678836F8);
    int v3 = *(_DWORD *)(a2 + 24);
    if ((v3 - 1) < 3)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788A6D8, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(qword_26788A6D8))
      {
        qword_26788A758 = MEMORY[0x263F8C100];
        qword_26788A760 = MEMORY[0x263F8C0F8];
        __cxa_guard_release(qword_26788A6D8);
      }
      if ((v12 & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      if ((v12 & 0x80u) == 0) {
        uint64_t v7 = v12;
      }
      else {
        uint64_t v7 = v11;
      }
      sub_215731D94((void *)qword_26788A758, (uint64_t)p_p, v7);
      if (atomic_load_explicit((atomic_uchar *volatile)qword_26788A6D8, memory_order_acquire)) {
        goto LABEL_22;
      }
    }
    else
    {
      if ((v3 - 4) >= 3) {
        goto LABEL_23;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788A6D8, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(qword_26788A6D8))
      {
        qword_26788A758 = MEMORY[0x263F8C100];
        qword_26788A760 = MEMORY[0x263F8C0F8];
        __cxa_guard_release(qword_26788A6D8);
      }
      if ((v12 & 0x80u) == 0) {
        unint64_t v4 = &__p;
      }
      else {
        unint64_t v4 = __p;
      }
      if ((v12 & 0x80u) == 0) {
        uint64_t v5 = v12;
      }
      else {
        uint64_t v5 = v11;
      }
      sub_215731D94((void *)qword_26788A760, (uint64_t)v4, v5);
      if (atomic_load_explicit((atomic_uchar *volatile)qword_26788A6D8, memory_order_acquire))
      {
LABEL_22:
        std::ostream::flush();
LABEL_23:
        std::mutex::unlock(&stru_2678836F8);
        if ((char)v12 < 0) {
          operator delete(__p);
        }
        return;
      }
    }
    if (__cxa_guard_acquire(qword_26788A6D8))
    {
      qword_26788A758 = MEMORY[0x263F8C100];
      qword_26788A760 = MEMORY[0x263F8C0F8];
      __cxa_guard_release(qword_26788A6D8);
    }
    goto LABEL_22;
  }
}

void sub_215738A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *sub_215738AA8()
{
  return "";
}

const char *sub_215738AB4()
{
  return "ConsoleAppender";
}

void sub_215738AC0()
{
}

void sub_215738AD8()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *sub_215738B0C(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void ***sub_215738BAC(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    uint64_t v2 = *result;
    int v3 = **result;
    if (v3)
    {
      uint64_t v4 = (uint64_t)v2[1];
      uint64_t v5 = **v1;
      if ((void *)v4 != v3)
      {
        do
          uint64_t v4 = sub_215732E60(v4 - 80);
        while ((void *)v4 != v3);
        uint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_215738C38(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215738C70(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215738C90(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4tlog8LogLevelEE27__shared_ptr_default_deleteIS2_S2_EE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4tlog8LogLevelEE27__shared_ptr_default_deleteIS2_S2_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4tlog8LogLevelEE27__shared_ptr_default_deleteIS2_S2_EE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4tlog8LogLevelEE27__shared_ptr_default_deleteIS2_S2_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t *sub_215738D04(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  void *result = a2;
  if (v2)
  {
    sub_215738DA4(v2 + 128, *(void **)(v2 + 136));
    std::mutex::~mutex((std::mutex *)(v2 + 64));
    sub_215738DA4(v2 + 40, *(void **)(v2 + 48));
    unint64_t v3 = *(void **)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v4 = (void *)*v3;
        operator delete(v3);
        unint64_t v3 = v4;
      }
      while (v4);
    }
    uint64_t v5 = *(void **)v2;
    *(void *)uint64_t v2 = 0;
    if (v5) {
      operator delete(v5);
    }
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

void sub_215738DA4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_215738DA4(a1, *a2);
    sub_215738DA4(a1, a2[1]);
    uint64_t v4 = (std::__shared_weak_count *)a2[6];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      uint64_t v5 = a2;
    }
    else
    {
      uint64_t v5 = a2;
    }
    operator delete(v5);
  }
}

char *sub_215738E60(char **a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    int v9 = (char *)operator new(24 * v8);
  }
  else
  {
    int v9 = 0;
  }
  uint64_t v10 = &v9[24 * v5];
  uint64_t v16 = v10;
  uint64_t v17 = v10;
  size_t v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_215738B0C(v10, *(void **)a2, *(void *)(a2 + 8));
    unint64_t v3 = *a1;
    uint64_t v4 = a1[1];
    uint64_t v10 = v16;
    uint64_t v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      uint64_t v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
    uint64_t v11 = v10 + 24;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v12 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  uint64_t v13 = *a1;
  unint64_t v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    uint64_t v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0) {
        operator delete(*v14);
      }
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    unint64_t v3 = v13;
  }
  if (v3) {
    operator delete(v3);
  }
  return v11;
}

void sub_215739024(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215739038(uint64_t a1)
{
  unint64_t v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      unint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        unint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_2157390A0(void *a1, unint64_t a2)
{
  uint64_t v4 = a1 + 17;
  unint64_t v3 = (uint64_t *)a1[17];
  if (v3)
  {
    unint64_t v5 = v4;
    unint64_t v6 = v3;
    do
    {
      unint64_t v7 = v6[4];
      BOOL v8 = v7 >= a2;
      if (v7 >= a2) {
        int v9 = (uint64_t **)v6;
      }
      else {
        int v9 = (uint64_t **)(v6 + 1);
      }
      if (v8) {
        unint64_t v5 = v6;
      }
      unint64_t v6 = *v9;
    }
    while (*v9);
    if (v5 != v4)
    {
      unint64_t v10 = v5[4];
      if (v10 <= a2)
      {
        if (*(unsigned char *)(v10 + 8)) {
          --a1[19];
        }
        uint64_t v11 = (uint64_t *)v5[1];
        if (v11)
        {
          do
          {
            long long v12 = v11;
            uint64_t v11 = (uint64_t *)*v11;
          }
          while (v11);
        }
        else
        {
          uint64_t v13 = v5;
          do
          {
            long long v12 = (uint64_t *)v13[2];
            BOOL v14 = *v12 == (void)v13;
            uint64_t v13 = v12;
          }
          while (!v14);
        }
        if ((uint64_t *)a1[16] == v5) {
          a1[16] = v12;
        }
        --a1[18];
        sub_21573B1FC(v3, v5);
        unint64_t v15 = (std::__shared_weak_count *)v5[6];
        if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
          uint64_t v16 = v5;
        }
        else
        {
          uint64_t v16 = v5;
        }
        operator delete(v16);
      }
    }
  }
}

_OWORD *sub_2157391F4(uint64_t a1, long long *a2)
{
  unint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = ((uint64_t)v4 - *(void *)a1) >> 4;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 60) {
    sub_215738AC0();
  }
  uint64_t v7 = *(void *)(a1 + 16) - (void)v3;
  if (v7 >> 3 > v6) {
    unint64_t v6 = v7 >> 3;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v6 = 0xFFFFFFFFFFFFFFFLL;
  }
  if (v6 >> 60) {
    sub_215738AD8();
  }
  uint64_t v9 = 16 * v6;
  unint64_t v10 = (char *)operator new(16 * v6);
  uint64_t v11 = &v10[16 * v5];
  long long v12 = *a2;
  *(_OWORD *)uint64_t v11 = *a2;
  if (*((void *)&v12 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v12 + 1) + 8), 1uLL, memory_order_relaxed);
    unint64_t v3 = *(void **)a1;
    uint64_t v4 = *(void **)(a1 + 8);
  }
  uint64_t v13 = &v10[v9];
  BOOL v14 = v11 + 16;
  if (v4 == v3)
  {
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_19;
  }
  do
  {
    long long v15 = *((_OWORD *)v4 - 1);
    v4 -= 2;
    *((_OWORD *)v11 - 1) = v15;
    v11 -= 16;
    *uint64_t v4 = 0;
    v4[1] = 0;
  }
  while (v4 != v3);
  uint64_t v16 = *(void **)a1;
  unint64_t v3 = *(void **)(a1 + 8);
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v13;
  if (v3 != v16)
  {
    do
    {
      uint64_t v17 = (std::__shared_weak_count *)*(v3 - 1);
      if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
      v3 -= 2;
    }
    while (v3 != v16);
    unint64_t v3 = v16;
  }
  if (v3) {
LABEL_19:
  }
    operator delete(v3);
  return v14;
}

void sub_215739360(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    *(void *)(a1 + 32) = v4;
    unint64_t v6 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v6 + 1);
    uint64_t v8 = *v6;
    *(void *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_80:
      *(void *)uint64_t v5 = v8;
      *(void *)(a1 + 16) += 8;
      return;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v31 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v31 = 1;
      }
      if (!(v31 >> 61))
      {
        unint64_t v32 = v31 >> 2;
        uint64_t v33 = 8 * v31;
        unint64_t v34 = (char *)operator new(8 * v31);
        uint64_t v35 = &v34[8 * v32];
        uint64_t v36 = &v34[v33];
        int64_t v38 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            unint64_t v74 = &v34[8 * v32];
            v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              uint64_t v75 = (v39 >> 3) + 1;
              uint64_t v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              v40 = &v35[v76];
              v7 += v76;
              v77 = (long long *)(v6 + 3);
              v78 = v74 + 16;
              uint64_t v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                _OWORD *v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            v40 = &v34[8 * v32];
          }
          do
          {
            uint64_t v81 = *(void *)v7;
            v7 += 8;
            *(void *)v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_78;
      }
LABEL_89:
      sub_215738AD8();
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    if (v11 >= -1) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = v11 + 2;
    }
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = -v13;
    long long v15 = &v7[-8 * v13];
    int64_t v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      uint64_t v7 = *(char **)(a1 + 8);
    }
    uint64_t v5 = &v15[v16];
    *(void *)(a1 + 8) = &v7[8 * v14];
    *(void *)(a1 + 16) = &v15[v16];
    goto LABEL_80;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = v18 - v19;
  uint64_t v21 = (v18 - v19) >> 3;
  uint64_t v22 = v17 - *(void *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      v91 = operator new(0x1000uLL);
      sub_215739930((char **)a1, &v91);
      return;
    }
    v91 = operator new(0x1000uLL);
    sub_215739AC0((void **)a1, &v91);
    v41 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v41 + 1);
    uint64_t v8 = *v41;
    *(void *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24)) {
      goto LABEL_80;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v42 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v42 = 1;
      }
      if (!(v42 >> 61))
      {
        unint64_t v43 = v42 >> 2;
        uint64_t v44 = 8 * v42;
        unint64_t v34 = (char *)operator new(8 * v42);
        uint64_t v35 = &v34[8 * v43];
        uint64_t v36 = &v34[v44];
        int64_t v45 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            v82 = &v34[8 * v43];
            unint64_t v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              uint64_t v83 = (v46 >> 3) + 1;
              uint64_t v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              unint64_t v47 = &v35[v84];
              v7 += v84;
              v85 = (long long *)(v41 + 3);
              v86 = v82 + 16;
              uint64_t v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                _OWORD *v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            unint64_t v47 = &v34[8 * v43];
          }
          do
          {
            uint64_t v89 = *(void *)v7;
            v7 += 8;
            *(void *)unint64_t v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_78:
        *(void *)a1 = v34;
        *(void *)(a1 + 8) = v35;
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          uint64_t v5 = *(char **)(a1 + 16);
        }
        goto LABEL_80;
      }
      goto LABEL_89;
    }
    goto LABEL_5;
  }
  uint64_t v23 = v22 >> 2;
  if (v17 == *(void *)a1) {
    unint64_t v24 = 1;
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >> 61) {
    goto LABEL_89;
  }
  unint64_t v25 = (char *)operator new(8 * v24);
  long long v26 = operator new(0x1000uLL);
  uint64_t v27 = &v25[8 * v21];
  uint64_t v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19) {
        unint64_t v48 = 1;
      }
      else {
        unint64_t v48 = v20 >> 2;
      }
      if (v48 >> 61) {
        sub_215738AD8();
      }
      char v49 = (char *)operator new(8 * v48);
      uint64_t v27 = &v49[8 * (v48 >> 2)];
      uint64_t v28 = &v49[8 * v48];
      operator delete(v25);
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v18 = *(void *)(a1 + 16);
      unint64_t v25 = v49;
      *(void *)uint64_t v27 = v90;
      uint64_t v29 = v27 + 8;
      if (v18 == v50) {
        goto LABEL_45;
      }
    }
    else
    {
      unint64_t v30 = v21 + 2;
      if (v21 >= -1) {
        unint64_t v30 = v21 + 1;
      }
      v27 -= 8 * (v30 >> 1);
      *(void *)uint64_t v27 = v26;
      uint64_t v29 = v27 + 8;
      if (v18 == v19) {
        goto LABEL_45;
      }
    }
    do
    {
LABEL_52:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27) {
            unint64_t v59 = 1;
          }
          else {
            unint64_t v59 = (v28 - v27) >> 2;
          }
          if (v59 >> 61) {
            sub_215738AD8();
          }
          v60 = (char *)operator new(8 * v59);
          unint64_t v25 = v60;
          unint64_t v61 = (v59 + 3) >> 2;
          uint64_t v53 = &v60[8 * v61];
          int64_t v62 = v29 - v27;
          BOOL v37 = v29 == v27;
          uint64_t v29 = v53;
          if (!v37)
          {
            uint64_t v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v63 = v62 - 8;
            uint64_t v64 = &v60[8 * v61];
            v65 = v27;
            if (v63 < 0x38) {
              goto LABEL_93;
            }
            uint64_t v66 = 8 * v61;
            uint64_t v64 = &v60[8 * v61];
            v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20) {
              goto LABEL_93;
            }
            uint64_t v67 = (v63 >> 3) + 1;
            uint64_t v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v64 = &v53[v68];
            v65 = &v27[v68];
            unint64_t v69 = (long long *)(v27 + 16);
            int v70 = &v60[v66 + 16];
            uint64_t v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)int v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_93:
              do
              {
                uint64_t v73 = *(void *)v65;
                v65 += 8;
                *(void *)uint64_t v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          uint64_t v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          uint64_t v55 = (v28 - v29) >> 3;
          if (v55 >= -1) {
            unint64_t v56 = v55 + 1;
          }
          else {
            unint64_t v56 = v55 + 2;
          }
          v57 = &v29[8 * (v56 >> 1)];
          uint64_t v53 = &v57[-(v29 - v27)];
          size_t v58 = v29 - v27;
          BOOL v37 = v29 == v27;
          uint64_t v29 = v57;
          if (!v37) {
            memmove(v53, v27, v58);
          }
          unint64_t v25 = v27;
        }
      }
      else
      {
        uint64_t v53 = v27;
      }
      uint64_t v54 = *(void *)(v18 - 8);
      v18 -= 8;
      *((void *)v53 - 1) = v54;
      int v51 = v53 - 8;
      uint64_t v27 = v51;
    }
    while (v18 != *(void *)(a1 + 8));
    goto LABEL_46;
  }
  *(void *)uint64_t v27 = v26;
  uint64_t v29 = v27 + 8;
  if (v18 != v19) {
    goto LABEL_52;
  }
LABEL_45:
  int v51 = v27;
LABEL_46:
  uint64_t v52 = *(char **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v51;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v28;
  if (v52)
  {
    operator delete(v52);
  }
}

void sub_2157398D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_2157398EC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_215739900(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_215739918(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_215739930(char **a1, void *a2)
{
  unint64_t v4 = a1[2];
  if (v4 != a1[3]) {
    goto LABEL_22;
  }
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if (v6 > *a1)
  {
    uint64_t v7 = (v6 - *a1) >> 3;
    if (v7 >= -1) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = v7 + 2;
    }
    uint64_t v9 = v8 >> 1;
    uint64_t v10 = -v9;
    uint64_t v11 = &v6[-8 * v9];
    int64_t v12 = v4 - v6;
    if (v4 != v6)
    {
      memmove(&v6[-8 * v9], a1[1], v4 - v6);
      unint64_t v4 = a1[1];
    }
    uint64_t v13 = &v4[8 * v10];
    unint64_t v4 = &v11[v12];
    a1[1] = v13;
    a1[2] = &v11[v12];
    goto LABEL_22;
  }
  unint64_t v14 = (v4 - v5) >> 2;
  if (v4 == v5) {
    unint64_t v14 = 1;
  }
  if (v14 >> 61) {
    sub_215738AD8();
  }
  unint64_t v15 = v14 >> 2;
  uint64_t v16 = 8 * v14;
  uint64_t v17 = (char *)operator new(8 * v14);
  uint64_t v18 = &v17[8 * v15];
  int64_t v20 = v4 - v6;
  BOOL v19 = v4 == v6;
  unint64_t v4 = v18;
  if (!v19)
  {
    unint64_t v4 = &v18[v20 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v21 = v20 - 8;
    if ((unint64_t)(v20 - 8) < 0x38)
    {
      uint64_t v22 = &v17[8 * v15];
      do
      {
LABEL_19:
        uint64_t v31 = *(void *)v6;
        v6 += 8;
        *(void *)uint64_t v22 = v31;
        v22 += 8;
      }
      while (v22 != v4);
      goto LABEL_20;
    }
    uint64_t v23 = &v17[8 * v15];
    uint64_t v22 = v23;
    if ((unint64_t)(v23 - v6) < 0x20) {
      goto LABEL_19;
    }
    uint64_t v24 = (v21 >> 3) + 1;
    uint64_t v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    uint64_t v22 = &v18[v25];
    long long v26 = &v6[v25];
    uint64_t v27 = (long long *)(v6 + 16);
    uint64_t v28 = v23 + 16;
    uint64_t v29 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v30 = *v27;
      *(v28 - 1) = *(v27 - 1);
      _OWORD *v28 = v30;
      v27 += 2;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    unint64_t v6 = v26;
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL)) {
      goto LABEL_19;
    }
  }
LABEL_20:
  *a1 = v17;
  a1[1] = v18;
  a1[2] = v4;
  a1[3] = &v17[v16];
  if (v5)
  {
    operator delete(v5);
    unint64_t v4 = a1[2];
  }
LABEL_22:
  *(void *)unint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_215739AC0(void **a1, void *a2)
{
  unint64_t v4 = (char *)a1[1];
  if (v4 == *a1)
  {
    uint64_t v7 = a1[2];
    unint64_t v6 = a1[3];
    if (v7 >= v6)
    {
      uint64_t v13 = v6 - v4;
      BOOL v12 = v13 == 0;
      unint64_t v14 = v13 >> 2;
      if (v12) {
        unint64_t v14 = 1;
      }
      if (v14 >> 61) {
        sub_215738AD8();
      }
      unint64_t v15 = (v14 + 3) >> 2;
      uint64_t v16 = 8 * v14;
      uint64_t v17 = (char *)operator new(8 * v14);
      uint64_t v5 = &v17[8 * v15];
      uint64_t v18 = v5;
      uint64_t v19 = v7 - v4;
      if (v7 != v4)
      {
        uint64_t v18 = &v5[v19 & 0xFFFFFFFFFFFFFFF8];
        unint64_t v20 = v19 - 8;
        unint64_t v21 = &v17[8 * v15];
        uint64_t v22 = v4;
        if (v20 < 0x38) {
          goto LABEL_27;
        }
        uint64_t v23 = &v17[8 * v15];
        unint64_t v21 = v23;
        uint64_t v22 = v4;
        if ((unint64_t)(v23 - v4) < 0x20) {
          goto LABEL_27;
        }
        uint64_t v24 = (v20 >> 3) + 1;
        uint64_t v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
        unint64_t v21 = &v5[v25];
        uint64_t v22 = &v4[v25];
        long long v26 = (long long *)(v4 + 16);
        uint64_t v27 = v23 + 16;
        uint64_t v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v29 = *v26;
          *(v27 - 1) = *(v26 - 1);
          *uint64_t v27 = v29;
          v26 += 2;
          v27 += 2;
          v28 -= 4;
        }
        while (v28);
        if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_27:
          do
          {
            uint64_t v30 = *(void *)v22;
            v22 += 8;
            *(void *)unint64_t v21 = v30;
            v21 += 8;
          }
          while (v21 != v18);
        }
      }
      *a1 = v17;
      a1[1] = v5;
      a1[2] = v18;
      a1[3] = &v17[v16];
      if (v4)
      {
        operator delete(v4);
        uint64_t v5 = (char *)a1[1];
      }
    }
    else
    {
      uint64_t v8 = (v6 - v7) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v11 = &v7[8 * (v9 >> 1)];
      uint64_t v5 = &v11[-(v7 - v4)];
      if (v7 != v4)
      {
        memmove(&v11[-(v7 - v4)], v4, v7 - v4);
        unint64_t v4 = (char *)a1[2];
      }
      a1[1] = v5;
      a1[2] = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = (char *)a1[1];
  }
  *((void *)v5 - 1) = *a2;
  a1[1] = (char *)a1[1] - 8;
}

uint64_t sub_215739C5C(void *a1, uint64_t a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x333333333333333) {
    sub_215738AC0();
  }
  if (0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 4);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - *a1) >> 4) >= 0x199999999999999) {
    unint64_t v6 = 0x333333333333333;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x333333333333333) {
      sub_215738AD8();
    }
    uint64_t v7 = operator new(80 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = &v7[80 * v3];
  uint64_t v17 = v8;
  *((void *)&v18 + 1) = &v7[80 * v6];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_215738B0C(&v7[80 * v3], *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
    *((void *)v8 + 2) = *(void *)(a2 + 16);
  }
  uint64_t v9 = &v7[80 * v3 + 24];
  if (*(char *)(a2 + 47) < 0)
  {
    sub_215738B0C(v9, *(void **)(a2 + 24), *(void *)(a2 + 32));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + 24);
    *(void *)&v7[80 * v3 + 40] = *(void *)(a2 + 40);
  }
  uint64_t v10 = 0;
  uint64_t v11 = &v7[80 * v3];
  *((void *)v11 + 6) = *(void *)(a2 + 48);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(a2 + 56);
  *((void *)v11 + 9) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)&long long v18 = v11 + 80;
  uint64_t v13 = (void *)*a1;
  for (uint64_t i = a1[1]; (void *)(i + v10) != v13; sub_215732CA8((uint64_t)&v17[v10], (long long *)(v10 + i)))
    v10 -= 80;
  unint64_t v15 = (void *)*a1;
  uint64_t v14 = a1[1];
  *a1 = &v17[v10];
  for (*(_OWORD *)(a1 + 1) = v18; (void *)v14 != v15; uint64_t v14 = sub_215732E60(v14 - 80))
    ;
  if (v15) {
    operator delete(v15);
  }
  return v18;
}

void sub_215739E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (*(char *)(v4 + 23) < 0)
  {
    operator delete(*(void **)v4);
    sub_215739EA0((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_215739EA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215739EA0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 80;
    sub_215732E60(i - 80);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_215739EF4()
{
}

void *sub_215739F0C(void *result, uint64_t a2, unint64_t a3)
{
  if (!a3) {
    return result;
  }
  uint64_t v3 = result;
  int v4 = *((char *)result + 23);
  if (v4 < 0)
  {
    unint64_t v6 = (void *)*result;
    uint64_t v5 = result[1];
    unint64_t v7 = v5 - a2;
    if (v5 - a2 >= a3) {
      unint64_t v8 = a3;
    }
    else {
      unint64_t v8 = v5 - a2;
    }
    if (v5 - a2 <= a3) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *((unsigned __int8 *)result + 23);
    unint64_t v6 = result;
    unint64_t v7 = v5 - a2;
    if (v5 - a2 >= a3) {
      unint64_t v8 = a3;
    }
    else {
      unint64_t v8 = *((unsigned __int8 *)result + 23) - a2;
    }
    if (v7 <= a3) {
      goto LABEL_8;
    }
  }
  uint64_t result = memmove((char *)v6 + a2, (char *)v6 + a2 + v8, v7 - v8);
  LOBYTE(v4) = *((unsigned char *)v3 + 23);
LABEL_8:
  uint64_t v9 = v5 - v8;
  if ((v4 & 0x80) != 0) {
    v3[1] = v9;
  }
  else {
    *((unsigned char *)v3 + 23) = v9 & 0x7F;
  }
  *((unsigned char *)v6 + v9) = 0;
  return result;
}

void sub_215739FA4(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_21573A000(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_26425A308, MEMORY[0x263F8C068]);
}

void sub_215739FEC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_21573A000(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

BOOL sub_21573A034(int __c)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_26788A688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(qword_26788A688))
  {
    qword_26788A768 = (uint64_t)operator new(0x48uLL);
    *(_OWORD *)&qword_26788A770 = xmmword_215E975C0;
    strcpy((char *)qword_26788A768, "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.");
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788A768, &dword_21572C000);
    __cxa_guard_release(qword_26788A688);
  }
  if (byte_26788A77F >= 0) {
    size_t v2 = byte_26788A77F;
  }
  else {
    size_t v2 = qword_26788A770;
  }
  if (!v2) {
    return 1;
  }
  if (byte_26788A77F >= 0) {
    uint64_t v3 = &qword_26788A768;
  }
  else {
    uint64_t v3 = (uint64_t *)qword_26788A768;
  }
  int v4 = memchr(v3, __c, v2);
  return !v4 || v4 - (unsigned char *)v3 == -1;
}

void sub_21573A138(_Unwind_Exception *a1)
{
}

void *sub_21573A150(void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >= 0xAAAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    uint64_t v5 = 24 * a3;
    unint64_t v6 = (char *)operator new(24 * a3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      uint64_t v9 = &v6[v7];
      uint64_t v10 = (long long *)(a2 + v7);
      if (*(char *)(a2 + v7 + 23) < 0)
      {
        sub_215738B0C(v9, *(void **)v10, *((void *)v10 + 1));
      }
      else
      {
        long long v8 = *v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *(_OWORD *)uint64_t v9 = v8;
      }
      v7 += 24;
    }
    while (v5 != v7);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_21573A22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_21573A240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 24)
  {
    if (*(char *)(v10 + v11 - 1) < 0) {
      operator delete(*(void **)(v10 + v11 - 24));
    }
  }
  *(void *)(v9 + 8) = v10;
  sub_21573A27C(&a9);
  _Unwind_Resume(a1);
}

void ***sub_21573A27C(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    size_t v2 = *result;
    uint64_t v3 = (void **)**result;
    if (v3)
    {
      int v4 = (void **)v2[1];
      uint64_t v5 = **result;
      if (v4 != v3)
      {
        do
        {
          if (*((char *)v4 - 1) < 0) {
            operator delete(*(v4 - 3));
          }
          v4 -= 3;
        }
        while (v4 != v3);
        uint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_21573A314(void **a1, void **a2, void **a3, size_t __sz)
{
  unint64_t v6 = a2;
  uint64_t v8 = (uint64_t)a1[2];
  uint64_t v9 = (void **)*a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)*a1) >> 3) >= __sz)
  {
    BOOL v12 = (void **)a1[1];
    if (0xAAAAAAAAAAAAAAABLL * (v12 - v9) >= __sz)
    {
      if (a2 == a3)
      {
        uint64_t v19 = (void **)*a1;
      }
      else
      {
        uint64_t v19 = (void **)*a1;
        do
        {
          if (v6 != v9)
          {
            char v22 = *((unsigned char *)v6 + 23);
            if (*((char *)v9 + 23) < 0)
            {
              if (v22 >= 0) {
                unint64_t v20 = v6;
              }
              else {
                unint64_t v20 = *v6;
              }
              if (v22 >= 0) {
                size_t v21 = *((unsigned __int8 *)v6 + 23);
              }
              else {
                size_t v21 = (size_t)v6[1];
              }
              sub_21573ABD0(v9, v20, v21);
            }
            else if ((*((unsigned char *)v6 + 23) & 0x80) != 0)
            {
              sub_21573AB08(v9, *v6, (size_t)v6[1]);
            }
            else
            {
              long long v23 = *(_OWORD *)v6;
              v9[2] = v6[2];
              *(_OWORD *)uint64_t v9 = v23;
            }
          }
          v6 += 3;
          v9 += 3;
          v19 += 3;
        }
        while (v6 != a3);
        BOOL v12 = (void **)a1[1];
      }
      while (v12 != v19)
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      a1[1] = v19;
    }
    else
    {
      uint64_t v13 = &a2[v12 - v9];
      if (v12 != v9)
      {
        uint64_t v14 = 8 * (v12 - v9);
        do
        {
          if (v6 != v9)
          {
            char v17 = *((unsigned char *)v6 + 23);
            if (*((char *)v9 + 23) < 0)
            {
              if (v17 >= 0) {
                unint64_t v15 = v6;
              }
              else {
                unint64_t v15 = *v6;
              }
              if (v17 >= 0) {
                size_t v16 = *((unsigned __int8 *)v6 + 23);
              }
              else {
                size_t v16 = (size_t)v6[1];
              }
              sub_21573ABD0(v9, v15, v16);
            }
            else if ((*((unsigned char *)v6 + 23) & 0x80) != 0)
            {
              sub_21573AB08(v9, *v6, (size_t)v6[1]);
            }
            else
            {
              long long v18 = *(_OWORD *)v6;
              v9[2] = v6[2];
              *(_OWORD *)uint64_t v9 = v18;
            }
          }
          v6 += 3;
          v9 += 3;
          v14 -= 24;
        }
        while (v14);
        uint64_t v9 = (void **)a1[1];
      }
      unint64_t v32 = v9;
      if (v13 != a3)
      {
        uint64_t v33 = 0;
        do
        {
          uint64_t v35 = &v9[v33];
          uint64_t v36 = &v13[v33];
          if (SHIBYTE(v13[v33 + 2]) < 0)
          {
            sub_215738B0C(v35, *v36, (unint64_t)v36[1]);
          }
          else
          {
            long long v34 = *(_OWORD *)v36;
            v35[2] = v36[2];
            *(_OWORD *)uint64_t v35 = v34;
          }
          v33 += 3;
        }
        while (&v13[v33] != a3);
        unint64_t v32 = &v9[v33];
      }
      a1[1] = v32;
    }
  }
  else
  {
    if (v9)
    {
      uint64_t v10 = (void **)a1[1];
      uint64_t v11 = *a1;
      if (v10 != v9)
      {
        do
        {
          if (*((char *)v10 - 1) < 0) {
            operator delete(*(v10 - 3));
          }
          v10 -= 3;
        }
        while (v10 != v9);
        uint64_t v11 = *a1;
      }
      a1[1] = v9;
      operator delete(v11);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_72;
    }
    unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v25 = 2 * v24;
    if (2 * v24 <= __sz) {
      uint64_t v25 = __sz;
    }
    unint64_t v26 = v24 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v25;
    if (v26 > 0xAAAAAAAAAAAAAAALL) {
LABEL_72:
    }
      sub_215738AC0();
    uint64_t v27 = 24 * v26;
    uint64_t v28 = (char *)operator new(24 * v26);
    *a1 = v28;
    a1[1] = v28;
    a1[2] = &v28[v27];
    if (v6 != a3)
    {
      uint64_t v29 = 0;
      do
      {
        uint64_t v30 = &v28[v29 * 8];
        uint64_t v31 = &v6[v29];
        if (SHIBYTE(v6[v29 + 2]) < 0)
        {
          sub_215738B0C(v30, *v31, (unint64_t)v31[1]);
        }
        else
        {
          *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
          *((void *)v30 + 2) = v31[2];
        }
        v29 += 3;
      }
      while (&v6[v29] != a3);
      v28 += v29 * 8;
    }
    a1[1] = v28;
  }
}

unint64_t sub_21573A6BC(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v23 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v24 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v25 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v27 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v26 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v28 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v29 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v30 = v26 + v28;
      unint64_t v31 = 0x9DDFEA08EB382D69
          * (v25 ^ ((0x9DDFEA08EB382D69 * (v25 ^ (v23 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v25 ^ (v23 + a3))));
      unint64_t v32 = 0x9DDFEA08EB382D69 * (v31 ^ (v31 >> 47));
      unint64_t v33 = v27 + a3 + v26 + v23;
      uint64_t v34 = v33 + v24;
      unint64_t v35 = __ROR8__(v33, 44) + v27 + a3 + __ROR8__(v24 + v27 + a3 - 0x622015F714C7D297 * (v31 ^ (v31 >> 47)), 21);
      uint64_t v36 = v26 + v28 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v37 = v36 + v25 + v28;
      uint64_t v38 = __ROR8__(v37, 44);
      uint64_t v39 = v37 + v29;
      uint64_t v40 = v38 + v36 + __ROR8__(v36 + v24 + v29, 21);
      uint64_t v42 = *a2;
      v41 = a2 + 4;
      unint64_t v43 = v42 - 0x4B6D499041670D8DLL * v24;
      uint64_t v44 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v45 = *(v41 - 3);
        uint64_t v46 = v43 + v34 + v30 + v45;
        uint64_t v47 = v41[2];
        uint64_t v48 = v41[3];
        uint64_t v49 = v41[1];
        unint64_t v30 = v49 + v34 - 0x4B6D499041670D8DLL * __ROR8__(v30 + v35 + v47, 42);
        uint64_t v50 = v32 + v39;
        uint64_t v51 = *(v41 - 2);
        uint64_t v52 = *(v41 - 1);
        uint64_t v53 = *(v41 - 4) - 0x4B6D499041670D8DLL * v35;
        uint64_t v54 = v53 + v39 + v52;
        uint64_t v55 = v53 + v45 + v51;
        uint64_t v34 = v55 + v52;
        uint64_t v56 = __ROR8__(v55, 44) + v53;
        unint64_t v57 = (0xB492B66FBE98F273 * __ROR8__(v46, 37)) ^ v40;
        unint64_t v43 = 0xB492B66FBE98F273 * __ROR8__(v50, 33);
        unint64_t v35 = v56 + __ROR8__(v54 + v57, 21);
        unint64_t v58 = v43 + v40 + *v41;
        uint64_t v39 = v58 + v49 + v47 + v48;
        uint64_t v40 = __ROR8__(v58 + v49 + v47, 44) + v58 + __ROR8__(v30 + v51 + v58 + v48, 21);
        v41 += 8;
        unint64_t v32 = v57;
        v44 += 64;
      }
      while (v44);
      unint64_t v59 = v43
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v40 ^ ((0x9DDFEA08EB382D69 * (v40 ^ v35)) >> 47) ^ (0x9DDFEA08EB382D69 * (v40 ^ v35)))) ^ ((0x9DDFEA08EB382D69 * (v40 ^ ((0x9DDFEA08EB382D69 * (v40 ^ v35)) >> 47) ^ (0x9DDFEA08EB382D69 * (v40 ^ v35)))) >> 47));
      unint64_t v60 = 0x9DDFEA08EB382D69
          * (v59 ^ (v57
                  - 0x4B6D499041670D8DLL * (v30 ^ (v30 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v39 ^ ((0x9DDFEA08EB382D69 * (v39 ^ v34)) >> 47) ^ (0x9DDFEA08EB382D69 * (v39 ^ v34)))) ^ ((0x9DDFEA08EB382D69 * (v39 ^ ((0x9DDFEA08EB382D69 * (v39 ^ v34)) >> 47) ^ (0x9DDFEA08EB382D69 * (v39 ^ v34)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v59 ^ (v60 >> 47) ^ v60)) ^ ((0x9DDFEA08EB382D69 * (v59 ^ (v60 >> 47) ^ v60)) >> 47));
    }
    else
    {
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v7 = *a2 - 0x3C5A37A36834CED9 * (v6 + a3);
      uint64_t v9 = a2[2];
      uint64_t v8 = a2[3];
      uint64_t v10 = __ROR8__(v7 + v8, 52);
      uint64_t v11 = v7 + a2[1];
      uint64_t v12 = __ROR8__(v11, 7);
      uint64_t v13 = v11 + v9;
      uint64_t v14 = *(uint64_t *)((char *)a2 + a3 - 32) + v9;
      uint64_t v15 = v12 + __ROR8__(*a2 - 0x3C5A37A36834CED9 * (v6 + a3), 37) + v10 + __ROR8__(v13, 31);
      uint64_t v16 = *(uint64_t *)((char *)a2 + a3 - 24) + v14 + v6;
      unint64_t v17 = 0xC3A5C85C97CB3127 * (v16 + *(uint64_t *)((char *)a2 + a3 - 8) + v8 + v15)
          - 0x651E95C4D06FBFB1
          * (v13
           + v8
           + __ROR8__(v14, 37)
           + __ROR8__(*(uint64_t *)((char *)a2 + a3 - 24) + v14, 7)
           + __ROR8__(*(uint64_t *)((char *)a2 + a3 - 8) + v8 + v14, 52)
           + __ROR8__(v16, 31));
      return 0x9AE16A3B2F90404FLL
           * ((v15 - 0x3C5A37A36834CED9 * (v17 ^ (v17 >> 47))) ^ ((v15 - 0x3C5A37A36834CED9 * (v17 ^ (v17 >> 47))) >> 47));
    }
  }
  else if (a3 > 0x10)
  {
    uint64_t v18 = a2[1];
    unint64_t v19 = 0xB492B66FBE98F273 * *a2;
    uint64_t v20 = __ROR8__(0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a2 + a3 - 8), 30) + __ROR8__(v19 - v18, 43);
    unint64_t v21 = v19 + a3 + __ROR8__(v18 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a2 + a3 - 8);
    unint64_t v22 = 0x9DDFEA08EB382D69 * ((v20 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)a2 + a3 - 16)) ^ v21);
    return 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (v21 ^ (v22 >> 47) ^ v22)) ^ ((0x9DDFEA08EB382D69 * (v21 ^ (v22 >> 47) ^ v22)) >> 47));
  }
  else if (a3 < 9)
  {
    if (a3 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a3)
      {
        unint64_t v63 = (0xC949D7C7509E6557 * (a3 + 4 * *((unsigned __int8 *)a2 + a3 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                       * (*(unsigned __int8 *)a2 | ((unint64_t)*((unsigned __int8 *)a2 + (a3 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v63 ^ (v63 >> 47));
      }
    }
    else
    {
      uint64_t v61 = *(unsigned int *)((char *)a2 + a3 - 4);
      unint64_t v62 = 0x9DDFEA08EB382D69 * (((8 * *(_DWORD *)a2) + a3) ^ v61);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v61 ^ (v62 >> 47) ^ v62)) ^ ((0x9DDFEA08EB382D69 * (v61 ^ (v62 >> 47) ^ v62)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(uint64_t *)((char *)a2 + a3 - 8);
    uint64_t v4 = __ROR8__(v3 + a3, a3);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *a2)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *a2)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *a2)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *a2)))) >> 47))) ^ v3;
  }
  return result;
}

void *sub_21573AB08(void *__dst, void *__src, size_t __len)
{
  if (__len > 0x16)
  {
    if (__len - 0x7FFFFFFFFFFFFFF7 <= 0x800000000000001ELL) {
      sub_215731CD8();
    }
    size_t v7 = 44;
    if (__len > 0x2C) {
      size_t v7 = __len;
    }
    size_t v8 = (v7 | 7) + 1;
    uint64_t v6 = operator new(v8);
    memcpy(v6, __src, __len);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *long long __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    uint64_t v6 = __dst;
    if (__len)
    {
      memmove(__dst, __src, __len);
      uint64_t v6 = __dst;
    }
  }
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void **sub_21573ABD0(void **a1, void *__src, size_t __len)
{
  unint64_t v6 = (unint64_t)a1[2];
  uint64_t v7 = v6 & 0x7FFFFFFFFFFFFFFFLL;
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) > __len)
  {
    size_t v8 = *a1;
    a1[1] = (void *)__len;
    if (__len) {
      memmove(v8, __src, __len);
    }
    goto LABEL_12;
  }
  size_t v9 = 0x7FFFFFFFFFFFFFF7;
  if (0x7FFFFFFFFFFFFFF7 - v7 < __len - v7 + 1) {
    sub_215731CD8();
  }
  unint64_t v10 = v7 - 1;
  uint64_t v11 = a1;
  if ((v6 & 0x8000000000000000) == 0)
  {
    if (v10 > 0x3FFFFFFFFFFFFFF2) {
      goto LABEL_7;
    }
LABEL_14:
    unint64_t v13 = 2 * v10;
    if (__len > 2 * v10) {
      unint64_t v13 = __len;
    }
    uint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17) {
      uint64_t v14 = v13 | 7;
    }
    if (v13 >= 0x17) {
      size_t v9 = v14 + 1;
    }
    else {
      size_t v9 = 23;
    }
    size_t v8 = operator new(v9);
    if (!__len) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v11 = *a1;
  if (v10 <= 0x3FFFFFFFFFFFFFF2) {
    goto LABEL_14;
  }
LABEL_7:
  size_t v8 = operator new(0x7FFFFFFFFFFFFFF7uLL);
  if (__len) {
LABEL_8:
  }
    memcpy(v8, __src, __len);
LABEL_9:
  if (v10 != 22) {
    operator delete(v11);
  }
  a1[1] = (void *)__len;
  a1[2] = (void *)(v9 | 0x8000000000000000);
  *a1 = v8;
LABEL_12:
  *((unsigned char *)v8 + __len) = 0;
  return a1;
}

char *sub_21573AD18(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    uint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  size_t v8 = &v7[24 * v3];
  size_t v9 = &v7[24 * v6];
  *(_OWORD *)size_t v8 = *(_OWORD *)a2;
  *((void *)v8 + 2) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v10 = v8 + 24;
  uint64_t v11 = (char *)*a1;
  uint64_t v12 = (char *)a1[1];
  if (v12 == *a1)
  {
    *a1 = v8;
    a1[1] = v10;
    a1[2] = v9;
    if (!v12) {
      return v10;
    }
    goto LABEL_20;
  }
  do
  {
    long long v13 = *(_OWORD *)(v12 - 24);
    *((void *)v8 - 1) = *((void *)v12 - 1);
    *(_OWORD *)(v8 - 24) = v13;
    v8 -= 24;
    *((void *)v12 - 2) = 0;
    *((void *)v12 - 1) = 0;
    *((void *)v12 - 3) = 0;
    v12 -= 24;
  }
  while (v12 != v11);
  uint64_t v14 = (char *)*a1;
  uint64_t v12 = (char *)a1[1];
  *a1 = v8;
  a1[1] = v10;
  a1[2] = v9;
  if (v12 != v14)
  {
    do
    {
      if (*(v12 - 1) < 0) {
        operator delete(*((void **)v12 - 3));
      }
      v12 -= 24;
    }
    while (v12 != v14);
    uint64_t v12 = v14;
  }
  if (v12) {
LABEL_20:
  }
    operator delete(v12);
  return v10;
}

void sub_21573AE84(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_21573AE84(a1, *(void *)a2);
    sub_21573AE84(a1, *((void *)a2 + 1));
    if (a2[55] < 0)
    {
      operator delete(*((void **)a2 + 4));
      unint64_t v4 = a2;
    }
    else
    {
      unint64_t v4 = a2;
    }
    operator delete(v4);
  }
}

uint64_t **sub_21573AF08(uint64_t **a1, long long *a2)
{
  unint64_t v4 = operator new(0x38uLL);
  uint64_t v5 = v4;
  long long v6 = *a2;
  uint64_t v7 = (std::__shared_weak_count *)*((void *)a2 + 2);
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  size_t v8 = a1 + 1;
  size_t v9 = a1[1];
  *((_OWORD *)v4 + 2) = v6;
  v4[6] = v7;
  if (v9)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v10 = (uint64_t **)v9;
        unint64_t v11 = v9[4];
        if ((unint64_t)v6 >= v11) {
          break;
        }
        size_t v9 = (uint64_t *)*v9;
        size_t v8 = v10;
        if (!*v10) {
          goto LABEL_9;
        }
      }
      if (v11 >= (unint64_t)v6) {
        break;
      }
      size_t v9 = (uint64_t *)v9[1];
      if (!v9)
      {
        size_t v8 = v10 + 1;
        goto LABEL_9;
      }
    }
    if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    operator delete(v5);
    return v10;
  }
  else
  {
    unint64_t v10 = a1 + 1;
LABEL_9:
    *unint64_t v4 = 0;
    v4[1] = 0;
    v4[2] = v10;
    *size_t v8 = v4;
    uint64_t v12 = (uint64_t *)**a1;
    long long v13 = v4;
    if (v12)
    {
      *a1 = v12;
      long long v13 = *v8;
    }
    sub_21573B048(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return (uint64_t **)v5;
  }
}

uint64_t *sub_21573B048(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 == result) {
    return result;
  }
  while (1)
  {
    uint64_t v2 = a2[2];
    if (*(unsigned char *)(v2 + 24)) {
      return result;
    }
    unint64_t v3 = *(uint64_t **)(v2 + 16);
    uint64_t v4 = *v3;
    if (*v3 != v2) {
      break;
    }
    uint64_t v7 = v3[1];
    if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
    {
      if (*(uint64_t **)v2 == a2)
      {
        *(unsigned char *)(v2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v11 = *(void *)(v2 + 8);
        *unint64_t v3 = v11;
        if (v11) {
          goto LABEL_15;
        }
      }
      else
      {
        size_t v9 = *(uint64_t **)(v2 + 8);
        uint64_t v10 = *v9;
        *(void *)(v2 + 8) = *v9;
        if (v10)
        {
          *(void *)(v10 + 16) = v2;
          unint64_t v3 = *(uint64_t **)(v2 + 16);
        }
        v9[2] = (uint64_t)v3;
        *(void *)(*(void *)(v2 + 16) + 8 * (**(void **)(v2 + 16) != v2)) = v9;
        *size_t v9 = v2;
        *(void *)(v2 + 16) = v9;
        unint64_t v3 = (uint64_t *)v9[2];
        uint64_t v2 = *v3;
        *((unsigned char *)v9 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v11 = *(void *)(v2 + 8);
        *unint64_t v3 = v11;
        if (v11) {
LABEL_15:
        }
          *(void *)(v11 + 16) = v3;
      }
      *(void *)(v2 + 16) = v3[2];
      *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
      *(void *)(v2 + 8) = v3;
      v3[2] = v2;
      return result;
    }
LABEL_3:
    *(unsigned char *)(v2 + 24) = 1;
    a2 = v3;
    *((unsigned char *)v3 + 24) = v3 == result;
    *uint64_t v5 = 1;
    if (v3 == result) {
      return result;
    }
  }
  if (v4)
  {
    int v6 = *(unsigned __int8 *)(v4 + 24);
    uint64_t v5 = (unsigned char *)(v4 + 24);
    if (!v6) {
      goto LABEL_3;
    }
  }
  if (*(uint64_t **)v2 == a2)
  {
    uint64_t v12 = a2[1];
    *(void *)uint64_t v2 = v12;
    if (v12)
    {
      *(void *)(v12 + 16) = v2;
      unint64_t v3 = *(uint64_t **)(v2 + 16);
    }
    a2[2] = (uint64_t)v3;
    *(void *)(*(void *)(v2 + 16) + 8 * (**(void **)(v2 + 16) != v2)) = a2;
    a2[1] = v2;
    *(void *)(v2 + 16) = a2;
    unint64_t v3 = (uint64_t *)a2[2];
  }
  else
  {
    a2 = (uint64_t *)a2[2];
  }
  *((unsigned char *)a2 + 24) = 1;
  *((unsigned char *)v3 + 24) = 0;
  long long v13 = (uint64_t *)v3[1];
  uint64_t v14 = *v13;
  v3[1] = *v13;
  if (v14) {
    *(void *)(v14 + 16) = v3;
  }
  v13[2] = v3[2];
  *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v13;
  *long long v13 = (uint64_t)v3;
  v3[2] = (uint64_t)v13;
  return result;
}

uint64_t *sub_21573B1FC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2;
  if (*a2)
  {
    uint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      unint64_t v3 = a2;
      goto LABEL_10;
    }
    do
    {
      unint64_t v3 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (!v2)
  {
    int v5 = 1;
    int v6 = (uint64_t **)v3[2];
    uint64_t v7 = *v6;
    if (*v6 == v3) {
      goto LABEL_6;
    }
LABEL_11:
    v6[1] = (uint64_t *)v2;
    int v8 = *((unsigned __int8 *)v3 + 24);
    if (v3 == a2) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_10:
  int v5 = 0;
  *(void *)(v2 + 16) = v3[2];
  int v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 != v3) {
    goto LABEL_11;
  }
LABEL_6:
  *int v6 = (uint64_t *)v2;
  if (v3 != result)
  {
    uint64_t v7 = v6[1];
    int v8 = *((unsigned __int8 *)v3 + 24);
    if (v3 == a2) {
      goto LABEL_16;
    }
LABEL_12:
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *unint64_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      unint64_t result = v3;
    }
    goto LABEL_16;
  }
  uint64_t v7 = 0;
  unint64_t result = (uint64_t *)v2;
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2) {
    goto LABEL_12;
  }
LABEL_16:
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v14 = (uint64_t **)v7[2];
    if (*v14 == v7) {
      break;
    }
    if (*((unsigned char *)v7 + 24))
    {
      uint64_t v15 = (void *)*v7;
      if (!*v7) {
        goto LABEL_38;
      }
    }
    else
    {
      *((unsigned char *)v7 + 24) = 1;
      *((unsigned char *)v14 + 24) = 0;
      unint64_t v17 = v14[1];
      uint64_t v18 = (uint64_t *)*v17;
      v14[1] = (uint64_t *)*v17;
      if (v18) {
        v18[2] = (uint64_t)v14;
      }
      v17[2] = (uint64_t)v14[2];
      v14[2][*v14[2] != (void)v14] = (uint64_t)v17;
      *unint64_t v17 = (uint64_t)v14;
      v14[2] = v17;
      if (result == (uint64_t *)*v7) {
        unint64_t result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
      uint64_t v15 = (void *)*v7;
      if (!*v7) {
        goto LABEL_38;
      }
    }
    if (!*((unsigned char *)v15 + 24))
    {
      unint64_t v19 = (uint64_t *)v7[1];
      if (!v19) {
        goto LABEL_64;
      }
LABEL_63:
      if (*((unsigned char *)v19 + 24))
      {
LABEL_64:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v23 = v15[1];
        *uint64_t v7 = v23;
        if (v23) {
          *(void *)(v23 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        void v7[2] = (uint64_t)v15;
        unint64_t v19 = v7;
      }
      else
      {
        uint64_t v15 = v7;
      }
      uint64_t v27 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v27 + 24);
      *(unsigned char *)(v27 + 24) = 1;
      *((unsigned char *)v19 + 24) = 1;
      uint64_t v28 = *(uint64_t **)(v27 + 8);
      uint64_t v29 = *v28;
      *(void *)(v27 + 8) = *v28;
      if (v29) {
        *(void *)(v29 + 16) = v27;
      }
      v28[2] = *(void *)(v27 + 16);
      *(void *)(*(void *)(v27 + 16) + 8 * (**(void **)(v27 + 16) != v27)) = v28;
      uint64_t *v28 = v27;
      *(void *)(v27 + 16) = v28;
      return result;
    }
LABEL_38:
    unint64_t v19 = (uint64_t *)v7[1];
    if (v19 && !*((unsigned char *)v19 + 24)) {
      goto LABEL_63;
    }
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v12 = (uint64_t *)v7[2];
    if (v12 == result)
    {
      uint64_t v12 = result;
LABEL_61:
      *((unsigned char *)v12 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v12 + 24)) {
      goto LABEL_61;
    }
LABEL_24:
    uint64_t v7 = *(uint64_t **)(v12[2] + 8 * (*(void *)v12[2] == (void)v12));
  }
  if (*((unsigned char *)v7 + 24))
  {
    uint64_t v16 = (void *)*v7;
    if (!*v7) {
      goto LABEL_49;
    }
LABEL_48:
    if (!*((unsigned char *)v16 + 24)) {
      goto LABEL_67;
    }
  }
  else
  {
    *((unsigned char *)v7 + 24) = 1;
    *((unsigned char *)v14 + 24) = 0;
    uint64_t v20 = (uint64_t *)v7[1];
    *uint64_t v14 = v20;
    if (v20) {
      v20[2] = (uint64_t)v14;
    }
    void v7[2] = (uint64_t)v14[2];
    v14[2][*v14[2] != (void)v14] = (uint64_t)v7;
    v7[1] = (uint64_t)v14;
    v14[2] = v7;
    if (result == (uint64_t *)v14) {
      unint64_t result = v7;
    }
    uint64_t v7 = *v14;
    uint64_t v16 = (void *)**v14;
    if (v16) {
      goto LABEL_48;
    }
  }
LABEL_49:
  unint64_t v21 = (uint64_t *)v7[1];
  if (!v21 || *((unsigned char *)v21 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v12 = (uint64_t *)v7[2];
    if (*((unsigned char *)v12 + 24)) {
      BOOL v13 = v12 == result;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      goto LABEL_61;
    }
    goto LABEL_24;
  }
  if (v16 && !*((unsigned char *)v16 + 24))
  {
LABEL_67:
    unint64_t v21 = v7;
  }
  else
  {
    *((unsigned char *)v21 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v22 = *v21;
    v7[1] = *v21;
    if (v22) {
      *(void *)(v22 + 16) = v7;
    }
    v21[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v21;
    uint64_t *v21 = (uint64_t)v7;
    void v7[2] = (uint64_t)v21;
    uint64_t v16 = v7;
  }
  uint64_t v24 = (uint64_t *)v21[2];
  *((unsigned char *)v21 + 24) = *((unsigned char *)v24 + 24);
  *((unsigned char *)v24 + 24) = 1;
  *((unsigned char *)v16 + 24) = 1;
  uint64_t v25 = *v24;
  uint64_t v26 = *(void *)(*v24 + 8);
  uint64_t *v24 = v26;
  if (v26) {
    *(void *)(v26 + 16) = v24;
  }
  *(void *)(v25 + 16) = v24[2];
  *(void *)(v24[2] + 8 * (*(void *)v24[2] != (void)v24)) = v25;
  *(void *)(v25 + 8) = v24;
  v24[2] = v25;
  return result;
}

void sub_21573B5C4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21573B5FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_21573B62C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 == 0x8000000215E97821) {
    return a1 + 24;
  }
  if (((v3 & 0x8000000215E97821 & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x8000000215E97821)) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x8000000215E97821 & 0x7FFFFFFFFFFFFFFFLL))) {
    return a1 + 24;
  }
  return 0;
}

uint64_t *sub_21573B6B0(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_21573A6BC((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  uint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    BOOL v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          BOOL v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        BOOL v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

std::string *sub_21573B8E0(uint64_t a1)
{
  *(void *)(a1 + 88) = 0;
  uint64_t result = (std::string *)(a1 + 64);
  unint64_t v3 = *(unsigned __int8 *)(a1 + 87);
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    unint64_t v4 = result;
    unint64_t v5 = *(unsigned __int8 *)(a1 + 87);
    int v6 = *(_DWORD *)(a1 + 96);
    if ((v6 & 8) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  unint64_t v4 = *(std::string **)(a1 + 64);
  unint64_t v5 = *(void *)(a1 + 72);
  int v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
LABEL_3:
    *(void *)(a1 + 88) = (char *)v4 + v5;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = (char *)v4 + v5;
  }
LABEL_4:
  if ((v6 & 0x10) == 0) {
    return result;
  }
  *(void *)(a1 + 88) = (char *)v4 + v5;
  if ((v3 & 0x80) == 0)
  {
    unint64_t v7 = 22;
    if (v3 > 0x15)
    {
      *(unsigned char *)(a1 + 87) = 22;
      goto LABEL_15;
    }
LABEL_11:
    uint64_t result = std::string::append(result, v7 - v3, 0);
    int v8 = *(char *)(a1 + 87);
    if (v8 < 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  unint64_t v3 = *(void *)(a1 + 72);
  unint64_t v7 = (*(void *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (v3 < v7) {
    goto LABEL_11;
  }
  uint64_t result = *(std::string **)(a1 + 64);
  *(void *)(a1 + 72) = v7;
LABEL_15:
  result->__r_.__value_.__s.__data_[v7] = 0;
  int v8 = *(char *)(a1 + 87);
  if (v8 < 0)
  {
LABEL_16:
    uint8x8_t v9 = (char *)v4 + *(void *)(a1 + 72);
    *(void *)(a1 + 40) = v4;
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v9;
    if ((*(unsigned char *)(a1 + 96) & 3) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_12:
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = (char *)v4 + v8;
  if ((*(unsigned char *)(a1 + 96) & 3) == 0) {
    return result;
  }
LABEL_17:
  if (v5 >> 31)
  {
    uint64_t v10 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
    unint64_t v11 = 0x7FFFFFFF * ((v10 + ((v5 - 0x80000000 - v10) >> 1)) >> 30);
    unint64_t v4 = (std::string *)((char *)v4 + v11 + 0x7FFFFFFF);
    unint64_t v5 = v5 - v11 - 0x7FFFFFFF;
    *(void *)(a1 + 48) = v4;
  }
  if (v5) {
    *(void *)(a1 + 48) = (char *)v4 + v5;
  }
  return result;
}

void *sub_21573BA4C(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = HIDWORD(*a2);
  unint64_t v8 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = v9 & (v10 - 1);
    }
    uint64_t v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      BOOL v13 = (void *)*v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v15 = v13[1];
            if (v15 == v9)
            {
              if (v13[2] == v6) {
                return v13;
              }
            }
            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_23;
            }
            BOOL v13 = (void *)*v13;
            if (!v13) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == v6) {
              return v13;
            }
          }
          else
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
            if (v14 != v3) {
              break;
            }
          }
          BOOL v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_23:
  unint64_t v17 = operator new(0x18uLL);
  *unint64_t v17 = 0;
  v17[1] = v9;
  v17[2] = *a3;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (v10 && (float)(v19 * (float)v10) >= v18)
  {
    uint64_t v20 = *(void *)a1;
    uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
    if (v21)
    {
LABEL_26:
      *unint64_t v17 = *v21;
LABEL_61:
      void *v21 = v17;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v22 = 1;
    if (v10 >= 3) {
      BOOL v22 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v10);
    unint64_t v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24) {
      size_t prime = v24;
    }
    else {
      size_t prime = v23;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v10 = *(void *)(a1 + 8);
    }
    if (prime > v10) {
      goto LABEL_37;
    }
    if (prime < v10)
    {
      unint64_t v26 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v10 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        unint64_t v26 = std::__next_prime(v26);
      }
      else
      {
        uint64_t v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2) {
          unint64_t v26 = v28;
        }
      }
      if (prime <= v26) {
        size_t prime = v26;
      }
      if (prime < v10) {
LABEL_37:
      }
        sub_21573BDA8(a1, prime);
    }
    unint64_t v10 = *(void *)(a1 + 8);
    unint64_t v29 = v10 - 1;
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
      {
        unint64_t v3 = v9 % v10;
        uint64_t v20 = *(void *)a1;
        uint64_t v21 = *(void **)(*(void *)a1 + 8 * (v9 % v10));
        if (v21) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v3 = v9;
        uint64_t v20 = *(void *)a1;
        uint64_t v21 = *(void **)(*(void *)a1 + 8 * v9);
        if (v21) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v3 = v29 & v9;
      uint64_t v20 = *(void *)a1;
      uint64_t v21 = *(void **)(*(void *)a1 + 8 * (v29 & v9));
      if (v21) {
        goto LABEL_26;
      }
    }
  }
  *unint64_t v17 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v17;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*v17)
  {
    unint64_t v30 = *(void *)(*v17 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v30 >= v10) {
        v30 %= v10;
      }
    }
    else
    {
      v30 &= v10 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v17;
}

void sub_21573BD94(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21573BDA8(uint64_t a1, unint64_t a2)
{
  if (!a2)
  {
    uint64_t v15 = *(void **)a1;
    *(void *)a1 = 0;
    if (v15) {
      operator delete(v15);
    }
    *(void *)(a1 + 8) = 0;
    return;
  }
  if (a2 >> 61) {
    sub_215738AD8();
  }
  unint64_t v4 = operator new(8 * a2);
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v6 = 0;
  *(void *)(a1 + 8) = a2;
  do
    *(void *)(*(void *)a1 + 8 * v6++) = 0;
  while (a2 != v6);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void **)(a1 + 16);
  if (v7)
  {
    unint64_t v9 = v7[1];
    unint64_t v10 = a2 - 1;
    if ((a2 & (a2 - 1)) == 0)
    {
      uint64_t v11 = v9 & v10;
      *(void *)(*(void *)a1 + 8 * v11) = v8;
      while (1)
      {
        uint64_t v12 = (void *)*v7;
        if (!*v7) {
          break;
        }
        uint64_t v13 = v12[1] & v10;
        if (v13 == v11)
        {
          unint64_t v7 = (void *)*v7;
        }
        else if (*(void *)(*(void *)a1 + 8 * v13))
        {
          *unint64_t v7 = *v12;
          uint64_t v14 = 8 * v13;
          *uint64_t v12 = **(void **)(*(void *)a1 + v14);
          **(void **)(*(void *)a1 + v14) = v12;
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v13) = v7;
          unint64_t v7 = v12;
          uint64_t v11 = v13;
        }
      }
      return;
    }
    if (v9 >= a2) {
      v9 %= a2;
    }
    *(void *)(*(void *)a1 + 8 * v9) = v8;
    uint64_t v16 = (void *)*v7;
    if (*v7)
    {
      while (1)
      {
        unint64_t v18 = v16[1];
        if (v18 >= a2) {
          v18 %= a2;
        }
        if (v18 == v9) {
          goto LABEL_25;
        }
        if (*(void *)(*(void *)a1 + 8 * v18))
        {
          *unint64_t v7 = *v16;
          uint64_t v17 = 8 * v18;
          *uint64_t v16 = **(void **)(*(void *)a1 + v17);
          **(void **)(*(void *)a1 + v17) = v16;
          uint64_t v16 = v7;
LABEL_25:
          unint64_t v7 = v16;
          uint64_t v16 = (void *)*v16;
          if (!v16) {
            return;
          }
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v18) = v7;
          unint64_t v7 = v16;
          uint64_t v16 = (void *)*v16;
          unint64_t v9 = v18;
          if (!v16) {
            return;
          }
        }
      }
    }
  }
}

void *sub_21573BF58@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    unint64_t v7 = v6;
    uint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *unint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_21573C08C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  size_t prime = *(void *)(a2 + 8);
  if (prime == 1)
  {
    size_t prime = 2;
LABEL_17:
    sub_21573BDA8(a1, prime);
    goto LABEL_18;
  }
  if ((prime & (prime - 1)) != 0)
  {
    size_t prime = std::__next_prime(*(void *)(a2 + 8));
    int8x8_t v5 = *(int8x8_t *)(a1 + 8);
    BOOL v6 = prime >= *(void *)&v5;
    if (prime > *(void *)&v5) {
      goto LABEL_17;
    }
  }
  else
  {
    int8x8_t v5 = 0;
    BOOL v6 = 1;
    if (prime) {
      goto LABEL_17;
    }
  }
  if (!v6)
  {
    unint64_t v7 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v5 < 3uLL || (uint8x8_t v8 = (uint8x8_t)vcnt_s8(v5), v8.i16[0] = vaddlv_u8(v8), v8.u32[0] > 1uLL))
    {
      unint64_t v7 = std::__next_prime(v7);
    }
    else
    {
      uint64_t v9 = 1 << -(char)__clz(v7 - 1);
      if (v7 >= 2) {
        unint64_t v7 = v9;
      }
    }
    if (prime <= v7) {
      size_t prime = v7;
    }
    if (prime < *(void *)&v5) {
      goto LABEL_17;
    }
  }
LABEL_18:
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    sub_21573C1D0(a1, i + 2, i + 2);
  return a1;
}

void sub_21573C1A8(_Unwind_Exception *a1)
{
  sub_2157354F0(v1);
  _Unwind_Resume(a1);
}

void sub_21573C1BC(_Unwind_Exception *a1)
{
  sub_2157354F0(v1);
  _Unwind_Resume(a1);
}

void *sub_21573C1D0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = HIDWORD(*a2);
  unint64_t v8 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ (v8 >> 47) ^ v8)) >> 47));
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = v9 & (v10 - 1);
    }
    uint64_t v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      uint64_t v13 = (void *)*v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v15 = v13[1];
            if (v15 == v9)
            {
              if (v13[2] == v6) {
                return v13;
              }
            }
            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_23;
            }
            uint64_t v13 = (void *)*v13;
            if (!v13) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == v6) {
              return v13;
            }
          }
          else
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
            if (v14 != v3) {
              break;
            }
          }
          uint64_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_23:
  uint64_t v17 = operator new(0x18uLL);
  *uint64_t v17 = 0;
  v17[1] = v9;
  v17[2] = *a3;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (v10 && (float)(v19 * (float)v10) >= v18)
  {
    uint64_t v20 = *(void *)a1;
    uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
    if (v21)
    {
LABEL_26:
      *uint64_t v17 = *v21;
LABEL_61:
      void *v21 = v17;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v22 = 1;
    if (v10 >= 3) {
      BOOL v22 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v10);
    unint64_t v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24) {
      size_t prime = v24;
    }
    else {
      size_t prime = v23;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v10 = *(void *)(a1 + 8);
    }
    if (prime > v10) {
      goto LABEL_37;
    }
    if (prime < v10)
    {
      unint64_t v26 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v10 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        unint64_t v26 = std::__next_prime(v26);
      }
      else
      {
        uint64_t v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2) {
          unint64_t v26 = v28;
        }
      }
      if (prime <= v26) {
        size_t prime = v26;
      }
      if (prime < v10) {
LABEL_37:
      }
        sub_21573BDA8(a1, prime);
    }
    unint64_t v10 = *(void *)(a1 + 8);
    unint64_t v29 = v10 - 1;
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
      {
        unint64_t v3 = v9 % v10;
        uint64_t v20 = *(void *)a1;
        uint64_t v21 = *(void **)(*(void *)a1 + 8 * (v9 % v10));
        if (v21) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v3 = v9;
        uint64_t v20 = *(void *)a1;
        uint64_t v21 = *(void **)(*(void *)a1 + 8 * v9);
        if (v21) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v3 = v29 & v9;
      uint64_t v20 = *(void *)a1;
      uint64_t v21 = *(void **)(*(void *)a1 + 8 * (v29 & v9));
      if (v21) {
        goto LABEL_26;
      }
    }
  }
  *uint64_t v17 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v17;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*v17)
  {
    unint64_t v30 = *(void *)(*v17 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v30 >= v10) {
        v30 %= v10;
      }
    }
    else
    {
      v30 &= v10 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v17;
}

void sub_21573C518(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_21573C52C(uint64_t a1, uint64_t a2, long long *a3)
{
  int8x8_t v5 = (unsigned char *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v8 = v7;
  }
  unint64_t v9 = sub_21573A6BC((uint64_t)v44, (uint64_t *)a2, v8);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v11) {
        unint64_t v3 = v9 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v9;
    }
    uint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      unint64_t v14 = (unsigned __int8 *)*v13;
      if (*v13)
      {
        char v15 = v5[23];
        if (v15 >= 0) {
          uint64_t v16 = v5[23];
        }
        else {
          uint64_t v16 = *((void *)v5 + 1);
        }
        if (v15 < 0) {
          int8x8_t v5 = *(unsigned char **)v5;
        }
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v21 = *((void *)v14 + 1);
            if (v21 == v10)
            {
              uint64_t v22 = v14[39];
              if ((v22 & 0x80u) == 0) {
                uint64_t v23 = v14[39];
              }
              else {
                uint64_t v23 = *((void *)v14 + 3);
              }
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp(*((const void **)v14 + 2), v5, *((void *)v14 + 3))) {
                    return v14;
                  }
                }
                else
                {
                  if (!v14[39]) {
                    return v14;
                  }
                  uint64_t v24 = 0;
                  while (v14[v24 + 16] == v5[v24])
                  {
                    if (v22 == ++v24) {
                      return v14;
                    }
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            unint64_t v14 = *(unsigned __int8 **)v14;
            if (!v14) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v17 = *((void *)v14 + 1);
          if (v17 == v10)
          {
            uint64_t v18 = v14[39];
            if ((v18 & 0x80u) == 0) {
              uint64_t v19 = v14[39];
            }
            else {
              uint64_t v19 = *((void *)v14 + 3);
            }
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp(*((const void **)v14 + 2), v5, *((void *)v14 + 3))) {
                  return v14;
                }
              }
              else
              {
                if (!v14[39]) {
                  return v14;
                }
                uint64_t v20 = 0;
                while (v14[v20 + 16] == v5[v20])
                {
                  if (v18 == ++v20) {
                    return v14;
                  }
                }
              }
            }
          }
          else
          {
            if (v17 >= v11) {
              v17 %= v11;
            }
            if (v17 != v3) {
              break;
            }
          }
          unint64_t v14 = *(unsigned __int8 **)v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  char v25 = (void *)(a1 + 16);
  unint64_t v14 = (unsigned __int8 *)operator new(0x30uLL);
  long long v26 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  uint64_t v27 = *((void *)a3 + 2);
  uint64_t v28 = *((void *)a3 + 3);
  *((void *)a3 + 2) = 0;
  *((void *)a3 + 3) = 0;
  v44[0] = v14;
  v44[1] = a1 + 16;
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = v10;
  *((_OWORD *)v14 + 1) = v26;
  *((void *)v14 + 4) = v27;
  *((void *)v14 + 5) = v28;
  char v45 = 1;
  float v29 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v30 = *(float *)(a1 + 32);
  if (v11 && (float)(v30 * (float)v11) >= v29)
  {
    uint64_t v31 = *(void *)a1;
    unint64_t v32 = *(void **)(*(void *)a1 + 8 * v3);
    if (v32)
    {
LABEL_54:
      *(void *)unint64_t v14 = *v32;
LABEL_89:
      *unint64_t v32 = v14;
      goto LABEL_90;
    }
  }
  else
  {
    BOOL v33 = 1;
    if (v11 >= 3) {
      BOOL v33 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v34 = v33 | (2 * v11);
    unint64_t v35 = vcvtps_u32_f32(v29 / v30);
    if (v34 <= v35) {
      size_t prime = v35;
    }
    else {
      size_t prime = v34;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v37 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v37) {
      goto LABEL_65;
    }
    if (prime < *(void *)&v37)
    {
      unint64_t v38 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v37 < 3uLL || (uint8x8_t v39 = (uint8x8_t)vcnt_s8(v37), v39.i16[0] = vaddlv_u8(v39), v39.u32[0] > 1uLL))
      {
        unint64_t v38 = std::__next_prime(v38);
      }
      else
      {
        uint64_t v40 = 1 << -(char)__clz(v38 - 1);
        if (v38 >= 2) {
          unint64_t v38 = v40;
        }
      }
      if (prime <= v38) {
        size_t prime = v38;
      }
      if (prime < *(void *)&v37) {
LABEL_65:
      }
        sub_21573BDA8(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v41 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v3 = v10 % v11;
        uint64_t v31 = *(void *)a1;
        unint64_t v32 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        if (v32) {
          goto LABEL_54;
        }
      }
      else
      {
        unint64_t v3 = v10;
        uint64_t v31 = *(void *)a1;
        unint64_t v32 = *(void **)(*(void *)a1 + 8 * v10);
        if (v32) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      unint64_t v3 = v41 & v10;
      uint64_t v31 = *(void *)a1;
      unint64_t v32 = *(void **)(*(void *)a1 + 8 * (v41 & v10));
      if (v32) {
        goto LABEL_54;
      }
    }
  }
  *(void *)unint64_t v14 = *v25;
  *char v25 = v14;
  *(void *)(v31 + 8 * v3) = v25;
  if (*(void *)v14)
  {
    unint64_t v42 = *(void *)(*(void *)v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v42 >= v11) {
        v42 %= v11;
      }
    }
    else
    {
      v42 &= v11 - 1;
    }
    unint64_t v32 = (void *)(*(void *)a1 + 8 * v42);
    goto LABEL_89;
  }
LABEL_90:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_21573C938(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573C950((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_21573C950(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v3 = *(void *)(v2 + 40);
      *(void *)(v2 + 40) = 0;
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
      if (*(char *)(v2 + 39) < 0) {
        operator delete(*(void **)(v2 + 16));
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

void sub_21573C9D0(void *a1, void *a2, unint64_t a3)
{
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  if (v7 == v6) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = ((v7 - v6) << 6) - 1;
  }
  uint64_t v9 = a1[5];
  unint64_t v10 = v9 + a1[4];
  unint64_t v11 = v8 - v10;
  if (a3 > v11)
  {
    sub_21573CB2C((uint64_t)a1, a3 - v11);
    uint64_t v9 = a1[5];
    uint64_t v6 = a1[1];
    uint64_t v7 = a1[2];
    unint64_t v10 = a1[4] + v9;
  }
  uint8x8_t v12 = (void *)(v6 + 8 * (v10 >> 9));
  if (v7 == v6)
  {
    uint64_t v13 = 0;
    if (a3) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t v16 = v13;
    char v15 = v12;
    goto LABEL_23;
  }
  uint64_t v13 = *v12 + 8 * (v10 & 0x1FF);
  if (!a3) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v14 = a3 + ((v13 - *v12) >> 3);
  if (v14 < 1)
  {
    unint64_t v17 = 511 - v14;
    LOWORD(v14) = ~(511 - v14);
    char v15 = &v12[-(v17 >> 9)];
  }
  else
  {
    char v15 = &v12[(unint64_t)v14 >> 9];
  }
  uint64_t v16 = *v15 + 8 * (v14 & 0x1FF);
LABEL_23:
  while (v13 != v16)
  {
    uint64_t v18 = v16;
    if (v12 != v15) {
      uint64_t v18 = *v12 + 4096;
    }
    if (v13 == v18)
    {
      a1[5] = v9;
      if (v12 == v15) {
        return;
      }
    }
    else
    {
      uint64_t v19 = (void *)v13;
      do
      {
        *v19++ = a2[2];
        a2 = (void *)*a2;
      }
      while (v19 != (void *)v18);
      uint64_t v9 = a1[5] + ((v18 - v13) >> 3);
      a1[5] = v9;
      if (v12 == v15) {
        return;
      }
    }
    uint64_t v20 = v12[1];
    ++v12;
    uint64_t v13 = v20;
  }
}

void sub_21573CB2C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(char **)(a1 + 16);
  uint64_t v4 = (uint64_t)&v3[-*(void *)(a1 + 8)];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if ((v5 & 0x1FF) != 0) {
    unint64_t v6 = (v5 >> 9) + 1;
  }
  else {
    unint64_t v6 = v5 >> 9;
  }
  unint64_t v7 = *(void *)(a1 + 32);
  if (v6 >= v7 >> 9) {
    unint64_t v8 = v7 >> 9;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 >> 9)
  {
    *(void *)(a1 + 32) = v7 - (v8 << 9);
    if (!v8) {
      return;
    }
    while (1)
    {
      char v15 = *(void **)(a1 + 8);
      uint64_t v16 = (char *)(v15 + 1);
      uint64_t v17 = *v15;
      *(void *)(a1 + 8) = v15 + 1;
      if (v3 == *(char **)(a1 + 24))
      {
        uint64_t v18 = *(char **)a1;
        if ((unint64_t)v16 <= *(void *)a1)
        {
          unint64_t v24 = (v3 - v18) >> 2;
          if (v3 == v18) {
            unint64_t v24 = 1;
          }
          if (v24 >> 61) {
            goto LABEL_161;
          }
          unint64_t v25 = v24 >> 2;
          uint64_t v26 = 8 * v24;
          uint64_t v27 = (char *)operator new(8 * v24);
          uint64_t v28 = &v27[8 * v25];
          int64_t v30 = v3 - v16;
          BOOL v29 = v3 == v16;
          uint64_t v3 = v28;
          if (!v29)
          {
            uint64_t v3 = &v28[v30 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v31 = v30 - 8;
            if ((unint64_t)(v30 - 8) < 0x38)
            {
              unint64_t v32 = &v27[8 * v25];
              goto LABEL_39;
            }
            unint64_t v32 = &v27[8 * v25];
            if ((unint64_t)(v32 - v16) < 0x20) {
              goto LABEL_167;
            }
            uint64_t v33 = (v31 >> 3) + 1;
            uint64_t v34 = 8 * (v33 & 0x3FFFFFFFFFFFFFFCLL);
            unint64_t v32 = &v28[v34];
            v16 += v34;
            unint64_t v35 = (long long *)(v15 + 3);
            uint64_t v36 = &v27[8 * v25 + 16];
            uint64_t v37 = v33 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v38 = *v35;
              *((_OWORD *)v36 - 1) = *(v35 - 1);
              *(_OWORD *)uint64_t v36 = v38;
              v35 += 2;
              v36 += 32;
              v37 -= 4;
            }
            while (v37);
            if (v33 != (v33 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_167:
              do
              {
LABEL_39:
                uint64_t v39 = *(void *)v16;
                v16 += 8;
                *(void *)unint64_t v32 = v39;
                v32 += 8;
              }
              while (v32 != v3);
            }
          }
          *(void *)a1 = v27;
          *(void *)(a1 + 8) = v28;
          *(void *)(a1 + 16) = v3;
          *(void *)(a1 + 24) = &v27[v26];
          if (v18)
          {
            operator delete(v18);
            uint64_t v3 = *(char **)(a1 + 16);
          }
          goto LABEL_21;
        }
        uint64_t v19 = (uint64_t)&v16[-*(void *)a1] >> 3;
        if (v19 >= -1) {
          uint64_t v20 = v19 + 1;
        }
        else {
          uint64_t v20 = v19 + 2;
        }
        uint64_t v21 = v20 >> 1;
        uint64_t v22 = &v16[-8 * (v20 >> 1)];
        int64_t v23 = v3 - v16;
        if (v3 != v16)
        {
          memmove(&v16[-8 * (v20 >> 1)], v16, v3 - v16);
          uint64_t v3 = *(char **)(a1 + 8);
        }
        uint64_t v14 = &v3[-8 * v21];
        uint64_t v3 = &v22[v23];
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = &v22[v23];
      }
LABEL_21:
      *(void *)uint64_t v3 = v17;
      uint64_t v3 = (char *)(*(void *)(a1 + 16) + 8);
      *(void *)(a1 + 16) = v3;
      if (!--v8) {
        return;
      }
    }
  }
  unint64_t v9 = v6 - v8;
  uint64_t v10 = *(void *)(a1 + 24) - *(void *)a1;
  uint64_t v11 = v4 >> 3;
  if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
  {
    if (v9)
    {
      while (*(void *)(a1 + 24) != *(void *)(a1 + 16))
      {
        v145 = operator new(0x1000uLL);
        sub_215739930((char **)a1, &v145);
        --v6;
        if (!--v9) {
          goto LABEL_136;
        }
      }
      for (uint64_t i = 0; i != v9; ++i)
      {
        v145 = operator new(0x1000uLL);
        sub_215739AC0((void **)a1, &v145);
        if (*(void *)(a1 + 16) - *(void *)(a1 + 8) == 8) {
          uint64_t v116 = 511;
        }
        else {
          uint64_t v116 = 512;
        }
        uint64_t v117 = v116 + *(void *)(a1 + 32);
        *(void *)(a1 + 32) = v117;
      }
      unint64_t v8 = v6;
      *(void *)(a1 + 32) = v117 - (v6 << 9);
      if (!v6) {
        return;
      }
    }
    else
    {
LABEL_136:
      *(void *)(a1 + 32) -= v8 << 9;
      if (!v8) {
        return;
      }
    }
    v118 = *(char **)(a1 + 16);
    while (1)
    {
      v120 = *(void **)(a1 + 8);
      v121 = (char *)(v120 + 1);
      uint64_t v122 = *v120;
      *(void *)(a1 + 8) = v120 + 1;
      if (v118 == *(char **)(a1 + 24))
      {
        v123 = *(char **)a1;
        if ((unint64_t)v121 <= *(void *)a1)
        {
          unint64_t v129 = (v118 - v123) >> 2;
          if (v118 == v123) {
            unint64_t v129 = 1;
          }
          if (v129 >> 61) {
            goto LABEL_161;
          }
          unint64_t v130 = v129 >> 2;
          uint64_t v131 = 8 * v129;
          v132 = (char *)operator new(8 * v129);
          v133 = &v132[8 * v130];
          int64_t v134 = v118 - v121;
          BOOL v29 = v118 == v121;
          v118 = v133;
          if (!v29)
          {
            v118 = &v133[v134 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v135 = v134 - 8;
            if ((unint64_t)(v134 - 8) < 0x38)
            {
              v136 = &v132[8 * v130];
              goto LABEL_157;
            }
            v136 = &v132[8 * v130];
            if ((unint64_t)(v136 - v121) < 0x20) {
              goto LABEL_168;
            }
            uint64_t v137 = (v135 >> 3) + 1;
            uint64_t v138 = 8 * (v137 & 0x3FFFFFFFFFFFFFFCLL);
            v136 = &v133[v138];
            v121 += v138;
            v139 = (long long *)(v120 + 3);
            v140 = &v132[8 * v130 + 16];
            uint64_t v141 = v137 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v142 = *v139;
              *((_OWORD *)v140 - 1) = *(v139 - 1);
              *(_OWORD *)v140 = v142;
              v139 += 2;
              v140 += 32;
              v141 -= 4;
            }
            while (v141);
            if (v137 != (v137 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_168:
              do
              {
LABEL_157:
                uint64_t v143 = *(void *)v121;
                v121 += 8;
                *(void *)v136 = v143;
                v136 += 8;
              }
              while (v136 != v118);
            }
          }
          *(void *)a1 = v132;
          *(void *)(a1 + 8) = v133;
          *(void *)(a1 + 16) = v118;
          *(void *)(a1 + 24) = &v132[v131];
          if (v123)
          {
            operator delete(v123);
            v118 = *(char **)(a1 + 16);
          }
          goto LABEL_139;
        }
        uint64_t v124 = (uint64_t)&v121[-*(void *)a1] >> 3;
        if (v124 >= -1) {
          uint64_t v125 = v124 + 1;
        }
        else {
          uint64_t v125 = v124 + 2;
        }
        uint64_t v126 = v125 >> 1;
        v127 = &v121[-8 * (v125 >> 1)];
        int64_t v128 = v118 - v121;
        if (v118 != v121)
        {
          memmove(&v121[-8 * (v125 >> 1)], v121, v118 - v121);
          v118 = *(char **)(a1 + 8);
        }
        v119 = &v118[-8 * v126];
        v118 = &v127[v128];
        *(void *)(a1 + 8) = v119;
        *(void *)(a1 + 16) = &v127[v128];
      }
LABEL_139:
      *(void *)v118 = v122;
      v118 = (char *)(*(void *)(a1 + 16) + 8);
      *(void *)(a1 + 16) = v118;
      if (!--v8) {
        return;
      }
    }
  }
  if (v10 >> 2 <= v9 + v11) {
    unint64_t v12 = v9 + v11;
  }
  else {
    unint64_t v12 = v10 >> 2;
  }
  if (v12)
  {
    if (v12 >> 61) {
LABEL_161:
    }
      sub_215738AD8();
    uint64_t v13 = (char *)operator new(8 * v12);
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v144 = v8 << 9;
  uint64_t v40 = &v13[8 * (v11 - v8)];
  unint64_t v41 = &v13[8 * v12];
  unint64_t v42 = v40;
  unint64_t v43 = v13;
  do
  {
    uint64_t v44 = operator new(0x1000uLL);
    if (v42 != v41) {
      goto LABEL_49;
    }
    if (v40 > v43)
    {
      char v45 = v43;
      uint64_t v46 = (v40 - v43) >> 3;
      if (v46 >= -1) {
        uint64_t v47 = v46 + 1;
      }
      else {
        uint64_t v47 = v46 + 2;
      }
      uint64_t v48 = v47 >> 1;
      uint64_t v49 = &v40[-8 * (v47 >> 1)];
      uint64_t v50 = v41;
      if (v41 != v40)
      {
        memmove(v49, v40, v41 - v40);
        uint64_t v50 = v40;
      }
      unint64_t v42 = &v49[v41 - v40];
      uint64_t v40 = &v50[-8 * v48];
      unint64_t v43 = v45;
      goto LABEL_49;
    }
    if (v41 == v43) {
      unint64_t v51 = 1;
    }
    else {
      unint64_t v51 = (v41 - v43) >> 2;
    }
    if (v51 >> 61) {
      sub_215738AD8();
    }
    uint64_t v52 = (char *)operator new(8 * v51);
    uint64_t v53 = v43;
    unint64_t v54 = v51 >> 2;
    uint64_t v55 = &v52[8 * (v51 >> 2)];
    unint64_t v42 = v55;
    int64_t v56 = v41 - v40;
    if (v41 != v40)
    {
      unint64_t v42 = &v55[v56 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v57 = v56 - 8;
      if (v57 >= 0x38 && (uint64_t v58 = 8 * v54, (unint64_t)(&v52[8 * v54] - v40) >= 0x20))
      {
        uint64_t v62 = (v57 >> 3) + 1;
        uint64_t v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
        unint64_t v59 = &v55[v63];
        unint64_t v60 = &v40[v63];
        uint64_t v64 = (long long *)(v40 + 16);
        v65 = &v52[v58 + 16];
        uint64_t v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v67 = *v64;
          *((_OWORD *)v65 - 1) = *(v64 - 1);
          *(_OWORD *)v65 = v67;
          v64 += 2;
          v65 += 32;
          v66 -= 4;
        }
        while (v66);
        if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_66;
        }
      }
      else
      {
        unint64_t v59 = &v52[8 * (v51 >> 2)];
        unint64_t v60 = v40;
      }
      do
      {
        uint64_t v61 = *(void *)v60;
        v60 += 8;
        *(void *)unint64_t v59 = v61;
        v59 += 8;
      }
      while (v59 != v42);
    }
LABEL_66:
    unint64_t v41 = &v52[8 * v51];
    if (v53) {
      operator delete(v53);
    }
    uint64_t v40 = &v52[8 * (v51 >> 2)];
    unint64_t v43 = v52;
LABEL_49:
    *(void *)unint64_t v42 = v44;
    v42 += 8;
    --v9;
  }
  while (v9);
  uint64_t v68 = *(void **)(a1 + 8);
  if (v8)
  {
    while (1)
    {
      if (v42 == v41)
      {
        if (v40 <= v43)
        {
          if (v41 == v43) {
            unint64_t v78 = 1;
          }
          else {
            unint64_t v78 = (v41 - v43) >> 2;
          }
          if (v78 >> 61) {
            sub_215738AD8();
          }
          uint64_t v79 = (char *)operator new(8 * v78);
          long long v80 = v79;
          unint64_t v81 = v78 >> 2;
          unint64_t v69 = &v79[8 * (v78 >> 2)];
          unint64_t v42 = v69;
          int64_t v82 = v41 - v40;
          if (v41 != v40)
          {
            unint64_t v42 = &v69[v82 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v83 = v82 - 8;
            if (v83 < 0x38 || (uint64_t v84 = 8 * v81, (unint64_t)(&v79[8 * v81] - v40) < 0x20))
            {
              v85 = &v79[8 * (v78 >> 2)];
              v86 = v40;
              goto LABEL_98;
            }
            uint64_t v88 = (v83 >> 3) + 1;
            uint64_t v89 = 8 * (v88 & 0x3FFFFFFFFFFFFFFCLL);
            v85 = &v69[v89];
            v86 = &v40[v89];
            v90 = (long long *)(v40 + 16);
            v91 = &v79[v84 + 16];
            uint64_t v92 = v88 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v93 = *v90;
              *((_OWORD *)v91 - 1) = *(v90 - 1);
              *(_OWORD *)v91 = v93;
              v90 += 2;
              v91 += 32;
              v92 -= 4;
            }
            while (v92);
            if (v88 != (v88 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_98:
                uint64_t v87 = *(void *)v86;
                v86 += 8;
                *(void *)v85 = v87;
                v85 += 8;
              }
              while (v85 != v42);
            }
          }
          unint64_t v41 = &v79[8 * v78];
          if (v43) {
            operator delete(v43);
          }
          unint64_t v43 = v80;
          goto LABEL_81;
        }
        long long v72 = v43;
        uint64_t v73 = (v40 - v43) >> 3;
        if (v73 >= -1) {
          uint64_t v74 = v73 + 1;
        }
        else {
          uint64_t v74 = v73 + 2;
        }
        uint64_t v75 = v74 >> 1;
        uint64_t v76 = &v40[-8 * (v74 >> 1)];
        v77 = v41;
        if (v41 != v40)
        {
          memmove(v76, v40, v41 - v40);
          v77 = v40;
        }
        unint64_t v42 = &v76[v41 - v40];
        unint64_t v69 = &v77[-8 * v75];
        unint64_t v43 = v72;
      }
      else
      {
        unint64_t v69 = v40;
      }
LABEL_81:
      *(void *)unint64_t v42 = *v68;
      v42 += 8;
      uint64_t v68 = (void *)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v68;
      uint64_t v40 = v69;
      if (!--v8) {
        goto LABEL_75;
      }
    }
  }
  unint64_t v69 = v40;
LABEL_75:
  int v70 = *(void **)(a1 + 16);
  if (v70 != v68)
  {
    do
    {
      if (v69 == v43)
      {
        if (v42 >= v41)
        {
          if (v41 == v43) {
            unint64_t v100 = 1;
          }
          else {
            unint64_t v100 = (v41 - v43) >> 2;
          }
          if (v100 >> 61) {
            sub_215738AD8();
          }
          v101 = (char *)operator new(8 * v100);
          v97 = v101;
          unint64_t v102 = (v100 + 3) >> 2;
          unint64_t v69 = &v101[8 * v102];
          int64_t v103 = v42 - v43;
          BOOL v29 = v42 == v43;
          unint64_t v42 = v69;
          if (!v29)
          {
            unint64_t v42 = &v69[v103 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v104 = v103 - 8;
            v105 = &v101[8 * v102];
            v106 = v43;
            if (v104 < 0x38) {
              goto LABEL_169;
            }
            uint64_t v107 = 8 * v102;
            v105 = &v101[8 * v102];
            v106 = v43;
            if ((unint64_t)(v105 - v43) < 0x20) {
              goto LABEL_169;
            }
            uint64_t v108 = (v104 >> 3) + 1;
            uint64_t v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
            v105 = &v69[v109];
            v106 = &v43[v109];
            v110 = (long long *)(v43 + 16);
            v111 = &v101[v107 + 16];
            uint64_t v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v113 = *v110;
              *((_OWORD *)v111 - 1) = *(v110 - 1);
              *(_OWORD *)v111 = v113;
              v110 += 2;
              v111 += 32;
              v112 -= 4;
            }
            while (v112);
            if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_169:
              do
              {
                uint64_t v114 = *(void *)v106;
                v106 += 8;
                *(void *)v105 = v114;
                v105 += 8;
              }
              while (v105 != v42);
            }
          }
          unint64_t v41 = &v101[8 * v100];
          if (v43) {
            operator delete(v43);
          }
        }
        else
        {
          uint64_t v95 = (v41 - v42) >> 3;
          if (v95 >= -1) {
            uint64_t v96 = v95 + 1;
          }
          else {
            uint64_t v96 = v95 + 2;
          }
          v97 = v43;
          uint64_t v98 = v96 >> 1;
          unint64_t v69 = &v97[8 * (v96 >> 1)];
          v99 = v97;
          if (v42 != v97)
          {
            memmove(v69, v97, v42 - v97);
            v99 = v42;
          }
          unint64_t v42 = &v99[8 * v98];
        }
        unint64_t v43 = v97;
      }
      uint64_t v94 = *--v70;
      *((void *)v69 - 1) = v94;
      v69 -= 8;
    }
    while (v70 != *(void **)(a1 + 8));
  }
  uint64_t v71 = *(char **)a1;
  *(void *)a1 = v43;
  *(void *)(a1 + 8) = v69;
  *(void *)(a1 + 16) = v42;
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) -= v144;
  if (v71)
  {
    operator delete(v71);
  }
}

void sub_21573D42C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_21573D478()
{
}

uint64_t sub_21573D498(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void ***)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = *(void ***)(a1 + 16);
      uint64_t v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    uint64_t v6 = 512;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      unint64_t v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v9) {
      *(void *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_21573D564(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21573D59C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_21573D5CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4tlog15ConsoleAppenderEE27__shared_ptr_default_deleteIS2_S2_EE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4tlog15ConsoleAppenderEE27__shared_ptr_default_deleteIS2_S2_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4tlog15ConsoleAppenderEE27__shared_ptr_default_deleteIS2_S2_EE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4tlog15ConsoleAppenderEE27__shared_ptr_default_deleteIS2_S2_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t *sub_21573D640(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *((char *)a2 + 23);
    if (v7 >= 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = *a2;
    }
    if (v7 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    while (1)
    {
      uint64_t v10 = (uint64_t **)v5;
      uint64_t v13 = (const void *)v5[4];
      uint64_t v11 = v5 + 4;
      unint64_t v12 = v13;
      int v14 = *((char *)v11 + 23);
      if (v14 >= 0) {
        char v15 = v11;
      }
      else {
        char v15 = v12;
      }
      if (v14 >= 0) {
        size_t v16 = *((unsigned __int8 *)v11 + 23);
      }
      else {
        size_t v16 = v11[1];
      }
      if (v16 >= v9) {
        size_t v17 = v9;
      }
      else {
        size_t v17 = v16;
      }
      int v18 = memcmp(v8, v15, v17);
      if (v18)
      {
        if (v18 < 0) {
          goto LABEL_8;
        }
LABEL_22:
        int v19 = memcmp(v15, v8, v17);
        if (v19)
        {
          if ((v19 & 0x80000000) == 0) {
            return (uint64_t *)v10;
          }
        }
        else if (v16 >= v9)
        {
          return (uint64_t *)v10;
        }
        unint64_t v5 = v10[1];
        if (!v5)
        {
          uint64_t v6 = v10 + 1;
LABEL_28:
          uint64_t v20 = (uint64_t *)operator new(0x38uLL);
          uint64_t v21 = v20 + 4;
          if (*(char *)(a3 + 23) < 0) {
            goto LABEL_31;
          }
LABEL_29:
          *(_OWORD *)uint64_t v21 = *(_OWORD *)a3;
          v21[2] = *(void *)(a3 + 16);
          goto LABEL_32;
        }
      }
      else
      {
        if (v9 >= v16) {
          goto LABEL_22;
        }
LABEL_8:
        unint64_t v5 = *v10;
        uint64_t v6 = v10;
        if (!*v10) {
          goto LABEL_28;
        }
      }
    }
  }
  uint64_t v10 = a1 + 1;
  uint64_t v20 = (uint64_t *)operator new(0x38uLL);
  uint64_t v21 = v20 + 4;
  if ((*(char *)(a3 + 23) & 0x80000000) == 0) {
    goto LABEL_29;
  }
LABEL_31:
  sub_215738B0C(v21, *(void **)a3, *(void *)(a3 + 8));
LABEL_32:
  *uint64_t v20 = 0;
  v20[1] = 0;
  v20[2] = (uint64_t)v10;
  *uint64_t v6 = v20;
  uint64_t v22 = (uint64_t *)**a1;
  int64_t v23 = v20;
  if (v22)
  {
    *a1 = v22;
    int64_t v23 = *v6;
  }
  sub_21573B048(a1[1], v23);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v20;
}

void sub_21573D7C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_21573D7DC()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &unk_26C6565A8;
  __cxa_throw(exception, (struct type_info *)&unk_26C656580, (void (*)(void *))std::exception::~exception);
}

void sub_21573D82C(std::exception *a1)
{
  std::exception::~exception(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21573D864(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (const void **)(a1 + 8);
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 32)) {
    BOOL v3 = *(unsigned char *)(a2 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return (*(unsigned char *)(a1 + 32) != 0) == (*(unsigned char *)(a2 + 32) != 0);
  }
  uint64_t v5 = *(unsigned __int8 *)(a1 + 31);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 31);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (v6 != v7) {
    return 0;
  }
  if (v8 >= 0) {
    size_t v9 = (unsigned __int8 *)(a2 + 8);
  }
  else {
    size_t v9 = *(unsigned __int8 **)(a2 + 8);
  }
  if ((v5 & 0x80) != 0) {
    return memcmp(*v2, v9, *(void *)(a1 + 16)) == 0;
  }
  if (!*(unsigned char *)(a1 + 31)) {
    return 1;
  }
  uint64_t v10 = v5 - 1;
  do
  {
    int v12 = *(unsigned __int8 *)v2;
    uint64_t v2 = (const void **)((char *)v2 + 1);
    int v11 = v12;
    int v14 = *v9++;
    int v13 = v14;
    BOOL v16 = v10-- != 0;
    uint64_t result = v11 == v13;
  }
  while (v11 == v13 && v16);
  return result;
}

int *sub_21573D95C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AA40))
  {
    return &dword_26788AA48;
  }
  sub_21573D9FC();
  __cxa_atexit((void (*)(void *))sub_21573DC00, &dword_26788AA48, &dword_21572C000);
  __cxa_guard_release(&qword_26788AA40);
  return &dword_26788AA48;
}

void sub_21573D9E4(_Unwind_Exception *a1)
{
}

double sub_21573D9FC()
{
  LOBYTE(xmmword_26788AA50) = 0;
  byte_26788AA68 = 0;
  dword_26788AA48 = getpid();
  uint64_t v0 = [MEMORY[0x263F08AB0] processInfo];
  id v1 = [v0 processName];
  uint64_t v2 = (const char *)[v1 UTF8String];
  size_t v3 = strlen(v2);
  if (v3 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  unint64_t v4 = (void *)v3;
  if (v3 >= 0x17)
  {
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v7 = v3 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v5 = operator new(v7 + 1);
    __p[1] = v4;
    unint64_t v10 = v8 | 0x8000000000000000;
    __p[0] = v5;
LABEL_12:
    memmove(v5, v2, (size_t)v4);
    *((unsigned char *)v4 + (void)v5) = 0;

    if (byte_26788AA68) {
      goto LABEL_5;
    }
LABEL_13:
    double result = *(double *)__p;
    xmmword_26788AA50 = *(_OWORD *)__p;
    unk_26788AA60 = v10;
    __p[1] = 0;
    unint64_t v10 = 0;
    __p[0] = 0;
    byte_26788AA68 = 1;
    return result;
  }
  HIBYTE(v10) = v3;
  uint64_t v5 = __p;
  if (v3) {
    goto LABEL_12;
  }
  LOBYTE(__p[0]) = 0;

  if (!byte_26788AA68) {
    goto LABEL_13;
  }
LABEL_5:
  if (byte_26788AA67 < 0) {
    operator delete((void *)xmmword_26788AA50);
  }
  double result = *(double *)__p;
  xmmword_26788AA50 = *(_OWORD *)__p;
  unk_26788AA60 = v10;
  HIBYTE(v10) = 0;
  LOBYTE(__p[0]) = 0;
  return result;
}

void sub_21573DBB4(_Unwind_Exception *a1)
{
  if (byte_26788AA68)
  {
    if (byte_26788AA67 < 0) {
      operator delete((void *)xmmword_26788AA50);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21573DC00(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 32))
  {
    if (*(char *)(result + 31) < 0)
    {
      operator delete(*(void **)(result + 8));
      return v1;
    }
  }
  return result;
}

void sub_21573DC4C(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA78))
  {
    sub_215732BF4(__p, "cv3dapi.visual_logger");
    sub_21573DD40((uint64_t)__p, &qword_26788AA70);
    if (v3 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit((void (*)(void *))nullsub_3, &qword_26788AA70, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA78);
  }
  *a1 = qword_26788AA70;
}

void sub_21573DD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788AA78);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788AA78);
  _Unwind_Resume(a1);
}

void sub_21573DD40(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_215973BF0(&v4);
  sub_2157371C4(&v4, a1, a2);
}

uint64_t sub_21573DD88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA88))
  {
    __cxa_atexit(MEMORY[0x263F8C118], &stru_267883738, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA88);
  }
  std::mutex::lock(&stru_267883738);
  uint64_t v0 = qword_26788AA80++;
  std::mutex::unlock(&stru_267883738);
  return v0;
}

void VZErrorEnableLogging_0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA90))
  {
    __cxa_atexit((void (*)(void *))sub_2157412CC, &unk_267883778, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA90);
  }
  std::mutex::lock(&stru_267883828);
  byte_2678837F9 = 1;

  std::mutex::unlock(&stru_267883828);
}

void VZErrorDisableLogging_0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA90))
  {
    __cxa_atexit((void (*)(void *))sub_2157412CC, &unk_267883778, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA90);
  }
  std::mutex::lock(&stru_267883828);
  byte_2678837F9 = 0;

  std::mutex::unlock(&stru_267883828);
}

void VZErrorSetGlobalErrorHandlerFunction_0(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA90))
  {
    __cxa_atexit((void (*)(void *))sub_2157412CC, &unk_267883778, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA90);
  }
  std::mutex::lock(&stru_267883828);
  if (a2) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = 0;
  }
  qword_267883800 = v4;
  *(void *)algn_267883808 = a2;
  byte_267883810 = a2 != 0;
  uint64_t v5 = (std::__shared_weak_count *)off_267883820;
  off_267883818 = 0;
  off_267883820 = 0;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::mutex::unlock(&stru_267883828);
}

void sub_21573E088(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA90))
  {
    __cxa_atexit((void (*)(void *))sub_2157412CC, &unk_267883778, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA90);
  }
  char v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  std::mutex::lock(&stru_267883828);
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = (std::__shared_weak_count *)off_267883820;
  off_267883818 = v3;
  off_267883820 = (_UNKNOWN *)v2;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  if (byte_267883810) {
    byte_267883810 = 0;
  }
  std::mutex::unlock(&stru_267883828);
  if (v2 && !atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v2);
  }
}

void sub_21573E208(long long *a1, uint64_t a2)
{
  uint64_t v107 = *MEMORY[0x263EF8340];
  if (a2) {
    sub_215DD8704((uint64_t)&v81, (uint64_t)a1);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AA90))
  {
    __cxa_atexit((void (*)(void *))sub_2157412CC, &unk_267883778, &dword_21572C000);
    __cxa_guard_release(&qword_26788AA90);
  }
  std::mutex::lock(&stru_267883828);
  if (!byte_2678837F8)
  {
    if (!byte_2678837F9)
    {
LABEL_172:
      if (off_267883818) {
        sub_215DD8704((uint64_t)&v81, (uint64_t)a1);
      }
      if (byte_267883810) {
        sub_215DD8704((uint64_t)&v81, (uint64_t)a1);
      }
      goto LABEL_176;
    }
    sub_215971160((uint64_t *)v99);
    sub_215972370(v99[0], 3);
    if (sub_215964068((uint64_t)a1))
    {
      sub_21573DC4C(&v98);
      if (**(int **)(v98 + 56) <= 4)
      {
        int v3 = *(unsigned __int8 *)(v98 + 72);
        unint64_t v4 = sub_2157362A4(v98, "OSLogSurrogateAppender", 1, 0);
        unint64_t v5 = v4;
        if (v3 || v4)
        {
          sub_2157328B8((uint64_t)&v81);
          sub_215E10780((uint64_t)a1, &v100);
          if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v6 = &v100;
          }
          else {
            uint64_t v6 = (std::string *)v100.__r_.__value_.__r.__words[0];
          }
          if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v100.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v100.__r_.__value_.__l.__size_;
          }
          sub_215731D94(__p, (uint64_t)v6, size);
          if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v100.__r_.__value_.__l.__data_);
          }
          unint64_t v67 = v5;
          if ((v96 & 0x10) != 0)
          {
            unint64_t v17 = v95;
            if (v95 < v89)
            {
              unint64_t v95 = v89;
              unint64_t v17 = v89;
            }
            int v18 = (const void **)v87;
          }
          else
          {
            if ((v96 & 8) == 0)
            {
              size_t v8 = 0;
              HIBYTE(v80) = 0;
              p_dst = (void **)&__dst;
              goto LABEL_63;
            }
            int v18 = (const void **)&v84;
            unint64_t v17 = v86;
          }
          uint64_t v21 = *v18;
          size_t v8 = v17 - (void)*v18;
          if (v8 <= 0x7FFFFFFFFFFFFFF7)
          {
            if (v8 >= 0x17)
            {
              uint64_t v22 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v8 | 7) != 0x17) {
                uint64_t v22 = v8 | 7;
              }
              uint64_t v23 = v22 + 1;
              p_dst = (void **)operator new(v22 + 1);
              size_t v79 = v8;
              int64_t v80 = v23 | 0x8000000000000000;
              long long __dst = p_dst;
            }
            else
            {
              HIBYTE(v80) = v17 - *(unsigned char *)v18;
              p_dst = (void **)&__dst;
              if (!v8)
              {
LABEL_63:
                *((unsigned char *)p_dst + v8) = 0;
                unint64_t v69 = &v98;
                std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = std::chrono::steady_clock::now().__d_.__rep_;
                std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v71 = std::chrono::system_clock::now().__d_.__rep_;
                int v72 = 4;
                uint64_t v73 = "unknown file";
                int v74 = 75;
                uint64_t v76 = 0;
                v77 = 0;
                uint64_t v75 = "unknown function";
                if (v80 >= 0) {
                  unint64_t v24 = (void **)&__dst;
                }
                else {
                  unint64_t v24 = __dst;
                }
                uint64_t v25 = *v69;
                uint64_t v26 = (const char *)(*v69 + 16);
                if (*(char *)(*v69 + 39) < 0)
                {
                  uint64_t v26 = *(const char **)(v25 + 16);
                  size_t v27 = *(void *)(v25 + 24);
                }
                else
                {
                  size_t v27 = *(unsigned __int8 *)(*v69 + 39);
                }
                int v28 = v3;
                if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883880, memory_order_acquire) & 1) == 0
                  && __cxa_guard_acquire(&qword_267883880))
                {
                  sub_215E0EFD4((uint64_t)&v100);
                  sub_2157420B4("com.apple.cv3d", (unint64_t)&v100, &qword_267883868);
                  if ((_BYTE)v101 && SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v100.__r_.__value_.__l.__data_);
                  }
                  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883868, &dword_21572C000);
                  __cxa_guard_release(&qword_267883880);
                }
                if (byte_26788387F >= 0) {
                  BOOL v29 = (const char *)&qword_267883868;
                }
                else {
                  BOOL v29 = (const char *)qword_267883868;
                }
                if (byte_26788387F >= 0) {
                  size_t v30 = byte_26788387F;
                }
                else {
                  size_t v30 = unk_267883870;
                }
                v100.__r_.__value_.__r.__words[0] = (std::string::size_type)os_log_create(v29, v26);
                p_std::string::size_type size = &v100.__r_.__value_.__l.__size_;
                if (v30 > 0x7FFFFFFFFFFFFFF7) {
                  sub_215731CD8();
                }
                if (v30 >= 0x17)
                {
                  uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v30 | 7) != 0x17) {
                    uint64_t v32 = v30 | 7;
                  }
                  uint64_t v33 = v32 + 1;
                  p_std::string::size_type size = (std::string::size_type *)operator new(v32 + 1);
                  v100.__r_.__value_.__r.__words[2] = v30;
                  unint64_t v101 = v33 | 0x8000000000000000;
                  v100.__r_.__value_.__l.__size_ = (std::string::size_type)p_size;
                }
                else
                {
                  HIBYTE(v101) = v30;
                  if (!v30)
                  {
LABEL_84:
                    *((unsigned char *)p_size + v30) = 0;
                    LOBYTE(v102) = 1;
                    uint64_t v34 = (void **)&v103;
                    if (v27 > 0x7FFFFFFFFFFFFFF7) {
                      sub_215731CD8();
                    }
                    int v35 = v28;
                    if (v27 >= 0x17)
                    {
                      uint64_t v38 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v27 | 7) != 0x17) {
                        uint64_t v38 = v27 | 7;
                      }
                      uint64_t v39 = v38 + 1;
                      uint64_t v34 = (void **)operator new(v38 + 1);
                      std::string::size_type v36 = (std::string::size_type)v24;
                      size_t v104 = v27;
                      unint64_t v105 = v39 | 0x8000000000000000;
                      int64_t v103 = v34;
                      unint64_t v37 = v67;
                    }
                    else
                    {
                      HIBYTE(v105) = v27;
                      std::string::size_type v36 = (std::string::size_type)v24;
                      unint64_t v37 = v67;
                      if (!v27) {
                        goto LABEL_92;
                      }
                    }
                    memmove(v34, v26, v27);
LABEL_92:
                    *((unsigned char *)v34 + v27) = 0;
                    char v106 = 1;
                    uint64_t v40 = v100.__r_.__value_.__r.__words[0];
                    if (SHIBYTE(v105) < 0) {
                      operator delete(v103);
                    }
                    if ((_BYTE)v102 && SHIBYTE(v101) < 0) {
                      operator delete((void *)v100.__r_.__value_.__l.__size_);
                    }
                    if (v100.__r_.__value_.__r.__words[0]) {
                      os_release(v100.__r_.__value_.__l.__data_);
                    }
                    if (v37 && *(void *)(v37 + 24))
                    {
                      _os_log_pack_size();
                      MEMORY[0x2166C4D30]();
                      operator new();
                    }
                    os_log_type_enabled(v40, OS_LOG_TYPE_ERROR);
                    LODWORD(v100.__r_.__value_.__l.__data_) = 136315138;
                    *(std::string::size_type *)((char *)v100.__r_.__value_.__r.__words + 4) = v36;
                    unint64_t v41 = (void *)_os_log_send_and_compose_impl();
                    if (v41) {
                      free(v41);
                    }
                    if (v35)
                    {
                      uint64_t v63 = (const char *)&__dst;
                      if (v80 < 0) {
                        uint64_t v63 = (const char *)__dst;
                      }
                      sub_21573230C((uint64_t)&v69, "%s", v63);
                      sub_215741D8C((uint64_t)&v69);
                    }
LABEL_163:
                    sub_215741D8C((uint64_t)&v69);
                    v65 = v77;
                    if (v77 && !atomic_fetch_add(&v77->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                    {
                      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                      std::__shared_weak_count::__release_weak(v65);
                    }
                    if (SHIBYTE(v80) < 0) {
                      operator delete(__dst);
                    }
                    *(void *)&long long v81 = *MEMORY[0x263F8C2B8];
                    uint64_t v66 = *(void **)(MEMORY[0x263F8C2B8] + 72);
                    *(void **)((char *)&__p[-2] + *(void *)(v81 - 24)) = *(void **)(MEMORY[0x263F8C2B8] + 64);
                    __p[0] = v66;
                    __p[1] = (void *)(MEMORY[0x263F8C318] + 16);
                    if (v94 < 0) {
                      operator delete(v91);
                    }
                    std::streambuf::~streambuf();
                    std::iostream::~basic_iostream();
                    MEMORY[0x2166C4BF0](&v97);
                    goto LABEL_171;
                  }
                }
                memmove(p_size, v29, v30);
                goto LABEL_84;
              }
            }
            memmove(p_dst, v21, v8);
            goto LABEL_63;
          }
LABEL_180:
          sub_215731CD8();
        }
      }
LABEL_171:
      sub_215970F80((uint64_t)v99);
      goto LABEL_172;
    }
    sub_21573DC4C(&v98);
    if (**(int **)(v98 + 56) > 5) {
      goto LABEL_171;
    }
    int v10 = *(unsigned __int8 *)(v98 + 72);
    unint64_t v11 = sub_2157362A4(v98, "OSLogSurrogateAppender", 1, 0);
    unint64_t v12 = v11;
    if (!v10 && !v11) {
      goto LABEL_171;
    }
    sub_2157328B8((uint64_t)&v81);
    sub_215E10780((uint64_t)a1, &v100);
    if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &v100;
    }
    else {
      int v13 = (std::string *)v100.__r_.__value_.__r.__words[0];
    }
    if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = HIBYTE(v100.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v14 = v100.__r_.__value_.__l.__size_;
    }
    sub_215731D94(__p, (uint64_t)v13, v14);
    if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v100.__r_.__value_.__l.__data_);
    }
    unint64_t v68 = v12;
    if ((v96 & 0x10) != 0)
    {
      unint64_t v19 = v95;
      if (v95 < v89)
      {
        unint64_t v95 = v89;
        unint64_t v19 = v89;
      }
      uint64_t v20 = (const void **)v87;
    }
    else
    {
      if ((v96 & 8) == 0)
      {
        size_t v15 = 0;
        HIBYTE(v80) = 0;
        BOOL v16 = (void **)&__dst;
        goto LABEL_113;
      }
      uint64_t v20 = (const void **)&v84;
      unint64_t v19 = v86;
    }
    unint64_t v42 = *v20;
    size_t v15 = v19 - (void)*v20;
    if (v15 > 0x7FFFFFFFFFFFFFF7) {
      goto LABEL_180;
    }
    if (v15 >= 0x17)
    {
      uint64_t v43 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v15 | 7) != 0x17) {
        uint64_t v43 = v15 | 7;
      }
      uint64_t v44 = v43 + 1;
      BOOL v16 = (void **)operator new(v43 + 1);
      size_t v79 = v15;
      int64_t v80 = v44 | 0x8000000000000000;
      long long __dst = v16;
    }
    else
    {
      HIBYTE(v80) = v19 - *(unsigned char *)v20;
      BOOL v16 = (void **)&__dst;
      if (!v15)
      {
LABEL_113:
        *((unsigned char *)v16 + v15) = 0;
        unint64_t v69 = &v98;
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = std::chrono::steady_clock::now().__d_.__rep_;
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v71 = std::chrono::system_clock::now().__d_.__rep_;
        int v72 = 5;
        uint64_t v73 = "unknown file";
        int v74 = 72;
        uint64_t v76 = 0;
        v77 = 0;
        uint64_t v75 = "unknown function";
        if (v80 >= 0) {
          char v45 = (void **)&__dst;
        }
        else {
          char v45 = __dst;
        }
        uint64_t v46 = *v69;
        uint64_t v47 = (const char *)(*v69 + 16);
        if (*(char *)(*v69 + 39) < 0)
        {
          uint64_t v47 = *(const char **)(v46 + 16);
          size_t v48 = *(void *)(v46 + 24);
        }
        else
        {
          size_t v48 = *(unsigned __int8 *)(*v69 + 39);
        }
        int v49 = v10;
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883880, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267883880))
        {
          sub_215E0EFD4((uint64_t)&v100);
          sub_2157420B4("com.apple.cv3d", (unint64_t)&v100, &qword_267883868);
          if ((_BYTE)v101 && SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v100.__r_.__value_.__l.__data_);
          }
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883868, &dword_21572C000);
          __cxa_guard_release(&qword_267883880);
        }
        if (byte_26788387F >= 0) {
          uint64_t v50 = (const char *)&qword_267883868;
        }
        else {
          uint64_t v50 = (const char *)qword_267883868;
        }
        if (byte_26788387F >= 0) {
          size_t v51 = byte_26788387F;
        }
        else {
          size_t v51 = unk_267883870;
        }
        v100.__r_.__value_.__r.__words[0] = (std::string::size_type)os_log_create(v50, v47);
        uint64_t v52 = &v100.__r_.__value_.__l.__size_;
        if (v51 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        if (v51 >= 0x17)
        {
          uint64_t v53 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v51 | 7) != 0x17) {
            uint64_t v53 = v51 | 7;
          }
          uint64_t v54 = v53 + 1;
          uint64_t v52 = (std::string::size_type *)operator new(v53 + 1);
          v100.__r_.__value_.__r.__words[2] = v51;
          unint64_t v101 = v54 | 0x8000000000000000;
          v100.__r_.__value_.__l.__size_ = (std::string::size_type)v52;
        }
        else
        {
          HIBYTE(v101) = v51;
          if (!v51)
          {
LABEL_134:
            *((unsigned char *)v52 + v51) = 0;
            LOBYTE(v102) = 1;
            uint64_t v55 = (void **)&v103;
            if (v48 > 0x7FFFFFFFFFFFFFF7) {
              sub_215731CD8();
            }
            int v56 = v49;
            if (v48 >= 0x17)
            {
              uint64_t v59 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v48 | 7) != 0x17) {
                uint64_t v59 = v48 | 7;
              }
              uint64_t v60 = v59 + 1;
              uint64_t v55 = (void **)operator new(v59 + 1);
              std::string::size_type v57 = (std::string::size_type)v45;
              size_t v104 = v48;
              unint64_t v105 = v60 | 0x8000000000000000;
              int64_t v103 = v55;
              unint64_t v58 = v68;
            }
            else
            {
              HIBYTE(v105) = v48;
              std::string::size_type v57 = (std::string::size_type)v45;
              unint64_t v58 = v68;
              if (!v48) {
                goto LABEL_142;
              }
            }
            memmove(v55, v47, v48);
LABEL_142:
            *((unsigned char *)v55 + v48) = 0;
            char v106 = 1;
            uint64_t v61 = v100.__r_.__value_.__r.__words[0];
            if (SHIBYTE(v105) < 0) {
              operator delete(v103);
            }
            if ((_BYTE)v102 && SHIBYTE(v101) < 0) {
              operator delete((void *)v100.__r_.__value_.__l.__size_);
            }
            if (v100.__r_.__value_.__r.__words[0]) {
              os_release(v100.__r_.__value_.__l.__data_);
            }
            if (v58 && *(void *)(v58 + 24))
            {
              _os_log_pack_size();
              MEMORY[0x2166C4D30]();
              operator new();
            }
            os_log_type_enabled(v61, OS_LOG_TYPE_ERROR);
            LODWORD(v100.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v100.__r_.__value_.__r.__words + 4) = v57;
            uint64_t v62 = (void *)_os_log_send_and_compose_impl();
            if (v62) {
              free(v62);
            }
            if (v56)
            {
              uint64_t v64 = (const char *)&__dst;
              if (v80 < 0) {
                uint64_t v64 = (const char *)__dst;
              }
              sub_21573230C((uint64_t)&v69, "%s", v64);
              sub_215741D8C((uint64_t)&v69);
            }
            goto LABEL_163;
          }
        }
        memmove(v52, v50, v51);
        goto LABEL_134;
      }
    }
    memmove(v16, v42, v15);
    goto LABEL_113;
  }
  if (byte_2678837F0)
  {
    sub_2157425B8((uint64_t)&unk_267883778);
  }
  else if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/VisualLogger/src/Return.cpp", 89, (uint64_t)"(last == kSuccess)", 18, (uint64_t)"More than one error occurred", 28, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  long long v81 = *a1;
  sub_215741BFC(__p, a1 + 1);
  sub_215741F54((uint64_t)&unk_267883778, &v81);
  if ((_BYTE)v95)
  {
    if (!v93) {
      goto LABEL_28;
    }
    if (v92 < 0)
    {
      operator delete(v90);
      if ((v88 & 0x80000000) == 0)
      {
LABEL_28:
        if (!v84) {
          goto LABEL_176;
        }
        goto LABEL_29;
      }
    }
    else if ((v88 & 0x80000000) == 0)
    {
      goto LABEL_28;
    }
    operator delete(v85);
    if (!v84) {
      goto LABEL_176;
    }
LABEL_29:
    if (v83 < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_176:
  std::mutex::unlock(&stru_267883828);
}

void sub_21573FB08(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(v2 - 152))
    {
      if (*(char *)(v2 - 153) < 0)
      {
        operator delete(*(void **)(v2 - 176));
        __cxa_guard_abort(&qword_267883880);
        sub_215731D80(a1);
      }
    }
    __cxa_guard_abort(&qword_267883880);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21573FCF8(unsigned int a1@<W0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_215741BFC(v7, a2);
  sub_215742878((uint64_t)&v16, a1, (long long *)v7);
  *(_OWORD *)a3 = v16;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v18;
      uint64_t v18 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v25)
    {
      uint64_t v6 = v22;
      *(void *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(void *)(a3 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0) {
      operator delete((void *)__p);
    }
  }
  if (v15)
  {
    if (!v14) {
      goto LABEL_13;
    }
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9) {
      return;
    }
LABEL_14:
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_21573FE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_21573FE74(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 96)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 88))
  {
    if ((*(char *)(a1 + 87) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(*(void **)(a1 + 32));
      if (!*(unsigned char *)(a1 + 24)) {
        return a1;
      }
      goto LABEL_6;
    }
    operator delete(*(void **)(a1 + 64));
    if (*(char *)(a1 + 55) < 0) {
      goto LABEL_9;
    }
  }
LABEL_5:
  if (!*(unsigned char *)(a1 + 24)) {
    return a1;
  }
LABEL_6:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_21573FF04(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(*(void **)(a1 + 48));
      if (!*(unsigned char *)(a1 + 40)) {
        return a1;
      }
      goto LABEL_6;
    }
    operator delete(*(void **)(a1 + 80));
    if (*(char *)(a1 + 71) < 0) {
      goto LABEL_9;
    }
  }
LABEL_5:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_6:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_21573FF94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v18 = a1;
  if (*(unsigned char *)(a2 + 24))
  {
    p_dst = (std::string *)"argument '";
    long long v23 = (const char *)10;
    unint64_t v4 = (const char *)*(unsigned __int8 *)(a2 + 23);
    if ((char)v4 >= 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = *(void *)a2;
    }
    if ((char)v4 < 0) {
      unint64_t v4 = *(const char **)(a2 + 8);
    }
    uint64_t v24 = (std::string *)v5;
    char v25 = v4;
    char v26 = "' ";
    uint64_t v27 = 2;
    sub_2157430CC((uint64_t)&p_dst, (uint64_t)&v28, 0, 0, &__p);
    int v20 = -1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      goto LABEL_11;
    }
  }
  else
  {
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
    __p.__r_.__value_.__s.__data_[0] = 0;
    int v20 = -1;
  }
  std::string __dst = __p;
LABEL_11:
  int v20 = 1;
  p_dst = &__dst;
  long long v23 = "in function ";
  uint64_t v24 = &__dst;
  char v25 = "in function ";
  char v26 = "in function ";
  sub_215743234((uint64_t *)&v24, (uint64_t)&__dst);
  if (v18)
  {
    p_dst = &__dst;
    long long v23 = (const char *)&v18;
    uint64_t v24 = &__dst;
    char v25 = (const char *)&v18;
    char v26 = (const char *)&v18;
    if (v20 != -1)
    {
      p_p_dst = &p_dst;
      ((void (*)(std::string ***, std::string *))off_26C656798[v20])(&p_p_dst, &__dst);
      goto LABEL_16;
    }
LABEL_37:
    sub_215742D4C();
  }
  p_dst = &__dst;
  long long v23 = "nullptr";
  uint64_t v24 = &__dst;
  char v25 = "nullptr";
  char v26 = "nullptr";
  if (v20 == -1) {
    goto LABEL_37;
  }
  p_p_dst = &p_dst;
  ((void (*)(std::string ***, std::string *))off_26C656780[v20])(&p_p_dst, &__dst);
LABEL_16:
  if (v20 == -1) {
    sub_215742D4C();
  }
  p_dst = (std::string *)&p_p_dst;
  ((void (*)(void **__return_ptr, std::string **, std::string *))off_26C656768[v20])(v16, &p_dst, &__dst);
  if (v20 != -1) {
    ((void (*)(std::string **, std::string *))off_26C656750[v20])(&p_dst, &__dst);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      goto LABEL_21;
    }
  }
  else if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
LABEL_21:
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v16;
    uint64_t v7 = v17;
    goto LABEL_24;
  }
  sub_215738B0C(v6, v16[0], (unint64_t)v16[1]);
LABEL_24:
  char v8 = 1;
  LOBYTE(v9) = 0;
  char v13 = 0;
  char v14 = 1;
  sub_21573FCF8(0xBu, (long long *)v6, a3);
  if (!v14) {
    goto LABEL_31;
  }
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_28;
      }
LABEL_35:
      operator delete(v9);
      if (!v8) {
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    operator delete(v11);
    if (v10 < 0) {
      goto LABEL_35;
    }
  }
LABEL_28:
  if (!v8) {
    goto LABEL_31;
  }
LABEL_29:
  if (SHIBYTE(v7) < 0) {
    operator delete(v6[0]);
  }
LABEL_31:
  if (SHIBYTE(v17) < 0) {
    operator delete(v16[0]);
  }
}

void sub_215740280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  sub_215742CF0(v33 - 112);
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2157402F0(std::string::size_type a1, const void **a2, uint64_t a3)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  int v6 = *((char *)a2 + 23);
  std::string::size_type size = (std::string::size_type)a2[1];
  if (v6 >= 0) {
    size_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v8 = (size_t)a2[1];
  }
  if (v8)
  {
    unint64_t v9 = v8 + 2;
    if (v8 + 2 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 > 0x16)
    {
      uint64_t v13 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v13 = v9 | 7;
      }
      uint64_t v14 = v13 + 1;
      p_p = (std::string *)operator new(v13 + 1);
      __p.__r_.__value_.__l.__size_ = v8 + 2;
      __p.__r_.__value_.__r.__words[2] = v14 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    }
    else
    {
      memset(&__p, 0, sizeof(__p));
      p_p = &__p;
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = v8 + 2;
    }
    LOWORD(p_p->__r_.__value_.__l.__data_) = 8250;
    char v15 = &p_p->__r_.__value_.__s.__data_[2];
    if (v6 >= 0) {
      long long v16 = a2;
    }
    else {
      long long v16 = *a2;
    }
    memmove(v15, v16, v8);
    v15[v8] = 0;
    LODWORD(v47) = -1;
    char v3 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = __p;
    }
    std::string v44 = __dst;
    std::string::size_type v12 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    std::string::size_type size = __dst.__r_.__value_.__l.__size_;
  }
  else
  {
    LODWORD(v12) = 0;
    *((unsigned char *)&v44.__r_.__value_.__s + 23) = 0;
    v44.__r_.__value_.__s.__data_[0] = 0;
  }
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)"unexpected runtime exception during operation on ";
  __dst.__r_.__value_.__l.__size_ = 49;
  uint64_t v17 = *(unsigned __int8 *)(a1 + 23);
  if ((v17 & 0x80u) == 0) {
    std::string::size_type v18 = a1;
  }
  else {
    std::string::size_type v18 = *(void *)a1;
  }
  if ((v17 & 0x80u) != 0) {
    uint64_t v17 = *(void *)(a1 + 8);
  }
  __dst.__r_.__value_.__r.__words[2] = v18;
  uint64_t v47 = v17;
  std::string::size_type v12 = v12;
  unsigned __int8 v19 = &v44;
  if ((v12 & 0x80u) != 0)
  {
    unsigned __int8 v19 = (std::string *)v44.__r_.__value_.__r.__words[0];
    std::string::size_type v12 = size;
  }
  size_t v48 = v19;
  std::string::size_type v49 = v12;
  sub_2157430CC((uint64_t)&__dst, (uint64_t)&v50, 0, 0, &v45);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v44.__r_.__value_.__l.__data_);
    if (!v8) {
      goto LABEL_31;
    }
  }
  else if (!v8)
  {
    goto LABEL_31;
  }
  if (v3 < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_34;
  }
LABEL_31:
  if ((SHIBYTE(v45.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    std::string __dst = v45;
    goto LABEL_35;
  }
LABEL_34:
  sub_215738B0C(&__dst, v45.__r_.__value_.__l.__data_, v45.__r_.__value_.__l.__size_);
LABEL_35:
  LOBYTE(v47) = 1;
  LOBYTE(v48) = 0;
  char v53 = 0;
  char v54 = 1;
  sub_21573FCF8(4u, (long long *)&__dst, (uint64_t)&v20);
  if (!v54) {
    goto LABEL_42;
  }
  if (v53)
  {
    if ((v52 & 0x80000000) == 0)
    {
      if ((SHIBYTE(v50) & 0x80000000) == 0) {
        goto LABEL_39;
      }
LABEL_67:
      operator delete(v48);
      if (!(_BYTE)v47) {
        goto LABEL_42;
      }
      goto LABEL_40;
    }
    operator delete(v51);
    if (SHIBYTE(v50) < 0) {
      goto LABEL_67;
    }
  }
LABEL_39:
  if (!(_BYTE)v47) {
    goto LABEL_42;
  }
LABEL_40:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
LABEL_42:
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  long long v31 = v20;
  LOBYTE(v32) = 0;
  char v41 = 0;
  if (v30)
  {
    char v34 = 0;
    if (v23)
    {
      long long v32 = v21;
      uint64_t v33 = v22;
      uint64_t v22 = 0;
      long long v21 = 0uLL;
      char v34 = 1;
    }
    LOBYTE(v35) = 0;
    char v40 = 0;
    if (v29)
    {
      uint64_t v36 = v25;
      long long v35 = *(_OWORD *)v24;
      v24[0] = 0;
      v24[1] = 0;
      long long v38 = *(_OWORD *)v27;
      uint64_t v37 = v26;
      uint64_t v39 = v28;
      uint64_t v25 = 0;
      v27[0] = 0;
      v27[1] = 0;
      uint64_t v28 = 0;
      char v40 = 1;
    }
    char v41 = 1;
  }
  char v42 = 0;
  sub_21573E208(&v31, a3);
  if (!v42 && v41)
  {
    if (!v40) {
      goto LABEL_55;
    }
    if (SHIBYTE(v39) < 0)
    {
      operator delete((void *)v38);
      if ((SHIBYTE(v36) & 0x80000000) == 0)
      {
LABEL_55:
        if (!v34) {
          goto LABEL_58;
        }
LABEL_56:
        if (SHIBYTE(v33) < 0) {
          operator delete((void *)v32);
        }
        goto LABEL_58;
      }
    }
    else if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
      goto LABEL_55;
    }
    operator delete((void *)v35);
    if (!v34) {
      goto LABEL_58;
    }
    goto LABEL_56;
  }
LABEL_58:
  if (!v30) {
    return;
  }
  if (v29)
  {
    if ((SHIBYTE(v28) & 0x80000000) == 0)
    {
      if ((SHIBYTE(v25) & 0x80000000) == 0) {
        goto LABEL_62;
      }
LABEL_70:
      operator delete(v24[0]);
      if (!v23) {
        return;
      }
      goto LABEL_63;
    }
    operator delete(v27[0]);
    if (SHIBYTE(v25) < 0) {
      goto LABEL_70;
    }
  }
LABEL_62:
  if (!v23) {
    return;
  }
LABEL_63:
  if (SHIBYTE(v22) < 0) {
    operator delete((void *)v21);
  }
}

void sub_21574073C(_Unwind_Exception *a1)
{
  sub_215742CF0(v2 - 192);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_215740758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p)
{
  if (*(char *)(v42 - 193) < 0)
  {
    operator delete(*(void **)(v42 - 216));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157407D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120) || !*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
        goto LABEL_7;
      }
LABEL_11:
      operator delete(*(void **)(a1 + 48));
      if (!*(unsigned char *)(a1 + 40)) {
        return a1;
      }
      goto LABEL_8;
    }
    operator delete(*(void **)(a1 + 80));
    if (*(char *)(a1 + 71) < 0) {
      goto LABEL_11;
    }
  }
LABEL_7:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_8:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_21574086C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  sub_215742C3C(v24, a3);
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
  memset(&__dst, 0, sizeof(__dst));
  sub_215742B04((uint64_t)&__dst, v7);
  uint64_t v10 = *a2;
  for (uint64_t i = a2[1]; v10 != i; v10 += 24)
  {
    while (1)
    {
      while (1)
      {
        sub_2157429D8(v10, (uint64_t)&v69);
        std::string::size_type size = (_OWORD *)__dst.__r_.__value_.__l.__size_;
        if (__dst.__r_.__value_.__l.__size_ >= __dst.__r_.__value_.__r.__words[2]) {
          break;
        }
        long long v12 = v69;
        *(void *)(__dst.__r_.__value_.__l.__size_ + 16) = v70;
        *std::string::size_type size = v12;
        __dst.__r_.__value_.__l.__size_ = (std::string::size_type)size + 24;
        v10 += 24;
        if (v10 == i) {
          goto LABEL_9;
        }
      }
      __dst.__r_.__value_.__l.__size_ = (std::string::size_type)sub_21573AD18((void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&v69);
      if (SBYTE7(v70) < 0) {
        break;
      }
      v10 += 24;
      if (v10 == i) {
        goto LABEL_9;
      }
    }
    operator delete((void *)v69);
  }
LABEL_9:
  uint64_t v14 = (void *)__dst.__r_.__value_.__r.__words[0];
  std::string v58 = __dst;
  std::string::size_type v15 = __dst.__r_.__value_.__l.__size_;
  p_p = &__p;
  sub_215742E98((uint64_t)__dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_, ", ", 2uLL, &__p, v8, v9);
  *(void *)&long long v69 = "while trying to create ";
  *((void *)&v69 + 1) = 23;
  uint64_t v17 = *((unsigned __int8 *)a1 + 23);
  if ((v17 & 0x80u) == 0) {
    std::string::size_type v18 = a1;
  }
  else {
    std::string::size_type v18 = (uint64_t *)*a1;
  }
  if ((v17 & 0x80u) != 0) {
    uint64_t v17 = a1[1];
  }
  *(void *)&long long v70 = v18;
  *((void *)&v70 + 1) = v17;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v71 = " with arguments (";
  uint64_t v72 = 17;
  std::string::size_type v19 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v20 = &__p;
  }
  else {
    long long v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v19 = __p.__r_.__value_.__l.__size_;
  }
  *(void *)&long long v73 = v20;
  *((void *)&v73 + 1) = v19;
  int v74 = ")";
  uint64_t v75 = 1;
  sub_2157430CC((uint64_t)&v69, (uint64_t)&v76, 0, 0, &v60);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v14)
  {
    while ((void *)v15 != v14)
    {
      if (*(char *)(v15 - 1) < 0) {
        operator delete(*(void **)(v15 - 24));
      }
      v15 -= 24;
    }
    operator delete(v14);
    if (v34) {
      goto LABEL_23;
    }
  }
  else if (v34)
  {
LABEL_23:
    sub_215E11614(v24, (void **)&v60.__r_.__value_.__l.__data_, (uint64_t)&v69);
    goto LABEL_24;
  }
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v60;
  }
  char v62 = 1;
  LOBYTE(v63) = 0;
  char v67 = 0;
  char v68 = 1;
  sub_215742878((uint64_t)&v69, 2u, (long long *)&__dst);
  if (v68)
  {
    if (v67)
    {
      if (v66 < 0) {
        operator delete(v65);
      }
      if (v64 < 0) {
        operator delete(v63);
      }
    }
    if (v62 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
LABEL_24:
  long long v35 = v69;
  LOBYTE(v36) = 0;
  char v45 = 0;
  int v21 = v79;
  if (!v79)
  {
    int v23 = 0;
    int v22 = 0;
    goto LABEL_41;
  }
  char v38 = 0;
  if ((_BYTE)v72)
  {
    long long v36 = v70;
    uint64_t v37 = v71;
    std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v71 = 0;
    long long v70 = 0uLL;
    int v22 = 1;
    char v38 = 1;
    LOBYTE(v39[0]) = 0;
    char v44 = 0;
    if (v78) {
      goto LABEL_27;
    }
  }
  else
  {
    int v22 = 0;
    LOBYTE(v39[0]) = 0;
    char v44 = 0;
    if (v78)
    {
LABEL_27:
      p_p = (std::string *)v75;
      char v40 = v74;
      *(_OWORD *)uint64_t v39 = v73;
      long long v73 = 0uLL;
      uint64_t v41 = v75;
      *(_OWORD *)uint64_t v42 = v76;
      uint64_t v43 = v77;
      int v74 = 0;
      long long v76 = 0uLL;
      uint64_t v77 = 0;
      int v23 = 1;
      char v44 = 1;
      char v45 = 1;
      if (!(_BYTE)v72) {
        goto LABEL_41;
      }
      goto LABEL_39;
    }
  }
  int v23 = 0;
  char v45 = 1;
  if (!(_BYTE)v72) {
    goto LABEL_41;
  }
LABEL_39:
  if (SHIBYTE(v71) < 0) {
    operator delete((void *)v70);
  }
LABEL_41:
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  long long v46 = v35;
  LOBYTE(v47) = 0;
  char v56 = 0;
  if (v21)
  {
    char v49 = 0;
    if (v22)
    {
      long long v47 = v36;
      size_t v48 = v37;
      uint64_t v37 = 0;
      long long v36 = 0uLL;
      char v49 = 1;
    }
    LOBYTE(v50) = 0;
    char v55 = 0;
    if (v23)
    {
      long long v50 = *(_OWORD *)v39;
      size_t v51 = v40;
      v39[0] = 0;
      v39[1] = 0;
      char v52 = p_p;
      *(_OWORD *)char v53 = *(_OWORD *)v42;
      uint64_t v54 = v43;
      char v40 = 0;
      v42[0] = 0;
      v42[1] = 0;
      uint64_t v43 = 0;
      char v55 = 1;
    }
    char v56 = 1;
  }
  char v57 = 0;
  sub_21573E208(&v46, a4);
  if (!v57 && v56)
  {
    if (!v55) {
      goto LABEL_54;
    }
    if (SHIBYTE(v54) < 0)
    {
      operator delete(v53[0]);
      if ((SHIBYTE(v51) & 0x80000000) == 0)
      {
LABEL_54:
        if (!v49) {
          goto LABEL_57;
        }
LABEL_55:
        if (SHIBYTE(v48) < 0) {
          operator delete((void *)v47);
        }
        goto LABEL_57;
      }
    }
    else if ((SHIBYTE(v51) & 0x80000000) == 0)
    {
      goto LABEL_54;
    }
    operator delete((void *)v50);
    if (!v49) {
      goto LABEL_57;
    }
    goto LABEL_55;
  }
LABEL_57:
  if (!v21) {
    goto LABEL_64;
  }
  if (!v23) {
    goto LABEL_61;
  }
  if (SHIBYTE(v43) < 0)
  {
    operator delete(v42[0]);
    if ((SHIBYTE(v40) & 0x80000000) == 0)
    {
LABEL_61:
      if (!v22) {
        goto LABEL_64;
      }
      goto LABEL_62;
    }
  }
  else if ((SHIBYTE(v40) & 0x80000000) == 0)
  {
    goto LABEL_61;
  }
  operator delete(v39[0]);
  if (!v22) {
    goto LABEL_64;
  }
LABEL_62:
  if (SHIBYTE(v37) < 0) {
    operator delete((void *)v36);
  }
LABEL_64:
  if (v34 && v33)
  {
    if (!v32) {
      goto LABEL_69;
    }
    if (v31 < 0)
    {
      operator delete(v30);
      if ((v29 & 0x80000000) == 0)
      {
LABEL_69:
        if (!v27) {
          return;
        }
        goto LABEL_70;
      }
    }
    else if ((v29 & 0x80000000) == 0)
    {
      goto LABEL_69;
    }
    operator delete(v28);
    if (!v27) {
      return;
    }
LABEL_70:
    if (v26 < 0) {
      operator delete(v25);
    }
  }
}

void sub_215740E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  sub_21573FE74((uint64_t)&a70);
  if (a69 < 0)
  {
    operator delete(__p);
    sub_215740ECC((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  sub_215740ECC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_215740ECC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120) || !*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
      if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
        goto LABEL_6;
      }
LABEL_10:
      operator delete(*(void **)(a1 + 48));
      if (!*(unsigned char *)(a1 + 40)) {
        return a1;
      }
      goto LABEL_7;
    }
    operator delete(*(void **)(a1 + 80));
    if (*(char *)(a1 + 71) < 0) {
      goto LABEL_10;
    }
  }
LABEL_6:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_7:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_215740F64(std::string::size_type a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)"while trying to convert from '";
  __dst.__r_.__value_.__l.__size_ = 30;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) == 0) {
    std::string::size_type v5 = a1;
  }
  else {
    std::string::size_type v5 = *(void *)a1;
  }
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  __dst.__r_.__value_.__r.__words[2] = v5;
  uint64_t v33 = v4;
  char v34 = "' to '";
  uint64_t v35 = 6;
  uint64_t v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = (uint64_t *)*a2;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = a2[1];
  }
  long long v36 = v7;
  uint64_t v37 = v6;
  char v38 = "'";
  uint64_t v39 = 1;
  sub_2157430CC((uint64_t)&__dst, (uint64_t)v40, 0, 0, &v31);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    sub_215738B0C(&__dst, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v31;
  }
  LOBYTE(v33) = 1;
  LOBYTE(v34) = 0;
  char v41 = 0;
  char v42 = 1;
  sub_21573FCF8(3u, (long long *)&__dst, (uint64_t)&v8);
  if (v42)
  {
    if (!v41) {
      goto LABEL_18;
    }
    if ((v40[7] & 0x80000000) != 0)
    {
      operator delete(v38);
      if ((SHIBYTE(v36) & 0x80000000) == 0)
      {
LABEL_18:
        if (!(_BYTE)v33) {
          goto LABEL_21;
        }
LABEL_19:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
      goto LABEL_18;
    }
    operator delete(v34);
    if (!(_BYTE)v33) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
LABEL_21:
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  long long v19 = v8;
  LOBYTE(__p) = 0;
  char v29 = 0;
  if (v18)
  {
    char v22 = 0;
    if (v11)
    {
      long long __p = v9;
      uint64_t v21 = v10;
      uint64_t v10 = 0;
      long long v9 = 0uLL;
      char v22 = 1;
    }
    LOBYTE(v23) = 0;
    char v28 = 0;
    if (v17)
    {
      uint64_t v24 = v13;
      long long v23 = *(_OWORD *)v12;
      v12[0] = 0;
      v12[1] = 0;
      long long v26 = *(_OWORD *)v15;
      uint64_t v25 = v14;
      uint64_t v27 = v16;
      uint64_t v13 = 0;
      v15[0] = 0;
      v15[1] = 0;
      uint64_t v16 = 0;
      char v28 = 1;
    }
    char v29 = 1;
  }
  char v30 = 0;
  sub_21573E208(&v19, a3);
  if (!v30 && v29)
  {
    if (!v28) {
      goto LABEL_34;
    }
    if (SHIBYTE(v27) < 0)
    {
      operator delete((void *)v26);
      if ((SHIBYTE(v24) & 0x80000000) == 0)
      {
LABEL_34:
        if (!v22) {
          goto LABEL_37;
        }
LABEL_35:
        if (SHIBYTE(v21) < 0) {
          operator delete((void *)__p);
        }
        goto LABEL_37;
      }
    }
    else if ((SHIBYTE(v24) & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete((void *)v23);
    if (!v22) {
      goto LABEL_37;
    }
    goto LABEL_35;
  }
LABEL_37:
  if (!v18) {
    return;
  }
  if (v17)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      if ((SHIBYTE(v13) & 0x80000000) == 0) {
        goto LABEL_41;
      }
LABEL_49:
      operator delete(v12[0]);
      if (!v11) {
        return;
      }
      goto LABEL_42;
    }
    operator delete(v15[0]);
    if (SHIBYTE(v13) < 0) {
      goto LABEL_49;
    }
  }
LABEL_41:
  if (!v11) {
    return;
  }
LABEL_42:
  if (SHIBYTE(v10) < 0) {
    operator delete((void *)v9);
  }
}

void sub_215741278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (*(char *)(v25 - 145) < 0)
  {
    operator delete(*(void **)(v25 - 168));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157412CC(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 176));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 168);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (*(unsigned char *)(a1 + 120)) {
      return a1;
    }
  }
  else if (*(unsigned char *)(a1 + 120))
  {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_10;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_14:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_11;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_14;
  }
LABEL_10:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_11:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_2157413BC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 120)) {
    BOOL v7 = *(unsigned char *)(a2 + 120) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7) {
    return;
  }
  if (*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a2 + 120))
    {
      long long v22 = *(_OWORD *)a2;
      if (*(unsigned char *)(a2 + 112))
      {
        uint64_t v10 = (void **)(a2 + 16);
        int v11 = *(unsigned __int8 *)(a2 + 40);
        if (*(unsigned char *)(a2 + 40))
        {
          long long v12 = *(void **)(a2 + 16);
          *(void *)uint64_t v25 = *(void *)(a2 + 24);
          *(void *)&v25[7] = *(void *)(a2 + 31);
          char v2 = *(unsigned char *)(a2 + 39);
          *(void *)(a2 + 24) = 0;
          *(void *)(a2 + 32) = 0;
          *uint64_t v10 = 0;
          int v13 = *(unsigned __int8 *)(a2 + 104);
          if (*(unsigned char *)(a2 + 104)) {
            goto LABEL_11;
          }
        }
        else
        {
          long long v12 = 0;
          int v13 = *(unsigned __int8 *)(a2 + 104);
          if (*(unsigned char *)(a2 + 104))
          {
LABEL_11:
            uint64_t v14 = *(void *)(a2 + 48);
            *(void *)uint64_t v24 = *(void *)(a2 + 56);
            *(void *)&v24[7] = *(void *)(a2 + 63);
            char v5 = *(unsigned char *)(a2 + 71);
            *(void *)(a2 + 56) = 0;
            *(void *)(a2 + 64) = 0;
            *(void *)(a2 + 48) = 0;
            uint64_t v6 = *(void *)(a2 + 72);
            uint64_t v3 = *(void *)(a2 + 80);
            *(void *)long long v23 = *(void *)(a2 + 88);
            *(void *)&v23[7] = *(void *)(a2 + 95);
            char v4 = *(unsigned char *)(a2 + 103);
            *(void *)(a2 + 88) = 0;
            *(void *)(a2 + 96) = 0;
            *(void *)(a2 + 80) = 0;
            if (!v11) {
              goto LABEL_39;
            }
            goto LABEL_37;
          }
        }
        uint64_t v14 = 0;
        if (!v11) {
          goto LABEL_39;
        }
LABEL_37:
        if (*(char *)(a2 + 39) < 0)
        {
          uint64_t v21 = v12;
          operator delete(*v10);
          long long v12 = v21;
          *(_OWORD *)a1 = v22;
          *(unsigned char *)(a1 + 112) = 0;
          goto LABEL_40;
        }
LABEL_39:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = 0;
        *(unsigned char *)(a1 + 112) = 0;
        *(unsigned char *)(a1 + 40) = 0;
        if (!v11)
        {
LABEL_41:
          *(unsigned char *)(a1 + 48) = 0;
          *(unsigned char *)(a1 + 104) = 0;
          if (v13)
          {
            *(void *)(a1 + 48) = v14;
            *(void *)(a1 + 56) = *(void *)v24;
            *(void *)(a1 + 63) = *(void *)&v24[7];
            *(unsigned char *)(a1 + 71) = v5;
            *(void *)(a1 + 72) = v6;
            *(void *)(a1 + 80) = v3;
            *(void *)(a1 + 88) = *(void *)v23;
            *(void *)(a1 + 95) = *(void *)&v23[7];
            *(unsigned char *)(a1 + 103) = v4;
            *(unsigned char *)(a1 + 104) = 1;
          }
          *(unsigned char *)(a1 + 112) = 1;
          char v20 = *(unsigned char *)(a1 + 120);
          *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
          *(unsigned char *)(a2 + 120) = v20;
          if (v11)
          {
            if (v2 < 0) {
              operator delete(v12);
            }
          }
          return;
        }
LABEL_40:
        *(void *)(a1 + 16) = v12;
        *(void *)(a1 + 24) = *(void *)v25;
        *(void *)(a1 + 31) = *(void *)&v25[7];
        *(unsigned char *)(a1 + 39) = v2;
        *(unsigned char *)(a1 + 40) = 1;
        long long v12 = 0;
        char v2 = 0;
        goto LABEL_41;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      char v19 = 1;
LABEL_33:
      *(unsigned char *)(a2 + 120) = v19;
      return;
    }
  }
  else if (*(unsigned char *)(a2 + 120))
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (*(unsigned char *)(a1 + 112))
    {
      std::string::size_type v15 = (void **)(a1 + 16);
      *(unsigned char *)(a2 + 40) = 0;
      if (*(unsigned char *)(a1 + 40))
      {
        long long v16 = *(_OWORD *)v15;
        *(void *)(a2 + 32) = *(void *)(a1 + 32);
        *(_OWORD *)(a2 + 16) = v16;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 32) = 0;
        *std::string::size_type v15 = 0;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (*(unsigned char *)(a1 + 104))
      {
        long long v17 = *(_OWORD *)(a1 + 48);
        *(void *)(a2 + 64) = *(void *)(a1 + 64);
        *(_OWORD *)(a2 + 48) = v17;
        *(void *)(a1 + 56) = 0;
        *(void *)(a1 + 64) = 0;
        *(void *)(a1 + 48) = 0;
        *(void *)(a2 + 72) = *(void *)(a1 + 72);
        long long v18 = *(_OWORD *)(a1 + 80);
        *(void *)(a2 + 96) = *(void *)(a1 + 96);
        *(_OWORD *)(a2 + 80) = v18;
        *(void *)(a1 + 88) = 0;
        *(void *)(a1 + 96) = 0;
        *(void *)(a1 + 80) = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      if (*(unsigned char *)(a1 + 112))
      {
        if (*(unsigned char *)(a1 + 104))
        {
          if (*(char *)(a1 + 103) < 0) {
            operator delete(*(void **)(a1 + 80));
          }
          if (*(char *)(a1 + 71) < 0) {
            operator delete(*(void **)(a1 + 48));
          }
        }
        if (*(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
          operator delete(*v15);
        }
      }
    }
    char v19 = *(unsigned char *)(a1 + 120);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    goto LABEL_33;
  }

  sub_215741728((long long *)a1, (long long *)a2);
}

void sub_215741728(long long *a1, long long *a2)
{
  long long v5 = *a1;
  uint64_t v3 = a1 + 1;
  LOBYTE(__p) = 0;
  char v15 = 0;
  if (*((unsigned char *)a1 + 112))
  {
    char v8 = 0;
    if (*((unsigned char *)a1 + 40))
    {
      long long __p = *v3;
      uint64_t v7 = *((void *)a1 + 4);
      *((void *)a1 + 3) = 0;
      *((void *)a1 + 4) = 0;
      *(void *)uint64_t v3 = 0;
      char v8 = 1;
    }
    LOBYTE(v9) = 0;
    char v14 = 0;
    if (*((unsigned char *)a1 + 104))
    {
      uint64_t v4 = *((void *)a1 + 9);
      uint64_t v10 = *((void *)a1 + 8);
      long long v9 = a1[3];
      *((void *)a1 + 7) = 0;
      *((void *)a1 + 8) = 0;
      *((void *)a1 + 6) = 0;
      uint64_t v11 = v4;
      *(_OWORD *)long long v12 = a1[5];
      uint64_t v13 = *((void *)a1 + 12);
      *((void *)a1 + 10) = 0;
      *((void *)a1 + 11) = 0;
      *((void *)a1 + 12) = 0;
      char v14 = 1;
    }
    char v15 = 1;
  }
  *a1 = *a2;
  sub_215741894((uint64_t)(a1 + 1), a2 + 1);
  *a2 = v5;
  sub_215741894((uint64_t)(a2 + 1), &__p);
  if (v15)
  {
    if (!v14) {
      goto LABEL_11;
    }
    if (SHIBYTE(v13) < 0)
    {
      operator delete(v12[0]);
      if ((SHIBYTE(v10) & 0x80000000) == 0)
      {
LABEL_11:
        if (!v8) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((SHIBYTE(v10) & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete((void *)v9);
    if (!v8) {
      return;
    }
LABEL_12:
    if (SHIBYTE(v7) < 0) {
      operator delete((void *)__p);
    }
  }
}

void sub_215741894(uint64_t a1, long long *a2)
{
  if (*(unsigned __int8 *)(a1 + 96) != *((unsigned __int8 *)a2 + 96))
  {
    if (!*(unsigned char *)(a1 + 96))
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      if (*((unsigned char *)a2 + 24))
      {
        long long v6 = *a2;
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(_OWORD *)a1 = v6;
        *((void *)a2 + 1) = 0;
        *((void *)a2 + 2) = 0;
        *(void *)a2 = 0;
        *(unsigned char *)(a1 + 24) = 1;
      }
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 88) = 0;
      char v5 = 1;
      if (*((unsigned char *)a2 + 88))
      {
        long long v7 = a2[2];
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(_OWORD *)(a1 + 32) = v7;
        *((void *)a2 + 5) = 0;
        *((void *)a2 + 6) = 0;
        *((void *)a2 + 4) = 0;
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        long long v8 = a2[4];
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(_OWORD *)(a1 + 64) = v8;
        *((void *)a2 + 9) = 0;
        *((void *)a2 + 10) = 0;
        *((void *)a2 + 8) = 0;
        *(unsigned char *)(a1 + 88) = 1;
        *(unsigned char *)(a1 + 96) = 1;
        return;
      }
      goto LABEL_16;
    }
    if (!*(unsigned char *)(a1 + 88)) {
      goto LABEL_12;
    }
    if (*(char *)(a1 + 87) < 0)
    {
      operator delete(*(void **)(a1 + 64));
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      {
LABEL_12:
        char v5 = *(unsigned char *)(a1 + 24);
        if (v5)
        {
LABEL_13:
          if (*(char *)(a1 + 23) < 0) {
            operator delete(*(void **)a1);
          }
          char v5 = 0;
        }
LABEL_16:
        *(unsigned char *)(a1 + 96) = v5;
        return;
      }
    }
    else if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(*(void **)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 24);
    if (v5) {
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    if (*(unsigned __int8 *)(a1 + 24) == *((unsigned __int8 *)a2 + 24))
    {
      if (*(unsigned char *)(a1 + 24))
      {
        if (*(char *)(a1 + 23) < 0) {
          operator delete(*(void **)a1);
        }
        long long v4 = *a2;
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(_OWORD *)a1 = v4;
        *((unsigned char *)a2 + 23) = 0;
        *(unsigned char *)a2 = 0;
      }
    }
    else if (*(unsigned char *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0) {
        operator delete(*(void **)a1);
      }
      *(unsigned char *)(a1 + 24) = 0;
    }
    else
    {
      long long v9 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v9;
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
      *(unsigned char *)(a1 + 24) = 1;
    }
    sub_215741A58(a1 + 32, a2 + 2);
  }
}

void sub_215741A58(uint64_t a1, long long *a2)
{
  if (*(unsigned __int8 *)(a1 + 56) != *((unsigned __int8 *)a2 + 56))
  {
    if (!*(unsigned char *)(a1 + 56))
    {
      long long v7 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v7;
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      long long v8 = a2[2];
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(_OWORD *)(a1 + 32) = v8;
      *((void *)a2 + 5) = 0;
      *((void *)a2 + 6) = 0;
      *((void *)a2 + 4) = 0;
      *(unsigned char *)(a1 + 56) = 1;
      return;
    }
    if (*(char *)(a1 + 55) < 0)
    {
      operator delete(*(void **)(a1 + 32));
      if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
        goto LABEL_12;
      }
    }
    else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    {
LABEL_12:
      *(unsigned char *)(a1 + 56) = 0;
      return;
    }
    operator delete(*(void **)a1);
    *(unsigned char *)(a1 + 56) = 0;
    return;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v4 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v4;
    *((unsigned char *)a2 + 23) = 0;
    *(unsigned char *)a2 = 0;
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    char v5 = (void **)(a1 + 32);
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*v5);
    }
    long long v6 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)char v5 = v6;
    *((unsigned char *)a2 + 55) = 0;
    *((unsigned char *)a2 + 32) = 0;
  }
}

uint64_t sub_215741B98(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 56)) {
    return a1;
  }
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

unsigned char *sub_215741BFC(unsigned char *__dst, long long *a2)
{
  *std::string __dst = 0;
  __dst[96] = 0;
  if (*((unsigned char *)a2 + 96))
  {
    *std::string __dst = 0;
    __dst[24] = 0;
    if (*((unsigned char *)a2 + 24))
    {
      if (*((char *)a2 + 23) < 0)
      {
        sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
      }
      else
      {
        long long v4 = *a2;
        *((void *)__dst + 2) = *((void *)a2 + 2);
        *(_OWORD *)std::string __dst = v4;
      }
      __dst[24] = 1;
    }
    sub_215741CB8(__dst + 32, a2 + 2);
    __dst[96] = 1;
  }
  return __dst;
}

void sub_215741C88(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  sub_21573FE74(v1);
  _Unwind_Resume(a1);
}

char *sub_215741CB8(char *__dst, long long *a2)
{
  *std::string __dst = 0;
  __dst[56] = 0;
  if (*((unsigned char *)a2 + 56))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v4 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)std::string __dst = v4;
    }
    *((void *)__dst + 3) = *((void *)a2 + 3);
    char v5 = __dst + 32;
    if (*((char *)a2 + 55) < 0)
    {
      sub_215738B0C(v5, *((void **)a2 + 4), *((void *)a2 + 5));
    }
    else
    {
      long long v6 = a2[2];
      *((void *)__dst + 6) = *((void *)a2 + 6);
      *(_OWORD *)char v5 = v6;
    }
    __dst[56] = 1;
  }
  return __dst;
}

void sub_215741D54(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 23) < 0)
  {
    operator delete(*(void **)v1);
    sub_215741B98(v1);
    _Unwind_Resume(a1);
  }
  sub_215741B98(v1);
  _Unwind_Resume(a1);
}

void sub_215741D8C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)a1;
  if (*(void *)a1)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (v3)
    {
      long long v4 = (void *)(*v1 + 16);
      if (*(char *)(*v1 + 39) < 0) {
        long long v4 = (void *)*v4;
      }
      long long v5 = *(_OWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = *(_DWORD *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v10 = *(std::__shared_weak_count **)(a1 + 64);
      long long v12 = v10;
      if (v10) {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v13 = v4;
      long long v14 = v5;
      int v15 = v6;
      uint64_t v16 = v7;
      int v17 = v8;
      uint64_t v18 = v9;
      uint64_t v19 = v3;
      char v20 = v10;
      if (v10) {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      if (v6 >= **(_DWORD **)(*v1 + 56))
      {
        sub_215737104(*v1, (uint64_t)&v13);
        uint64_t v10 = v20;
      }
      if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
      if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
      uint64_t v11 = *(std::__shared_weak_count **)(a1 + 64);
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      if (v11)
      {
        if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
    }
  }
}

void sub_215741F38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_21574253C((uint64_t)va1);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215741F54(uint64_t a1, long long *a2)
{
  long long v6 = *a2;
  LOBYTE(__p[0]) = 0;
  char v16 = 0;
  if (*((unsigned char *)a2 + 112))
  {
    char v9 = 0;
    if (*((unsigned char *)a2 + 40))
    {
      *(_OWORD *)long long __p = a2[1];
      uint64_t v8 = *((void *)a2 + 4);
      *((void *)a2 + 3) = 0;
      *((void *)a2 + 4) = 0;
      *((void *)a2 + 2) = 0;
      char v9 = 1;
    }
    LOBYTE(v10) = 0;
    char v15 = 0;
    if (*((unsigned char *)a2 + 104))
    {
      uint64_t v3 = *((void *)a2 + 9);
      uint64_t v11 = *((void *)a2 + 8);
      long long v10 = a2[3];
      *((void *)a2 + 7) = 0;
      *((void *)a2 + 8) = 0;
      *((void *)a2 + 6) = 0;
      uint64_t v12 = v3;
      *(_OWORD *)uint64_t v13 = a2[5];
      uint64_t v14 = *((void *)a2 + 12);
      *((void *)a2 + 10) = 0;
      *((void *)a2 + 11) = 0;
      *((void *)a2 + 12) = 0;
      char v15 = 1;
    }
    char v16 = 1;
  }
  char v17 = 0;
  sub_2157413BC((uint64_t)&v6, a1);
  if (v17) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v16 == 0;
  }
  if (!v4)
  {
    if (!v15) {
      goto LABEL_14;
    }
    if (SHIBYTE(v14) < 0)
    {
      operator delete(v13[0]);
      if ((SHIBYTE(v11) & 0x80000000) == 0)
      {
LABEL_14:
        if (!v9) {
          return a1;
        }
        goto LABEL_15;
      }
    }
    else if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete((void *)v10);
    if (!v9) {
      return a1;
    }
LABEL_15:
    if (SHIBYTE(v8) < 0) {
      operator delete(__p[0]);
    }
  }
  return a1;
}

void sub_2157420A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unint64_t sub_2157420B4@<X0>(char *__s@<X1>, unint64_t result@<X0>, void *a3@<X8>)
{
  uint64_t v3 = a3;
  if (*(unsigned char *)(result + 24))
  {
    *(_OWORD *)a3 = *(_OWORD *)result;
    a3[2] = *(void *)(result + 16);
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = 0;
    return result;
  }
  double result = strlen(__s);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v6 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v6 = result | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v3[1] = v5;
    v3[2] = v7 | 0x8000000000000000;
    *uint64_t v3 = v8;
    uint64_t v3 = v8;
  }
  else
  {
    *((unsigned char *)v3 + 23) = result;
    if (!result)
    {
      *(unsigned char *)uint64_t v3 = 0;
      return result;
    }
  }
  double result = (unint64_t)memcpy(v3, __s, v5);
  *((unsigned char *)v3 + v5) = 0;
  return result;
}

uint64_t sub_215742198(uint64_t a1)
{
  char v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

uint64_t sub_215742268(uint64_t result)
{
  uint64_t v1 = result;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

void sub_2157422B0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157422E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215742308(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIvE27__shared_ptr_default_deleteIv13os_log_pack_sEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIvE27__shared_ptr_default_deleteIv13os_log_pack_sEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIvE27__shared_ptr_default_deleteIv13os_log_pack_sEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIvE27__shared_ptr_default_deleteIv13os_log_pack_sEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21574237C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C656680;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21574239C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C656680;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157423F0(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
}

void sub_215742408(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t *sub_21574245C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    unint64_t v3 = *(std::__shared_weak_count **)(v2 + 32);
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    BOOL v4 = *(std::__shared_weak_count **)(v2 + 16);
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    MEMORY[0x2166C4D20](v2, 0x10F0C40B62ED6C6);
  }
  return a1;
}

uint64_t sub_21574253C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 64);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2157425B8(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215742640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215742654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215742670(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215742684(uint64_t a1, _OWORD *a2)
{
  *(void *)a1 = &unk_26C656738;
  *(_OWORD *)(a1 + 8) = *a2;
  sub_215741BFC((unsigned char *)(a1 + 24), a2 + 1);
  return a1;
}

void sub_2157426D4(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157426E8(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_26C656738;
  if (!LOBYTE(this[15].__vftable)) {
    goto LABEL_7;
  }
  if (!LOBYTE(this[14].__vftable)) {
    goto LABEL_5;
  }
  if ((SHIBYTE(this[13].__vftable) & 0x80000000) == 0)
  {
    if ((SHIBYTE(this[9].__vftable) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  operator delete(this[11].__vftable);
  if (SHIBYTE(this[9].__vftable) < 0)
  {
LABEL_11:
    operator delete(this[7].__vftable);
    if (LOBYTE(this[6].__vftable)) {
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v2 = this;
    goto LABEL_9;
  }
LABEL_5:
  if (!LOBYTE(this[6].__vftable)) {
    goto LABEL_7;
  }
LABEL_6:
  if ((SHIBYTE(this[5].__vftable) & 0x80000000) == 0) {
    goto LABEL_7;
  }
  operator delete(this[3].__vftable);
  uint64_t v2 = this;

LABEL_9:
  std::exception::~exception(v2);
}

void sub_2157427B4(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_26C656738;
  if (!LOBYTE(this[15].__vftable)) {
    goto LABEL_10;
  }
  if (LOBYTE(this[14].__vftable))
  {
    if ((SHIBYTE(this[13].__vftable) & 0x80000000) == 0)
    {
      if ((SHIBYTE(this[9].__vftable) & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(this[7].__vftable);
      if (!LOBYTE(this[6].__vftable)) {
        goto LABEL_10;
      }
      goto LABEL_6;
    }
    operator delete(this[11].__vftable);
    if (SHIBYTE(this[9].__vftable) < 0) {
      goto LABEL_9;
    }
  }
LABEL_5:
  if (!LOBYTE(this[6].__vftable)) {
    goto LABEL_10;
  }
LABEL_6:
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
LABEL_10:
  std::exception::~exception(this);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215742878(uint64_t a1, unsigned int a2, long long *a3)
{
  uint64_t v6 = sub_2159637C8();
  sub_215741BFC(__dst, a3);
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v18) {
    return a1;
  }
  *(unsigned char *)(a1 + 40) = 0;
  if (v11)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(void *)(a1 + 32) = v10;
    __dst[1] = 0;
    uint64_t v10 = 0;
    __dst[0] = 0;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (!v17)
  {
    *(unsigned char *)(a1 + 112) = 1;
    if (!v11) {
      return a1;
    }
    goto LABEL_13;
  }
  uint64_t v7 = v14;
  *(void *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
  v12[0] = 0;
  v12[1] = 0;
  *(void *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(void *)(a1 + 96) = v16;
  __p[1] = 0;
  uint64_t v16 = 0;
  uint64_t v13 = 0;
  __p[0] = 0;
  *(unsigned char *)(a1 + 104) = 1;
  *(unsigned char *)(a1 + 112) = 1;
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      goto LABEL_7;
    }
LABEL_12:
    operator delete(v12[0]);
    if (!v11) {
      return a1;
    }
    goto LABEL_13;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13) < 0) {
    goto LABEL_12;
  }
LABEL_7:
  if (!v11) {
    return a1;
  }
LABEL_13:
  if ((SHIBYTE(v10) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(__dst[0]);
  return a1;
}

void sub_2157429D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    sub_215738B0C(&v3, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string v3 = *(std::string *)a1;
  }
  sub_215E13B5C(&v3, "cv3d::", 6, "", 0, 0, 0, (uint64_t)&__p);
  sub_215E13B5C(&__p, "kit::", 5, "", 0, 0, 0, a2);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v3.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_8:
    operator delete(v3.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v3.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_8;
  }
}

void sub_215742AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  _Unwind_Resume(exception_object);
}

void sub_215742B04(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(void ***)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    BOOL v4 = *(void ***)(a1 + 8);
    uint64_t v5 = 24 * a2;
    uint64_t v6 = (char *)operator new(24 * a2);
    uint64_t v7 = &v6[v5];
    uint64_t v8 = &v6[24 * (((char *)v4 - (char *)v2) / 24)];
    if (v4 == v2)
    {
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    else
    {
      char v9 = &v6[24 * (((char *)v4 - (char *)v2) / 24)];
      do
      {
        long long v10 = *(_OWORD *)(v4 - 3);
        *((void *)v9 - 1) = *(v4 - 1);
        *(_OWORD *)(v9 - 24) = v10;
        v9 -= 24;
        *(v4 - 2) = 0;
        *(v4 - 1) = 0;
        *(v4 - 3) = 0;
        v4 -= 3;
      }
      while (v4 != v2);
      uint64_t v2 = *(void ***)a1;
      char v11 = *(void ***)(a1 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
    }
    if (v2)
    {
      operator delete(v2);
    }
  }
}

unsigned char *sub_215742C3C(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[120] = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    sub_215741BFC(a1 + 16, (long long *)(a2 + 16));
    a1[120] = 1;
  }
  return a1;
}

void sub_215742C94(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 120) && *(unsigned char *)(v1 + 112))
  {
    if (*(unsigned char *)(v1 + 104))
    {
      if (*(char *)(v1 + 103) < 0) {
        operator delete(*(void **)(v1 + 80));
      }
      if (*(char *)(v1 + 71) < 0) {
        operator delete(*(void **)(v1 + 48));
      }
    }
    if (*(unsigned char *)(v1 + 40))
    {
      if (*(char *)(v1 + 39) < 0) {
        operator delete(*v2);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215742CF0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C656750[v2])(&v4, a1);
  }
  *(_DWORD *)(a1 + 24) = -1;
  return a1;
}

void sub_215742D4C()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x263F8C3A8] + 16;
  __cxa_throw(exception, MEMORY[0x263F8C1F8], (void (*)(void *))std::exception::~exception);
}

void sub_215742DA0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void sub_215742DB4(uint64_t a1, void **a2)
{
  uint64_t v2 = (void **)*a2;
  if (*a2)
  {
    char v4 = (void **)a2[1];
    uint64_t v5 = *a2;
    if (v4 == v2)
    {
      a2[1] = v2;
    }
    else
    {
      do
      {
        if (*((char *)v4 - 1) < 0) {
          operator delete(*(v4 - 3));
        }
        v4 -= 3;
      }
      while (v4 != v2);
      uint64_t v5 = *a2;
      a2[1] = v2;
    }
    operator delete(v5);
  }
}

void sub_215742E60(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

__n128 sub_215742E6C@<Q0>(__n128 *a1@<X1>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  return result;
}

void sub_215742E88(uint64_t *a1@<X1>, std::string *a2@<X8>, int64x2_t a3@<Q3>, int8x16_t a4@<Q5>)
{
}

void sub_215742E98(uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string::value_type *a3@<X2>, std::string::size_type a4@<X3>, std::string *a5@<X8>, int64x2_t a6@<Q3>, int8x16_t a7@<Q5>)
{
  int64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  if (v12 <= 1) {
    unint64_t v13 = 1;
  }
  else {
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  }
  uint64_t v14 = (v13 - 1) * a4;
  uint64_t v15 = a2 - a1;
  if (a2 == a1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    if ((unint64_t)(v15 - 24) >= 0x60)
    {
      unint64_t v18 = (v15 - 24) / 0x18uLL + 1;
      uint64_t v19 = v18 & 3;
      if ((v18 & 3) == 0) {
        uint64_t v19 = 4;
      }
      unint64_t v20 = v18 - v19;
      uint64_t v17 = a1 + 24 * v20;
      uint64_t v21 = (unsigned __int8 *)(a1 + 47);
      int64x2_t v22 = 0uLL;
      v23.i64[0] = 255;
      v23.i64[1] = 255;
      int64x2_t v24 = 0uLL;
      do
      {
        a6.i8[0] = *(v21 - 24);
        a6.i8[4] = *v21;
        a7.i8[0] = v21[24];
        a7.i8[4] = v21[48];
        uint64_t v25 = (const double *)(v21 - 39);
        long long v26 = (const double *)(v21 + 9);
        unsigned long long v27 = (unsigned __int128)vld3q_f64(v25);
        unsigned long long v28 = (unsigned __int128)vld3q_f64(v26);
        int32x2_t v29 = vcltz_s32(vshr_n_s32(vshl_n_s32(*(int32x2_t *)a6.i8, 0x18uLL), 0x18uLL));
        v30.i64[0] = v29.i32[0];
        v30.i64[1] = v29.i32[1];
        int8x16_t v31 = v30;
        int32x2_t v32 = vcltz_s32(vshr_n_s32(vshl_n_s32(*(int32x2_t *)a7.i8, 0x18uLL), 0x18uLL));
        v30.i64[0] = v32.i32[0];
        v30.i64[1] = v32.i32[1];
        int8x16_t v33 = v30;
        v30.i64[0] = a6.u32[0];
        v30.i64[1] = a6.u32[1];
        int8x16_t v34 = vbicq_s8(v30, v31);
        v30.i64[0] = a7.u32[0];
        v30.i64[1] = a7.u32[1];
        a6 = (int64x2_t)vorrq_s8(vandq_s8((int8x16_t)v27, v31), vandq_s8(v34, v23));
        a7 = vandq_s8((int8x16_t)v28, v33);
        int64x2_t v22 = vaddq_s64(a6, v22);
        int64x2_t v24 = vaddq_s64((int64x2_t)vorrq_s8(a7, vandq_s8(vbicq_s8(v30, v33), v23)), v24);
        v21 += 96;
        v20 -= 4;
      }
      while (v20);
      uint64_t v16 = vaddvq_s64(vaddq_s64(v24, v22));
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = a1;
    }
    do
    {
      uint64_t v35 = *(unsigned __int8 *)(v17 + 23);
      if ((v35 & 0x80u) != 0) {
        uint64_t v35 = *(void *)(v17 + 8);
      }
      v16 += v35;
      v17 += 24;
    }
    while (v17 != a2);
  }
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::string::reserve(a5, v16 + v14);
  if (v15 >= 1)
  {
    int v36 = *(char *)(a1 + 23);
    uint64_t v37 = v36 >= 0 ? (const std::string::value_type *)a1 : *(const std::string::value_type **)a1;
    std::string::size_type v38 = v36 >= 0 ? *(unsigned __int8 *)(a1 + 23) : *(void *)(a1 + 8);
    std::string::append(a5, v37, v38);
    if ((unint64_t)v12 >= 2)
    {
      for (uint64_t i = a1 + 24; i != a2; i += 24)
      {
        std::string::append(a5, a3, a4);
        int v40 = *(char *)(i + 23);
        if (v40 >= 0) {
          char v41 = (const std::string::value_type *)i;
        }
        else {
          char v41 = *(const std::string::value_type **)i;
        }
        if (v40 >= 0) {
          std::string::size_type v42 = *(unsigned __int8 *)(i + 23);
        }
        else {
          std::string::size_type v42 = *(void *)(i + 8);
        }
        std::string::append(a5, v41, v42);
      }
    }
  }
}

void sub_2157430A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157430CC(uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string::value_type *a3@<X2>, std::string::size_type a4@<X3>, std::string *a5@<X8>)
{
  uint64_t v10 = (a2 - a1) >> 4;
  if (v10 <= 1) {
    uint64_t v10 = 1;
  }
  uint64_t v11 = (v10 - 1) * a4;
  uint64_t v12 = a2 - a1;
  if (a2 == a1)
  {
    uint64_t v13 = 0;
  }
  else
  {
    if ((unint64_t)(v12 - 16) >= 0x40)
    {
      unint64_t v15 = ((unint64_t)(v12 - 16) >> 4) + 1;
      uint64_t v16 = v15 & 3;
      if ((v15 & 3) == 0) {
        uint64_t v16 = 4;
      }
      unint64_t v17 = v15 - v16;
      uint64_t v14 = a1 + 16 * v17;
      unint64_t v18 = (const double *)(a1 + 40);
      int64x2_t v19 = 0uLL;
      int64x2_t v20 = 0uLL;
      do
      {
        uint64_t v21 = v18 - 4;
        unsigned long long v22 = (unsigned __int128)vld2q_f64(v21);
        unsigned long long v23 = (unsigned __int128)vld2q_f64(v18);
        int64x2_t v19 = vaddq_s64((int64x2_t)v22, v19);
        int64x2_t v20 = vaddq_s64((int64x2_t)v23, v20);
        v18 += 8;
        v17 -= 4;
      }
      while (v17);
      uint64_t v13 = vaddvq_s64(vaddq_s64(v20, v19));
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = a1;
    }
    do
    {
      v13 += *(void *)(v14 + 8);
      v14 += 16;
    }
    while (v14 != a2);
  }
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::string::reserve(a5, v13 + v11);
  if (v12 >= 1)
  {
    std::string::append(a5, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    if ((unint64_t)v12 >= 0x20)
    {
      for (uint64_t i = a1 + 16; i != a2; i += 16)
      {
        std::string::append(a5, a3, a4);
        uint64_t v25 = *(const std::string::value_type **)i;
        std::string::size_type v26 = *(void *)(i + 8);
        std::string::append(a5, v25, v26);
      }
    }
  }
}

void sub_215743210(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215743234(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  std::string v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  uint64_t v5 = __p;
  uint64_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C656750[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157433EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_215743430(_DWORD ***a1)
{
  return sub_21574344C(**a1, (char *)(*a1)[1]);
}

void sub_21574343C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_21574344C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C656750[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_215743540(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  std::string v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C656750[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157436F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_21574373C(uint64_t a1, uint64_t a2)
{
  std::string v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    __n128 result = sub_215743838((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  __n128 result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215743830(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215743838(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  unsigned long long v22 = v8;
  unsigned long long v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  int64x2_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215743A38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_215743A4C(_DWORD ***a1)
{
  return sub_215743A68(**a1, (const char **)(*a1)[1]);
}

void sub_215743A58(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_215743A68(_DWORD *a1, const char **a2)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C656750[v4])(&v12, a1);
  }
  a1[6] = -1;
  size_t v5 = *a2;
  size_t v6 = strlen(*a2);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    uint64_t v8 = operator new(v9 + 1);
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = v10 | 0x8000000000000000;
    *(void *)a1 = v8;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v6;
    uint64_t v8 = a1;
    if (!v6) {
      goto LABEL_11;
    }
  }
  memmove(v8, v5, v7);
LABEL_11:
  *((unsigned char *)v8 + v7) = 0;
  a1[6] = 1;
  return a1;
}

void sub_215743B60(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = *(const char **)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C656750[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215743D1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215743D60(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char ***)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    __n128 result = sub_215743E5C((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = *v3;
  size_t v6 = strlen(*v3);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v10 = v6 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v8 = operator new(v10 + 1);
    *((void *)v4 + 1) = v7;
    *((void *)v4 + 2) = v11 | 0x8000000000000000;
    *(void *)char v4 = v8;
  }
  else
  {
    v4[23] = v6;
    uint64_t v8 = v4;
    if (!v6) {
      goto LABEL_11;
    }
  }
  memmove(v8, v5, v7);
LABEL_11:
  *((unsigned char *)v8 + v7) = 0;
  __n128 result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215743E54(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215743E5C(void **a1, const char **a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unsigned long long v22 = v8;
  unsigned long long v23 = v8;
  int64x2_t v24 = &v7[24 * v6];
  uint64_t v9 = *a2;
  size_t v10 = strlen(*a2);
  if (v10 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v11 = v10;
  if (v10 >= 0x17)
  {
    uint64_t v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v16 = v10 | 7;
    }
    uint64_t v17 = v16 + 1;
    long long v18 = (char *)operator new(v16 + 1);
    *((void *)v8 + 1) = v11;
    *((void *)v8 + 2) = v17 | 0x8000000000000000;
    *(void *)uint64_t v8 = v18;
    uint64_t v8 = v18;
  }
  else
  {
    v8[23] = v10;
    if (!v10)
    {
      *uint64_t v8 = 0;
      char v12 = v8;
      uint64_t v13 = v8 + 24;
      uint64_t v14 = (void **)*a1;
      char v15 = (void **)a1[1];
      if (v15 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, v9, v11);
  v8[v11] = 0;
  char v12 = v22;
  uint64_t v13 = v23 + 24;
  uint64_t v14 = (void **)*a1;
  char v15 = (void **)a1[1];
  if (v15 == *a1)
  {
LABEL_26:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v24;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v19 = *(_OWORD *)(v15 - 3);
    *((void *)v12 - 1) = *(v15 - 1);
    *(_OWORD *)(v12 - 24) = v19;
    v12 -= 24;
    *(v15 - 2) = 0;
    *(v15 - 1) = 0;
    *(v15 - 3) = 0;
    v15 -= 3;
  }
  while (v15 != v14);
  char v15 = (void **)*a1;
  int64x2_t v20 = (void **)a1[1];
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v24;
  while (v20 != v15)
  {
    if (*((char *)v20 - 1) < 0) {
      operator delete(*(v20 - 3));
    }
    v20 -= 3;
  }
LABEL_27:
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

void sub_215744060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t VZRetain(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t VZRelease(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t VZGetTypeID(uint64_t a1)
{
  if (!a1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/VisualLogger/src/VZBase.cpp", 43, (uint64_t)"vz", 2, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 32);

  return v2(a1);
}

uint64_t VZEqual(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return (*(uint64_t (**)(void))(*(void *)a1 + 40))();
  }
  else {
    return (a1 | a2) == 0;
  }
}

uint64_t VZCopyDescription(uint64_t a1)
{
  if (!a1)
  {
    char v4 = 4;
    strcpy(__p, "null");
    sub_215DD0B64((uint64_t)__p);
  }
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)a1 + 48);

  return v1();
}

void sub_2157442B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZGetRetainCount(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 56))();
  }
  return result;
}

uint64_t sub_21574430C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215744388(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2157443F8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215744484(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZBlobGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAA0))
  {
    return qword_26788AA98;
  }
  qword_26788AA98 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AAA0);
  return qword_26788AA98;
}

uint64_t VZDataCreateWithBlob(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_215744B30((uint64_t)"VZDataCreateWithBlob", a1, a3))
  {
    sub_215744D68(a2, v9);
    size_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_2157C30E0((void (**)(uint64_t))(a1 + 16), v10);
  }
  return 0;
}

void sub_215744924(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21574492CLL);
  }
  _Unwind_Resume(a1);
}

void sub_21574493C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      size_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215747E90(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      size_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      unint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        unint64_t v6 = *(const char **)v6;
      }
      size_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215747E90(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215747E90(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x215744824);
  }
  _Unwind_Resume(a1);
}

void sub_215744954(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215744960);
  }
  _Unwind_Resume(a1);
}

void sub_215744B18(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215744B20);
  }
  sub_215731D80(a1);
}

BOOL sub_215744B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    unint64_t v6 = sub_215746724();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)char v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)std::string __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215744D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

long long *sub_215744D68@<X0>(long long *result@<X0>, char *a2@<X8>)
{
  if (result)
  {
    unint64_t v3 = result;
    sub_215746C14(a2, result + 2);
    __n128 result = (long long *)sub_2157471AC(a2 + 208, (uint64_t)(v3 + 15));
    a2[384] = 1;
  }
  else
  {
    *a2 = 0;
    a2[384] = 0;
  }
  return result;
}

void sub_215744DD4(void *a1)
{
  sub_215746614((uint64_t)v1);
  __cxa_begin_catch(a1);
  unint64_t v3 = sub_21574732C();
  char v4 = (uint64_t *)sub_215747548();
  sub_215740F64((std::string::size_type)v3, v4, 0);
  *uint64_t v1 = 0;
  v1[384] = 0;
  __cxa_end_catch();
  JUMPOUT(0x215744DA8);
}

uint64_t sub_215744E28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 384))
  {
    if (*(unsigned char *)(a1 + 368))
    {
      if (*(unsigned char *)(a1 + 328) && *(char *)(a1 + 327) < 0) {
        operator delete(*(void **)(a1 + 304));
      }
      if (*(unsigned char *)(a1 + 288) && *(char *)(a1 + 263) < 0) {
        operator delete(*(void **)(a1 + 240));
      }
      if (*(unsigned char *)(a1 + 232) && *(char *)(a1 + 231) < 0) {
        operator delete(*(void **)(a1 + 208));
      }
    }
    sub_215746614(a1);
  }
  return a1;
}

char *VZDataGetBlob(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetBlob", a1, a2)) {
    return 0;
  }
  char v4 = *(char **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v4 = &v10;
  char v33 = &v34;
  uint64_t v34 = a2;
  sub_2157C3704(a1 + 32, (uint64_t)&v22);
  int v5 = v32;
  if (!v32)
  {
    long long v11 = v22;
    sub_215741BFC(&v12, &v23);
    char v21 = 1;
    sub_21574A330(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0) {
          operator delete(__p);
        }
        if (v16 < 0) {
          operator delete(v15);
        }
      }
      if (v14 && v13 < 0) {
        operator delete(v12);
      }
    }
    goto LABEL_28;
  }
  uint64_t v6 = sub_21574A500((uint64_t)&v22);
  long long v7 = (char *)operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v7)
  {
    char v4 = v7;
    *((_OWORD *)v7 + 1) = *(_OWORD *)v6;
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    *((_DWORD *)v7 + 8) = 1;
    *(void *)long long v7 = &unk_26C6567C0;
    *((void *)v7 + 1) = &unk_26C656810;
  }
  else
  {
    LOBYTE(v11) = 0;
    char v21 = 0;
    sub_21574A330(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0) {
          operator delete(__p);
        }
        if (v16 < 0) {
          operator delete(v15);
        }
      }
      char v4 = 0;
      if (!v14 || (v13 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v12);
    }
    char v4 = 0;
  }
LABEL_28:
  if (v32)
  {
    std::logic_error v8 = (std::__shared_weak_count *)*((void *)&v22 + 1);
    if (*((void *)&v22 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v22 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else if (v31)
  {
    if (v30)
    {
      if (v29 < 0) {
        operator delete(v28);
      }
      if (v27 < 0) {
        operator delete(v26);
      }
    }
    if (v25 && v24 < 0) {
      operator delete((void *)v23);
    }
  }
  if (!v5) {
    char v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_215745144(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    long long v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      int v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21574A330((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21574A330((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215745120);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  unsigned __int8 v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    unsigned __int8 v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  long long v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    int64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    int64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21574A330((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

BOOL sub_2157456B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v6 = sub_21574A05C();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)char v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)std::string __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_2157458AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

char *VZBlobCreateWithBytes(const void *a1, size_t a2, uint64_t a3)
{
  unint64_t v3 = &v9;
  char v32 = &v33;
  uint64_t v33 = a3;
  sub_2157C2BA4(a1, a2, (uint64_t)&v21);
  int v4 = v31;
  if (v31)
  {
    uint64_t v5 = sub_21574A500((uint64_t)&v21);
    uint64_t v6 = (char *)operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      unint64_t v3 = v6;
      *((_OWORD *)v6 + 1) = *(_OWORD *)v5;
      *(void *)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)uint64_t v6 = &unk_26C6567C0;
      *((void *)v6 + 1) = &unk_26C656810;
      goto LABEL_25;
    }
    LOBYTE(v10) = 0;
    char v20 = 0;
    sub_21574A80C(&v32, (uint64_t)&v10);
    if (!v20 || !v19) {
      goto LABEL_24;
    }
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    unint64_t v3 = 0;
    if (v13 && v12 < 0)
    {
      operator delete(v11);
LABEL_24:
      unint64_t v3 = 0;
    }
  }
  else
  {
    long long v10 = v21;
    sub_215741BFC(&v11, &v22);
    char v20 = 1;
    sub_21574A80C(&v32, (uint64_t)&v10);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0) {
          operator delete(__p);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
      }
      if (v13 && v12 < 0) {
        operator delete(v11);
      }
    }
  }
LABEL_25:
  if (v31)
  {
    long long v7 = (std::__shared_weak_count *)*((void *)&v21 + 1);
    if (*((void *)&v21 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v21 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v30)
  {
    if (v29)
    {
      if (v28 < 0) {
        operator delete(v27);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
    }
    if (v24 && v23 < 0) {
      operator delete((void *)v22);
    }
  }
  if (!v4) {
    return 0;
  }
  return v3;
}

void sub_215745B48(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    long long v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      int v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21574A80C((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21574A80C((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215745B28);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  unsigned __int8 v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    unsigned __int8 v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  long long v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    int64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    int64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21574A80C((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZBlobGetBytePtr(uint64_t a1)
{
  if (sub_215744B30((uint64_t)"VZBlobGetBytePtr", a1, 0)) {
    return 0;
  }

  return sub_2157C2B30(a1 + 16);
}

uint64_t VZBlobGetByteCount(uint64_t a1)
{
  BOOL v2 = sub_215744B30((uint64_t)"VZBlobGetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(*(void *)(a1 + 16) + 16);
  }
  return result;
}

uint64_t sub_215746158(uint64_t result)
{
  return result;
}

uint64_t sub_215746168(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157461A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAA0))
  {
    return qword_26788AA98;
  }
  qword_26788AA98 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AAA0);
  return qword_26788AA98;
}

void *sub_215746208(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656858, 0);
  if (result)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    uint64_t v5 = result[2];
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6 != *(void *)(v5 + 16)) {
      return 0;
    }
    long long v7 = *(unsigned __int8 **)(v4 + 24);
    std::logic_error v8 = *(unsigned __int8 **)(v5 + 24);
    char v9 = &v7[v6];
    long long v10 = &v8[v6];
    if (v6)
    {
      for (uint64_t i = v6 - 1; ; --i)
      {
        uint64_t v12 = i;
        if (*v7 != *v8) {
          break;
        }
        ++v7;
        ++v8;
        if (!v12)
        {
          std::logic_error v8 = v10;
          long long v7 = v9;
          return (void *)(v7 == v9 && v8 == v10);
        }
      }
      return 0;
    }
    return (void *)(v7 == v9 && v8 == v10);
  }
  return result;
}

void sub_2157462EC(uint64_t a1)
{
  sub_2157469F8();
  uint64_t v2 = a1;
  operator new();
}

void sub_215746538(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v23 = sub_2157469F8();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21574651CLL);
}

uint64_t sub_215746608(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

uint64_t sub_215746614(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 200))
  {
    uint64_t v2 = *(void *)(a1 + 176);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 184);
      uint64_t v4 = *(void **)(a1 + 176);
      if (v3 == v2)
      {
LABEL_14:
        *(void *)(a1 + 184) = v2;
        operator delete(v4);
        goto LABEL_15;
      }
      while (1)
      {
        if (*(unsigned char *)(v3 - 16) && *(char *)(v3 - 41) < 0)
        {
          operator delete(*(void **)(v3 - 64));
          if (*(unsigned char *)(v3 - 72))
          {
LABEL_9:
            if (*(char *)(v3 - 73) < 0) {
              operator delete(*(void **)(v3 - 96));
            }
          }
        }
        else if (*(unsigned char *)(v3 - 72))
        {
          goto LABEL_9;
        }
        v3 -= 96;
        if (v3 == v2)
        {
          uint64_t v4 = *(void **)(a1 + 176);
          goto LABEL_14;
        }
      }
    }
  }
LABEL_15:
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if (!*(unsigned char *)(a1 + 80)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(a1 + 80))
  {
    goto LABEL_21;
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
LABEL_21:
  if (!*(unsigned char *)(a1 + 24) || (*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t *sub_215746724()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678838A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678838A0))
  {
    uint64_t v1 = sub_215746874();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = &qword_267883888;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883890 = v4 + 1;
      unk_267883898 = v8 | 0x8000000000000000;
      qword_267883888 = (uint64_t)v9;
      uint64_t v6 = v9;
    }
    else
    {
      qword_267883890 = 0;
      unk_267883898 = 0;
      qword_267883888 = 0;
      byte_26788389F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883888, &dword_21572C000);
        __cxa_guard_release(&qword_2678838A0);
        return &qword_267883888;
      }
    }
    if (v3 >= 0) {
      long long v10 = v2;
    }
    else {
      long long v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883888;
}

void sub_21574685C(_Unwind_Exception *a1)
{
}

uint64_t *sub_215746874()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678838C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678838C0))
  {
    uint64_t v1 = sub_2157469F8();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (char *)operator new(v7 + 1);
      qword_2678838B0 = v4 + 6;
      unk_2678838B8 = v8 | 0x8000000000000000;
      qword_2678838A8 = (uint64_t)v9;
      *(_DWORD *)char v9 = 1936617315;
      uint64_t v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_2678838B0 = 0;
      unk_2678838B8 = 0;
      qword_2678838A8 = 0x2074736E6F63;
      byte_2678838BF = v4 + 6;
      uint64_t v6 = (char *)&qword_2678838A8 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_2678838A8, &dword_21572C000);
        __cxa_guard_release(&qword_2678838C0);
        return &qword_2678838A8;
      }
    }
    if (v3 >= 0) {
      long long v10 = v2;
    }
    else {
      long long v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_2678838A8;
}

void sub_2157469E0(_Unwind_Exception *a1)
{
}

long long *sub_2157469F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678838E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678838E0))
  {
    return &xmmword_2678838C8;
  }
  uint64_t v1 = (char *)sub_215746AE0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678838C8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678838D8 = *((void *)v1 + 2);
    xmmword_2678838C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678838C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678838E0);
  return &xmmword_2678838C8;
}

void sub_215746AC8(_Unwind_Exception *a1)
{
}

void *sub_215746AE0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883900))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZBlob]", qword_2678838E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678838E8, &dword_21572C000);
    __cxa_guard_release(&qword_267883900);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883920, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883920))
  {
    return &unk_267883908;
  }
  sub_215E19DF4((uint64_t)qword_2678838E8, (uint64_t)&unk_267883908);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883908, &dword_21572C000);
  __cxa_guard_release(&qword_267883920);
  return &unk_267883908;
}

void sub_215746BE4(_Unwind_Exception *a1)
{
}

void sub_215746BFC(_Unwind_Exception *a1)
{
}

char *sub_215746C14(char *__dst, long long *a2)
{
  *std::string __dst = 0;
  __dst[24] = 0;
  if (*((unsigned char *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v4 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)std::string __dst = v4;
    }
    __dst[24] = 1;
  }
  __dst[32] = 0;
  __dst[80] = 0;
  if (*((unsigned char *)a2 + 80))
  {
    if (*((char *)a2 + 55) < 0)
    {
      sub_215738B0C(__dst + 32, *((void **)a2 + 4), *((void *)a2 + 5));
    }
    else
    {
      long long v5 = a2[2];
      *((void *)__dst + 6) = *((void *)a2 + 6);
      *((_OWORD *)__dst + 2) = v5;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)__dst + 8) = _X0;
    *((void *)__dst + 9) = 0;
    __dst[80] = 1;
  }
  __dst[96] = 0;
  __dst[120] = 0;
  if (*((unsigned char *)a2 + 120))
  {
    if (*((char *)a2 + 119) < 0)
    {
      sub_215738B0C(__dst + 96, *((void **)a2 + 12), *((void *)a2 + 13));
    }
    else
    {
      long long v13 = a2[6];
      *((void *)__dst + 14) = *((void *)a2 + 14);
      *((_OWORD *)__dst + 6) = v13;
    }
    __dst[120] = 1;
  }
  long long v14 = a2[8];
  long long v15 = a2[9];
  *(_OWORD *)(__dst + 153) = *(long long *)((char *)a2 + 153);
  *((_OWORD *)__dst + 8) = v14;
  *((_OWORD *)__dst + 9) = v15;
  sub_215746DAC((uint64_t)(__dst + 176), (uint64_t)(a2 + 11));
  return __dst;
}

void sub_215746D44(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 120) && *(char *)(v1 + 119) < 0) {
    operator delete(*v3);
  }
  if (*(unsigned char *)(v1 + 80) && *(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215746DAC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    sub_215746E98((void *)a1, *(void *)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5));
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

void sub_215746E1C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    int v3 = *(void ***)v1;
    if (*(void *)v1)
    {
      long long v4 = *(void ***)(v1 + 8);
      long long v5 = *(void ***)v1;
      if (v4 != v3)
      {
        do
        {
          if (*((unsigned char *)v4 - 16) && *((char *)v4 - 41) < 0) {
            operator delete(*(v4 - 8));
          }
          if (*((unsigned char *)v4 - 72))
          {
            if (*((char *)v4 - 73) < 0) {
              operator delete(*(v4 - 12));
            }
          }
          v4 -= 12;
        }
        while (v4 != v3);
        long long v5 = *(void ***)v1;
      }
      *(void *)(v1 + 8) = v3;
      operator delete(v5);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_215746E98(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v5 = result;
    if (a4 >= 0x2AAAAAAAAAAAAABLL) {
      sub_215738AC0();
    }
    uint64_t result = operator new(96 * a4);
    uint64_t v8 = result;
    *long long v5 = result;
    v5[1] = result;
    v5[2] = &result[12 * a4];
    if (a2 != a3)
    {
      unint64_t v9 = 0;
      do
      {
        uint64_t result = sub_21574709C(&v8[v9 / 8], (long long *)(a2 + v9));
        v9 += 96;
      }
      while (a2 + v9 != a3);
      uint64_t v8 = (void *)((char *)v8 + v9);
    }
    v5[1] = v8;
  }
  return result;
}

void sub_215746F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_215746F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  if (!v11)
  {
LABEL_2:
    *(void *)(v9 + 8) = v10;
    sub_215746FD8(&a9);
    _Unwind_Resume(a1);
  }
  while (1)
  {
    uint64_t v13 = v10 + v11;
    if (*(unsigned char *)(v10 + v11 - 16) && *(char *)(v13 - 41) < 0)
    {
      operator delete(*(void **)(v13 - 64));
      if (*(unsigned char *)(v13 - 72))
      {
LABEL_7:
        if (*(char *)(v10 + v11 - 73) < 0) {
          operator delete(*(void **)(v13 - 96));
        }
      }
    }
    else if (*(unsigned char *)(v13 - 72))
    {
      goto LABEL_7;
    }
    v11 -= 96;
    if (!v11) {
      goto LABEL_2;
    }
  }
}

void ***sub_215746FD8(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    long long v2 = *result;
    int v3 = (void **)**result;
    if (v3)
    {
      long long v4 = (void **)v2[1];
      long long v5 = **result;
      if (v4 == v3)
      {
LABEL_15:
        v2[1] = v3;
        operator delete(v5);
        return v1;
      }
      while (1)
      {
        if (*((unsigned char *)v4 - 16) && *((char *)v4 - 41) < 0)
        {
          operator delete(*(v4 - 8));
          if (*((unsigned char *)v4 - 72))
          {
LABEL_10:
            if (*((char *)v4 - 73) < 0) {
              operator delete(*(v4 - 12));
            }
          }
        }
        else if (*((unsigned char *)v4 - 72))
        {
          goto LABEL_10;
        }
        v4 -= 12;
        if (v4 == v3)
        {
          long long v5 = **v1;
          goto LABEL_15;
        }
      }
    }
  }
  return result;
}

unsigned char *sub_21574709C(unsigned char *__dst, long long *a2)
{
  *std::string __dst = 0;
  __dst[24] = 0;
  if (*((unsigned char *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v4 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)std::string __dst = v4;
    }
    __dst[24] = 1;
  }
  __dst[32] = 0;
  __dst[80] = 0;
  if (*((unsigned char *)a2 + 80))
  {
    if (*((char *)a2 + 55) < 0)
    {
      sub_215738B0C(__dst + 32, *((void **)a2 + 4), *((void *)a2 + 5));
    }
    else
    {
      long long v5 = a2[2];
      *((void *)__dst + 6) = *((void *)a2 + 6);
      *((_OWORD *)__dst + 2) = v5;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)__dst + 8) = _X0;
    *((void *)__dst + 9) = 0;
    __dst[80] = 1;
  }
  return __dst;
}

void sub_215747168(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 80) && *(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_2157471AC(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[160] = 0;
  if (*(unsigned char *)(a2 + 160))
  {
    sub_21574724C((uint64_t)a1, a2);
    a1[160] = 1;
  }
  return a1;
}

void sub_2157471F0(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 160))
  {
    if (*(unsigned char *)(v1 + 120) && *(char *)(v1 + 119) < 0) {
      operator delete(*(void **)(v1 + 96));
    }
    if (*(unsigned char *)(v1 + 80) && *(char *)(v1 + 55) < 0) {
      operator delete(*(void **)(v1 + 32));
    }
    if (*(unsigned char *)(v1 + 24))
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21574724C(uint64_t a1, uint64_t a2)
{
  long long v4 = sub_21574709C((unsigned char *)a1, (long long *)a2);
  v4[96] = 0;
  v4[120] = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    if (*(char *)(a2 + 119) < 0)
    {
      sub_215738B0C(v4 + 96, *(void **)(a2 + 96), *(void *)(a2 + 104));
    }
    else
    {
      long long v5 = *(_OWORD *)(a2 + 96);
      *((void *)v4 + 14) = *(void *)(a2 + 112);
      *((_OWORD *)v4 + 6) = v5;
    }
    *(unsigned char *)(a1 + 120) = 1;
  }
  long long v6 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = v6;
  return a1;
}

void sub_2157472D8(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 120) && *(char *)(v1 + 119) < 0) {
    operator delete(*v2);
  }
  if (*(unsigned char *)(v1 + 80) && *(char *)(v1 + 55) < 0) {
    operator delete(*(void **)(v1 + 32));
  }
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

long long *sub_21574732C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883940, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883940))
  {
    return &xmmword_267883928;
  }
  uint64_t v1 = (char *)sub_215747414();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883928, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883938 = *((void *)v1 + 2);
    xmmword_267883928 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883928, &dword_21572C000);
  __cxa_guard_release(&qword_267883940);
  return &xmmword_267883928;
}

void sub_2157473FC(_Unwind_Exception *a1)
{
}

void *sub_215747414()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883960))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZDataInfo]", qword_267883948);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883948, &dword_21572C000);
    __cxa_guard_release(&qword_267883960);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883980, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883980))
  {
    return &unk_267883968;
  }
  sub_215E19DF4((uint64_t)qword_267883948, (uint64_t)&unk_267883968);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883968, &dword_21572C000);
  __cxa_guard_release(&qword_267883980);
  return &unk_267883968;
}

void sub_215747518(_Unwind_Exception *a1)
{
}

void sub_215747530(_Unwind_Exception *a1)
{
}

long long *sub_215747548()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678839A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678839A0))
  {
    return &xmmword_267883988;
  }
  uint64_t v1 = sub_215747630();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267883988, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267883998 = v1->__r_.__value_.__r.__words[2];
    xmmword_267883988 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883988, &dword_21572C000);
  __cxa_guard_release(&qword_2678839A0);
  return &xmmword_267883988;
}

void sub_215747618(_Unwind_Exception *a1)
{
}

std::string *sub_215747630()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678839C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678839C0))
  {
    return &stru_2678839A8;
  }
  sub_215747864((uint64_t)__p);
  sub_21574772C(__p, &stru_2678839A8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678839A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678839C0);
  return &stru_2678839A8;
}

void sub_2157476EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678839C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678839C0);
  _Unwind_Resume(a1);
}

void sub_21574772C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v4 = sub_215747A74();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v14 = *((void *)v4 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    uint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21574782C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215747864(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883A40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883A40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::DataInfo>]", qword_267883A28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883A28, &dword_21572C000);
    __cxa_guard_release(&qword_267883A40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883A60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883A60))
  {
    size_t v3 = sub_215747D98(qword_267883A28, "<", 0);
    sub_215747C90(qword_267883A28, 0, v3, qword_267883A48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883A48, &dword_21572C000);
    __cxa_guard_release(&qword_267883A60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883A80))
  {
    sub_215E19DF4((uint64_t)qword_267883A48, (uint64_t)&xmmword_267883A68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883A68, &dword_21572C000);
    __cxa_guard_release(&qword_267883A80);
  }
  if (byte_267883A7F < 0)
  {
    long long v2 = xmmword_267883A68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267883A68;
    *(void *)(a1 + 16) = unk_267883A78;
  }
}

void sub_215747A2C(_Unwind_Exception *a1)
{
}

void sub_215747A44(_Unwind_Exception *a1)
{
}

void sub_215747A5C(_Unwind_Exception *a1)
{
}

long long *sub_215747A74()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678839E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678839E0))
  {
    return &xmmword_2678839C8;
  }
  uint64_t v1 = (char *)sub_215747B5C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678839C8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678839D8 = *((void *)v1 + 2);
    xmmword_2678839C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678839C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678839E0);
  return &xmmword_2678839C8;
}

void sub_215747B44(_Unwind_Exception *a1)
{
}

void *sub_215747B5C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883A00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::DataInfo]", qword_2678839E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678839E8, &dword_21572C000);
    __cxa_guard_release(&qword_267883A00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883A20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883A20))
  {
    return &unk_267883A08;
  }
  sub_215E19DF4((uint64_t)qword_2678839E8, (uint64_t)&unk_267883A08);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883A08, &dword_21572C000);
  __cxa_guard_release(&qword_267883A20);
  return &unk_267883A08;
}

void sub_215747C60(_Unwind_Exception *a1)
{
}

void sub_215747C78(_Unwind_Exception *a1)
{
}

void *sub_215747C90@<X0>(void *result@<X0>, unint64_t a2@<X1>, size_t a3@<X2>, void *a4@<X8>)
{
  long long v5 = result;
  if ((*((char *)result + 23) & 0x80000000) == 0)
  {
    unint64_t v7 = *((unsigned __int8 *)result + 23);
    if (v7 >= a2)
    {
      size_t v8 = v7 - a2;
      if (v8 >= a3) {
        size_t v9 = a3;
      }
      else {
        size_t v9 = v8;
      }
      if (v9 < 0x7FFFFFFFFFFFFFF8) {
        goto LABEL_7;
      }
LABEL_19:
      sub_215731CD8();
    }
LABEL_20:
    sub_215739EF4();
  }
  unint64_t v13 = result[1];
  if (v13 < a2) {
    goto LABEL_20;
  }
  long long v5 = (void *)*result;
  size_t v14 = v13 - a2;
  if (v14 >= a3) {
    size_t v9 = a3;
  }
  else {
    size_t v9 = v14;
  }
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    goto LABEL_19;
  }
LABEL_7:
  if (v9 >= 0x17)
  {
    uint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v10 = v9 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v12 = operator new(v10 + 1);
    a4[1] = v9;
    a4[2] = v11 | 0x8000000000000000;
    *a4 = v12;
    a4 = v12;
  }
  else
  {
    *((unsigned char *)a4 + 23) = v9;
    if (!v9)
    {
      *(unsigned char *)a4 = 0;
      return result;
    }
  }
  uint64_t result = memmove(a4, (char *)v5 + a2, v9);
  *((unsigned char *)a4 + v9) = 0;
  return result;
}

unint64_t sub_215747D98(uint64_t *a1, char *__s, unint64_t a3)
{
  uint64_t v5 = (uint64_t)a1;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    size_t v7 = strlen(__s);
    if (v6 < a3) {
      return -1;
    }
  }
  else
  {
    unint64_t v6 = *((unsigned __int8 *)a1 + 23);
    size_t v7 = strlen(__s);
    if (v6 < a3) {
      return -1;
    }
  }
  int64_t v9 = v7;
  if (v7)
  {
    uint64_t v10 = (void *)(v5 + a3);
    uint64_t v11 = (char *)(v5 + v6);
    int64_t v12 = v6 - a3;
    if ((uint64_t)(v6 - a3) >= v9)
    {
      int v14 = *__s;
      do
      {
        uint64_t v15 = v12 - v9;
        if (v15 == -1) {
          break;
        }
        char v16 = (char *)memchr(v10, v14, v15 + 1);
        if (!v16) {
          break;
        }
        unint64_t v13 = v16;
        if (!memcmp(v16, __s, v9)) {
          goto LABEL_9;
        }
        uint64_t v10 = v13 + 1;
        int64_t v12 = v11 - (v13 + 1);
      }
      while (v12 >= v9);
    }
    unint64_t v13 = v11;
LABEL_9:
    if (v13 == v11) {
      return -1;
    }
    else {
      return (unint64_t)&v13[-v5];
    }
  }
  return a3;
}

void sub_215747E90(uint64_t **a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  long long v4 = (uint64_t *)sub_21574875C();
  uint64_t v5 = sub_21574860C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v26 = v5[2];
    long long __dst = v6;
  }
  size_t v7 = sub_215747548();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v27, *(void **)v7, *((void *)v7 + 1));
  }
  else
  {
    long long v8 = *v7;
    uint64_t v28 = *((void *)v7 + 2);
    long long v27 = v8;
  }
  sub_21573A150(&v23, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v12, a2);
  sub_21574086C(v4, (uint64_t *)&v23, (uint64_t)v12, **a1);
  if (!v22 || !v21) {
    goto LABEL_15;
  }
  if (!v20) {
    goto LABEL_12;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v16);
    if (!v15) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v18);
  if (v17 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v15) {
    goto LABEL_15;
  }
LABEL_13:
  if (v14 < 0) {
    operator delete(__p);
  }
LABEL_15:
  int64_t v9 = (void **)v23;
  if (v23)
  {
    uint64_t v10 = v24;
    uint64_t v11 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      uint64_t v11 = v23;
    }
    char v24 = v9;
    operator delete(v11);
  }
  if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v27);
  if (SHIBYTE(v26) < 0) {
    goto LABEL_27;
  }
}

void sub_215748080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  if (*(char *)(v25 - 73) < 0)
  {
    operator delete(*(void **)(v25 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157480E0(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 528))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215748168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21574817C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215748198(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2157481AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 528))
  {
    sub_215748B40(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

std::runtime_error *sub_21574824C(std::runtime_error *a1, uint64_t a2)
{
  uint64_t result = std::runtime_error::runtime_error(a1, (const std::runtime_error *)a2);
  result->__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C2E8] + 16);
  result[1] = *(std::runtime_error *)(a2 + 16);
  result->__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  result[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  result[2].__imp_.__imp_ = (const char *)v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

unsigned char *sub_2157482C8(unsigned char *a1, const char **a2)
{
  long long v3 = *a2;
  size_t v4 = strlen(*a2);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    long long v6 = operator new(v7 + 1);
    *((void *)a1 + 1) = v5;
    *((void *)a1 + 2) = v8 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    a1[23] = v4;
    long long v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, v3, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  a1[24] = 1;
  return a1;
}

unsigned char *sub_215748384(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[384] = 0;
  if (*(unsigned char *)(a2 + 384))
  {
    sub_215748434((uint64_t)a1, (long long *)a2);
    a1[384] = 1;
  }
  return a1;
}

void sub_2157483C8(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 384))
  {
    if (*(unsigned char *)(v1 + 368))
    {
      if (*(unsigned char *)(v1 + 328) && *(char *)(v1 + 327) < 0) {
        operator delete(*(void **)(v1 + 304));
      }
      if (*(unsigned char *)(v1 + 288) && *(char *)(v1 + 263) < 0) {
        operator delete(*(void **)(v1 + 240));
      }
      if (*(unsigned char *)(v1 + 232))
      {
        if (*(char *)(v1 + 231) < 0) {
          operator delete(*(void **)(v1 + 208));
        }
      }
    }
    sub_215746614(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_215748434(uint64_t a1, long long *a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (*((unsigned char *)a2 + 24))
  {
    long long v2 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v2;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a1 + 24) = 1;
  }
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  if (*((unsigned char *)a2 + 80))
  {
    _X2 = 0;
    _X3 = 0;
    long long v5 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 32) = v5;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 4) = 0;
    __asm { CASPAL          X2, X3, X2, X3, [X8] }
    *(void *)(a1 + 64) = _X2;
    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 1;
  }
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  if (*((unsigned char *)a2 + 120))
  {
    long long v11 = a2[6];
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(_OWORD *)(a1 + 96) = v11;
    *((void *)a2 + 13) = 0;
    *((void *)a2 + 14) = 0;
    *((void *)a2 + 12) = 0;
    *(unsigned char *)(a1 + 120) = 1;
  }
  __n128 result = (__n128)a2[8];
  long long v13 = a2[9];
  long long v14 = *(long long *)((char *)a2 + 153);
  *(unsigned char *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 153) = v14;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v13;
  *(unsigned char *)(a1 + 200) = 0;
  if (*((unsigned char *)a2 + 200))
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 192) = 0;
    __n128 result = (__n128)a2[11];
    *(__n128 *)(a1 + 176) = result;
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    *((void *)a2 + 22) = 0;
    *((void *)a2 + 23) = 0;
    *((void *)a2 + 24) = 0;
    *(unsigned char *)(a1 + 200) = 1;
  }
  *(unsigned char *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 368) = 0;
  if (*((unsigned char *)a2 + 368))
  {
    *(unsigned char *)(a1 + 208) = 0;
    *(unsigned char *)(a1 + 232) = 0;
    if (*((unsigned char *)a2 + 232))
    {
      long long v15 = a2[13];
      *(void *)(a1 + 224) = *((void *)a2 + 28);
      *(_OWORD *)(a1 + 208) = v15;
      *((void *)a2 + 27) = 0;
      *((void *)a2 + 28) = 0;
      *((void *)a2 + 26) = 0;
      *(unsigned char *)(a1 + 232) = 1;
    }
    *(unsigned char *)(a1 + 240) = 0;
    *(unsigned char *)(a1 + 288) = 0;
    if (*((unsigned char *)a2 + 288))
    {
      _X2 = 0;
      _X3 = 0;
      long long v18 = a2[15];
      *(void *)(a1 + 256) = *((void *)a2 + 32);
      *(_OWORD *)(a1 + 240) = v18;
      *((void *)a2 + 31) = 0;
      *((void *)a2 + 32) = 0;
      *((void *)a2 + 30) = 0;
      __asm { CASPAL          X2, X3, X2, X3, [X8] }
      *(void *)(a1 + 272) = _X2;
      *(void *)(a1 + 280) = 0;
      *(unsigned char *)(a1 + 288) = 1;
    }
    *(unsigned char *)(a1 + 304) = 0;
    *(unsigned char *)(a1 + 328) = 0;
    if (*((unsigned char *)a2 + 328))
    {
      long long v20 = a2[19];
      *(void *)(a1 + 320) = *((void *)a2 + 40);
      *(_OWORD *)(a1 + 304) = v20;
      *((void *)a2 + 39) = 0;
      *((void *)a2 + 40) = 0;
      *((void *)a2 + 38) = 0;
      *(unsigned char *)(a1 + 328) = 1;
    }
    __n128 result = (__n128)a2[21];
    *(void *)(a1 + 352) = *((void *)a2 + 44);
    *(__n128 *)(a1 + 336) = result;
    *(unsigned char *)(a1 + 368) = 1;
  }
  return result;
}

uint64_t *sub_21574860C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883B00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883B00))
  {
    uint64_t v1 = sub_215746874();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267883AE8;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      int64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883AF0 = v4 + 1;
      unk_267883AF8 = v8 | 0x8000000000000000;
      qword_267883AE8 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267883AF0 = 0;
      unk_267883AF8 = 0;
      qword_267883AE8 = 0;
      byte_267883AFF = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883AE8, &dword_21572C000);
        __cxa_guard_release(&qword_267883B00);
        return &qword_267883AE8;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883AE8;
}

void sub_215748744(_Unwind_Exception *a1)
{
}

long long *sub_21574875C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883AA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883AA0))
  {
    return &xmmword_267883A88;
  }
  uint64_t v1 = (char *)sub_215748844();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883A88, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883A98 = *((void *)v1 + 2);
    xmmword_267883A88 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883A88, &dword_21572C000);
  __cxa_guard_release(&qword_267883AA0);
  return &xmmword_267883A88;
}

void sub_21574882C(_Unwind_Exception *a1)
{
}

void *sub_215748844()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883AC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883AC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZData]", qword_267883AA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883AA8, &dword_21572C000);
    __cxa_guard_release(&qword_267883AC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883AE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883AE0))
  {
    return &unk_267883AC8;
  }
  sub_215E19DF4((uint64_t)qword_267883AA8, (uint64_t)&unk_267883AC8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883AC8, &dword_21572C000);
  __cxa_guard_release(&qword_267883AE0);
  return &unk_267883AC8;
}

void sub_215748948(_Unwind_Exception *a1)
{
}

void sub_215748960(_Unwind_Exception *a1)
{
}

uint64_t sub_215748978(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 32) = *((void *)a2 + 2);
  *(_OWORD *)(a1 + 16) = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 6);
  __n128 v5 = sub_215748434(a1 + 48, a2 + 2);
  uint64_t v6 = *((void *)a2 + 53);
  uint64_t v7 = *((void *)a2 + 54);
  *(void *)(a1 + 432) = &unk_26C678D20;
  *(void *)(a1 + 440) = v6;
  *(void *)(a1 + 448) = v7;
  *((void *)a2 + 53) = 0;
  *((void *)a2 + 54) = 0;
  *(unsigned char *)(a1 + 464) = 0;
  *(unsigned char *)(a1 + 496) = 0;
  if (*((unsigned char *)a2 + 480))
  {
    *(void *)(a1 + 464) = 0;
    *(void *)(a1 + 472) = 0;
    uint64_t v8 = (void (*)(uint64_t, __n128))*((void *)a2 + 56);
    if (v8) {
      v8(2, v5);
    }
    *(unsigned char *)(a1 + 496) = 1;
  }
  *(unsigned char *)(a1 + 504) = 0;
  *(unsigned char *)(a1 + 528) = 0;
  if (*((unsigned char *)a2 + 512))
  {
    *(void *)(a1 + 504) = &unk_26C684900;
    *(_OWORD *)(a1 + 512) = a2[31];
    *((void *)a2 + 62) = 0;
    *((void *)a2 + 63) = 0;
    *(unsigned char *)(a1 + 528) = 1;
  }
  *(void *)a1 = &unk_26C6568F0;
  *(_DWORD *)(a1 + 536) = 1;
  return a1;
}

void sub_215748AAC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215748AC8(uint64_t a1)
{
  return a1;
}

void sub_215748AF4(uint64_t a1)
{
  sub_215748B40(a1 + 16);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215748B40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 512)
    && (*(void *)(a1 + 488) = &unk_26C684900, (long long v2 = *(std::__shared_weak_count **)(a1 + 504)) != 0)
    && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!*(unsigned char *)(a1 + 480)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 480))
  {
    goto LABEL_7;
  }
  int v3 = *(void (**)(void))(a1 + 448);
  if (v3) {
    v3(0);
  }
LABEL_7:
  long long v4 = *(std::__shared_weak_count **)(a1 + 432);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  if (!*(unsigned char *)(a1 + 400)) {
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 360) && *(char *)(a1 + 359) < 0) {
    operator delete(*(void **)(a1 + 336));
  }
  if (*(unsigned char *)(a1 + 320) && *(char *)(a1 + 295) < 0) {
    operator delete(*(void **)(a1 + 272));
  }
  if (*(unsigned char *)(a1 + 264) && *(char *)(a1 + 263) < 0)
  {
    operator delete(*(void **)(a1 + 240));
    sub_215746614(a1 + 32);
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else
  {
LABEL_19:
    sub_215746614(a1 + 32);
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_215748CE0(char *__s, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  int v14 = 0;
  sub_2157491FC(v13, __s);
  long long v15 = (void **)v13;
  uint64_t v16 = a2;
  char v17 = v13;
  uint64_t v18 = a2;
  uint64_t v19 = a2;
  if (v14 == -1) {
    sub_215742D4C();
  }
  long long v20 = &v15;
  ((void (*)(void **, _DWORD *))off_26C656948[v14])(&v20, v13);
  long long v15 = (void **)v13;
  uint64_t v16 = a3;
  char v17 = v13;
  uint64_t v18 = a3;
  uint64_t v19 = a3;
  if (v14 == -1) {
    sub_215742D4C();
  }
  long long v20 = &v15;
  ((void (*)(void **, _DWORD *))off_26C656900[v14])(&v20, v13);
  sub_215748F40((uint64_t)&v12, (uint64_t)v13, a4);
  long long v15 = (void **)v13;
  uint64_t v16 = a5;
  char v17 = v13;
  uint64_t v18 = a5;
  uint64_t v19 = a5;
  if (v14 == -1) {
    sub_215742D4C();
  }
  long long v20 = &v15;
  ((void (*)(void **, _DWORD *))off_26C656900[v14])(&v20, v13);
  long long v15 = (void **)v13;
  uint64_t v16 = a6;
  char v17 = v13;
  uint64_t v18 = a6;
  uint64_t v19 = a6;
  if (v14 == -1) {
    sub_215742D4C();
  }
  long long v20 = &v15;
  ((void (*)(void **, _DWORD *))off_26C656948[v14])(&v20, v13);
  if (v14 == -1) {
    sub_215742D4C();
  }
  long long v15 = &v20;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C656978[v14])(&v15, v13);
  if (v14 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C656918[v14])(&v15, v13);
  }
  return result;
}

void sub_215748EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215748F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215748F40(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3) {
    operator new();
  }
  v6[0] = a2;
  v6[1] = "nullptr";
  v6[2] = a2;
  v6[3] = "nullptr";
  v6[4] = "nullptr";
  uint64_t v3 = *(unsigned int *)(a2 + 24);
  if (v3 == -1) {
    sub_215742D4C();
  }
  long long __dst = v6;
  return ((uint64_t (*)(void **, uint64_t))off_26C656930[v3])(&__dst, a2);
}

void sub_215749178(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_21574919C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157491E0(_DWORD ***a1)
{
  return sub_2157491FC(**a1, (char *)(*a1)[1]);
}

void sub_2157491EC(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157491FC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C656918[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157492F0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  long long v13 = v3;
  *(void *)int v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C656918[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157494A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157494EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157495E8((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157495E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157495E8(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  char v21 = v8;
  char v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      long long v13 = (void **)*a1;
      int v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  long long v13 = (void **)*a1;
  int v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  int v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157497E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_2157497FC(uint64_t **result)
{
  uint64_t v1 = **result;
  uint64_t v2 = (long long *)(*result)[1];
  uint64_t v3 = *(unsigned int *)(v1 + 24);
  if (v3 != -1) {
    uint64_t result = (uint64_t **)((uint64_t (*)(char *, uint64_t))off_26C656918[v3])(&v5, v1);
  }
  *(_DWORD *)(v1 + 24) = -1;
  if (*((char *)v2 + 23) < 0)
  {
    uint64_t result = (uint64_t **)sub_215738B0C((unsigned char *)v1, *(void **)v2, *((void *)v2 + 1));
  }
  else
  {
    long long v4 = *v2;
    *(void *)(v1 + 16) = *((void *)v2 + 2);
    *(_OWORD *)uint64_t v1 = v4;
  }
  *(_DWORD *)(v1 + 24) = 1;
  return result;
}

void sub_21574989C(uint64_t a1, uint64_t a2)
{
}

char *sub_2157498A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215749AD0((char **)a2, v3);
    *(void *)(a2 + 8) = result;
  }
  else
  {
    if (*(char *)(v3 + 23) < 0)
    {
      sub_215738B0C(*(unsigned char **)(a2 + 8), *(void **)v3, *(void *)(v3 + 8));
    }
    else
    {
      long long v5 = *(_OWORD *)v3;
      *(void *)(v4 + 16) = *(void *)(v3 + 16);
      *(_OWORD *)unint64_t v4 = v5;
    }
    uint64_t result = (char *)(v4 + 24);
    *(void *)(a2 + 8) = v4 + 24;
    *(void *)(a2 + 8) = v4 + 24;
  }
  return result;
}

void sub_215749940(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_215749948(uint64_t *a1, uint64_t a2)
{
  v14[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v14 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v14[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  size_t v9 = v3;
  *(void *)size_t v10 = v14[0];
  *(void *)&v10[7] = *(void *)((char *)v14 + 7);
  char v11 = v4;
  memset(v14, 0, 15);
  long long v5 = (long long *)a1[1];
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__p, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v13 = *((void *)v5 + 2);
    long long __p = v6;
  }
  uint64_t v7 = *(unsigned int *)(v2 + 24);
  if (v7 != -1) {
    ((void (*)(char *, uint64_t))off_26C656918[v7])(&v8, v2);
  }
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v9, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((v11 & 0x80000000) == 0) {
      return;
    }
LABEL_10:
    operator delete(v9);
    return;
  }
  operator delete((void *)__p);
  if (v11 < 0) {
    goto LABEL_10;
  }
}

void sub_215749A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215749AD0(char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    size_t v9 = 0;
  }
  size_t v10 = &v9[24 * v5];
  uint64_t v16 = v10;
  unint64_t v17 = v10;
  long long v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_215738B0C(v10, *(void **)a2, *(void *)(a2 + 8));
    uint64_t v3 = *a1;
    char v4 = a1[1];
    size_t v10 = v16;
    char v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      uint64_t v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)size_t v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
    char v11 = v10 + 24;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v12 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  uint64_t v13 = *a1;
  uint64_t v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    int v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0) {
        operator delete(*v14);
      }
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    uint64_t v3 = v13;
  }
  if (v3) {
    operator delete(v3);
  }
  return v11;
}

void sub_215749C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

__n128 sub_215749CA8(__n128 ***a1)
{
  uint64_t v1 = **a1;
  uint64_t v2 = (*a1)[1];
  uint64_t v3 = v1[1].n128_u32[2];
  if (v3 != -1) {
    ((void (*)(char *, __n128 *))off_26C656918[v3])(&v5, v1);
  }
  v1[1].n128_u32[2] = -1;
  __n128 result = *v2;
  v1[1].n128_u64[0] = v2[1].n128_u64[0];
  *uint64_t v1 = result;
  v2->n128_u64[1] = 0;
  v2[1].n128_u64[0] = 0;
  v2->n128_u64[0] = 0;
  v1[1].n128_u32[2] = 1;
  return result;
}

void sub_215749D24(uint64_t a1, uint64_t a2)
{
}

char *sub_215749D30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= *(void *)(a2 + 16))
  {
    __n128 result = sub_215749F04((void **)a2, v3);
    *(void *)(a2 + 8) = result;
  }
  else
  {
    long long v5 = *(_OWORD *)v3;
    *(void *)(v4 + 16) = *(void *)(v3 + 16);
    *(_OWORD *)unint64_t v4 = v5;
    *(void *)(v3 + 8) = 0;
    *(void *)(v3 + 16) = 0;
    *(void *)uint64_t v3 = 0;
    __n128 result = (char *)(v4 + 24);
    *(void *)(a2 + 8) = v4 + 24;
  }
  return result;
}

void sub_215749D9C(uint64_t *a1, uint64_t a2)
{
  v14[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v14 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v14[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  size_t v9 = v3;
  *(void *)size_t v10 = v14[0];
  *(void *)&v10[7] = *(void *)((char *)v14 + 7);
  char v11 = v4;
  memset(v14, 0, 15);
  uint64_t v5 = a1[1];
  uint64_t v6 = *(void *)(v5 + 16);
  *(_OWORD *)long long __p = *(_OWORD *)v5;
  uint64_t v13 = v6;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  uint64_t v7 = *(unsigned int *)(v2 + 24);
  if (v7 != -1) {
    ((void (*)(char *, uint64_t))off_26C656918[v7])(&v8, v2);
  }
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v9, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((v11 & 0x80000000) == 0) {
      return;
    }
LABEL_7:
    operator delete(v9);
    return;
  }
  operator delete(__p[0]);
  if (v11 < 0) {
    goto LABEL_7;
  }
}

void sub_215749EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215749F04(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    uint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  char v8 = &v7[24 * v3];
  size_t v9 = &v7[24 * v6];
  *(_OWORD *)char v8 = *(_OWORD *)a2;
  *((void *)v8 + 2) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  size_t v10 = v8 + 24;
  char v11 = (void **)*a1;
  long long v12 = (void **)a1[1];
  if (v12 == *a1)
  {
    *a1 = v8;
    a1[1] = v10;
    a1[2] = v9;
  }
  else
  {
    do
    {
      long long v13 = *(_OWORD *)(v12 - 3);
      *((void *)v8 - 1) = *(v12 - 1);
      *(_OWORD *)(v8 - 24) = v13;
      v8 -= 24;
      *(v12 - 2) = 0;
      *(v12 - 1) = 0;
      *(v12 - 3) = 0;
      v12 -= 3;
    }
    while (v12 != v11);
    long long v12 = (void **)*a1;
    int v14 = (void **)a1[1];
    *a1 = v8;
    a1[1] = v10;
    a1[2] = v9;
    while (v14 != v12)
    {
      if (*((char *)v14 - 1) < 0) {
        operator delete(*(v14 - 3));
      }
      v14 -= 3;
    }
  }
  if (v12) {
    operator delete(v12);
  }
  return v10;
}

uint64_t *sub_21574A05C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883B20))
  {
    uint64_t v1 = sub_21574A1AC();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    unint64_t v6 = &qword_267883B08;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      size_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883B10 = v4 + 1;
      unk_267883B18 = v8 | 0x8000000000000000;
      qword_267883B08 = (uint64_t)v9;
      unint64_t v6 = v9;
    }
    else
    {
      qword_267883B10 = 0;
      unk_267883B18 = 0;
      qword_267883B08 = 0;
      byte_267883B1F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883B08, &dword_21572C000);
        __cxa_guard_release(&qword_267883B20);
        return &qword_267883B08;
      }
    }
    if (v3 >= 0) {
      size_t v10 = v2;
    }
    else {
      size_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883B08;
}

void sub_21574A194(_Unwind_Exception *a1)
{
}

uint64_t *sub_21574A1AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883B40))
  {
    uint64_t v1 = sub_21574875C();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      size_t v9 = (char *)operator new(v7 + 1);
      qword_267883B30 = v4 + 6;
      unk_267883B38 = v8 | 0x8000000000000000;
      qword_267883B28 = (uint64_t)v9;
      *(_DWORD *)size_t v9 = 1936617315;
      unint64_t v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267883B30 = 0;
      unk_267883B38 = 0;
      qword_267883B28 = 0x2074736E6F63;
      byte_267883B3F = v4 + 6;
      unint64_t v6 = (char *)&qword_267883B28 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883B28, &dword_21572C000);
        __cxa_guard_release(&qword_267883B40);
        return &qword_267883B28;
      }
    }
    if (v3 >= 0) {
      size_t v10 = v2;
    }
    else {
      size_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883B28;
}

void sub_21574A318(_Unwind_Exception *a1)
{
}

void sub_21574A330(uint64_t **a1, uint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_2157469F8();
  unint64_t v5 = sub_21574A5CC();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v24 = v5[2];
    long long __dst = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (!v20 || !v19) {
    goto LABEL_12;
  }
  if (!v18) {
    goto LABEL_9;
  }
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v14);
    if (!v13) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v13) {
    goto LABEL_12;
  }
LABEL_10:
  if (v12 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v7 = (uint64_t)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    size_t v9 = v21;
    if ((void *)v22 != v21)
    {
      do
      {
        if (*(char *)(v8 - 1) < 0) {
          operator delete(*(void **)(v8 - 24));
        }
        v8 -= 24;
      }
      while (v8 != v7);
      size_t v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21574A4B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 88));
  if (*(char *)(v2 - 41) < 0)
  {
    operator delete(*(void **)(v2 - 64));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21574A500(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_21574A588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21574A59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_21574A5B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_21574A5CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883B60))
  {
    uint64_t v1 = sub_21574A1AC();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267883B48;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      size_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883B50 = v4 + 1;
      unk_267883B58 = v8 | 0x8000000000000000;
      qword_267883B48 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267883B50 = 0;
      unk_267883B58 = 0;
      qword_267883B48 = 0;
      byte_267883B5F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883B48, &dword_21572C000);
        __cxa_guard_release(&qword_267883B60);
        return &qword_267883B48;
      }
    }
    if (v3 >= 0) {
      size_t v10 = v2;
    }
    else {
      size_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883B48;
}

void sub_21574A704(_Unwind_Exception *a1)
{
}

uint64_t sub_21574A71C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_9;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_9:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_10;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_10:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_21574A80C(uint64_t **a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_2157469F8();
  unint64_t v5 = sub_21574AA58();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v26 = v5[2];
    long long __dst = v6;
  }
  uint64_t v7 = sub_21574ABA8();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v27, (void *)*v7, v7[1]);
  }
  else
  {
    long long v8 = *(_OWORD *)v7;
    uint64_t v28 = v7[2];
    long long v27 = v8;
  }
  sub_21573A150(&v23, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v12, a2);
  sub_21574086C(v4, (uint64_t *)&v23, (uint64_t)v12, **a1);
  if (!v22 || !v21) {
    goto LABEL_15;
  }
  if (!v20) {
    goto LABEL_12;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v16);
    if (!v15) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v18);
  if (v17 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v15) {
    goto LABEL_15;
  }
LABEL_13:
  if (v14 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v9 = (uint64_t)v23;
  if (v23)
  {
    uint64_t v10 = v24;
    char v11 = v23;
    if ((void *)v24 != v23)
    {
      do
      {
        if (*(char *)(v10 - 1) < 0) {
          operator delete(*(void **)(v10 - 24));
        }
        v10 -= 24;
      }
      while (v10 != v9);
      char v11 = v23;
    }
    uint64_t v24 = v9;
    operator delete(v11);
  }
  if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v27);
  if (SHIBYTE(v26) < 0) {
    goto LABEL_27;
  }
}

void sub_21574A9F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 120));
  if (*(char *)(v2 - 49) < 0) {
    operator delete(*(void **)(v2 - 72));
  }
  if (*(char *)(v2 - 73) < 0)
  {
    operator delete(*(void **)(v2 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_21574AA58()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883B80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883B80))
  {
    uint64_t v1 = sub_21574AD04();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267883B68;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883B70 = v4 + 1;
      unk_267883B78 = v8 | 0x8000000000000000;
      qword_267883B68 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267883B70 = 0;
      unk_267883B78 = 0;
      qword_267883B68 = 0;
      byte_267883B7F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883B68, &dword_21572C000);
        __cxa_guard_release(&qword_267883B80);
        return &qword_267883B68;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883B68;
}

void sub_21574AB90(_Unwind_Exception *a1)
{
}

uint64_t *sub_21574ABA8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883BE0))
  {
    uint64_t v1 = sub_21574AEDC();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267883BC8;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883BD0 = v4 + 1;
      unk_267883BD8 = v8 | 0x8000000000000000;
      qword_267883BC8 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267883BD0 = 0;
      unk_267883BD8 = 0;
      qword_267883BC8 = 0;
      byte_267883BDF = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883BC8, &dword_21572C000);
        __cxa_guard_release(&qword_267883BE0);
        return &qword_267883BC8;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883BC8;
}

void sub_21574ACEC(_Unwind_Exception *a1)
{
}

uint64_t *sub_21574AD04()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883BA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883BA0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883BC0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267883BC0))
    {
      qword_267883BB0 = 0;
      unk_267883BB8 = 0xA00000000000000;
      LODWORD(qword_267883BA8) = 1936617315;
      WORD2(qword_267883BA8) = 8308;
      *(_DWORD *)((char *)&qword_267883BA8 + 6) = 1684631414;
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883BA8, &dword_21572C000);
      __cxa_guard_release(&qword_267883BC0);
    }
    int v1 = byte_267883BBF;
    if (byte_267883BBF >= 0) {
      size_t v2 = byte_267883BBF;
    }
    else {
      size_t v2 = qword_267883BB0;
    }
    unint64_t v3 = v2 + 1;
    if (v2 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v4 = &qword_267883B88;
    if (v3 >= 0x17)
    {
      uint64_t v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17) {
        uint64_t v5 = v3 | 7;
      }
      uint64_t v6 = v5 + 1;
      uint64_t v7 = (uint64_t *)operator new(v5 + 1);
      qword_267883B90 = v2 + 1;
      unk_267883B98 = v6 | 0x8000000000000000;
      qword_267883B88 = (uint64_t)v7;
      size_t v4 = v7;
    }
    else
    {
      qword_267883B90 = 0;
      unk_267883B98 = 0;
      qword_267883B88 = 0;
      byte_267883B9F = v2 + 1;
      if (!v2)
      {
LABEL_19:
        *(_WORD *)((char *)v4 + v2) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883B88, &dword_21572C000);
        __cxa_guard_release(&qword_267883BA0);
        return &qword_267883B88;
      }
    }
    if (v1 >= 0) {
      uint64_t v8 = &qword_267883BA8;
    }
    else {
      uint64_t v8 = (uint64_t *)qword_267883BA8;
    }
    memmove(v4, v8, v2);
    goto LABEL_19;
  }
  return &qword_267883B88;
}

void sub_21574AEC4(_Unwind_Exception *a1)
{
}

long long *sub_21574AEDC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883C00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883C00))
  {
    return &xmmword_267883BE8;
  }
  int v1 = (char *)sub_21574AFC4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883BE8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883BF8 = *((void *)v1 + 2);
    xmmword_267883BE8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883BE8, &dword_21572C000);
  __cxa_guard_release(&qword_267883C00);
  return &xmmword_267883BE8;
}

void sub_21574AFAC(_Unwind_Exception *a1)
{
}

void *sub_21574AFC4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883C20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883C20))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = unsigned long]", qword_267883C08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883C08, &dword_21572C000);
    __cxa_guard_release(&qword_267883C20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883C40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883C40))
  {
    return &unk_267883C28;
  }
  sub_215E19DF4((uint64_t)qword_267883C08, (uint64_t)&unk_267883C28);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883C28, &dword_21572C000);
  __cxa_guard_release(&qword_267883C40);
  return &unk_267883C28;
}

void sub_21574B0C8(_Unwind_Exception *a1)
{
}

void sub_21574B0E0(_Unwind_Exception *a1)
{
}

uint64_t sub_21574B0F8(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)(result + 16) = &unk_26C684548;
  long long v2 = *(std::__shared_weak_count **)(result + 32);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21574B194(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_26C684548;
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21574B224(uint64_t a1)
{
  *(void *)(a1 + 16) = &unk_26C684548;
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21574B2D0(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_26C684548;
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZCameraGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAB0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAB0))
  {
    return qword_26788AAA8;
  }
  qword_26788AAA8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AAB0);
  return qword_26788AAA8;
}

uint64_t VZDataCreateWithCamera(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_21574B99C((uint64_t)"VZDataCreateWithCamera", a1, a3))
  {
    sub_215744D68(a2, v9);
    uint64_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_2157CE344(a1 + 16, v10);
  }
  return 0;
}

void sub_21574B790(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21574B798);
  }
  _Unwind_Resume(a1);
}

void sub_21574B7A8(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21574E918(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      uint64_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21574E918(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_21574E918(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21574B690);
  }
  _Unwind_Resume(a1);
}

void sub_21574B7C0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21574B7CCLL);
  }
  _Unwind_Resume(a1);
}

void sub_21574B984(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21574B98CLL);
  }
  sub_215731D80(a1);
}

BOOL sub_21574B99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAB8))
  {
    sub_21574E584();
    int v7 = byte_26788AB37;
    if (byte_26788AB37 >= 0) {
      size_t v8 = byte_26788AB37;
    }
    else {
      size_t v8 = qword_26788AB28;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788AB08 + 1) = v8 + 1;
      unk_26788AB18 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788AB08 = v10;
    }
    else
    {
      unk_26788AB18 = 0;
      xmmword_26788AB08 = 0uLL;
      char v10 = &xmmword_26788AB08;
      byte_26788AB1F = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AB08, &dword_21572C000);
        __cxa_guard_release(&qword_26788AAB8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788AB20;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788AB20;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788AB1F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788AB08, *((unint64_t *)&xmmword_26788AB08 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788AB08;
    uint64_t v15 = unk_26788AB18;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21574BCD0(_Unwind_Exception *a1)
{
}

void sub_21574BCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

char *VZDataGetCamera(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetCamera", a1, a2)) {
    return 0;
  }
  size_t v4 = *(char **)(a1 + 568);
  if (v4) {
    return v4;
  }
  uint64_t v30 = &v31;
  uint64_t v31 = a2;
  sub_2157CE89C(a1 + 32, (uint64_t)v20);
  int v5 = v29;
  if (!v29)
  {
    long long v9 = *(_OWORD *)v20;
    sub_215741BFC(&v10, (long long *)&v20[16]);
    char v19 = 1;
    sub_21574ECBC(&v30, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_21574EE78((uint64_t)v20);
  uint64_t v6 = (char *)operator new(0x30uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    size_t v4 = v6;
    *((void *)v6 + 2) = &unk_26C684548;
    *(_OWORD *)(v6 + 24) = *(_OWORD *)&v20[8];
    *(void *)&v20[8] = 0;
    *(void *)&v20[16] = 0;
    *((_DWORD *)v6 + 10) = 1;
    *(void *)uint64_t v6 = &unk_26C6569A0;
    *((void *)v6 + 1) = &unk_26C6569F0;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_21574ECBC(&v30, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      size_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    size_t v4 = 0;
  }
LABEL_28:
  if (v29)
  {
    *(void *)char v20 = &unk_26C684548;
    int v7 = *(std::__shared_weak_count **)&v20[16];
    if (*(void *)&v20[16]
      && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v20[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v28)
  {
    if (v27)
    {
      if (v26 < 0) {
        operator delete(v25);
      }
      if (v24 < 0) {
        operator delete(v23);
      }
    }
    if (v22 && v21 < 0) {
      operator delete(*(void **)&v20[16]);
    }
  }
  if (!v5) {
    size_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_21574BFF8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  sub_21574EF44(v67 - 192);
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v71 = std::logic_error::what(&a10);
    size_t v72 = strlen(v71);
    if (v72 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v73 = (const char *)v72;
      if (v72 >= 0x17)
      {
        uint64_t v82 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v72 | 7) != 0x17) {
          uint64_t v82 = v72 | 7;
        }
        uint64_t v83 = v82 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v82 + 1);
        __dst.__imp_.__imp_ = v73;
        *(void *)&a37 = v83 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v72;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v72)
        {
LABEL_40:
          v73[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21574ECBC((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_91;
        }
      }
      memmove(p_dst, v71, (size_t)v73);
      goto LABEL_40;
    }
LABEL_90:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21574ECBC((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_91:
    JUMPOUT(0x21574BFD4);
  }
  uint64_t v75 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v75);
  a37 = *((_OWORD *)v75 + 1);
  uint64_t v77 = *((void *)v75 + 4);
  uint64_t v76 = *((void *)v75 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v77;
  a39 = v76;
  if (v76) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v76 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v78 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v78 = *(const char **)v78;
  }
  size_t v79 = strlen(v78);
  if (v79 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_90;
  }
  size_t v80 = (const char *)v79;
  if (v79 >= 0x17)
  {
    uint64_t v84 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17) {
      uint64_t v84 = v79 | 7;
    }
    uint64_t v85 = v84 + 1;
    long long v81 = (std::logic_error_vtbl *)operator new(v84 + 1);
    a10.__imp_.__imp_ = v80;
    a11 = v85 | 0x8000000000000000;
    a10.__vftable = v81;
  }
  else
  {
    HIBYTE(a11) = v79;
    long long v81 = (std::logic_error_vtbl *)&a10;
    if (!v79)
    {
LABEL_67:
      v80[(void)v81] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21574ECBC((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_91;
    }
  }
  memmove(v81, v78, (size_t)v80);
  goto LABEL_67;
}

unsigned char *VZCameraCreate(char a1)
{
  v6[0] = a1;
  char v28 = &v29;
  uint64_t v29 = 0;
  uint64_t v1 = v18;
  sub_2157CCC90(v6, (uint64_t)v18);
  int v2 = v27;
  if (v27)
  {
    sub_21574EE78((uint64_t)v18);
    unint64_t v3 = (char *)operator new(0x30uLL, MEMORY[0x263F8C180]);
    if (v3)
    {
      uint64_t v1 = v3;
      *((void *)v3 + 2) = &unk_26C684548;
      *(_OWORD *)(v3 + 24) = *(_OWORD *)&v18[8];
      *(void *)&v18[8] = 0;
      *(void *)&v18[16] = 0;
      *((_DWORD *)v3 + 10) = 1;
      *(void *)unint64_t v3 = &unk_26C6569A0;
      *((void *)v3 + 1) = &unk_26C6569F0;
      goto LABEL_25;
    }
    LOBYTE(v7) = 0;
    char v17 = 0;
    sub_21574F050(&v28, (uint64_t)&v7);
    if (!v17 || !v16) {
      goto LABEL_24;
    }
    if (v15)
    {
      if (v14 < 0) {
        operator delete(v13);
      }
      if (v12 < 0) {
        operator delete(v11);
      }
    }
    uint64_t v1 = 0;
    if (v10 && v9 < 0)
    {
      operator delete(v8);
LABEL_24:
      uint64_t v1 = 0;
    }
  }
  else
  {
    long long v7 = *(_OWORD *)v18;
    sub_215741BFC(&v8, (long long *)&v18[16]);
    char v17 = 1;
    sub_21574F050(&v28, (uint64_t)&v7);
    if (v17 && v16)
    {
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13);
        }
        if (v12 < 0) {
          operator delete(v11);
        }
      }
      if (v10 && v9 < 0) {
        operator delete(v8);
      }
    }
  }
LABEL_25:
  if (v27)
  {
    *(void *)char v18 = &unk_26C684548;
    size_t v4 = *(std::__shared_weak_count **)&v18[16];
    if (*(void *)&v18[16]
      && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v18[16] + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else if (v26)
  {
    if (v25)
    {
      if (v24 < 0) {
        operator delete(v23);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
    }
    if (v20 && v19 < 0) {
      operator delete(*(void **)&v18[16]);
    }
  }
  if (!v2) {
    return 0;
  }
  return v1;
}

void sub_21574C774(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,std::runtime_error a37,std::runtime_error_vtbl *a38,const char *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(a56);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  sub_21574EF44(v72 - 192);
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v76 = std::logic_error::what(&a10);
    size_t v77 = strlen(v76);
    if (v77 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v78 = (const char *)v77;
      if (v77 >= 0x17)
      {
        uint64_t v86 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v77 | 7) != 0x17) {
          uint64_t v86 = v77 | 7;
        }
        uint64_t v87 = v86 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v86 + 1);
        __dst.__imp_.__imp_ = v78;
        a37.__vftable = (std::runtime_error_vtbl *)(v87 | 0x8000000000000000);
        __dst.__vftable = p_dst;
      }
      else
      {
        HIBYTE(a37.__vftable) = v77;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v77)
        {
LABEL_40:
          v78[(void)p_dst] = 0;
          LOBYTE(a37.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v72 - 176), &a14);
          *(unsigned char *)(v72 - 72) = 1;
          sub_21574F050((uint64_t **)(v72 - 64), v72 - 192);
          if (*(unsigned char *)(v72 - 72) && *(unsigned char *)(v72 - 80))
          {
            if (*(unsigned char *)(v72 - 88))
            {
              if (*(char *)(v72 - 89) < 0) {
                operator delete(a72);
              }
              if (*(char *)(v72 - 121) < 0) {
                operator delete(a71);
              }
            }
            if (*(unsigned char *)(v72 - 152) && *(char *)(v72 - 153) < 0) {
              operator delete(a68);
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(__p);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (LOBYTE(a37.__imp_.__imp_))
          {
            if (SHIBYTE(a37.__vftable) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_91;
        }
      }
      memmove(p_dst, v76, (size_t)v78);
      goto LABEL_40;
    }
LABEL_90:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v72 - 192) = 0;
    *(unsigned char *)(v72 - 72) = 0;
    sub_21574F050((uint64_t **)(v72 - 64), v72 - 192);
    if (*(unsigned char *)(v72 - 72) && *(unsigned char *)(v72 - 80))
    {
      if (*(unsigned char *)(v72 - 88))
      {
        if (*(char *)(v72 - 89) < 0) {
          operator delete(a72);
        }
        if (*(char *)(v72 - 121) < 0) {
          operator delete(a71);
        }
      }
      if (*(unsigned char *)(v72 - 152) && *(char *)(v72 - 153) < 0) {
        operator delete(a68);
      }
    }
    __cxa_end_catch();
LABEL_91:
    JUMPOUT(0x21574C754);
  }
  size_t v80 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, v80);
  a37 = v80[1];
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  imp = v80[2].__imp_.__imp_;
  a38 = v80[2].__vftable;
  a39 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v82 = (const char *)&a38[2];
  if (SHIBYTE(a38[2].what) < 0) {
    uint64_t v82 = *(const char **)v82;
  }
  size_t v83 = strlen(v82);
  if (v83 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_90;
  }
  uint64_t v84 = (const char *)v83;
  if (v83 >= 0x17)
  {
    uint64_t v88 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17) {
      uint64_t v88 = v83 | 7;
    }
    uint64_t v89 = v88 + 1;
    uint64_t v85 = (std::logic_error_vtbl *)operator new(v88 + 1);
    a10.__imp_.__imp_ = v84;
    a11 = v89 | 0x8000000000000000;
    a10.__vftable = v85;
  }
  else
  {
    HIBYTE(a11) = v83;
    uint64_t v85 = (std::logic_error_vtbl *)&a10;
    if (!v83)
    {
LABEL_67:
      v84[(void)v85] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v72 - 176), &a14);
      *(unsigned char *)(v72 - 72) = 1;
      sub_21574F050((uint64_t **)(v72 - 64), v72 - 192);
      if (*(unsigned char *)(v72 - 72) && *(unsigned char *)(v72 - 80))
      {
        if (*(unsigned char *)(v72 - 88))
        {
          if (*(char *)(v72 - 89) < 0) {
            operator delete(a72);
          }
          if (*(char *)(v72 - 121) < 0) {
            operator delete(a71);
          }
        }
        if (*(unsigned char *)(v72 - 152) && *(char *)(v72 - 153) < 0) {
          operator delete(a68);
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(__p);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_91;
    }
  }
  memmove(v85, v82, (size_t)v84);
  goto LABEL_67;
}

uint64_t VZCameraSetPinholeLensParametersF(uint64_t a1, float a2, float a3, float a4, float a5)
{
  if (sub_21574CD64((uint64_t)"VZCameraSetPinholeLensParametersF", a1)) {
    return 0;
  }
  sub_2157C7028(a1 + 16, (uint64_t)v12, a2, a3, a4, a5);
  uint64_t v10 = sub_21574D0E8((uint64_t)"VZCameraSetPinholeLensParametersF", v12, 0, 0);
  if (!v22 && v21)
  {
    if (v20)
    {
      if (v19 < 0) {
        operator delete(__p);
      }
      if (v17 < 0) {
        operator delete(v16);
      }
    }
    if (v15 && v14 < 0) {
      operator delete(v13);
    }
  }
  return v10;
}

void sub_21574CD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_21574CD64(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AB00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AB00))
  {
    sub_21574E720();
    int v5 = byte_26788AB4F;
    if (byte_26788AB4F >= 0) {
      size_t v6 = byte_26788AB4F;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788AB38 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      size_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788ABE0 + 1) = v6 + 1;
      unk_26788ABF0 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788ABE0 = v8;
    }
    else
    {
      unk_26788ABF0 = 0;
      xmmword_26788ABE0 = 0uLL;
      size_t v8 = &xmmword_26788ABE0;
      byte_26788ABF7 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ABE0, &dword_21572C000);
        __cxa_guard_release(&qword_26788AB00);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788AB38;
    }
    else {
      char v11 = (long long *)xmmword_26788AB38;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788ABF7 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788ABE0, *((unint64_t *)&xmmword_26788ABE0 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788ABE0;
    uint64_t v13 = unk_26788ABF0;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_21574D094(_Unwind_Exception *a1)
{
}

void sub_21574D0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21574D0E8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  if (a2[120]) {
    return 1;
  }
  uint64_t v4 = a3;
  sub_21574F3D8("in function ", (const char *)&v20);
  sub_215E11614(a2, &v8, (uint64_t)&v10);
  sub_21573E208(&v10, a4);
  if (v19)
  {
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    if (v13)
    {
      if (v12 < 0) {
        operator delete(v11);
      }
    }
  }
  if ((v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_21574D1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZCameraSetPinholeLensParametersD(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if (sub_21574CD64((uint64_t)"VZCameraSetPinholeLensParametersD", a1)) {
    return 0;
  }
  sub_2157C90F8(a1 + 16, (uint64_t)v12, a2, a3, a4, a5);
  uint64_t v10 = sub_21574D0E8((uint64_t)"VZCameraSetPinholeLensParametersD", v12, 0, 0);
  if (!v22 && v21)
  {
    if (v20)
    {
      if (v19 < 0) {
        operator delete(__p);
      }
      if (v17 < 0) {
        operator delete(v16);
      }
    }
    if (v15 && v14 < 0) {
      operator delete(v13);
    }
  }
  return v10;
}

void sub_21574D2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZCameraSetHeikkilaLensParametersF(uint64_t a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  if (sub_21574CD64((uint64_t)"VZCameraSetHeikkilaLensParametersF", a1)) {
    return 0;
  }
  sub_2157C929C(a1 + 16, (uint64_t)v28, a2, a3, a4, a5, a6, a7, a8, a9, a17);
  uint64_t v26 = sub_21574D0E8((uint64_t)"VZCameraSetHeikkilaLensParametersF", v28, 0, 0);
  if (!v38 && v37)
  {
    if (v36)
    {
      if (v35 < 0) {
        operator delete(__p);
      }
      if (v33 < 0) {
        operator delete(v32);
      }
    }
    if (v31 && v30 < 0) {
      operator delete(v29);
    }
  }
  return v26;
}

void sub_21574D434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157407D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t VZCameraSetHeikkilaLensParametersD(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (sub_21574CD64((uint64_t)"VZCameraSetHeikkilaLensParametersD", a1)) {
    return 0;
  }
  sub_2157CAAF4(a1 + 16, (uint64_t)v28, a2, a3, a4, a5, a6, a7, a8, a9, a17);
  uint64_t v26 = sub_21574D0E8((uint64_t)"VZCameraSetHeikkilaLensParametersD", v28, 0, 0);
  if (!v38 && v37)
  {
    if (v36)
    {
      if (v35 < 0) {
        operator delete(__p);
      }
      if (v33 < 0) {
        operator delete(v32);
      }
    }
    if (v31 && v30 < 0) {
      operator delete(v29);
    }
  }
  return v26;
}

void sub_21574D574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157407D4((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL VZCameraSetImageSize(uint64_t a1, unsigned int a2, uint64_t a3)
{
  BOOL v6 = sub_21574CD64((uint64_t)"VZCameraSetImageSize", a1);
  if (!v6) {
    sub_2157CD1B0(a1 + 16, a2, a3);
  }
  return !v6;
}

uint64_t VZCameraGetLensModelType(uint64_t a1)
{
  if (sub_21574B99C((uint64_t)"VZCameraGetLensModelType", a1, 0)) {
    return 255;
  }
  unint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 24) + 24);

  return v3();
}

uint64_t VZCameraGetValueType(uint64_t a1)
{
  if (sub_21574B99C((uint64_t)"VZCameraGetValueType", a1, 0)) {
    return 255;
  }
  unint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 24) + 32);

  return v3();
}

uint64_t VZCameraGetPixelOrigin(uint64_t a1)
{
  if (sub_21574B99C((uint64_t)"VZCameraGetPixelOrigin", a1, 0)) {
    return 255;
  }
  unint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 24) + 16);

  return v3();
}

uint64_t VZCameraGetFocalLengthF(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_21574B99C((uint64_t)"VZCameraGetFocalLengthF", a1, 0)) {
    return v2;
  }
  sub_2157CAD48(a1 + 16, (uint64_t)v4);
  uint64_t v2 = sub_21574D838((uint64_t)"VZCameraGetFocalLengthF", v4);
  if (v14 || !v13) {
    return v2;
  }
  if (v12)
  {
    if (v11 < 0) {
      operator delete(__p);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
  }
  if (!v7 || (v6 & 0x80000000) == 0) {
    return v2;
  }
  operator delete(v5);
  return v2;
}

void sub_21574D824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_21574D838(uint64_t a1, char *a2)
{
  uint64_t v16 = a1;
  if (a2[120]) {
    return *(void *)a2;
  }
  sub_21574F3D8("in function ", (const char *)&v16);
  sub_215E11614(a2, &v4, (uint64_t)&v6);
  sub_21573E208(&v6, 0);
  if (v15)
  {
    if (v14)
    {
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete(v7);
    }
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  return 0;
}

void sub_21574D920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZCameraGetFocalLengthD(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_21574B99C((uint64_t)"VZCameraGetFocalLengthD", a1, 0)) {
    return v2;
  }
  sub_2157CB1BC(a1 + 16, (uint64_t)v4);
  uint64_t v2 = sub_21574DA2C((uint64_t)"VZCameraGetFocalLengthD", v4);
  if (v14 || !v13) {
    return v2;
  }
  if (v12)
  {
    if (v11 < 0) {
      operator delete(__p);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
  }
  if (!v7 || (v6 & 0x80000000) == 0) {
    return v2;
  }
  operator delete(v5);
  return v2;
}

void sub_21574DA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_21574DA2C(uint64_t a1, char *a2)
{
  uint64_t v16 = a1;
  if (a2[120]) {
    return *(void *)a2;
  }
  sub_21574F3D8("in function ", (const char *)&v16);
  sub_215E11614(a2, &v4, (uint64_t)&v6);
  sub_21573E208(&v6, 0);
  if (v15)
  {
    if (v14)
    {
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete(v7);
    }
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  return 0;
}

void sub_21574DB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZCameraGetPrincipalPointF(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_21574B99C((uint64_t)"VZCameraGetPrincipalPointF", a1, 0)) {
    return v2;
  }
  sub_2157CB630(a1 + 16, (uint64_t)v4);
  uint64_t v2 = sub_21574D838((uint64_t)"VZCameraGetPrincipalPointF", v4);
  if (v14 || !v13) {
    return v2;
  }
  if (v12)
  {
    if (v11 < 0) {
      operator delete(__p);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
  }
  if (!v7 || (v6 & 0x80000000) == 0) {
    return v2;
  }
  operator delete(v5);
  return v2;
}

void sub_21574DC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZCameraGetPrincipalPointD(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_21574B99C((uint64_t)"VZCameraGetPrincipalPointD", a1, 0)) {
    return v2;
  }
  sub_2157CBAA4(a1 + 16, (uint64_t)v4);
  uint64_t v2 = sub_21574DA2C((uint64_t)"VZCameraGetPrincipalPointD", v4);
  if (v14 || !v13) {
    return v2;
  }
  if (v12)
  {
    if (v11 < 0) {
      operator delete(__p);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
  }
  if (!v7 || (v6 & 0x80000000) == 0) {
    return v2;
  }
  operator delete(v5);
  return v2;
}

void sub_21574DCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZCameraGetHeikkilaLensDistortionCoefficientsF(uint64_t a1)
{
  BOOL v2 = sub_21574B99C((uint64_t)"VZCameraGetHeikkilaLensDistortionCoefficientsF", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    sub_2157CBF18(a1 + 16, (uint64_t)v4);
    uint64_t v26 = "VZCameraGetHeikkilaLensDistortionCoefficientsF";
    if (v13) {
      return v4[0];
    }
    sub_21574F3D8("in function ", (const char *)&v26);
    sub_215E11614((char *)v4, &v14, (uint64_t)&v16);
    sub_21573E208(&v16, 0);
    if (v25)
    {
      if (v24)
      {
        if (v23 < 0) {
          operator delete(__p);
        }
        if (v21 < 0) {
          operator delete(v20);
        }
      }
      if (v19 && v18 < 0) {
        operator delete(v17);
      }
    }
    if (v15 < 0)
    {
      operator delete(v14);
      if (v13) {
        return 0;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (!v12) {
      return 0;
    }
    if (v11)
    {
      if (v10 < 0) {
        operator delete(v9);
      }
      if (v8 < 0) {
        operator delete(v7);
      }
    }
    uint64_t result = 0;
    if (v6)
    {
      if (v5 < 0)
      {
        operator delete((void *)v4[2]);
        return 0;
      }
    }
  }
  return result;
}

void sub_21574DE84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t VZCameraGetHeikkilaLensDistortionCoefficientsD(uint64_t a1)
{
  BOOL v2 = sub_21574B99C((uint64_t)"VZCameraGetHeikkilaLensDistortionCoefficientsD", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    sub_2157CC69C(a1 + 16, (uint64_t)v4);
    uint64_t v26 = "VZCameraGetHeikkilaLensDistortionCoefficientsD";
    if (v13) {
      return v4[0];
    }
    sub_21574F3D8("in function ", (const char *)&v26);
    sub_215E11614((char *)v4, &v14, (uint64_t)&v16);
    sub_21573E208(&v16, 0);
    if (v25)
    {
      if (v24)
      {
        if (v23 < 0) {
          operator delete(__p);
        }
        if (v21 < 0) {
          operator delete(v20);
        }
      }
      if (v19 && v18 < 0) {
        operator delete(v17);
      }
    }
    if (v15 < 0)
    {
      operator delete(v14);
      if (v13) {
        return 0;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (!v12) {
      return 0;
    }
    if (v11)
    {
      if (v10 < 0) {
        operator delete(v9);
      }
      if (v8 < 0) {
        operator delete(v7);
      }
    }
    uint64_t result = 0;
    if (v6)
    {
      if (v5 < 0)
      {
        operator delete((void *)v4[2]);
        return 0;
      }
    }
  }
  return result;
}

void sub_21574E050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t VZCameraGetImageSize(uint64_t a1)
{
  if (sub_21574B99C((uint64_t)"VZCameraGetImageSize", a1, 0)) {
    return 0;
  }
  unint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 24) + 40);

  return v3();
}

uint64_t sub_21574E114(uint64_t result)
{
  return result;
}

uint64_t sub_21574E124(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21574E160()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAB0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAB0))
  {
    return qword_26788AAA8;
  }
  qword_26788AAA8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AAB0);
  return qword_26788AAA8;
}

void *sub_21574E1C4(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656A38, 0);
  if (result) {
    return (void *)sub_215D232DC(a1 + 16, (uint64_t)result + 16);
  }
  return result;
}

void sub_21574E244(uint64_t a1)
{
  sub_21574E720();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_21574E498(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21574E720();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788AB38, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_21574E578(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

void sub_21574E584()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAC0))
  {
    return;
  }
  sub_21574E720();
  int v0 = byte_26788AB4F;
  if (byte_26788AB4F >= 0) {
    size_t v1 = byte_26788AB4F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788AB38 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    char v6 = (char *)operator new(v4 + 1);
    qword_26788AB28 = v1 + 6;
    unk_26788AB30 = v5 | 0x8000000000000000;
    qword_26788AB20 = (uint64_t)v6;
    *(_DWORD *)char v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    unint64_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788AB28 = 0;
  unk_26788AB30 = 0;
  qword_26788AB20 = 0x2074736E6F63;
  byte_26788AB37 = v1 + 6;
  unint64_t v3 = (char *)&qword_26788AB20 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      char v7 = &xmmword_26788AB38;
    }
    else {
      char v7 = (long long *)xmmword_26788AB38;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788AB20, &dword_21572C000);

  __cxa_guard_release(&qword_26788AAC0);
}

void sub_21574E708(_Unwind_Exception *a1)
{
}

void sub_21574E720()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAC8))
  {
    sub_21574E7F4();
    if (byte_26788AB7F < 0)
    {
      sub_215738B0C(&xmmword_26788AB38, (void *)xmmword_26788AB68, *((unint64_t *)&xmmword_26788AB68 + 1));
    }
    else
    {
      xmmword_26788AB38 = xmmword_26788AB68;
      unk_26788AB48 = unk_26788AB78;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AB38, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAC8);
  }
}

void sub_21574E7DC(_Unwind_Exception *a1)
{
}

void sub_21574E7F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAD0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZCamera]", qword_26788AB50);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AB50, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAD0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAD8))
  {
    sub_215E19DF4((uint64_t)qword_26788AB50, (uint64_t)&xmmword_26788AB68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AB68, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAD8);
  }
}

void sub_21574E8E8(_Unwind_Exception *a1)
{
}

void sub_21574E900(_Unwind_Exception *a1)
{
}

void sub_21574E918(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AAE0))
  {
    goto LABEL_2;
  }
  sub_21574E584();
  int v10 = byte_26788AB37;
  if (byte_26788AB37 >= 0) {
    size_t v11 = byte_26788AB37;
  }
  else {
    size_t v11 = qword_26788AB28;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    char v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788AB80 + 1) = v11 + 1;
    unk_26788AB90 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788AB80 = v13;
    goto LABEL_43;
  }
  char v13 = &xmmword_26788AB80;
  unk_26788AB90 = 0;
  xmmword_26788AB80 = 0uLL;
  byte_26788AB97 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      long long v16 = &qword_26788AB20;
    }
    else {
      long long v16 = (uint64_t *)qword_26788AB20;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AB80, &dword_21572C000);
  __cxa_guard_release(&qword_26788AAE0);
LABEL_2:
  if (byte_26788AB97 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788AB80, *((unint64_t *)&xmmword_26788AB80 + 1));
  }
  else
  {
    long long __dst = xmmword_26788AB80;
    uint64_t v31 = unk_26788AB90;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  char v7 = (void **)v28;
  if (v28)
  {
    char v8 = v29;
    char v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      char v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_21574EC44(_Unwind_Exception *a1)
{
}

void sub_21574EC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21574ECBC(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_21574E720();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788AB38, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    char v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      char v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21574EE3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21574EE78(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_21574EF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21574EF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_21574EF30(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21574EF44(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_9;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_9:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_10;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_10:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  *(void *)a1 = &unk_26C684548;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_21574F050(uint64_t **a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_21574E720();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAE8))
  {
    sub_21574F2B4();
    if (byte_26788ABDF < 0)
    {
      sub_215738B0C(&xmmword_26788AB98, (void *)xmmword_26788ABC8, *((unint64_t *)&xmmword_26788ABC8 + 1));
    }
    else
    {
      xmmword_26788AB98 = xmmword_26788ABC8;
      unk_26788ABA8 = unk_26788ABD8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AB98, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAE8);
  }
  if (byte_26788ABAF < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788AB98, *((unint64_t *)&xmmword_26788AB98 + 1));
  }
  else
  {
    long long __dst = xmmword_26788AB98;
    uint64_t v21 = unk_26788ABA8;
  }
  sub_21573A150(&v18, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v7, a2);
  sub_21574086C((uint64_t *)&xmmword_26788AB38, (uint64_t *)&v18, (uint64_t)v7, **a1);
  if (v17 && v16)
  {
    if (!v15) {
      goto LABEL_10;
    }
    if (v14 < 0)
    {
      operator delete(v13);
      if ((v12 & 0x80000000) == 0)
      {
LABEL_10:
        if (!v10) {
          goto LABEL_13;
        }
LABEL_11:
        if (v9 < 0) {
          operator delete(__p);
        }
        goto LABEL_13;
      }
    }
    else if ((v12 & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v11);
    if (!v10) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v4 = (uint64_t)v18;
  if (v18)
  {
    uint64_t v5 = v19;
    uint64_t v6 = v18;
    if ((void *)v19 != v18)
    {
      do
      {
        if (*(char *)(v5 - 1) < 0) {
          operator delete(*(void **)(v5 - 24));
        }
        v5 -= 24;
      }
      while (v5 != v4);
      uint64_t v6 = v18;
    }
    uint64_t v19 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21574F25C(_Unwind_Exception *a1)
{
}

void sub_21574F278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 88));
  if (*(char *)(v2 - 41) < 0) {
    operator delete(*(void **)(v2 - 64));
  }
  _Unwind_Resume(a1);
}

void sub_21574F2B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAF0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin]", qword_26788ABB0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788ABB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAF0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AAF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AAF8))
  {
    sub_215E19DF4((uint64_t)qword_26788ABB0, (uint64_t)&xmmword_26788ABC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ABC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AAF8);
  }
}

void sub_21574F3A8(_Unwind_Exception *a1)
{
}

void sub_21574F3C0(_Unwind_Exception *a1)
{
}

uint64_t sub_21574F3D8(char *__s, const char *a2)
{
  int v5 = 0;
  sub_21574F544(v4, __s);
  if (*(void *)a2)
  {
    uint64_t v6 = (void **)v4;
    uint64_t v7 = a2;
    char v8 = v4;
    char v9 = a2;
    char v10 = a2;
    if (v5 != -1)
    {
      char v11 = &v6;
      ((void (*)(void **, _DWORD *))off_26C656AD0[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_10:
    sub_215742D4C();
  }
  uint64_t v6 = (void **)v4;
  uint64_t v7 = "nullptr";
  char v8 = v4;
  char v9 = "nullptr";
  char v10 = "nullptr";
  if (v5 == -1) {
    goto LABEL_10;
  }
  char v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C656AA0[v5])(&v11, v4);
LABEL_6:
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C656AB8[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C656A88[v5])(&v6, v4);
  }
  return result;
}

void sub_21574F508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21574F51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21574F530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_DWORD *sub_21574F544(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C656A88[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t sub_21574F638(uint64_t a1)
{
  return a1;
}

void sub_21574F668(uint64_t a1)
{
  sub_2157533A4(a1 + 8);

  JUMPOUT(0x2166C4D20);
}

void sub_21574F6B4(uint64_t a1)
{
  sub_2157533A4(a1);

  JUMPOUT(0x2166C4D20);
}

void *sub_21574F6FC(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[11];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1[9];
    a1[9] = 0;
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = a1[9];
  a1[9] = 0;
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
LABEL_5:
  sub_2157D9970(a1 + 2);
  return a1;
}

void *sub_21574F7B0(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[10];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = a1[8];
    a1[8] = 0;
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = a1[8];
  a1[8] = 0;
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
LABEL_5:

  return sub_2157D9970(a1 + 1);
}

void sub_21574F86C(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[11];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1[9];
    a1[9] = 0;
    if (!v3)
    {
LABEL_5:
      sub_2157D9970(a1 + 2);
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    uint64_t v3 = a1[9];
    a1[9] = 0;
    if (!v3) {
      goto LABEL_5;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  goto LABEL_5;
}

void sub_21574F940(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[10];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1[8];
    a1[8] = 0;
    if (!v3)
    {
LABEL_5:
      sub_2157D9970(a1 + 1);
      JUMPOUT(0x2166C4D20);
    }
  }
  else
  {
    uint64_t v3 = a1[8];
    a1[8] = 0;
    if (!v3) {
      goto LABEL_5;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  goto LABEL_5;
}

uint64_t sub_21574FA18(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

uint64_t VZClientOptionsGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AC00))
  {
    return qword_26788ABF8;
  }
  qword_26788ABF8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AC00);
  return qword_26788ABF8;
}

void *VZClientOptionsCreate()
{
  uint64_t result = operator new(0xB8uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[22] = 0;
    *((_OWORD *)result + 9) = 0u;
    *((_OWORD *)result + 10) = 0u;
    *((_OWORD *)result + 7) = 0u;
    *((_OWORD *)result + 8) = 0u;
    *((_OWORD *)result + 5) = 0u;
    *((_OWORD *)result + 6) = 0u;
    *((_OWORD *)result + 3) = 0u;
    *((_OWORD *)result + 4) = 0u;
    *((_OWORD *)result + 1) = 0u;
    *((_OWORD *)result + 2) = 0u;
    *((unsigned char *)result + 168) = 1;
    *((_DWORD *)result + 44) = 1;
    void *result = &unk_26C656AF8;
    result[1] = &unk_26C656B48;
  }
  else
  {
    sub_215753B78();
    char v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    v4[0] = 0;
    char v14 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788ACA8, (uint64_t *)&v15, (uint64_t)v4, 0);
    if (v14 && v13)
    {
      if (v12)
      {
        if (v11 < 0) {
          operator delete(__p);
        }
        if (v9 < 0) {
          operator delete(v8);
        }
      }
      if (v7 && v6 < 0) {
        operator delete(v5);
      }
    }
    uint64_t v1 = (uint64_t)v15;
    if (v15)
    {
      uint64_t v2 = v16;
      uint64_t v3 = v15;
      if ((void *)v16 != v15)
      {
        do
        {
          if (*(char *)(v2 - 1) < 0) {
            operator delete(*(void **)(v2 - 24));
          }
          v2 -= 24;
        }
        while (v2 != v1);
        uint64_t v3 = v15;
      }
      uint64_t v16 = v1;
      operator delete(v3);
    }
    return 0;
  }
  return result;
}

void VZClientOptionsSetControlledLogger(uint64_t a1, uint64_t a2)
{
  if (!sub_21574FD44((uint64_t)"VZClientOptionsSetControlledLogger", a1)
    && !sub_2157500C8((uint64_t)"VZClientOptionsSetControlledLogger", a2, 0))
  {
    if (a2) {
      uint64_t v4 = (uint64_t *)(a2 + 16);
    }
    else {
      uint64_t v4 = 0;
    }
    sub_2157D8D10(a1 + 16, v4, a2 != 0);
  }
}

BOOL sub_21574FD44(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC20))
  {
    sub_215753B78();
    int v5 = byte_26788ACBF;
    if (byte_26788ACBF >= 0) {
      size_t v6 = byte_26788ACBF;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788ACA8 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788ACF0 + 1) = v6 + 1;
      unk_26788AD00 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788ACF0 = v8;
    }
    else
    {
      unk_26788AD00 = 0;
      xmmword_26788ACF0 = 0uLL;
      uint64_t v8 = &xmmword_26788ACF0;
      byte_26788AD07 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ACF0, &dword_21572C000);
        __cxa_guard_release(&qword_26788AC20);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788ACA8;
    }
    else {
      char v11 = (long long *)xmmword_26788ACA8;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788AD07 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788ACF0, *((unint64_t *)&xmmword_26788ACF0 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788ACF0;
    uint64_t v13 = unk_26788AD00;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215750074(_Unwind_Exception *a1)
{
}

void sub_21575008C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL sub_2157500C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    size_t v6 = sub_215753D70();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)uint64_t v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_2157502C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZClientOptionsDisableLogControl(uint64_t a1)
{
  if (!sub_21574FD44((uint64_t)"VZClientOptionsDisableLogControl", a1) && *(unsigned char *)(a1 + 168))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 160);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    *(unsigned char *)(a1 + 168) = 0;
  }
}

double VZClientOptionsSetTcpIpAddress(uint64_t a1, char *a2, __int16 a3)
{
  if (!sub_21574FD44((uint64_t)"VZClientOptionsSetTcpIpAddress", a1))
  {
    return sub_2157D883C(a1 + 16, a2, a3);
  }
  return result;
}

BOOL VZClientOptionsSetServer(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_21574FD44((uint64_t)"VZClientOptionsSetServer", a1);
  if (!result)
  {
    if (a2)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 16);
      char v5 = 1;
    }
    else
    {
      char v5 = 0;
      *(unsigned char *)(a1 + 72) = 0;
    }
    *(unsigned char *)(a1 + 80) = v5;
  }
  return result;
}

BOOL VZClientOptionsSetAsyncQueueMaxElementCount(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_21574FD44((uint64_t)"VZClientOptionsSetAsyncQueueMaxElementCount", a1);
  if (!result)
  {
    if (a2)
    {
      if (!*(unsigned char *)(a1 + 144))
      {
        *(void *)(a1 + 136) = 0;
        *(unsigned char *)(a1 + 144) = 1;
      }
      *(void *)(a1 + 128) = a2;
      *(unsigned char *)(a1 + 136) = 1;
    }
    else if (*(unsigned char *)(a1 + 144))
    {
      *(unsigned char *)(a1 + 144) = 0;
    }
  }
  return result;
}

void VZClientOptionsSetSyncType(uint64_t a1, unsigned int a2)
{
  if (!sub_21574FD44((uint64_t)"VZClientOptionsSetSyncType", a1))
  {
    sub_2157D89A8(a1 + 16, a2, (uint64_t)v4);
    sub_21575059C((uint64_t)"VZClientOptionsSetSyncType", v4, 0);
    if (!v14)
    {
      if (v13)
      {
        if (v12)
        {
          if (v11 < 0) {
            operator delete(__p);
          }
          if (v9 < 0) {
            operator delete(v8);
          }
        }
        if (v7)
        {
          if (v6 < 0) {
            operator delete(v5);
          }
        }
      }
    }
  }
}

void sub_215750588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21575059C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v17 = a1;
  if (!a2[120])
  {
    sub_21574F3D8("in function ", (const char *)&v17);
    sub_215E11614(a2, &v5, (uint64_t)&v7);
    sub_21573E208(&v7, a3);
    if (v16)
    {
      if (v15)
      {
        if (v14 < 0) {
          operator delete(__p);
        }
        if (v12 < 0) {
          operator delete(v11);
        }
      }
      if (v10 && v9 < 0) {
        operator delete(v8);
      }
    }
    if (v6 < 0) {
      operator delete(v5);
    }
  }
}

void sub_21575066C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZClientGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC30, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AC30))
  {
    return qword_26788AC28;
  }
  qword_26788AC28 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AC30);
  return qword_26788AC28;
}

long long *VZClientCreate(uint64_t a1, long long *p_dst)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  sub_215751110((char *)&__dst, a1);
  uint64_t v29 = &v30;
  long long v30 = p_dst;
  LOBYTE(v49) = 0;
  char v63 = 0;
  if (v45)
  {
    p_dst = &__dst;
    char v53 = 0;
    if (v35)
    {
      long long v49 = __dst;
      uint64_t v50 = v32;
      uint64_t v32 = 0;
      long long __dst = 0uLL;
      __int16 v51 = v33;
      int v52 = v34;
      char v53 = 1;
    }
    long long v54 = v36;
    uint64_t v55 = v37;
    char v56 = 0;
    char v58 = 0;
    if (v40)
    {
      if (v39)
      {
        if (v39 == &v38)
        {
          char v57 = &v56;
          (*(void (**)(void))(v38 + 24))();
        }
        else
        {
          char v57 = (char *)v39;
          char v39 = 0;
        }
      }
      else
      {
        char v57 = 0;
      }
      char v58 = 1;
    }
    long long v59 = v41;
    uint64_t v60 = v42;
    LOBYTE(v61) = 0;
    char v62 = 0;
    if (v44)
    {
      long long v61 = v43;
      long long v43 = 0uLL;
      char v62 = 1;
    }
    char v63 = 1;
  }
  v46[0] = &unk_26C656CE8;
  v46[1] = sub_2157511D8;
  long long v47 = v46;
  char v48 = 1;
  sub_2157D9094((uint64_t)&v49, (uint64_t)v46, (uint64_t)&v19);
  if (v48)
  {
    if (v47 == v46)
    {
      (*(void (**)(void *))(v46[0] + 32))(v46);
      sub_215753628((uint64_t)&v49);
      int v3 = v28;
      if (v28) {
        goto LABEL_19;
      }
LABEL_22:
      long long v8 = v19;
      sub_215741BFC(&v9, &v20);
      char v18 = 1;
      sub_215754A00((uint64_t **)&v29, (uint64_t)&v8);
      if (v18 && v17)
      {
        if (v16)
        {
          if (v15 < 0) {
            operator delete(__p);
          }
          if (v13 < 0) {
            operator delete(v12);
          }
        }
        if (v11 && v10 < 0) {
          operator delete(v9);
        }
      }
      goto LABEL_43;
    }
    if (v47) {
      (*(void (**)(void))(*v47 + 40))();
    }
  }
  sub_215753628((uint64_t)&v49);
  int v3 = v28;
  if (!v28) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v4 = (long long *)operator new(0x60uLL, MEMORY[0x263F8C180]);
  if (v4)
  {
    p_dst = v4;
    long long v5 = v19;
    long long v6 = v20;
    long long v19 = 0uLL;
    v4[1] = v5;
    v4[2] = v6;
    long long v20 = 0uLL;
    v4[3] = v21;
    long long v21 = 0uLL;
    *((_DWORD *)v4 + 16) = 1;
    *(void *)uint64_t v4 = &unk_26C656BF0;
    *((void *)v4 + 1) = &unk_26C656C40;
    *((void *)v4 + 10) = 0;
    *((void *)v4 + 11) = 0;
    *((void *)v4 + 9) = 0;
    goto LABEL_43;
  }
  LOBYTE(v8) = 0;
  char v18 = 0;
  sub_215754A00((uint64_t **)&v29, (uint64_t)&v8);
  if (!v18 || !v17) {
    goto LABEL_42;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  p_dst = 0;
  if (v11 && v10 < 0)
  {
    operator delete(v9);
LABEL_42:
    p_dst = 0;
  }
LABEL_43:
  if (v28)
  {
    sub_2157D9970(&v19);
  }
  else if (v27)
  {
    if (v26)
    {
      if (v25 < 0) {
        operator delete(v24);
      }
      if (v23 < 0) {
        operator delete(v22);
      }
    }
    if (BYTE8(v21) && SBYTE7(v21) < 0) {
      operator delete((void *)v20);
    }
  }
  if (!v3) {
    p_dst = 0;
  }
  sub_215753628((uint64_t)&__dst);
  return p_dst;
}

void sub_215750B4C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

char *sub_215751110(char *__dst, uint64_t a2)
{
  uint64_t v2 = __dst;
  if (a2)
  {
    long long __dst = sub_2157540E8(__dst, (long long *)(a2 + 16));
    v2[136] = 0;
    v2[152] = 0;
    if (*(unsigned char *)(a2 + 168))
    {
      uint64_t v4 = *(void *)(a2 + 160);
      *((void *)v2 + 17) = *(void *)(a2 + 152);
      *((void *)v2 + 18) = v4;
      if (v4) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
      }
      v2[152] = 1;
      v2[160] = 1;
    }
    else
    {
      v2[160] = 1;
    }
  }
  else
  {
    *long long __dst = 0;
    __dst[160] = 0;
  }
  return __dst;
}

void sub_2157511A4(void *a1)
{
  __cxa_begin_catch(a1);
  sub_215753B78();
  sub_2157542A8();
  sub_215740F64((std::string::size_type)&xmmword_26788ACA8, (uint64_t *)&xmmword_26788AD08, 0);
  *uint64_t v1 = 0;
  v1[160] = 0;
  __cxa_end_catch();
  JUMPOUT(0x21575116CLL);
}

void sub_2157511D8(long long *a1)
{
}

uint64_t VZClientSync(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC90, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788AC90))
    {
LABEL_5:
      if (byte_26788AE27 < 0)
      {
        sub_215738B0C(v12, (void *)xmmword_26788AE10, *((unint64_t *)&xmmword_26788AE10 + 1));
      }
      else
      {
        *(_OWORD *)char v12 = xmmword_26788AE10;
        uint64_t v13 = unk_26788AE20;
      }
      char v14 = 1;
      sub_21573FF94((uint64_t)"VZClientSync", (uint64_t)v12, (uint64_t)&v27);
      long long v15 = v27;
      LOBYTE(v16) = 0;
      char v25 = 0;
      if (v37)
      {
        char v18 = 0;
        if (v30)
        {
          long long v16 = v28;
          uint64_t v17 = v29;
          uint64_t v29 = 0;
          long long v28 = 0uLL;
          char v18 = 1;
        }
        LOBYTE(v19) = 0;
        char v24 = 0;
        if (v36)
        {
          uint64_t v20 = v32;
          long long v19 = *(_OWORD *)v31;
          v31[0] = 0;
          v31[1] = 0;
          uint64_t v21 = v33;
          *(_OWORD *)char v22 = *(_OWORD *)__p;
          uint64_t v23 = v35;
          uint64_t v32 = 0;
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v35 = 0;
          char v24 = 1;
        }
        char v25 = 1;
      }
      char v26 = 0;
      sub_21573E208(&v15, a2);
      if (!v26 && v25)
      {
        if (v24)
        {
          if (SHIBYTE(v23) < 0) {
            operator delete(v22[0]);
          }
          if (SHIBYTE(v20) < 0) {
            operator delete((void *)v19);
          }
        }
        if (v18 && SHIBYTE(v17) < 0) {
          operator delete((void *)v16);
        }
      }
      if (v37)
      {
        if (v36)
        {
          if (SHIBYTE(v35) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v32) < 0) {
            operator delete(v31[0]);
          }
        }
        if (v30 && SHIBYTE(v29) < 0) {
          operator delete((void *)v28);
        }
      }
      if (!v14 || (SHIBYTE(v13) & 0x80000000) == 0) {
        return 0;
      }
      uint64_t v4 = v12[0];
      goto LABEL_48;
    }
    sub_21575508C();
    int v5 = byte_26788ADDF;
    if (byte_26788ADDF >= 0) {
      size_t v6 = byte_26788ADDF;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788ADC8 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      long long v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788AE10 + 1) = v6 + 1;
      unk_26788AE20 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788AE10 = v8;
    }
    else
    {
      unk_26788AE20 = 0;
      xmmword_26788AE10 = 0uLL;
      long long v8 = &xmmword_26788AE10;
      byte_26788AE27 = v6 + 1;
      if (!v6)
      {
LABEL_76:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AE10, &dword_21572C000);
        __cxa_guard_release(&qword_26788AC90);
        goto LABEL_5;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788ADC8;
    }
    else {
      char v11 = (long long *)xmmword_26788ADC8;
    }
    memmove(v8, v11, v6);
    goto LABEL_76;
  }
  sub_2157D971C(a1 + 16, (uint64_t)&v15);
  uint64_t v38 = "VZClientSync";
  if (v26) {
    return v15;
  }
  sub_21574F3D8("in function ", (const char *)&v38);
  sub_215E11614((char *)&v15, v12, (uint64_t)&v27);
  sub_21573E208(&v27, a2);
  if (v37)
  {
    if (v36)
    {
      if (SHIBYTE(v35) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v32) < 0) {
        operator delete(v31[0]);
      }
    }
    if (v30 && SHIBYTE(v29) < 0) {
      operator delete((void *)v28);
    }
  }
  if (SHIBYTE(v13) < 0)
  {
    operator delete(v12[0]);
    if (v26) {
      return 0;
    }
  }
  else if (v26)
  {
    return 0;
  }
  if (!v25) {
    return 0;
  }
  if (v24)
  {
    if (SHIBYTE(v23) < 0) {
      operator delete(v22[0]);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)v19);
    }
  }
  uint64_t result = 0;
  if (v18 && SHIBYTE(v17) < 0)
  {
    uint64_t v4 = (void *)v16;
LABEL_48:
    operator delete(v4);
    return 0;
  }
  return result;
}

void sub_215751618(_Unwind_Exception *a1)
{
}

void sub_215751630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_2157407D4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_21575166C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZClientGetUUID(uint64_t a1)
{
  if (!sub_2157519DC((uint64_t)"VZClientGetUUID", a1))
  {
    uint64_t v4 = *(void *)(a1 + 80);
    int v3 = *(std::__shared_weak_count **)(a1 + 88);
    if (v3
      && (atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed),
          !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
      {
LABEL_6:
        int v5 = *(const void **)(a1 + 80);
        uint64_t v6 = *(void *)(a1 + 88);
        uint64_t v10 = v5;
        uint64_t v11 = v6;
        if (v6) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
        }
        sub_2157534B4(&v12, v5);
      }
    }
    else if (v4)
    {
      goto LABEL_6;
    }
    unint64_t v7 = (CFUUIDBytes *)(*(uint64_t (**)(void))(**(void **)(a1 + 16) + 24))(*(void *)(a1 + 16));
    CFAllocatorRef Default = CFAllocatorGetDefault();
    CFUUIDRef v9 = CFUUIDCreateFromUUIDBytes(Default, *v7);
    sub_215DDA524((int)&v12, v9, 0);
  }
  return 0;
}

void sub_2157519B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157519C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2157519DC(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC98))
  {
    sub_2157554A0();
    int v5 = byte_26788AE57;
    if (byte_26788AE57 >= 0) {
      size_t v6 = byte_26788AE57;
    }
    else {
      size_t v6 = qword_26788AE48;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      long long v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788AE28 + 1) = v6 + 1;
      unk_26788AE38 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788AE28 = v8;
    }
    else
    {
      unk_26788AE38 = 0;
      xmmword_26788AE28 = 0uLL;
      long long v8 = &xmmword_26788AE28;
      byte_26788AE3F = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AE28, &dword_21572C000);
        __cxa_guard_release(&qword_26788AC98);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      uint64_t v11 = &qword_26788AE40;
    }
    else {
      uint64_t v11 = (uint64_t *)qword_26788AE40;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788AE3F < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788AE28, *((unint64_t *)&xmmword_26788AE28 + 1));
  }
  else
  {
    *(_OWORD *)long long v12 = xmmword_26788AE28;
    uint64_t v13 = unk_26788AE38;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215751D0C(_Unwind_Exception *a1)
{
}

void sub_215751D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZClientGetAsDestination(void *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (sub_2157519DC((uint64_t)"VZClientGetAsDestination", (uint64_t)a1)) {
    return 0;
  }
  uint64_t result = a1[9];
  if (!result)
  {
    uint64_t v4 = a1[4];
    int v3 = (std::__shared_weak_count *)a1[5];
    if (v3) {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v6 = a1[6];
    int v5 = (std::__shared_weak_count *)a1[7];
    if (v5) {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    unint64_t v7 = operator new(0x38uLL, MEMORY[0x263F8C180]);
    long long v8 = v7;
    if (v7)
    {
      void v7[2] = v4;
      v7[3] = v3;
      v7[4] = v6;
      v7[5] = v5;
      *((_DWORD *)v7 + 12) = 1;
      *unint64_t v7 = &unk_26C6571E0;
      v7[1] = &unk_26C657230;
      off_26C6571F0((uint64_t)v7);
      int v3 = 0;
      int v5 = 0;
      uint64_t v9 = v8;
      uint64_t v10 = a1[9];
      a1[9] = v8;
      if (!v10)
      {
LABEL_11:
        if (v8) {
          (*(void (**)(void *))(*v9 + 24))(v9);
        }
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        if (v3)
        {
          if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
            std::__shared_weak_count::__release_weak(v3);
          }
        }
        return a1[9];
      }
    }
    else
    {
      uint64_t v11 = (uint64_t *)sub_215753740();
      long long v12 = sub_21575395C();
      if (*((char *)v12 + 23) < 0)
      {
        sub_215738B0C(&__dst, *(void **)v12, *((void *)v12 + 1));
      }
      else
      {
        long long v13 = *v12;
        uint64_t v31 = *((void *)v12 + 2);
        long long __dst = v13;
      }
      sub_21573A150(&v28, (uint64_t)&__dst, 1uLL);
      v17[0] = 0;
      char v27 = 0;
      sub_21574086C(v11, (uint64_t *)&v28, (uint64_t)v17, 0);
      if (v27 && v26)
      {
        if (v25)
        {
          if (v24 < 0) {
            operator delete(__p);
          }
          if (v22 < 0) {
            operator delete(v21);
          }
        }
        if (v20 && v19 < 0) {
          operator delete(v18);
        }
      }
      uint64_t v14 = (uint64_t)v28;
      if (v28)
      {
        uint64_t v15 = v29;
        long long v16 = v28;
        if ((void *)v29 != v28)
        {
          do
          {
            if (*(char *)(v15 - 1) < 0) {
              operator delete(*(void **)(v15 - 24));
            }
            v15 -= 24;
          }
          while (v15 != v14);
          long long v16 = v28;
        }
        uint64_t v29 = v14;
        operator delete(v16);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)__dst);
      }
      uint64_t v9 = 0;
      uint64_t v10 = a1[9];
      a1[9] = 0;
      if (!v10) {
        goto LABEL_11;
      }
    }
    (*(void (**)(uint64_t))(*(void *)v10 + 24))(v10);
    goto LABEL_11;
  }
  return result;
}

void sub_2157520B0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

_OWORD *VZDestinationCreateWithClient(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  sub_215751110((char *)&__dst, a1);
  uint64_t v21 = &v22;
  uint64_t v22 = a2;
  LOBYTE(v41) = 0;
  char v55 = 0;
  if (v37)
  {
    char v45 = 0;
    if (v27)
    {
      long long v41 = __dst;
      uint64_t v42 = v24;
      uint64_t v24 = 0;
      long long __dst = 0uLL;
      __int16 v43 = v25;
      int v44 = v26;
      char v45 = 1;
    }
    long long v46 = v28;
    uint64_t v47 = v29;
    char v48 = 0;
    char v50 = 0;
    if (v32)
    {
      if (v31)
      {
        if (v31 == &v30)
        {
          long long v49 = &v48;
          (*(void (**)(void))(v30 + 24))();
        }
        else
        {
          long long v49 = (char *)v31;
          uint64_t v31 = 0;
        }
      }
      else
      {
        long long v49 = 0;
      }
      char v50 = 1;
    }
    long long v51 = v33;
    uint64_t v52 = v34;
    LOBYTE(v53) = 0;
    char v54 = 0;
    if (v36)
    {
      long long v53 = v35;
      long long v35 = 0uLL;
      char v54 = 1;
    }
    char v55 = 1;
  }
  v38[0] = &unk_26C656CE8;
  v38[1] = sub_2157511D8;
  char v39 = v38;
  char v40 = 1;
  sub_2157D9A88(&v41, (uint64_t)v38, (uint64_t)&v18);
  if (v40)
  {
    if (v39 == v38)
    {
      (*(void (**)(void *))(v38[0] + 32))(v38);
      sub_215753628((uint64_t)&v41);
      if (v20) {
        goto LABEL_19;
      }
      goto LABEL_23;
    }
    if (v39) {
      (*(void (**)(void))(*v39 + 40))();
    }
  }
  sub_215753628((uint64_t)&v41);
  if (v20)
  {
LABEL_19:
    uint64_t v3 = sub_21575589C((uint64_t)&v18);
    uint64_t v4 = operator new(0x38uLL, MEMORY[0x263F8C180]);
    int v5 = v4;
    if (v4)
    {
      v4[1] = *(_OWORD *)v3;
      *(void *)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      v4[2] = *(_OWORD *)(v3 + 16);
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      *((_DWORD *)v4 + 12) = 1;
      *(void *)uint64_t v4 = &unk_26C6571E0;
      *((void *)v4 + 1) = &unk_26C657230;
    }
    else
    {
      LOBYTE(v7) = 0;
      char v17 = 0;
      sub_21575563C(&v21, (uint64_t)&v7);
      if (v17 && v16)
      {
        if (v15)
        {
          if (v14 < 0) {
            operator delete(__p);
          }
          if (v12 < 0) {
            operator delete(v11);
          }
        }
        if (v10 && v9 < 0) {
          operator delete(v8);
        }
      }
    }
    sub_215755968((uint64_t)&v18);
    goto LABEL_34;
  }
LABEL_23:
  long long v7 = v18;
  sub_215741BFC(&v8, v19);
  char v17 = 1;
  sub_21575563C(&v21, (uint64_t)&v7);
  if (v17 && v16)
  {
    if (v15)
    {
      if (v14 < 0) {
        operator delete(__p);
      }
      if (v12 < 0) {
        operator delete(v11);
      }
    }
    if (v10 && v9 < 0) {
      operator delete(v8);
    }
  }
  sub_215755968((uint64_t)&v18);
  int v5 = 0;
LABEL_34:
  sub_215753628((uint64_t)&__dst);
  return v5;
}

void sub_2157524B4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t sub_215752A30(uint64_t result)
{
  return result;
}

uint64_t sub_215752A40(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 176), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215752A7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AC00))
  {
    return qword_26788ABF8;
  }
  qword_26788ABF8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AC00);
  return qword_26788ABF8;
}

uint64_t sub_215752AE0(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656B90, 0);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t result = sub_215987764((unsigned __int8 *)(a1 + 16), (unsigned __int8 *)(result + 16));
    if (result)
    {
      uint64_t result = (*(unsigned char *)(a1 + 168) != 0) == (*(unsigned char *)(v4 + 168) != 0);
      if (*(unsigned char *)(a1 + 168))
      {
        if (*(unsigned char *)(v4 + 168)) {
          return *(void *)(a1 + 152) == *(void *)(v4 + 152);
        }
      }
    }
  }
  return result;
}

uint64_t sub_215752BA0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  sub_215753B78();
  sub_215732BF4(v20, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788ACA8, v20, 0);
  if (v21 < 0) {
    operator delete((void *)v20[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_215752BF8(uint64_t a1)
{
  sub_215753B78();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215752E4C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_215753B78();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788ACA8, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215752F2C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 176));
}

uint64_t sub_215752F38(uint64_t result)
{
  return result;
}

uint64_t sub_215752F48(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 64), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215752F84()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC30, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AC30))
  {
    return qword_26788AC28;
  }
  qword_26788AC28 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AC30);
  return qword_26788AC28;
}

void *sub_215752FE8(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656C88, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]);
  }
  return result;
}

void sub_215753064(uint64_t a1)
{
  sub_21575508C();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157532B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21575508C();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788ADC8, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215753398(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 64));
}

uint64_t sub_2157533A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 160))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 152);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v3 = *(void *)(a1 + 104);
    if (v3 == a1 + 80)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 80) + 32))(a1 + 80);
      if (!*(unsigned char *)(a1 + 48)) {
        return a1;
      }
      goto LABEL_10;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  if (!*(unsigned char *)(a1 + 48)) {
    return a1;
  }
LABEL_10:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_2157534B4(void *a1, CFTypeRef cf)
{
  if (cf) {
    CFRetain(cf);
  }
  *a1 = cf;
  operator new();
}

void sub_215753528(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    CFRelease(v1);
  }
  __cxa_rethrow();
}

void sub_215753540(_Unwind_Exception *a1)
{
}

void sub_215753558(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215753590(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    CFRelease(v1);
  }
}

uint64_t sub_2157535B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIPK8__CFUUIDEC1ES5_EUlS5_E_") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIPK8__CFUUIDEC1ES5_EUlS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIPK8__CFUUIDEC1ES5_EUlS5_E_")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIPK8__CFUUIDEC1ES5_EUlS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215753628(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 160)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 152))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 144);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  if (*(unsigned char *)(a1 + 104))
  {
    uint64_t v3 = *(void *)(a1 + 96);
    if (v3 == a1 + 72)
    {
      (*(void (**)(uint64_t))(*(void *)(a1 + 72) + 32))(a1 + 72);
      if (!*(unsigned char *)(a1 + 40)) {
        return a1;
      }
      goto LABEL_11;
    }
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_11:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

long long *sub_215753740()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883C60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883C60))
  {
    return &xmmword_267883C48;
  }
  uint64_t v1 = (char *)sub_215753828();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883C48, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883C58 = *((void *)v1 + 2);
    xmmword_267883C48 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883C48, &dword_21572C000);
  __cxa_guard_release(&qword_267883C60);
  return &xmmword_267883C48;
}

void sub_215753810(_Unwind_Exception *a1)
{
}

void *sub_215753828()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883C80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883C80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZDestination]", qword_267883C68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883C68, &dword_21572C000);
    __cxa_guard_release(&qword_267883C80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883CA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883CA0))
  {
    return &unk_267883C88;
  }
  sub_215E19DF4((uint64_t)qword_267883C68, (uint64_t)&unk_267883C88);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883C88, &dword_21572C000);
  __cxa_guard_release(&qword_267883CA0);
  return &unk_267883C88;
}

void sub_21575392C(_Unwind_Exception *a1)
{
}

void sub_215753944(_Unwind_Exception *a1)
{
}

long long *sub_21575395C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883CC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883CC0))
  {
    return &xmmword_267883CA8;
  }
  uint64_t v1 = (char *)sub_215753A44();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883CA8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883CB8 = *((void *)v1 + 2);
    xmmword_267883CA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883CA8, &dword_21572C000);
  __cxa_guard_release(&qword_267883CC0);
  return &xmmword_267883CA8;
}

void sub_215753A2C(_Unwind_Exception *a1)
{
}

void *sub_215753A44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883CE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883CE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::SharedDestination]", qword_267883CC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883CC8, &dword_21572C000);
    __cxa_guard_release(&qword_267883CE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883D00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883D00))
  {
    return &unk_267883CE8;
  }
  sub_215E19DF4((uint64_t)qword_267883CC8, (uint64_t)&unk_267883CE8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883CE8, &dword_21572C000);
  __cxa_guard_release(&qword_267883D00);
  return &unk_267883CE8;
}

void sub_215753B48(_Unwind_Exception *a1)
{
}

void sub_215753B60(_Unwind_Exception *a1)
{
}

void sub_215753B78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC08))
  {
    sub_215753C4C();
    if (byte_26788ACEF < 0)
    {
      sub_215738B0C(&xmmword_26788ACA8, (void *)xmmword_26788ACD8, *((unint64_t *)&xmmword_26788ACD8 + 1));
    }
    else
    {
      xmmword_26788ACA8 = xmmword_26788ACD8;
      unk_26788ACB8 = unk_26788ACE8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ACA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC08);
  }
}

void sub_215753C34(_Unwind_Exception *a1)
{
}

void sub_215753C4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC10))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZClientOptions]", qword_26788ACC0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788ACC0, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC10);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC18))
  {
    sub_215E19DF4((uint64_t)qword_26788ACC0, (uint64_t)&xmmword_26788ACD8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ACD8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC18);
  }
}

void sub_215753D40(_Unwind_Exception *a1)
{
}

void sub_215753D58(_Unwind_Exception *a1)
{
}

uint64_t *sub_215753D70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883D20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883D20))
  {
    uint64_t v1 = sub_215753ECC();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = &qword_267883D08;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883D10 = v4 + 1;
      unk_267883D18 = v8 | 0x8000000000000000;
      qword_267883D08 = (uint64_t)v9;
      uint64_t v6 = v9;
    }
    else
    {
      qword_267883D10 = 0;
      unk_267883D18 = 0;
      qword_267883D08 = 0;
      byte_267883D1F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883D08, &dword_21572C000);
        __cxa_guard_release(&qword_267883D20);
        return &qword_267883D08;
      }
    }
    if (v3 >= 0) {
      char v10 = v2;
    }
    else {
      char v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883D08;
}

void sub_215753EB4(_Unwind_Exception *a1)
{
}

long long *sub_215753ECC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883D40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883D40))
  {
    return &xmmword_267883D28;
  }
  uint64_t v1 = (char *)sub_215753FB4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883D28, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883D38 = *((void *)v1 + 2);
    xmmword_267883D28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883D28, &dword_21572C000);
  __cxa_guard_release(&qword_267883D40);
  return &xmmword_267883D28;
}

void sub_215753F9C(_Unwind_Exception *a1)
{
}

void *sub_215753FB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883D60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883D60))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLogger]", qword_267883D48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883D48, &dword_21572C000);
    __cxa_guard_release(&qword_267883D60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883D80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883D80))
  {
    return &unk_267883D68;
  }
  sub_215E19DF4((uint64_t)qword_267883D48, (uint64_t)&unk_267883D68);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883D68, &dword_21572C000);
  __cxa_guard_release(&qword_267883D80);
  return &unk_267883D68;
}

void sub_2157540B8(_Unwind_Exception *a1)
{
}

void sub_2157540D0(_Unwind_Exception *a1)
{
}

char *sub_2157540E8(char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[40] = 0;
  if (*((unsigned char *)a2 + 40))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v4 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)long long __dst = v4;
    }
    *((_WORD *)__dst + 12) = *((_WORD *)a2 + 12);
    *((_DWORD *)__dst + 8) = *((_DWORD *)a2 + 8);
    __dst[40] = 1;
  }
  long long v5 = a2[3];
  uint64_t v6 = *((void *)a2 + 8);
  __dst[72] = 0;
  *((void *)__dst + 8) = v6;
  *((_OWORD *)__dst + 3) = v5;
  __dst[104] = 0;
  if (*((unsigned char *)a2 + 104))
  {
    uint64_t v7 = *((void *)a2 + 12);
    if (v7)
    {
      if ((long long *)v7 == (long long *)((char *)a2 + 72))
      {
        *((void *)__dst + 12) = __dst + 72;
        (*(void (**)(void, char *))(**((void **)a2 + 12) + 24))(*((void *)a2 + 12), __dst + 72);
        goto LABEL_12;
      }
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
    }
    *((void *)__dst + 12) = v7;
LABEL_12:
    __dst[104] = 1;
  }
  long long v8 = a2[7];
  *((void *)__dst + 16) = *((void *)a2 + 16);
  *((_OWORD *)__dst + 7) = v8;
  return __dst;
}

void sub_215754214(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 40))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157542A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC38))
  {
    sub_21575437C();
    if (byte_26788AD37 < 0)
    {
      sub_215738B0C(&xmmword_26788AD08, (void *)qword_26788AD20, unk_26788AD28);
    }
    else
    {
      xmmword_26788AD08 = *(_OWORD *)&qword_26788AD20;
      qword_26788AD18 = unk_26788AD30;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AD08, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC38);
  }
}

void sub_215754364(_Unwind_Exception *a1)
{
}

void sub_21575437C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC40))
  {
    sub_21575463C(__p);
    sub_21575445C(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788AD20, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC40);
  }
}

void sub_21575441C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788AC40);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788AC40);
  _Unwind_Resume(a1);
}

void sub_21575445C(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC48))
  {
    sub_215754844();
    if (byte_26788AD7F < 0)
    {
      sub_215738B0C(&xmmword_26788AD38, (void *)xmmword_26788AD68, *((unint64_t *)&xmmword_26788AD68 + 1));
    }
    else
    {
      xmmword_26788AD38 = xmmword_26788AD68;
      unk_26788AD48 = unk_26788AD78;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AD38, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC48);
  }
  if (byte_26788AD4F < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788AD38, *((unint64_t *)&xmmword_26788AD38 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788AD38;
    uint64_t v10 = unk_26788AD48;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788AD20, v2, v3);
  long long v4 = (void **)__p;
  if (__p)
  {
    long long v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    long long v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157545F4(_Unwind_Exception *a1)
{
}

void sub_215754610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21575463C(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC60))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::ClientOptions>]", qword_26788AD80);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AD80, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC68))
  {
    size_t v3 = sub_215747D98(qword_26788AD80, "<", 0);
    sub_215747C90(qword_26788AD80, 0, v3, qword_26788AD98);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AD98, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC68);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC70))
  {
    sub_215E19DF4((uint64_t)qword_26788AD98, (uint64_t)&xmmword_26788ADB0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ADB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC70);
  }
  if (byte_26788ADC7 < 0)
  {
    long long v2 = xmmword_26788ADB0;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788ADB0;
    __dst[2] = unk_26788ADC0;
  }
}

void sub_2157547FC(_Unwind_Exception *a1)
{
}

void sub_215754814(_Unwind_Exception *a1)
{
}

void sub_21575482C(_Unwind_Exception *a1)
{
}

void sub_215754844()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC50))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ClientOptions]", qword_26788AD50);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AD50, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC50);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC58))
  {
    sub_215E19DF4((uint64_t)qword_26788AD50, (uint64_t)&xmmword_26788AD68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AD68, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC58);
  }
}

void sub_215754938(_Unwind_Exception *a1)
{
}

void sub_215754950(_Unwind_Exception *a1)
{
}

uint64_t sub_215754968(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void sub_215754A00(uint64_t **a1, uint64_t a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  sub_21575508C();
  sub_2157542A8();
  if (SHIBYTE(qword_26788AD18) < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788AD08, *((unint64_t *)&xmmword_26788AD08 + 1));
  }
  else
  {
    long long __dst = xmmword_26788AD08;
    uint64_t v23 = qword_26788AD18;
  }
  long long v4 = sub_215754F30();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&v24, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v25 = v4[2];
    long long v24 = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788ADC8, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_15;
  }
  if (!v17) {
    goto LABEL_12;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v13);
    if (!v12) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v12) {
    goto LABEL_15;
  }
LABEL_13:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    long long v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      long long v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v23) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v24);
  if (SHIBYTE(v23) < 0) {
    goto LABEL_27;
  }
}

void sub_215754BF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 104));
  if (*(char *)(v2 - 33) < 0) {
    operator delete(*(void **)(v2 - 56));
  }
  if (*(char *)(v2 - 57) < 0) {
    operator delete(*(void **)(v2 - 80));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215754C4C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    sub_2157D9970((void *)a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_215754CEC(uint64_t result, long long *a2)
{
  if (!*((unsigned char *)a2 + 160)) {
    return result;
  }
  uint64_t v3 = result;
  *(unsigned char *)uint64_t result = 0;
  *(unsigned char *)(result + 40) = 0;
  if (*((unsigned char *)a2 + 40))
  {
    long long v4 = *a2;
    *(void *)(result + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t result = v4;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    *(_WORD *)(result + 24) = *((_WORD *)a2 + 12);
    *(_DWORD *)(result + 32) = *((_DWORD *)a2 + 8);
    *(unsigned char *)(result + 40) = 1;
  }
  long long v5 = a2[3];
  uint64_t v6 = *((void *)a2 + 8);
  *(unsigned char *)(result + 72) = 0;
  *(void *)(result + 64) = v6;
  *(_OWORD *)(result + 48) = v5;
  *(unsigned char *)(result + 104) = 0;
  if (*((unsigned char *)a2 + 104))
  {
    uint64_t v7 = (uint64_t)(a2 + 6);
    long long v8 = (long long *)*((void *)a2 + 12);
    if (v8)
    {
      if (v8 == (long long *)((char *)a2 + 72))
      {
        *(void *)(result + 96) = result + 72;
        uint64_t result = (*(uint64_t (**)(void))(**(void **)v7 + 24))();
        goto LABEL_11;
      }
      *(void *)(result + 96) = v8;
    }
    else
    {
      uint64_t v7 = result + 96;
    }
    *(void *)uint64_t v7 = 0;
LABEL_11:
    *(unsigned char *)(v3 + 104) = 1;
  }
  long long v9 = a2[7];
  *(void *)(v3 + 128) = *((void *)a2 + 16);
  *(_OWORD *)(v3 + 112) = v9;
  *(unsigned char *)(v3 + 136) = 0;
  *(unsigned char *)(v3 + 152) = 0;
  if (*((unsigned char *)a2 + 152))
  {
    *(_OWORD *)(v3 + 136) = *(long long *)((char *)a2 + 136);
    *((void *)a2 + 17) = 0;
    *((void *)a2 + 18) = 0;
    *(unsigned char *)(v3 + 152) = 1;
  }
  *(unsigned char *)(v3 + 160) = 1;
  return result;
}

void sub_215754E20()
{
}

void *sub_215754E34(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &unk_26C656CE8;
  result[1] = v3;
  return result;
}

uint64_t sub_215754E7C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26C656CE8;
  a2[1] = v2;
  return result;
}

uint64_t sub_215754EA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a2);
}

uint64_t sub_215754EB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "PFvRKN4cv3d3esn5ErrorEE") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"PFvRKN4cv3d3esn5ErrorEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFvRKN4cv3d3esn5ErrorEE"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFvRKN4cv3d3esn5ErrorEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_215754F24()
{
  return &unk_26C656D58;
}

uint64_t *sub_215754F30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883DA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883DA0))
  {
    char v1 = sub_215755284();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = &qword_267883D88;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      long long v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883D90 = v4 + 1;
      unk_267883D98 = v8 | 0x8000000000000000;
      qword_267883D88 = (uint64_t)v9;
      uint64_t v6 = v9;
    }
    else
    {
      qword_267883D90 = 0;
      unk_267883D98 = 0;
      qword_267883D88 = 0;
      byte_267883D9F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883D88, &dword_21572C000);
        __cxa_guard_release(&qword_267883DA0);
        return &qword_267883D88;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883D88;
}

void sub_215755074(_Unwind_Exception *a1)
{
}

void sub_21575508C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC78))
  {
    sub_215755160();
    if (byte_26788AE0F < 0)
    {
      sub_215738B0C(&xmmword_26788ADC8, (void *)xmmword_26788ADF8, *((unint64_t *)&xmmword_26788ADF8 + 1));
    }
    else
    {
      xmmword_26788ADC8 = xmmword_26788ADF8;
      unk_26788ADD8 = unk_26788AE08;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ADC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC78);
  }
}

void sub_215755148(_Unwind_Exception *a1)
{
}

void sub_215755160()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZClient]", qword_26788ADE0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788ADE0, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AC88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AC88))
  {
    sub_215E19DF4((uint64_t)qword_26788ADE0, (uint64_t)&xmmword_26788ADF8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788ADF8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AC88);
  }
}

void sub_215755254(_Unwind_Exception *a1)
{
}

void sub_21575526C(_Unwind_Exception *a1)
{
}

long long *sub_215755284()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883DC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883DC0))
  {
    return &xmmword_267883DA8;
  }
  char v1 = (char *)sub_21575536C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883DA8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883DB8 = *((void *)v1 + 2);
    xmmword_267883DA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883DA8, &dword_21572C000);
  __cxa_guard_release(&qword_267883DC0);
  return &xmmword_267883DA8;
}

void sub_215755354(_Unwind_Exception *a1)
{
}

void *sub_21575536C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883DE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883DE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (const cv3d::esn::Error &)]", qword_267883DC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883DC8, &dword_21572C000);
    __cxa_guard_release(&qword_267883DE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883E00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883E00))
  {
    return &unk_267883DE8;
  }
  sub_215E19DF4((uint64_t)qword_267883DC8, (uint64_t)&unk_267883DE8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883DE8, &dword_21572C000);
  __cxa_guard_release(&qword_267883E00);
  return &unk_267883DE8;
}

void sub_215755470(_Unwind_Exception *a1)
{
}

void sub_215755488(_Unwind_Exception *a1)
{
}

void sub_2157554A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788ACA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788ACA0))
  {
    return;
  }
  sub_21575508C();
  int v0 = byte_26788ADDF;
  if (byte_26788ADDF >= 0) {
    size_t v1 = byte_26788ADDF;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788ADC8 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788AE48 = v1 + 6;
    unk_26788AE50 = v5 | 0x8000000000000000;
    qword_26788AE40 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    int v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788AE48 = 0;
  unk_26788AE50 = 0;
  qword_26788AE40 = 0x2074736E6F63;
  byte_26788AE57 = v1 + 6;
  int v3 = (char *)&qword_26788AE40 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788ADC8;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788ADC8;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788AE40, &dword_21572C000);

  __cxa_guard_release(&qword_26788ACA0);
}

void sub_215755624(_Unwind_Exception *a1)
{
}

void sub_21575563C(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_215753740();
  sub_2157542A8();
  if (SHIBYTE(qword_26788AD18) < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788AD08, *((unint64_t *)&xmmword_26788AD08 + 1));
  }
  else
  {
    long long __dst = xmmword_26788AD08;
    uint64_t v24 = qword_26788AD18;
  }
  uint64_t v5 = sub_215754F30();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v25, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v26 = v5[2];
    long long v25 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (!v20 || !v19) {
    goto LABEL_15;
  }
  if (!v18) {
    goto LABEL_12;
  }
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v14);
    if (!v13) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v13) {
    goto LABEL_15;
  }
LABEL_13:
  if (v12 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v7 = (uint64_t)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    long long v9 = v21;
    if ((void *)v22 != v21)
    {
      do
      {
        if (*(char *)(v8 - 1) < 0) {
          operator delete(*(void **)(v8 - 24));
        }
        v8 -= 24;
      }
      while (v8 != v7);
      long long v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_27;
  }
}

void sub_21575583C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 120));
  if (*(char *)(v2 - 49) < 0) {
    operator delete(*(void **)(v2 - 72));
  }
  if (*(char *)(v2 - 73) < 0)
  {
    operator delete(*(void **)(v2 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21575589C(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215755924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215755938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215755954(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215755968(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_12;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_12:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_13;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_13:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  long long v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

uint64_t sub_215755AA0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 152) && *(char *)(a1 + 151) < 0)
  {
    operator delete(*(void **)(a1 + 128));
    if (!*(unsigned char *)(a1 + 112)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 112))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
LABEL_7:
  if (!*(unsigned char *)(a1 + 56) || (*(char *)(a1 + 55) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 32));
  return a1;
}

void sub_215755B28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if (!*(unsigned char *)(a1 + 96)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 96))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
LABEL_7:
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*(void **)(a1 + 16));
    }
  }
}

void sub_215755BA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 152) && *(char *)(a1 + 151) < 0)
  {
    operator delete(*(void **)(a1 + 128));
    if (!*(unsigned char *)(a1 + 112)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 112))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
LABEL_7:
  if (*(unsigned char *)(a1 + 56) && *(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215755C40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if (!*(unsigned char *)(a1 + 96)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 96))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
LABEL_7:
  if (*(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215755CD8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 448);
  if (v2)
  {
    long long v3 = *(void **)(a1 + 456);
    uint64_t v4 = *(void **)(a1 + 448);
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *long long v3 = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
        }
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 448);
    }
    *(void *)(a1 + 456) = v2;
    operator delete(v4);
  }
  uint64_t v7 = *(void *)(a1 + 440);
  *(void *)(a1 + 440) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 432);
  *(void *)(a1 + 432) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 24))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 424);
  *(void *)(a1 + 424) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 24))(v9);
  }
  if (*(unsigned char *)(a1 + 400))
  {
    if (*(unsigned char *)(a1 + 360) && *(char *)(a1 + 359) < 0) {
      operator delete(*(void **)(a1 + 336));
    }
    if (*(unsigned char *)(a1 + 320) && *(char *)(a1 + 295) < 0) {
      operator delete(*(void **)(a1 + 272));
    }
    if (*(unsigned char *)(a1 + 264) && *(char *)(a1 + 263) < 0) {
      operator delete(*(void **)(a1 + 240));
    }
  }
  sub_215746614(a1 + 32);
  return a1;
}

uint64_t sub_215755E54(uint64_t a1)
{
  return sub_215755CD8(a1 - 16);
}

void sub_215755E5C(uint64_t a1)
{
  sub_215755CD8(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_215755E94(uint64_t a1)
{
  sub_215755CD8(a1 - 16);

  JUMPOUT(0x2166C4D20);
}

unsigned char *sub_215755ED0(void **a1, uint64_t *a2, void **a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t result = *a3;
  if (*a3)
  {
    if (*((unsigned char *)a2 + 16))
    {
      uint64_t v7 = *a2;
      result[24] = *((unsigned char *)a2 + 8);
      *((void *)result + 2) = v7;
      uint64_t result = *a3;
      *a1 = *a3;
      if (!result) {
        return result;
      }
      return (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 16))(result);
    }
    *a3 = 0;
LABEL_9:
    (*(void (**)(unsigned char *))(*(void *)result + 24))(result);
    uint64_t result = *a3;
    *a1 = *a3;
    if (!result) {
      return result;
    }
    return (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 16))(result);
  }
  *a3 = 0;
  if (!*((unsigned char *)a2 + 16))
  {
LABEL_37:
    *a1 = 0;
    return result;
  }
  uint64_t result = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (!result)
  {
    uint64_t v8 = (uint64_t *)sub_21575B068();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE58, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788AE58))
    {
      goto LABEL_13;
    }
    sub_21575B284();
    int v12 = byte_26788AF5F;
    if (byte_26788AF5F >= 0) {
      size_t v13 = byte_26788AF5F;
    }
    else {
      size_t v13 = qword_26788AF50;
    }
    unint64_t v14 = v13 + 1;
    if (v13 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v14 >= 0x17)
    {
      uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17) {
        uint64_t v16 = v14 | 7;
      }
      uint64_t v17 = v16 + 1;
      char v15 = (long long *)operator new(v16 + 1);
      *((void *)&xmmword_26788AF30 + 1) = v13 + 1;
      unk_26788AF40 = v17 | 0x8000000000000000;
      *(void *)&xmmword_26788AF30 = v15;
    }
    else
    {
      unk_26788AF40 = 0;
      xmmword_26788AF30 = 0uLL;
      char v15 = &xmmword_26788AF30;
      byte_26788AF47 = v13 + 1;
      if (!v13)
      {
LABEL_53:
        *(_WORD *)((char *)v15 + v13) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AF30, &dword_21572C000);
        __cxa_guard_release(&qword_26788AE58);
LABEL_13:
        if (byte_26788AF47 < 0)
        {
          sub_215738B0C(&__dst, (void *)xmmword_26788AF30, *((unint64_t *)&xmmword_26788AF30 + 1));
        }
        else
        {
          long long __dst = xmmword_26788AF30;
          uint64_t v33 = unk_26788AF40;
        }
        sub_21573A150(&v30, (uint64_t)&__dst, 1uLL);
        v19[0] = 0;
        char v29 = 0;
        sub_21574086C(v8, (uint64_t *)&v30, (uint64_t)v19, 0);
        if (v29 && v28)
        {
          if (v27)
          {
            if (v26 < 0) {
              operator delete(__p);
            }
            if (v24 < 0) {
              operator delete(v23);
            }
          }
          if (v22 && v21 < 0) {
            operator delete(v20);
          }
        }
        uint64_t v9 = (void **)v30;
        if (v30)
        {
          uint64_t v10 = v31;
          char v11 = v30;
          if (v31 != v30)
          {
            do
            {
              if (*((char *)v10 - 1) < 0) {
                operator delete(*(v10 - 3));
              }
              v10 -= 3;
            }
            while (v10 != v9);
            char v11 = v30;
          }
          uint64_t v31 = v9;
          operator delete(v11);
        }
        if (SHIBYTE(v33) < 0) {
          operator delete((void *)__dst);
        }
        uint64_t result = *a3;
        *a3 = 0;
        if (result) {
          goto LABEL_9;
        }
        goto LABEL_37;
      }
    }
    if (v12 >= 0) {
      char v18 = &qword_26788AF48;
    }
    else {
      char v18 = (uint64_t *)qword_26788AF48;
    }
    memmove(v15, v18, v13);
    goto LABEL_53;
  }
  *((_OWORD *)result + 1) = *(_OWORD *)a2;
  *((_DWORD *)result + 7) = 1;
  *(void *)uint64_t result = &unk_26C659540;
  *((void *)result + 1) = &unk_26C659590;
  *a3 = result;
  *a1 = result;
  return (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 16))(result);
}

void sub_2157562A8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788AE58);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157562DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 568);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 560);
  *(void *)(a1 + 560) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  }
  sub_215748B40(a1 + 32);
  return a1;
}

uint64_t sub_215756364(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 552);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 544);
  *(void *)(a1 + 544) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  }

  return sub_215748B40(a1 + 16);
}

void sub_2157563F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 568);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 560);
  *(void *)(a1 + 560) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  }
  sub_215748B40(a1 + 32);

  JUMPOUT(0x2166C4D20);
}

void sub_21575649C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 552);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 544);
  *(void *)(a1 + 544) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  }
  sub_215748B40(a1 + 16);

  JUMPOUT(0x2166C4D20);
}

char *VZDataGetImageDataPackageID()
{
  uint64_t result = sub_215AB5250(1u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetImageDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(1u) + 6);
}

char *VZDataGetNumbersDataPackageID()
{
  uint64_t result = sub_215AB5250(2u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetNumbersDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(2u) + 6);
}

char *VZDataGetPoints2DataPackageID()
{
  uint64_t result = sub_215AB5250(3u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetPoints2DataTypeID()
{
  return *((unsigned int *)sub_215AB5250(3u) + 6);
}

char *VZDataGetPoints3DataPackageID()
{
  uint64_t result = sub_215AB5250(4u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetPoints3DataTypeID()
{
  return *((unsigned int *)sub_215AB5250(4u) + 6);
}

char *VZDataGetCameraDataPackageID()
{
  uint64_t result = sub_215AB5250(5u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetCameraDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(5u) + 6);
}

char *VZDataGetDictionaryDataPackageID()
{
  uint64_t result = sub_215AB5250(6u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetDictionaryDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(6u) + 6);
}

char *VZDataGetMeshDataPackageID()
{
  uint64_t result = sub_215AB5250(7u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetMeshDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(7u) + 6);
}

char *VZDataGetNumberDataPackageID()
{
  uint64_t result = sub_215AB5250(8u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetNumberDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(8u) + 6);
}

char *VZDataGetBlobDataPackageID()
{
  uint64_t result = sub_215AB5250(9u);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetBlobDataTypeID()
{
  return *((unsigned int *)sub_215AB5250(9u) + 6);
}

char *VZDataGetTransform3DataPackageID()
{
  uint64_t result = sub_215AB5250(0xBu);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetTransform3DataTypeID()
{
  return *((unsigned int *)sub_215AB5250(0xBu) + 6);
}

char *VZDataGetLines2DataPackageID()
{
  uint64_t result = sub_215AB5250(0xCu);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetLines2DataTypeID()
{
  return *((unsigned int *)sub_215AB5250(0xCu) + 6);
}

char *VZDataGetLines3DataPackageID()
{
  uint64_t result = sub_215AB5250(0xDu);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDataGetLines3DataTypeID()
{
  return *((unsigned int *)sub_215AB5250(0xDu) + 6);
}

uint64_t VZReferenceIDGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AED8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AED8))
  {
    return qword_26788AED0;
  }
  qword_26788AED0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AED8);
  return qword_26788AED0;
}

unsigned char *VZReferenceIDCreateFromString(uint64_t a1)
{
  if (sub_2157569A8((uint64_t)"VZReferenceIDCreateFromString", a1, 0)) {
    return 0;
  }

  return sub_21575BE54((void (*)(void **__return_ptr, uint64_t))sub_21582B614, a1);
}

BOOL sub_2157569A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v6 = sub_21575BC7C();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)uint64_t v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215756BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

unsigned char *VZReferenceIDCreateWithDataName(uint64_t a1)
{
  return sub_21575BE54((void (*)(void **__return_ptr, uint64_t))sub_21582B7F4, a1);
}

unsigned char *VZReferenceIDCreateWithInstanceID(char *a1, char *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  sub_21582BA9C(a1, a2, (uint64_t)v26);
  uint64_t v2 = operator new(0xC0uLL, MEMORY[0x263F8C180]);
  uint64_t v3 = v2;
  if (!v2)
  {
    if (!v35) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  *(void *)uint64_t v2 = &unk_26C6565D0;
  v2[32] = 0;
  v2[56] = 0;
  if (v28)
  {
    *((_OWORD *)v2 + 2) = *(_OWORD *)v26;
    *((void *)v2 + 6) = v27;
    v26[1] = 0;
    long long v27 = 0;
    v26[0] = 0;
    v2[56] = 1;
  }
  v2[64] = 0;
  v2[112] = 0;
  if ((_BYTE)v32)
  {
    _X0 = 0;
    _X1 = 0;
    *((void *)v3 + 10) = v30;
    *((_OWORD *)v3 + 4) = *(_OWORD *)v29;
    v29[1] = 0;
    uint64_t v30 = 0;
    v29[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)v3 + 12) = _X0;
    *((void *)v3 + 13) = 0;
    v3[112] = 1;
  }
  v3[128] = 0;
  v3[152] = 0;
  int v11 = v35;
  if (v35)
  {
    *((_OWORD *)v3 + 8) = __p;
    *((void *)v3 + 18) = v34;
    uint64_t v34 = 0;
    long long __p = 0uLL;
    v3[152] = 1;
  }
  *((_OWORD *)v3 + 10) = v36;
  *((void *)v3 + 22) = v37;
  *((_DWORD *)v3 + 46) = 1;
  *(void *)uint64_t v3 = &unk_26C656DE8;
  *((void *)v3 + 2) = &unk_26C656E38;
  if (v11)
  {
LABEL_11:
    if (SHIBYTE(v34) < 0) {
      operator delete((void *)__p);
    }
  }
LABEL_13:
  if ((_BYTE)v32 && SHIBYTE(v30) < 0) {
    operator delete(v29[0]);
  }
  if (v28 && SHIBYTE(v27) < 0) {
    operator delete(v26[0]);
  }
  if (!v3)
  {
    sub_21575B6F8();
    long long v12 = sub_21575C17C();
    if (*((char *)v12 + 23) < 0)
    {
      sub_215738B0C(__dst, (void *)*v12, v12[1]);
    }
    else
    {
      long long v13 = *(_OWORD *)v12;
      uint64_t v23 = v12[2];
      *(_OWORD *)long long __dst = v13;
    }
    uint64_t v14 = sub_21575C17C();
    if (*((char *)v14 + 23) < 0)
    {
      sub_215738B0C(&v24, (void *)*v14, v14[1]);
    }
    else
    {
      long long v15 = *(_OWORD *)v14;
      uint64_t v25 = v14[2];
      long long v24 = v15;
    }
    sub_21573A150(&v20, (uint64_t)__dst, 2uLL);
    LOBYTE(v26[0]) = 0;
    unsigned __int8 v35 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788AFA8, (uint64_t *)&v20, (uint64_t)v26, 0);
    if (v35 && (_BYTE)v34)
    {
      if (BYTE8(__p))
      {
        if (SBYTE7(__p) < 0) {
          operator delete(v32);
        }
        if (v31 < 0) {
          operator delete(v30);
        }
      }
      if (LOBYTE(v29[1]) && SHIBYTE(v29[0]) < 0) {
        operator delete(v27);
      }
    }
    uint64_t v16 = (void **)v20;
    if (v20)
    {
      uint64_t v17 = v21;
      uint64_t v18 = v20;
      if (v21 != v20)
      {
        do
        {
          if (*((char *)v17 - 1) < 0) {
            operator delete(*(v17 - 3));
          }
          v17 -= 3;
        }
        while (v17 != v16);
        uint64_t v18 = v20;
      }
      char v21 = v16;
      operator delete(v18);
    }
    if (SHIBYTE(v25) < 0)
    {
      operator delete((void *)v24);
      if ((SHIBYTE(v23) & 0x80000000) == 0) {
        return 0;
      }
    }
    else if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
      return 0;
    }
    operator delete(__dst[0]);
    return 0;
  }
  return v3;
}

void sub_215756F4C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x215756DBCLL);
  }
  _Unwind_Resume(a1);
}

unsigned char *VZReferenceIDCreateWithIntegerInstanceID(char *a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  sub_21582BF48(a1, a2, (uint64_t)v24);
  uint64_t v2 = operator new(0xC0uLL, MEMORY[0x263F8C180]);
  uint64_t v3 = v2;
  if (!v2)
  {
    if (!v33) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  *(void *)uint64_t v2 = &unk_26C6565D0;
  v2[32] = 0;
  v2[56] = 0;
  if (v26)
  {
    *((_OWORD *)v2 + 2) = *(_OWORD *)v24;
    *((void *)v2 + 6) = v25;
    v24[1] = 0;
    uint64_t v25 = 0;
    v24[0] = 0;
    v2[56] = 1;
  }
  v2[64] = 0;
  v2[112] = 0;
  if ((_BYTE)v30)
  {
    _X0 = 0;
    _X1 = 0;
    *((void *)v3 + 10) = v28;
    *((_OWORD *)v3 + 4) = *(_OWORD *)v27;
    v27[1] = 0;
    char v28 = 0;
    v27[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)v3 + 12) = _X0;
    *((void *)v3 + 13) = 0;
    v3[112] = 1;
  }
  v3[128] = 0;
  v3[152] = 0;
  int v11 = v33;
  if (v33)
  {
    *((_OWORD *)v3 + 8) = __p;
    *((void *)v3 + 18) = v32;
    uint64_t v32 = 0;
    long long __p = 0uLL;
    v3[152] = 1;
  }
  *((_OWORD *)v3 + 10) = v34;
  *((void *)v3 + 22) = v35;
  *((_DWORD *)v3 + 46) = 1;
  *(void *)uint64_t v3 = &unk_26C656DE8;
  *((void *)v3 + 2) = &unk_26C656E38;
  if (v11)
  {
LABEL_11:
    if (SHIBYTE(v32) < 0) {
      operator delete((void *)__p);
    }
  }
LABEL_13:
  if ((_BYTE)v30 && SHIBYTE(v28) < 0) {
    operator delete(v27[0]);
  }
  if (v26 && SHIBYTE(v25) < 0) {
    operator delete(v24[0]);
  }
  if (!v3)
  {
    sub_21575B6F8();
    long long v12 = sub_21575C17C();
    if (*((char *)v12 + 23) < 0)
    {
      sub_215738B0C(__dst, (void *)*v12, v12[1]);
    }
    else
    {
      long long v13 = *(_OWORD *)v12;
      uint64_t v21 = v12[2];
      *(_OWORD *)long long __dst = v13;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEE0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788AEE0))
    {
      unk_26788B0A8 = 0x600000000000000;
      xmmword_26788B098 = 0x263436746E69uLL;
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B098, &dword_21572C000);
      __cxa_guard_release(&qword_26788AEE0);
    }
    if (byte_26788B0AF < 0)
    {
      sub_215738B0C(&v22, (void *)xmmword_26788B098, *((unint64_t *)&xmmword_26788B098 + 1));
    }
    else
    {
      long long v22 = xmmword_26788B098;
      uint64_t v23 = unk_26788B0A8;
    }
    sub_21573A150(&v18, (uint64_t)__dst, 2uLL);
    LOBYTE(v24[0]) = 0;
    unsigned __int8 v33 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788AFA8, (uint64_t *)&v18, (uint64_t)v24, 0);
    if (v33 && (_BYTE)v32)
    {
      if (BYTE8(__p))
      {
        if (SBYTE7(__p) < 0) {
          operator delete(v30);
        }
        if (v29 < 0) {
          operator delete(v28);
        }
      }
      if (LOBYTE(v27[1]) && SHIBYTE(v27[0]) < 0) {
        operator delete(v25);
      }
    }
    uint64_t v14 = (void **)v18;
    if (v18)
    {
      long long v15 = v19;
      uint64_t v16 = v18;
      if (v19 != v18)
      {
        do
        {
          if (*((char *)v15 - 1) < 0) {
            operator delete(*(v15 - 3));
          }
          v15 -= 3;
        }
        while (v15 != v14);
        uint64_t v16 = v18;
      }
      char v19 = v14;
      operator delete(v16);
    }
    if (SHIBYTE(v23) < 0)
    {
      operator delete((void *)v22);
      if ((SHIBYTE(v21) & 0x80000000) == 0) {
        return 0;
      }
    }
    else if ((SHIBYTE(v21) & 0x80000000) == 0)
    {
      return 0;
    }
    operator delete(__dst[0]);
    return 0;
  }
  return v3;
}

void sub_215757340(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x215757130);
  }
  _Unwind_Resume(a1);
}

uint64_t VZReferenceIDGetAsString(uint64_t a1)
{
  if (sub_2157573B8((uint64_t)"VZReferenceIDGetAsString", a1)) {
    return 0;
  }

  return sub_21582C330(a1 + 32);
}

BOOL sub_2157573B8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AEE8))
  {
    sub_21575C2CC();
    int v5 = byte_26788B0DF;
    if (byte_26788B0DF >= 0) {
      size_t v6 = byte_26788B0DF;
    }
    else {
      size_t v6 = qword_26788B0D0;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788B0B0 + 1) = v6 + 1;
      unk_26788B0C0 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788B0B0 = v8;
    }
    else
    {
      unk_26788B0C0 = 0;
      xmmword_26788B0B0 = 0uLL;
      uint64_t v8 = &xmmword_26788B0B0;
      byte_26788B0C7 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B0B0, &dword_21572C000);
        __cxa_guard_release(&qword_26788AEE8);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      int v11 = &qword_26788B0C8;
    }
    else {
      int v11 = (uint64_t *)qword_26788B0C8;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788B0C7 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788B0B0, *((unint64_t *)&xmmword_26788B0B0 + 1));
  }
  else
  {
    *(_OWORD *)long long v12 = xmmword_26788B0B0;
    uint64_t v13 = unk_26788B0C0;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157576E8(_Unwind_Exception *a1)
{
}

void sub_215757700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZReferenceIDGetName(uint64_t a1)
{
  if (sub_2157573B8((uint64_t)"VZReferenceIDGetName", a1) || !*(unsigned char *)(a1 + 56)) {
    return 0;
  }
  if (*(char *)(a1 + 55) < 0)
  {
    if (*(void *)(a1 + 40)) {
      return *(void *)(a1 + 32);
    }
    return 0;
  }
  if (*(unsigned char *)(a1 + 55)) {
    return a1 + 32;
  }
  else {
    return 0;
  }
}

uint64_t VZReferenceIDGetInstanceID(uint64_t a1)
{
  if (sub_2157573B8((uint64_t)"VZReferenceIDGetInstanceID", a1) || !*(unsigned char *)(a1 + 112)) {
    return 0;
  }
  uint64_t v2 = *(unsigned __int8 *)(a1 + 87);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a1 + 72);
  }
  if (!v2) {
    return 0;
  }
  if (v3 >= 0) {
    return a1 + 64;
  }
  return *(void *)(a1 + 64);
}

uint64_t VZReferenceIDGetInstanceIDAsInteger(uint64_t a1)
{
  if (sub_2157573B8((uint64_t)"VZReferenceIDGetInstanceIDAsInteger", a1) || !*(unsigned char *)(a1 + 112)) {
    return 0;
  }
  uint64_t v2 = *(unsigned __int8 *)(a1 + 87);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a1 + 72);
  }
  if (!v2) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 176))
  {
    if (*(unsigned char *)(a1 + 168)) {
      return a1 + 160;
    }
    else {
      return 0;
    }
  }
  else
  {
    *(void *)(a1 + 160) = sub_215AEF16C((const std::string *)(a1 + 64));
    *(void *)(a1 + 168) = v4;
    *(unsigned char *)(a1 + 176) = 1;
    if ((_BYTE)v4) {
      return a1 + 160;
    }
    else {
      return 0;
    }
  }
}

uint64_t VZDataInfoGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AF00))
  {
    return qword_26788AEF8;
  }
  qword_26788AEF8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AF00);
  return qword_26788AEF8;
}

_OWORD *VZDataInfoCreate()
{
  uint64_t result = operator new(0x1E0uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[28] = 0u;
    result[29] = 0u;
    result[26] = 0u;
    result[27] = 0u;
    result[24] = 0u;
    result[25] = 0u;
    result[22] = 0u;
    result[23] = 0u;
    result[20] = 0u;
    result[21] = 0u;
    result[18] = 0u;
    result[19] = 0u;
    result[16] = 0u;
    result[17] = 0u;
    result[14] = 0u;
    result[15] = 0u;
    result[12] = 0u;
    result[13] = 0u;
    result[10] = 0u;
    result[11] = 0u;
    result[8] = 0u;
    result[9] = 0u;
    result[6] = 0u;
    result[7] = 0u;
    result[4] = 0u;
    result[5] = 0u;
    result[2] = 0u;
    result[3] = 0u;
    _OWORD *result = 0u;
    result[1] = 0u;
    *((_DWORD *)result + 104) = 1;
    *(void *)uint64_t result = &unk_26C656EF8;
    *((void *)result + 2) = &unk_26C656F48;
    *(_OWORD *)((char *)result + 424) = 0u;
    *(_OWORD *)((char *)result + 440) = 0u;
    *(_OWORD *)((char *)result + 456) = 0u;
  }
  else
  {
    size_t v1 = (uint64_t *)sub_21574732C();
    long long v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    v5[0] = 0;
    char v15 = 0;
    sub_21574086C(v1, (uint64_t *)&v16, (uint64_t)v5, 0);
    if (v15 && v14)
    {
      if (v13)
      {
        if (v12 < 0) {
          operator delete(__p);
        }
        if (v10 < 0) {
          operator delete(v9);
        }
      }
      if (v8 && v7 < 0) {
        operator delete(v6);
      }
    }
    uint64_t v2 = (uint64_t)v16;
    if (v16)
    {
      uint64_t v3 = v17;
      uint64_t v4 = v16;
      if ((void *)v17 != v16)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0) {
            operator delete(*(void **)(v3 - 24));
          }
          v3 -= 24;
        }
        while (v3 != v2);
        uint64_t v4 = v16;
      }
      uint64_t v17 = v2;
      operator delete(v4);
    }
    return 0;
  }
  return result;
}

double VZDataInfoSetName(uint64_t a1, const char *a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetName", a1))
  {
    return sub_215757EB0(a2, a1 + 32);
  }
  return result;
}

BOOL sub_215757B34(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AF08))
  {
    int v5 = sub_21574732C();
    size_t v6 = (const void **)v5;
    int v7 = *((char *)v5 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      size_t v8 = *((void *)v5 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788B0E0 + 1) = v8 + 1;
      unk_26788B0F0 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788B0E0 = v10;
    }
    else
    {
      unk_26788B0F0 = 0;
      xmmword_26788B0E0 = 0uLL;
      char v10 = &xmmword_26788B0E0;
      byte_26788B0F7 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B0E0, &dword_21572C000);
        __cxa_guard_release(&qword_26788AF08);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = v6;
    }
    else {
      char v13 = *v6;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788B0F7 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788B0E0, *((unint64_t *)&xmmword_26788B0E0 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788B0E0;
    uint64_t v15 = unk_26788B0F0;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, 0);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215757E5C(_Unwind_Exception *a1)
{
}

void sub_215757E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

double sub_215757EB0(const char *a1, uint64_t a2)
{
  if (a1)
  {
    size_t v4 = strlen(a1);
    if (v4 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v5 = v4;
    if (v4 >= 0x17)
    {
      uint64_t v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v8 = v4 | 7;
      }
      uint64_t v9 = v8 + 1;
      p_dst = (long long *)operator new(v8 + 1);
      *((void *)&__dst + 1) = v5;
      unint64_t v11 = v9 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v11) = v4;
      p_dst = &__dst;
      if (!v4)
      {
        LOBYTE(__dst) = 0;
        if (!*(unsigned char *)(a2 + 24)) {
          goto LABEL_18;
        }
        goto LABEL_16;
      }
    }
    memcpy(p_dst, a1, v5);
    *((unsigned char *)p_dst + v5) = 0;
    if (!*(unsigned char *)(a2 + 24))
    {
LABEL_18:
      double result = *(double *)&__dst;
      *(_OWORD *)a2 = __dst;
      *(void *)(a2 + 16) = v11;
      *(unsigned char *)(a2 + 24) = 1;
      return result;
    }
LABEL_16:
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(unsigned char *)(a2 + 24) = 0;
  }
  return result;
}

void sub_215757FDC(void *a1)
{
  __cxa_begin_catch(a1);
  size_t v1 = sub_21575BC7C();
  uint64_t v2 = (uint64_t *)sub_21575C468();
  sub_215740F64((std::string::size_type)v1, v2, 0);
  __cxa_end_catch();
  JUMPOUT(0x215757F2CLL);
}

uint64_t VZDataInfoGetName(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetName", a1)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 56)) {
    return 0;
  }
  uint64_t result = a1 + 32;
  if (*(char *)(a1 + 55) < 0) {
    return *(void *)result;
  }
  return result;
}

BOOL sub_215758078(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AF10))
  {
    sub_21575C970();
    int v5 = byte_26788B127;
    if (byte_26788B127 >= 0) {
      size_t v6 = byte_26788B127;
    }
    else {
      size_t v6 = qword_26788B118;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788B0F8 + 1) = v6 + 1;
      unk_26788B108 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788B0F8 = v8;
    }
    else
    {
      unk_26788B108 = 0;
      xmmword_26788B0F8 = 0uLL;
      uint64_t v8 = &xmmword_26788B0F8;
      byte_26788B10F = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B0F8, &dword_21572C000);
        __cxa_guard_release(&qword_26788AF10);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      unint64_t v11 = &qword_26788B110;
    }
    else {
      unint64_t v11 = (uint64_t *)qword_26788B110;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788B10F < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788B0F8, *((unint64_t *)&xmmword_26788B0F8 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = xmmword_26788B0F8;
    uint64_t v13 = unk_26788B108;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157583A8(_Unwind_Exception *a1)
{
}

void sub_2157583C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataInfoGetInstanceID(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetInstanceID", a1)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 400))
  {
    sub_21582C924(a1 + 32);
    if (!v2) {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 320)) {
    return 0;
  }
  uint64_t v3 = *(unsigned __int8 *)(a1 + 295);
  int v4 = (char)v3;
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a1 + 280);
  }
  if (!v3) {
    return 0;
  }
  if (v4 >= 0) {
    return a1 + 272;
  }
  return *(void *)(a1 + 272);
}

unint64_t VZDataInfoGetInstanceIDAsInteger(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetInstanceIDAsInteger", a1)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 400))
  {
    sub_21582C924(a1 + 32);
    if (!v2) {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 320)) {
    return 0;
  }
  uint64_t v3 = *(unsigned __int8 *)(a1 + 295);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a1 + 280);
  }
  if (!v3) {
    return v3;
  }
  if (*(unsigned char *)(a1 + 384))
  {
    int v4 = *(unsigned __int8 *)(a1 + 376);
  }
  else
  {
    *(void *)(a1 + 368) = sub_215AEF16C((const std::string *)(a1 + 272));
    *(void *)(a1 + 376) = v6;
    *(unsigned char *)(a1 + 384) = 1;
    int v4 = v6;
  }
  unint64_t v7 = (a1 + 368) & 0xFFFFFFFFFFFFFF00;
  BOOL v8 = v4 == 0;
  if (v4) {
    uint64_t v9 = (a1 + 112);
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    unint64_t v7 = 0;
  }
  return v7 | v9;
}

void VZDataInfoSetInstanceID(uint64_t a1, char *a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetInstanceID", a1))
  {
    sub_21582D2D8(a1 + 32, a2);
  }
}

void VZDataInfoSetInstanceIDFromInteger(uint64_t a1, uint64_t a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetInstanceIDFromInteger", a1))
  {
    sub_21582D4E8(a1 + 32, a2);
  }
}

void VZDataInfoSetReferenceIDFromString(uint64_t a1, char *a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetReferenceIDFromString", a1))
  {
    sub_21582C69C(a1 + 32, a2);
  }
}

void VZDataInfoSetReferenceID(uint64_t a1, uint64_t a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetReferenceID", a1))
  {
    if (a2) {
      uint64_t v4 = a2 + 32;
    }
    else {
      uint64_t v4 = 0;
    }
    sub_21582C46C(a1 + 32, v4, a2 != 0);
  }
}

uint64_t VZDataInfoGetReferenceID(uint64_t a1)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  if (sub_215758078((uint64_t)"VZDataInfoGetReferenceID", a1)) {
    return 0;
  }
  unint64_t v3 = sub_21582C924(a1 + 32);
  uint64_t v4 = *(unsigned __int8 **)(a1 + 424);
  if (!v5)
  {
    *(void *)(a1 + 424) = 0;
    if (v4) {
      (*(void (**)(unsigned __int8 *))(*(void *)v4 + 24))(v4);
    }
    return *(void *)(a1 + 424);
  }
  if (!v4 || (sub_215AEF77C(v4 + 32, (unsigned __int8 *)v3) & 1) == 0)
  {
    uint64_t v6 = operator new(0xC0uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      unint64_t v7 = v6;
      *(void *)uint64_t v6 = &unk_26C6565D0;
      sub_21574709C(v6 + 32, (long long *)v3);
      v7[128] = 0;
      v7[152] = 0;
      if (*(unsigned char *)(v3 + 120))
      {
        if (*(char *)(v3 + 119) < 0)
        {
          sub_215738B0C(v7 + 128, *(void **)(v3 + 96), *(void *)(v3 + 104));
        }
        else
        {
          long long v8 = *(_OWORD *)(v3 + 96);
          *((void *)v7 + 18) = *(void *)(v3 + 112);
          *((_OWORD *)v7 + 8) = v8;
        }
        v7[152] = 1;
      }
      char v9 = 0;
      long long v10 = *(_OWORD *)(v3 + 128);
      *((void *)v7 + 22) = *(void *)(v3 + 144);
      *((_OWORD *)v7 + 10) = v10;
      *((_DWORD *)v7 + 46) = 1;
      *(void *)unint64_t v7 = &unk_26C656DE8;
      *((void *)v7 + 2) = &unk_26C656E38;
      atomic_fetch_add((atomic_uint *volatile)v7 + 46, 1u);
      uint64_t v11 = *(void *)(a1 + 424);
      *(void *)(a1 + 424) = v7;
      if (!v11) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    sub_21575B6F8();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE98, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788AE98))
    {
LABEL_20:
      if (byte_26788B007 < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788AFF0, *((unint64_t *)&xmmword_26788AFF0 + 1));
      }
      else
      {
        long long __dst = xmmword_26788AFF0;
        uint64_t v44 = unk_26788B000;
      }
      sub_21573A150(&v41, (uint64_t)&__dst, 1uLL);
      v30[0] = 0;
      char v40 = 0;
      sub_21574086C((uint64_t *)&xmmword_26788AFA8, (uint64_t *)&v41, (uint64_t)v30, 0);
      if (v40 && v39)
      {
        if (v38)
        {
          if (v37 < 0) {
            operator delete(__p);
          }
          if (v35 < 0) {
            operator delete(v34);
          }
        }
        if (v33 && v32 < 0) {
          operator delete(v31);
        }
      }
      uint64_t v12 = (void **)v41;
      if (v41)
      {
        uint64_t v13 = v42;
        char v14 = v41;
        if (v42 != v41)
        {
          do
          {
            if (*((char *)v13 - 1) < 0) {
              operator delete(*(v13 - 3));
            }
            v13 -= 3;
          }
          while (v13 != v12);
          char v14 = v41;
        }
        uint64_t v42 = v12;
        operator delete(v14);
      }
      if (SHIBYTE(v44) < 0)
      {
        operator delete((void *)__dst);
        unint64_t v7 = 0;
        char v9 = 1;
        uint64_t v11 = *(void *)(a1 + 424);
        *(void *)(a1 + 424) = 0;
        if (!v11)
        {
LABEL_16:
          if ((v9 & 1) == 0) {
            (*(void (**)(unsigned char *))(*(void *)v7 + 24))(v7);
          }
          return *(void *)(a1 + 424);
        }
      }
      else
      {
        unint64_t v7 = 0;
        char v9 = 1;
        uint64_t v11 = *(void *)(a1 + 424);
        *(void *)(a1 + 424) = 0;
        if (!v11) {
          goto LABEL_16;
        }
      }
LABEL_15:
      (*(void (**)(uint64_t))(*(void *)v11 + 24))(v11);
      goto LABEL_16;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEA0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788AEA0))
    {
LABEL_48:
      int v15 = byte_26788B01F;
      if (byte_26788B01F >= 0) {
        size_t v16 = byte_26788B01F;
      }
      else {
        size_t v16 = qword_26788B010;
      }
      unint64_t v17 = v16 + 1;
      if (v16 + 1 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v17 >= 0x17)
      {
        uint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v17 | 7) != 0x17) {
          uint64_t v19 = v17 | 7;
        }
        uint64_t v20 = v19 + 1;
        char v18 = (long long *)operator new(v19 + 1);
        *((void *)&xmmword_26788AFF0 + 1) = v16 + 1;
        unk_26788B000 = v20 | 0x8000000000000000;
        *(void *)&xmmword_26788AFF0 = v18;
      }
      else
      {
        unk_26788B000 = 0;
        xmmword_26788AFF0 = 0uLL;
        char v18 = &xmmword_26788AFF0;
        byte_26788B007 = v16 + 1;
        if (!v16)
        {
LABEL_62:
          *(_WORD *)((char *)v18 + v16) = 38;
          __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AFF0, &dword_21572C000);
          __cxa_guard_release(&qword_26788AE98);
          goto LABEL_20;
        }
      }
      if (v15 >= 0) {
        uint64_t v21 = &qword_26788B008;
      }
      else {
        uint64_t v21 = (uint64_t *)qword_26788B008;
      }
      memmove(v18, v21, v16);
      goto LABEL_62;
    }
    sub_21575B8F0();
    int v22 = byte_26788B037;
    if (byte_26788B037 >= 0) {
      size_t v23 = byte_26788B037;
    }
    else {
      size_t v23 = *((void *)&xmmword_26788B020 + 1);
    }
    unint64_t v24 = v23 + 6;
    if (v23 + 6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v24 >= 0x17)
    {
      uint64_t v26 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v24 | 7) != 0x17) {
        uint64_t v26 = v24 | 7;
      }
      uint64_t v27 = v26 + 1;
      uint64_t v28 = (char *)operator new(v26 + 1);
      qword_26788B010 = v23 + 6;
      unk_26788B018 = v27 | 0x8000000000000000;
      qword_26788B008 = (uint64_t)v28;
      *(_DWORD *)uint64_t v28 = 1936617315;
      *((_WORD *)v28 + 2) = 8308;
      char v25 = v28 + 6;
    }
    else
    {
      qword_26788B010 = 0;
      unk_26788B018 = 0;
      qword_26788B008 = 0x2074736E6F63;
      byte_26788B01F = v23 + 6;
      char v25 = (char *)&qword_26788B008 + 6;
      if (!v23)
      {
LABEL_79:
        v25[v23] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B008, &dword_21572C000);
        __cxa_guard_release(&qword_26788AEA0);
        goto LABEL_48;
      }
    }
    if (v22 >= 0) {
      char v29 = &xmmword_26788B020;
    }
    else {
      char v29 = (long long *)xmmword_26788B020;
    }
    memmove(v25, v29, v23);
    goto LABEL_79;
  }
  return *(void *)(a1 + 424);
}

void sub_215758D28(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788AEA0);
    __cxa_guard_abort(&qword_26788AE98);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215758D58(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215758D64);
  }
  sub_215731D80(a1);
}

uint64_t VZDataInfoGetReferenceIDAsString(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetReferenceIDAsString", a1)) {
    return 0;
  }
  unint64_t v2 = sub_21582C924(a1 + 32);
  if (!v3) {
    return 0;
  }

  return sub_21582C330(v2);
}

double VZDataInfoSetSpace(uint64_t a1, const char *a2)
{
  if (!sub_215757B34((uint64_t)"VZDataInfoSetSpace", a1))
  {
    return sub_215757EB0(a2, a1 + 128);
  }
  return result;
}

uint64_t VZDataInfoGetSpace(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetSpace", a1)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 152)) {
    return 0;
  }
  uint64_t result = a1 + 128;
  if (*(char *)(a1 + 151) < 0) {
    return *(void *)result;
  }
  return result;
}

char *VZDataInfoGetAssociatedSpace(char *a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetAssociatedSpace", (uint64_t)a1)) {
    return 0;
  }
  if (a1[152])
  {
    uint64_t result = a1 + 128;
    if (a1[151] < 0) {
      return *(char **)result;
    }
  }
  else
  {
    if (!a1[56]) {
      return 0;
    }
    uint64_t result = a1 + 32;
    if (a1[55] < 0) {
      return *(char **)result;
    }
  }
  return result;
}

BOOL VZDataInfoSetTimestampMachContinuousNanoseconds(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215757B34((uint64_t)"VZDataInfoSetTimestampMachContinuousNanoseconds", a1);
  if (!result)
  {
    if (!*(unsigned char *)(a1 + 176)) {
      *(unsigned char *)(a1 + 176) = 1;
    }
    *(void *)(a1 + 160) = a2;
    *(unsigned char *)(a1 + 168) = 2;
  }
  return result;
}

BOOL VZDataInfoSetTimestampSteadyNanoseconds(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215757B34((uint64_t)"VZDataInfoSetTimestampSteadyNanoseconds", a1);
  if (!result)
  {
    if (!*(unsigned char *)(a1 + 176)) {
      *(unsigned char *)(a1 + 176) = 1;
    }
    *(void *)(a1 + 160) = a2;
    *(unsigned char *)(a1 + 168) = 4;
  }
  return result;
}

BOOL VZDataInfoSetTimestampChronologicalNanoseconds(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215757B34((uint64_t)"VZDataInfoSetTimestampChronologicalNanoseconds", a1);
  if (!result)
  {
    if (!*(unsigned char *)(a1 + 176)) {
      *(unsigned char *)(a1 + 176) = 1;
    }
    *(void *)(a1 + 160) = a2;
    *(unsigned char *)(a1 + 168) = 1;
  }
  return result;
}

BOOL VZDataInfoSetTimestamp(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215757B34((uint64_t)"VZDataInfoSetTimestamp", a1);
  if (!result)
  {
    if (a2)
    {
      if (*(unsigned char *)(a1 + 176)) {
        *(unsigned char *)(a1 + 176) = 0;
      }
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 16);
      char v5 = 1;
    }
    else
    {
      if (!*(unsigned char *)(a1 + 176)) {
        return result;
      }
      char v5 = 0;
    }
    *(unsigned char *)(a1 + 176) = v5;
  }
  return result;
}

BOOL VZDataInfoSetLogTimestampNanoseconds(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215757B34((uint64_t)"VZDataInfoSetLogTimestampNanoseconds", a1);
  if (!result)
  {
    if (!*(unsigned char *)(a1 + 200)) {
      *(unsigned char *)(a1 + 200) = 1;
    }
    *(void *)(a1 + 184) = a2;
    *(unsigned char *)(a1 + 192) = 2;
  }
  return result;
}

void *VZDataInfoGetTimestamp(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetTimestamp", a1)) {
    return 0;
  }
  sub_215755ED0(&v4, (uint64_t *)(a1 + 160), (void **)(a1 + 440));
  unint64_t v2 = v4;
  if (!v4) {
    return v2;
  }
  (*(void (**)(void *))(*(void *)v4 + 24))(v4);
  return v2;
}

void *VZDataInfoGetLogTimestamp(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetLogTimestamp", a1)) {
    return 0;
  }
  sub_215755ED0(&v4, (uint64_t *)(a1 + 184), (void **)(a1 + 432));
  unint64_t v2 = v4;
  if (!v4) {
    return v2;
  }
  (*(void (**)(void *))(*(void *)v4 + 24))(v4);
  return v2;
}

uint64_t VZDataInfoAddReferenceFromString(uint64_t a1, char *a2)
{
  if (sub_215757B34((uint64_t)"VZDataInfoAddReferenceFromString", a1)
    || sub_2157569A8((uint64_t)"VZDataInfoAddReferenceFromString", (uint64_t)a2, 0))
  {
    return 0;
  }

  return sub_21582D7D4(a1 + 32, a2);
}

uint64_t VZDataInfoAddReference(uint64_t a1, uint64_t a2)
{
  if (sub_215757B34((uint64_t)"VZDataInfoAddReference", a1) || sub_2157573B8((uint64_t)"VZDataInfoAddReference", a2)) {
    return 0;
  }

  return sub_21582D684(a1 + 32, a2 + 32);
}

unint64_t VZDataInfoGetReferenceCount(uint64_t a1)
{
  if (sub_215758078((uint64_t)"VZDataInfoGetReferenceCount", a1) || !*(unsigned char *)(a1 + 232)) {
    return 0;
  }
  else {
    return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 216) - *(void *)(a1 + 208)) >> 5);
  }
}

uint64_t VZDataInfoGetReferenceAt(uint64_t a1, unint64_t a2)
{
  uint64_t v77 = *MEMORY[0x263EF8340];
  if (!sub_215758078((uint64_t)"VZDataInfoGetReferenceAt", a1))
  {
    sub_21582D988(a1 + 32, a2, (uint64_t)&v63);
    if (!v74)
    {
      sub_21573E208(&v63, 0);
      uint64_t v4 = 0;
LABEL_19:
      sub_21575B618((uint64_t)&v63);
      return v4;
    }
    uint64_t v6 = *(char **)(a1 + 448);
    char v5 = *(char **)(a1 + 456);
    unint64_t v7 = (v5 - v6) >> 3;
    if (v7 <= a2)
    {
      unint64_t v21 = a2 + 1;
      unint64_t v22 = a2 + 1 - v7;
      if (a2 + 1 <= v7)
      {
        if (a2 + 1 < v7)
        {
          uint64_t v44 = &v6[8 * v21];
          while (v5 != v44)
          {
            uint64_t v46 = *((void *)v5 - 1);
            v5 -= 8;
            uint64_t v45 = v46;
            *(void *)char v5 = 0;
            if (v46) {
              (*(void (**)(uint64_t))(*(void *)v45 + 24))(v45);
            }
          }
          *(void *)(a1 + 456) = v44;
        }
      }
      else
      {
        uint64_t v23 = *(void *)(a1 + 464);
        if (v22 <= (v23 - (uint64_t)v5) >> 3)
        {
          bzero(*(void **)(a1 + 456), 8 * v22);
          *(void *)(a1 + 456) = &v5[8 * v22];
        }
        else
        {
          if (v21 >> 61) {
            sub_215738AC0();
          }
          uint64_t v24 = v23 - (void)v6;
          if (v24 >> 2 > v21) {
            unint64_t v21 = v24 >> 2;
          }
          if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v21;
          }
          if (v25 >> 61) {
            sub_215738AD8();
          }
          uint64_t v26 = (char *)operator new(8 * v25);
          uint64_t v27 = &v26[8 * v7];
          size_t v28 = 8 * v22;
          char v29 = &v26[8 * v25];
          bzero(v27, v28);
          long long v30 = &v27[v28];
          if (v5 == v6)
          {
            *(void *)(a1 + 448) = v27;
            *(void *)(a1 + 456) = v30;
            *(void *)(a1 + 464) = v29;
          }
          else
          {
            unint64_t v31 = v5 - v6 - 8;
            if (v31 < 0x78
              || &v5[-(v31 & 0xFFFFFFFFFFFFFFF8) - 8] < v27 && &v26[v5 - v6 - (v31 & 0xFFFFFFFFFFFFFFF8) - 8] < v5)
            {
              goto LABEL_81;
            }
            uint64_t v32 = (v31 >> 3) + 1;
            uint64_t v33 = 8 * (v32 & 0x3FFFFFFFFFFFFFFCLL);
            v27 -= v33;
            uint64_t v34 = &v5[-v33];
            char v35 = v5 - 16;
            char v36 = &v26[8 * v7 - 16];
            uint64_t v37 = v32 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v39 = *((_OWORD *)v35 - 1);
              long long v38 = *(_OWORD *)v35;
              *((_OWORD *)v35 - 1) = 0uLL;
              *(_OWORD *)char v35 = 0uLL;
              *((_OWORD *)v36 - 1) = v39;
              *(_OWORD *)char v36 = v38;
              v35 -= 32;
              v36 -= 32;
              v37 -= 4;
            }
            while (v37);
            char v5 = v34;
            if (v32 != (v32 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_81:
              do
              {
                uint64_t v40 = *((void *)v5 - 1);
                v5 -= 8;
                *(void *)char v5 = 0;
                *((void *)v27 - 1) = v40;
                v27 -= 8;
              }
              while (v5 != v6);
            }
            char v5 = *(char **)(a1 + 448);
            long long v41 = *(char **)(a1 + 456);
            *(void *)(a1 + 448) = v27;
            *(void *)(a1 + 456) = v30;
            *(void *)(a1 + 464) = v29;
            while (v41 != v5)
            {
              uint64_t v43 = *((void *)v41 - 1);
              v41 -= 8;
              uint64_t v42 = v43;
              *(void *)long long v41 = 0;
              if (v43) {
                (*(void (**)(uint64_t))(*(void *)v42 + 24))(v42);
              }
            }
          }
          if (v5) {
            operator delete(v5);
          }
        }
      }
    }
    uint64_t v8 = *(void *)(a1 + 448);
    uint64_t v4 = *(void *)(v8 + 8 * a2);
    if (v4) {
      goto LABEL_19;
    }
    char v9 = operator new(0xC0uLL, MEMORY[0x263F8C180]);
    long long v10 = v9;
    if (v9)
    {
      *(void *)char v9 = &unk_26C6565D0;
      v9[32] = 0;
      v9[56] = 0;
      if (v65)
      {
        *((_OWORD *)v9 + 2) = v63;
        *((void *)v9 + 6) = v64;
        uint64_t v64 = 0;
        long long v63 = 0uLL;
        v9[56] = 1;
      }
      v9[64] = 0;
      v9[112] = 0;
      if (v68)
      {
        _X0 = 0;
        _X1 = 0;
        *((void *)v10 + 10) = v67;
        *((_OWORD *)v10 + 4) = v66;
        uint64_t v67 = 0;
        long long v66 = 0uLL;
        __asm { CASPAL          X0, X1, X0, X1, [X8] }
        *((void *)v10 + 12) = _X0;
        *((void *)v10 + 13) = 0;
        v10[112] = 1;
      }
      v10[128] = 0;
      v10[152] = 0;
      if (v71)
      {
        *((_OWORD *)v10 + 8) = v69;
        *((void *)v10 + 18) = v70;
        uint64_t v70 = 0;
        long long v69 = 0uLL;
        v10[152] = 1;
      }
      *((_OWORD *)v10 + 10) = v72;
      *((void *)v10 + 22) = v73;
      *((_DWORD *)v10 + 46) = 1;
      *(void *)long long v10 = &unk_26C656DE8;
      *((void *)v10 + 2) = &unk_26C656E38;
      atomic_fetch_add((atomic_uint *volatile)v10 + 46, 1u);
      char v18 = v10;
      uint64_t v19 = *(void *)(v8 + 8 * a2);
      *(void *)(v8 + 8 * a2) = v10;
      if (!v19) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_21575B6F8();
      sub_21575B8F0();
      if (byte_26788B037 < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788B020, *((unint64_t *)&xmmword_26788B020 + 1));
      }
      else
      {
        long long __dst = xmmword_26788B020;
        uint64_t v76 = unk_26788B030;
      }
      sub_21573A150(&v61, (uint64_t)&__dst, 1uLL);
      v50[0] = 0;
      char v60 = 0;
      sub_21574086C((uint64_t *)&xmmword_26788AFA8, (uint64_t *)&v61, (uint64_t)v50, 0);
      if (v60 && v59)
      {
        if (v58)
        {
          if (v57 < 0) {
            operator delete(__p);
          }
          if (v55 < 0) {
            operator delete(v54);
          }
        }
        if (v53 && v52 < 0) {
          operator delete(v51);
        }
      }
      uint64_t v47 = (void **)v61;
      if (v61)
      {
        char v48 = v62;
        long long v49 = v61;
        if (v62 != v61)
        {
          do
          {
            if (*((char *)v48 - 1) < 0) {
              operator delete(*(v48 - 3));
            }
            v48 -= 3;
          }
          while (v48 != v47);
          long long v49 = v61;
        }
        char v62 = v47;
        operator delete(v49);
      }
      if (SHIBYTE(v76) < 0) {
        operator delete((void *)__dst);
      }
      char v18 = 0;
      uint64_t v19 = *(void *)(v8 + 8 * a2);
      *(void *)(v8 + 8 * a2) = 0;
      if (!v19) {
        goto LABEL_15;
      }
    }
    (*(void (**)(uint64_t))(*(void *)v19 + 24))(v19);
LABEL_15:
    if (v10) {
      (*(void (**)(unsigned char *))(*(void *)v18 + 24))(v18);
    }
    uint64_t v4 = *(void *)(v8 + 8 * a2);
    goto LABEL_19;
  }
  return 0;
}

void sub_215759914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZDataGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF28, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AF28))
  {
    return qword_26788AF20;
  }
  qword_26788AF20 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AF28);
  return qword_26788AF20;
}

uint64_t VZDataGetPackageID(uint64_t a1)
{
  BOOL v2 = sub_2157456B0((uint64_t)"VZDataGetPackageID", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v5 = a1 + 32;
    uint64_t v4 = v6;
    if (*(char *)(v5 + 23) >= 0) {
      return v5;
    }
    else {
      return v4;
    }
  }
  return result;
}

uint64_t VZDataGetDataTypeID(uint64_t a1)
{
  if (sub_2157456B0((uint64_t)"VZDataGetDataTypeID", a1, 0)) {
    return 0xFFFFFFFFLL;
  }
  else {
    return *(unsigned int *)(a1 + 56);
  }
}

char *VZDataGetDataInfo(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  BOOL v2 = 0;
  if (sub_2157456B0((uint64_t)"VZDataGetDataInfo", a1, 0)) {
    return v2;
  }
  BOOL v2 = *(char **)(a1 + 560);
  if (v2) {
    return v2;
  }
  char v3 = (char *)operator new(0x1E0uLL, MEMORY[0x263F8C180]);
  if (!v3)
  {
    uint64_t v6 = (uint64_t *)sub_21574732C();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEC0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788AEC0))
    {
      goto LABEL_8;
    }
    sub_21575BAE8();
    int v10 = byte_26788B097;
    if (byte_26788B097 >= 0) {
      size_t v11 = byte_26788B097;
    }
    else {
      size_t v11 = qword_26788B088;
    }
    unint64_t v12 = v11 + 1;
    if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v12 >= 0x17)
    {
      uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v14 = v12 | 7;
      }
      uint64_t v15 = v14 + 1;
      uint64_t v13 = (long long *)operator new(v14 + 1);
      *((void *)&xmmword_26788B068 + 1) = v11 + 1;
      unk_26788B078 = v15 | 0x8000000000000000;
      *(void *)&xmmword_26788B068 = v13;
    }
    else
    {
      uint64_t v13 = &xmmword_26788B068;
      unk_26788B078 = 0;
      xmmword_26788B068 = 0uLL;
      byte_26788B07F = v11 + 1;
      if (!v11)
      {
LABEL_48:
        *(_WORD *)((char *)v13 + v11) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B068, &dword_21572C000);
        __cxa_guard_release(&qword_26788AEC0);
LABEL_8:
        if (byte_26788B07F < 0)
        {
          sub_215738B0C(&__dst, (void *)xmmword_26788B068, *((unint64_t *)&xmmword_26788B068 + 1));
        }
        else
        {
          long long __dst = xmmword_26788B068;
          uint64_t v31 = unk_26788B078;
        }
        sub_21573A150(&v28, (uint64_t)&__dst, 1uLL);
        v17[0] = 0;
        char v27 = 0;
        sub_21574086C(v6, (uint64_t *)&v28, (uint64_t)v17, 0);
        if (v27 && v26)
        {
          if (v25)
          {
            if (v24 < 0) {
              operator delete(__p);
            }
            if (v22 < 0) {
              operator delete(v21);
            }
          }
          if (v20 && v19 < 0) {
            operator delete(v18);
          }
        }
        unint64_t v7 = (void **)v28;
        if (v28)
        {
          uint64_t v8 = v29;
          char v9 = v28;
          if (v29 != v28)
          {
            do
            {
              if (*((char *)v8 - 1) < 0) {
                operator delete(*(v8 - 3));
              }
              v8 -= 3;
            }
            while (v8 != v7);
            char v9 = v28;
          }
          char v29 = v7;
          operator delete(v9);
        }
        if (SHIBYTE(v31) < 0) {
          operator delete((void *)__dst);
        }
        BOOL v2 = 0;
        uint64_t v4 = *(void *)(a1 + 560);
        *(void *)(a1 + 560) = 0;
        if (v4) {
          goto LABEL_5;
        }
        return v2;
      }
    }
    if (v10 >= 0) {
      size_t v16 = &qword_26788B080;
    }
    else {
      size_t v16 = (uint64_t *)qword_26788B080;
    }
    memmove(v13, v16, v11);
    goto LABEL_48;
  }
  BOOL v2 = v3;
  *(void *)char v3 = &unk_26C6565D0;
  sub_215746C14(v3 + 32, (long long *)(a1 + 64));
  sub_2157471AC(v2 + 240, a1 + 272);
  *((_DWORD *)v2 + 104) = 1;
  *(void *)BOOL v2 = &unk_26C656EF8;
  *((void *)v2 + 2) = &unk_26C656F48;
  *(_OWORD *)(v2 + 424) = 0u;
  *(_OWORD *)(v2 + 440) = 0u;
  *(_OWORD *)(v2 + 456) = 0u;
  uint64_t v4 = *(void *)(a1 + 560);
  *(void *)(a1 + 560) = v2;
  if (v4)
  {
LABEL_5:
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    return *(char **)(a1 + 560);
  }
  return v2;
}

void sub_215759E34(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788AEC0);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215759E4C(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215759E58);
  }
  sub_215731D80(a1);
}

uint64_t VZDataGetTimestampNanosecondsSinceEpoch(uint64_t a1)
{
  if (sub_2157456B0((uint64_t)"VZDataGetTimestampNanosecondsSinceEpoch", a1, 0)) {
    return 0;
  }

  return sub_21582D278(a1 + 64);
}

uint64_t VZDataGetTimestampClockType(uint64_t a1)
{
  if (sub_2157456B0((uint64_t)"VZDataGetTimestampClockType", a1, 0)) {
    return 0;
  }

  return sub_21582D2A8((unsigned __int8 *)(a1 + 64));
}

uint64_t VZDataGetLogTimestampNanosecondsSinceEpoch(uint64_t a1)
{
  BOOL v2 = sub_2157456B0((uint64_t)"VZDataGetLogTimestampNanosecondsSinceEpoch", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    sub_21582D08C(a1 + 64, (uint64_t)v4);
    char v26 = "VZDataGetLogTimestampNanosecondsSinceEpoch";
    if (v13) {
      return v4[0];
    }
    sub_21574F3D8("in function ", (const char *)&v26);
    sub_215E11614((char *)v4, &v14, (uint64_t)&v16);
    sub_21573E208(&v16, 0);
    if (v25)
    {
      if (v24)
      {
        if (v23 < 0) {
          operator delete(__p);
        }
        if (v21 < 0) {
          operator delete(v20);
        }
      }
      if (v19 && v18 < 0) {
        operator delete(v17);
      }
    }
    if (v15 < 0)
    {
      operator delete(v14);
      if (v13) {
        return 1;
      }
    }
    else if (v13)
    {
      return 1;
    }
    if (!v12) {
      return 1;
    }
    if (v11)
    {
      if (v10 < 0) {
        operator delete(v9);
      }
      if (v8 < 0) {
        operator delete(v7);
      }
    }
    uint64_t result = 1;
    if (v6)
    {
      if (v5 < 0)
      {
        operator delete((void *)v4[2]);
        return 1;
      }
    }
  }
  return result;
}

void sub_21575A0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_21575A0EC(uint64_t result)
{
  return result;
}

uint64_t sub_21575A0FC(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 184), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 16) + 8))();
  }
  return result;
}

uint64_t sub_21575A138()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AED8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AED8))
  {
    return qword_26788AED0;
  }
  qword_26788AED0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AED8);
  return qword_26788AED0;
}

unsigned __int8 *sub_21575A19C(uint64_t a1, void *lpsrc)
{
  uint64_t result = (unsigned __int8 *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656E98, 0);
  if (result)
  {
    return (unsigned __int8 *)sub_215AEF77C((unsigned __int8 *)(a1 + 32), result + 32);
  }
  return result;
}

void sub_21575A230(uint64_t a1)
{
  sub_21575B6F8();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_21575A4E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21575B6F8();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788AFA8, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_21575A5C8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 184));
}

uint64_t sub_21575A5D4(uint64_t result)
{
  return result;
}

uint64_t sub_21575A5E4(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 416), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 16) + 8))();
  }
  return result;
}

uint64_t sub_21575A620()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AF00))
  {
    return qword_26788AEF8;
  }
  qword_26788AEF8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AF00);
  return qword_26788AEF8;
}

char *sub_21575A684(uint64_t a1, void *lpsrc)
{
  uint64_t result = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C656F90, 0);
  if (result)
  {
    v5[0] = a1 + 32;
    v5[1] = a1 + 64;
    v5[2] = a1 + 128;
    v5[3] = a1 + 160;
    v5[4] = a1 + 184;
    v5[5] = a1 + 208;
    v4[0] = result + 32;
    v4[1] = result + 64;
    v4[2] = result + 128;
    v4[3] = result + 160;
    void v4[4] = result + 184;
    v4[5] = result + 208;
    return (char *)sub_21575CB04((uint64_t)&v6, v5, v4);
  }
  return result;
}

uint64_t sub_21575A750(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  __cxa_begin_catch(a1);
  uint64_t v31 = sub_21574732C();
  sub_215732BF4(v33, "failed to compare equal");
  sub_2157402F0((std::string::size_type)v31, v33, 0);
  if (v34 < 0) {
    operator delete((void *)v33[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_21575A7AC(uint64_t a1)
{
  sub_21574732C();
  uint64_t v2 = a1;
  operator new();
}

void sub_21575AA7C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v25 = sub_21574732C();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v25, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21575AA60);
}

uint64_t sub_21575AB4C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 416));
}

uint64_t sub_21575AB58(uint64_t result)
{
  return result;
}

uint64_t sub_21575AB68(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 552), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 16) + 8))();
  }
  return result;
}

uint64_t sub_21575ABA4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF28, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AF28))
  {
    return qword_26788AF20;
  }
  qword_26788AF20 = sub_21573DD88();
  __cxa_guard_release(&qword_26788AF28);
  return qword_26788AF20;
}

unsigned __int8 *sub_21575AC08(uint64_t a1, void *lpsrc)
{
  uint64_t result = (unsigned __int8 *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657050, 0);
  if (result) {
    return (unsigned __int8 *)sub_21582E238((unsigned __int8 *)(a1 + 32), result + 32);
  }
  return result;
}

uint64_t sub_21575AC8C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  char v19 = sub_21574875C();
  sub_215732BF4(v21, "failed to compare equal");
  sub_2157402F0((std::string::size_type)v19, v21, 0);
  if (v22 < 0) {
    operator delete((void *)v21[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_21575ACE8(uint64_t a1)
{
  sub_21574875C();
  uint64_t v2 = a1;
  operator new();
}

void sub_21575AF74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25)
{
  sub_215733368((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v26 = sub_21574875C();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v26, (const void **)&__p, 0);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21575AF58);
}

uint64_t sub_21575B05C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 552));
}

long long *sub_21575B068()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883F20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883F20))
  {
    return &xmmword_267883F08;
  }
  size_t v1 = (char *)sub_21575B150();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883F08, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883F18 = *((void *)v1 + 2);
    xmmword_267883F08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883F08, &dword_21572C000);
  __cxa_guard_release(&qword_267883F20);
  return &xmmword_267883F08;
}

void sub_21575B138(_Unwind_Exception *a1)
{
}

void *sub_21575B150()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883F40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883F40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZTimestamp]", qword_267883F28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883F28, &dword_21572C000);
    __cxa_guard_release(&qword_267883F40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883F60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883F60))
  {
    return &unk_267883F48;
  }
  sub_215E19DF4((uint64_t)qword_267883F28, (uint64_t)&unk_267883F48);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883F48, &dword_21572C000);
  __cxa_guard_release(&qword_267883F60);
  return &unk_267883F48;
}

void sub_21575B254(_Unwind_Exception *a1)
{
}

void sub_21575B26C(_Unwind_Exception *a1)
{
}

void sub_21575B284()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AE60))
  {
    return;
  }
  sub_21575B420();
  int v0 = byte_26788AF77;
  if (byte_26788AF77 >= 0) {
    size_t v1 = byte_26788AF77;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788AF60 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    char v6 = (char *)operator new(v4 + 1);
    qword_26788AF50 = v1 + 6;
    unk_26788AF58 = v5 | 0x8000000000000000;
    qword_26788AF48 = (uint64_t)v6;
    *(_DWORD *)char v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    char v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788AF50 = 0;
  unk_26788AF58 = 0;
  qword_26788AF48 = 0x2074736E6F63;
  byte_26788AF5F = v1 + 6;
  char v3 = (char *)&qword_26788AF48 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      unint64_t v7 = &xmmword_26788AF60;
    }
    else {
      unint64_t v7 = (long long *)xmmword_26788AF60;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788AF48, &dword_21572C000);

  __cxa_guard_release(&qword_26788AE60);
}

void sub_21575B408(_Unwind_Exception *a1)
{
}

void sub_21575B420()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE68))
  {
    sub_21575B4F4();
    if (byte_26788AFA7 < 0)
    {
      sub_215738B0C(&xmmword_26788AF60, (void *)xmmword_26788AF90, *((unint64_t *)&xmmword_26788AF90 + 1));
    }
    else
    {
      xmmword_26788AF60 = xmmword_26788AF90;
      unk_26788AF70 = unk_26788AFA0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AF60, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE68);
  }
}

void sub_21575B4DC(_Unwind_Exception *a1)
{
}

void sub_21575B4F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE70))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::Timestamp]", qword_26788AF78);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AF78, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE70);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE78))
  {
    sub_215E19DF4((uint64_t)qword_26788AF78, (uint64_t)&xmmword_26788AF90);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AF90, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE78);
  }
}

void sub_21575B5E8(_Unwind_Exception *a1)
{
}

void sub_21575B600(_Unwind_Exception *a1)
{
}

uint64_t sub_21575B618(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 160))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_15;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_15:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_16;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_16:
    if (*(char *)(a1 + 39) < 0)
    {
      unint64_t v2 = (void **)(a1 + 16);
      goto LABEL_18;
    }
    return a1;
  }
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (!*(unsigned char *)(a1 + 24)) {
    return a1;
  }
  unint64_t v2 = (void **)a1;
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
LABEL_18:
  operator delete(*v2);
  return a1;
}

void sub_21575B6F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE80))
  {
    sub_21575B7CC();
    if (byte_26788AFEF < 0)
    {
      sub_215738B0C(&xmmword_26788AFA8, (void *)xmmword_26788AFD8, *((unint64_t *)&xmmword_26788AFD8 + 1));
    }
    else
    {
      xmmword_26788AFA8 = xmmword_26788AFD8;
      qword_26788AFB8 = unk_26788AFE8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AFA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE80);
  }
}

void sub_21575B7B4(_Unwind_Exception *a1)
{
}

void sub_21575B7CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE88))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZReferenceID]", qword_26788AFC0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788AFC0, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE88);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AE90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AE90))
  {
    sub_215E19DF4((uint64_t)qword_26788AFC0, (uint64_t)&xmmword_26788AFD8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788AFD8, &dword_21572C000);
    __cxa_guard_release(&qword_26788AE90);
  }
}

void sub_21575B8C0(_Unwind_Exception *a1)
{
}

void sub_21575B8D8(_Unwind_Exception *a1)
{
}

void sub_21575B8F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AEA8))
  {
    sub_21575B9C4();
    if (byte_26788B067 < 0)
    {
      sub_215738B0C(&xmmword_26788B020, (void *)xmmword_26788B050, *((unint64_t *)&xmmword_26788B050 + 1));
    }
    else
    {
      xmmword_26788B020 = xmmword_26788B050;
      unk_26788B030 = unk_26788B060;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B020, &dword_21572C000);
    __cxa_guard_release(&qword_26788AEA8);
  }
}

void sub_21575B9AC(_Unwind_Exception *a1)
{
}

void sub_21575B9C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AEB0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ReferenceID]", qword_26788B038);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B038, &dword_21572C000);
    __cxa_guard_release(&qword_26788AEB0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AEB8))
  {
    sub_215E19DF4((uint64_t)qword_26788B038, (uint64_t)&xmmword_26788B050);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B050, &dword_21572C000);
    __cxa_guard_release(&qword_26788AEB8);
  }
}

void sub_21575BAB8(_Unwind_Exception *a1)
{
}

void sub_21575BAD0(_Unwind_Exception *a1)
{
}

void sub_21575BAE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AEC8))
  {
    int v0 = sub_215747A74();
    size_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      char v8 = (char *)operator new(v6 + 1);
      qword_26788B088 = v3 + 6;
      unk_26788B090 = v7 | 0x8000000000000000;
      qword_26788B080 = (uint64_t)v8;
      *(_DWORD *)char v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788B088 = 0;
      unk_26788B090 = 0;
      qword_26788B080 = 0x2074736E6F63;
      byte_26788B097 = v3 + 6;
      uint64_t v5 = (char *)&qword_26788B080 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B080, &dword_21572C000);
        __cxa_guard_release(&qword_26788AEC8);
        return;
      }
    }
    if (v2 >= 0) {
      char v9 = v1;
    }
    else {
      char v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_21575BC64(_Unwind_Exception *a1)
{
}

uint64_t *sub_21575BC7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883E20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883E20))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883E40, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267883E40))
    {
      qword_267883E30 = 0;
      unk_267883E38 = 0xA00000000000000;
      LODWORD(qword_267883E28) = 1936617315;
      WORD2(qword_267883E28) = 8308;
      *(_DWORD *)((char *)&qword_267883E28 + 6) = 1918986339;
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883E28, &dword_21572C000);
      __cxa_guard_release(&qword_267883E40);
    }
    int v1 = byte_267883E3F;
    if (byte_267883E3F >= 0) {
      size_t v2 = byte_267883E3F;
    }
    else {
      size_t v2 = qword_267883E30;
    }
    unint64_t v3 = v2 + 1;
    if (v2 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    unint64_t v4 = &qword_267883E08;
    if (v3 >= 0x17)
    {
      uint64_t v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17) {
        uint64_t v5 = v3 | 7;
      }
      uint64_t v6 = v5 + 1;
      uint64_t v7 = (uint64_t *)operator new(v5 + 1);
      qword_267883E10 = v2 + 1;
      unk_267883E18 = v6 | 0x8000000000000000;
      qword_267883E08 = (uint64_t)v7;
      unint64_t v4 = v7;
    }
    else
    {
      qword_267883E10 = 0;
      unk_267883E18 = 0;
      qword_267883E08 = 0;
      byte_267883E1F = v2 + 1;
      if (!v2)
      {
LABEL_19:
        *(_WORD *)((char *)v4 + v2) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883E08, &dword_21572C000);
        __cxa_guard_release(&qword_267883E20);
        return &qword_267883E08;
      }
    }
    if (v1 >= 0) {
      char v8 = &qword_267883E28;
    }
    else {
      char v8 = (uint64_t *)qword_267883E28;
    }
    memmove(v4, v8, v2);
    goto LABEL_19;
  }
  return &qword_267883E08;
}

void sub_21575BE3C(_Unwind_Exception *a1)
{
}

unsigned char *sub_21575BE54(void (*a1)(void **__return_ptr, uint64_t), uint64_t a2)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  a1(v31, a2);
  size_t v2 = operator new(0xC0uLL, MEMORY[0x263F8C180]);
  unint64_t v3 = v2;
  if (!v2)
  {
    if (!v39) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  *(void *)size_t v2 = &unk_26C6565D0;
  v2[32] = 0;
  v2[56] = 0;
  if (v33)
  {
    *((_OWORD *)v2 + 2) = *(_OWORD *)v31;
    *((void *)v2 + 6) = v32;
    v31[1] = 0;
    uint64_t v32 = 0;
    v31[0] = 0;
    v2[56] = 1;
  }
  v2[64] = 0;
  v2[112] = 0;
  if (v36)
  {
    _X0 = 0;
    _X1 = 0;
    *((void *)v3 + 10) = v35;
    *((_OWORD *)v3 + 4) = *(_OWORD *)v34;
    v34[1] = 0;
    uint64_t v35 = 0;
    v34[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)v3 + 12) = _X0;
    *((void *)v3 + 13) = 0;
    v3[112] = 1;
  }
  v3[128] = 0;
  v3[152] = 0;
  int v11 = v39;
  if (v39)
  {
    *((_OWORD *)v3 + 8) = *(_OWORD *)__p;
    *((void *)v3 + 18) = v38;
    __p[1] = 0;
    uint64_t v38 = 0;
    __p[0] = 0;
    v3[152] = 1;
  }
  *((_OWORD *)v3 + 10) = v40;
  *((void *)v3 + 22) = v41;
  *((_DWORD *)v3 + 46) = 1;
  *(void *)unint64_t v3 = &unk_26C656DE8;
  *((void *)v3 + 2) = &unk_26C656E38;
  if (v11)
  {
LABEL_11:
    if (SHIBYTE(v38) < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_13:
  if (v36 && SHIBYTE(v35) < 0) {
    operator delete(v34[0]);
  }
  if (v33 && SHIBYTE(v32) < 0) {
    operator delete(v31[0]);
  }
  if (!v3)
  {
    sub_21575B6F8();
    char v12 = sub_21575C17C();
    if (*((char *)v12 + 23) < 0)
    {
      sub_215738B0C(__dst, (void *)*v12, v12[1]);
    }
    else
    {
      long long v13 = *(_OWORD *)v12;
      uint64_t v30 = v12[2];
      *(_OWORD *)long long __dst = v13;
    }
    sub_21573A150(v31, (uint64_t)__dst, 1uLL);
    v18[0] = 0;
    char v28 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788AFA8, (uint64_t *)v31, (uint64_t)v18, 0);
    if (v28 && v27)
    {
      if (v26)
      {
        if (v25 < 0) {
          operator delete(v24);
        }
        if (v23 < 0) {
          operator delete(v22);
        }
      }
      if (v21 && v20 < 0) {
        operator delete(v19);
      }
    }
    uint64_t v14 = (void **)v31[0];
    if (v31[0])
    {
      char v15 = (void **)v31[1];
      long long v16 = v31[0];
      if (v31[1] != v31[0])
      {
        do
        {
          if (*((char *)v15 - 1) < 0) {
            operator delete(*(v15 - 3));
          }
          v15 -= 3;
        }
        while (v15 != v14);
        long long v16 = v31[0];
      }
      v31[1] = v14;
      operator delete(v16);
    }
    if (SHIBYTE(v30) < 0) {
      operator delete(__dst[0]);
    }
    return 0;
  }
  return v3;
}

void sub_21575C15C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x21575C01CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_21575C17C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883E60))
  {
    int v1 = sub_21575BC7C();
    size_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = &qword_267883E48;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (uint64_t *)operator new(v7 + 1);
      qword_267883E50 = v4 + 1;
      unk_267883E58 = v8 | 0x8000000000000000;
      qword_267883E48 = (uint64_t)v9;
      uint64_t v6 = v9;
    }
    else
    {
      qword_267883E50 = 0;
      unk_267883E58 = 0;
      qword_267883E48 = 0;
      byte_267883E5F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883E48, &dword_21572C000);
        __cxa_guard_release(&qword_267883E60);
        return &qword_267883E48;
      }
    }
    if (v3 >= 0) {
      char v10 = v2;
    }
    else {
      char v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267883E48;
}

void sub_21575C2B4(_Unwind_Exception *a1)
{
}

void sub_21575C2CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AEF0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788AEF0))
  {
    return;
  }
  sub_21575B6F8();
  int v0 = SHIBYTE(qword_26788AFB8);
  if (qword_26788AFB8 >= 0) {
    size_t v1 = HIBYTE(qword_26788AFB8);
  }
  else {
    size_t v1 = *((void *)&xmmword_26788AFA8 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788B0D0 = v1 + 6;
    unk_26788B0D8 = v5 | 0x8000000000000000;
    qword_26788B0C8 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    int v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788B0D0 = 0;
  unk_26788B0D8 = 0;
  qword_26788B0C8 = 0x2074736E6F63;
  byte_26788B0DF = v1 + 6;
  int v3 = (char *)&qword_26788B0C8 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788AFA8;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788AFA8;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B0C8, &dword_21572C000);

  __cxa_guard_release(&qword_26788AEF0);
}

void sub_21575C450(_Unwind_Exception *a1)
{
}

long long *sub_21575C468()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883E80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883E80))
  {
    return &xmmword_267883E68;
  }
  size_t v1 = sub_21575C550();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267883E68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267883E78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267883E68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883E68, &dword_21572C000);
  __cxa_guard_release(&qword_267883E80);
  return &xmmword_267883E68;
}

void sub_21575C538(_Unwind_Exception *a1)
{
}

std::string *sub_21575C550()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883EA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883EA0))
  {
    return &stru_267883E88;
  }
  sub_21575C760((uint64_t)__p);
  sub_21575C64C(__p, &stru_267883E88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267883E88, &dword_21572C000);
  __cxa_guard_release(&qword_267883EA0);
  return &stru_267883E88;
}

void sub_21575C60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267883EA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267883EA0);
  _Unwind_Resume(a1);
}

void sub_21575C64C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  *(_OWORD *)int v11 = *(_OWORD *)"std::string";
  uint64_t v12 = 0xB00000000000000;
  sub_21573A150(&__p, (uint64_t)v11, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v4, v5);
  uint64_t v6 = (void **)__p;
  if (__p)
  {
    uint64_t v7 = v10;
    uint64_t v8 = __p;
    if (v10 != __p)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      uint64_t v8 = __p;
    }
    char v10 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
}

void sub_21575C734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21575C760(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883EC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883EC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<std::string>]", qword_267883EA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883EA8, &dword_21572C000);
    __cxa_guard_release(&qword_267883EC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883EE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883EE0))
  {
    size_t v3 = sub_215747D98(qword_267883EA8, "<", 0);
    sub_215747C90(qword_267883EA8, 0, v3, qword_267883EC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883EC8, &dword_21572C000);
    __cxa_guard_release(&qword_267883EE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883F00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883F00))
  {
    sub_215E19DF4((uint64_t)qword_267883EC8, (uint64_t)&xmmword_267883EE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883EE8, &dword_21572C000);
    __cxa_guard_release(&qword_267883F00);
  }
  if (byte_267883EFF < 0)
  {
    long long v2 = xmmword_267883EE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267883EE8;
    *(void *)(a1 + 16) = unk_267883EF8;
  }
}

void sub_21575C928(_Unwind_Exception *a1)
{
}

void sub_21575C940(_Unwind_Exception *a1)
{
}

void sub_21575C958(_Unwind_Exception *a1)
{
}

void sub_21575C970()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788AF18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788AF18))
  {
    int v0 = sub_21574732C();
    size_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788B118 = v3 + 6;
      unk_26788B120 = v7 | 0x8000000000000000;
      qword_26788B110 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      int8x16_t v5 = v8 + 6;
    }
    else
    {
      qword_26788B118 = 0;
      unk_26788B120 = 0;
      qword_26788B110 = 0x2074736E6F63;
      byte_26788B127 = v3 + 6;
      int8x16_t v5 = (char *)&qword_26788B110 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B110, &dword_21572C000);
        __cxa_guard_release(&qword_26788AF18);
        return;
      }
    }
    if (v2 >= 0) {
      char v9 = v1;
    }
    else {
      char v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_21575CAEC(_Unwind_Exception *a1)
{
}

uint64_t sub_21575CB04(uint64_t a1, void *a2, void *a3)
{
  if (!sub_21575CC58((uint64_t)&v16, a2, a3)) {
    return 0;
  }
  uint64_t v5 = a2[4];
  uint64_t v6 = a3[4];
  int v7 = *(unsigned __int8 *)(v6 + 16);
  if (*(unsigned char *)(v5 + 16)) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    if (*(void *)v5 == *(void *)v6 && *(unsigned __int8 *)(v5 + 8) == *(unsigned __int8 *)(v6 + 8)) {
      goto LABEL_12;
    }
    return 0;
  }
  if ((*(unsigned char *)(v5 + 16) != 0) != (v7 != 0)) {
    return 0;
  }
LABEL_12:
  uint64_t v10 = a2[5];
  uint64_t v11 = a3[5];
  if (*(unsigned char *)(v10 + 24)) {
    BOOL v12 = *(unsigned char *)(v11 + 24) == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12) {
    return (*(unsigned char *)(v10 + 24) != 0) == (*(unsigned char *)(v11 + 24) != 0);
  }
  uint64_t v13 = *(unsigned __int8 **)v10;
  uint64_t v14 = *(unsigned __int8 **)(v10 + 8);
  char v15 = *(unsigned __int8 **)v11;
  if (&v14[-*(void *)v10] != (unsigned __int8 *)(*(void *)(v11 + 8) - *(void *)v11)) {
    return 0;
  }
  if (v13 == v14) {
    return 1;
  }
  do
  {
    uint64_t result = sub_215AEF77C(v13, v15);
    if (!result) {
      break;
    }
    v13 += 96;
    v15 += 96;
  }
  while (v13 != v14);
  return result;
}

BOOL sub_21575CC58(uint64_t a1, void *a2, void *a3)
{
  if (!sub_21575CDB0((uint64_t)&v18, a2, a3)) {
    return 0;
  }
  uint64_t v5 = (unsigned __int8 *)a2[2];
  uint64_t v6 = (unsigned __int8 **)a3[2];
  int v7 = *((unsigned __int8 *)v6 + 24);
  if (v5[24]) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if ((v5[24] != 0) != (v7 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v13 = v5[23];
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = (unsigned __int8 *)v5[23];
    }
    else {
      uint64_t v14 = (unsigned __int8 *)*((void *)v5 + 1);
    }
    char v15 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
    int v16 = (char)v15;
    if ((char)v15 < 0) {
      char v15 = v6[1];
    }
    if (v14 != v15) {
      return 0;
    }
    if (v16 >= 0) {
      unint64_t v17 = (unsigned __int8 *)a3[2];
    }
    else {
      unint64_t v17 = *v6;
    }
    if ((v13 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v5, v17, *((void *)v5 + 1))) {
        return 0;
      }
    }
    else if (v5[23])
    {
      while (*v5 == *v17)
      {
        ++v5;
        ++v17;
        if (!--v13) {
          goto LABEL_8;
        }
      }
      return 0;
    }
  }
LABEL_8:
  uint64_t v9 = a2[3];
  uint64_t v10 = a3[3];
  if (*(unsigned char *)(v9 + 16)) {
    BOOL v11 = *(unsigned char *)(v10 + 16) == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (v11) {
    return (*(unsigned char *)(v9 + 16) != 0) == (*(unsigned char *)(v10 + 16) != 0);
  }
  if (*(void *)v9 == *(void *)v10) {
    return *(unsigned __int8 *)(v9 + 8) == *(unsigned __int8 *)(v10 + 8);
  }
  return 0;
}

uint64_t sub_21575CDB0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (unsigned __int8 *)*a2;
  uint64_t v6 = (unsigned __int8 **)*a3;
  int v7 = *(unsigned __int8 *)(*a3 + 24);
  if (*(unsigned char *)(*a2 + 24)) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if ((*(unsigned char *)(*a2 + 24) != 0) != (v7 != 0)) {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = v5[23];
    if ((v10 & 0x80u) == 0) {
      BOOL v11 = (unsigned __int8 *)v5[23];
    }
    else {
      BOOL v11 = (unsigned __int8 *)*((void *)v5 + 1);
    }
    BOOL v12 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
    int v13 = (char)v12;
    if ((char)v12 < 0) {
      BOOL v12 = v6[1];
    }
    if (v11 != v12) {
      return 0;
    }
    if (v13 >= 0) {
      uint64_t v14 = (unsigned __int8 *)*a3;
    }
    else {
      uint64_t v14 = *v6;
    }
    if ((v10 & 0x80) == 0)
    {
      if (v5[23])
      {
        while (*v5 == *v14)
        {
          ++v5;
          ++v14;
          if (!--v10) {
            goto LABEL_24;
          }
        }
        return 0;
      }
      goto LABEL_24;
    }
    if (memcmp(*(const void **)v5, v14, *((void *)v5 + 1))) {
      return 0;
    }
  }
LABEL_24:
  char v15 = (unsigned __int8 *)a2[1];
  int v16 = (unsigned __int8 **)a3[1];
  if (v15[48]) {
    BOOL v17 = *((unsigned char *)v16 + 48) == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17) {
    return (v15[48] != 0) == (*((unsigned char *)v16 + 48) != 0);
  }
  uint64_t v18 = v15[23];
  if ((v18 & 0x80u) == 0) {
    char v19 = (unsigned __int8 *)v15[23];
  }
  else {
    char v19 = (unsigned __int8 *)*((void *)v15 + 1);
  }
  char v20 = (unsigned __int8 *)*((unsigned __int8 *)v16 + 23);
  int v21 = (char)v20;
  if ((char)v20 < 0) {
    char v20 = v16[1];
  }
  if (v19 != v20) {
    return 0;
  }
  if (v21 >= 0) {
    char v22 = (unsigned __int8 *)a3[1];
  }
  else {
    char v22 = *v16;
  }
  if ((v18 & 0x80) != 0) {
    return memcmp(*(const void **)v15, v22, *((void *)v15 + 1)) == 0;
  }
  if (!v15[23]) {
    return 1;
  }
  uint64_t v23 = v18 - 1;
  do
  {
    int v25 = *v15++;
    int v24 = v25;
    int v27 = *v22++;
    int v26 = v27;
    BOOL v29 = v23-- != 0;
    uint64_t result = v24 == v26;
  }
  while (v24 == v26 && v29);
  return result;
}

void VZDataCreateNumbersWithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void *sub_21575D0C8(void (*a1)(long long *__return_ptr, long long *, void *, unsigned char *), uint64_t a2, long long *a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v33 = a2;
  uint64_t v32 = &v33;
  long long v31 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  uint64_t v6 = (void *)*a4;
  sub_215748384(v34, a5);
  a1(&v46, &v31, v6, v34);
  if (v45)
  {
    if (v44)
    {
      if (v43 && v42 < 0) {
        operator delete(__p);
      }
      if (v40 && v39 < 0) {
        operator delete(v38);
      }
      if (v37 && v36 < 0) {
        operator delete(v35);
      }
    }
    sub_215746614((uint64_t)v34);
  }
  int v7 = (std::__shared_weak_count *)*((void *)&v31 + 1);
  if (!*((void *)&v31 + 1)
    || atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v31 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    int v8 = v56;
    if (v56) {
      goto LABEL_16;
    }
LABEL_19:
    long long v22 = v46;
    BOOL v11 = (void **)v23;
    sub_215741BFC(v23, &v47);
    char v30 = 1;
    sub_21575FF08(&v32, (uint64_t)&v22);
    if (v30 && v29)
    {
      if (v28)
      {
        if (v27 < 0) {
          operator delete(v26);
        }
        if (v25 < 0) {
          operator delete(v24);
        }
      }
      if (v23[24] && (v23[23] & 0x80000000) != 0) {
        goto LABEL_39;
      }
    }
    goto LABEL_41;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  int v8 = v56;
  if (!v56) {
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v9 = (long long *)sub_2157480E0((uint64_t)&v46);
  uint64_t v10 = operator new(0x240uLL, MEMORY[0x263F8C180]);
  if (v10)
  {
    uint64_t v6 = v10;
    *uint64_t v10 = &unk_26C6565D0;
    sub_215748978((uint64_t)(v10 + 2), v9);
    *uint64_t v6 = &unk_26C656FF0;
    v6[2] = &unk_26C657040;
    *((_OWORD *)v6 + 35) = 0u;
    goto LABEL_41;
  }
  v13[0] = 0;
  char v21 = 0;
  sub_21575FF08(&v32, (uint64_t)v13);
  if (!v21 || !v20) {
    goto LABEL_40;
  }
  if (v19)
  {
    if (v18 < 0) {
      operator delete(v17);
    }
    if (v16 < 0) {
      operator delete(v15);
    }
  }
  uint64_t v6 = 0;
  if (v14[24] && (v14[23] & 0x80000000) != 0)
  {
    BOOL v11 = (void **)v14;
LABEL_39:
    operator delete(*v11);
LABEL_40:
    uint64_t v6 = 0;
  }
LABEL_41:
  if (v56)
  {
    sub_215748B40((uint64_t)&v46);
  }
  else if (v55)
  {
    if (v54)
    {
      if (v53 < 0) {
        operator delete(v52);
      }
      if (v51 < 0) {
        operator delete(v50);
      }
    }
    if (v49 && v48 < 0) {
      operator delete((void *)v47);
    }
  }
  if (!v8) {
    return 0;
  }
  return v6;
}

void sub_21575D448(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21575D458);
  }
  _Unwind_Resume(a1);
}

void sub_21575D460(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21575D468);
  }
  _Unwind_Resume(a1);
}

void sub_21575D478(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x320]);
    sub_215733368((uint64_t)&STACK[0x300]);
    JUMPOUT(0x21575D4A4);
  }
  _Unwind_Resume(a1);
}

void sub_21575D65C(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21575D664);
  }
  sub_215731D80(a1);
}

void VZDataCreatePoints2WithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void VZDataCreatePoints3WithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void VZDataCreateLines2WithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void VZDataCreateLines3WithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void VZDataCreateDictionaryWithCFDictionary(CFTypeRef cf)
{
  v1[69] = *(void **)MEMORY[0x263EF8340];
  sub_215DD1B28((int)v1, cf, 1);
}

void sub_21575E0DC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21575E0E4);
  }
  _Unwind_Resume(a1);
}

void sub_21575E148(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,std::__shared_weak_count *a52)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (LOBYTE(STACK[0x480]))
  {
    if (LOBYTE(STACK[0x470]))
    {
      if (LOBYTE(STACK[0x448]) && SLOBYTE(STACK[0x447]) < 0) {
        operator delete((void *)STACK[0x430]);
      }
      if (LOBYTE(STACK[0x420]) && SLOBYTE(STACK[0x407]) < 0) {
        operator delete((void *)STACK[0x3F0]);
      }
      if (LOBYTE(STACK[0x3E8]) && SLOBYTE(STACK[0x3E7]) < 0) {
        operator delete((void *)STACK[0x3D0]);
      }
    }
    sub_215746614((uint64_t)&STACK[0x300]);
  }
  if (a52 && !atomic_fetch_add(&a52->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a52->__on_zero_shared)(a52);
    std::__shared_weak_count::__release_weak(a52);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&v70, exception_ptr);
    v70.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v55 = std::logic_error::what(&v70);
    size_t v56 = strlen(v55);
    if (v56 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v57 = (const char *)v56;
      if (v56 >= 0x17)
      {
        uint64_t v66 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v56 | 7) != 0x17) {
          uint64_t v66 = v56 | 7;
        }
        uint64_t v67 = v66 + 1;
        char v58 = (std::runtime_error_vtbl *)operator new(v66 + 1);
        v83.__imp_.__imp_ = v57;
        v84.__vftable = (std::runtime_error_vtbl *)(v67 | 0x8000000000000000);
        v83.__vftable = v58;
      }
      else
      {
        HIBYTE(v84.__vftable) = v56;
        char v58 = (std::runtime_error_vtbl *)&v83;
        if (!v56)
        {
LABEL_46:
          v57[(void)v58] = 0;
          LOBYTE(v84.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&v83, (uint64_t)&v73);
          long long v88 = v73;
          sub_215741BFC(v89, &v74);
          char v98 = 1;
          sub_215760DF4(v87, (uint64_t)&v88);
          if (v98 && v97)
          {
            if (v96)
            {
              if (v95 < 0) {
                operator delete(v94);
              }
              if (v93 < 0) {
                operator delete(v92);
              }
            }
            if (v91 && v90 < 0) {
              operator delete(v89[0]);
            }
          }
          if (v82)
          {
            if (v81)
            {
              if (v80 < 0) {
                operator delete(v79);
              }
              if (v78 < 0) {
                operator delete(v77);
              }
            }
            if (v76 && v75 < 0) {
              operator delete((void *)v74);
            }
          }
          if (LOBYTE(v84.__imp_.__imp_))
          {
            if (SHIBYTE(v84.__vftable) < 0) {
              operator delete(v83.__vftable);
            }
          }
          MEMORY[0x2166C4250](&v70);
          __cxa_end_catch();
          goto LABEL_98;
        }
      }
      memmove(v58, v55, (size_t)v57);
      goto LABEL_46;
    }
LABEL_96:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(v88) = 0;
    char v98 = 0;
    sub_215760DF4(v87, (uint64_t)&v88);
    if (v98 && v97)
    {
      if (v96)
      {
        if (v95 < 0) {
          operator delete(v94);
        }
        if (v93 < 0) {
          operator delete(v92);
        }
      }
      if (v91 && v90 < 0) {
        operator delete(v89[0]);
      }
    }
    __cxa_end_catch();
LABEL_98:
    JUMPOUT(0x21575DF90);
  }
  char v59 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&v83, v59);
  std::runtime_error v84 = v59[1];
  long long v61 = v59[2].__vftable;
  imp = v59[2].__imp_.__imp_;
  v83.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v85 = v61;
  uint64_t v86 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  char v62 = (const char *)&v85[2];
  if (SHIBYTE(v85[2].what) < 0) {
    char v62 = *(const char **)v62;
  }
  size_t v63 = strlen(v62);
  if (v63 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_96;
  }
  uint64_t v64 = (const char *)v63;
  if (v63 >= 0x17)
  {
    uint64_t v68 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v63 | 7) != 0x17) {
      uint64_t v68 = v63 | 7;
    }
    uint64_t v69 = v68 + 1;
    char v65 = (std::logic_error_vtbl *)operator new(v68 + 1);
    v70.__imp_.__imp_ = v64;
    unint64_t v71 = v69 | 0x8000000000000000;
    v70.__vftable = v65;
  }
  else
  {
    HIBYTE(v71) = v63;
    char v65 = (std::logic_error_vtbl *)&v70;
    if (!v63)
    {
LABEL_73:
      v64[(void)v65] = 0;
      char v72 = 1;
      sub_215964DE4((long long *)&v70, (uint64_t)&v73);
      long long v88 = v73;
      sub_215741BFC(v89, &v74);
      char v98 = 1;
      sub_215760DF4(v87, (uint64_t)&v88);
      if (v98 && v97)
      {
        if (v96)
        {
          if (v95 < 0) {
            operator delete(v94);
          }
          if (v93 < 0) {
            operator delete(v92);
          }
        }
        if (v91 && v90 < 0) {
          operator delete(v89[0]);
        }
      }
      if (v82)
      {
        if (v81)
        {
          if (v80 < 0) {
            operator delete(v79);
          }
          if (v78 < 0) {
            operator delete(v77);
          }
        }
        if (v76 && v75 < 0) {
          operator delete((void *)v74);
        }
      }
      if (v72 && SHIBYTE(v71) < 0) {
        operator delete(v70.__vftable);
      }
      MEMORY[0x2166C4910](&v83);
      __cxa_end_catch();
      goto LABEL_98;
    }
  }
  memmove(v65, v62, (size_t)v64);
  goto LABEL_73;
}

void sub_21575E660(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataGetCFDictionary(uint64_t a1, uint64_t a2)
{
  if (!sub_2157456B0((uint64_t)"VZDataGetCFDictionary", a1, a2)) {
    sub_2157E2F3C(a1 + 32, (uint64_t)v4);
  }
  return 0;
}

void sub_21575E80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_21574A71C((uint64_t)va);
  _Unwind_Resume(a1);
}

void VZDataCreateNumberWithCFNumber(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD9634((int)&v1, cf, 1);
}

void sub_21575ECB4(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21575ECBCLL);
  }
  _Unwind_Resume(a1);
}

void sub_21575ED20(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,std::__shared_weak_count *a54)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (LOBYTE(STACK[0x490]))
  {
    if (LOBYTE(STACK[0x480]))
    {
      if (LOBYTE(STACK[0x458]) && SLOBYTE(STACK[0x457]) < 0) {
        operator delete((void *)STACK[0x440]);
      }
      if (LOBYTE(STACK[0x430]) && SLOBYTE(STACK[0x417]) < 0) {
        operator delete((void *)STACK[0x400]);
      }
      if (LOBYTE(STACK[0x3F8]) && SLOBYTE(STACK[0x3F7]) < 0) {
        operator delete((void *)STACK[0x3E0]);
      }
    }
    sub_215746614((uint64_t)&STACK[0x310]);
  }
  if (a54 && !atomic_fetch_add(&a54->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a54->__on_zero_shared)(a54);
    std::__shared_weak_count::__release_weak(a54);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&v72, exception_ptr);
    v72.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v57 = std::logic_error::what(&v72);
    size_t v58 = strlen(v57);
    if (v58 <= 0x7FFFFFFFFFFFFFF7)
    {
      char v59 = (const char *)v58;
      if (v58 >= 0x17)
      {
        uint64_t v68 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v58 | 7) != 0x17) {
          uint64_t v68 = v58 | 7;
        }
        uint64_t v69 = v68 + 1;
        char v60 = (std::runtime_error_vtbl *)operator new(v68 + 1);
        v85.__imp_.__imp_ = v59;
        v86.__vftable = (std::runtime_error_vtbl *)(v69 | 0x8000000000000000);
        v85.__vftable = v60;
      }
      else
      {
        HIBYTE(v86.__vftable) = v58;
        char v60 = (std::runtime_error_vtbl *)&v85;
        if (!v58)
        {
LABEL_46:
          v59[(void)v60] = 0;
          LOBYTE(v86.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&v85, (uint64_t)&v75);
          long long v90 = v75;
          sub_215741BFC(v91, &v76);
          char v100 = 1;
          sub_215761CF4(v89, (uint64_t)&v90);
          if (v100 && v99)
          {
            if (v98)
            {
              if (v97 < 0) {
                operator delete(v96);
              }
              if (v95 < 0) {
                operator delete(v94);
              }
            }
            if (v93 && v92 < 0) {
              operator delete(v91[0]);
            }
          }
          if (v84)
          {
            if (v83)
            {
              if (v82 < 0) {
                operator delete(v81);
              }
              if (v80 < 0) {
                operator delete(v79);
              }
            }
            if (v78 && v77 < 0) {
              operator delete((void *)v76);
            }
          }
          if (LOBYTE(v86.__imp_.__imp_))
          {
            if (SHIBYTE(v86.__vftable) < 0) {
              operator delete(v85.__vftable);
            }
          }
          MEMORY[0x2166C4250](&v72);
          __cxa_end_catch();
          goto LABEL_98;
        }
      }
      memmove(v60, v57, (size_t)v59);
      goto LABEL_46;
    }
LABEL_96:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(v90) = 0;
    char v100 = 0;
    sub_215761CF4(v89, (uint64_t)&v90);
    if (v100 && v99)
    {
      if (v98)
      {
        if (v97 < 0) {
          operator delete(v96);
        }
        if (v95 < 0) {
          operator delete(v94);
        }
      }
      if (v93 && v92 < 0) {
        operator delete(v91[0]);
      }
    }
    __cxa_end_catch();
LABEL_98:
    JUMPOUT(0x21575EB20);
  }
  long long v61 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&v85, v61);
  std::runtime_error v86 = v61[1];
  size_t v63 = v61[2].__vftable;
  imp = v61[2].__imp_.__imp_;
  v85.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v87 = v63;
  long long v88 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v64 = (const char *)&v87[2];
  if (SHIBYTE(v87[2].what) < 0) {
    uint64_t v64 = *(const char **)v64;
  }
  size_t v65 = strlen(v64);
  if (v65 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_96;
  }
  uint64_t v66 = (const char *)v65;
  if (v65 >= 0x17)
  {
    uint64_t v70 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17) {
      uint64_t v70 = v65 | 7;
    }
    uint64_t v71 = v70 + 1;
    uint64_t v67 = (std::logic_error_vtbl *)operator new(v70 + 1);
    v72.__imp_.__imp_ = v66;
    unint64_t v73 = v71 | 0x8000000000000000;
    v72.__vftable = v67;
  }
  else
  {
    HIBYTE(v73) = v65;
    uint64_t v67 = (std::logic_error_vtbl *)&v72;
    if (!v65)
    {
LABEL_73:
      v66[(void)v67] = 0;
      char v74 = 1;
      sub_215964DE4((long long *)&v72, (uint64_t)&v75);
      long long v90 = v75;
      sub_215741BFC(v91, &v76);
      char v100 = 1;
      sub_215761CF4(v89, (uint64_t)&v90);
      if (v100 && v99)
      {
        if (v98)
        {
          if (v97 < 0) {
            operator delete(v96);
          }
          if (v95 < 0) {
            operator delete(v94);
          }
        }
        if (v93 && v92 < 0) {
          operator delete(v91[0]);
        }
      }
      if (v84)
      {
        if (v83)
        {
          if (v82 < 0) {
            operator delete(v81);
          }
          if (v80 < 0) {
            operator delete(v79);
          }
        }
        if (v78 && v77 < 0) {
          operator delete((void *)v76);
        }
      }
      if (v74 && SHIBYTE(v73) < 0) {
        operator delete(v72.__vftable);
      }
      MEMORY[0x2166C4910](&v85);
      __cxa_end_catch();
      goto LABEL_98;
    }
  }
  memmove(v67, v64, (size_t)v66);
  goto LABEL_73;
}

void sub_21575F22C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void VZDataCreateBlobWithCFData(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DD1300((int)&v1, cf, 1);
}

void sub_21575F6DC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21575F6E4);
  }
  _Unwind_Resume(a1);
}

void sub_21575F748(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,std::__shared_weak_count *a54)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (LOBYTE(STACK[0x490]))
  {
    if (LOBYTE(STACK[0x480]))
    {
      if (LOBYTE(STACK[0x458]) && SLOBYTE(STACK[0x457]) < 0) {
        operator delete((void *)STACK[0x440]);
      }
      if (LOBYTE(STACK[0x430]) && SLOBYTE(STACK[0x417]) < 0) {
        operator delete((void *)STACK[0x400]);
      }
      if (LOBYTE(STACK[0x3F8]) && SLOBYTE(STACK[0x3F7]) < 0) {
        operator delete((void *)STACK[0x3E0]);
      }
    }
    sub_215746614((uint64_t)&STACK[0x310]);
  }
  if (a54 && !atomic_fetch_add(&a54->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a54->__on_zero_shared)(a54);
    std::__shared_weak_count::__release_weak(a54);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&v72, exception_ptr);
    v72.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v57 = std::logic_error::what(&v72);
    size_t v58 = strlen(v57);
    if (v58 <= 0x7FFFFFFFFFFFFFF7)
    {
      char v59 = (const char *)v58;
      if (v58 >= 0x17)
      {
        uint64_t v68 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v58 | 7) != 0x17) {
          uint64_t v68 = v58 | 7;
        }
        uint64_t v69 = v68 + 1;
        char v60 = (std::runtime_error_vtbl *)operator new(v68 + 1);
        v85.__imp_.__imp_ = v59;
        v86.__vftable = (std::runtime_error_vtbl *)(v69 | 0x8000000000000000);
        v85.__vftable = v60;
      }
      else
      {
        HIBYTE(v86.__vftable) = v58;
        char v60 = (std::runtime_error_vtbl *)&v85;
        if (!v58)
        {
LABEL_46:
          v59[(void)v60] = 0;
          LOBYTE(v86.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&v85, (uint64_t)&v75);
          long long v90 = v75;
          sub_215741BFC(v91, &v76);
          char v100 = 1;
          sub_215762110(v89, (uint64_t)&v90);
          if (v100 && v99)
          {
            if (v98)
            {
              if (v97 < 0) {
                operator delete(v96);
              }
              if (v95 < 0) {
                operator delete(v94);
              }
            }
            if (v93 && v92 < 0) {
              operator delete(v91[0]);
            }
          }
          if (v84)
          {
            if (v83)
            {
              if (v82 < 0) {
                operator delete(v81);
              }
              if (v80 < 0) {
                operator delete(v79);
              }
            }
            if (v78 && v77 < 0) {
              operator delete((void *)v76);
            }
          }
          if (LOBYTE(v86.__imp_.__imp_))
          {
            if (SHIBYTE(v86.__vftable) < 0) {
              operator delete(v85.__vftable);
            }
          }
          MEMORY[0x2166C4250](&v72);
          __cxa_end_catch();
          goto LABEL_98;
        }
      }
      memmove(v60, v57, (size_t)v59);
      goto LABEL_46;
    }
LABEL_96:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(v90) = 0;
    char v100 = 0;
    sub_215762110(v89, (uint64_t)&v90);
    if (v100 && v99)
    {
      if (v98)
      {
        if (v97 < 0) {
          operator delete(v96);
        }
        if (v95 < 0) {
          operator delete(v94);
        }
      }
      if (v93 && v92 < 0) {
        operator delete(v91[0]);
      }
    }
    __cxa_end_catch();
LABEL_98:
    JUMPOUT(0x21575F548);
  }
  long long v61 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&v85, v61);
  std::runtime_error v86 = v61[1];
  size_t v63 = v61[2].__vftable;
  imp = v61[2].__imp_.__imp_;
  v85.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v87 = v63;
  long long v88 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v64 = (const char *)&v87[2];
  if (SHIBYTE(v87[2].what) < 0) {
    uint64_t v64 = *(const char **)v64;
  }
  size_t v65 = strlen(v64);
  if (v65 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_96;
  }
  uint64_t v66 = (const char *)v65;
  if (v65 >= 0x17)
  {
    uint64_t v70 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17) {
      uint64_t v70 = v65 | 7;
    }
    uint64_t v71 = v70 + 1;
    uint64_t v67 = (std::logic_error_vtbl *)operator new(v70 + 1);
    v72.__imp_.__imp_ = v66;
    unint64_t v73 = v71 | 0x8000000000000000;
    v72.__vftable = v67;
  }
  else
  {
    HIBYTE(v73) = v65;
    uint64_t v67 = (std::logic_error_vtbl *)&v72;
    if (!v65)
    {
LABEL_73:
      v66[(void)v67] = 0;
      char v74 = 1;
      sub_215964DE4((long long *)&v72, (uint64_t)&v75);
      long long v90 = v75;
      sub_215741BFC(v91, &v76);
      char v100 = 1;
      sub_215762110(v89, (uint64_t)&v90);
      if (v100 && v99)
      {
        if (v98)
        {
          if (v97 < 0) {
            operator delete(v96);
          }
          if (v95 < 0) {
            operator delete(v94);
          }
        }
        if (v93 && v92 < 0) {
          operator delete(v91[0]);
        }
      }
      if (v84)
      {
        if (v83)
        {
          if (v82 < 0) {
            operator delete(v81);
          }
          if (v80 < 0) {
            operator delete(v79);
          }
        }
        if (v78 && v77 < 0) {
          operator delete((void *)v76);
        }
      }
      if (v74 && SHIBYTE(v73) < 0) {
        operator delete(v72.__vftable);
      }
      MEMORY[0x2166C4910](&v85);
      __cxa_end_catch();
      goto LABEL_98;
    }
  }
  memmove(v67, v64, (size_t)v66);
  goto LABEL_73;
}

void sub_21575FC54(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21575FC70(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(const void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  sub_21575FD94(&v5, v3);
}

void sub_21575FD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21575FD94(void *a1, CFTypeRef cf)
{
  if (cf) {
    CFRetain(cf);
  }
  *a1 = cf;
  operator new();
}

void sub_21575FE08(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    CFRelease(v1);
  }
  __cxa_rethrow();
}

void sub_21575FE20(_Unwind_Exception *a1)
{
}

void sub_21575FE38(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21575FE70(uint64_t a1)
{
  long long v1 = *(const void **)(a1 + 24);
  if (v1) {
    CFRelease(v1);
  }
}

uint64_t sub_21575FE94(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIPK14__CFDictionaryEC1ES5_EUlS5_E_") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIPK14__CFDictionaryEC1ES5_EUlS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIPK14__CFDictionaryEC1ES5_EUlS5_E_")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIPK14__CFDictionaryEC1ES5_EUlS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_21575FF08(uint64_t **a1, uint64_t a2)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  sub_215760208();
  if (byte_26788B1A7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B190, *((unint64_t *)&xmmword_26788B190 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B190;
    uint64_t v26 = unk_26788B1A0;
  }
  uint64_t v5 = sub_215760BD8();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v27, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v28 = *((void *)v5 + 2);
    long long v27 = v6;
  }
  int v7 = sub_215747548();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v29, *(void **)v7, *((void *)v7 + 1));
  }
  else
  {
    long long v8 = *v7;
    uint64_t v30 = *((void *)v7 + 2);
    long long v29 = v8;
  }
  sub_21573A150(&v23, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v12, a2);
  sub_21574086C(v4, (uint64_t *)&v23, (uint64_t)v12, **a1);
  if (!v22 || !v21) {
    goto LABEL_18;
  }
  if (!v20) {
    goto LABEL_15;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v16);
    if (!v15) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v18);
  if (v17 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v15) {
    goto LABEL_18;
  }
LABEL_16:
  if (v14 < 0) {
    operator delete(__p);
  }
LABEL_18:
  uint64_t v9 = (void **)v23;
  if (v23)
  {
    uint64_t v10 = v24;
    BOOL v11 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      BOOL v11 = v23;
    }
    int v24 = v9;
    operator delete(v11);
  }
  if (SHIBYTE(v30) < 0)
  {
    operator delete((void *)v29);
    if ((SHIBYTE(v28) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v26) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v27);
  if (SHIBYTE(v26) < 0) {
    goto LABEL_32;
  }
}

void sub_215760164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 57) < 0)
  {
    operator delete(*(void **)(v25 - 80));
    if ((*(char *)(v25 - 81) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v25 - 105) & 0x80000000) == 0) {
LABEL_8:
      }
        _Unwind_Resume(a1);
LABEL_7:
      operator delete(*(void **)(v25 - 128));
      _Unwind_Resume(a1);
    }
  }
  else if ((*(char *)(v25 - 81) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v25 - 104));
  if ((*(char *)(v25 - 105) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_2157601E0()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x2157601D8);
    }
  }
}

void sub_215760208()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B128, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B128))
  {
    sub_2157602DC();
    if (byte_26788B1BF < 0)
    {
      sub_215738B0C(&xmmword_26788B190, (void *)qword_26788B1A8, unk_26788B1B0);
    }
    else
    {
      xmmword_26788B190 = *(_OWORD *)&qword_26788B1A8;
      unk_26788B1A0 = unk_26788B1B8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B190, &dword_21572C000);
    __cxa_guard_release(&qword_26788B128);
  }
}

void sub_2157602C4(_Unwind_Exception *a1)
{
}

void sub_2157602DC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B130, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B130))
  {
    sub_21576063C(__p);
    sub_2157603BC(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B1A8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B130);
  }
}

void sub_21576037C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788B130);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788B130);
  _Unwind_Resume(a1);
}

void sub_2157603BC(void *a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B138, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B138))
  {
    goto LABEL_2;
  }
  sub_215760844();
  int v7 = byte_26788B1EF;
  if (byte_26788B1EF >= 0) {
    size_t v8 = byte_26788B1EF;
  }
  else {
    size_t v8 = qword_26788B1E0;
  }
  unint64_t v9 = v8 + 1;
  if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v9 >= 0x17)
  {
    uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v11 = v9 | 7;
    }
    uint64_t v12 = v11 + 1;
    uint64_t v10 = (long long *)operator new(v11 + 1);
    *((void *)&xmmword_26788B1C0 + 1) = v8 + 1;
    unk_26788B1D0 = v12 | 0x8000000000000000;
    *(void *)&xmmword_26788B1C0 = v10;
    goto LABEL_27;
  }
  uint64_t v10 = &xmmword_26788B1C0;
  unk_26788B1D0 = 0;
  xmmword_26788B1C0 = 0uLL;
  byte_26788B1D7 = v8 + 1;
  if (v8)
  {
LABEL_27:
    if (v7 >= 0) {
      int v13 = &qword_26788B1D8;
    }
    else {
      int v13 = (uint64_t *)qword_26788B1D8;
    }
    memmove(v10, v13, v8);
  }
  *(_WORD *)((char *)v10 + v8) = 42;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B1C0, &dword_21572C000);
  __cxa_guard_release(&qword_26788B138);
LABEL_2:
  if (byte_26788B1D7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788B1C0, *((unint64_t *)&xmmword_26788B1C0 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B1C0;
    uint64_t v17 = unk_26788B1D0;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788B1A8, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    uint64_t v5 = v15;
    long long v6 = __p;
    if (v15 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      long long v6 = __p;
    }
    char v15 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157605F4(_Unwind_Exception *a1)
{
}

void sub_215760610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21576063C(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B160))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cf::DataRefT<const __CFData *>]", qword_26788B238);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B238, &dword_21572C000);
    __cxa_guard_release(&qword_26788B160);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B168, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B168))
  {
    size_t v3 = sub_215747D98(qword_26788B238, "<", 0);
    sub_215747C90(qword_26788B238, 0, v3, qword_26788B250);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B250, &dword_21572C000);
    __cxa_guard_release(&qword_26788B168);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B170, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B170))
  {
    sub_215E19DF4((uint64_t)qword_26788B250, (uint64_t)&xmmword_26788B268);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B268, &dword_21572C000);
    __cxa_guard_release(&qword_26788B170);
  }
  if (byte_26788B27F < 0)
  {
    long long v2 = xmmword_26788B268;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B268;
    __dst[2] = unk_26788B278;
  }
}

void sub_2157607FC(_Unwind_Exception *a1)
{
}

void sub_215760814(_Unwind_Exception *a1)
{
}

void sub_21576082C(_Unwind_Exception *a1)
{
}

void sub_215760844()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B140, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B140))
  {
    return;
  }
  sub_2157609E0();
  int v0 = byte_26788B207;
  if (byte_26788B207 >= 0) {
    size_t v1 = byte_26788B207;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788B1F0 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    long long v6 = (char *)operator new(v4 + 1);
    qword_26788B1E0 = v1 + 6;
    unk_26788B1E8 = v5 | 0x8000000000000000;
    qword_26788B1D8 = (uint64_t)v6;
    *(_DWORD *)long long v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788B1E0 = 0;
  unk_26788B1E8 = 0;
  qword_26788B1D8 = 0x2074736E6F63;
  byte_26788B1EF = v1 + 6;
  size_t v3 = (char *)&qword_26788B1D8 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788B1F0;
    }
    else {
      int v7 = (long long *)xmmword_26788B1F0;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B1D8, &dword_21572C000);

  __cxa_guard_release(&qword_26788B140);
}

void sub_2157609C8(_Unwind_Exception *a1)
{
}

void sub_2157609E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B148, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B148))
  {
    sub_215760AB4();
    if (byte_26788B237 < 0)
    {
      sub_215738B0C(&xmmword_26788B1F0, (void *)xmmword_26788B220, *((unint64_t *)&xmmword_26788B220 + 1));
    }
    else
    {
      xmmword_26788B1F0 = xmmword_26788B220;
      unk_26788B200 = unk_26788B230;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B1F0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B148);
  }
}

void sub_215760A9C(_Unwind_Exception *a1)
{
}

void sub_215760AB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B150, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B150))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = __CFData]", qword_26788B208);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B208, &dword_21572C000);
    __cxa_guard_release(&qword_26788B150);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B158, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B158))
  {
    sub_215E19DF4((uint64_t)qword_26788B208, (uint64_t)&xmmword_26788B220);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B220, &dword_21572C000);
    __cxa_guard_release(&qword_26788B158);
  }
}

void sub_215760BA8(_Unwind_Exception *a1)
{
}

void sub_215760BC0(_Unwind_Exception *a1)
{
}

long long *sub_215760BD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883F80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883F80))
  {
    return &xmmword_267883F68;
  }
  size_t v1 = (char *)sub_215760CC0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267883F68, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267883F78 = *((void *)v1 + 2);
    xmmword_267883F68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883F68, &dword_21572C000);
  __cxa_guard_release(&qword_267883F80);
  return &xmmword_267883F68;
}

void sub_215760CA8(_Unwind_Exception *a1)
{
}

void *sub_215760CC0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883FA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267883FA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::ArithmeticType]", qword_267883F88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267883F88, &dword_21572C000);
    __cxa_guard_release(&qword_267883FA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883FC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883FC0))
  {
    return &unk_267883FA8;
  }
  sub_215E19DF4((uint64_t)qword_267883F88, (uint64_t)&unk_267883FA8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267883FA8, &dword_21572C000);
  __cxa_guard_release(&qword_267883FC0);
  return &unk_267883FA8;
}

void sub_215760DC4(_Unwind_Exception *a1)
{
}

void sub_215760DDC(_Unwind_Exception *a1)
{
}

void sub_215760DF4(uint64_t **a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  uint64_t v5 = sub_215761048();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v26 = *((void *)v5 + 2);
    long long __dst = v6;
  }
  int v7 = sub_215747548();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v27, *(void **)v7, *((void *)v7 + 1));
  }
  else
  {
    long long v8 = *v7;
    uint64_t v28 = *((void *)v7 + 2);
    long long v27 = v8;
  }
  sub_21573A150(&v23, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v12, a2);
  sub_21574086C(v4, (uint64_t *)&v23, (uint64_t)v12, **a1);
  if (!v22 || !v21) {
    goto LABEL_15;
  }
  if (!v20) {
    goto LABEL_12;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v16);
    if (!v15) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v18);
  if (v17 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v15) {
    goto LABEL_15;
  }
LABEL_13:
  if (v14 < 0) {
    operator delete(__p);
  }
LABEL_15:
  unint64_t v9 = (void **)v23;
  if (v23)
  {
    uint64_t v10 = v24;
    uint64_t v11 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      uint64_t v11 = v23;
    }
    int v24 = v9;
    operator delete(v11);
  }
  if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v27);
  if (SHIBYTE(v26) < 0) {
    goto LABEL_27;
  }
}

void sub_215760FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  if (*(char *)(v25 - 73) < 0)
  {
    operator delete(*(void **)(v25 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

long long *sub_215761048()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883FE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267883FE0))
  {
    return &xmmword_267883FC8;
  }
  size_t v1 = sub_215761130();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267883FC8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267883FD8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267883FC8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267883FC8, &dword_21572C000);
  __cxa_guard_release(&qword_267883FE0);
  return &xmmword_267883FC8;
}

void sub_215761118(_Unwind_Exception *a1)
{
}

std::string *sub_215761130()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884000, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884000))
  {
    return &stru_267883FE8;
  }
  sub_2157613D8((uint64_t)__p);
  sub_21576122C(__p, &stru_267883FE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267883FE8, &dword_21572C000);
  __cxa_guard_release(&qword_267884000);
  return &stru_267883FE8;
}

void sub_2157611EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884000);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884000);
  _Unwind_Resume(a1);
}

void sub_21576122C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157615E8();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v16 = v4[2];
    *(_OWORD *)long long __dst = v5;
  }
  long long v6 = sub_215761AD8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_215761394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

void sub_2157613D8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884120))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cf::DictionaryRefT<const __CFDictionary *, cv3d::kit::cf::FlavorDefault>]", qword_267884108);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884108, &dword_21572C000);
    __cxa_guard_release(&qword_267884120);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884140))
  {
    size_t v3 = sub_215747D98(qword_267884108, "<", 0);
    sub_215747C90(qword_267884108, 0, v3, qword_267884128);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884128, &dword_21572C000);
    __cxa_guard_release(&qword_267884140);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884160))
  {
    sub_215E19DF4((uint64_t)qword_267884128, (uint64_t)&xmmword_267884148);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884148, &dword_21572C000);
    __cxa_guard_release(&qword_267884160);
  }
  if (byte_26788415F < 0)
  {
    long long v2 = xmmword_267884148;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884148;
    *(void *)(a1 + 16) = unk_267884158;
  }
}

void sub_2157615A0(_Unwind_Exception *a1)
{
}

void sub_2157615B8(_Unwind_Exception *a1)
{
}

void sub_2157615D0(_Unwind_Exception *a1)
{
}

uint64_t *sub_2157615E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884020, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884020))
  {
    size_t v1 = sub_215761738();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267884008;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      int8x16_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884010 = v4 + 1;
      unk_267884018 = v8 | 0x8000000000000000;
      qword_267884008 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267884010 = 0;
      unk_267884018 = 0;
      qword_267884008 = 0;
      byte_26788401F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884008, &dword_21572C000);
        __cxa_guard_release(&qword_267884020);
        return &qword_267884008;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884008;
}

void sub_215761720(_Unwind_Exception *a1)
{
}

uint64_t *sub_215761738()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884040, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884040))
  {
    size_t v1 = sub_2157618BC();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      int8x16_t v9 = (char *)operator new(v7 + 1);
      qword_267884030 = v4 + 6;
      unk_267884038 = v8 | 0x8000000000000000;
      qword_267884028 = (uint64_t)v9;
      *(_DWORD *)int8x16_t v9 = 1936617315;
      long long v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884030 = 0;
      unk_267884038 = 0;
      qword_267884028 = 0x2074736E6F63;
      byte_26788403F = v4 + 6;
      long long v6 = (char *)&qword_267884028 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884028, &dword_21572C000);
        __cxa_guard_release(&qword_267884040);
        return &qword_267884028;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884028;
}

void sub_2157618A4(_Unwind_Exception *a1)
{
}

long long *sub_2157618BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884060))
  {
    return &xmmword_267884048;
  }
  size_t v1 = (char *)sub_2157619A4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884048, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884058 = *((void *)v1 + 2);
    xmmword_267884048 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884048, &dword_21572C000);
  __cxa_guard_release(&qword_267884060);
  return &xmmword_267884048;
}

void sub_21576198C(_Unwind_Exception *a1)
{
}

void *sub_2157619A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884080))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = __CFDictionary]", qword_267884068);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884068, &dword_21572C000);
    __cxa_guard_release(&qword_267884080);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678840A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678840A0))
  {
    return &unk_267884088;
  }
  sub_215E19DF4((uint64_t)qword_267884068, (uint64_t)&unk_267884088);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884088, &dword_21572C000);
  __cxa_guard_release(&qword_2678840A0);
  return &unk_267884088;
}

void sub_215761AA8(_Unwind_Exception *a1)
{
}

void sub_215761AC0(_Unwind_Exception *a1)
{
}

long long *sub_215761AD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678840C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678840C0))
  {
    return &xmmword_2678840A8;
  }
  size_t v1 = (char *)sub_215761BC0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678840A8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678840B8 = *((void *)v1 + 2);
    xmmword_2678840A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678840A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678840C0);
  return &xmmword_2678840A8;
}

void sub_215761BA8(_Unwind_Exception *a1)
{
}

void *sub_215761BC0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678840E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678840E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cf::FlavorDefault]", qword_2678840C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678840C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678840E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884100, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884100))
  {
    return &unk_2678840E8;
  }
  sub_215E19DF4((uint64_t)qword_2678840C8, (uint64_t)&unk_2678840E8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678840E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884100);
  return &unk_2678840E8;
}

void sub_215761CC4(_Unwind_Exception *a1)
{
}

void sub_215761CDC(_Unwind_Exception *a1)
{
}

void sub_215761CF4(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B178, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B178))
  {
    sub_215761FEC();
    if (byte_26788B2C7 < 0)
    {
      sub_215738B0C(&xmmword_26788B280, (void *)xmmword_26788B2B0, *((unint64_t *)&xmmword_26788B2B0 + 1));
    }
    else
    {
      xmmword_26788B280 = xmmword_26788B2B0;
      unk_26788B290 = unk_26788B2C0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B280, &dword_21572C000);
    __cxa_guard_release(&qword_26788B178);
  }
  if (byte_26788B297 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B280, *((unint64_t *)&xmmword_26788B280 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B280;
    uint64_t v24 = unk_26788B290;
  }
  unint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v25, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v26 = *((void *)v5 + 2);
    long long v25 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_13;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v13) {
          goto LABEL_16;
        }
LABEL_14:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_16;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    int8x16_t v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      int8x16_t v9 = v21;
    }
    char v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_28;
  }
}

void sub_215761F74(_Unwind_Exception *a1)
{
}

void sub_215761F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 65) < 0) {
    operator delete(*(void **)(v25 - 88));
  }
  if (*(char *)(v25 - 89) < 0)
  {
    operator delete(*(void **)(v25 - 112));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215761FEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B180, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B180))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cf::NumberRef]", qword_26788B298);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B298, &dword_21572C000);
    __cxa_guard_release(&qword_26788B180);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B188, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B188))
  {
    sub_215E19DF4((uint64_t)qword_26788B298, (uint64_t)&xmmword_26788B2B0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B2B0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B188);
  }
}

void sub_2157620E0(_Unwind_Exception *a1)
{
}

void sub_2157620F8(_Unwind_Exception *a1)
{
}

void sub_215762110(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_21574875C();
  sub_215760208();
  if (byte_26788B1A7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B190, *((unint64_t *)&xmmword_26788B190 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B190;
    uint64_t v24 = unk_26788B1A0;
  }
  unint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v25, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v26 = *((void *)v5 + 2);
    long long v25 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (!v20 || !v19) {
    goto LABEL_15;
  }
  if (!v18) {
    goto LABEL_12;
  }
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v14);
    if (!v13) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v13) {
    goto LABEL_15;
  }
LABEL_13:
  if (v12 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    int8x16_t v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      int8x16_t v9 = v21;
    }
    char v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_27;
  }
}

void sub_215762314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  if (*(char *)(v25 - 73) < 0)
  {
    operator delete(*(void **)(v25 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void VZImageCreateWithCVPixelBuffer(CFTypeRef cf)
{
  sub_215B623B0((int)&v1, cf, 1);
}

void sub_21576266C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12, unint64_t a13, char a14, long long a15, long long a16, int a17, __int16 a18, char a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,int a36,__int16 a37,std::runtime_error __dst,long long a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if ((_BYTE)a68 && (_BYTE)a66)
  {
    if (a64)
    {
      if (a63 < 0) {
        operator delete(__p);
      }
      if (a56 < 0) {
        operator delete(a51);
      }
    }
    if (a50 && a49 < 0) {
      operator delete(a44);
    }
  }
  if (*(unsigned char *)(v68 - 80))
  {
    (**(void (***)(uint64_t))(v68 - 240))(v68 - 240);
  }
  else if (*(unsigned char *)(v68 - 128))
  {
    if (*(unsigned char *)(v68 - 136))
    {
      if (*(char *)(v68 - 137) < 0) {
        operator delete(*(void **)(v68 - 160));
      }
      if (*(char *)(v68 - 169) < 0) {
        operator delete(*(void **)(v68 - 192));
      }
    }
    if (*(unsigned char *)(v68 - 200) && *(char *)(v68 - 201) < 0) {
      operator delete(*(void **)(v68 - 224));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a12, exception_ptr);
    a12.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    std::logic_error v72 = std::logic_error::what(&a12);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      char v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a39 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a39) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_51:
          v74[(void)p_dst] = 0;
          BYTE8(a39) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a15);
          *(_OWORD *)(v68 - 240) = a15;
          sub_215741BFC((unsigned char *)(v68 - 224), &a16);
          *(unsigned char *)(v68 - 120) = 1;
          sub_2157642D4((uint64_t **)(v68 - 64), v68 - 240);
          if (*(unsigned char *)(v68 - 120) && *(unsigned char *)(v68 - 128))
          {
            if (*(unsigned char *)(v68 - 136))
            {
              if (*(char *)(v68 - 137) < 0) {
                operator delete(*(void **)(v68 - 160));
              }
              if (*(char *)(v68 - 169) < 0) {
                operator delete(*(void **)(v68 - 192));
              }
            }
            if (*(unsigned char *)(v68 - 200) && *(char *)(v68 - 201) < 0) {
              operator delete(*(void **)(v68 - 224));
            }
          }
          if ((_BYTE)a37)
          {
            if (a35)
            {
              if (a34 < 0) {
                operator delete(a29);
              }
              if (a27 < 0) {
                operator delete(a22);
              }
            }
            if (a21 && a20 < 0) {
              operator delete((void *)a16);
            }
          }
          if (BYTE8(a39))
          {
            if (SBYTE7(a39) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a12);
          __cxa_end_catch();
          goto LABEL_102;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_51;
    }
LABEL_101:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v68 - 240) = 0;
    *(unsigned char *)(v68 - 120) = 0;
    sub_2157642D4((uint64_t **)(v68 - 64), v68 - 240);
    if (*(unsigned char *)(v68 - 120) && *(unsigned char *)(v68 - 128))
    {
      if (*(unsigned char *)(v68 - 136))
      {
        if (*(char *)(v68 - 137) < 0) {
          operator delete(*(void **)(v68 - 160));
        }
        if (*(char *)(v68 - 169) < 0) {
          operator delete(*(void **)(v68 - 192));
        }
      }
      if (*(unsigned char *)(v68 - 200) && *(char *)(v68 - 201) < 0) {
        operator delete(*(void **)(v68 - 224));
      }
    }
    __cxa_end_catch();
LABEL_102:
    JUMPOUT(0x215762598);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a39 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a40 = v78;
  a41 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v79 = (const char *)(a40 + 48);
  if (*(char *)(a40 + 71) < 0) {
    size_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_101;
  }
  char v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    char v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a12.__imp_.__imp_ = v81;
    a13 = v86 | 0x8000000000000000;
    a12.__vftable = v82;
  }
  else
  {
    HIBYTE(a13) = v80;
    char v82 = (std::logic_error_vtbl *)&a12;
    if (!v80)
    {
LABEL_78:
      v81[(void)v82] = 0;
      a14 = 1;
      sub_215964DE4((long long *)&a12, (uint64_t)&a15);
      *(_OWORD *)(v68 - 240) = a15;
      sub_215741BFC((unsigned char *)(v68 - 224), &a16);
      *(unsigned char *)(v68 - 120) = 1;
      sub_2157642D4((uint64_t **)(v68 - 64), v68 - 240);
      if (*(unsigned char *)(v68 - 120) && *(unsigned char *)(v68 - 128))
      {
        if (*(unsigned char *)(v68 - 136))
        {
          if (*(char *)(v68 - 137) < 0) {
            operator delete(*(void **)(v68 - 160));
          }
          if (*(char *)(v68 - 169) < 0) {
            operator delete(*(void **)(v68 - 192));
          }
        }
        if (*(unsigned char *)(v68 - 200) && *(char *)(v68 - 201) < 0) {
          operator delete(*(void **)(v68 - 224));
        }
      }
      if ((_BYTE)a37)
      {
        if (a35)
        {
          if (a34 < 0) {
            operator delete(a29);
          }
          if (a27 < 0) {
            operator delete(a22);
          }
        }
        if (a21 && a20 < 0) {
          operator delete((void *)a16);
        }
      }
      if (a14 && SHIBYTE(a13) < 0) {
        operator delete(a12.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_102;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_78;
}

uint64_t VZImageGetContainedCVPixelBuffer(uint64_t a1, uint64_t a2)
{
  if (sub_215762DB4((uint64_t)"VZImageGetContainedCVPixelBuffer", a1, a2))
  {
    *((void *)&v7 + 1) = 0;
    uint64_t v8 = 0;
    *(void *)&long long v7 = off_26C67D770;
    char v17 = 1;
  }
  else
  {
    sub_2157FA394((uint64_t)&v7, a1 + 8);
    if (!v17)
    {
      sub_21573E208(&v7, a2);
      uint64_t v4 = 0;
      if (v17) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  sub_215762FEC((uint64_t)&v7);
  if (*((void *)&v7 + 1))
  {
    uint64_t v4 = **((void **)&v7 + 1);
    unint64_t v5 = *(std::__shared_weak_count **)(*((void *)&v7 + 1) + 8);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        if (!v17) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v7)(&v7);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v17) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v16) {
    return v4;
  }
  if (v15)
  {
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
  }
  if (!v10 || (v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_215762DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_215762DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    long long v6 = sub_215764FB4();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)char v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215762FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215762FEC(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215763074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215763088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157630A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2157630B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t VZImageGetCVPixelBufferView(uint64_t a1, uint64_t a2)
{
  if (sub_215762DB4((uint64_t)"VZImageGetCVPixelBufferView", a1, a2))
  {
    *((void *)&v7 + 1) = 0;
    uint64_t v8 = 0;
    *(void *)&long long v7 = off_26C67D770;
    char v17 = 1;
  }
  else
  {
    sub_2157FA684(a1 + 8, (uint64_t)&v7);
    if (!v17)
    {
      sub_21573E208(&v7, a2);
      uint64_t v4 = 0;
      if (v17) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  sub_215762FEC((uint64_t)&v7);
  if (*((void *)&v7 + 1))
  {
    uint64_t v4 = **((void **)&v7 + 1);
    unint64_t v5 = *(std::__shared_weak_count **)(*((void *)&v7 + 1) + 8);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        if (!v17) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v7)(&v7);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v17) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v16) {
    return v4;
  }
  if (v15)
  {
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
  }
  if (!v10 || (v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_21576331C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZDataCreateImageWithCVPixelBuffer(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215B623B0((int)&v1, cf, 1);
}

void sub_215763814(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21576381CLL);
  }
  _Unwind_Resume(a1);
}

void sub_215763880(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::__shared_weak_count *a56)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (LOBYTE(STACK[0x4A0]))
  {
    if (LOBYTE(STACK[0x490]))
    {
      if (LOBYTE(STACK[0x468]) && SLOBYTE(STACK[0x467]) < 0) {
        operator delete((void *)STACK[0x450]);
      }
      if (LOBYTE(STACK[0x440]) && SLOBYTE(STACK[0x427]) < 0) {
        operator delete((void *)STACK[0x410]);
      }
      if (LOBYTE(STACK[0x408]) && SLOBYTE(STACK[0x407]) < 0) {
        operator delete((void *)STACK[0x3F0]);
      }
    }
    sub_215746614((uint64_t)&STACK[0x320]);
  }
  if (a56 && !atomic_fetch_add(&a56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a56->__on_zero_shared)(a56);
    std::__shared_weak_count::__release_weak(a56);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&v74, exception_ptr);
    v74.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v59 = std::logic_error::what(&v74);
    size_t v60 = strlen(v59);
    if (v60 <= 0x7FFFFFFFFFFFFFF7)
    {
      long long v61 = (const char *)v60;
      if (v60 >= 0x17)
      {
        uint64_t v70 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v60 | 7) != 0x17) {
          uint64_t v70 = v60 | 7;
        }
        uint64_t v71 = v70 + 1;
        char v62 = (std::runtime_error_vtbl *)operator new(v70 + 1);
        v87.__imp_.__imp_ = v61;
        v88.__vftable = (std::runtime_error_vtbl *)(v71 | 0x8000000000000000);
        v87.__vftable = v62;
      }
      else
      {
        HIBYTE(v88.__vftable) = v60;
        char v62 = (std::runtime_error_vtbl *)&v87;
        if (!v60)
        {
LABEL_46:
          v61[(void)v62] = 0;
          LOBYTE(v88.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&v87, (uint64_t)&v77);
          long long v92 = v77;
          sub_215741BFC(v93, &v78);
          char v102 = 1;
          sub_215765288(v91, (uint64_t)&v92);
          if (v102 && v101)
          {
            if (v100)
            {
              if (v99 < 0) {
                operator delete(v98);
              }
              if (v97 < 0) {
                operator delete(v96);
              }
            }
            if (v95 && v94 < 0) {
              operator delete(v93[0]);
            }
          }
          if (v86)
          {
            if (v85)
            {
              if (v84 < 0) {
                operator delete(v83);
              }
              if (v82 < 0) {
                operator delete(v81);
              }
            }
            if (v80 && v79 < 0) {
              operator delete((void *)v78);
            }
          }
          if (LOBYTE(v88.__imp_.__imp_))
          {
            if (SHIBYTE(v88.__vftable) < 0) {
              operator delete(v87.__vftable);
            }
          }
          MEMORY[0x2166C4250](&v74);
          __cxa_end_catch();
          goto LABEL_98;
        }
      }
      memmove(v62, v59, (size_t)v61);
      goto LABEL_46;
    }
LABEL_96:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(v92) = 0;
    char v102 = 0;
    sub_215765288(v91, (uint64_t)&v92);
    if (v102 && v101)
    {
      if (v100)
      {
        if (v99 < 0) {
          operator delete(v98);
        }
        if (v97 < 0) {
          operator delete(v96);
        }
      }
      if (v95 && v94 < 0) {
        operator delete(v93[0]);
      }
    }
    __cxa_end_catch();
LABEL_98:
    JUMPOUT(0x215763660);
  }
  size_t v63 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&v87, v63);
  std::runtime_error v88 = v63[1];
  size_t v65 = v63[2].__vftable;
  imp = v63[2].__imp_.__imp_;
  v87.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v89 = v65;
  long long v90 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v66 = (const char *)&v89[2];
  if (SHIBYTE(v89[2].what) < 0) {
    uint64_t v66 = *(const char **)v66;
  }
  size_t v67 = strlen(v66);
  if (v67 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_96;
  }
  uint64_t v68 = (const char *)v67;
  if (v67 >= 0x17)
  {
    uint64_t v72 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17) {
      uint64_t v72 = v67 | 7;
    }
    uint64_t v73 = v72 + 1;
    uint64_t v69 = (std::logic_error_vtbl *)operator new(v72 + 1);
    v74.__imp_.__imp_ = v68;
    unint64_t v75 = v73 | 0x8000000000000000;
    v74.__vftable = v69;
  }
  else
  {
    HIBYTE(v75) = v67;
    uint64_t v69 = (std::logic_error_vtbl *)&v74;
    if (!v67)
    {
LABEL_73:
      v68[(void)v69] = 0;
      char v76 = 1;
      sub_215964DE4((long long *)&v74, (uint64_t)&v77);
      long long v92 = v77;
      sub_215741BFC(v93, &v78);
      char v102 = 1;
      sub_215765288(v91, (uint64_t)&v92);
      if (v102 && v101)
      {
        if (v100)
        {
          if (v99 < 0) {
            operator delete(v98);
          }
          if (v97 < 0) {
            operator delete(v96);
          }
        }
        if (v95 && v94 < 0) {
          operator delete(v93[0]);
        }
      }
      if (v86)
      {
        if (v85)
        {
          if (v84 < 0) {
            operator delete(v83);
          }
          if (v82 < 0) {
            operator delete(v81);
          }
        }
        if (v80 && v79 < 0) {
          operator delete((void *)v78);
        }
      }
      if (v76 && SHIBYTE(v75) < 0) {
        operator delete(v74.__vftable);
      }
      MEMORY[0x2166C4910](&v87);
      __cxa_end_catch();
      goto LABEL_98;
    }
  }
  memmove(v69, v66, (size_t)v68);
  goto LABEL_73;
}

void sub_215763D90(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataGetContainedCVPixelBuffer(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetContainedCVPixelBuffer", a1, a2))
  {
    *((void *)&v7 + 1) = 0;
    uint64_t v8 = 0;
    *(void *)&long long v7 = off_26C67D770;
    char v17 = 1;
  }
  else
  {
    sub_2157FB76C((long long *)(a1 + 32), (uint64_t)&v7);
    if (!v17)
    {
      sub_21573E208(&v7, a2);
      uint64_t v4 = 0;
      if (v17) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  sub_215762FEC((uint64_t)&v7);
  if (*((void *)&v7 + 1))
  {
    uint64_t v4 = **((void **)&v7 + 1);
    unint64_t v5 = *(std::__shared_weak_count **)(*((void *)&v7 + 1) + 8);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        if (!v17) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v7)(&v7);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v17) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v16) {
    return v4;
  }
  if (v15)
  {
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
  }
  if (!v10 || (v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_215763F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZDataGetCVPixelBufferView(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetCVPixelBufferView", a1, a2))
  {
    *((void *)&v7 + 1) = 0;
    uint64_t v8 = 0;
    *(void *)&long long v7 = &off_26C67D770;
    char v17 = 1;
  }
  else
  {
    sub_2157FBD5C(a1 + 32, (uint64_t)&v7);
    if (!v17)
    {
      sub_21573E208(&v7, a2);
      uint64_t v4 = 0;
      if (v17) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  sub_215762FEC((uint64_t)&v7);
  if (*((void *)&v7 + 1))
  {
    uint64_t v4 = **((void **)&v7 + 1);
    unint64_t v5 = *(std::__shared_weak_count **)(*((void *)&v7 + 1) + 8);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        if (!v17) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v7)(&v7);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v17) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v16) {
    return v4;
  }
  if (v15)
  {
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
  }
  if (!v10 || (v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_215764108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZDataGetCVPixelBuffer(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetCVPixelBuffer", a1, a2))
  {
    *((void *)&v7 + 1) = 0;
    uint64_t v8 = 0;
    *(void *)&long long v7 = &off_26C67D770;
    char v17 = 1;
  }
  else
  {
    sub_2157FBD5C(a1 + 32, (uint64_t)&v7);
    if (!v17)
    {
      sub_21573E208(&v7, a2);
      uint64_t v4 = 0;
      if (v17) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  sub_215762FEC((uint64_t)&v7);
  if (*((void *)&v7 + 1))
  {
    uint64_t v4 = **((void **)&v7 + 1);
    unint64_t v5 = *(std::__shared_weak_count **)(*((void *)&v7 + 1) + 8);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
        if (!v17) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v7)(&v7);
        return v4;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v17) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v16) {
    return v4;
  }
  if (v15)
  {
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
  }
  if (!v10 || (v9 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v8);
  return v4;
}

void sub_2157642C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157642D4(uint64_t **a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_215764644();
  sub_215764860();
  if (byte_26788B2F7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B2E0, *((unint64_t *)&xmmword_26788B2E0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B2E0;
    uint64_t v22 = unk_26788B2F0;
  }
  sub_21573A150(&v19, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v8, a2);
  sub_21574086C(v4, (uint64_t *)&v19, (uint64_t)v8, **a1);
  if (!v18 || !v17) {
    goto LABEL_12;
  }
  if (!v16) {
    goto LABEL_9;
  }
  if ((v15 & 0x80000000) == 0)
  {
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v12);
    if (!v11) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v14);
  if (v13 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v11) {
    goto LABEL_12;
  }
LABEL_10:
  if (v10 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v5 = (uint64_t)v19;
  if (v19)
  {
    uint64_t v6 = v20;
    long long v7 = v19;
    if ((void *)v20 != v19)
    {
      do
      {
        if (*(char *)(v6 - 1) < 0) {
          operator delete(*(void **)(v6 - 24));
        }
        v6 -= 24;
      }
      while (v6 != v5);
      long long v7 = v19;
    }
    uint64_t v20 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v22) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_215764470(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 88));
  if (*(char *)(v2 - 41) < 0)
  {
    operator delete(*(void **)(v2 - 64));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157644B8(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 160))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215764540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215764554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215764570(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215764584(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 160))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

long long *sub_215764644()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884180, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884180))
  {
    return &xmmword_267884168;
  }
  uint64_t v1 = (char *)sub_21576472C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884168, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884178 = *((void *)v1 + 2);
    xmmword_267884168 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884168, &dword_21572C000);
  __cxa_guard_release(&qword_267884180);
  return &xmmword_267884168;
}

void sub_215764714(_Unwind_Exception *a1)
{
}

void *sub_21576472C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678841A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678841A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZImage]", qword_267884188);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884188, &dword_21572C000);
    __cxa_guard_release(&qword_2678841A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678841C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678841C0))
  {
    return &unk_2678841A8;
  }
  sub_215E19DF4((uint64_t)qword_267884188, (uint64_t)&unk_2678841A8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678841A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678841C0);
  return &unk_2678841A8;
}

void sub_215764830(_Unwind_Exception *a1)
{
}

void sub_215764848(_Unwind_Exception *a1)
{
}

void sub_215764860()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B2C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B2C8))
  {
    sub_215764934();
    if (byte_26788B327 < 0)
    {
      sub_215738B0C(&xmmword_26788B2E0, (void *)xmmword_26788B310, *((unint64_t *)&xmmword_26788B310 + 1));
    }
    else
    {
      xmmword_26788B2E0 = xmmword_26788B310;
      unk_26788B2F0 = unk_26788B320;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B2E0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B2C8);
  }
}

void sub_21576491C(_Unwind_Exception *a1)
{
}

void sub_215764934()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B2D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B2D0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::PixelBufferRef]", qword_26788B2F8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B2F8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B2D0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B2D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B2D8))
  {
    sub_215E19DF4((uint64_t)qword_26788B2F8, (uint64_t)&xmmword_26788B310);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B310, &dword_21572C000);
    __cxa_guard_release(&qword_26788B2D8);
  }
}

void sub_215764A28(_Unwind_Exception *a1)
{
}

void sub_215764A40(_Unwind_Exception *a1)
{
}

char *sub_215764A58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (char *)operator new(0xB0uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *(void *)uint64_t result = &unk_26C6565D0;
    *((void *)result + 1) = &unk_26C66ADA8;
    long long v5 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(result + 24) = *(_OWORD *)(a1 + 16);
    *((void *)result + 2) = &unk_26C657100;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_OWORD *)(result + 40) = v5;
    *(_OWORD *)(result + 54) = *(_OWORD *)(a1 + 46);
    result[72] = 0;
    result[128] = 0;
    if (*(unsigned char *)(a1 + 120))
    {
      *((void *)result + 9) = &unk_26C657170;
      long long v6 = *(_OWORD *)(a1 + 72);
      *(void *)(a1 + 72) = 0;
      *(void *)(a1 + 80) = 0;
      long long v7 = *(_OWORD *)(a1 + 88);
      *((_OWORD *)result + 5) = v6;
      *((_OWORD *)result + 6) = v7;
      *(_OWORD *)(result + 110) = *(_OWORD *)(a1 + 102);
      result[128] = 1;
    }
    result[136] = 0;
    result[160] = 0;
    if (*(unsigned char *)(a1 + 152))
    {
      *((void *)result + 17) = off_26C67D770;
      *((_OWORD *)result + 9) = *(_OWORD *)(a1 + 136);
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      result[160] = 1;
    }
    *((_DWORD *)result + 42) = 1;
    *(void *)uint64_t result = &unk_26C657BB8;
    *((void *)result + 1) = &unk_26C657C08;
  }
  *a2 = result;
  return result;
}

void *sub_215764BDC(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C657100;
  long long v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215764C74(void *a1)
{
  *a1 = &unk_26C657100;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215764D1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_215764D24(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_215764D2C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(result + 24);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 32);
  return result;
}

uint64_t sub_215764D40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void *sub_215764DC8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C657170;
  long long v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215764E60(void *a1)
{
  *a1 = &unk_26C657170;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215764F08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_215764F10(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_215764F18@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(result + 24);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 32);
  return result;
}

uint64_t sub_215764F2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_215764FB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678841E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678841E0))
  {
    uint64_t v1 = sub_215765104();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_2678841C8;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (uint64_t *)operator new(v7 + 1);
      qword_2678841D0 = v4 + 1;
      unk_2678841D8 = v8 | 0x8000000000000000;
      qword_2678841C8 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_2678841D0 = 0;
      unk_2678841D8 = 0;
      qword_2678841C8 = 0;
      byte_2678841DF = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_2678841C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678841E0);
        return &qword_2678841C8;
      }
    }
    if (v3 >= 0) {
      char v10 = v2;
    }
    else {
      char v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_2678841C8;
}

void sub_2157650EC(_Unwind_Exception *a1)
{
}

uint64_t *sub_215765104()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884200, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884200))
  {
    uint64_t v1 = sub_215764644();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (char *)operator new(v7 + 1);
      qword_2678841F0 = v4 + 6;
      unk_2678841F8 = v8 | 0x8000000000000000;
      qword_2678841E8 = (uint64_t)v9;
      *(_DWORD *)char v9 = 1936617315;
      long long v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_2678841F0 = 0;
      unk_2678841F8 = 0;
      qword_2678841E8 = 0x2074736E6F63;
      byte_2678841FF = v4 + 6;
      long long v6 = (char *)&qword_2678841E8 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_2678841E8, &dword_21572C000);
        __cxa_guard_release(&qword_267884200);
        return &qword_2678841E8;
      }
    }
    if (v3 >= 0) {
      char v10 = v2;
    }
    else {
      char v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_2678841E8;
}

void sub_215765270(_Unwind_Exception *a1)
{
}

void sub_215765288(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_21574875C();
  sub_215764860();
  if (byte_26788B2F7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B2E0, *((unint64_t *)&xmmword_26788B2E0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B2E0;
    uint64_t v24 = unk_26788B2F0;
  }
  unint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v25, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v26 = *((void *)v5 + 2);
    long long v25 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (!v20 || !v19) {
    goto LABEL_15;
  }
  if (!v18) {
    goto LABEL_12;
  }
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v14);
    if (!v13) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v13) {
    goto LABEL_15;
  }
LABEL_13:
  if (v12 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    char v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      char v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_27;
  }
}

void sub_21576548C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  if (*(char *)(v25 - 73) < 0)
  {
    operator delete(*(void **)(v25 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataIOExportDataToNewBlob(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v4 = (_OWORD *)a1;
  if (sub_2157456B0((uint64_t)"VZDataIOExportDataToNewBlob", a1, a3)) {
    return 0;
  }
  LOBYTE(v14) = 0;
  char v16 = 0;
  char v39 = &v40;
  uint64_t v40 = a3;
  sub_215830ED8((uint64_t)(v4 + 2), (uint64_t)&v14, (uint64_t)&v28);
  int v5 = v38;
  if (!v38)
  {
    long long v17 = v28;
    sub_215741BFC(&v18, &v29);
    char v27 = 1;
    sub_215765F58(&v39, (uint64_t)&v17);
    if (v27 && v26)
    {
      if (v25)
      {
        if (v24 < 0) {
          operator delete(__p);
        }
        if (v22 < 0) {
          operator delete(v21);
        }
      }
      if (v20 && v19 < 0) {
        operator delete(v18);
      }
    }
    goto LABEL_27;
  }
  uint64_t v6 = sub_21574A500((uint64_t)&v28);
  uint64_t v7 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v7)
  {
    size_t v4 = v7;
    v7[1] = *(_OWORD *)v6;
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    *((_DWORD *)v7 + 8) = 1;
    *(void *)uint64_t v7 = &unk_26C6567C0;
    *((void *)v7 + 1) = &unk_26C656810;
  }
  else
  {
    LOBYTE(v17) = 0;
    char v27 = 0;
    sub_215765F58(&v39, (uint64_t)&v17);
    if (v27 && v26)
    {
      if (v25)
      {
        if (v24 < 0) {
          operator delete(__p);
        }
        if (v22 < 0) {
          operator delete(v21);
        }
      }
      size_t v4 = 0;
      if (!v20 || (v19 & 0x80000000) == 0) {
        goto LABEL_27;
      }
      operator delete(v18);
    }
    size_t v4 = 0;
  }
LABEL_27:
  if (v38)
  {
    uint64_t v8 = (std::__shared_weak_count *)*((void *)&v28 + 1);
    if (*((void *)&v28 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v28 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else if (v37)
  {
    if (v36)
    {
      if (v35 < 0) {
        operator delete(v34);
      }
      if (v33 < 0) {
        operator delete(v32);
      }
    }
    if (v31 && v30 < 0) {
      operator delete((void *)v29);
    }
  }
  if (!v5) {
    size_t v4 = 0;
  }
  if (v16)
  {
    char v9 = (char *)v14;
    if (v14)
    {
      char v10 = v15;
      char v11 = v14;
      if (v15 != v14)
      {
        do
        {
          char v12 = (std::__shared_weak_count *)*((void *)v10 - 1);
          if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
          v10 -= 16;
        }
        while (v10 != v9);
        char v11 = v14;
      }
      char v15 = v9;
      operator delete(v11);
    }
  }
  return v4;
}

void sub_215765804(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, const char *a13, std::logic_error a14, int a15, __int16 a16, char a17, char a18, char a19, long long a20,long long a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,std::runtime_error __p,int a34,__int16 a35,char a36,char a37,char a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_215740ECC((uint64_t)&a41);
  sub_21574A71C(v41 - 192);
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a14, exception_ptr);
    a14.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    a13 = std::logic_error::what(&a14);
    sub_2157482C8(&__p, &a13);
    sub_2159644BC((long long *)&__p, (uint64_t)&a20);
    *(_OWORD *)(v41 - 192) = a20;
    sub_215741BFC((unsigned char *)(v41 - 176), &a21);
    *(unsigned char *)(v41 - 72) = 1;
    sub_215765F58((uint64_t **)(v41 - 64), v41 - 192);
    sub_215740ECC(v41 - 192);
    sub_21573FF04((uint64_t)&a20);
    if (a38)
    {
      if (a37 < 0) {
        operator delete(__p.__vftable);
      }
    }
    MEMORY[0x2166C4250](&a14);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    char v45 = __cxa_get_exception_ptr(a1);
    sub_21574824C(&__p, (uint64_t)v45);
    __cxa_begin_catch(a1);
    long long v46 = (const char *)(a39 + 48);
    if (*(char *)(a39 + 71) < 0) {
      long long v46 = *(const char **)v46;
    }
    a13 = v46;
    sub_2157482C8(&a14, &a13);
    sub_215964DE4((long long *)&a14, (uint64_t)&a20);
    *(_OWORD *)(v41 - 192) = a20;
    sub_215741BFC((unsigned char *)(v41 - 176), &a21);
    *(unsigned char *)(v41 - 72) = 1;
    sub_215765F58((uint64_t **)(v41 - 64), v41 - 192);
    sub_215740ECC(v41 - 192);
    sub_21573FF04((uint64_t)&a20);
    if (a19 && a18 < 0) {
      operator delete(a14.__vftable);
    }
    MEMORY[0x2166C4910](&__p);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v41 - 192) = 0;
    *(unsigned char *)(v41 - 72) = 0;
    sub_215765F58((uint64_t **)(v41 - 64), v41 - 192);
    sub_215740ECC(v41 - 192);
    __cxa_end_catch();
  }
  JUMPOUT(0x21576575CLL);
}

void *VZDataIOImportDataFromBlob(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v4 = (void *)a1;
  uint64_t v40 = *MEMORY[0x263EF8340];
  if (sub_215744B30((uint64_t)"VZDataIOImportDataFromBlob", a1, a3)) {
    return 0;
  }
  LOBYTE(v13) = 0;
  char v15 = 0;
  char v27 = &v28;
  uint64_t v28 = a3;
  sub_215831334(v4 + 2, (uint64_t)&v13, (uint64_t)&v29);
  int v5 = v39;
  if (!v39)
  {
    long long v16 = v29;
    sub_215741BFC(&v17, &v30);
    char v26 = 1;
    sub_215766368(&v27, (uint64_t)&v16);
    if (!v26 || !v25) {
      goto LABEL_27;
    }
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    if (!v19 || (v18 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  uint64_t v6 = (long long *)sub_2157480E0((uint64_t)&v29);
  uint64_t v7 = operator new(0x240uLL, MEMORY[0x263F8C180]);
  if (!v7)
  {
    LOBYTE(v16) = 0;
    char v26 = 0;
    sub_215766368(&v27, (uint64_t)&v16);
    if (!v26 || !v25) {
      goto LABEL_26;
    }
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    size_t v4 = 0;
    if (!v19 || (v18 & 0x80000000) == 0) {
      goto LABEL_27;
    }
LABEL_25:
    operator delete(v17);
LABEL_26:
    size_t v4 = 0;
    goto LABEL_27;
  }
  size_t v4 = v7;
  *uint64_t v7 = &unk_26C6565D0;
  sub_215748978((uint64_t)(v7 + 2), v6);
  *size_t v4 = &unk_26C656FF0;
  v4[2] = &unk_26C657040;
  *((_OWORD *)v4 + 35) = 0u;
LABEL_27:
  if (v39)
  {
    sub_215748B40((uint64_t)&v29);
  }
  else if (v38)
  {
    if (v37)
    {
      if (v36 < 0) {
        operator delete(v35);
      }
      if (v34 < 0) {
        operator delete(v33);
      }
    }
    if (v32 && v31 < 0) {
      operator delete((void *)v30);
    }
  }
  if (!v5) {
    size_t v4 = 0;
  }
  if (v15)
  {
    uint64_t v8 = (char *)v13;
    if (v13)
    {
      char v9 = v14;
      char v10 = v13;
      if (v14 != v13)
      {
        do
        {
          char v11 = (std::__shared_weak_count *)*((void *)v9 - 1);
          if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
          v9 -= 16;
        }
        while (v9 != v8);
        char v10 = v13;
      }
      char v14 = v8;
      operator delete(v10);
    }
  }
  return v4;
}

void sub_215765D64(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215765D6CLL);
  }
  _Unwind_Resume(a1);
}

void sub_215765D7C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215765D88);
  }
  _Unwind_Resume(a1);
}

void sub_215765F40(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215765F48);
  }
  sub_215731D80(a1);
}

void sub_215765F58(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_2157469F8();
  int v5 = sub_21574A5CC();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v24 = v5[2];
    long long __dst = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B328, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B328))
  {
    sub_215766244();
    if (byte_26788B39F < 0)
    {
      sub_215738B0C(&xmmword_26788B358, (void *)xmmword_26788B388, *((unint64_t *)&xmmword_26788B388 + 1));
    }
    else
    {
      xmmword_26788B358 = xmmword_26788B388;
      unk_26788B368 = unk_26788B398;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B358, &dword_21572C000);
    __cxa_guard_release(&qword_26788B328);
  }
  if (byte_26788B36F < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788B358, *((unint64_t *)&xmmword_26788B358 + 1));
  }
  else
  {
    long long v25 = xmmword_26788B358;
    uint64_t v26 = unk_26788B368;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_13;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v13) {
          goto LABEL_16;
        }
LABEL_14:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_16;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    char v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      char v9 = v21;
    }
    char v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_28;
  }
}

void sub_2157661D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788B328);
  if (*(char *)(v1 - 89) < 0)
  {
    operator delete(*(void **)(v1 - 112));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215766244()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B330, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B330))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ExportArguments]", qword_26788B370);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B370, &dword_21572C000);
    __cxa_guard_release(&qword_26788B330);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B338, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B338))
  {
    sub_215E19DF4((uint64_t)qword_26788B370, (uint64_t)&xmmword_26788B388);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B388, &dword_21572C000);
    __cxa_guard_release(&qword_26788B338);
  }
}

void sub_215766338(_Unwind_Exception *a1)
{
}

void sub_215766350(_Unwind_Exception *a1)
{
}

void sub_215766368(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_21574875C();
  int v5 = sub_21574860C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v24 = v5[2];
    long long __dst = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B340))
  {
    sub_215766654();
    if (byte_26788B3E7 < 0)
    {
      sub_215738B0C(&xmmword_26788B3A0, (void *)xmmword_26788B3D0, *((unint64_t *)&xmmword_26788B3D0 + 1));
    }
    else
    {
      xmmword_26788B3A0 = xmmword_26788B3D0;
      unk_26788B3B0 = unk_26788B3E0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B3A0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B340);
  }
  if (byte_26788B3B7 < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788B3A0, *((unint64_t *)&xmmword_26788B3A0 + 1));
  }
  else
  {
    long long v25 = xmmword_26788B3A0;
    uint64_t v26 = unk_26788B3B0;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_13;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v13) {
          goto LABEL_16;
        }
LABEL_14:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_16;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    char v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      char v9 = v21;
    }
    char v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_28;
  }
}

void sub_2157665E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788B340);
  if (*(char *)(v1 - 89) < 0)
  {
    operator delete(*(void **)(v1 - 112));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215766654()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B348, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B348))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ImportArguments]", qword_26788B3B8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B3B8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B348);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B350, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B350))
  {
    sub_215E19DF4((uint64_t)qword_26788B3B8, (uint64_t)&xmmword_26788B3D0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B3D0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B350);
  }
}

void sub_215766748(_Unwind_Exception *a1)
{
}

void sub_215766760(_Unwind_Exception *a1)
{
}

void VZDataCreateImageWithIOSurface(CFTypeRef cf)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  sub_215DCA030((int)&v1, cf, 1);
}

void sub_215766C64(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215766C6CLL);
  }
  _Unwind_Resume(a1);
}

void sub_215766CD0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::__shared_weak_count *a56)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if (LOBYTE(STACK[0x4A0]))
  {
    if (LOBYTE(STACK[0x490]))
    {
      if (LOBYTE(STACK[0x468]) && SLOBYTE(STACK[0x467]) < 0) {
        operator delete((void *)STACK[0x450]);
      }
      if (LOBYTE(STACK[0x440]) && SLOBYTE(STACK[0x427]) < 0) {
        operator delete((void *)STACK[0x410]);
      }
      if (LOBYTE(STACK[0x408]) && SLOBYTE(STACK[0x407]) < 0) {
        operator delete((void *)STACK[0x3F0]);
      }
    }
    sub_215746614((uint64_t)&STACK[0x320]);
  }
  if (a56 && !atomic_fetch_add(&a56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a56->__on_zero_shared)(a56);
    std::__shared_weak_count::__release_weak(a56);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&v74, exception_ptr);
    v74.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v59 = std::logic_error::what(&v74);
    size_t v60 = strlen(v59);
    if (v60 <= 0x7FFFFFFFFFFFFFF7)
    {
      long long v61 = (const char *)v60;
      if (v60 >= 0x17)
      {
        uint64_t v70 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v60 | 7) != 0x17) {
          uint64_t v70 = v60 | 7;
        }
        uint64_t v71 = v70 + 1;
        char v62 = (std::runtime_error_vtbl *)operator new(v70 + 1);
        v87.__imp_.__imp_ = v61;
        v88.__vftable = (std::runtime_error_vtbl *)(v71 | 0x8000000000000000);
        v87.__vftable = v62;
      }
      else
      {
        HIBYTE(v88.__vftable) = v60;
        char v62 = (std::runtime_error_vtbl *)&v87;
        if (!v60)
        {
LABEL_46:
          v61[(void)v62] = 0;
          LOBYTE(v88.__imp_.__imp_) = 1;
          sub_2159644BC((long long *)&v87, (uint64_t)&v77);
          long long v92 = v77;
          sub_215741BFC(v93, &v78);
          char v102 = 1;
          sub_215767868(v91, (uint64_t)&v92);
          if (v102 && v101)
          {
            if (v100)
            {
              if (v99 < 0) {
                operator delete(v98);
              }
              if (v97 < 0) {
                operator delete(v96);
              }
            }
            if (v95 && v94 < 0) {
              operator delete(v93[0]);
            }
          }
          if (v86)
          {
            if (v85)
            {
              if (v84 < 0) {
                operator delete(v83);
              }
              if (v82 < 0) {
                operator delete(v81);
              }
            }
            if (v80 && v79 < 0) {
              operator delete((void *)v78);
            }
          }
          if (LOBYTE(v88.__imp_.__imp_))
          {
            if (SHIBYTE(v88.__vftable) < 0) {
              operator delete(v87.__vftable);
            }
          }
          MEMORY[0x2166C4250](&v74);
          __cxa_end_catch();
          goto LABEL_98;
        }
      }
      memmove(v62, v59, (size_t)v61);
      goto LABEL_46;
    }
LABEL_96:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(v92) = 0;
    char v102 = 0;
    sub_215767868(v91, (uint64_t)&v92);
    if (v102 && v101)
    {
      if (v100)
      {
        if (v99 < 0) {
          operator delete(v98);
        }
        if (v97 < 0) {
          operator delete(v96);
        }
      }
      if (v95 && v94 < 0) {
        operator delete(v93[0]);
      }
    }
    __cxa_end_catch();
LABEL_98:
    JUMPOUT(0x215766AB0);
  }
  size_t v63 = (const std::runtime_error *)__cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&v87, v63);
  std::runtime_error v88 = v63[1];
  size_t v65 = v63[2].__vftable;
  imp = v63[2].__imp_.__imp_;
  v87.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  uint64_t v89 = v65;
  long long v90 = imp;
  if (imp) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)imp + 1, 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v66 = (const char *)&v89[2];
  if (SHIBYTE(v89[2].what) < 0) {
    uint64_t v66 = *(const char **)v66;
  }
  size_t v67 = strlen(v66);
  if (v67 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_96;
  }
  uint64_t v68 = (const char *)v67;
  if (v67 >= 0x17)
  {
    uint64_t v72 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17) {
      uint64_t v72 = v67 | 7;
    }
    uint64_t v73 = v72 + 1;
    uint64_t v69 = (std::logic_error_vtbl *)operator new(v72 + 1);
    v74.__imp_.__imp_ = v68;
    unint64_t v75 = v73 | 0x8000000000000000;
    v74.__vftable = v69;
  }
  else
  {
    HIBYTE(v75) = v67;
    uint64_t v69 = (std::logic_error_vtbl *)&v74;
    if (!v67)
    {
LABEL_73:
      v68[(void)v69] = 0;
      char v76 = 1;
      sub_215964DE4((long long *)&v74, (uint64_t)&v77);
      long long v92 = v77;
      sub_215741BFC(v93, &v78);
      char v102 = 1;
      sub_215767868(v91, (uint64_t)&v92);
      if (v102 && v101)
      {
        if (v100)
        {
          if (v99 < 0) {
            operator delete(v98);
          }
          if (v97 < 0) {
            operator delete(v96);
          }
        }
        if (v95 && v94 < 0) {
          operator delete(v93[0]);
        }
      }
      if (v86)
      {
        if (v85)
        {
          if (v84 < 0) {
            operator delete(v83);
          }
          if (v82 < 0) {
            operator delete(v81);
          }
        }
        if (v80 && v79 < 0) {
          operator delete((void *)v78);
        }
      }
      if (v76 && SHIBYTE(v75) < 0) {
        operator delete(v74.__vftable);
      }
      MEMORY[0x2166C4910](&v87);
      __cxa_end_catch();
      goto LABEL_98;
    }
  }
  memmove(v69, v66, (size_t)v68);
  goto LABEL_73;
}

void sub_2157671E0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataGetIOSurface(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_2157456B0((uint64_t)"VZDataGetIOSurface", a1, 0)) {
    return v2;
  }
  sub_2158B8F80((long long *)(a1 + 32), &v6);
  if (v7)
  {
    uint64_t v2 = *v7;
    int v3 = (std::__shared_weak_count *)v7[1];
    if (v3)
    {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  long long v6 = &unk_26C684900;
  size_t v4 = v8;
  if (!v8 || atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v2;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v2;
}

uint64_t VZDataGetExistingIOSurface(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetExistingIOSurface", a1, a2))
  {
    *((void *)&v8 + 1) = 0;
    char v9 = 0;
    *(void *)&long long v8 = &unk_26C684900;
    char v18 = 1;
  }
  else
  {
    sub_2158B90C4((long long *)(a1 + 32), (uint64_t)&v8);
    if (!v18)
    {
      sub_21573E208(&v8, a2);
      uint64_t v5 = 0;
      if (v18) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
  }
  size_t v4 = *(uint64_t **)(sub_2157674F0((uint64_t)&v8) + 8);
  if (v4)
  {
    uint64_t v5 = *v4;
    long long v6 = (std::__shared_weak_count *)v4[1];
    if (v6)
    {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
        if (!v18) {
          goto LABEL_14;
        }
LABEL_11:
        (*(void (**)(long long *))v8)(&v8);
        return v5;
      }
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if (v18) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v17) {
    return v5;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  if (!v11 || (v10 & 0x80000000) == 0) {
    return v5;
  }
  operator delete(v9);
  return v5;
}

void sub_2157674DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157674F0(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215767578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21576758C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157675A8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2157675BC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

const void *VZDataObtainOrCreateIOSurface(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataObtainOrCreateIOSurface", a1, a2))
  {
    *((void *)&v8 + 1) = 0;
    char v9 = 0;
    *(void *)&long long v8 = &unk_26C684900;
    char v18 = 1;
  }
  else
  {
    sub_2158B99D0((long long *)(a1 + 32), (uint64_t)&v8);
    if (!v18)
    {
      sub_21573E208(&v8, a2);
      uint64_t v5 = 0;
      if (v18) {
        goto LABEL_15;
      }
      goto LABEL_18;
    }
  }
  uint64_t v4 = *(void *)(sub_2157674F0((uint64_t)&v8) + 8);
  if (v4)
  {
    uint64_t v5 = *(const void **)v4;
    long long v6 = *(std::__shared_weak_count **)(v4 + 8);
    char v19 = *(const void **)v4;
    char v20 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v5) {
      CFRetain(v5);
    }
    if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (!v18) {
        goto LABEL_18;
      }
LABEL_15:
      (*(void (**)(long long *))v8)(&v8);
      return v5;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if (v18) {
    goto LABEL_15;
  }
LABEL_18:
  if (!v17) {
    return v5;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  if (!v11 || (v10 & 0x80000000) == 0) {
    return v5;
  }
  operator delete(v9);
  return v5;
}

void sub_215767838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_215733368(v9 - 32);
  sub_2157675BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_215767854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215767868(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B3E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B3E8))
  {
    sub_215767B60();
    if (byte_26788B447 < 0)
    {
      sub_215738B0C(&xmmword_26788B400, (void *)xmmword_26788B430, *((unint64_t *)&xmmword_26788B430 + 1));
    }
    else
    {
      xmmword_26788B400 = xmmword_26788B430;
      unk_26788B410 = unk_26788B440;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B400, &dword_21572C000);
    __cxa_guard_release(&qword_26788B3E8);
  }
  if (byte_26788B417 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B400, *((unint64_t *)&xmmword_26788B400 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B400;
    uint64_t v24 = unk_26788B410;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v25, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v26 = *((void *)v5 + 2);
    long long v25 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_13;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v13) {
          goto LABEL_16;
        }
LABEL_14:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_16;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    long long v8 = v22;
    uint64_t v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v21;
    }
    char v22 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_28;
  }
}

void sub_215767AE8(_Unwind_Exception *a1)
{
}

void sub_215767B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 65) < 0) {
    operator delete(*(void **)(v25 - 88));
  }
  if (*(char *)(v25 - 89) < 0)
  {
    operator delete(*(void **)(v25 - 112));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215767B60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B3F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B3F0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosurface::SurfaceRef]", qword_26788B418);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B418, &dword_21572C000);
    __cxa_guard_release(&qword_26788B3F0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B3F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B3F8))
  {
    sub_215E19DF4((uint64_t)qword_26788B418, (uint64_t)&xmmword_26788B430);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B430, &dword_21572C000);
    __cxa_guard_release(&qword_26788B3F8);
  }
}

void sub_215767C54(_Unwind_Exception *a1)
{
}

void sub_215767C6C(_Unwind_Exception *a1)
{
}

uint64_t sub_215767C84(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    long long v3 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    long long v3 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215767D54(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    long long v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      return;
    }
  }
  else
  {
    long long v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215767E1C(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    long long v3 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    long long v3 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:

  JUMPOUT(0x2166C4D20);
}

void sub_215767EFC(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    long long v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    long long v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215767FDC(uint64_t a1)
{
  sub_21576B418(*(void **)(a1 + 56));
  long long v3 = (void **)(a1 + 16);
  sub_21576B254(&v3);
  return a1;
}

void sub_215768020(uint64_t a1)
{
  sub_21576B418(*(void **)(a1 + 48));
  uint64_t v2 = (void **)(a1 + 8);
  sub_21576B254(&v2);
}

uint64_t sub_215768060(uint64_t a1)
{
  sub_21576B418(*(void **)(a1 + 56));
  long long v3 = (void **)(a1 + 16);
  sub_21576B254(&v3);
  return MEMORY[0x2166C4D20](a1, 0x10A1C402C1B0AA2);
}

uint64_t sub_2157680B8(uint64_t a1)
{
  uint64_t v2 = a1 - 8;
  sub_21576B418(*(void **)(a1 + 48));
  uint64_t v4 = (void **)(a1 + 8);
  sub_21576B254(&v4);
  return MEMORY[0x2166C4D20](v2, 0x10A1C402C1B0AA2);
}

uint64_t VZDestinationGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B458, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B458))
  {
    return qword_26788B450;
  }
  qword_26788B450 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B458);
  return qword_26788B450;
}

uint64_t VZDestinationOptionsGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B468, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B468))
  {
    return qword_26788B460;
  }
  qword_26788B460 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B468);
  return qword_26788B460;
}

uint64_t VZDestinationListGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B478, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B478))
  {
    return qword_26788B470;
  }
  qword_26788B470 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B478);
  return qword_26788B470;
}

uint64_t VZDestinationCreateWithCallback(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  if (a1)
  {
    long long v6 = operator new(0x20uLL);
    v6[1] = 0;
    v6[2] = 0;
    *long long v6 = &unk_26C657400;
    v6[3] = _Block_copy(a1);
    *(void *)&long long v22 = &unk_26C6574B0;
    *((void *)&v22 + 1) = v6 + 3;
    *(void *)&long long v23 = v6;
    *((void *)&v23 + 1) = &v22;
    LOWORD(v11) = (a2 != 0) << 8;
    sub_215768660(a3, &v22, (unsigned __int16 *)&v11);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B480))
  {
    sub_21576CE20();
    if (byte_26788B59F < 0)
    {
      sub_215738B0C(&xmmword_26788B558, (void *)xmmword_26788B588, *((unint64_t *)&xmmword_26788B588 + 1));
    }
    else
    {
      xmmword_26788B558 = xmmword_26788B588;
      unk_26788B568 = unk_26788B598;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B558, &dword_21572C000);
    __cxa_guard_release(&qword_26788B480);
  }
  if (byte_26788B56F < 0)
  {
    sub_215738B0C(v8, (void *)xmmword_26788B558, *((unint64_t *)&xmmword_26788B558 + 1));
  }
  else
  {
    *(_OWORD *)long long v8 = xmmword_26788B558;
    uint64_t v9 = unk_26788B568;
  }
  char v10 = 1;
  sub_21573FF94((uint64_t)"VZDestinationCreateWithCallback", (uint64_t)v8, (uint64_t)&v11);
  long long v22 = v11;
  LOBYTE(v23) = 0;
  char v32 = 0;
  if (v21)
  {
    char v25 = 0;
    if (v14)
    {
      long long v23 = v12;
      uint64_t v24 = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      char v25 = 1;
    }
    LOBYTE(v26) = 0;
    char v31 = 0;
    if (v20)
    {
      uint64_t v27 = v16;
      long long v26 = *(_OWORD *)v15;
      v15[0] = 0;
      v15[1] = 0;
      uint64_t v28 = v17;
      *(_OWORD *)long long __p = *(_OWORD *)v18;
      uint64_t v30 = v19;
      uint64_t v16 = 0;
      v18[0] = 0;
      v18[1] = 0;
      uint64_t v19 = 0;
      char v31 = 1;
    }
    char v32 = 1;
  }
  char v33 = 0;
  sub_21573E208(&v22, a3);
  if (!v33 && v32)
  {
    if (v31)
    {
      if (SHIBYTE(v30) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v27) < 0) {
        operator delete((void *)v26);
      }
    }
    if (v25 && SHIBYTE(v24) < 0) {
      operator delete((void *)v23);
    }
  }
  if (v21)
  {
    if (v20)
    {
      if (SHIBYTE(v19) < 0) {
        operator delete(v18[0]);
      }
      if (SHIBYTE(v16) < 0) {
        operator delete(v15[0]);
      }
    }
    if (v14 && SHIBYTE(v13) < 0) {
      operator delete((void *)v12);
    }
  }
  if (v10 && SHIBYTE(v9) < 0) {
    operator delete(v8[0]);
  }
  return 0;
}

void sub_2157685F0(_Unwind_Exception *a1)
{
}

void sub_21576860C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void sub_215768648(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_215768660(uint64_t a1, void *a2, unsigned __int16 *a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v4 = (void *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      uint64_t v9 = v8;
      (*(void (**)(void *, void *))(*a2 + 24))(a2, v8);
    }
    else
    {
      uint64_t v9 = (void *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v5 = *a3;
  v6[0] = &unk_26C656CE8;
  v6[1] = sub_2157511D8;
  v6[3] = v6;
  char v7 = 1;
  sub_215831994(v8, v5, (uint64_t)v6);
}

void sub_2157689FC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long __p, int a10, __int16 a11, char a12, char a13, char a14, long long a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,long long a32,int a33,__int16 a34,char a35,char a36,char a37,long long a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,std::logic_error a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a2)
  {
    sub_215740ECC((uint64_t)&STACK[0x200]);
    sub_215755968(v71 - 256);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&a53, exception_ptr);
      a53.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      a31 = (uint64_t)std::logic_error::what(&a53);
      sub_2157482C8(&__p, (const char **)&a31);
      sub_2159644BC(&__p, v71 - 256);
      a15 = *(_OWORD *)(v71 - 256);
      sub_215741BFC(&a16, (long long *)(v71 - 240));
      a29 = 1;
      sub_21576D530((uint64_t **)(v71 - 128), (uint64_t)&a15);
      sub_215740ECC((uint64_t)&a15);
      sub_21573FF04(v71 - 256);
      if (a14)
      {
        if (a13 < 0) {
          operator delete((void *)__p);
        }
      }
      MEMORY[0x2166C4250](&a53);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      unint64_t v75 = __cxa_get_exception_ptr(a1);
      sub_21574824C((std::runtime_error *)&a53, (uint64_t)v75);
      __cxa_begin_catch(a1);
      char v76 = (void *)(a56 + 48);
      if (*(char *)(a56 + 71) < 0) {
        char v76 = (void *)*v76;
      }
      a31 = (uint64_t)v76;
      sub_2157482C8(&a32, (const char **)&a31);
      sub_215964DE4(&a32, v71 - 256);
      a38 = *(_OWORD *)(v71 - 256);
      sub_215741BFC(&a39, (long long *)(v71 - 240));
      a52 = 1;
      sub_21576D530((uint64_t **)(v71 - 128), (uint64_t)&a38);
      sub_215740ECC((uint64_t)&a38);
      sub_21573FF04(v71 - 256);
      if (a37 && a36 < 0) {
        operator delete((void *)a32);
      }
      MEMORY[0x2166C4910](&a53);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      a58 = 0;
      a71 = 0;
      sub_21576D530((uint64_t **)(v71 - 128), (uint64_t)&a58);
      sub_215740ECC((uint64_t)&a58);
      __cxa_end_catch();
    }
    JUMPOUT(0x215768974);
  }
  _Unwind_Resume(a1);
}

void sub_215768C30(uint64_t a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215768C38);
  }
  JUMPOUT(0x215768A18);
}

void *sub_215768C40(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t VZDestinationCreateWithCallbackFunction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  if (a2)
  {
    *(void *)&long long v28 = &unk_26C657558;
    *((void *)&v28 + 1) = a2;
    *(void *)&long long v29 = a1;
    *((void *)&v29 + 1) = &v28;
    LOWORD(v16) = (a3 != 0) << 8;
    sub_215768660(a4, &v28, (unsigned __int16 *)&v16);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B518, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B518))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B520, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788B520))
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B528, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788B528))
      {
        sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (void *, const VZLogMessage *)]", byte_26788B750);
        __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788B750, &dword_21572C000);
        __cxa_guard_release(&qword_26788B528);
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B530, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788B530))
      {
        if (byte_26788B750[23] < 0) {
          sub_215738B0C(&__s, *(void **)byte_26788B750, *(unint64_t *)&byte_26788B750[8]);
        }
        else {
          std::string __s = *(std::string *)byte_26788B750;
        }
        sub_215E13B5C(&__s, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_26788B768);
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B768, &dword_21572C000);
        __cxa_guard_release(&qword_26788B530);
      }
      if (byte_26788B77F < 0)
      {
        sub_215738B0C(&xmmword_26788B738, (void *)xmmword_26788B768, *((unint64_t *)&xmmword_26788B768 + 1));
      }
      else
      {
        xmmword_26788B738 = xmmword_26788B768;
        unk_26788B748 = unk_26788B778;
      }
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B738, &dword_21572C000);
      __cxa_guard_release(&qword_26788B520);
    }
    int v6 = byte_26788B74F;
    if (byte_26788B74F >= 0) {
      size_t v7 = byte_26788B74F;
    }
    else {
      size_t v7 = *((void *)&xmmword_26788B738 + 1);
    }
    unint64_t v8 = v7 + 1;
    if (v7 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v8 >= 0x17)
    {
      uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17) {
        uint64_t v10 = v8 | 7;
      }
      uint64_t v11 = v10 + 1;
      uint64_t v9 = (long long *)operator new(v10 + 1);
      *((void *)&xmmword_26788B720 + 1) = v7 + 1;
      unk_26788B730 = v11 | 0x8000000000000000;
      *(void *)&xmmword_26788B720 = v9;
    }
    else
    {
      unk_26788B730 = 0;
      xmmword_26788B720 = 0uLL;
      uint64_t v9 = &xmmword_26788B720;
      byte_26788B737 = v7 + 1;
      if (!v7)
      {
LABEL_52:
        *(_WORD *)((char *)v9 + v7) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B720, &dword_21572C000);
        __cxa_guard_release(&qword_26788B518);
        goto LABEL_4;
      }
    }
    if (v6 >= 0) {
      long long v12 = &xmmword_26788B738;
    }
    else {
      long long v12 = (long long *)xmmword_26788B738;
    }
    memmove(v9, v12, v7);
    goto LABEL_52;
  }
LABEL_4:
  if (byte_26788B737 < 0)
  {
    sub_215738B0C(v13, (void *)xmmword_26788B720, *((unint64_t *)&xmmword_26788B720 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v13 = xmmword_26788B720;
    uint64_t v14 = unk_26788B730;
  }
  char v15 = 1;
  sub_21573FF94((uint64_t)"VZDestinationCreateWithCallbackFunction", (uint64_t)v13, (uint64_t)&v16);
  long long v28 = v16;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v26)
  {
    char v31 = 0;
    if (v19)
    {
      long long v29 = v17;
      uint64_t v30 = v18;
      uint64_t v18 = 0;
      long long v17 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v25)
    {
      uint64_t v33 = v21;
      long long v32 = *(_OWORD *)v20;
      v20[0] = 0;
      v20[1] = 0;
      uint64_t v34 = v22;
      *(_OWORD *)long long __p = *(_OWORD *)v23;
      uint64_t v36 = v24;
      uint64_t v21 = 0;
      v23[0] = 0;
      v23[1] = 0;
      uint64_t v24 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a4);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v26)
  {
    if (v25)
    {
      if (SHIBYTE(v24) < 0) {
        operator delete(v23[0]);
      }
      if (SHIBYTE(v21) < 0) {
        operator delete(v20[0]);
      }
    }
    if (v19 && SHIBYTE(v18) < 0) {
      operator delete((void *)v17);
    }
  }
  if (v15 && SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return 0;
}

void sub_21576927C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_26788B530);
  __cxa_guard_abort(&qword_26788B520);
  __cxa_guard_abort(&qword_26788B518);
  _Unwind_Resume(a1);
}

void sub_2157692E0(_Unwind_Exception *a1)
{
}

void sub_2157692FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,char a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,uint64_t a61,void *__p,uint64_t a63)
{
  if (!a72 && a70)
  {
    if (a68)
    {
      if (a67 < 0) {
        operator delete(__p);
      }
      if (a60 < 0) {
        operator delete(a55);
      }
    }
    if (a54 && a53 < 0) {
      operator delete(a48);
    }
  }
  if (a41)
  {
    if (a39)
    {
      if (a38 < 0) {
        operator delete(a33);
      }
      if (a31 < 0) {
        operator delete(a26);
      }
    }
    if (a25 && a24 < 0) {
      operator delete(a19);
    }
  }
  if (a15)
  {
    if (a14 < 0) {
      operator delete(a9);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDestinationListCreate()
{
  uint64_t result = operator new(0x48uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[1] = 0u;
    result[2] = 0u;
    *((_DWORD *)result + 10) = 1;
    *(void *)uint64_t result = &unk_26C6572F0;
    *((void *)result + 1) = &unk_26C657340;
    *((void *)result + 8) = 0;
    *((void *)result + 7) = 0;
    *((void *)result + 6) = (char *)result + 56;
  }
  else
  {
    uint64_t v1 = (uint64_t *)sub_21576DF54();
    long long v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    v5[0] = 0;
    char v15 = 0;
    sub_21574086C(v1, (uint64_t *)&v16, (uint64_t)v5, 0);
    if (v15 && v14)
    {
      if (v13)
      {
        if (v12 < 0) {
          operator delete(__p);
        }
        if (v10 < 0) {
          operator delete(v9);
        }
      }
      if (v8 && v7 < 0) {
        operator delete(v6);
      }
    }
    uint64_t v2 = (uint64_t)v16;
    if (v16)
    {
      uint64_t v3 = v17;
      uint64_t v4 = v16;
      if ((void *)v17 != v16)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0) {
            operator delete(*(void **)(v3 - 24));
          }
          v3 -= 24;
        }
        while (v3 != v2);
        uint64_t v4 = v16;
      }
      uint64_t v17 = v2;
      operator delete(v4);
    }
    return 0;
  }
  return result;
}

void VZDestinationListAddDestination(void *a1, void *a2)
{
  if (a1)
  {
    if (sub_215769AB8((uint64_t)"VZDestinationListAddDestination", (uint64_t)a2, 0)) {
      return;
    }
    uint64_t v4 = (void *)a1[3];
    unint64_t v5 = a1[4];
    if ((unint64_t)v4 < v5)
    {
      *uint64_t v4 = a2[2];
      uint64_t v6 = a2[3];
      v4[1] = v6;
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      v4[2] = a2[4];
      uint64_t v7 = a2[5];
      v4[3] = v7;
      if (v7) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
      }
      char v8 = v4 + 4;
LABEL_69:
      a1[3] = v8;
      return;
    }
    uint64_t v9 = a1[2];
    uint64_t v10 = ((uint64_t)v4 - v9) >> 5;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 59) {
      sub_215738AC0();
    }
    uint64_t v12 = v5 - v9;
    if (v12 >> 4 > v11) {
      unint64_t v11 = v12 >> 4;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v13 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 59) {
        sub_215738AD8();
      }
      char v14 = (char *)operator new(32 * v13);
      uint64_t v15 = a2[3];
      long long v16 = &v14[32 * v10];
      *(void *)long long v16 = a2[2];
      *((void *)v16 + 1) = v15;
      if (!v15) {
        goto LABEL_22;
      }
    }
    else
    {
      char v14 = 0;
      uint64_t v15 = a2[3];
      long long v16 = (char *)(32 * v10);
      *(void *)long long v16 = a2[2];
      *((void *)v16 + 1) = v15;
      if (!v15) {
        goto LABEL_22;
      }
    }
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
LABEL_22:
    uint64_t v17 = a2[5];
    *((void *)v16 + 2) = a2[4];
    *((void *)v16 + 3) = v17;
    if (v17) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v18 = &v14[32 * v13];
    char v8 = v16 + 32;
    char v19 = (char *)a1[2];
    char v20 = (char *)a1[3];
    if (v20 == v19)
    {
      a1[2] = v16;
      a1[3] = v8;
      a1[4] = v18;
    }
    else
    {
      do
      {
        long long v21 = *((_OWORD *)v20 - 2);
        v20 -= 32;
        *((_OWORD *)v16 - 2) = v21;
        v16 -= 32;
        *(void *)char v20 = 0;
        *((void *)v20 + 1) = 0;
        *((_OWORD *)v16 + 1) = *((_OWORD *)v20 + 1);
        *((void *)v20 + 2) = 0;
        *((void *)v20 + 3) = 0;
      }
      while (v20 != v19);
      char v20 = (char *)a1[2];
      uint64_t v22 = (char *)a1[3];
      a1[2] = v16;
      a1[3] = v8;
      for (a1[4] = v18; v22 != v20; v22 -= 32)
      {
        long long v23 = (std::__shared_weak_count *)*((void *)v22 - 1);
        if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
        uint64_t v24 = (std::__shared_weak_count *)*((void *)v22 - 3);
        if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
    }
    if (v20) {
      operator delete(v20);
    }
    goto LABEL_69;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B538, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B538))
  {
    char v25 = sub_21576DF54();
    char v26 = (const void **)v25;
    int v27 = *((char *)v25 + 23);
    if (v27 >= 0) {
      size_t v28 = *((unsigned __int8 *)v25 + 23);
    }
    else {
      size_t v28 = *((void *)v25 + 1);
    }
    unint64_t v29 = v28 + 1;
    if (v28 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v29 >= 0x17)
    {
      uint64_t v31 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v29 | 7) != 0x17) {
        uint64_t v31 = v29 | 7;
      }
      uint64_t v32 = v31 + 1;
      uint64_t v30 = (long long *)operator new(v31 + 1);
      *((void *)&xmmword_26788B780 + 1) = v28 + 1;
      unk_26788B790 = v32 | 0x8000000000000000;
      *(void *)&xmmword_26788B780 = v30;
    }
    else
    {
      unk_26788B790 = 0;
      xmmword_26788B780 = 0uLL;
      uint64_t v30 = &xmmword_26788B780;
      byte_26788B797 = v28 + 1;
      if (!v28)
      {
LABEL_87:
        *(_WORD *)((char *)v30 + v28) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B780, &dword_21572C000);
        __cxa_guard_release(&qword_26788B538);
        goto LABEL_10;
      }
    }
    if (v27 >= 0) {
      uint64_t v33 = v26;
    }
    else {
      uint64_t v33 = *v26;
    }
    memmove(v30, v33, v28);
    goto LABEL_87;
  }
LABEL_10:
  if (byte_26788B797 < 0)
  {
    sub_215738B0C(v34, (void *)xmmword_26788B780, *((unint64_t *)&xmmword_26788B780 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v34 = xmmword_26788B780;
    uint64_t v35 = unk_26788B790;
  }
  char v36 = 1;
  sub_21573FF94((uint64_t)"VZDestinationListAddDestination", (uint64_t)v34, (uint64_t)&v37);
  long long v48 = v37;
  LOBYTE(v49) = 0;
  char v58 = 0;
  if (v47)
  {
    char v51 = 0;
    if (v40)
    {
      long long v49 = v38;
      uint64_t v50 = v39;
      uint64_t v39 = 0;
      long long v38 = 0uLL;
      char v51 = 1;
    }
    LOBYTE(v52) = 0;
    char v57 = 0;
    if (v46)
    {
      uint64_t v53 = v42;
      long long v52 = *(_OWORD *)v41;
      v41[0] = 0;
      v41[1] = 0;
      uint64_t v54 = v43;
      *(_OWORD *)long long __p = *(_OWORD *)v44;
      uint64_t v56 = v45;
      uint64_t v42 = 0;
      v44[0] = 0;
      v44[1] = 0;
      uint64_t v45 = 0;
      char v57 = 1;
    }
    char v58 = 1;
  }
  char v59 = 0;
  sub_21573E208(&v48, 0);
  if (!v59 && v58)
  {
    if (v57)
    {
      if (SHIBYTE(v56) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v53) < 0) {
        operator delete((void *)v52);
      }
    }
    if (v51 && SHIBYTE(v50) < 0) {
      operator delete((void *)v49);
    }
  }
  if (v47)
  {
    if (v46)
    {
      if (SHIBYTE(v45) < 0) {
        operator delete(v44[0]);
      }
      if (SHIBYTE(v42) < 0) {
        operator delete(v41[0]);
      }
    }
    if (v40 && SHIBYTE(v39) < 0) {
      operator delete((void *)v38);
    }
  }
  if (v36 && SHIBYTE(v35) < 0) {
    operator delete(v34[0]);
  }
}

void sub_215769A60(_Unwind_Exception *a1)
{
}

void sub_215769A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL sub_215769AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v6 = sub_21576E170();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)uint64_t v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215769CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDestinationListGetSize(uint64_t a1)
{
  BOOL v2 = sub_215769D3C((uint64_t)"VZDestinationListGetSize", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return (uint64_t)(*(void *)(a1 + 24) - *(void *)(a1 + 16)) >> 5;
  }
  return result;
}

BOOL sub_215769D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v6 = sub_21576E444();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)uint64_t v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215769F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDestinationListGetDestination(uint64_t a1, unint64_t a2)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  uint64_t v4 = 0;
  if (!sub_215769D3C((uint64_t)"VZDestinationListGetDestination", a1, 0))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 24);
    unint64_t v67 = a2;
    unint64_t v7 = (v6 - v5) >> 5;
    if (v7 <= a2)
    {
      unint64_t v57 = v7;
      sub_21576B544("index ", &v67, (std::string *)" out of range for list of size ", &v57);
      if (SHIBYTE(v81) < 0)
      {
        sub_215738B0C(__dst, (void *)v80, *((unint64_t *)&v80 + 1));
      }
      else
      {
        *(_OWORD *)long long __dst = v80;
        uint64_t v59 = v81;
      }
      char v60 = 1;
      LOBYTE(v61) = 0;
      char v65 = 0;
      char v66 = 1;
      sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)&v68);
      long long v45 = v68;
      LOBYTE(v46) = 0;
      char v55 = 0;
      if (v78)
      {
        char v48 = 0;
        if (v71)
        {
          long long v46 = v69;
          uint64_t v47 = v70;
          uint64_t v70 = 0;
          long long v69 = 0uLL;
          char v48 = 1;
        }
        LOBYTE(v49) = 0;
        char v54 = 0;
        if (v77)
        {
          uint64_t v50 = v73;
          long long v49 = v72;
          long long v72 = 0uLL;
          uint64_t v51 = v74;
          long long v52 = v75;
          uint64_t v53 = v76;
          uint64_t v73 = 0;
          long long v75 = 0uLL;
          uint64_t v76 = 0;
          char v54 = 1;
        }
        char v55 = 1;
        char v56 = 0;
        if (v71 && SHIBYTE(v70) < 0) {
          operator delete((void *)v69);
        }
      }
      else
      {
        char v56 = 0;
      }
      if (v66)
      {
        if (v65)
        {
          if (v64 < 0) {
            operator delete(__p);
          }
          if (v62 < 0) {
            operator delete(v61);
          }
        }
        if (v60 && SHIBYTE(v59) < 0) {
          operator delete(__dst[0]);
        }
      }
      if (SHIBYTE(v81) < 0) {
        operator delete((void *)v80);
      }
      sub_21573E208(&v45, 0);
      uint64_t v4 = 0;
      goto LABEL_91;
    }
    char v8 = (void *)(v5 + 32 * a2);
    *(void *)&long long v45 = *v8;
    uint64_t v9 = v8[1];
    *((void *)&v45 + 1) = v9;
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    *(void *)&long long v46 = v8[2];
    uint64_t v10 = v8[3];
    *((void *)&v46 + 1) = v10;
    if (v10) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
    }
    char v56 = 1;
    long long v12 = (uint64_t **)(a1 + 56);
    char v11 = *(void **)(a1 + 56);
    if (v11)
    {
      long long v13 = (uint64_t *)(a1 + 56);
      do
      {
        unint64_t v14 = v11[6];
        BOOL v15 = v14 >= (unint64_t)v46;
        if (v14 >= (unint64_t)v46) {
          long long v16 = v11;
        }
        else {
          long long v16 = v11 + 1;
        }
        if (v15) {
          long long v13 = v11;
        }
        char v11 = (void *)*v16;
      }
      while (*v16);
      if (v13 != (uint64_t *)v12 && (unint64_t)v46 >= v13[6]) {
        goto LABEL_90;
      }
    }
    uint64_t v17 = operator new(0x38uLL, MEMORY[0x263F8C180]);
    if (v17)
    {
      uint64_t v18 = v17;
      *(void *)uint64_t v17 = &unk_26C6565D0;
      long long v19 = v45;
      v17[1] = v45;
      if (*((void *)&v19 + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v19 + 1) + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v20 = *((void *)&v46 + 1);
      unint64_t v21 = v46;
      *((void *)v17 + 4) = v46;
      *((void *)v17 + 5) = v20;
      if (v20)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
        unint64_t v21 = v46;
      }
      *((_DWORD *)v17 + 12) = 1;
      char v22 = (void (**)(void))&unk_26C6571E0;
      *(void *)uint64_t v17 = &unk_26C6571E0;
      *((void *)v17 + 1) = &unk_26C657230;
      long long v23 = *v12;
      long long v24 = (uint64_t **)(a1 + 56);
      if (*v12)
      {
        while (1)
        {
          while (1)
          {
            long long v24 = (uint64_t **)v23;
            unint64_t v25 = v23[6];
            if (v25 <= v21) {
              break;
            }
            long long v23 = *v24;
            long long v12 = v24;
            if (!*v24) {
              goto LABEL_54;
            }
          }
          if (v25 >= v21) {
            break;
          }
          long long v23 = v24[1];
          if (!v23)
          {
            long long v12 = v24 + 1;
            goto LABEL_54;
          }
        }
        long long v13 = (uint64_t *)v24;
      }
      else
      {
LABEL_54:
        char v26 = (uint64_t *)operator new(0x48uLL);
        long long v13 = v26;
        uint64_t v27 = *((void *)&v45 + 1);
        v26[4] = v19;
        v26[5] = v27;
        if (v27)
        {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v27 + 8), 1uLL, memory_order_relaxed);
          unint64_t v21 = v46;
        }
        uint64_t v28 = *((void *)&v46 + 1);
        v26[6] = v21;
        v26[7] = v28;
        if (v28) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v28 + 8), 1uLL, memory_order_relaxed);
        }
        v26[8] = (uint64_t)v18;
        (*(void (**)(_OWORD *))(*(void *)v18 + 16))(v18);
        *long long v13 = 0;
        v13[1] = 0;
        v13[2] = (uint64_t)v24;
        *long long v12 = v13;
        uint64_t v29 = **(void **)(a1 + 48);
        uint64_t v30 = v13;
        if (v29)
        {
          *(void *)(a1 + 48) = v29;
          uint64_t v30 = *v12;
        }
        sub_21573B048(*(uint64_t **)(a1 + 56), v30);
        ++*(void *)(a1 + 64);
        char v22 = *(void (***)(void))v18;
      }
      ((void (**)(_OWORD *))v22)[3](v18);
LABEL_90:
      uint64_t v4 = v13[8];
LABEL_91:
      sub_215755968((uint64_t)&v45);
      return v4;
    }
    uint64_t v31 = (uint64_t *)sub_215753740();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B448, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788B448))
    {
LABEL_62:
      if (byte_26788B557 < 0)
      {
        sub_215738B0C(&v80, (void *)xmmword_26788B540, *((unint64_t *)&xmmword_26788B540 + 1));
      }
      else
      {
        long long v80 = xmmword_26788B540;
        uint64_t v81 = unk_26788B550;
      }
      sub_21573A150(__dst, (uint64_t)&v80, 1uLL);
      LOBYTE(v68) = 0;
      char v79 = 0;
      sub_21574086C(v31, (uint64_t *)__dst, (uint64_t)&v68, 0);
      if (v79 && v78)
      {
        if (v77)
        {
          if (SHIBYTE(v76) < 0) {
            operator delete((void *)v75);
          }
          if (SHIBYTE(v73) < 0) {
            operator delete((void *)v72);
          }
        }
        if (v71 && SHIBYTE(v70) < 0) {
          operator delete((void *)v69);
        }
      }
      char v32 = (void **)__dst[0];
      if (__dst[0])
      {
        char v33 = (void **)__dst[1];
        char v34 = __dst[0];
        if (__dst[1] != __dst[0])
        {
          do
          {
            if (*((char *)v33 - 1) < 0) {
              operator delete(*(v33 - 3));
            }
            v33 -= 3;
          }
          while (v33 != v32);
          char v34 = __dst[0];
        }
        __dst[1] = v32;
        operator delete(v34);
      }
      if (SHIBYTE(v81) < 0) {
        operator delete((void *)v80);
      }
      uint64_t v4 = 0;
      goto LABEL_91;
    }
    char v36 = sub_21575395C();
    long long v37 = (const void **)v36;
    int v38 = *((char *)v36 + 23);
    if (v38 >= 0) {
      size_t v39 = *((unsigned __int8 *)v36 + 23);
    }
    else {
      size_t v39 = *((void *)v36 + 1);
    }
    unint64_t v40 = v39 + 1;
    if (v39 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v40 >= 0x17)
    {
      uint64_t v42 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v40 | 7) != 0x17) {
        uint64_t v42 = v40 | 7;
      }
      uint64_t v43 = v42 + 1;
      uint64_t v41 = (long long *)operator new(v42 + 1);
      *((void *)&xmmword_26788B540 + 1) = v39 + 1;
      unk_26788B550 = v43 | 0x8000000000000000;
      *(void *)&xmmword_26788B540 = v41;
    }
    else
    {
      uint64_t v41 = &xmmword_26788B540;
      unk_26788B550 = 0;
      xmmword_26788B540 = 0uLL;
      byte_26788B557 = v39 + 1;
      if (!v39)
      {
LABEL_108:
        *(_WORD *)((char *)v41 + v39) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B540, &dword_21572C000);
        __cxa_guard_release(&qword_26788B448);
        goto LABEL_62;
      }
    }
    if (v38 >= 0) {
      char v44 = v37;
    }
    else {
      char v44 = *v37;
    }
    memmove(v41, v44, v39);
    goto LABEL_108;
  }
  return v4;
}

void sub_21576A670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47,int a48,__int16 a49,char a50,char a51)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788B448);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21576A778(uint64_t result)
{
  return result;
}

uint64_t sub_21576A788(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 48), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21576A7C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B458, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B458))
  {
    return qword_26788B450;
  }
  qword_26788B450 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B458);
  return qword_26788B450;
}

void *sub_21576A828(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657290, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]);
  }
  return result;
}

void sub_21576A8A4(uint64_t a1)
{
  sub_215753740();
  uint64_t v2 = a1;
  operator new();
}

void sub_21576AB00(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25)
{
  sub_215733368((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v26 = sub_215753740();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v26, (const void **)&__p, 0);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21576AAE4);
}

uint64_t sub_21576ABD0(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 48));
}

uint64_t sub_21576ABDC(uint64_t result)
{
  return result;
}

uint64_t sub_21576ABEC(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21576AC28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B478, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B478))
  {
    return qword_26788B470;
  }
  qword_26788B470 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B478);
  return qword_26788B470;
}

uint64_t sub_21576AC8C(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6573A0, 0);
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v6 = *(uint64_t **)(result + 16);
    if (v4 - v5 == *(void *)(result + 24) - (void)v6)
    {
      if (v5 == v4)
      {
        return 1;
      }
      else
      {
        uint64_t v7 = v5 + 32;
        do
        {
          uint64_t v8 = *v6;
          v6 += 4;
          uint64_t result = *(void *)(v7 - 32) == v8;
          BOOL v9 = *(void *)(v7 - 32) != v8 || v7 == v4;
          v7 += 32;
        }
        while (!v9);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_21576AD58(uint64_t a1)
{
  sub_21576DF54();
  uint64_t v2 = a1;
  operator new();
}

void sub_21576B144(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  sub_215733368((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  int v38 = sub_21576DF54();
  sub_215732BF4(&a32, "failed to create description");
  sub_2157402F0((std::string::size_type)v38, (const void **)&a32, 0);
  if (a37 < 0) {
    operator delete(a32);
  }
  __cxa_end_catch();
  JUMPOUT(0x21576B110);
}

uint64_t sub_21576B248(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

void sub_21576B254(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (!v2) {
    return;
  }
  uint64_t v4 = (char *)v1[1];
  uint64_t v5 = **a1;
  if (v4 == v2) {
    goto LABEL_14;
  }
  do
  {
    uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
    if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      uint64_t v7 = (std::__shared_weak_count *)*((void *)v4 - 3);
      if (!v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = (std::__shared_weak_count *)*((void *)v4 - 3);
      if (!v7) {
        goto LABEL_4;
      }
    }
    if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v4 -= 32;
  }
  while (v4 != v2);
  uint64_t v5 = **a1;
LABEL_14:
  v1[1] = v2;

  operator delete(v5);
}

void sub_21576B37C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C657400;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21576B39C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C657400;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21576B3F0(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    _Block_release(v1);
  }
}

void sub_21576B418(void *a1)
{
  if (a1)
  {
    sub_21576B418(*a1);
    sub_21576B418(a1[1]);
    uint64_t v2 = a1[8];
    a1[8] = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    }
    uint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    uint64_t v4 = (std::__shared_weak_count *)a1[5];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      uint64_t v5 = a1;
    }
    else
    {
      uint64_t v5 = a1;
    }
    operator delete(v5);
  }
}

uint64_t sub_21576B544(char *__s, unint64_t *a2, std::string *a3, unint64_t *a4)
{
  int v9 = 0;
  sub_21576B740(v8, __s);
  std::to_string(&v10, *a2);
  char v11 = (std::string *)v8;
  long long v12 = &v10;
  long long v13 = v8;
  unint64_t v14 = &v10;
  BOOL v15 = &v10;
  if (v9 == -1) {
    sub_215742D4C();
  }
  long long v16 = &v11;
  ((void (*)(std::string ***, _DWORD *))off_26C657458[v9])(&v16, v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  char v11 = (std::string *)v8;
  long long v12 = a3;
  long long v13 = v8;
  unint64_t v14 = a3;
  BOOL v15 = a3;
  if (v9 == -1) {
    sub_215742D4C();
  }
  v10.__r_.__value_.__r.__words[0] = (std::string::size_type)&v11;
  ((void (*)(std::string *, _DWORD *))off_26C657470[v9])(&v10, v8);
  std::to_string(&v10, *a4);
  char v11 = (std::string *)v8;
  long long v12 = &v10;
  long long v13 = v8;
  unint64_t v14 = &v10;
  BOOL v15 = &v10;
  if (v9 == -1) {
    sub_215742D4C();
  }
  long long v16 = &v11;
  ((void (*)(std::string ***, _DWORD *))off_26C657458[v9])(&v16, v8);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (v9 == -1) {
    sub_215742D4C();
  }
  char v11 = &v10;
  uint64_t result = ((uint64_t (*)(std::string **, _DWORD *))off_26C657488[v9])(&v11, v8);
  if (v9 != -1) {
    return ((uint64_t (*)(std::string **, _DWORD *))off_26C657440[v9])(&v11, v8);
  }
  return result;
}

void sub_21576B6F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

_DWORD *sub_21576B740(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C657440[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_21576B834(_DWORD ***a1)
{
  return sub_21576B850(**a1, (char *)(*a1)[1]);
}

void sub_21576B840(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_21576B850(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C657440[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_21576B944(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  long long v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C657440[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_21576BAFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_21576BB40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_21576BC3C((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_21576BC34(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_21576BC3C(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  char v22 = v8;
  long long v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      long long v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  long long v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  long long v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_21576BE3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_21576BE50(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C6574B0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21576BEE8(void *a1)
{
  *a1 = &unk_26C6574B0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21576BF90(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C6574B0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21576BFEC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C6574B0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21576C024(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21576C0A0(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    long long __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

uint64_t sub_21576C13C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 8))
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_21576C280(0, a2);
    uint64_t result = (*(uint64_t (**)(void))(**(void **)(v2 + 8) + 16))();
    if (v3)
    {
      uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 24);
      return v4(v3);
    }
  }
  return result;
}

void sub_21576C1CC(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21576C204(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z27ForwardReceivedMessageBlockU13block_pointerFvPK12VZLogMessageEE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z27ForwardReceivedMessageBlockU13block_pointerFvPK12VZLogMessageEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z27ForwardReceivedMessageBlockU13block_pointerFvPK12VZLogMessageEE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z27ForwardReceivedMessageBlockU13block_pointerFvPK12VZLogMessageEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21576C274()
{
  return &unk_26C657538;
}

uint64_t sub_21576C280(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  sub_21576C554(a2, &v21);
  uint64_t result = (uint64_t)v21;
  if (!v21)
  {
    uint64_t v4 = (uint64_t *)sub_21576C6A0();
    size_t v5 = sub_21576C404();
    if (*((char *)v5 + 23) < 0)
    {
      sub_215738B0C(&__dst, (void *)*v5, v5[1]);
    }
    else
    {
      long long v6 = *(_OWORD *)v5;
      uint64_t v24 = v5[2];
      long long __dst = v6;
    }
    sub_21573A150(&v21, (uint64_t)&__dst, 1uLL);
    v10[0] = 0;
    char v20 = 0;
    sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, a1);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0) {
          operator delete(__p);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
      }
      if (v13 && v12 < 0) {
        operator delete(v11);
      }
    }
    uint64_t v7 = (uint64_t)v21;
    if (v21)
    {
      uint64_t v8 = v22;
      size_t v9 = v21;
      if ((void *)v22 != v21)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0) {
            operator delete(*(void **)(v8 - 24));
          }
          v8 -= 24;
        }
        while (v8 != v7);
        size_t v9 = v21;
      }
      uint64_t v22 = v7;
      operator delete(v9);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__dst);
    }
    return 0;
  }
  return result;
}

void sub_21576C3F8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t *sub_21576C404()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884280, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884280))
  {
    uint64_t v1 = sub_21576C8BC();
    uint64_t v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267884268;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      size_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884270 = v4 + 1;
      unk_267884278 = v8 | 0x8000000000000000;
      qword_267884268 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267884270 = 0;
      unk_267884278 = 0;
      qword_267884268 = 0;
      byte_26788427F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884268, &dword_21572C000);
        __cxa_guard_release(&qword_267884280);
        return &qword_267884268;
      }
    }
    if (v3 >= 0) {
      size_t v10 = v2;
    }
    else {
      size_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884268;
}

void sub_21576C53C(_Unwind_Exception *a1)
{
}

void *sub_21576C554@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = operator new(0x48uLL, MEMORY[0x263F8C180]);
  unint64_t v5 = result;
  if (result)
  {
    void *result = &unk_26C6565D0;
    uint64_t v6 = *(void *)(a1 + 8);
    result[2] = *(void *)a1;
    result[3] = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
    if (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire))
    {
      int v7 = 0;
      do
      {
        if (v7)
        {
          timespec __rqtp = (timespec)xmmword_215E98470;
          uint64_t result = (void *)nanosleep(&__rqtp, 0);
        }
        --v7;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire));
    }
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    if (v8) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v8 + 8), 1u, memory_order_relaxed);
    }
    atomic_store(0, (unsigned __int8 *)(a1 + 32));
    v5[4] = v9;
    v5[5] = v8;
    *((unsigned char *)v5 + 48) = 0;
    *((_DWORD *)v5 + 14) = 1;
    *unint64_t v5 = &unk_26C657E80;
    v5[1] = &unk_26C657ED0;
    v5[8] = 0;
  }
  *a2 = v5;
  return result;
}

long long *sub_21576C6A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884220, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884220))
  {
    return &xmmword_267884208;
  }
  uint64_t v1 = (char *)sub_21576C788();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884208, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884218 = *((void *)v1 + 2);
    xmmword_267884208 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884208, &dword_21572C000);
  __cxa_guard_release(&qword_267884220);
  return &xmmword_267884208;
}

void sub_21576C770(_Unwind_Exception *a1)
{
}

void *sub_21576C788()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884240, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884240))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLogMessage]", qword_267884228);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884228, &dword_21572C000);
    __cxa_guard_release(&qword_267884240);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884260, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884260))
  {
    return &unk_267884248;
  }
  sub_215E19DF4((uint64_t)qword_267884228, (uint64_t)&unk_267884248);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884248, &dword_21572C000);
  __cxa_guard_release(&qword_267884260);
  return &unk_267884248;
}

void sub_21576C88C(_Unwind_Exception *a1)
{
}

void sub_21576C8A4(_Unwind_Exception *a1)
{
}

uint64_t *sub_21576C8BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678842A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678842A0))
  {
    uint64_t v1 = sub_21576CA40();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (char *)operator new(v7 + 1);
      qword_267884290 = v4 + 6;
      unk_267884298 = v8 | 0x8000000000000000;
      qword_267884288 = (uint64_t)v9;
      *(_DWORD *)uint64_t v9 = 1936617315;
      uint64_t v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884290 = 0;
      unk_267884298 = 0;
      qword_267884288 = 0x2074736E6F63;
      byte_26788429F = v4 + 6;
      uint64_t v6 = (char *)&qword_267884288 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884288, &dword_21572C000);
        __cxa_guard_release(&qword_2678842A0);
        return &qword_267884288;
      }
    }
    if (v3 >= 0) {
      size_t v10 = v2;
    }
    else {
      size_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884288;
}

void sub_21576CA28(_Unwind_Exception *a1)
{
}

long long *sub_21576CA40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678842C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678842C0))
  {
    return &xmmword_2678842A8;
  }
  uint64_t v1 = (char *)sub_21576CB28();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678842A8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678842B8 = *((void *)v1 + 2);
    xmmword_2678842A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678842A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678842C0);
  return &xmmword_2678842A8;
}

void sub_21576CB10(_Unwind_Exception *a1)
{
}

void *sub_21576CB28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678842E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678842E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::LogMessage]", qword_2678842C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678842C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678842E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884300, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884300))
  {
    return &unk_2678842E8;
  }
  sub_215E19DF4((uint64_t)qword_2678842C8, (uint64_t)&unk_2678842E8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678842E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884300);
  return &unk_2678842E8;
}

void sub_21576CC2C(_Unwind_Exception *a1)
{
}

void sub_21576CC44(_Unwind_Exception *a1)
{
}

void sub_21576CC60()
{
}

__n128 sub_21576CC74(uint64_t a1)
{
  long long v2 = (char *)operator new(0x18uLL);
  *(void *)long long v2 = &unk_26C657558;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_21576CCC0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C657558;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_21576CCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_21576C280(0, a2);
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*(void *)(a1 + 16), v3);
  if (v3)
  {
    unint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 24);
    return v5(v3);
  }
  return result;
}

void sub_21576CD6C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21576CDA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z30ForwardReceivedMessageFunctionPFvPvPK12VZLogMessageES_E3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z30ForwardReceivedMessageFunctionPFvPvPK12VZLogMessageES_E3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z30ForwardReceivedMessageFunctionPFvPvPK12VZLogMessageES_E3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z30ForwardReceivedMessageFunctionPFvPvPK12VZLogMessageES_E3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21576CE14()
{
  return &unk_26C6575B8;
}

void sub_21576CE20()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B488, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B488))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (^)(const VZLogMessage *)]", qword_26788B570);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B570, &dword_21572C000);
    __cxa_guard_release(&qword_26788B488);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B490, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B490))
  {
    sub_215E19DF4((uint64_t)qword_26788B570, (uint64_t)&xmmword_26788B588);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B588, &dword_21572C000);
    __cxa_guard_release(&qword_26788B490);
  }
}

void sub_21576CF14(_Unwind_Exception *a1)
{
}

void sub_21576CF2C(_Unwind_Exception *a1)
{
}

void sub_21576CF44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4A0))
  {
    sub_21576D204(__p);
    sub_21576D024(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B5B8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4A0);
  }
}

void sub_21576CFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788B4A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788B4A0);
  _Unwind_Resume(a1);
}

void sub_21576D024(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4A8))
  {
    sub_21576D40C();
    if (byte_26788B617 < 0)
    {
      sub_215738B0C(&xmmword_26788B5D0, (void *)xmmword_26788B600, *((unint64_t *)&xmmword_26788B600 + 1));
    }
    else
    {
      xmmword_26788B5D0 = xmmword_26788B600;
      unk_26788B5E0 = unk_26788B610;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B5D0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4A8);
  }
  if (byte_26788B5E7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788B5D0, *((unint64_t *)&xmmword_26788B5D0 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B5D0;
    uint64_t v10 = unk_26788B5E0;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788B5B8, v2, v3);
  size_t v4 = (void **)__p;
  if (__p)
  {
    unint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21576D1BC(_Unwind_Exception *a1)
{
}

void sub_21576D1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21576D204(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::CallbackDestinationOptions>]", qword_26788B618);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B618, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4C8))
  {
    size_t v3 = sub_215747D98(qword_26788B618, "<", 0);
    sub_215747C90(qword_26788B618, 0, v3, qword_26788B630);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B630, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4C8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4D0))
  {
    sub_215E19DF4((uint64_t)qword_26788B630, (uint64_t)&xmmword_26788B648);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B648, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4D0);
  }
  if (byte_26788B65F < 0)
  {
    long long v2 = xmmword_26788B648;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B648;
    __dst[2] = unk_26788B658;
  }
}

void sub_21576D3C4(_Unwind_Exception *a1)
{
}

void sub_21576D3DC(_Unwind_Exception *a1)
{
}

void sub_21576D3F4(_Unwind_Exception *a1)
{
}

void sub_21576D40C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4B0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::CallbackDestinationOptions]", qword_26788B5E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B5E8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4B0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4B8))
  {
    sub_215E19DF4((uint64_t)qword_26788B5E8, (uint64_t)&xmmword_26788B600);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B600, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4B8);
  }
}

void sub_21576D500(_Unwind_Exception *a1)
{
}

void sub_21576D518(_Unwind_Exception *a1)
{
}

void sub_21576D530(uint64_t **a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  size_t v4 = (uint64_t *)sub_215753740();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4D8))
  {
    sub_21576D968();
    if (byte_26788B68F < 0)
    {
      sub_215738B0C(&xmmword_26788B660, (void *)qword_26788B678, unk_26788B680);
    }
    else
    {
      xmmword_26788B660 = *(_OWORD *)&qword_26788B678;
      unk_26788B670 = unk_26788B688;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B660, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4D8);
  }
  if (byte_26788B677 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B660, *((unint64_t *)&xmmword_26788B660 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B660;
    uint64_t v24 = unk_26788B670;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B498, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B498))
  {
    sub_21576CF44();
    if (byte_26788B5CF < 0)
    {
      sub_215738B0C(&xmmword_26788B5A0, (void *)qword_26788B5B8, unk_26788B5C0);
    }
    else
    {
      xmmword_26788B5A0 = *(_OWORD *)&qword_26788B5B8;
      unk_26788B5B0 = unk_26788B5C8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B5A0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B498);
  }
  if (byte_26788B5B7 < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788B5A0, *((unint64_t *)&xmmword_26788B5A0 + 1));
  }
  else
  {
    long long v25 = xmmword_26788B5A0;
    uint64_t v26 = unk_26788B5B0;
  }
  unint64_t v5 = sub_215754F30();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v27, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v28 = v5[2];
    long long v27 = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_17;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_17:
        if (!v13) {
          goto LABEL_20;
        }
LABEL_18:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_20;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_17;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    uint64_t v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v28) < 0)
  {
    operator delete((void *)v27);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_30:
      if ((SHIBYTE(v24) & 0x80000000) == 0) {
        return;
      }
LABEL_34:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    goto LABEL_30;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_34;
  }
}

void sub_21576D894(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788B498);
  while (1)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
    if (v1 == v2 - 128) {
      _Unwind_Resume(a1);
    }
  }
}

void sub_21576D968()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4E0))
  {
    sub_21576DC28(__p);
    sub_21576DA48(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B678, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4E0);
  }
}

void sub_21576DA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788B4E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788B4E0);
  _Unwind_Resume(a1);
}

void sub_21576DA48(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4E8))
  {
    sub_21576DE30();
    if (byte_26788B6D7 < 0)
    {
      sub_215738B0C(&xmmword_26788B690, (void *)xmmword_26788B6C0, *((unint64_t *)&xmmword_26788B6C0 + 1));
    }
    else
    {
      xmmword_26788B690 = xmmword_26788B6C0;
      unk_26788B6A0 = unk_26788B6D0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B690, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4E8);
  }
  if (byte_26788B6A7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788B690, *((unint64_t *)&xmmword_26788B690 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B690;
    uint64_t v10 = unk_26788B6A0;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788B678, v2, v3);
  size_t v4 = (void **)__p;
  if (__p)
  {
    unint64_t v5 = v8;
    long long v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      long long v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21576DBE0(_Unwind_Exception *a1)
{
}

void sub_21576DBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21576DC28(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B500, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B500))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::function<void (const cv3d::vl::visual_logger::LogMessage &)>]", qword_26788B6D8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B6D8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B500);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B508, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B508))
  {
    size_t v3 = sub_215747D98(qword_26788B6D8, "<", 0);
    sub_215747C90(qword_26788B6D8, 0, v3, qword_26788B6F0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B6F0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B508);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B510, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B510))
  {
    sub_215E19DF4((uint64_t)qword_26788B6F0, (uint64_t)&xmmword_26788B708);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B708, &dword_21572C000);
    __cxa_guard_release(&qword_26788B510);
  }
  if (byte_26788B71F < 0)
  {
    long long v2 = xmmword_26788B708;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788B708;
    __dst[2] = unk_26788B718;
  }
}

void sub_21576DDE8(_Unwind_Exception *a1)
{
}

void sub_21576DE00(_Unwind_Exception *a1)
{
}

void sub_21576DE18(_Unwind_Exception *a1)
{
}

void sub_21576DE30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4F0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (const cv3d::vl::visual_logger::LogMessage &)]", qword_26788B6A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B6A8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4F0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B4F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B4F8))
  {
    sub_215E19DF4((uint64_t)qword_26788B6A8, (uint64_t)&xmmword_26788B6C0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B6C0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B4F8);
  }
}

void sub_21576DF24(_Unwind_Exception *a1)
{
}

void sub_21576DF3C(_Unwind_Exception *a1)
{
}

long long *sub_21576DF54()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884320, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884320))
  {
    return &xmmword_267884308;
  }
  char v1 = (char *)sub_21576E03C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884308, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884318 = *((void *)v1 + 2);
    xmmword_267884308 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884308, &dword_21572C000);
  __cxa_guard_release(&qword_267884320);
  return &xmmword_267884308;
}

void sub_21576E024(_Unwind_Exception *a1)
{
}

void *sub_21576E03C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884340))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZDestinationList]", qword_267884328);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884328, &dword_21572C000);
    __cxa_guard_release(&qword_267884340);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884360, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884360))
  {
    return &unk_267884348;
  }
  sub_215E19DF4((uint64_t)qword_267884328, (uint64_t)&unk_267884348);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884348, &dword_21572C000);
  __cxa_guard_release(&qword_267884360);
  return &unk_267884348;
}

void sub_21576E140(_Unwind_Exception *a1)
{
}

void sub_21576E158(_Unwind_Exception *a1)
{
}

uint64_t *sub_21576E170()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884380, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884380))
  {
    char v1 = sub_21576E2C0();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267884368;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884370 = v4 + 1;
      unk_267884378 = v8 | 0x8000000000000000;
      qword_267884368 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267884370 = 0;
      unk_267884378 = 0;
      qword_267884368 = 0;
      byte_26788437F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884368, &dword_21572C000);
        __cxa_guard_release(&qword_267884380);
        return &qword_267884368;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884368;
}

void sub_21576E2A8(_Unwind_Exception *a1)
{
}

uint64_t *sub_21576E2C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678843A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678843A0))
  {
    char v1 = sub_215753740();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (char *)operator new(v7 + 1);
      qword_267884390 = v4 + 6;
      unk_267884398 = v8 | 0x8000000000000000;
      qword_267884388 = (uint64_t)v9;
      *(_DWORD *)uint64_t v9 = 1936617315;
      long long v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884390 = 0;
      unk_267884398 = 0;
      qword_267884388 = 0x2074736E6F63;
      byte_26788439F = v4 + 6;
      long long v6 = (char *)&qword_267884388 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884388, &dword_21572C000);
        __cxa_guard_release(&qword_2678843A0);
        return &qword_267884388;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884388;
}

void sub_21576E42C(_Unwind_Exception *a1)
{
}

uint64_t *sub_21576E444()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678843C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678843C0))
  {
    char v1 = sub_21576E594();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_2678843A8;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_2678843B0 = v4 + 1;
      unk_2678843B8 = v8 | 0x8000000000000000;
      qword_2678843A8 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_2678843B0 = 0;
      unk_2678843B8 = 0;
      qword_2678843A8 = 0;
      byte_2678843BF = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_2678843A8, &dword_21572C000);
        __cxa_guard_release(&qword_2678843C0);
        return &qword_2678843A8;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_2678843A8;
}

void sub_21576E57C(_Unwind_Exception *a1)
{
}

uint64_t *sub_21576E594()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678843E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678843E0))
  {
    char v1 = sub_21576DF54();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (char *)operator new(v7 + 1);
      qword_2678843D0 = v4 + 6;
      unk_2678843D8 = v8 | 0x8000000000000000;
      qword_2678843C8 = (uint64_t)v9;
      *(_DWORD *)uint64_t v9 = 1936617315;
      long long v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_2678843D0 = 0;
      unk_2678843D8 = 0;
      qword_2678843C8 = 0x2074736E6F63;
      byte_2678843DF = v4 + 6;
      long long v6 = (char *)&qword_2678843C8 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_2678843C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678843E0);
        return &qword_2678843C8;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_2678843C8;
}

void sub_21576E700(_Unwind_Exception *a1)
{
}

_DWORD *sub_21576E718(_DWORD ***a1)
{
  return sub_21576E734(**a1, (char *)(*a1)[1]);
}

void sub_21576E724(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_21576E734(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C657440[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_21576E828(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  int v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C657440[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_21576E9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_21576EA24(uint64_t a1, uint64_t a2)
{
  int v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_21576EB20((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_21576EB18(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_21576EB20(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  unint64_t v21 = v8;
  uint64_t v22 = v8;
  long long v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *uint64_t v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  char v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_21576ED20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21576ED34()
{
}

void sub_21576EF2C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_21576EF50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21576EF94(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21576F010(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21576F080(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21576F10C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZDictionaryGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B7A0))
  {
    return qword_26788B798;
  }
  qword_26788B798 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B7A0);
  return qword_26788B798;
}

uint64_t VZDataCreateWithDictionary(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_21576F7B8((uint64_t)"VZDataCreateWithDictionary", a1, a3))
  {
    sub_215744D68(a2, v9);
    size_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_215834898(a1 + 16, v10);
  }
  return 0;
}

void sub_21576F5AC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21576F5B4);
  }
  _Unwind_Resume(a1);
}

void sub_21576F5C4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      size_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215772154(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      size_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      unint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        unint64_t v6 = *(const char **)v6;
      }
      size_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215772154(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215772154(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21576F4ACLL);
  }
  _Unwind_Resume(a1);
}

void sub_21576F5DC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21576F5E8);
  }
  _Unwind_Resume(a1);
}

void sub_21576F7A0(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21576F7A8);
  }
  sub_215731D80(a1);
}

BOOL sub_21576F7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7A8))
  {
    sub_215771DC0();
    int v7 = byte_26788B80F;
    if (byte_26788B80F >= 0) {
      size_t v8 = byte_26788B80F;
    }
    else {
      size_t v8 = qword_26788B800;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788B7E0 + 1) = v8 + 1;
      unk_26788B7F0 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788B7E0 = v10;
    }
    else
    {
      unk_26788B7F0 = 0;
      xmmword_26788B7E0 = 0uLL;
      char v10 = &xmmword_26788B7E0;
      byte_26788B7F7 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B7E0, &dword_21572C000);
        __cxa_guard_release(&qword_26788B7A8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788B7F8;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788B7F8;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788B7F7 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788B7E0, *((unint64_t *)&xmmword_26788B7E0 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788B7E0;
    uint64_t v15 = unk_26788B7F0;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21576FAEC(_Unwind_Exception *a1)
{
}

void sub_21576FB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetVZDictionary(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetVZDictionary", a1, a2)) {
    return 0;
  }
  unint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_215834DF0(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157724F8(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_2157726B4((uint64_t)&v20);
  unint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    unint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)unint64_t v6 = &unk_26C6575D8;
    *((void *)v6 + 1) = &unk_26C657628;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157724F8(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      unint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    unint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    unint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_21576FDD4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    long long v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157724F8((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157724F8((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x21576FDB0);
  }
  uint64_t v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  char v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    char v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157724F8((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZDictionaryCreateWithJsonString(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!sub_2157569A8((uint64_t)"VZDictionaryCreateWithJsonString", (uint64_t)a1, a4))
  {
    int v7 = &v8;
    uint64_t v8 = a4;
    sub_215834000(a1);
  }
  return 0;
}

void sub_2157705D4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,unint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0) {
        operator delete(__p);
      }
      if (a55 < 0) {
        operator delete(a50);
      }
    }
    if (a49 && a48 < 0) {
      operator delete(a43);
    }
  }
  if (*(unsigned char *)(v68 - 72))
  {
    char v71 = *(std::__shared_weak_count **)(v68 - 184);
    if (v71 && !atomic_fetch_add(&v71->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
      std::__shared_weak_count::__release_weak(v71);
    }
  }
  else if (*(unsigned char *)(v68 - 80))
  {
    if (*(unsigned char *)(v68 - 88))
    {
      if (*(char *)(v68 - 89) < 0) {
        operator delete(*(void **)(v68 - 112));
      }
      if (*(char *)(v68 - 121) < 0) {
        operator delete(*(void **)(v68 - 144));
      }
    }
    if (*(unsigned char *)(v68 - 152) && *(char *)(v68 - 153) < 0) {
      operator delete(*(void **)(v68 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    size_t v73 = std::logic_error::what(&a10);
    size_t v74 = strlen(v73);
    if (v74 <= 0x7FFFFFFFFFFFFFF7)
    {
      long long v75 = (const char *)v74;
      if (v74 >= 0x17)
      {
        uint64_t v84 = (v74 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v74 | 7) != 0x17) {
          uint64_t v84 = v74 | 7;
        }
        uint64_t v85 = v84 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v84 + 1);
        __dst.__imp_.__imp_ = v75;
        a37 = v85 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        HIBYTE(a37) = v74;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v74)
        {
LABEL_53:
          v75[(void)p_dst] = 0;
          a38 = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          *(_OWORD *)(v67 + 176) = a13;
          sub_215741BFC((unsigned char *)(v68 - 176), &a14);
          *(unsigned char *)(v68 - 72) = 1;
          sub_215772780((uint64_t **)(v68 - 64), v68 - 192);
          if (*(unsigned char *)(v68 - 72) && *(unsigned char *)(v68 - 80))
          {
            if (*(unsigned char *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0) {
                operator delete(*(void **)(v68 - 112));
              }
              if (*(char *)(v68 - 121) < 0) {
                operator delete(*(void **)(v68 - 144));
              }
            }
            if (*(unsigned char *)(v68 - 152) && *(char *)(v68 - 153) < 0) {
              operator delete(*(void **)(v68 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (a38)
          {
            if (SHIBYTE(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v73, (size_t)v75);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v68 - 192) = 0;
    *(unsigned char *)(v68 - 72) = 0;
    sub_215772780((uint64_t **)(v68 - 64), v68 - 192);
    if (*(unsigned char *)(v68 - 72) && *(unsigned char *)(v68 - 80))
    {
      if (*(unsigned char *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0) {
          operator delete(*(void **)(v68 - 112));
        }
        if (*(char *)(v68 - 121) < 0) {
          operator delete(*(void **)(v68 - 144));
        }
      }
      if (*(unsigned char *)(v68 - 152) && *(char *)(v68 - 153) < 0) {
        operator delete(*(void **)(v68 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157705B4);
  }
  uint64_t v77 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v77);
  *(_OWORD *)(v67 + 16) = *((_OWORD *)v77 + 1);
  uint64_t v79 = *((void *)v77 + 4);
  uint64_t v78 = *((void *)v77 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a39 = v79;
  a40 = v78;
  if (v78) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v78 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v80 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0) {
    size_t v80 = *(const char **)v80;
  }
  size_t v81 = strlen(v80);
  if (v81 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v82 = (const char *)v81;
  if (v81 >= 0x17)
  {
    uint64_t v86 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17) {
      uint64_t v86 = v81 | 7;
    }
    uint64_t v87 = v86 + 1;
    uint64_t v83 = (std::logic_error_vtbl *)operator new(v86 + 1);
    a10.__imp_.__imp_ = v82;
    a11 = v87 | 0x8000000000000000;
    a10.__vftable = v83;
  }
  else
  {
    HIBYTE(a11) = v81;
    uint64_t v83 = (std::logic_error_vtbl *)&a10;
    if (!v81)
    {
LABEL_80:
      v82[(void)v83] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      *(_OWORD *)(v67 + 176) = a13;
      sub_215741BFC((unsigned char *)(v68 - 176), &a14);
      *(unsigned char *)(v68 - 72) = 1;
      sub_215772780((uint64_t **)(v68 - 64), v68 - 192);
      if (*(unsigned char *)(v68 - 72) && *(unsigned char *)(v68 - 80))
      {
        if (*(unsigned char *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0) {
            operator delete(*(void **)(v68 - 112));
          }
          if (*(char *)(v68 - 121) < 0) {
            operator delete(*(void **)(v68 - 144));
          }
        }
        if (*(unsigned char *)(v68 - 152) && *(char *)(v68 - 153) < 0) {
          operator delete(*(void **)(v68 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v83, v80, (size_t)v82);
  goto LABEL_80;
}

void VZDictionaryCreateWithCFDictionary(CFTypeRef cf)
{
  sub_215DD1B28((int)&v1, cf, 1);
}

void sub_215770E98(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v69 - 72))
  {
    long long v72 = *(std::__shared_weak_count **)(v69 - 184);
    if (v72 && !atomic_fetch_add(&v72->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
      std::__shared_weak_count::__release_weak(v72);
    }
  }
  else if (*(unsigned char *)(v69 - 80))
  {
    if (*(unsigned char *)(v69 - 88))
    {
      if (*(char *)(v69 - 89) < 0) {
        operator delete(*(void **)(v69 - 112));
      }
      if (*(char *)(v69 - 121) < 0) {
        operator delete(*(void **)(v69 - 144));
      }
    }
    if (*(unsigned char *)(v69 - 152) && *(char *)(v69 - 153) < 0) {
      operator delete(*(void **)(v69 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    size_t v74 = std::logic_error::what(&a10);
    size_t v75 = strlen(v74);
    if (v75 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v76 = (const char *)v75;
      if (v75 >= 0x17)
      {
        uint64_t v85 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v75 | 7) != 0x17) {
          uint64_t v85 = v75 | 7;
        }
        uint64_t v86 = v85 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v85 + 1);
        __dst.__imp_.__imp_ = v76;
        *(void *)&a37 = v86 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v75;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v75)
        {
LABEL_54:
          v76[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a69 = a13;
          sub_215741BFC((unsigned char *)(v69 - 176), &a14);
          *(unsigned char *)(v69 - 72) = 1;
          sub_215772B54((uint64_t **)(v69 - 64), v69 - 192);
          if (*(unsigned char *)(v69 - 72) && *(unsigned char *)(v69 - 80))
          {
            if (*(unsigned char *)(v69 - 88))
            {
              if (*(char *)(v69 - 89) < 0) {
                operator delete(*(void **)(v69 - 112));
              }
              if (*(char *)(v69 - 121) < 0) {
                operator delete(*(void **)(v69 - 144));
              }
            }
            if (*(unsigned char *)(v69 - 152) && *(char *)(v69 - 153) < 0) {
              operator delete(*(void **)(v69 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_105;
        }
      }
      memmove(p_dst, v74, (size_t)v76);
      goto LABEL_54;
    }
LABEL_104:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v69 - 192) = 0;
    *(unsigned char *)(v69 - 72) = 0;
    sub_215772B54((uint64_t **)(v69 - 64), v69 - 192);
    if (*(unsigned char *)(v69 - 72) && *(unsigned char *)(v69 - 80))
    {
      if (*(unsigned char *)(v69 - 88))
      {
        if (*(char *)(v69 - 89) < 0) {
          operator delete(*(void **)(v69 - 112));
        }
        if (*(char *)(v69 - 121) < 0) {
          operator delete(*(void **)(v69 - 144));
        }
      }
      if (*(unsigned char *)(v69 - 152) && *(char *)(v69 - 153) < 0) {
        operator delete(*(void **)(v69 - 176));
      }
    }
    __cxa_end_catch();
LABEL_105:
    JUMPOUT(0x215770E78);
  }
  uint64_t v78 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v78);
  a37 = *((_OWORD *)v78 + 1);
  uint64_t v80 = *((void *)v78 + 4);
  uint64_t v79 = *((void *)v78 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v80;
  a39 = v79;
  if (v79) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v79 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v81 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    size_t v81 = *(const char **)v81;
  }
  size_t v82 = strlen(v81);
  if (v82 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_104;
  }
  uint64_t v83 = (const char *)v82;
  if (v82 >= 0x17)
  {
    uint64_t v87 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17) {
      uint64_t v87 = v82 | 7;
    }
    uint64_t v88 = v87 + 1;
    uint64_t v84 = (std::logic_error_vtbl *)operator new(v87 + 1);
    a10.__imp_.__imp_ = v83;
    a11 = v88 | 0x8000000000000000;
    a10.__vftable = v84;
  }
  else
  {
    HIBYTE(a11) = v82;
    uint64_t v84 = (std::logic_error_vtbl *)&a10;
    if (!v82)
    {
LABEL_81:
      v83[(void)v84] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a69 = a13;
      sub_215741BFC((unsigned char *)(v69 - 176), &a14);
      *(unsigned char *)(v69 - 72) = 1;
      sub_215772B54((uint64_t **)(v69 - 64), v69 - 192);
      if (*(unsigned char *)(v69 - 72) && *(unsigned char *)(v69 - 80))
      {
        if (*(unsigned char *)(v69 - 88))
        {
          if (*(char *)(v69 - 89) < 0) {
            operator delete(*(void **)(v69 - 112));
          }
          if (*(char *)(v69 - 121) < 0) {
            operator delete(*(void **)(v69 - 144));
          }
        }
        if (*(unsigned char *)(v69 - 152) && *(char *)(v69 - 153) < 0) {
          operator delete(*(void **)(v69 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_105;
    }
  }
  memmove(v84, v81, (size_t)v83);
  goto LABEL_81;
}

char *VZDictionaryGetAsJsonString(uint64_t a1, uint64_t a2)
{
  if (sub_21576F7B8((uint64_t)"VZDictionaryGetAsJsonString", a1, a2)) {
    return 0;
  }
  uint64_t result = (char *)sub_215CE8CAC(*(void *)(a1 + 16), 0);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t VZDictionaryGetAsFormattedJsonString(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (sub_21576F7B8((uint64_t)"VZDictionaryGetAsFormattedJsonString", a1, a4)) {
    return 0;
  }
  sub_215833810((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v10);
  uint64_t v8 = sub_215771578((uint64_t)"VZDictionaryGetAsFormattedJsonString", v10, 0, a4);
  if (v20 || !v19) {
    return v8;
  }
  if (v18)
  {
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v15 < 0) {
      operator delete(v14);
    }
  }
  if (!v13 || (v12 & 0x80000000) == 0) {
    return v8;
  }
  operator delete(v11);
  return v8;
}

void sub_215771564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215771578(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  if (a2[120]) {
    return *(void *)a2;
  }
  uint64_t v5 = a3;
  sub_21574F3D8("in function ", (const char *)&v20);
  sub_215E11614(a2, &v8, (uint64_t)&v10);
  sub_21573E208(&v10, a4);
  if (v19)
  {
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    if (v13)
    {
      if (v12 < 0) {
        operator delete(v11);
      }
    }
  }
  if ((v9 & 0x80000000) == 0) {
    return v5;
  }
  operator delete(v8);
  return v5;
}

void sub_215771664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZDictionaryGetAsCFDictionary(uint64_t a1, uint64_t a2)
{
  if (!sub_21576F7B8((uint64_t)"VZDictionaryGetAsCFDictionary", a1, a2)) {
    sub_215833C10((void *)(a1 + 16));
  }
  return 0;
}

void sub_215771858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_21574A71C((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_21574A71C((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_2157718A0(uint64_t result)
{
  return result;
}

uint64_t sub_2157718B0(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157718EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B7A0))
  {
    return qword_26788B798;
  }
  qword_26788B798 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B7A0);
  return qword_26788B798;
}

void *sub_215771950(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657688, 0);
  if (result) {
    return (void *)sub_215CE9390(*(void *)(a1 + 16), result[2]);
  }
  return result;
}

uint64_t sub_2157719D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  sub_215771F5C();
  sub_215732BF4(v20, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788B810, v20, 0);
  if (v21 < 0) {
    operator delete((void *)v20[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_215771A2C(uint64_t a1)
{
  sub_215771F5C();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215771CD4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_215771F5C();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788B810, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215771DB4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_215771DC0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7B0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B7B0))
  {
    return;
  }
  sub_215771F5C();
  int v0 = byte_26788B827;
  if (byte_26788B827 >= 0) {
    size_t v1 = byte_26788B827;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788B810 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    unint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788B800 = v1 + 6;
    unk_26788B808 = v5 | 0x8000000000000000;
    qword_26788B7F8 = (uint64_t)v6;
    *(_DWORD *)unint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    unint64_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788B800 = 0;
  unk_26788B808 = 0;
  qword_26788B7F8 = 0x2074736E6F63;
  byte_26788B80F = v1 + 6;
  unint64_t v3 = (char *)&qword_26788B7F8 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788B810;
    }
    else {
      int v7 = (long long *)xmmword_26788B810;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788B7F8, &dword_21572C000);

  __cxa_guard_release(&qword_26788B7B0);
}

void sub_215771F44(_Unwind_Exception *a1)
{
}

void sub_215771F5C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7B8))
  {
    sub_215772030();
    if (byte_26788B857 < 0)
    {
      sub_215738B0C(&xmmword_26788B810, (void *)xmmword_26788B840, *((unint64_t *)&xmmword_26788B840 + 1));
    }
    else
    {
      xmmword_26788B810 = xmmword_26788B840;
      unk_26788B820 = unk_26788B850;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B810, &dword_21572C000);
    __cxa_guard_release(&qword_26788B7B8);
  }
}

void sub_215772018(_Unwind_Exception *a1)
{
}

void sub_215772030()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZDictionary]", qword_26788B828);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788B828, &dword_21572C000);
    __cxa_guard_release(&qword_26788B7C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7C8))
  {
    sub_215E19DF4((uint64_t)qword_26788B828, (uint64_t)&xmmword_26788B840);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B840, &dword_21572C000);
    __cxa_guard_release(&qword_26788B7C8);
  }
}

void sub_215772124(_Unwind_Exception *a1)
{
}

void sub_21577213C(_Unwind_Exception *a1)
{
}

void sub_215772154(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7D0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B7D0))
  {
    goto LABEL_2;
  }
  sub_215771DC0();
  int v10 = byte_26788B80F;
  if (byte_26788B80F >= 0) {
    size_t v11 = byte_26788B80F;
  }
  else {
    size_t v11 = qword_26788B800;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    char v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788B858 + 1) = v11 + 1;
    unk_26788B868 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788B858 = v13;
    goto LABEL_43;
  }
  char v13 = &xmmword_26788B858;
  unk_26788B868 = 0;
  xmmword_26788B858 = 0uLL;
  byte_26788B86F = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788B7F8;
    }
    else {
      char v16 = (uint64_t *)qword_26788B7F8;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B858, &dword_21572C000);
  __cxa_guard_release(&qword_26788B7D0);
LABEL_2:
  if (byte_26788B86F < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788B858, *((unint64_t *)&xmmword_26788B858 + 1));
  }
  else
  {
    long long __dst = xmmword_26788B858;
    uint64_t v31 = unk_26788B868;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    uint64_t v8 = v29;
    char v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      char v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_215772480(_Unwind_Exception *a1)
{
}

void sub_215772498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157724F8(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_215771F5C();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788B810, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    uint64_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      uint64_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_215772678(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157726B4(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_21577273C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215772750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_21577276C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215772780(uint64_t **a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  sub_215771F5C();
  uint64_t v4 = sub_21575C17C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7D8))
  {
    unk_26788B880 = 0x500000000000000;
    xmmword_26788B870 = 0x266C6F6F62uLL;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B870, &dword_21572C000);
    __cxa_guard_release(&qword_26788B7D8);
  }
  if (byte_26788B887 < 0)
  {
    sub_215738B0C(&v24, (void *)xmmword_26788B870, *((unint64_t *)&xmmword_26788B870 + 1));
  }
  else
  {
    long long v24 = xmmword_26788B870;
    uint64_t v25 = unk_26788B880;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B7D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B7D8))
  {
    unk_26788B880 = 0x500000000000000;
    xmmword_26788B870 = 0x266C6F6F62uLL;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B870, &dword_21572C000);
    __cxa_guard_release(&qword_26788B7D8);
  }
  if (byte_26788B887 < 0)
  {
    sub_215738B0C(&v26, (void *)xmmword_26788B870, *((unint64_t *)&xmmword_26788B870 + 1));
  }
  else
  {
    long long v26 = xmmword_26788B870;
    uint64_t v27 = unk_26788B880;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788B810, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (v19 && v18)
  {
    if (!v17) {
      goto LABEL_17;
    }
    if (v16 < 0)
    {
      operator delete(v15);
      if ((v14 & 0x80000000) == 0)
      {
LABEL_17:
        if (!v12) {
          goto LABEL_20;
        }
LABEL_18:
        if (v11 < 0) {
          operator delete(__p);
        }
        goto LABEL_20;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      goto LABEL_17;
    }
    operator delete(v13);
    if (!v12) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v6 = (void **)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    uint64_t v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      uint64_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v27) < 0)
  {
    operator delete((void *)v26);
    if ((SHIBYTE(v25) & 0x80000000) == 0)
    {
LABEL_30:
      if ((SHIBYTE(v23) & 0x80000000) == 0) {
        return;
      }
LABEL_34:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    goto LABEL_30;
  }
  operator delete((void *)v24);
  if (SHIBYTE(v23) < 0) {
    goto LABEL_34;
  }
}

void sub_215772AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  while (1)
  {
    if (*(char *)(v26 - 1) < 0) {
      operator delete(*(void **)(v26 - 24));
    }
    v26 -= 24;
    if (v26 == v27 - 144) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_215772B54(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_215771F5C();
  uint64_t v4 = sub_215761048();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v23 = *((void *)v4 + 2);
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788B810, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    uint64_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      uint64_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_215772CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC((void **)(v9 - 80));
  if (*(char *)(v9 - 25) < 0)
  {
    operator delete(*(void **)(v9 - 48));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215772D1C(uint64_t a1)
{
  return a1;
}

void sub_215772D4C(uint64_t a1)
{
}

void sub_215772D5C(uint64_t a1)
{
  sub_21573AE84(a1 + 16, *(char **)(a1 + 24));

  JUMPOUT(0x2166C4D20);
}

void sub_215772DAC(uint64_t a1)
{
  sub_21573AE84(a1 + 8, *(char **)(a1 + 16));

  JUMPOUT(0x2166C4D20);
}

uint64_t VZEnableStatesGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B890, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B890))
  {
    return qword_26788B888;
  }
  qword_26788B888 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B890);
  return qword_26788B888;
}

_OWORD *VZEnableStatesCreate()
{
  uint64_t result = operator new(0x30uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[1] = 0u;
    result[2] = 0u;
    *((_DWORD *)result + 10) = 1;
    *(void *)uint64_t result = &unk_26C6576E8;
    *((void *)result + 1) = &unk_26C657738;
    *((void *)result + 2) = (char *)result + 24;
  }
  else
  {
    size_t v1 = (uint64_t *)sub_2157741C4();
    char v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    v5[0] = 0;
    char v15 = 0;
    sub_21574086C(v1, (uint64_t *)&v16, (uint64_t)v5, 0);
    if (v15 && v14)
    {
      if (v13)
      {
        if (v12 < 0) {
          operator delete(__p);
        }
        if (v10 < 0) {
          operator delete(v9);
        }
      }
      if (v8 && v7 < 0) {
        operator delete(v6);
      }
    }
    uint64_t v2 = (uint64_t)v16;
    if (v16)
    {
      uint64_t v3 = v17;
      uint64_t v4 = v16;
      if ((void *)v17 != v16)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0) {
            operator delete(*(void **)(v3 - 24));
          }
          v3 -= 24;
        }
        while (v3 != v2);
        uint64_t v4 = v16;
      }
      uint64_t v17 = v2;
      operator delete(v4);
    }
    return 0;
  }
  return result;
}

uint64_t VZEnableStatesGetSize(uint64_t a1)
{
  BOOL v2 = sub_215773008((uint64_t)"VZEnableStatesGetSize", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 32);
  }
  return result;
}

BOOL sub_215773008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v6 = sub_2157743E0();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)uint64_t v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215773204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL VZEnableStatesContainsKey(uint64_t a1, char *a2)
{
  if (sub_215773008((uint64_t)"VZEnableStatesContainsKey", a1, 0)
    || sub_2157569A8((uint64_t)"VZEnableStatesContainsKey", (uint64_t)a2, 0))
  {
    return 0;
  }

  return sub_215836914(a1 + 16, a2);
}

uint64_t VZEnableStatesGet(uint64_t a1, char *a2)
{
  if (sub_215773008((uint64_t)"VZEnableStatesGet", a1, 0)) {
    return 255;
  }
  if (sub_2157569A8((uint64_t)"VZEnableStatesGet", (uint64_t)a2, 0)) {
    return 255;
  }
  sub_215836A14(a2, a1 + 16, (uint64_t)v6);
  uint64_t v4 = sub_2157733DC((uint64_t)"VZEnableStatesGet", v6, 255, 0);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_2157733C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157733DC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  if (a2[120]) {
    return *a2;
  }
  uint64_t v5 = a3;
  sub_21574F3D8("in function ", (const char *)&v20);
  sub_215E11614(a2, &v8, (uint64_t)&v10);
  sub_21573E208(&v10, a4);
  if (v19)
  {
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    if (v13)
    {
      if (v12 < 0) {
        operator delete(v11);
      }
    }
  }
  if ((v9 & 0x80000000) == 0) {
    return v5;
  }
  operator delete(v8);
  return v5;
}

void sub_2157734C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZEnableStatesGetKeyAt(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (sub_215773008((uint64_t)"VZEnableStatesGetKeyAt", a1, 0)) {
    return v4;
  }
  sub_215836E88(a1 + 16, a2, (uint64_t)v6);
  uint64_t v4 = sub_215771578((uint64_t)"VZEnableStatesGetKeyAt", v6, 0, 0);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_2157735DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZEnableStatesGetValueAt(uint64_t a1, uint64_t a2)
{
  if (sub_215773008((uint64_t)"VZEnableStatesGetValueAt", a1, 0)) {
    return 255;
  }
  sub_21583739C(a1 + 16, a2, (uint64_t)v6);
  uint64_t v4 = sub_2157733DC((uint64_t)"VZEnableStatesGetValueAt", v6, 255, 0);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_2157736CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZEnableStatesSet(uint64_t a1, char *a2, unsigned int a3)
{
  if (sub_215773814((uint64_t)"VZEnableStatesSet", a1)) {
    return 0;
  }
  if (sub_2157569A8((uint64_t)"VZEnableStatesSet", (uint64_t)a2, 0)) {
    return 0;
  }
  sub_215837650(a2, (uint64_t **)(a1 + 16), a3, (uint64_t)v8);
  uint64_t v6 = sub_21574D0E8((uint64_t)"VZEnableStatesSet", v8, 0, 0);
  if (v18 || !v17) {
    return v6;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  if (!v11 || (v10 & 0x80000000) == 0) {
    return v6;
  }
  operator delete(v9);
  return v6;
}

void sub_215773800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_215773814(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B898, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B898))
  {
    uint64_t v5 = sub_2157741C4();
    uint64_t v6 = (const void **)v5;
    int v7 = *((char *)v5 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      size_t v8 = *((void *)v5 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788B8A0 + 1) = v8 + 1;
      unk_26788B8B0 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788B8A0 = v10;
    }
    else
    {
      unk_26788B8B0 = 0;
      xmmword_26788B8A0 = 0uLL;
      char v10 = &xmmword_26788B8A0;
      byte_26788B8B7 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788B8A0, &dword_21572C000);
        __cxa_guard_release(&qword_26788B898);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = v6;
    }
    else {
      char v13 = *v6;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788B8B7 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788B8A0, *((unint64_t *)&xmmword_26788B8A0 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788B8A0;
    uint64_t v15 = unk_26788B8B0;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, 0);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215773B3C(_Unwind_Exception *a1)
{
}

void sub_215773B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL VZEnableStatesRemove(uint64_t a1, char *a2)
{
  if (sub_215773814((uint64_t)"VZEnableStatesRemove", a1)
    || sub_2157569A8((uint64_t)"VZEnableStatesRemove", (uint64_t)a2, 0))
  {
    return 0;
  }

  return sub_2158378B4((uint64_t **)(a1 + 16), a2);
}

uint64_t sub_215773C08(uint64_t result)
{
  return result;
}

uint64_t sub_215773C18(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215773C54()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B890, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B890))
  {
    return qword_26788B888;
  }
  qword_26788B888 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B890);
  return qword_26788B888;
}

uint64_t sub_215773CB8(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657780, 0);
  if (result)
  {
    if (a1[4] == *(void *)(result + 32))
    {
      uint64_t v4 = (void *)a1[2];
      uint64_t v5 = a1 + 3;
      if (v4 == v5)
      {
        return 1;
      }
      else
      {
        uint64_t v6 = *(void **)(result + 16);
        while (1)
        {
          uint64_t v7 = *((unsigned __int8 *)v4 + 55);
          if ((v7 & 0x80u) == 0) {
            uint64_t v8 = *((unsigned __int8 *)v4 + 55);
          }
          else {
            uint64_t v8 = v4[5];
          }
          uint64_t v9 = *((unsigned __int8 *)v6 + 55);
          int v10 = (char)v9;
          if ((v9 & 0x80u) != 0) {
            uint64_t v9 = v6[5];
          }
          if (v8 != v9) {
            return 0;
          }
          uint64_t v11 = (const void **)(v4 + 4);
          if (v10 >= 0) {
            uint64_t v12 = (unsigned __int8 *)(v6 + 4);
          }
          else {
            uint64_t v12 = (unsigned __int8 *)v6[4];
          }
          if ((v7 & 0x80) != 0)
          {
            BOOL v13 = memcmp(*v11, v12, v4[5]) == 0;
            uint64_t result = 0;
            if (!v13) {
              return result;
            }
          }
          else
          {
            if (*((unsigned char *)v4 + 55))
            {
              while (*(unsigned __int8 *)v11 == *v12)
              {
                uint64_t v11 = (const void **)((char *)v11 + 1);
                ++v12;
                if (!--v7) {
                  goto LABEL_18;
                }
              }
              return 0;
            }
LABEL_18:
            uint64_t result = 0;
          }
          if (*((unsigned __int8 *)v4 + 56) == *((unsigned __int8 *)v6 + 56))
          {
            char v14 = (void *)v4[1];
            uint64_t v15 = v4;
            if (v14)
            {
              do
              {
                uint64_t v4 = v14;
                char v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                uint64_t v4 = (void *)v15[2];
                BOOL v16 = *v4 == (void)v15;
                uint64_t v15 = v4;
              }
              while (!v16);
            }
            long long v17 = (void *)v6[1];
            if (v17)
            {
              do
              {
                long long v18 = v17;
                long long v17 = (void *)*v17;
              }
              while (v17);
            }
            else
            {
              do
              {
                long long v18 = (void *)v6[2];
                BOOL v16 = *v18 == (void)v6;
                uint64_t v6 = v18;
              }
              while (!v16);
            }
            uint64_t result = 1;
            uint64_t v6 = v18;
            if (v4 != v5) {
              continue;
            }
          }
          return result;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_215773E90(uint64_t a1)
{
  sub_2157741C4();
  uint64_t v2 = a1;
  operator new();
}

void sub_2157740E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v25 = sub_2157741C4();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v25, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x2157740CCLL);
}

uint64_t sub_2157741B8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

long long *sub_2157741C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884400, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884400))
  {
    return &xmmword_2678843E8;
  }
  size_t v1 = (char *)sub_2157742AC();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678843E8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678843F8 = *((void *)v1 + 2);
    xmmword_2678843E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678843E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884400);
  return &xmmword_2678843E8;
}

void sub_215774294(_Unwind_Exception *a1)
{
}

void *sub_2157742AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884420, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884420))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZEnableStates]", qword_267884408);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884408, &dword_21572C000);
    __cxa_guard_release(&qword_267884420);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884440, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884440))
  {
    return &unk_267884428;
  }
  sub_215E19DF4((uint64_t)qword_267884408, (uint64_t)&unk_267884428);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884428, &dword_21572C000);
  __cxa_guard_release(&qword_267884440);
  return &unk_267884428;
}

void sub_2157743B0(_Unwind_Exception *a1)
{
}

void sub_2157743C8(_Unwind_Exception *a1)
{
}

uint64_t *sub_2157743E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884460, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884460))
  {
    size_t v1 = sub_215774530();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    uint64_t v6 = &qword_267884448;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884450 = v4 + 1;
      unk_267884458 = v8 | 0x8000000000000000;
      qword_267884448 = (uint64_t)v9;
      uint64_t v6 = v9;
    }
    else
    {
      qword_267884450 = 0;
      unk_267884458 = 0;
      qword_267884448 = 0;
      byte_26788445F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884448, &dword_21572C000);
        __cxa_guard_release(&qword_267884460);
        return &qword_267884448;
      }
    }
    if (v3 >= 0) {
      int v10 = v2;
    }
    else {
      int v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884448;
}

void sub_215774518(_Unwind_Exception *a1)
{
}

uint64_t *sub_215774530()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884480))
  {
    size_t v1 = sub_2157741C4();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (char *)operator new(v7 + 1);
      qword_267884470 = v4 + 6;
      unk_267884478 = v8 | 0x8000000000000000;
      qword_267884468 = (uint64_t)v9;
      *(_DWORD *)uint64_t v9 = 1936617315;
      uint64_t v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884470 = 0;
      unk_267884478 = 0;
      qword_267884468 = 0x2074736E6F63;
      byte_26788447F = v4 + 6;
      uint64_t v6 = (char *)&qword_267884468 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884468, &dword_21572C000);
        __cxa_guard_release(&qword_267884480);
        return &qword_267884468;
      }
    }
    if (v3 >= 0) {
      int v10 = v2;
    }
    else {
      int v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884468;
}

void sub_21577469C(_Unwind_Exception *a1)
{
}

void VZErrorSetGlobalErrorHandler(const void *a1)
{
  if (a1)
  {
    long long v2 = (std::__shared_weak_count *)operator new(0x20uLL);
    v2->__shared_owners_ = 0;
    v2->__shared_weak_owners_ = 0;
    v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6577E0;
    v2[1].__vftable = (std::__shared_weak_count_vtbl *)_Block_copy(a1);
    size_t v4 = &v2[1].__vftable;
    unint64_t v5 = v2;
    sub_21573E088((uint64_t)&v4);
    int v3 = v5;
    if (!v5) {
      return;
    }
  }
  else
  {
    size_t v4 = 0;
    unint64_t v5 = 0;
    sub_21573E088((uint64_t)&v4);
    int v3 = v5;
    if (!v5) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_215774794(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_2157747B8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6577E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157747D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6577E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21577482C(uint64_t a1)
{
  size_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    _Block_release(v1);
  }
}

uint64_t sub_215774854(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 24);
      size_t v4 = *(void **)(a1 + 16);
      if (v3 != v2)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = v3 + v5;
          if (*(unsigned char *)(v3 + v5 - 8))
          {
            uint64_t v7 = *(unsigned int *)(v6 - 16);
            if (v7 != -1) {
              ((void (*)(char *, uint64_t))off_26C657AE8[v7])(&v9, v6 - 48);
            }
            *(_DWORD *)(v6 - 16) = -1;
          }
          *(void *)(v6 - 816) = off_26C678AE8;
          sub_215948050(v6 - 800);
          v5 -= 816;
        }
        while (v3 + v5 != v2);
        size_t v4 = *(void **)(a1 + 16);
      }
      *(void *)(a1 + 24) = v2;
      operator delete(v4);
    }
  }
  return a1;
}

void sub_21577494C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      size_t v4 = *(void **)(a1 + 8);
      if (v3 != v2)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = v3 + v5;
          if (*(unsigned char *)(v3 + v5 - 8))
          {
            uint64_t v7 = *(unsigned int *)(v6 - 16);
            if (v7 != -1) {
              ((void (*)(char *, uint64_t))off_26C657AE8[v7])(&v8, v6 - 48);
            }
            *(_DWORD *)(v6 - 16) = -1;
          }
          *(void *)(v6 - 816) = off_26C678AE8;
          sub_215948050(v6 - 800);
          v5 -= 816;
        }
        while (v3 + v5 != v2);
        size_t v4 = *(void **)(a1 + 8);
      }
      *(void *)(a1 + 16) = v2;
      operator delete(v4);
    }
  }
}

uint64_t sub_215774A40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 24);
      size_t v4 = *(void **)(a1 + 16);
      if (v3 != v2)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = v3 + v5;
          if (*(unsigned char *)(v3 + v5 - 8))
          {
            uint64_t v7 = *(unsigned int *)(v6 - 16);
            if (v7 != -1) {
              ((void (*)(char *, uint64_t))off_26C657AE8[v7])(&v9, v6 - 48);
            }
            *(_DWORD *)(v6 - 16) = -1;
          }
          *(void *)(v6 - 816) = off_26C678AE8;
          sub_215948050(v6 - 800);
          v5 -= 816;
        }
        while (v3 + v5 != v2);
        size_t v4 = *(void **)(a1 + 16);
      }
      *(void *)(a1 + 24) = v2;
      operator delete(v4);
    }
  }
  return MEMORY[0x2166C4D20](a1, 0x10A3C402FDDA82CLL);
}

uint64_t sub_215774B4C(uint64_t a1)
{
  return sub_215774A40(a1 - 8);
}

uint64_t sub_215774B54(uint64_t a1)
{
  return a1;
}

uint64_t sub_215774B80(uint64_t a1)
{
  return sub_215779804(a1 + 8);
}

void sub_215774B88(uint64_t a1)
{
  sub_215779804(a1 + 16);

  JUMPOUT(0x2166C4D20);
}

void sub_215774BD4(uint64_t a1)
{
  sub_215779804(a1 + 8);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215774C20(uint64_t a1)
{
  return a1;
}

void sub_215774C50(uint64_t a1)
{
  sub_2158AE96C(a1 + 8);

  JUMPOUT(0x2166C4D20);
}

void sub_215774C9C(uint64_t a1)
{
  sub_2158AE96C(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t VZFileExportOptionsGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B8C0))
  {
    return qword_26788B8B8;
  }
  qword_26788B8B8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B8C0);
  return qword_26788B8B8;
}

_OWORD *VZFileExportOptionsCreate()
{
  uint64_t result = operator new(0x58uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[3] = 0u;
    result[4] = 0u;
    *((void *)result + 10) = 0;
    result[1] = 0u;
    result[2] = 0u;
    *((void *)result + 6) = 1000;
    *((unsigned char *)result + 56) = 1;
    *((unsigned char *)result + 64) = 1;
    *((_DWORD *)result + 20) = 1;
    *(void *)uint64_t result = &unk_26C657830;
    *((void *)result + 1) = &unk_26C657880;
  }
  else
  {
    sub_215779BF8();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    v4[0] = 0;
    char v14 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788BA18, (uint64_t *)&v15, (uint64_t)v4, 0);
    if (v14 && v13)
    {
      if (v12)
      {
        if (v11 < 0) {
          operator delete(__p);
        }
        if (v9 < 0) {
          operator delete(v8);
        }
      }
      if (v7 && v6 < 0) {
        operator delete(v5);
      }
    }
    uint64_t v1 = (uint64_t)v15;
    if (v15)
    {
      uint64_t v2 = v16;
      uint64_t v3 = v15;
      if ((void *)v16 != v15)
      {
        do
        {
          if (*(char *)(v2 - 1) < 0) {
            operator delete(*(void **)(v2 - 24));
          }
          v2 -= 24;
        }
        while (v2 != v1);
        uint64_t v3 = v15;
      }
      uint64_t v16 = v1;
      operator delete(v3);
    }
    return 0;
  }
  return result;
}

BOOL VZFileExportOptionsSetAsyncQueueMaxElementCount(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_215774F34((uint64_t)"VZFileExportOptionsSetAsyncQueueMaxElementCount", a1);
  if (!result)
  {
    if (a2)
    {
      if (!*(unsigned char *)(a1 + 64))
      {
        *(void *)(a1 + 56) = 0;
        *(unsigned char *)(a1 + 64) = 1;
      }
      *(void *)(a1 + 48) = a2;
      *(unsigned char *)(a1 + 56) = 1;
    }
    else if (*(unsigned char *)(a1 + 64))
    {
      *(unsigned char *)(a1 + 64) = 0;
    }
  }
  return result;
}

BOOL sub_215774F34(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8E0))
  {
    sub_215779BF8();
    int v5 = byte_26788BA2F;
    if (byte_26788BA2F >= 0) {
      size_t v6 = byte_26788BA2F;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788BA18 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      char v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788BA60 + 1) = v6 + 1;
      unk_26788BA70 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788BA60 = v8;
    }
    else
    {
      unk_26788BA70 = 0;
      xmmword_26788BA60 = 0uLL;
      char v8 = &xmmword_26788BA60;
      byte_26788BA77 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BA60, &dword_21572C000);
        __cxa_guard_release(&qword_26788B8E0);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788BA18;
    }
    else {
      char v11 = (long long *)xmmword_26788BA18;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788BA77 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788BA60, *((unint64_t *)&xmmword_26788BA60 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788BA60;
    uint64_t v13 = unk_26788BA70;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215775264(_Unwind_Exception *a1)
{
}

void sub_21577527C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZFileExportOptionsSetFileExportBehavior(uint64_t a1, unint64_t a2)
{
  if (!sub_215774F34((uint64_t)"VZFileExportOptionsSetFileExportBehavior", a1))
  {
    sub_2158AA9CC(a1 + 16, a2, (uint64_t)&v4);
    if (!v14)
    {
      sub_21573E208(&v4, 0);
      if (!v14)
      {
        if (v13)
        {
          if (v12)
          {
            if (v11 < 0) {
              operator delete(__p);
            }
            if (v9 < 0) {
              operator delete(v8);
            }
          }
          if (v7)
          {
            if (v6 < 0) {
              operator delete(v5);
            }
          }
        }
      }
    }
  }
}

void sub_21577537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZFileExportOptionsAddFilteredStoragePreference(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (sub_215774F34((uint64_t)"VZFileExportOptionsAddFilteredStoragePreference", a1)) {
    return;
  }
  if (a2)
  {
    sub_2158AAC40(a1 + 16, a2 + 16, a3, (uint64_t)&v28);
    if (!v39)
    {
      sub_21573E208(&v28, 0);
      if (!v39)
      {
        if (v38)
        {
          if (v37)
          {
            if (SHIBYTE(v36) < 0) {
              operator delete(__p[0]);
            }
            if (SHIBYTE(v33) < 0) {
              operator delete((void *)v32);
            }
          }
          if (v31 && SHIBYTE(v30) < 0)
          {
            char v6 = (void *)v29;
LABEL_46:
            operator delete(v6);
            return;
          }
        }
      }
    }
    return;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8E8))
  {
    sub_215779DF0();
    int v7 = byte_26788BAA7;
    if (byte_26788BAA7 >= 0) {
      size_t v8 = byte_26788BAA7;
    }
    else {
      size_t v8 = qword_26788BA98;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788BA78 + 1) = v8 + 1;
      unk_26788BA88 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788BA78 = v10;
    }
    else
    {
      unk_26788BA88 = 0;
      xmmword_26788BA78 = 0uLL;
      uint64_t v10 = &xmmword_26788BA78;
      byte_26788BA8F = v8 + 1;
      if (!v8)
      {
LABEL_63:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BA78, &dword_21572C000);
        __cxa_guard_release(&qword_26788B8E8);
        goto LABEL_15;
      }
    }
    if (v7 >= 0) {
      char v13 = &qword_26788BA90;
    }
    else {
      char v13 = (uint64_t *)qword_26788BA90;
    }
    memmove(v10, v13, v8);
    goto LABEL_63;
  }
LABEL_15:
  if (byte_26788BA8F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788BA78, *((unint64_t *)&xmmword_26788BA78 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788BA78;
    uint64_t v15 = unk_26788BA88;
  }
  char v16 = 1;
  sub_21573FF94((uint64_t)"VZFileExportOptionsAddFilteredStoragePreference", (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, 0);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0)
  {
    char v6 = v14[0];
    goto LABEL_46;
  }
}

void sub_215775744(_Unwind_Exception *a1)
{
}

void sub_21577575C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_215775770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDestinationCreateWithFileExporter(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!sub_2157569A8((uint64_t)"VZDestinationCreateWithFileExporter", (uint64_t)a1, a3))
  {
    if (a2)
    {
      sub_21577A1A0((uint64_t)v10, a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 64);
      long long v13 = *(_OWORD *)(a2 + 48);
      long long v14 = v6;
      char v15 = 1;
    }
    else
    {
      LOBYTE(v10[0]) = 0;
      char v15 = 0;
    }
    char v24 = &v25;
    uint64_t v25 = a3;
    v16[0] = 0;
    v16[1] = 0;
    int v7 = a1 - 1;
    long long v17 = 0;
    while (*++v7)
      ;
    sub_21577D738((unint64_t)v16, a1, v7);
    LOBYTE(__p[0]) = 0;
    char v23 = 0;
    if (v15)
    {
      char v20 = 0;
      if (v12)
      {
        *(_OWORD *)long long __p = *(_OWORD *)v10;
        uint64_t v19 = v11;
        v10[1] = 0;
        uint64_t v11 = 0;
        v10[0] = 0;
        char v20 = 1;
      }
      long long v21 = v13;
      long long v22 = v14;
      char v23 = 1;
    }
    v26[0] = &unk_26C656CE8;
    v26[1] = sub_2157511D8;
    v26[3] = v26;
    char v27 = 1;
    sub_2158AB5C0((uint64_t)v16, (uint64_t)__p, (uint64_t)v26, 0, 0);
  }
  return 0;
}

void sub_215775CDC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::logic_error a20,int a21,__int16 a22,char a23,char a24,char a25,long long a26,long long a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,std::runtime_error __p,int a40,__int16 a41,char a42,char a43,char a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a2)
  {
    sub_215740ECC((uint64_t)&a47);
    sub_215755968((uint64_t)&a71);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&a20, exception_ptr);
      a20.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      a19 = (uint64_t)std::logic_error::what(&a20);
      sub_2157482C8(&__p, (const char **)&a19);
      sub_2159644BC((long long *)&__p, (uint64_t)&a26);
      a71 = a26;
      sub_215741BFC(&STACK[0x200], &a27);
      LOBYTE(STACK[0x268]) = 1;
      sub_21577BD94((uint64_t **)(v71 - 144), (uint64_t)&a71);
      sub_215740ECC((uint64_t)&a71);
      sub_21573FF04((uint64_t)&a26);
      if (a44)
      {
        if (a43 < 0) {
          operator delete(__p.__vftable);
        }
      }
      MEMORY[0x2166C4250](&a20);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      size_t v75 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&__p, (uint64_t)v75);
      __cxa_begin_catch(a1);
      uint64_t v76 = (void *)(a45 + 48);
      if (*(char *)(a45 + 71) < 0) {
        uint64_t v76 = (void *)*v76;
      }
      a19 = (uint64_t)v76;
      sub_2157482C8(&a20, (const char **)&a19);
      sub_215964DE4((long long *)&a20, (uint64_t)&a26);
      a71 = a26;
      sub_215741BFC(&STACK[0x200], &a27);
      LOBYTE(STACK[0x268]) = 1;
      sub_21577BD94((uint64_t **)(v71 - 144), (uint64_t)&a71);
      sub_215740ECC((uint64_t)&a71);
      sub_21573FF04((uint64_t)&a26);
      if (a25 && a24 < 0) {
        operator delete(a20.__vftable);
      }
      MEMORY[0x2166C4910](&__p);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(a71) = 0;
      LOBYTE(STACK[0x268]) = 0;
      sub_21577BD94((uint64_t **)(v71 - 144), (uint64_t)&a71);
      sub_215740ECC((uint64_t)&a71);
      __cxa_end_catch();
    }
    JUMPOUT(0x215775B68);
  }
  _Unwind_Resume(a1);
}

char **sub_215775F70(char **a1)
{
  if (*((unsigned char *)a1 + 64))
  {
    if (*((unsigned char *)a1 + 24))
    {
      uint64_t v2 = *a1;
      if (*a1)
      {
        uint64_t v3 = a1[1];
        long long v4 = *a1;
        if (v3 != v2)
        {
          uint64_t v5 = 0;
          do
          {
            long long v6 = &v3[v5];
            if (v3[v5 - 8])
            {
              uint64_t v7 = *((unsigned int *)v6 - 4);
              if (v7 != -1) {
                ((void (*)(char *, char *))off_26C657AE8[v7])(&v9, v6 - 48);
              }
              *((_DWORD *)v6 - 4) = -1;
            }
            *((void *)v6 - 102) = off_26C678AE8;
            sub_215948050((uint64_t)(v6 - 800));
            v5 -= 816;
          }
          while (&v3[v5] != v2);
          long long v4 = *a1;
        }
        a1[1] = v2;
        operator delete(v4);
      }
    }
  }
  return a1;
}

uint64_t VZFileImportOptionsGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B928, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B928))
  {
    return qword_26788B920;
  }
  qword_26788B920 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B928);
  return qword_26788B920;
}

void *VZFileImportOptionsCreate()
{
  BOOL result = operator new(0x58uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[10] = 0;
    *((_OWORD *)result + 3) = 0u;
    *((_OWORD *)result + 4) = 0u;
    *((_OWORD *)result + 1) = 0u;
    *((_OWORD *)result + 2) = 0u;
    *((_DWORD *)result + 20) = 1;
    void *result = &unk_26C657928;
    result[1] = &unk_26C657978;
  }
  else
  {
    sub_21577C5E0();
    char v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    v4[0] = 0;
    char v14 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788BB20, (uint64_t *)&v15, (uint64_t)v4, 0);
    if (v14 && v13)
    {
      if (v12)
      {
        if (v11 < 0) {
          operator delete(__p);
        }
        if (v9 < 0) {
          operator delete(v8);
        }
      }
      if (v7 && v6 < 0) {
        operator delete(v5);
      }
    }
    uint64_t v1 = (uint64_t)v15;
    if (v15)
    {
      uint64_t v2 = v16;
      uint64_t v3 = v15;
      if ((void *)v16 != v15)
      {
        do
        {
          if (*(char *)(v2 - 1) < 0) {
            operator delete(*(void **)(v2 - 24));
          }
          v2 -= 24;
        }
        while (v2 != v1);
        uint64_t v3 = v15;
      }
      uint64_t v16 = v1;
      operator delete(v3);
    }
    return 0;
  }
  return result;
}

uint64_t VZFileImporterGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B950, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B950))
  {
    return qword_26788B948;
  }
  qword_26788B948 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B950);
  return qword_26788B948;
}

uint64_t VZFileImporterImport(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (!sub_2157569A8((uint64_t)"VZFileImporterImport", (uint64_t)a1, a3))
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v5 = a1 - 1;
    while (*++v5)
      ;
    sub_21577D738((unint64_t)v10, a1, v5);
    if (a2)
    {
      sub_21577C7D8((uint64_t)&v8, a2 + 16);
      char v9 = 1;
    }
    else
    {
      LOBYTE(v8) = 0;
      char v9 = 0;
    }
    v11[0] = &unk_26C656CE8;
    v11[1] = sub_2157511D8;
    v11[3] = v11;
    char v12 = 1;
    sub_215CF5EF8();
    sub_2158AC0AC((uint64_t)v10, (uint64_t)&v8, (uint64_t)v11);
  }
  return 0;
}

void sub_215776744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_215776AC0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215776758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a2)
  {
    __cxa_begin_catch(exception_object);
    sub_21577C5E0();
    sub_21577D078();
    sub_215740F64((std::string::size_type)&xmmword_26788BB20, (uint64_t *)&xmmword_26788BB68, 0);
    __cxa_end_catch();
    JUMPOUT(0x215776340);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157767EC(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  BOOL result = operator new(0x48uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[1] = *(_OWORD *)a2;
    *((void *)result + 4) = *(void *)(a2 + 16);
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *((_DWORD *)result + 10) = 1;
    *(void *)BOOL result = &unk_26C657F78;
    *((void *)result + 1) = &unk_26C657FC8;
    *((void *)result + 8) = 0;
    *((void *)result + 7) = 0;
    *((void *)result + 6) = (char *)result + 56;
  }
  else
  {
    uint64_t v5 = (uint64_t *)sub_21577DA40();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B998, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788B998))
    {
      sub_21577DC5C();
      if (byte_26788BC6F < 0)
      {
        sub_215738B0C(&xmmword_26788BC28, (void *)xmmword_26788BC58, *((unint64_t *)&xmmword_26788BC58 + 1));
      }
      else
      {
        xmmword_26788BC28 = xmmword_26788BC58;
        unk_26788BC38 = unk_26788BC68;
      }
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BC28, &dword_21572C000);
      __cxa_guard_release(&qword_26788B998);
    }
    if (byte_26788BC3F < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788BC28, *((unint64_t *)&xmmword_26788BC28 + 1));
    }
    else
    {
      long long __dst = xmmword_26788BC28;
      uint64_t v23 = unk_26788BC38;
    }
    sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
    v9[0] = 0;
    char v19 = 0;
    sub_21574086C(v5, (uint64_t *)&v20, (uint64_t)v9, a1);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    uint64_t v6 = (uint64_t)v20;
    if (v20)
    {
      uint64_t v7 = v21;
      size_t v8 = v20;
      if ((void *)v21 != v20)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0) {
            operator delete(*(void **)(v7 - 24));
          }
          v7 -= 24;
        }
        while (v7 != v6);
        size_t v8 = v20;
      }
      uint64_t v21 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete((void *)__dst);
    }
    return 0;
  }
  return result;
}

void sub_215776A90(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788B998);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215776AC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 152) || !*(unsigned char *)(a1 + 144)) {
    goto LABEL_2;
  }
  if (!*(unsigned char *)(a1 + 136)) {
    goto LABEL_10;
  }
  if (*(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
LABEL_10:
      if (!*(unsigned char *)(a1 + 72)) {
        goto LABEL_2;
      }
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    goto LABEL_10;
  }
  operator delete(*(void **)(a1 + 80));
  if (!*(unsigned char *)(a1 + 72)) {
    goto LABEL_2;
  }
LABEL_11:
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
LABEL_2:
  if (*(unsigned char *)(a1 + 24) && *(void *)a1)
  {
    sub_21577997C((uint64_t *)a1);
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t VZFileImporterCreate(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!sub_2157569A8((uint64_t)"VZFileImporterCreate", (uint64_t)a1, a3))
  {
    memset(v16, 0, 24);
    uint64_t v6 = a1 - 1;
    while (*++v6)
      ;
    sub_21577D738((unint64_t)v16, a1, v6);
    if (a2)
    {
      sub_21577C7D8((uint64_t)v9, a2 + 16);
      char v15 = 1;
    }
    else
    {
      LOBYTE(v9[0]) = 0;
      char v15 = 0;
    }
    sub_215CF5EF8();
    uint64_t v24 = &v25;
    uint64_t v25 = a3;
    LOBYTE(v17[0]) = 0;
    char v23 = 0;
    if (v15)
    {
      char v19 = 0;
      if (v11)
      {
        *(_OWORD *)char v17 = *(_OWORD *)v9;
        uint64_t v18 = v10;
        v9[1] = 0;
        uint64_t v10 = 0;
        v9[0] = 0;
        char v19 = 1;
      }
      LOBYTE(__p[0]) = 0;
      char v22 = 0;
      if (v14)
      {
        *(_OWORD *)long long __p = *(_OWORD *)v12;
        uint64_t v21 = v13;
        v12[1] = 0;
        uint64_t v13 = 0;
        v12[0] = 0;
        char v22 = 1;
      }
      char v23 = 1;
    }
    v26[0] = &unk_26C656CE8;
    v26[1] = sub_2157511D8;
    v26[3] = v26;
    char v27 = 1;
    sub_2158AD5CC((uint64_t)v16, (uint64_t)v17, (uint64_t)v26);
  }
  return 0;
}

void sub_215777344(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,std::logic_error a22,int a23,__int16 a24,char a25,char a26,char a27,int a28,__int16 a29,uint64_t a30,long long a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,std::runtime_error __p,int a44,__int16 a45,char a46,char a47,char a48,uint64_t a49,uint64_t a50,char a51)
{
  if (a2)
  {
    sub_215740ECC((uint64_t)&a51);
    sub_21577E2C8((uint64_t)&STACK[0x200]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&a22, exception_ptr);
      a22.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      a21 = (uint64_t)std::logic_error::what(&a22);
      sub_2157482C8(&__p, (const char **)&a21);
      sub_2159644BC((long long *)&__p, (uint64_t)&a29);
      *(_OWORD *)&STACK[0x200] = *v51;
      sub_215741BFC(&STACK[0x210], &a31);
      LOBYTE(STACK[0x278]) = 1;
      sub_21577DD80((uint64_t **)(v52 - 128), (uint64_t)&STACK[0x200]);
      sub_215740ECC((uint64_t)&STACK[0x200]);
      sub_21573FF04((uint64_t)&a29);
      if (a48)
      {
        if (a47 < 0) {
          operator delete(__p.__vftable);
        }
      }
      MEMORY[0x2166C4250](&a22);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      char v56 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&__p, (uint64_t)v56);
      __cxa_begin_catch(a1);
      unint64_t v57 = (void *)(a49 + 48);
      if (*(char *)(a49 + 71) < 0) {
        unint64_t v57 = (void *)*v57;
      }
      a21 = (uint64_t)v57;
      sub_2157482C8(&a22, (const char **)&a21);
      sub_215964DE4((long long *)&a22, (uint64_t)&a29);
      *(_OWORD *)&STACK[0x200] = *v51;
      sub_215741BFC(&STACK[0x210], &a31);
      LOBYTE(STACK[0x278]) = 1;
      sub_21577DD80((uint64_t **)(v52 - 128), (uint64_t)&STACK[0x200]);
      sub_215740ECC((uint64_t)&STACK[0x200]);
      sub_21573FF04((uint64_t)&a29);
      if (a27 && a26 < 0) {
        operator delete(a22.__vftable);
      }
      MEMORY[0x2166C4910](&__p);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(STACK[0x200]) = 0;
      LOBYTE(STACK[0x278]) = 0;
      sub_21577DD80((uint64_t **)(v52 - 128), (uint64_t)&STACK[0x200]);
      sub_215740ECC((uint64_t)&STACK[0x200]);
      __cxa_end_catch();
    }
    JUMPOUT(0x21577715CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t VZFileImporterGetCurrentSequenceTime(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentSequenceTime", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v5 = v3[36];
  uint64_t v4 = v3[37];
  unint64_t v6 = v3[35];
  if (v6 < 0x86BCA1AF286BCA1BLL * ((v4 - v5) >> 3) || v3[32]) {
    return *(void *)(v5 + 152 * v6);
  }
  if (v5 == v4) {
    return 0;
  }
  return *(void *)(v4 - 152);
}

BOOL sub_215777650(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BA00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BA00))
  {
    sub_21577E89C();
    int v5 = byte_26788BD8F;
    if (byte_26788BD8F >= 0) {
      size_t v6 = byte_26788BD8F;
    }
    else {
      size_t v6 = qword_26788BD80;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      size_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788BD60 + 1) = v6 + 1;
      unk_26788BD70 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788BD60 = v8;
    }
    else
    {
      unk_26788BD70 = 0;
      xmmword_26788BD60 = 0uLL;
      size_t v8 = &xmmword_26788BD60;
      byte_26788BD77 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BD60, &dword_21572C000);
        __cxa_guard_release(&qword_26788BA00);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &qword_26788BD78;
    }
    else {
      char v11 = (uint64_t *)qword_26788BD78;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788BD77 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788BD60, *((unint64_t *)&xmmword_26788BD60 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788BD60;
    uint64_t v13 = unk_26788BD70;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215777980(_Unwind_Exception *a1)
{
}

void sub_215777998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZFileImporterGetEndSequenceTime(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetEndSequenceTime", a1)) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(v2 + 288);
  uint64_t v3 = *(void *)(v2 + 296);
  if (v4 == v3) {
    return 0;
  }
  else {
    return *(void *)(v3 - 152);
  }
}

uint64_t VZFileImporterGetCurrentPackageID(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentPackageID", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  uint64_t v6 = v4 + 152 * v5;
  uint64_t result = v6 + 8;
  if (*(char *)(v6 + 31) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t VZFileImporterGetCurrentDataTypeID(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentDataTypeID", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  else {
    return *(unsigned int *)(v4 + 152 * v5 + 32);
  }
}

uint64_t VZFileImporterGetCurrentSubloggerName(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentSubloggerName", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  uint64_t v6 = v4 + 152 * v5;
  uint64_t result = v6 + 40;
  if (*(char *)(v6 + 63) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t VZFileImporterGetCurrentNamespace(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentNamespace", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  uint64_t v6 = v4 + 152 * v5;
  if (!*(unsigned char *)(v6 + 88)) {
    return 0;
  }
  uint64_t result = v6 + 64;
  if (*(char *)(v4 + 152 * v5 + 87) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t VZFileImporterGetCurrentFilePath(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentFilePath", a1)) {
    return 0;
  }

  return sub_2158AEB64(a1 + 8);
}

uint64_t VZFileImporterGetCurrentOffsetInFile(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentOffsetInFile", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  else {
    return *(void *)(v4 + 152 * v5 + 120);
  }
}

uint64_t VZFileImporterGetCurrentReferenceIDString(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterGetCurrentReferenceIDString", a1)) {
    return 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = v3[36];
  unint64_t v5 = v3[35];
  if (v5 >= 0x86BCA1AF286BCA1BLL * ((v3[37] - v4) >> 3) && !v3[32]) {
    return 0;
  }
  uint64_t v6 = v4 + 152 * v5;
  uint64_t result = v6 + 128;
  if (*(char *)(v6 + 151) < 0) {
    return *(void *)result;
  }
  return result;
}

BOOL VZFileImporterIsDone(uint64_t a1)
{
  if (sub_215777650((uint64_t)"VZFileImporterIsDone", a1)) {
    return 1;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  return v3[35] >= 0x86BCA1AF286BCA1BLL * ((uint64_t)(v3[37] - v3[36]) >> 3) && v3[32] == 0;
}

uint64_t VZFileImporterLoadNext(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!sub_2157780D4((uint64_t)"VZFileImporterLoadNext", a1, a2))
  {
    sub_2158AED80(a1 + 8, (uint64_t)v12);
    if (v13)
    {
      sub_21577EA38((uint64_t)v12, v14);
      uint64_t v4 = v14[0];
      if (v14[0])
      {
LABEL_30:
        sub_215779A98((uint64_t)v12);
        return v4;
      }
      unint64_t v5 = (uint64_t *)sub_21576C6A0();
      uint64_t v6 = sub_21576CA40();
      if (*((char *)v6 + 23) < 0)
      {
        sub_215738B0C(&__dst, *(void **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v7 = *v6;
        uint64_t v27 = *((void *)v6 + 2);
        long long __dst = v7;
      }
      sub_21573A150(&v24, (uint64_t)&__dst, 1uLL);
      LOBYTE(v14[0]) = 0;
      char v23 = 0;
      sub_21574086C(v5, (uint64_t *)&v24, (uint64_t)v14, a2);
      if (v23 && v22)
      {
        if (v21)
        {
          if (v20 < 0) {
            operator delete(__p);
          }
          if (v18 < 0) {
            operator delete(v17);
          }
        }
        if (v16 && v15 < 0) {
          operator delete((void *)v14[2]);
        }
      }
      uint64_t v8 = (uint64_t)v24;
      if (v24)
      {
        uint64_t v9 = v25;
        uint64_t v10 = v24;
        if ((void *)v25 != v24)
        {
          do
          {
            if (*(char *)(v9 - 1) < 0) {
              operator delete(*(void **)(v9 - 24));
            }
            v9 -= 24;
          }
          while (v9 != v8);
          uint64_t v10 = v24;
        }
        uint64_t v25 = v8;
        operator delete(v10);
      }
      if (SHIBYTE(v27) < 0) {
        operator delete((void *)__dst);
      }
    }
    else
    {
      sub_21573E208(v12, a2);
    }
    uint64_t v4 = 0;
    goto LABEL_30;
  }
  return 0;
}

void sub_2157780A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215779A98((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157780BC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

BOOL sub_2157780D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BA10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BA10))
  {
    sub_21577E388();
    int v7 = byte_26788BC87;
    if (byte_26788BC87 >= 0) {
      size_t v8 = byte_26788BC87;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788BC70 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788BD90 + 1) = v8 + 1;
      unk_26788BDA0 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788BD90 = v10;
    }
    else
    {
      unk_26788BDA0 = 0;
      xmmword_26788BD90 = 0uLL;
      uint64_t v10 = &xmmword_26788BD90;
      byte_26788BDA7 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BD90, &dword_21572C000);
        __cxa_guard_release(&qword_26788BA10);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = &xmmword_26788BC70;
    }
    else {
      char v13 = (long long *)xmmword_26788BC70;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788BDA7 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788BD90, *((unint64_t *)&xmmword_26788BD90 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788BD90;
    uint64_t v15 = unk_26788BDA0;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215778408(_Unwind_Exception *a1)
{
}

void sub_215778420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZFileImporterLoadUntil(uint64_t a1, void *a2, uint64_t a3)
{
  if (sub_2157780D4((uint64_t)"VZFileImporterLoadUntil", a1, a3)) {
    return 0;
  }
  sub_2158AF890(a1 + 8, a2, (uint64_t)&__p);
  if (v26)
  {
    if (v15)
    {
      uint64_t v6 = sub_2157767EC(a3, (uint64_t)&__p);
      if (!v26)
      {
LABEL_24:
        if (v25)
        {
          if (v24)
          {
            if (v23 < 0) {
              operator delete(v22);
            }
            if (v21 < 0) {
              operator delete(v20);
            }
          }
          if (v19 && v18 < 0) {
            operator delete(v17);
          }
        }
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    sub_21573E208(&v16, 0);
    uint64_t v6 = 0;
    if (!v26) {
      goto LABEL_24;
    }
  }
  if (v15)
  {
    int v7 = (char *)__p;
    if (__p)
    {
      size_t v8 = v14;
      unint64_t v9 = __p;
      if (v14 != __p)
      {
        do
        {
          uint64_t v10 = (atomic_uint *)*((void *)v8 - 2);
          if (v10)
          {
            if (atomic_fetch_add(v10 + 2, 0xFFFFFFFF) == 1)
            {
              (*(void (**)(atomic_uint *))(*(void *)v10 + 16))(v10);
              if (atomic_fetch_add(v10 + 3, 0xFFFFFFFF) == 1) {
                (*(void (**)(atomic_uint *))(*(void *)v10 + 24))(v10);
              }
            }
          }
          uint64_t v11 = (std::__shared_weak_count *)*((void *)v8 - 4);
          if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
          v8 -= 40;
        }
        while (v8 != v7);
        unint64_t v9 = __p;
      }
      char v14 = v7;
      operator delete(v9);
    }
  }
  return v6;
}

void sub_215778670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZFileImporterSkipNext(uint64_t a1, uint64_t a2)
{
  if (!sub_2157780D4((uint64_t)"VZFileImporterSkipNext", a1, a2))
  {
    sub_2158B03AC(a1 + 8, (uint64_t)&v4);
    if (!v14)
    {
      sub_21573E208(&v4, a2);
      if (!v14)
      {
        if (v13)
        {
          if (v12)
          {
            if (v11 < 0) {
              operator delete(__p);
            }
            if (v9 < 0) {
              operator delete(v8);
            }
          }
          if (v7)
          {
            if (v6 < 0) {
              operator delete(v5);
            }
          }
        }
      }
    }
  }
}

void sub_21577874C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZFileImporterSkipUntil(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157780D4((uint64_t)"VZFileImporterSkipUntil", a1, a3))
  {
    sub_2158B0724(a1 + 8, a2, (uint64_t)&v6);
    if (!v16)
    {
      sub_21573E208(&v6, a3);
      if (!v16)
      {
        if (v15)
        {
          if (v14)
          {
            if (v13 < 0) {
              operator delete(__p);
            }
            if (v11 < 0) {
              operator delete(v10);
            }
          }
          if (v9)
          {
            if (v8 < 0) {
              operator delete(v7);
            }
          }
        }
      }
    }
  }
}

void sub_215778834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZFileImporterSeekToBegin(uint64_t a1, uint64_t a2)
{
  if (!sub_2157780D4((uint64_t)"VZFileImporterSeekToBegin", a1, a2))
  {
    sub_2158B0AC0(a1 + 8, (uint64_t)&v4);
    if (!v14)
    {
      sub_21573E208(&v4, a2);
      if (!v14)
      {
        if (v13)
        {
          if (v12)
          {
            if (v11 < 0) {
              operator delete(__p);
            }
            if (v9 < 0) {
              operator delete(v8);
            }
          }
          if (v7)
          {
            if (v6 < 0) {
              operator delete(v5);
            }
          }
        }
      }
    }
  }
}

void sub_21577890C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215778920(uint64_t result)
{
  return result;
}

uint64_t sub_215778930(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 80), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21577896C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B8C0))
  {
    return qword_26788B8B8;
  }
  qword_26788B8B8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B8C0);
  return qword_26788B8B8;
}

uint64_t *sub_2157789D0(uint64_t *a1, void *lpsrc)
{
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6578C8, 0);
  if (result)
  {
    v6[0] = a1 + 2;
    v6[1] = a1 + 6;
    char v7 = a1 + 9;
    v4[0] = result + 2;
    v4[1] = result + 6;
    unint64_t v5 = result + 9;
    uint64_t result = (uint64_t *)sub_215ACB6D0((uint64_t)&v8, v6, v4);
    if (result) {
      return (uint64_t *)(*v7 == *v5);
    }
  }
  return result;
}

uint64_t sub_215778A98(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  __cxa_begin_catch(a1);
  sub_215779BF8();
  sub_215732BF4(v26, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788BA18, v26, 0);
  if (v27 < 0) {
    operator delete((void *)v26[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_215778AF0(uint64_t a1)
{
  sub_215779BF8();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215778D94(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_215733368((uint64_t)&v42);
  if (v41 < 0) {
    operator delete((void *)v40[0]);
  }
  __cxa_begin_catch(a1);
  sub_215779BF8();
  sub_215732BF4(v40, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788BA18, v40, 0);
  if (v41 < 0) {
    operator delete((void *)v40[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215778E74(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 80));
}

uint64_t sub_215778E80(uint64_t result)
{
  return result;
}

uint64_t sub_215778E90(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 80), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215778ECC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B928, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B928))
  {
    return qword_26788B920;
  }
  qword_26788B920 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B928);
  return qword_26788B920;
}

BOOL sub_215778F30(void *a1, void *lpsrc)
{
  uint64_t v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6579C0, 0);
  return v3 && v3 == a1;
}

void sub_215778FA4(uint64_t a1)
{
  sub_21577C5E0();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157791F8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21577C5E0();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788BB20, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157792D8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 80));
}

uint64_t sub_2157792E4(uint64_t result)
{
  return result;
}

uint64_t sub_2157792F4(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 168), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215779330()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B950, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788B950))
  {
    return qword_26788B948;
  }
  qword_26788B948 = sub_21573DD88();
  __cxa_guard_release(&qword_26788B950);
  return qword_26788B948;
}

BOOL sub_215779394(void *a1, void *lpsrc)
{
  uint64_t v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657A98, 0);
  return v3 && v3 == a1;
}

void sub_215779408(uint64_t a1)
{
  sub_21577E388();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_21577969C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_215733368((uint64_t)&v38);
  if (v37 < 0) {
    operator delete((void *)v36[0]);
  }
  __cxa_begin_catch(a1);
  sub_21577E388();
  sub_215732BF4(v36, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788BC70, v36, 0);
  if (v37 < 0) {
    operator delete((void *)v36[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215779794(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 168));
}

uint64_t sub_2157797A4(uint64_t a1, void *a2)
{
  uint64_t result = a2[3];
  if ((void *)result == a2) {
    return (*(uint64_t (**)(void *))(*a2 + 32))(a2);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

uint64_t sub_215779804(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = *(void *)(a1 + 32);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 40);
      long long v4 = *(void **)(a1 + 32);
      if (v3 != v2)
      {
        uint64_t v5 = v3 - 800;
        do
        {
          uint64_t v6 = *(void *)(v3 - 8);
          if (v3 - 32 == v6)
          {
            (*(void (**)(uint64_t))(*(void *)(v3 - 32) + 32))(v3 - 32);
          }
          else if (v6)
          {
            (*(void (**)(uint64_t))(*(void *)v6 + 40))(v6);
          }
          *(void *)(v3 - 800) = off_26C678AE8;
          sub_215948050(v3 - 784);
          v5 -= 800;
          v3 -= 800;
        }
        while (v3 != v2);
        long long v4 = *(void **)(a1 + 32);
      }
      *(void *)(a1 + 40) = v2;
      operator delete(v4);
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    char v7 = *(void (****)(void))a1;
    if (*(void *)a1)
    {
      char v8 = *(void (****)(void))(a1 + 8);
      char v9 = *(void (****)(void))a1;
      if (v8 != v7)
      {
        uint64_t v10 = v8 - 96;
        char v11 = v8 - 96;
        do
        {
          (**v11)(v11);
          v10 -= 96;
          BOOL v12 = v11 == v7;
          v11 -= 96;
        }
        while (!v12);
        char v9 = *(void (****)(void))a1;
      }
      *(void *)(a1 + 8) = v7;
      operator delete(v9);
    }
  }
  return a1;
}

void sub_21577997C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (v3 != *a1)
  {
    do
    {
      long long v4 = *(atomic_uint **)(v3 - 16);
      if (v4)
      {
        if (atomic_fetch_add(v4 + 2, 0xFFFFFFFF) == 1)
        {
          (*(void (**)(atomic_uint *))(*(void *)v4 + 16))(v4);
          if (atomic_fetch_add(v4 + 3, 0xFFFFFFFF) == 1) {
            (*(void (**)(atomic_uint *))(*(void *)v4 + 24))(v4);
          }
        }
      }
      uint64_t v5 = *(std::__shared_weak_count **)(v3 - 32);
      if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      v3 -= 40;
    }
    while (v3 != v2);
  }
  a1[1] = v2;
}

uint64_t sub_215779A98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    uint64_t v2 = *(atomic_uint **)(a1 + 24);
    if (v2)
    {
      if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
      {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
        if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
        }
      }
    }
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      return a1;
    }
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    return a1;
  }
  else
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (*(unsigned char *)(a1 + 104))
    {
      if (*(char *)(a1 + 103) < 0) {
        operator delete(*(void **)(a1 + 80));
      }
      if (*(char *)(a1 + 71) < 0) {
        operator delete(*(void **)(a1 + 48));
      }
    }
    if (!*(unsigned char *)(a1 + 40) || (*(char *)(a1 + 39) & 0x80000000) == 0) {
      return a1;
    }
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
}

void sub_215779BF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8C8))
  {
    sub_215779CCC();
    if (byte_26788BA5F < 0)
    {
      sub_215738B0C(&xmmword_26788BA18, (void *)xmmword_26788BA48, *((unint64_t *)&xmmword_26788BA48 + 1));
    }
    else
    {
      xmmword_26788BA18 = xmmword_26788BA48;
      unk_26788BA28 = unk_26788BA58;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BA18, &dword_21572C000);
    __cxa_guard_release(&qword_26788B8C8);
  }
}

void sub_215779CB4(_Unwind_Exception *a1)
{
}

void sub_215779CCC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8D0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZFileExportOptions]", qword_26788BA30);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BA30, &dword_21572C000);
    __cxa_guard_release(&qword_26788B8D0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8D8))
  {
    sub_215E19DF4((uint64_t)qword_26788BA30, (uint64_t)&xmmword_26788BA48);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BA48, &dword_21572C000);
    __cxa_guard_release(&qword_26788B8D8);
  }
}

void sub_215779DC0(_Unwind_Exception *a1)
{
}

void sub_215779DD8(_Unwind_Exception *a1)
{
}

void sub_215779DF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8F0))
  {
    int v0 = sub_215779F84();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      char v8 = (char *)operator new(v6 + 1);
      qword_26788BA98 = v3 + 6;
      unk_26788BAA0 = v7 | 0x8000000000000000;
      qword_26788BA90 = (uint64_t)v8;
      *(_DWORD *)char v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788BA98 = 0;
      unk_26788BAA0 = 0;
      qword_26788BA90 = 0x2074736E6F63;
      byte_26788BAA7 = v3 + 6;
      uint64_t v5 = (char *)&qword_26788BA90 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BA90, &dword_21572C000);
        __cxa_guard_release(&qword_26788B8F0);
        return;
      }
    }
    if (v2 >= 0) {
      char v9 = v1;
    }
    else {
      char v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_215779F6C(_Unwind_Exception *a1)
{
}

long long *sub_215779F84()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678844A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678844A0))
  {
    return &xmmword_267884488;
  }
  uint64_t v1 = (char *)sub_21577A06C();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884488, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884498 = *((void *)v1 + 2);
    xmmword_267884488 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884488, &dword_21572C000);
  __cxa_guard_release(&qword_2678844A0);
  return &xmmword_267884488;
}

void sub_21577A054(_Unwind_Exception *a1)
{
}

void *sub_21577A06C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678844C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678844C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLogMessageFilter]", qword_2678844A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678844A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678844C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678844E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678844E0))
  {
    return &unk_2678844C8;
  }
  sub_215E19DF4((uint64_t)qword_2678844A8, (uint64_t)&unk_2678844C8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678844C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678844E0);
  return &unk_2678844C8;
}

void sub_21577A170(_Unwind_Exception *a1)
{
}

void sub_21577A188(_Unwind_Exception *a1)
{
}

uint64_t sub_21577A1A0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    sub_21577A2CC((void *)a1, (uint64_t *)a2);
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

void sub_21577A20C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  if (*((unsigned char *)v13 + 24))
  {
    char v15 = *v13;
    if (*v13)
    {
      char v16 = v13[1];
      long long v17 = *v13;
      if (v16 != v15)
      {
        uint64_t v18 = 0;
        do
        {
          char v19 = &v16[v18];
          if (v16[v18 - 8])
          {
            uint64_t v20 = *((unsigned int *)v19 - 4);
            if (v20 != -1) {
              ((void (*)(char *, char *))off_26C657AE8[v20])(&a13, v19 - 48);
            }
            *((_DWORD *)v19 - 4) = -1;
          }
          *((void *)v19 - 102) = off_26C678AE8;
          sub_215948050((uint64_t)(v19 - 800));
          v18 -= 816;
        }
        while (&v16[v18] != v15);
        long long v17 = *v13;
      }
      v13[1] = v15;
      operator delete(v17);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577A2CC(void *a1, uint64_t *a2)
{
  a1[2] = 0;
  uint64_t v3 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  int64_t v6 = v5 - *a2;
  if (v5 != *a2)
  {
    unint64_t v7 = 0xFAFAFAFAFAFAFAFBLL * (v6 >> 4);
    if (v7 >= 0x50505050505051) {
      sub_215738AC0();
    }
    char v8 = (char *)operator new(v6);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[816 * v7];
    a1[1] = sub_21577A460(v3, v4, v5, (uint64_t)v8);
  }
  return a1;
}

void sub_21577A39C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  v13[1] = v14;
  char v16 = (char *)*v13;
  if (*v13)
  {
    long long v17 = (char *)v13[1];
    uint64_t v18 = *v13;
    if (v17 != v16)
    {
      uint64_t v19 = 0;
      do
      {
        uint64_t v20 = &v17[v19];
        if (v17[v19 - 8])
        {
          uint64_t v21 = *((unsigned int *)v20 - 4);
          if (v21 != -1) {
            ((void (*)(char *, char *))off_26C657AE8[v21])(&a13, v20 - 48);
          }
          *((_DWORD *)v20 - 4) = -1;
        }
        *((void *)v20 - 102) = off_26C678AE8;
        sub_215948050((uint64_t)(v20 - 800));
        v19 -= 816;
      }
      while (&v17[v19] != v16);
      uint64_t v18 = *v13;
    }
    v13[1] = v16;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21577A460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  if (a2 != a3)
  {
    uint64_t v6 = a2 + 768;
    do
    {
      *(void *)uint64_t v4 = off_26C678AE8;
      sub_21577A6C8(v4 + 16, v6 - 752);
      *(unsigned char *)(v4 + 768) = 0;
      *(unsigned char *)(v4 + 808) = 0;
      if (*(unsigned char *)(v6 + 40))
      {
        *(unsigned char *)(v4 + 768) = 0;
        *(_DWORD *)(v4 + 800) = -1;
        uint64_t v8 = *(unsigned int *)(v6 + 32);
        if (v8 != -1)
        {
          ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B98[v8])(v11, v4 + 768, v6);
          *(_DWORD *)(v4 + 800) = v8;
        }
        *(unsigned char *)(v4 + 808) = 1;
      }
      uint64_t v4 = v10 + 816;
      v10 += 816;
      uint64_t v7 = v6 + 48;
      v6 += 816;
    }
    while (v7 != a3);
  }
  return v4;
}

void sub_21577A57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v24 = *(unsigned int *)(v19 + 800);
  if (v24 != -1) {
    ((void (*)(char *, uint64_t))off_26C657AE8[v24])(&a19, v22);
  }
  *(_DWORD *)(v19 + 800) = -1;
  *(void *)uint64_t v19 = v21;
  sub_215948050(v20);
  sub_21577A5E0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_21577A5CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21577A5E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21577A5E0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v4 = *(uint64_t **)(a1 + 8);
    uint64_t v3 = *(uint64_t **)(a1 + 16);
    uint64_t v5 = *v3;
    uint64_t v6 = *v4;
    if (*v3 != *v4)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = v5 + v7;
        if (*(unsigned char *)(v5 + v7 - 8))
        {
          uint64_t v9 = *(unsigned int *)(v8 - 16);
          if (v9 != -1) {
            ((void (*)(char *, uint64_t))off_26C657AE8[v9])(&v10, v8 - 48);
          }
          *(_DWORD *)(v8 - 16) = -1;
        }
        *(void *)(v8 - 816) = off_26C678AE8;
        sub_215948050(v8 - 800);
        v7 -= 816;
      }
      while (v5 + v7 != v6);
    }
  }
  return a1;
}

uint64_t sub_21577A6C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 48) = 0;
  if (*(unsigned char *)(a2 + 48))
  {
    *(unsigned char *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 40) = -1;
    uint64_t v4 = *(unsigned int *)(a2 + 40);
    if (v4 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B08[v4])(v18, a1 + 8, a2 + 8);
      *(_DWORD *)(a1 + 40) = v4;
    }
    *(unsigned char *)(a1 + 48) = 1;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  sub_21577AFD8((unsigned char *)(a1 + 72), (long long *)(a2 + 72));
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  if (*(unsigned char *)(a2 + 152))
  {
    *(unsigned char *)(a1 + 120) = 0;
    *(_DWORD *)(a1 + 144) = -1;
    uint64_t v6 = *(unsigned int *)(a2 + 144);
    if (v6 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B28[v6])(v19, a1 + 120, a2 + 120);
      *(_DWORD *)(a1 + 144) = v6;
    }
    *(unsigned char *)(a1 + 152) = 1;
  }
  *(unsigned char *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  if (*(unsigned char *)(a2 + 224))
  {
    *(unsigned char *)(a1 + 160) = 0;
    *(_DWORD *)(a1 + 216) = -1;
    uint64_t v7 = *(unsigned int *)(a2 + 216);
    if (v7 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B48[v7])(v20, a1 + 160, a2 + 160);
      *(_DWORD *)(a1 + 216) = v7;
    }
    *(unsigned char *)(a1 + 224) = 1;
  }
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  if (*(unsigned char *)(a2 + 256))
  {
    uint64_t v9 = *(void *)(a2 + 240);
    uint64_t v8 = *(void *)(a2 + 248);
    *(void *)(a1 + 232) = &unk_26C678D20;
    *(void *)(a1 + 240) = v9;
    *(void *)(a1 + 248) = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 256) = 1;
  }
  *(unsigned char *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 312) = 0;
  if (*(unsigned char *)(a2 + 312))
  {
    *(unsigned char *)(a1 + 272) = 0;
    *(_DWORD *)(a1 + 304) = -1;
    uint64_t v10 = *(unsigned int *)(a2 + 304);
    if (v10 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B08[v10])(v21, a1 + 272, a2 + 272);
      *(_DWORD *)(a1 + 304) = v10;
    }
    *(unsigned char *)(a1 + 312) = 1;
  }
  *(unsigned char *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 416) = 0;
  if (*(unsigned char *)(a2 + 416))
  {
    *(unsigned char *)(a1 + 336) = 0;
    *(_DWORD *)(a1 + 400) = -1;
    uint64_t v11 = *(unsigned int *)(a2 + 400);
    if (v11 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B68[v11])(v22, a1 + 336, a2 + 336);
      *(_DWORD *)(a1 + 400) = v11;
    }
    *(unsigned char *)(a1 + 416) = 1;
  }
  *(unsigned char *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 576) = 0;
  if (*(unsigned char *)(a2 + 576))
  {
    *(unsigned char *)(a1 + 448) = 0;
    *(_DWORD *)(a1 + 560) = -1;
    uint64_t v12 = *(unsigned int *)(a2 + 560);
    if (v12 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B88[v12])(v23, a1 + 448, a2 + 448);
      *(_DWORD *)(a1 + 560) = v12;
    }
    *(unsigned char *)(a1 + 576) = 1;
  }
  sub_21577B4F8((unsigned char *)(a1 + 592), a2 + 592);
  *(unsigned char *)(a1 + 632) = 0;
  *(unsigned char *)(a1 + 680) = 0;
  if (*(unsigned char *)(a2 + 680))
  {
    *(unsigned char *)(a1 + 640) = 0;
    *(_DWORD *)(a1 + 672) = -1;
    uint64_t v13 = *(unsigned int *)(a2 + 672);
    if (v13 != -1)
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))off_26C657B08[v13])(v24, a1 + 640, a2 + 640);
      *(_DWORD *)(a1 + 672) = v13;
    }
    *(unsigned char *)(a1 + 680) = 1;
  }
  long long v14 = *(_OWORD *)(a2 + 688);
  long long v15 = *(_OWORD *)(a2 + 704);
  long long v16 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 729) = *(_OWORD *)(a2 + 729);
  *(_OWORD *)(a1 + 704) = v15;
  *(_OWORD *)(a1 + 720) = v16;
  *(_OWORD *)(a1 + 688) = v14;
  return a1;
}

void sub_21577AA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v21 = *(unsigned int *)(v13 + 672);
  if (v21 != -1) {
    ((void (*)(char *, uint64_t))off_26C657AF8[v21])(&a13, v19);
  }
  *(_DWORD *)(v13 + 672) = -1;
  sub_21577AC00(v18);
  sub_21577ACB0(v13 + 432);
  sub_21577AD14(v13 + 320);
  sub_21577AD78(v13 + 264);
  if (*(unsigned char *)(v13 + 256)) {
    sub_215AEFACC(v17);
  }
  sub_21577ADDC(v16);
  sub_21577AE40(v15);
  sub_21577AEA4(v14);
  sub_21577AD78(v13);
  _Unwind_Resume(a1);
}

void sub_21577ABEC(_Unwind_Exception *a1)
{
  sub_21577AD78(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21577AC00(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      long long v2 = *(void ***)a1;
      if (*(void *)a1)
      {
        uint64_t v3 = *(void ***)(a1 + 8);
        uint64_t v4 = *(void ***)a1;
        if (v3 == v2)
        {
LABEL_15:
          *(void *)(a1 + 8) = v2;
          operator delete(v4);
          return a1;
        }
        while (1)
        {
          if (*((unsigned char *)v3 - 16) && *((char *)v3 - 41) < 0)
          {
            operator delete(*(v3 - 8));
            if (*((unsigned char *)v3 - 72))
            {
LABEL_10:
              if (*((char *)v3 - 73) < 0) {
                operator delete(*(v3 - 12));
              }
            }
          }
          else if (*((unsigned char *)v3 - 72))
          {
            goto LABEL_10;
          }
          v3 -= 12;
          if (v3 == v2)
          {
            uint64_t v4 = *(void ***)a1;
            goto LABEL_15;
          }
        }
      }
    }
  }
  return a1;
}

uint64_t sub_21577ACB0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 144))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 128);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C657B78[v2])(&v4, a1 + 16);
    }
    *(_DWORD *)(a1 + 128) = -1;
  }
  return a1;
}

uint64_t sub_21577AD14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 80);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C657B58[v2])(&v4, a1 + 16);
    }
    *(_DWORD *)(a1 + 80) = -1;
  }
  return a1;
}

uint64_t sub_21577AD78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C657AF8[v2])(&v4, a1 + 8);
    }
    *(_DWORD *)(a1 + 40) = -1;
  }
  return a1;
}

uint64_t sub_21577ADDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 56);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C657B38[v2])(&v4, a1);
    }
    *(_DWORD *)(a1 + 56) = -1;
  }
  return a1;
}

uint64_t sub_21577AE40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C657B18[v2])(&v4, a1);
    }
    *(_DWORD *)(a1 + 24) = -1;
  }
  return a1;
}

uint64_t sub_21577AEA4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 40) && *(unsigned char *)(result + 32) && *(char *)(result + 23) < 0)
  {
    operator delete(*(void **)result);
    return v1;
  }
  return result;
}

void sub_21577AEF8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
  }
}

void sub_21577AF14(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void *sub_21577AF28(int a1, unsigned char *__dst, long long *a3)
{
  *long long __dst = 0;
  __dst[24] = 0;
  if (*((unsigned char *)a3 + 24))
  {
    if (*((char *)a3 + 23) < 0)
    {
      uint64_t result = sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      long long v4 = *a3;
      *((void *)__dst + 2) = *((void *)a3 + 2);
      *(_OWORD *)long long __dst = v4;
    }
    __dst[24] = 1;
  }
  return result;
}

void sub_21577AF88(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577AFAC(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

unsigned char *sub_21577AFD8(unsigned char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[40] = 0;
  if (*((unsigned char *)a2 + 40))
  {
    *long long __dst = 0;
    __dst[32] = 0;
    if (*((unsigned char *)a2 + 32))
    {
      if (*((char *)a2 + 23) < 0)
      {
        sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
      }
      else
      {
        long long v4 = *a2;
        *((void *)__dst + 2) = *((void *)a2 + 2);
        *(_OWORD *)long long __dst = v4;
      }
      *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
      __dst[32] = 1;
    }
    __dst[40] = 1;
  }
  return __dst;
}

void sub_21577B060(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 32) && *(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  if (*(unsigned char *)(v1 + 40) && *(unsigned char *)(v1 + 32) && *(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_21577B0A4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void sub_21577B0B8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

void *sub_21577B0CC(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

void *sub_21577B0F8(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

void sub_21577B124(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 48) && *(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    long long v3 = *(void **)a2;
    operator delete(v3);
  }
}

void sub_21577B184(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

unsigned char *sub_21577B198(int a1, unsigned char *__dst, long long *a3)
{
  return sub_21577B1D0(__dst, a3);
}

void *sub_21577B1A4(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

unsigned char *sub_21577B1D0(unsigned char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    __dst[24] = 0;
    uint64_t v5 = __dst + 24;
    __dst[48] = 0;
    if (!*((unsigned char *)a2 + 48)) {
      return __dst;
    }
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
    __dst[24] = 0;
    uint64_t v5 = __dst + 24;
    __dst[48] = 0;
    if (!*((unsigned char *)a2 + 48)) {
      return __dst;
    }
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_215738B0C(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v5 + 2) = *((void *)a2 + 5);
    *(_OWORD *)uint64_t v5 = v7;
  }
  __dst[48] = 1;
  return __dst;
}

void sub_21577B294(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48) && *(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_21577B2C8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 48))
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
  }
}

void sub_21577B2E4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

uint64_t sub_21577B2F8(int a1, unsigned char *__dst, long long *a3)
{
  *long long __dst = 0;
  __dst[48] = 0;
  if (*((unsigned char *)a3 + 48))
  {
    if (*((char *)a3 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      long long v4 = *a3;
      *((void *)__dst + 2) = *((void *)a3 + 2);
      *(_OWORD *)long long __dst = v4;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *((void *)__dst + 4) = result;
    *((void *)__dst + 5) = 0;
    __dst[48] = 1;
  }
  return result;
}

void sub_21577B370(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577B394(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

void sub_21577B3C0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 96))
  {
    if (*(unsigned char *)(a2 + 80) && *(char *)(a2 + 55) < 0) {
      operator delete(*(void **)(a2 + 32));
    }
    if (*(unsigned char *)(a2 + 24) && *(char *)(a2 + 23) < 0)
    {
      long long v3 = *(void **)a2;
      operator delete(v3);
    }
  }
}

void sub_21577B430(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
}

unsigned char *sub_21577B444(int a1, unsigned char *__dst, uint64_t a3)
{
  *long long __dst = 0;
  __dst[96] = 0;
  if (*(unsigned char *)(a3 + 96))
  {
    uint64_t result = sub_21574709C(__dst, (long long *)a3);
    __dst[96] = 1;
  }
  return result;
}

void sub_21577B488(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 96))
  {
    if (*(unsigned char *)(v1 + 80) && *(char *)(v1 + 55) < 0) {
      operator delete(*(void **)(v1 + 32));
    }
    if (*(unsigned char *)(v1 + 24))
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577B4CC(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0) {
    return sub_215738B0C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  long long v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)long long __dst = v3;
  return result;
}

unsigned char *sub_21577B4F8(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[32] = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    sub_215746DAC((uint64_t)a1, a2);
    a1[32] = 1;
  }
  return a1;
}

void sub_21577B544(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 32))
  {
    if (*(unsigned char *)(v1 + 24))
    {
      long long v3 = *(void ***)v1;
      if (*(void *)v1)
      {
        long long v4 = *(void ***)(v1 + 8);
        uint64_t v5 = *(void ***)v1;
        if (v4 != v3)
        {
          do
          {
            if (*((unsigned char *)v4 - 16) && *((char *)v4 - 41) < 0) {
              operator delete(*(v4 - 8));
            }
            if (*((unsigned char *)v4 - 72))
            {
              if (*((char *)v4 - 73) < 0) {
                operator delete(*(v4 - 12));
              }
            }
            v4 -= 12;
          }
          while (v4 != v3);
          uint64_t v5 = *(void ***)v1;
        }
        *(void *)(v1 + 8) = v3;
        operator delete(v5);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21577B5C8(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

uint64_t sub_21577B5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a3 + 24);
  if (result)
  {
    if (result == a3)
    {
      *(void *)(a2 + 24) = a2;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(a3 + 24) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      *(void *)(a2 + 24) = result;
    }
  }
  else
  {
    *(void *)(a2 + 24) = 0;
  }
  return result;
}

void sub_21577B684()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B8F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B8F8))
  {
    sub_21577B758();
    if (byte_26788BAD7 < 0)
    {
      sub_215738B0C(&xmmword_26788BAA8, (void *)qword_26788BAC0, unk_26788BAC8);
    }
    else
    {
      xmmword_26788BAA8 = *(_OWORD *)&qword_26788BAC0;
      qword_26788BAB8 = unk_26788BAD0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BAA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B8F8);
  }
}

void sub_21577B740(_Unwind_Exception *a1)
{
}

void sub_21577B758()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B900))
  {
    sub_21577B970(__p);
    sub_21577B838(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BAC0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B900);
  }
}

void sub_21577B7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788B900);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788B900);
  _Unwind_Resume(a1);
}

void sub_21577B838(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_21577BB78();
  if (*((char *)v2 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v2, *((void *)v2 + 1));
  }
  else
  {
    long long v3 = *v2;
    uint64_t v12 = *((void *)v2 + 2);
    *(_OWORD *)long long __dst = v3;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788BAC0, v4, v5);
  uint64_t v6 = (void **)__p;
  if (__p)
  {
    long long v7 = v10;
    uint64_t v8 = __p;
    if (v10 != __p)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      uint64_t v8 = __p;
    }
    uint64_t v10 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21577B938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21577B970(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B908, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B908))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::FileExportOptions>]", qword_26788BAD8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BAD8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B908);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B910, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B910))
  {
    size_t v3 = sub_215747D98(qword_26788BAD8, "<", 0);
    sub_215747C90(qword_26788BAD8, 0, v3, qword_26788BAF0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BAF0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B910);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B918, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B918))
  {
    sub_215E19DF4((uint64_t)qword_26788BAF0, (uint64_t)&xmmword_26788BB08);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BB08, &dword_21572C000);
    __cxa_guard_release(&qword_26788B918);
  }
  if (byte_26788BB1F < 0)
  {
    long long v2 = xmmword_26788BB08;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BB08;
    __dst[2] = unk_26788BB18;
  }
}

void sub_21577BB30(_Unwind_Exception *a1)
{
}

void sub_21577BB48(_Unwind_Exception *a1)
{
}

void sub_21577BB60(_Unwind_Exception *a1)
{
}

long long *sub_21577BB78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884500, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884500))
  {
    return &xmmword_2678844E8;
  }
  char v1 = (char *)sub_21577BC60();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678844E8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678844F8 = *((void *)v1 + 2);
    xmmword_2678844E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678844E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884500);
  return &xmmword_2678844E8;
}

void sub_21577BC48(_Unwind_Exception *a1)
{
}

void *sub_21577BC60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884520, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884520))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::FileExportOptions]", qword_267884508);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884508, &dword_21572C000);
    __cxa_guard_release(&qword_267884520);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884540, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884540))
  {
    return &unk_267884528;
  }
  sub_215E19DF4((uint64_t)qword_267884508, (uint64_t)&unk_267884528);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884528, &dword_21572C000);
  __cxa_guard_release(&qword_267884540);
  return &unk_267884528;
}

void sub_21577BD64(_Unwind_Exception *a1)
{
}

void sub_21577BD7C(_Unwind_Exception *a1)
{
}

void sub_21577BD94(uint64_t **a1, uint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  int64x2_t v4 = (uint64_t *)sub_215753740();
  int8x16_t v5 = sub_21575C17C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v28 = v5[2];
    *(_OWORD *)long long __dst = v6;
  }
  sub_21577B684();
  if (SHIBYTE(qword_26788BAB8) < 0)
  {
    sub_215738B0C(&v29, (void *)xmmword_26788BAA8, *((unint64_t *)&xmmword_26788BAA8 + 1));
  }
  else
  {
    long long v29 = xmmword_26788BAA8;
    uint64_t v30 = qword_26788BAB8;
  }
  long long v7 = sub_215754F30();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v31, (void *)*v7, v7[1]);
  }
  else
  {
    long long v8 = *(_OWORD *)v7;
    uint64_t v32 = v7[2];
    long long v31 = v8;
  }
  uint64_t v9 = sub_21577C0F0();
  if (*((char *)v9 + 23) < 0)
  {
    sub_215738B0C(&v33, (void *)*v9, v9[1]);
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    uint64_t v34 = v9[2];
    long long v33 = v10;
  }
  sub_21573A150(&v25, (uint64_t)__dst, 4uLL);
  sub_215742C3C(v14, a2);
  sub_21574086C(v4, (uint64_t *)&v25, (uint64_t)v14, **a1);
  if (!v24 || !v23) {
    goto LABEL_21;
  }
  if (!v22) {
    goto LABEL_18;
  }
  if ((v21 & 0x80000000) == 0)
  {
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_18;
    }
LABEL_39:
    operator delete(v18);
    if (!v17) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  operator delete(v20);
  if (v19 < 0) {
    goto LABEL_39;
  }
LABEL_18:
  if (!v17) {
    goto LABEL_21;
  }
LABEL_19:
  if (v16 < 0) {
    operator delete(__p);
  }
LABEL_21:
  uint64_t v11 = (void **)v25;
  if (v25)
  {
    uint64_t v12 = v26;
    uint64_t v13 = v25;
    if (v26 != v25)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v25;
    }
    char v26 = v11;
    operator delete(v13);
  }
  if (SHIBYTE(v34) < 0)
  {
    operator delete((void *)v33);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_31:
      if ((SHIBYTE(v30) & 0x80000000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_36;
    }
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_31;
  }
  operator delete((void *)v31);
  if ((SHIBYTE(v30) & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v28) & 0x80000000) == 0) {
      return;
    }
LABEL_37:
    operator delete(__dst[0]);
    return;
  }
LABEL_36:
  operator delete((void *)v29);
  if (SHIBYTE(v28) < 0) {
    goto LABEL_37;
  }
}

void sub_21577C034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (a52 < 0)
  {
    operator delete(__p);
    if ((a46 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a40 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((a46 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a41);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a34 & 0x80000000) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
LABEL_9:
    operator delete(a29);
    _Unwind_Resume(a1);
  }
LABEL_8:
  operator delete(a35);
  if ((a34 & 0x80000000) == 0) {
    goto LABEL_10;
  }
  goto LABEL_9;
}

void sub_21577C0C8()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x21577C0C0);
    }
  }
}

uint64_t *sub_21577C0F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884560, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884560))
  {
    uint64_t v1 = sub_21577C240();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    long long v6 = &qword_267884548;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884550 = v4 + 1;
      unk_267884558 = v8 | 0x8000000000000000;
      qword_267884548 = (uint64_t)v9;
      long long v6 = v9;
    }
    else
    {
      qword_267884550 = 0;
      unk_267884558 = 0;
      qword_267884548 = 0;
      byte_26788455F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884548, &dword_21572C000);
        __cxa_guard_release(&qword_267884560);
        return &qword_267884548;
      }
    }
    if (v3 >= 0) {
      long long v10 = v2;
    }
    else {
      long long v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884548;
}

void sub_21577C228(_Unwind_Exception *a1)
{
}

uint64_t *sub_21577C240()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884580, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884580))
  {
    uint64_t v1 = sub_21577C3C4();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v9 = (char *)operator new(v7 + 1);
      qword_267884570 = v4 + 6;
      unk_267884578 = v8 | 0x8000000000000000;
      qword_267884568 = (uint64_t)v9;
      *(_DWORD *)uint64_t v9 = 1936617315;
      long long v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884570 = 0;
      unk_267884578 = 0;
      qword_267884568 = 0x2074736E6F63;
      byte_26788457F = v4 + 6;
      long long v6 = (char *)&qword_267884568 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884568, &dword_21572C000);
        __cxa_guard_release(&qword_267884580);
        return &qword_267884568;
      }
    }
    if (v3 >= 0) {
      long long v10 = v2;
    }
    else {
      long long v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884568;
}

void sub_21577C3AC(_Unwind_Exception *a1)
{
}

long long *sub_21577C3C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678845A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678845A0))
  {
    return &xmmword_267884588;
  }
  uint64_t v1 = (char *)sub_21577C4AC();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884588, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884598 = *((void *)v1 + 2);
    xmmword_267884588 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884588, &dword_21572C000);
  __cxa_guard_release(&qword_2678845A0);
  return &xmmword_267884588;
}

void sub_21577C494(_Unwind_Exception *a1)
{
}

void *sub_21577C4AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678845C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678845C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::nullopt_t]", qword_2678845A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678845A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678845C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678845E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678845E0))
  {
    return &unk_2678845C8;
  }
  sub_215E19DF4((uint64_t)qword_2678845A8, (uint64_t)&unk_2678845C8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678845C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678845E0);
  return &unk_2678845C8;
}

void sub_21577C5B0(_Unwind_Exception *a1)
{
}

void sub_21577C5C8(_Unwind_Exception *a1)
{
}

void sub_21577C5E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B930, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B930))
  {
    sub_21577C6B4();
    if (byte_26788BB67 < 0)
    {
      sub_215738B0C(&xmmword_26788BB20, (void *)xmmword_26788BB50, *((unint64_t *)&xmmword_26788BB50 + 1));
    }
    else
    {
      xmmword_26788BB20 = xmmword_26788BB50;
      qword_26788BB30 = unk_26788BB60;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BB20, &dword_21572C000);
    __cxa_guard_release(&qword_26788B930);
  }
}

void sub_21577C69C(_Unwind_Exception *a1)
{
}

void sub_21577C6B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B938, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B938))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZFileImportOptions]", qword_26788BB38);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BB38, &dword_21572C000);
    __cxa_guard_release(&qword_26788B938);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B940))
  {
    sub_215E19DF4((uint64_t)qword_26788BB38, (uint64_t)&xmmword_26788BB50);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BB50, &dword_21572C000);
    __cxa_guard_release(&qword_26788B940);
  }
}

void sub_21577C7A8(_Unwind_Exception *a1)
{
}

void sub_21577C7C0(_Unwind_Exception *a1)
{
}

uint64_t sub_21577C7D8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    sub_21577C944(a1, *(void *)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 8));
    *(unsigned char *)(a1 + 24) = 1;
  }
  sub_21577CB4C(a1 + 32, a2 + 32);
  return a1;
}

void sub_21577C85C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    int v3 = *(void (****)(void))v1;
    if (*(void *)v1)
    {
      size_t v4 = *(void (****)(void))(v1 + 8);
      unint64_t v5 = *(void (****)(void))v1;
      if (v4 != v3)
      {
        long long v6 = v4 - 96;
        uint64_t v7 = v4 - 96;
        do
        {
          (**v7)(v7);
          v6 -= 96;
          BOOL v8 = v7 == v3;
          v7 -= 96;
        }
        while (!v8);
        unint64_t v5 = *(void (****)(void))v1;
      }
      *(void *)(v1 + 8) = v3;
      operator delete(v5);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21577C944(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v5 = (void *)result;
    if (a4 >= 0x55555555555556) {
      sub_215738AC0();
    }
    uint64_t result = (uint64_t)operator new(768 * a4);
    uint64_t v8 = result;
    *unint64_t v5 = result;
    v5[1] = result;
    v5[2] = result + 768 * a4;
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        *(void *)(v8 + v9) = off_26C678AE8;
        uint64_t result = sub_21577A6C8(v8 + v9 + 16, a2 + v9 + 16);
        v9 += 768;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_21577CA24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_21577CA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 768)
    (**(void (***)(void))(v10 - 768 + v11))();
  *(void *)(v9 + 8) = v10;
  sub_21577CA88(&a9);
  _Unwind_Resume(a1);
}

void ***sub_21577CA88(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    long long v2 = *result;
    int v3 = (void (***)(void))**result;
    if (v3)
    {
      size_t v4 = (void (***)(void))v2[1];
      unint64_t v5 = **result;
      if (v4 != v3)
      {
        long long v6 = v4 - 96;
        uint64_t v7 = v4 - 96;
        do
        {
          (**v7)(v7);
          v6 -= 96;
          BOOL v8 = v7 == v3;
          v7 -= 96;
        }
        while (!v8);
        unint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21577CB4C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    sub_21577CC88((void *)a1, (uint64_t *)a2);
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

void sub_21577CBA8(_Unwind_Exception *exception_object)
{
  if (*((unsigned char *)v1 + 24))
  {
    int v3 = *v1;
    if (*v1)
    {
      size_t v4 = v1[1];
      unint64_t v5 = *v1;
      if (v4 != v3)
      {
        long long v6 = v4 - 800;
        do
        {
          uint64_t v7 = (char *)*((void *)v4 - 1);
          if (v4 - 32 == v7)
          {
            (*(void (**)(char *))(*((void *)v4 - 4) + 32))(v4 - 32);
          }
          else if (v7)
          {
            (*(void (**)(char *))(*(void *)v7 + 40))(v7);
          }
          *((void *)v4 - 100) = off_26C678AE8;
          sub_215948050((uint64_t)(v4 - 784));
          v6 -= 800;
          v4 -= 800;
        }
        while (v4 != v3);
        unint64_t v5 = *v1;
      }
      v1[1] = v3;
      operator delete(v5);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577CC88(void *a1, uint64_t *a2)
{
  a1[2] = 0;
  uint64_t v3 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  int64_t v6 = v5 - *a2;
  if (v5 != *a2)
  {
    unint64_t v7 = 0x8F5C28F5C28F5C29 * (v6 >> 5);
    if (v7 >= 0x51EB851EB851ECLL) {
      sub_215738AC0();
    }
    BOOL v8 = operator new(v6);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[100 * v7];
    a1[1] = sub_21577CE2C(v3, v4, v5, v8);
  }
  return a1;
}

void sub_21577CD48(_Unwind_Exception *exception_object)
{
  v1[1] = v2;
  uint64_t v4 = (char *)*v1;
  if (*v1)
  {
    uint64_t v5 = (char *)v1[1];
    int64_t v6 = *v1;
    if (v5 != v4)
    {
      unint64_t v7 = v5 - 800;
      do
      {
        BOOL v8 = (char *)*((void *)v5 - 1);
        if (v5 - 32 == v8)
        {
          (*(void (**)(char *))(*((void *)v5 - 4) + 32))(v5 - 32);
        }
        else if (v8)
        {
          (*(void (**)(char *))(*(void *)v8 + 40))(v8);
        }
        *((void *)v5 - 100) = off_26C678AE8;
        sub_215948050((uint64_t)(v5 - 784));
        v7 -= 800;
        v5 -= 800;
      }
      while (v5 != v4);
      int64_t v6 = *v1;
    }
    v1[1] = v4;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21577CE2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  if (a2 != a3)
  {
    uint64_t v6 = a2 + 768;
    do
    {
      *uint64_t v4 = off_26C678AE8;
      sub_21577A6C8((uint64_t)(v4 + 2), v6 - 752);
      uint64_t v7 = *(void *)(v6 + 24);
      if (v7)
      {
        if (v6 == v7)
        {
          v4[99] = v4 + 96;
          (*(void (**)(void))(**(void **)(v6 + 24) + 24))(*(void *)(v6 + 24));
          goto LABEL_5;
        }
        uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
      }
      v4[99] = v7;
LABEL_5:
      uint64_t v4 = v10 + 100;
      v10 += 100;
      uint64_t v8 = v6 + 32;
      v6 += 800;
    }
    while (v8 != a3);
  }
  return v4;
}

void sub_21577CF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *uint64_t v9 = v11;
  sub_215948050(v10);
  sub_21577CF80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21577CF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_21577CF80(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v4 = *(uint64_t **)(a1 + 8);
    uint64_t v3 = *(uint64_t **)(a1 + 16);
    uint64_t v5 = *v3;
    uint64_t v6 = *v4;
    if (*v3 != *v4)
    {
      uint64_t v7 = v5 - 800;
      do
      {
        uint64_t v8 = *(void *)(v5 - 8);
        if (v5 - 32 == v8)
        {
          (*(void (**)(uint64_t))(*(void *)(v5 - 32) + 32))(v5 - 32);
        }
        else if (v8)
        {
          (*(void (**)(uint64_t))(*(void *)v8 + 40))(v8);
        }
        *(void *)(v5 - 800) = off_26C678AE8;
        sub_215948050(v5 - 784);
        v7 -= 800;
        v5 -= 800;
      }
      while (v5 != v6);
    }
  }
  return a1;
}

void sub_21577D078()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B958, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B958))
  {
    sub_21577D14C();
    if (byte_26788BB97 < 0)
    {
      sub_215738B0C(&xmmword_26788BB68, (void *)qword_26788BB80, unk_26788BB88);
    }
    else
    {
      xmmword_26788BB68 = *(_OWORD *)&qword_26788BB80;
      qword_26788BB78 = unk_26788BB90;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BB68, &dword_21572C000);
    __cxa_guard_release(&qword_26788B958);
  }
}

void sub_21577D134(_Unwind_Exception *a1)
{
}

void sub_21577D14C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B960))
  {
    sub_21577D40C(__p);
    sub_21577D22C(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BB80, &dword_21572C000);
    __cxa_guard_release(&qword_26788B960);
  }
}

void sub_21577D1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788B960);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788B960);
  _Unwind_Resume(a1);
}

void sub_21577D22C(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B968, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B968))
  {
    sub_21577D614();
    if (byte_26788BBDF < 0)
    {
      sub_215738B0C(&xmmword_26788BB98, (void *)xmmword_26788BBC8, *((unint64_t *)&xmmword_26788BBC8 + 1));
    }
    else
    {
      xmmword_26788BB98 = xmmword_26788BBC8;
      unk_26788BBA8 = unk_26788BBD8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BB98, &dword_21572C000);
    __cxa_guard_release(&qword_26788B968);
  }
  if (byte_26788BBAF < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788BB98, *((unint64_t *)&xmmword_26788BB98 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BB98;
    uint64_t v10 = unk_26788BBA8;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788BB80, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    uint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21577D3C4(_Unwind_Exception *a1)
{
}

void sub_21577D3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_21577D40C(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B980))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::FileImportOptions>]", qword_26788BBE0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BBE0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B980);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B988, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B988))
  {
    size_t v3 = sub_215747D98(qword_26788BBE0, "<", 0);
    sub_215747C90(qword_26788BBE0, 0, v3, qword_26788BBF8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BBF8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B988);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B990, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B990))
  {
    sub_215E19DF4((uint64_t)qword_26788BBF8, (uint64_t)&xmmword_26788BC10);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BC10, &dword_21572C000);
    __cxa_guard_release(&qword_26788B990);
  }
  if (byte_26788BC27 < 0)
  {
    long long v2 = xmmword_26788BC10;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BC10;
    __dst[2] = unk_26788BC20;
  }
}

void sub_21577D5CC(_Unwind_Exception *a1)
{
}

void sub_21577D5E4(_Unwind_Exception *a1)
{
}

void sub_21577D5FC(_Unwind_Exception *a1)
{
}

void sub_21577D614()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B970, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B970))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::FileImportOptions]", qword_26788BBB0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BBB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B970);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B978, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B978))
  {
    sub_215E19DF4((uint64_t)qword_26788BBB0, (uint64_t)&xmmword_26788BBC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BBC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B978);
  }
}

void sub_21577D708(_Unwind_Exception *a1)
{
}

void sub_21577D720(_Unwind_Exception *a1)
{
}

unint64_t sub_21577D738(unint64_t a1, char *__src, char *a3)
{
  int v6 = *(char *)(a1 + 23);
  size_t v7 = a3 - __src;
  if (v6 < 0)
  {
    if (a3 == __src) {
      return a1;
    }
    size_t v8 = *(void *)(a1 + 8);
    unint64_t v12 = *(void *)(a1 + 16);
    unint64_t v9 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    uint64_t v11 = *(unsigned char **)a1;
    unint64_t v10 = HIBYTE(v12);
    if (*(void *)a1 > (unint64_t)__src) {
      goto LABEL_11;
    }
  }
  else
  {
    if (a3 == __src) {
      return a1;
    }
    size_t v8 = *(unsigned __int8 *)(a1 + 23);
    unint64_t v9 = 22;
    LOBYTE(v10) = *(unsigned char *)(a1 + 23);
    uint64_t v11 = (unsigned char *)a1;
    if (a1 > (unint64_t)__src)
    {
LABEL_11:
      if (v9 - v8 >= v7)
      {
        char v16 = (unsigned char *)a1;
        if ((v10 & 0x80) != 0)
        {
          char v16 = *(unsigned char **)a1;
          char v17 = (unsigned char *)(*(void *)a1 + v8);
          if (v7 >= 0x20) {
            goto LABEL_36;
          }
        }
        else
        {
          char v17 = (unsigned char *)(a1 + v8);
          if (v7 >= 0x20) {
            goto LABEL_36;
          }
        }
        goto LABEL_23;
      }
      size_t v14 = 0x7FFFFFFFFFFFFFF7;
      if (0x7FFFFFFFFFFFFFF7 - v9 < v8 + v7 - v9) {
        sub_215731CD8();
      }
      uint64_t v15 = (unsigned char *)a1;
      if (v6 < 0)
      {
        uint64_t v15 = *(unsigned char **)a1;
        if (v9 > 0x3FFFFFFFFFFFFFF2)
        {
LABEL_15:
          char v16 = operator new(0x7FFFFFFFFFFFFFF7uLL);
          if (!v8) {
            goto LABEL_17;
          }
          goto LABEL_16;
        }
      }
      else if (v9 > 0x3FFFFFFFFFFFFFF2)
      {
        goto LABEL_15;
      }
      unint64_t v30 = 2 * v9;
      if (v8 + v7 > 2 * v9) {
        unint64_t v30 = v8 + v7;
      }
      uint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v30 | 7) != 0x17) {
        uint64_t v31 = v30 | 7;
      }
      if (v30 >= 0x17) {
        size_t v14 = v31 + 1;
      }
      else {
        size_t v14 = 23;
      }
      char v16 = operator new(v14);
      if (!v8)
      {
LABEL_17:
        if (v9 != 22) {
          operator delete(v15);
        }
        *(void *)(a1 + 8) = v8;
        *(void *)(a1 + 16) = v14 | 0x8000000000000000;
        *(void *)a1 = v16;
        char v17 = &v16[v8];
        if (v7 >= 0x20)
        {
LABEL_36:
          if ((unint64_t)(&v16[v8] - __src) >= 0x20)
          {
            uint64_t v18 = &__src[v7 & 0xFFFFFFFFFFFFFFE0];
            v17 += v7 & 0xFFFFFFFFFFFFFFE0;
            char v23 = &v16[v8 + 16];
            char v24 = (long long *)(__src + 16);
            unint64_t v25 = v7 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v26 = *v24;
              *(v23 - 1) = *(v24 - 1);
              _OWORD *v23 = v26;
              v23 += 2;
              v24 += 2;
              v25 -= 32;
            }
            while (v25);
            if (v7 == (v7 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t v18 = __src;
          }
          do
          {
LABEL_41:
            char v27 = *v18++;
            *v17++ = v27;
          }
          while (v18 != a3);
LABEL_42:
          *char v17 = 0;
          size_t v28 = v8 + v7;
          if (*(char *)(a1 + 23) < 0) {
            *(void *)(a1 + 8) = v28;
          }
          else {
            *(unsigned char *)(a1 + 23) = v28 & 0x7F;
          }
          return a1;
        }
LABEL_23:
        uint64_t v18 = __src;
        goto LABEL_41;
      }
LABEL_16:
      memmove(v16, v15, v8);
      goto LABEL_17;
    }
  }
  if (&v11[v8 + 1] <= __src) {
    goto LABEL_11;
  }
  if (v7 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  if (v7 > 0x16)
  {
    uint64_t v19 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v19 = v7 | 7;
    }
    uint64_t v20 = v19 + 1;
    p_dst = (void **)operator new(v19 + 1);
    size_t v33 = v7;
    int64_t v34 = v20 | 0x8000000000000000;
    long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v34) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = (void **)&__dst;
  }
  memcpy(p_dst, __src, v7);
  *((unsigned char *)p_dst + v7) = 0;
  if (v34 >= 0) {
    char v21 = (const std::string::value_type *)&__dst;
  }
  else {
    char v21 = (const std::string::value_type *)__dst;
  }
  if (v34 >= 0) {
    std::string::size_type v22 = HIBYTE(v34);
  }
  else {
    std::string::size_type v22 = v33;
  }
  std::string::append((std::string *)a1, v21, v22);
  if (SHIBYTE(v34) < 0) {
    operator delete(__dst);
  }
  return a1;
}

void sub_21577DA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_21577DA40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884600, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884600))
  {
    return &xmmword_2678845E8;
  }
  char v1 = (char *)sub_21577DB28();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678845E8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678845F8 = *((void *)v1 + 2);
    xmmword_2678845E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678845E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884600);
  return &xmmword_2678845E8;
}

void sub_21577DB10(_Unwind_Exception *a1)
{
}

void *sub_21577DB28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884620, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884620))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLogMessageList]", qword_267884608);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884608, &dword_21572C000);
    __cxa_guard_release(&qword_267884620);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884640, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884640))
  {
    return &unk_267884628;
  }
  sub_215E19DF4((uint64_t)qword_267884608, (uint64_t)&unk_267884628);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884628, &dword_21572C000);
  __cxa_guard_release(&qword_267884640);
  return &unk_267884628;
}

void sub_21577DC2C(_Unwind_Exception *a1)
{
}

void sub_21577DC44(_Unwind_Exception *a1)
{
}

void sub_21577DC5C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::LogMessageList]", qword_26788BC40);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BC40, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9A8))
  {
    sub_215E19DF4((uint64_t)qword_26788BC40, (uint64_t)&xmmword_26788BC58);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BC58, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9A8);
  }
}

void sub_21577DD50(_Unwind_Exception *a1)
{
}

void sub_21577DD68(_Unwind_Exception *a1)
{
}

void sub_21577DD80(uint64_t **a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  sub_21577E388();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9C8))
  {
    sub_21577E580();
    if (byte_26788BCFF < 0)
    {
      sub_215738B0C(&xmmword_26788BCB8, (void *)xmmword_26788BCE8, *((unint64_t *)&xmmword_26788BCE8 + 1));
    }
    else
    {
      xmmword_26788BCB8 = xmmword_26788BCE8;
      unk_26788BCC8 = unk_26788BCF8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BCB8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9C8);
  }
  if (byte_26788BCCF < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788BCB8, *((unint64_t *)&xmmword_26788BCB8 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BCB8;
    uint64_t v30 = unk_26788BCC8;
  }
  sub_21577D078();
  if (SHIBYTE(qword_26788BB78) < 0)
  {
    sub_215738B0C(&v31, (void *)xmmword_26788BB68, *((unint64_t *)&xmmword_26788BB68 + 1));
  }
  else
  {
    long long v31 = xmmword_26788BB68;
    uint64_t v32 = qword_26788BB78;
  }
  uint64_t v4 = sub_215754F30();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&v33, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v34 = v4[2];
    long long v33 = v5;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9E0))
  {
    sub_21577E6A4();
    int v9 = byte_26788BD2F;
    if (byte_26788BD2F >= 0) {
      size_t v10 = byte_26788BD2F;
    }
    else {
      size_t v10 = *((void *)&xmmword_26788BD18 + 1);
    }
    unint64_t v11 = v10 + 1;
    if (v10 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v11 >= 0x17)
    {
      uint64_t v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17) {
        uint64_t v13 = v11 | 7;
      }
      uint64_t v14 = v13 + 1;
      unint64_t v12 = (long long *)operator new(v13 + 1);
      *((void *)&xmmword_26788BD00 + 1) = v10 + 1;
      unk_26788BD10 = v14 | 0x8000000000000000;
      *(void *)&xmmword_26788BD00 = v12;
    }
    else
    {
      unint64_t v12 = &xmmword_26788BD00;
      unk_26788BD10 = 0;
      xmmword_26788BD00 = 0uLL;
      byte_26788BD17 = v10 + 1;
      if (!v10)
      {
LABEL_61:
        *(_WORD *)((char *)v12 + v10) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BD00, &dword_21572C000);
        __cxa_guard_release(&qword_26788B9E0);
        goto LABEL_12;
      }
    }
    if (v9 >= 0) {
      uint64_t v15 = &xmmword_26788BD18;
    }
    else {
      uint64_t v15 = (long long *)xmmword_26788BD18;
    }
    memmove(v12, v15, v10);
    goto LABEL_61;
  }
LABEL_12:
  if (byte_26788BD17 < 0)
  {
    sub_215738B0C(&v35, (void *)xmmword_26788BD00, *((unint64_t *)&xmmword_26788BD00 + 1));
  }
  else
  {
    long long v35 = xmmword_26788BD00;
    uint64_t v36 = unk_26788BD10;
  }
  sub_21573A150(&v27, (uint64_t)__dst, 4uLL);
  sub_215742C3C(v16, a2);
  sub_21574086C((uint64_t *)&xmmword_26788BC70, (uint64_t *)&v27, (uint64_t)v16, **a1);
  if (!v26 || !v25) {
    goto LABEL_23;
  }
  if (!v24) {
    goto LABEL_20;
  }
  if ((v23 & 0x80000000) == 0)
  {
    if ((v21 & 0x80000000) == 0) {
      goto LABEL_20;
    }
LABEL_41:
    operator delete(v20);
    if (!v19) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  operator delete(v22);
  if (v21 < 0) {
    goto LABEL_41;
  }
LABEL_20:
  if (!v19) {
    goto LABEL_23;
  }
LABEL_21:
  if (v18 < 0) {
    operator delete(__p);
  }
LABEL_23:
  int v6 = (void **)v27;
  if (v27)
  {
    size_t v7 = v28;
    size_t v8 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      size_t v8 = v27;
    }
    size_t v28 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v36) < 0)
  {
    operator delete((void *)v35);
    if ((SHIBYTE(v34) & 0x80000000) == 0)
    {
LABEL_33:
      if ((SHIBYTE(v32) & 0x80000000) == 0) {
        goto LABEL_34;
      }
      goto LABEL_38;
    }
  }
  else if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    goto LABEL_33;
  }
  operator delete((void *)v33);
  if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v30) & 0x80000000) == 0) {
      return;
    }
LABEL_39:
    operator delete(__dst[0]);
    return;
  }
LABEL_38:
  operator delete((void *)v31);
  if (SHIBYTE(v30) < 0) {
    goto LABEL_39;
  }
}

void sub_21577E1D8(_Unwind_Exception *a1)
{
}

void sub_21577E1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  __cxa_guard_abort(&qword_26788B9E0);
  while (1)
  {
    if (*((char *)v52 - 1) < 0) {
      operator delete(*(v52 - 3));
    }
    v52 -= 3;
    if (v52 == &a29) {
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_21577E2C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 160))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_21577E388()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9B0))
  {
    sub_21577E45C();
    if (byte_26788BCB7 < 0)
    {
      sub_215738B0C(&xmmword_26788BC70, (void *)xmmword_26788BCA0, *((unint64_t *)&xmmword_26788BCA0 + 1));
    }
    else
    {
      xmmword_26788BC70 = xmmword_26788BCA0;
      unk_26788BC80 = unk_26788BCB0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BC70, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9B0);
  }
}

void sub_21577E444(_Unwind_Exception *a1)
{
}

void sub_21577E45C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9B8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZFileImporter]", qword_26788BC88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BC88, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9B8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9C0))
  {
    sub_215E19DF4((uint64_t)qword_26788BC88, (uint64_t)&xmmword_26788BCA0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BCA0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9C0);
  }
}

void sub_21577E550(_Unwind_Exception *a1)
{
}

void sub_21577E568(_Unwind_Exception *a1)
{
}

void sub_21577E580()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9D0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::filesystem::path]", qword_26788BCD0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BCD0, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9D0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9D8))
  {
    sub_215E19DF4((uint64_t)qword_26788BCD0, (uint64_t)&xmmword_26788BCE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BCE8, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9D8);
  }
}

void sub_21577E674(_Unwind_Exception *a1)
{
}

void sub_21577E68C(_Unwind_Exception *a1)
{
}

void sub_21577E6A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9E8))
  {
    sub_21577E778();
    if (byte_26788BD5F < 0)
    {
      sub_215738B0C(&xmmword_26788BD18, (void *)xmmword_26788BD48, *((unint64_t *)&xmmword_26788BD48 + 1));
    }
    else
    {
      xmmword_26788BD18 = xmmword_26788BD48;
      unk_26788BD28 = unk_26788BD58;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BD18, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9E8);
  }
}

void sub_21577E760(_Unwind_Exception *a1)
{
}

void sub_21577E778()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9F0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::fs::IFilesystem]", qword_26788BD30);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BD30, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9F0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788B9F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788B9F8))
  {
    sub_215E19DF4((uint64_t)qword_26788BD30, (uint64_t)&xmmword_26788BD48);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BD48, &dword_21572C000);
    __cxa_guard_release(&qword_26788B9F8);
  }
}

void sub_21577E86C(_Unwind_Exception *a1)
{
}

void sub_21577E884(_Unwind_Exception *a1)
{
}

void sub_21577E89C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BA08, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788BA08))
  {
    return;
  }
  sub_21577E388();
  int v0 = byte_26788BC87;
  if (byte_26788BC87 >= 0) {
    size_t v1 = byte_26788BC87;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788BC70 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    int v6 = (char *)operator new(v4 + 1);
    qword_26788BD80 = v1 + 6;
    unk_26788BD88 = v5 | 0x8000000000000000;
    qword_26788BD78 = (uint64_t)v6;
    *(_DWORD *)int v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788BD80 = 0;
  unk_26788BD88 = 0;
  qword_26788BD78 = 0x2074736E6F63;
  byte_26788BD8F = v1 + 6;
  size_t v3 = (char *)&qword_26788BD78 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      size_t v7 = &xmmword_26788BC70;
    }
    else {
      size_t v7 = (long long *)xmmword_26788BC70;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BD78, &dword_21572C000);

  __cxa_guard_release(&qword_26788BA08);
}

void sub_21577EA20(_Unwind_Exception *a1)
{
}

void *sub_21577EA38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = operator new(0x48uLL, MEMORY[0x263F8C180]);
  uint64_t v5 = result;
  if (result)
  {
    *(void *)uint64_t result = &unk_26C6565D0;
    *((_OWORD *)result + 1) = *(_OWORD *)a1;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    if (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire))
    {
      int v6 = 0;
      do
      {
        if (v6)
        {
          timespec __rqtp = (timespec)xmmword_215E98470;
          uint64_t result = (void *)nanosleep(&__rqtp, 0);
        }
        --v6;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)(a1 + 32), 1u, memory_order_acquire));
    }
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    if (v7) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
    }
    atomic_store(0, (unsigned __int8 *)(a1 + 32));
    v5[4] = v8;
    v5[5] = v7;
    *((unsigned char *)v5 + 48) = 0;
    *((_DWORD *)v5 + 14) = 1;
    *uint64_t v5 = &unk_26C657E80;
    v5[1] = &unk_26C657ED0;
    v5[8] = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_21577EB78(uint64_t a1)
{
  return a1;
}

void sub_21577EBA8(uint64_t a1)
{
  sub_2158CA328(a1 + 8);

  JUMPOUT(0x2166C4D20);
}

void sub_21577EBF4(uint64_t a1)
{
  sub_2158CA328(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t VZPixelFormatGetChannels(unsigned int a1)
{
  sub_2158C98E4(a1, (uint64_t)v3);
  uint64_t v1 = sub_21577ECF8((uint64_t)"VZPixelFormatGetChannels", v3);
  if (v13 || !v12) {
    return v1;
  }
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v8 < 0) {
      operator delete(v7);
    }
  }
  if (!v6 || (v5 & 0x80000000) == 0) {
    return v1;
  }
  operator delete(v4);
  return v1;
}

void sub_21577ECE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_21577ECF8(uint64_t a1, char *a2)
{
  uint64_t v16 = a1;
  if (a2[120]) {
    return *(unsigned int *)a2;
  }
  sub_21574F3D8("in function ", (const char *)&v16);
  sub_215E11614(a2, &v4, (uint64_t)&v6);
  sub_21573E208(&v6, 0);
  if (v15)
  {
    if (v14)
    {
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete(v7);
    }
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  return 0;
}

void sub_21577EDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZPixelFormatGetBytesPerPixel(unsigned int a1)
{
  sub_2158C9AD0(a1, (uint64_t)v3);
  uint64_t v1 = sub_21577ECF8((uint64_t)"VZPixelFormatGetBytesPerPixel", v3);
  if (v13 || !v12) {
    return v1;
  }
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v8 < 0) {
      operator delete(v7);
    }
  }
  if (!v6 || (v5 & 0x80000000) == 0) {
    return v1;
  }
  operator delete(v4);
  return v1;
}

void sub_21577EEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZPixelFormatGetBytesPerValue(unsigned int a1)
{
  sub_2158C9CEC(a1, (uint64_t)v3);
  uint64_t v1 = sub_21577ECF8((uint64_t)"VZPixelFormatGetBytesPerValue", v3);
  if (v13 || !v12) {
    return v1;
  }
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v8 < 0) {
      operator delete(v7);
    }
  }
  if (!v6 || (v5 & 0x80000000) == 0) {
    return v1;
  }
  operator delete(v4);
  return v1;
}

void sub_21577EF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZImageGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDB0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788BDB0))
  {
    return qword_26788BDA8;
  }
  qword_26788BDA8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788BDB0);
  return qword_26788BDA8;
}

uint64_t VZDataCreateWithImage(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_215762DB4((uint64_t)"VZDataCreateWithImage", a1, a3))
  {
    sub_215744D68(a2, v9);
    uint64_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_2158CAD84(a1 + 8, v10);
  }
  return 0;
}

void sub_21577F398(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21577F3A0);
  }
  _Unwind_Resume(a1);
}

void sub_21577F3B0(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215781E78(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      char v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      char v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        char v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215781E78(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215781E78(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21577F298);
  }
  _Unwind_Resume(a1);
}

void sub_21577F3C8(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21577F3D4);
  }
  _Unwind_Resume(a1);
}

void sub_21577F58C(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21577F594);
  }
  sub_215731D80(a1);
}

char *VZDataGetImage(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetImage", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(char **)(a1 + 568);
  if (v4) {
    return v4;
  }
  uint64_t v4 = &v8;
  long long v31 = &v32;
  uint64_t v32 = a2;
  sub_2158CB2DC((long long *)(a1 + 32), (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_215782210(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_27;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    if (!v12 || (v11 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  uint64_t v6 = sub_2157644B8((uint64_t)&v20);
  sub_215764A58(v6, &v9);
  uint64_t v4 = (char *)v9;
  if (!(void)v9)
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_215782210(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_26;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (!v12 || (v11 & 0x80000000) == 0) {
      goto LABEL_27;
    }
LABEL_25:
    operator delete(v10);
LABEL_26:
    uint64_t v4 = 0;
  }
LABEL_27:
  if (v30)
  {
    (*(void (**)(long long *))v20)(&v20);
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_21577F7C4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 80))
  {
    (**(void (***)(uint64_t))(v67 - 240))(v67 - 240);
  }
  else if (*(unsigned char *)(v67 - 128))
  {
    if (*(unsigned char *)(v67 - 136))
    {
      if (*(char *)(v67 - 137) < 0) {
        operator delete(*(void **)(v67 - 160));
      }
      if (*(char *)(v67 - 169) < 0) {
        operator delete(*(void **)(v67 - 192));
      }
    }
    if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
      operator delete(*(void **)(v67 - 224));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v71 = std::logic_error::what(&a10);
    size_t v72 = strlen(v71);
    if (v72 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v73 = (const char *)v72;
      if (v72 >= 0x17)
      {
        uint64_t v82 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v72 | 7) != 0x17) {
          uint64_t v82 = v72 | 7;
        }
        uint64_t v83 = v82 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v82 + 1);
        __dst.__imp_.__imp_ = v73;
        *(void *)&a37 = v83 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v72;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v72)
        {
LABEL_51:
          v73[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 224), &a14);
          *(unsigned char *)(v67 - 120) = 1;
          sub_215782210((uint64_t **)(v67 - 64), v67 - 240);
          if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
          {
            if (*(unsigned char *)(v67 - 136))
            {
              if (*(char *)(v67 - 137) < 0) {
                operator delete(*(void **)(v67 - 160));
              }
              if (*(char *)(v67 - 169) < 0) {
                operator delete(*(void **)(v67 - 192));
              }
            }
            if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
              operator delete(*(void **)(v67 - 224));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_102;
        }
      }
      memmove(p_dst, v71, (size_t)v73);
      goto LABEL_51;
    }
LABEL_101:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 240) = 0;
    *(unsigned char *)(v67 - 120) = 0;
    sub_215782210((uint64_t **)(v67 - 64), v67 - 240);
    if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
    {
      if (*(unsigned char *)(v67 - 136))
      {
        if (*(char *)(v67 - 137) < 0) {
          operator delete(*(void **)(v67 - 160));
        }
        if (*(char *)(v67 - 169) < 0) {
          operator delete(*(void **)(v67 - 192));
        }
      }
      if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
        operator delete(*(void **)(v67 - 224));
      }
    }
    __cxa_end_catch();
LABEL_102:
    JUMPOUT(0x21577F754);
  }
  size_t v75 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v75);
  a37 = *((_OWORD *)v75 + 1);
  uint64_t v77 = *((void *)v75 + 4);
  uint64_t v76 = *((void *)v75 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v77;
  a39 = v76;
  if (v76) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v76 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v78 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v78 = *(const char **)v78;
  }
  size_t v79 = strlen(v78);
  if (v79 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_101;
  }
  uint64_t v80 = (const char *)v79;
  if (v79 >= 0x17)
  {
    uint64_t v84 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17) {
      uint64_t v84 = v79 | 7;
    }
    uint64_t v85 = v84 + 1;
    size_t v81 = (std::logic_error_vtbl *)operator new(v84 + 1);
    a10.__imp_.__imp_ = v80;
    a11 = v85 | 0x8000000000000000;
    a10.__vftable = v81;
  }
  else
  {
    HIBYTE(a11) = v79;
    size_t v81 = (std::logic_error_vtbl *)&a10;
    if (!v79)
    {
LABEL_78:
      v80[(void)v81] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 224), &a14);
      *(unsigned char *)(v67 - 120) = 1;
      sub_215782210((uint64_t **)(v67 - 64), v67 - 240);
      if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
      {
        if (*(unsigned char *)(v67 - 136))
        {
          if (*(char *)(v67 - 137) < 0) {
            operator delete(*(void **)(v67 - 160));
          }
          if (*(char *)(v67 - 169) < 0) {
            operator delete(*(void **)(v67 - 192));
          }
        }
        if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
          operator delete(*(void **)(v67 - 224));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_102;
    }
  }
  memmove(v81, v78, (size_t)v80);
  goto LABEL_78;
}

uint64_t VZImageCreateDefault(int a1, int a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a1;
  v5[1] = a2;
  return sub_21577FD5C((void (*)(long long *__return_ptr, void, uint64_t, uint64_t))sub_2158CA9A0, a4, 0, (uint64_t)v5, a3);
}

uint64_t sub_21577FD5C(void (*a1)(long long *__return_ptr, void, uint64_t, uint64_t), uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  unint64_t v40 = &v41;
  uint64_t v41 = a2;
  a1(&v29, a3, a4, a5);
  int v6 = v39;
  if (v39)
  {
    uint64_t v7 = sub_2157644B8((uint64_t)&v29);
    sub_215764A58(v7, v10);
    uint64_t v5 = v10[0];
    if (v10[0]) {
      goto LABEL_24;
    }
    v11[0] = 0;
    char v19 = 0;
    sub_2157823E0(&v40, (uint64_t)v11);
    if (!v19 || !v18) {
      goto LABEL_23;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v5 = 0;
    if (v12[24] && (v12[23] & 0x80000000) != 0)
    {
      char v8 = (void **)v12;
LABEL_22:
      operator delete(*v8);
LABEL_23:
      uint64_t v5 = 0;
    }
  }
  else
  {
    long long v20 = v29;
    char v8 = (void **)v21;
    sub_215741BFC(v21, &v30);
    char v28 = 1;
    sub_2157823E0(&v40, (uint64_t)&v20);
    if (v28 && v27)
    {
      if (v26)
      {
        if (v25 < 0) {
          operator delete(v24);
        }
        if (v23 < 0) {
          operator delete(v22);
        }
      }
      if (v21[24] && (v21[23] & 0x80000000) != 0) {
        goto LABEL_22;
      }
    }
  }
LABEL_24:
  if (v39)
  {
    (*(void (**)(long long *))v29)(&v29);
  }
  else if (v38)
  {
    if (v37)
    {
      if (v36 < 0) {
        operator delete(v35);
      }
      if (v34 < 0) {
        operator delete(v33);
      }
    }
    if (v32 && v31 < 0) {
      operator delete((void *)v30);
    }
  }
  if (!v6) {
    return 0;
  }
  return v5;
}

void sub_21577FF54(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long __p, int a10, __int16 a11, char a12, char a13, char a14, long long a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,long long a32,int a33,__int16 a34,char a35,char a36,char a37,long long a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,std::logic_error a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_215740ECC((uint64_t)&STACK[0x200]);
  sub_215764584(v72 - 232);
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a53, exception_ptr);
    a53.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    a31 = (uint64_t)std::logic_error::what(&a53);
    sub_2157482C8(&__p, (const char **)&a31);
    sub_2159644BC(&__p, v72 - 232);
    a15 = *v71;
    sub_215741BFC(&a16, (long long *)(v72 - 216));
    a29 = 1;
    sub_2157823E0((uint64_t **)(v72 - 64), (uint64_t)&a15);
    sub_215740ECC((uint64_t)&a15);
    sub_21573FF04(v72 - 232);
    if (a14)
    {
      if (a13 < 0) {
        operator delete((void *)__p);
      }
    }
    MEMORY[0x2166C4250](&a53);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    uint64_t v76 = __cxa_get_exception_ptr(a1);
    sub_21574824C((std::runtime_error *)&a53, (uint64_t)v76);
    __cxa_begin_catch(a1);
    uint64_t v77 = (void *)(a56 + 48);
    if (*(char *)(a56 + 71) < 0) {
      uint64_t v77 = (void *)*v77;
    }
    a31 = (uint64_t)v77;
    sub_2157482C8(&a32, (const char **)&a31);
    sub_215964DE4(&a32, v72 - 232);
    a38 = *v71;
    sub_215741BFC(&a39, (long long *)(v72 - 216));
    a52 = 1;
    sub_2157823E0((uint64_t **)(v72 - 64), (uint64_t)&a38);
    sub_215740ECC((uint64_t)&a38);
    sub_21573FF04(v72 - 232);
    if (a37 && a36 < 0) {
      operator delete((void *)a32);
    }
    MEMORY[0x2166C4910](&a53);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    a58 = 0;
    a71 = 0;
    sub_2157823E0((uint64_t **)(v72 - 64), (uint64_t)&a58);
    sub_215740ECC((uint64_t)&a58);
    __cxa_end_catch();
  }
  JUMPOUT(0x21577FEE8);
}

uint64_t VZImageCreateUninitialized(int a1, int a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a1;
  v5[1] = a2;
  return sub_21577FD5C((void (*)(long long *__return_ptr, void, uint64_t, uint64_t))sub_2158CA9B0, a4, 0, (uint64_t)v5, a3);
}

void *VZImageCreateCopy(int a1, int a2, unsigned int a3, uint64_t a4, int a5, uint64_t a6)
{
  char v8 = (void *)a4;
  if (sub_21578091C((uint64_t)"VZImageCreateCopy", a4, a6)) {
    return 0;
  }
  v15[0] = a1;
  v15[1] = a2;
  char v38 = &v39;
  uint64_t v39 = a6;
  sub_2158CA9C0(0, v15, a3, v8, a5, (uint64_t)&v27);
  int v12 = v37;
  if (v37)
  {
    uint64_t v13 = sub_2157644B8((uint64_t)&v27);
    sub_215764A58(v13, &v16);
    char v8 = (void *)v16;
    if ((void)v16) {
      goto LABEL_26;
    }
    LOBYTE(v16) = 0;
    char v26 = 0;
    sub_215782CE8(&v38, (uint64_t)&v16);
    if (!v26 || !v25) {
      goto LABEL_25;
    }
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    char v8 = 0;
    if (v19 && v18 < 0)
    {
LABEL_24:
      operator delete(v17);
LABEL_25:
      char v8 = 0;
    }
  }
  else
  {
    long long v16 = v27;
    sub_215741BFC(&v17, &v28);
    char v26 = 1;
    sub_215782CE8(&v38, (uint64_t)&v16);
    if (v26 && v25)
    {
      if (v24)
      {
        if (v23 < 0) {
          operator delete(__p);
        }
        if (v21 < 0) {
          operator delete(v20);
        }
      }
      if (v19 && v18 < 0) {
        goto LABEL_24;
      }
    }
  }
LABEL_26:
  if (v37)
  {
    (*(void (**)(long long *))v27)(&v27);
    if (v12) {
      return v8;
    }
    return 0;
  }
  if (v36)
  {
    if (v35)
    {
      if (v34 < 0) {
        operator delete(v33);
      }
      if (v32 < 0) {
        operator delete(v31);
      }
    }
    if (v30 && v29 < 0) {
      operator delete((void *)v28);
    }
  }
  if (!v12) {
    return 0;
  }
  return v8;
}

void sub_2157803D8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v66 - 96))
  {
    (**(void (***)(uint64_t))(v66 - 256))(v66 - 256);
  }
  else if (*(unsigned char *)(v66 - 144))
  {
    if (*(unsigned char *)(v66 - 152))
    {
      if (*(char *)(v66 - 153) < 0) {
        operator delete(*(void **)(v66 - 176));
      }
      if (*(char *)(v66 - 185) < 0) {
        operator delete(*(void **)(v66 - 208));
      }
    }
    if (*(unsigned char *)(v66 - 216) && *(char *)(v66 - 217) < 0) {
      operator delete(*(void **)(v66 - 240));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v70 = std::logic_error::what(&a10);
    size_t v71 = strlen(v70);
    if (v71 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v72 = (const char *)v71;
      if (v71 >= 0x17)
      {
        uint64_t v81 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v71 | 7) != 0x17) {
          uint64_t v81 = v71 | 7;
        }
        uint64_t v82 = v81 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v81 + 1);
        __dst.__imp_.__imp_ = v72;
        *(void *)&a37 = v82 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v71;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v71)
        {
LABEL_51:
          v72[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          *(_OWORD *)(v66 - 256) = a13;
          sub_215741BFC((unsigned char *)(v66 - 240), &a14);
          *(unsigned char *)(v66 - 136) = 1;
          sub_215782CE8((uint64_t **)(v66 - 80), v66 - 256);
          if (*(unsigned char *)(v66 - 136) && *(unsigned char *)(v66 - 144))
          {
            if (*(unsigned char *)(v66 - 152))
            {
              if (*(char *)(v66 - 153) < 0) {
                operator delete(*(void **)(v66 - 176));
              }
              if (*(char *)(v66 - 185) < 0) {
                operator delete(*(void **)(v66 - 208));
              }
            }
            if (*(unsigned char *)(v66 - 216) && *(char *)(v66 - 217) < 0) {
              operator delete(*(void **)(v66 - 240));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_102;
        }
      }
      memmove(p_dst, v70, (size_t)v72);
      goto LABEL_51;
    }
LABEL_101:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v66 - 256) = 0;
    *(unsigned char *)(v66 - 136) = 0;
    sub_215782CE8((uint64_t **)(v66 - 80), v66 - 256);
    if (*(unsigned char *)(v66 - 136) && *(unsigned char *)(v66 - 144))
    {
      if (*(unsigned char *)(v66 - 152))
      {
        if (*(char *)(v66 - 153) < 0) {
          operator delete(*(void **)(v66 - 176));
        }
        if (*(char *)(v66 - 185) < 0) {
          operator delete(*(void **)(v66 - 208));
        }
      }
      if (*(unsigned char *)(v66 - 216) && *(char *)(v66 - 217) < 0) {
        operator delete(*(void **)(v66 - 240));
      }
    }
    __cxa_end_catch();
LABEL_102:
    JUMPOUT(0x2157801ECLL);
  }
  size_t v74 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v74);
  a37 = *((_OWORD *)v74 + 1);
  uint64_t v76 = *((void *)v74 + 4);
  uint64_t v75 = *((void *)v74 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v76;
  a39 = v75;
  if (v75) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v75 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v77 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v77 = *(const char **)v77;
  }
  size_t v78 = strlen(v77);
  if (v78 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_101;
  }
  size_t v79 = (const char *)v78;
  if (v78 >= 0x17)
  {
    uint64_t v83 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v78 | 7) != 0x17) {
      uint64_t v83 = v78 | 7;
    }
    uint64_t v84 = v83 + 1;
    uint64_t v80 = (std::logic_error_vtbl *)operator new(v83 + 1);
    a10.__imp_.__imp_ = v79;
    a11 = v84 | 0x8000000000000000;
    a10.__vftable = v80;
  }
  else
  {
    HIBYTE(a11) = v78;
    uint64_t v80 = (std::logic_error_vtbl *)&a10;
    if (!v78)
    {
LABEL_78:
      v79[(void)v80] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      *(_OWORD *)(v66 - 256) = a13;
      sub_215741BFC((unsigned char *)(v66 - 240), &a14);
      *(unsigned char *)(v66 - 136) = 1;
      sub_215782CE8((uint64_t **)(v66 - 80), v66 - 256);
      if (*(unsigned char *)(v66 - 136) && *(unsigned char *)(v66 - 144))
      {
        if (*(unsigned char *)(v66 - 152))
        {
          if (*(char *)(v66 - 153) < 0) {
            operator delete(*(void **)(v66 - 176));
          }
          if (*(char *)(v66 - 185) < 0) {
            operator delete(*(void **)(v66 - 208));
          }
        }
        if (*(unsigned char *)(v66 - 216) && *(char *)(v66 - 217) < 0) {
          operator delete(*(void **)(v66 - 240));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_102;
    }
  }
  memmove(v80, v77, (size_t)v79);
  goto LABEL_78;
}

BOOL sub_21578091C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    int v6 = sub_21574AD04();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)long long v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_215780B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZImageCreateWithBytes(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (sub_21578091C((uint64_t)"VZImageCreateWithBytes", a4, a8)) {
    return 0;
  }
  uint64_t v39 = &v40;
  uint64_t v40 = a8;
  sub_2158CA9D0(a3, a4, a5, a6, a7, (uint64_t)&v28);
  int v14 = v38;
  if (v38)
  {
    uint64_t v15 = sub_2157644B8((uint64_t)&v28);
    sub_215764A58(v15, &v17);
    a7 = v17;
    if ((void)v17) {
      goto LABEL_26;
    }
    LOBYTE(v17) = 0;
    char v27 = 0;
    sub_215783140(&v39, (uint64_t)&v17);
    if (!v27 || !v26) {
      goto LABEL_25;
    }
    if (v25)
    {
      if (v24 < 0) {
        operator delete(__p);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
    }
    a7 = 0;
    if (v20 && v19 < 0)
    {
LABEL_24:
      operator delete(v18);
LABEL_25:
      a7 = 0;
    }
  }
  else
  {
    long long v17 = v28;
    sub_215741BFC(&v18, &v29);
    char v27 = 1;
    sub_215783140(&v39, (uint64_t)&v17);
    if (v27 && v26)
    {
      if (v25)
      {
        if (v24 < 0) {
          operator delete(__p);
        }
        if (v22 < 0) {
          operator delete(v21);
        }
      }
      if (v20 && v19 < 0) {
        goto LABEL_24;
      }
    }
  }
LABEL_26:
  if (v38)
  {
    (*(void (**)(long long *))v28)(&v28);
    if (v14) {
      return a7;
    }
    return 0;
  }
  if (v37)
  {
    if (v36)
    {
      if (v35 < 0) {
        operator delete(v34);
      }
      if (v33 < 0) {
        operator delete(v32);
      }
    }
    if (v31 && v30 < 0) {
      operator delete((void *)v29);
    }
  }
  if (!v14) {
    return 0;
  }
  return a7;
}

void sub_215780DA4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (a80)
  {
    (*(void (**)(long long *))a67)(&a67);
  }
  else if ((_BYTE)a78)
  {
    if (a77)
    {
      if (a76 < 0) {
        operator delete(a75);
      }
      if (a74 < 0) {
        operator delete(a73);
      }
    }
    if (a72 && a71 < 0) {
      operator delete(a68);
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v84 = std::logic_error::what(&a10);
    size_t v85 = strlen(v84);
    if (v85 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v86 = (const char *)v85;
      if (v85 >= 0x17)
      {
        uint64_t v95 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v85 | 7) != 0x17) {
          uint64_t v95 = v85 | 7;
        }
        uint64_t v96 = v95 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v95 + 1);
        __dst.__imp_.__imp_ = v86;
        *(void *)&a37 = v96 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v85;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v85)
        {
LABEL_51:
          v86[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC(&a68, &a14);
          LOBYTE(a79) = 1;
          sub_215783140((uint64_t **)(v80 - 96), (uint64_t)&a67);
          if ((_BYTE)a79 && (_BYTE)a78)
          {
            if (a77)
            {
              if (a76 < 0) {
                operator delete(a75);
              }
              if (a74 < 0) {
                operator delete(a73);
              }
            }
            if (a72 && a71 < 0) {
              operator delete(a68);
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_102;
        }
      }
      memmove(p_dst, v84, (size_t)v86);
      goto LABEL_51;
    }
LABEL_101:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(a67) = 0;
    LOBYTE(a79) = 0;
    sub_215783140((uint64_t **)(v80 - 96), (uint64_t)&a67);
    if ((_BYTE)a79 && (_BYTE)a78)
    {
      if (a77)
      {
        if (a76 < 0) {
          operator delete(a75);
        }
        if (a74 < 0) {
          operator delete(a73);
        }
      }
      if (a72 && a71 < 0) {
        operator delete(a68);
      }
    }
    __cxa_end_catch();
LABEL_102:
    JUMPOUT(0x215780BB0);
  }
  uint64_t v88 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v88);
  a37 = *((_OWORD *)v88 + 1);
  uint64_t v90 = *((void *)v88 + 4);
  uint64_t v89 = *((void *)v88 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v90;
  a39 = v89;
  if (v89) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v89 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  char v91 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    char v91 = *(const char **)v91;
  }
  size_t v92 = strlen(v91);
  if (v92 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_101;
  }
  char v93 = (const char *)v92;
  if (v92 >= 0x17)
  {
    uint64_t v97 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v92 | 7) != 0x17) {
      uint64_t v97 = v92 | 7;
    }
    uint64_t v98 = v97 + 1;
    char v94 = (std::logic_error_vtbl *)operator new(v97 + 1);
    a10.__imp_.__imp_ = v93;
    a11 = v98 | 0x8000000000000000;
    a10.__vftable = v94;
  }
  else
  {
    HIBYTE(a11) = v92;
    char v94 = (std::logic_error_vtbl *)&a10;
    if (!v92)
    {
LABEL_78:
      v93[(void)v94] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC(&a68, &a14);
      LOBYTE(a79) = 1;
      sub_215783140((uint64_t **)(v80 - 96), (uint64_t)&a67);
      if ((_BYTE)a79 && (_BYTE)a78)
      {
        if (a77)
        {
          if (a76 < 0) {
            operator delete(a75);
          }
          if (a74 < 0) {
            operator delete(a73);
          }
        }
        if (a72 && a71 < 0) {
          operator delete(a68);
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_102;
    }
  }
  memmove(v94, v91, (size_t)v93);
  goto LABEL_78;
}

uint64_t VZImageGetFormat(uint64_t a1)
{
  if (sub_215762DB4((uint64_t)"VZImageGetFormat", a1, 0)) {
    return 0xFFFFFFFFLL;
  }
  else {
    return *(unsigned int *)(a1 + 64);
  }
}

uint64_t VZImageGetWidth(uint64_t a1)
{
  if (sub_215762DB4((uint64_t)"VZImageGetWidth", a1, 0)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 40);
  }
}

uint64_t VZImageGetHeight(uint64_t a1)
{
  if (sub_215762DB4((uint64_t)"VZImageGetHeight", a1, 0)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 44);
  }
}

uint64_t VZImageGetBytesPerRow(uint64_t a1)
{
  if (sub_215762DB4((uint64_t)"VZImageGetBytesPerRow", a1, 0)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 48);
  }
}

uint64_t VZImageGetBaseAddress(uint64_t a1)
{
  BOOL v2 = sub_215762DB4((uint64_t)"VZImageGetBaseAddress", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    if (*(unsigned char *)(a1 + 68) && *(void *)(a1 + 56))
    {
      uint64_t v4 = *(void *)(a1 + 24);
      uint64_t v5 = *(std::__shared_weak_count **)(a1 + 32);
      if (v5)
      {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
      (*(void (**)(uint64_t, void, const char *))(*(void *)v4 + 88))(v4, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
    }
    return *(void *)(a1 + 56);
  }
  return result;
}

uint64_t VZImageGetBaseAddressMutable(uint64_t a1)
{
  if (a1)
  {
    if (*(unsigned char *)(a1 + 124) && *(void *)(a1 + 112))
    {
      uint64_t v2 = *(void *)(a1 + 80);
      size_t v3 = *(std::__shared_weak_count **)(a1 + 88);
      if (v3)
      {
        atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
          std::__shared_weak_count::__release_weak(v3);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(void *)v2 + 88))(v2, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
    }
    return *(void *)(a1 + 112);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE48))
  {
    uint64_t v5 = sub_215764644();
    int v6 = (const void **)v5;
    int v7 = *((char *)v5 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      size_t v8 = *((void *)v5 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C000 + 1) = v8 + 1;
      unk_26788C010 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C000 = v10;
    }
    else
    {
      unk_26788C010 = 0;
      xmmword_26788C000 = 0uLL;
      uint64_t v10 = &xmmword_26788C000;
      byte_26788C017 = v8 + 1;
      if (!v8)
      {
LABEL_57:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C000, &dword_21572C000);
        __cxa_guard_release(&qword_26788BE48);
        goto LABEL_10;
      }
    }
    if (v7 >= 0) {
      long long v13 = v6;
    }
    else {
      long long v13 = *v6;
    }
    memmove(v10, v13, v8);
    goto LABEL_57;
  }
LABEL_10:
  if (byte_26788C017 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C000, *((unint64_t *)&xmmword_26788C000 + 1));
  }
  else
  {
    *(_OWORD *)int v14 = xmmword_26788C000;
    uint64_t v15 = unk_26788C010;
  }
  char v16 = 1;
  sub_21573FF94((uint64_t)"VZImageGetBaseAddressMutable", (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, 0);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return 0;
}

void sub_2157818B0(_Unwind_Exception *a1)
{
}

void sub_2157818C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZImageGetByteSize(uint64_t a1)
{
  if (sub_215762DB4((uint64_t)"VZImageGetByteSize", a1, 0)) {
    return 0;
  }
  else {
    return sub_2158CA4FC((_DWORD *)(a1 + 8));
  }
}

BOOL VZImageEqual(uint64_t a1, uint64_t a2)
{
  if (sub_215762DB4((uint64_t)"VZImageEqual", a1, 0) || sub_215762DB4((uint64_t)"VZImageEqual", a2, 0)) {
    return 0;
  }

  return sub_2158CA63C(a1 + 8, a2 + 8);
}

uint64_t sub_2157819D0(uint64_t result)
{
  return result;
}

uint64_t sub_2157819E0(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 168), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215781A1C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDB0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788BDB0))
  {
    return qword_26788BDA8;
  }
  qword_26788BDA8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788BDB0);
  return qword_26788BDA8;
}

_DWORD *sub_215781A80(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657C30, 0);
  if (result)
  {
    if (*(void *)(a1 + 56) == *((void *)result + 7))
    {
      if (*(_DWORD *)(a1 + 64) == result[16]
        && (*(_DWORD *)(a1 + 40) == result[10] ? (BOOL v4 = *(_DWORD *)(a1 + 44) == result[11]) : (BOOL v4 = 0), v4))
      {
        return (_DWORD *)(*(_DWORD *)(a1 + 48) == result[12]);
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_215781B50(uint64_t a1)
{
  sub_215764644();
  uint64_t v2 = a1;
  operator new();
}

void sub_215781D9C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v23 = sub_215764644();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x215781D80);
}

uint64_t sub_215781E6C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 168));
}

void sub_215781E78(uint64_t **a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDB8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788BDB8))
  {
    goto LABEL_2;
  }
  uint64_t v10 = sub_215765104();
  uint64_t v11 = (const void **)v10;
  int v12 = *((char *)v10 + 23);
  if (v12 >= 0) {
    size_t v13 = *((unsigned __int8 *)v10 + 23);
  }
  else {
    size_t v13 = v10[1];
  }
  unint64_t v14 = v13 + 1;
  if (v13 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    uint64_t v15 = (long long *)operator new(v16 + 1);
    *((void *)&xmmword_26788BE50 + 1) = v13 + 1;
    unk_26788BE60 = v17 | 0x8000000000000000;
    *(void *)&xmmword_26788BE50 = v15;
    goto LABEL_43;
  }
  uint64_t v15 = &xmmword_26788BE50;
  unk_26788BE60 = 0;
  xmmword_26788BE50 = 0uLL;
  byte_26788BE67 = v13 + 1;
  if (v13)
  {
LABEL_43:
    if (v12 >= 0) {
      long long v18 = v11;
    }
    else {
      long long v18 = *v11;
    }
    memmove(v15, v18, v13);
  }
  *(_WORD *)((char *)v15 + v13) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BE50, &dword_21572C000);
  __cxa_guard_release(&qword_26788BDB8);
LABEL_2:
  if (byte_26788BE67 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788BE50, *((unint64_t *)&xmmword_26788BE50 + 1));
  }
  else
  {
    long long __dst = xmmword_26788BE50;
    uint64_t v33 = unk_26788BE60;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v34, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v35 = *((void *)v5 + 2);
    long long v34 = v6;
  }
  sub_21573A150(&v30, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v19, a2);
  sub_21574086C(v4, (uint64_t *)&v30, (uint64_t)v19, **a1);
  if (!v29 || !v28) {
    goto LABEL_16;
  }
  if (!v27) {
    goto LABEL_13;
  }
  if ((v26 & 0x80000000) == 0)
  {
    if ((v24 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v23);
    if (!v22) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v25);
  if (v24 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v22) {
    goto LABEL_16;
  }
LABEL_14:
  if (v21 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v30;
  if (v30)
  {
    size_t v8 = v31;
    unint64_t v9 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      unint64_t v9 = v30;
    }
    char v31 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v33) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v34);
  if (SHIBYTE(v33) < 0) {
    goto LABEL_28;
  }
}

void sub_215782198(_Unwind_Exception *a1)
{
}

void sub_2157821B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215782210(uint64_t **a1, uint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_215764644();
  uint64_t v5 = sub_21574A5CC();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v24 = v5[2];
    long long __dst = v6;
  }
  sub_21573A150(&v21, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (!v20 || !v19) {
    goto LABEL_12;
  }
  if (!v18) {
    goto LABEL_9;
  }
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v14);
    if (!v13) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v16);
  if (v15 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v13) {
    goto LABEL_12;
  }
LABEL_10:
  if (v12 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v7 = (uint64_t)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    unint64_t v9 = v21;
    if ((void *)v22 != v21)
    {
      do
      {
        if (*(char *)(v8 - 1) < 0) {
          operator delete(*(void **)(v8 - 24));
        }
        v8 -= 24;
      }
      while (v8 != v7);
      unint64_t v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_215782398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 88));
  if (*(char *)(v2 - 41) < 0)
  {
    operator delete(*(void **)(v2 - 64));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157823E0(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_215764644();
  sub_215782700();
  if (byte_26788BE7F < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788BE68, *((unint64_t *)&xmmword_26788BE68 + 1));
  }
  else
  {
    long long __dst = xmmword_26788BE68;
    uint64_t v22 = unk_26788BE78;
  }
  sub_2157828F8();
  if (byte_26788BEC7 < 0)
  {
    sub_215738B0C(&v23, (void *)xmmword_26788BEB0, *((unint64_t *)&xmmword_26788BEB0 + 1));
  }
  else
  {
    long long v23 = xmmword_26788BEB0;
    uint64_t v24 = unk_26788BEC0;
  }
  sub_215782AF0();
  if (byte_26788BF0F < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788BEF8, *((unint64_t *)&xmmword_26788BEF8 + 1));
  }
  else
  {
    long long v25 = xmmword_26788BEF8;
    uint64_t v26 = unk_26788BF08;
  }
  sub_21573A150(&v19, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v8, a2);
  sub_21574086C(v4, (uint64_t *)&v19, (uint64_t)v8, **a1);
  if (!v18 || !v17) {
    goto LABEL_18;
  }
  if (!v16) {
    goto LABEL_15;
  }
  if ((v15 & 0x80000000) == 0)
  {
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v12);
    if (!v11) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v14);
  if (v13 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v11) {
    goto LABEL_18;
  }
LABEL_16:
  if (v10 < 0) {
    operator delete(__p);
  }
LABEL_18:
  uint64_t v5 = (void **)v19;
  if (v19)
  {
    long long v6 = v20;
    uint64_t v7 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      uint64_t v7 = v19;
    }
    char v20 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete((void *)v25);
    if ((SHIBYTE(v24) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v22) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v23);
  if (SHIBYTE(v22) < 0) {
    goto LABEL_32;
  }
}

void sub_21578265C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  sub_215740ECC((uint64_t)&a10);
  sub_2157352DC(&a26);
  if (*(char *)(v26 - 57) < 0)
  {
    operator delete(*(void **)(v26 - 80));
    if ((*(char *)(v26 - 81) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v26 - 105) & 0x80000000) == 0) {
LABEL_8:
      }
        _Unwind_Resume(a1);
LABEL_7:
      operator delete(*(void **)(v26 - 128));
      _Unwind_Resume(a1);
    }
  }
  else if ((*(char *)(v26 - 81) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v26 - 104));
  if ((*(char *)(v26 - 105) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_2157826D8()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x2157826D0);
    }
  }
}

void sub_215782700()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDC0))
  {
    sub_2157827D4();
    if (byte_26788BEAF < 0)
    {
      sub_215738B0C(&xmmword_26788BE68, (void *)xmmword_26788BE98, *((unint64_t *)&xmmword_26788BE98 + 1));
    }
    else
    {
      xmmword_26788BE68 = xmmword_26788BE98;
      unk_26788BE78 = unk_26788BEA8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BE68, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDC0);
  }
}

void sub_2157827BC(_Unwind_Exception *a1)
{
}

void sub_2157827D4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDC8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::BufferType]", qword_26788BE80);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BE80, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDC8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDD0))
  {
    sub_215E19DF4((uint64_t)qword_26788BE80, (uint64_t)&xmmword_26788BE98);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BE98, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDD0);
  }
}

void sub_2157828C8(_Unwind_Exception *a1)
{
}

void sub_2157828E0(_Unwind_Exception *a1)
{
}

void sub_2157828F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDD8))
  {
    sub_2157829CC();
    if (byte_26788BEF7 < 0)
    {
      sub_215738B0C(&xmmword_26788BEB0, (void *)xmmword_26788BEE0, *((unint64_t *)&xmmword_26788BEE0 + 1));
    }
    else
    {
      xmmword_26788BEB0 = xmmword_26788BEE0;
      unk_26788BEC0 = unk_26788BEF0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BEB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDD8);
  }
}

void sub_2157829B4(_Unwind_Exception *a1)
{
}

void sub_2157829CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::arr::SizeT<2, cv3d::esn::arr::SizeType::Shape, void>]", qword_26788BEC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BEC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDE8))
  {
    sub_215E19DF4((uint64_t)qword_26788BEC8, (uint64_t)&xmmword_26788BEE0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BEE0, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDE8);
  }
}

void sub_215782AC0(_Unwind_Exception *a1)
{
}

void sub_215782AD8(_Unwind_Exception *a1)
{
}

void sub_215782AF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDF0))
  {
    sub_215782BC4();
    if (byte_26788BF3F < 0)
    {
      sub_215738B0C(&xmmword_26788BEF8, (void *)xmmword_26788BF28, *((unint64_t *)&xmmword_26788BF28 + 1));
    }
    else
    {
      xmmword_26788BEF8 = xmmword_26788BF28;
      unk_26788BF08 = unk_26788BF38;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BEF8, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDF0);
  }
}

void sub_215782BAC(_Unwind_Exception *a1)
{
}

void sub_215782BC4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BDF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BDF8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format]", qword_26788BF10);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BF10, &dword_21572C000);
    __cxa_guard_release(&qword_26788BDF8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE00))
  {
    sub_215E19DF4((uint64_t)qword_26788BF10, (uint64_t)&xmmword_26788BF28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BF28, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE00);
  }
}

void sub_215782CB8(_Unwind_Exception *a1)
{
}

void sub_215782CD0(_Unwind_Exception *a1)
{
}

void sub_215782CE8(uint64_t **a1, uint64_t a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_215764644();
  sub_215782700();
  if (byte_26788BE7F < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788BE68, *((unint64_t *)&xmmword_26788BE68 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BE68;
    uint64_t v24 = unk_26788BE78;
  }
  sub_2157828F8();
  if (byte_26788BEC7 < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788BEB0, *((unint64_t *)&xmmword_26788BEB0 + 1));
  }
  else
  {
    long long v25 = xmmword_26788BEB0;
    uint64_t v26 = unk_26788BEC0;
  }
  sub_215782AF0();
  if (byte_26788BF0F < 0)
  {
    sub_215738B0C(&v27, (void *)xmmword_26788BEF8, *((unint64_t *)&xmmword_26788BEF8 + 1));
  }
  else
  {
    long long v27 = xmmword_26788BEF8;
    uint64_t v28 = unk_26788BF08;
  }
  uint64_t v5 = sub_21574AA58();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v29, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v30 = v5[2];
    long long v29 = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE08))
  {
    unk_26788BF50 = 0x700000000000000;
    xmmword_26788BF40 = 0x263233746E6975uLL;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BF40, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE08);
  }
  if (byte_26788BF57 < 0)
  {
    sub_215738B0C(&v31, (void *)xmmword_26788BF40, *((unint64_t *)&xmmword_26788BF40 + 1));
  }
  else
  {
    long long v31 = xmmword_26788BF40;
    uint64_t v32 = unk_26788BF50;
  }
  sub_21573A150(&v21, (uint64_t)__dst, 5uLL);
  sub_215742C3C(v10, a2);
  sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18) {
      goto LABEL_22;
    }
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_22:
        if (!v13) {
          goto LABEL_25;
        }
LABEL_23:
        if (v12 < 0) {
          operator delete(__p);
        }
        goto LABEL_25;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_22;
    }
    operator delete(v14);
    if (!v13) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v7 = (void **)v21;
  if (v21)
  {
    uint64_t v8 = v22;
    unint64_t v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      unint64_t v9 = v21;
    }
    uint64_t v22 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v32) < 0)
  {
    operator delete((void *)v31);
    if ((SHIBYTE(v30) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v28) & 0x80000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_41;
    }
  }
  else if ((SHIBYTE(v30) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete((void *)v29);
  if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
LABEL_36:
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete((void *)v27);
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
LABEL_37:
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
LABEL_43:
    operator delete(__dst[0]);
    return;
  }
LABEL_42:
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0) {
    goto LABEL_43;
  }
}

void sub_21578306C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a58 < 0)
  {
    operator delete(__p);
    if ((a52 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a46 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a52 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a47);
  if ((a46 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a41);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a34 & 0x80000000) == 0) {
LABEL_12:
    }
      _Unwind_Resume(a1);
LABEL_11:
    operator delete(a29);
    _Unwind_Resume(a1);
  }
LABEL_10:
  operator delete(a35);
  if ((a34 & 0x80000000) == 0) {
    goto LABEL_12;
  }
  goto LABEL_11;
}

void sub_215783118()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x215783110);
    }
  }
}

void sub_215783140(uint64_t **a1, uint64_t a2)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_215764644();
  sub_2157828F8();
  if (byte_26788BEC7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788BEB0, *((unint64_t *)&xmmword_26788BEB0 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788BEB0;
    uint64_t v38 = unk_26788BEC0;
  }
  sub_215782AF0();
  if (byte_26788BF0F < 0)
  {
    sub_215738B0C(&v39, (void *)xmmword_26788BEF8, *((unint64_t *)&xmmword_26788BEF8 + 1));
  }
  else
  {
    long long v39 = xmmword_26788BEF8;
    uint64_t v40 = unk_26788BF08;
  }
  uint64_t v5 = sub_21574AA58();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v41, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v42 = v5[2];
    long long v41 = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE08))
  {
    unk_26788BF50 = 0x700000000000000;
    xmmword_26788BF40 = 0x263233746E6975uLL;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BF40, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE08);
  }
  if (byte_26788BF57 < 0)
  {
    sub_215738B0C(&v43, (void *)xmmword_26788BF40, *((unint64_t *)&xmmword_26788BF40 + 1));
  }
  else
  {
    long long v43 = xmmword_26788BF40;
    uint64_t v44 = unk_26788BF50;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE10))
  {
    sub_2157838EC();
    int v10 = byte_26788BF87;
    if (byte_26788BF87 >= 0) {
      size_t v11 = byte_26788BF87;
    }
    else {
      size_t v11 = qword_26788BF78;
    }
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v12 >= 0x17)
    {
      uint64_t v21 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v21 = v12 | 7;
      }
      uint64_t v22 = v21 + 1;
      char v13 = (long long *)operator new(v21 + 1);
      *((void *)&xmmword_26788BF58 + 1) = v11 + 1;
      unk_26788BF68 = v22 | 0x8000000000000000;
      *(void *)&xmmword_26788BF58 = v13;
    }
    else
    {
      char v13 = &xmmword_26788BF58;
      unk_26788BF68 = 0;
      xmmword_26788BF58 = 0uLL;
      byte_26788BF6F = v11 + 1;
      if (!v11)
      {
LABEL_88:
        *(_WORD *)((char *)v13 + v11) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BF58, &dword_21572C000);
        __cxa_guard_release(&qword_26788BE10);
        goto LABEL_15;
      }
    }
    if (v10 >= 0) {
      long long v23 = &qword_26788BF70;
    }
    else {
      long long v23 = (uint64_t *)qword_26788BF70;
    }
    memmove(v13, v23, v11);
    goto LABEL_88;
  }
LABEL_15:
  if (byte_26788BF6F < 0)
  {
    sub_215738B0C(&v45, (void *)xmmword_26788BF58, *((unint64_t *)&xmmword_26788BF58 + 1));
  }
  else
  {
    long long v45 = xmmword_26788BF58;
    uint64_t v46 = unk_26788BF68;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE38))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE40, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788BE40))
    {
      qword_26788BFF0 = 0;
      unk_26788BFF8 = 0x500000000000000;
      qword_26788BFE8 = 0x2A64696F76;
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BFE8, &dword_21572C000);
      __cxa_guard_release(&qword_26788BE40);
    }
    int v14 = byte_26788BFFF;
    if (byte_26788BFFF >= 0) {
      size_t v15 = byte_26788BFFF;
    }
    else {
      size_t v15 = qword_26788BFF0;
    }
    unint64_t v16 = v15 + 1;
    if (v15 + 1 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v16 >= 0x17)
    {
      uint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v16 | 7) != 0x17) {
        uint64_t v18 = v16 | 7;
      }
      uint64_t v19 = v18 + 1;
      char v17 = (long long *)operator new(v18 + 1);
      *((void *)&xmmword_26788BFD0 + 1) = v15 + 1;
      unk_26788BFE0 = v19 | 0x8000000000000000;
      *(void *)&xmmword_26788BFD0 = v17;
    }
    else
    {
      char v17 = &xmmword_26788BFD0;
      unk_26788BFE0 = 0;
      xmmword_26788BFD0 = 0uLL;
      byte_26788BFE7 = v15 + 1;
      if (!v15)
      {
LABEL_80:
        *(_WORD *)((char *)v17 + v15) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BFD0, &dword_21572C000);
        __cxa_guard_release(&qword_26788BE38);
        goto LABEL_19;
      }
    }
    if (v14 >= 0) {
      char v20 = &qword_26788BFE8;
    }
    else {
      char v20 = (uint64_t *)qword_26788BFE8;
    }
    memmove(v17, v20, v15);
    goto LABEL_80;
  }
LABEL_19:
  if (byte_26788BFE7 < 0)
  {
    sub_215738B0C(&v47, (void *)xmmword_26788BFD0, *((unint64_t *)&xmmword_26788BFD0 + 1));
  }
  else
  {
    long long v47 = xmmword_26788BFD0;
    uint64_t v48 = unk_26788BFE0;
  }
  sub_21573A150(&v35, (uint64_t)__dst, 6uLL);
  sub_215742C3C(v24, a2);
  sub_21574086C(v4, (uint64_t *)&v35, (uint64_t)v24, **a1);
  if (!v34 || !v33) {
    goto LABEL_30;
  }
  if (!v32) {
    goto LABEL_27;
  }
  if ((v31 & 0x80000000) == 0)
  {
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_27;
    }
LABEL_52:
    operator delete(v28);
    if (!v27) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  operator delete(v30);
  if (v29 < 0) {
    goto LABEL_52;
  }
LABEL_27:
  if (!v27) {
    goto LABEL_30;
  }
LABEL_28:
  if (v26 < 0) {
    operator delete(__p);
  }
LABEL_30:
  uint64_t v7 = (void **)v35;
  if (v35)
  {
    uint64_t v8 = v36;
    unint64_t v9 = v35;
    if (v36 != v35)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      unint64_t v9 = v35;
    }
    uint64_t v36 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v48) < 0)
  {
    operator delete((void *)v47);
    if ((SHIBYTE(v46) & 0x80000000) == 0)
    {
LABEL_40:
      if ((SHIBYTE(v44) & 0x80000000) == 0) {
        goto LABEL_41;
      }
      goto LABEL_47;
    }
  }
  else if ((SHIBYTE(v46) & 0x80000000) == 0)
  {
    goto LABEL_40;
  }
  operator delete((void *)v45);
  if ((SHIBYTE(v44) & 0x80000000) == 0)
  {
LABEL_41:
    if ((SHIBYTE(v42) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_48;
  }
LABEL_47:
  operator delete((void *)v43);
  if ((SHIBYTE(v42) & 0x80000000) == 0)
  {
LABEL_42:
    if ((SHIBYTE(v40) & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_49;
  }
LABEL_48:
  operator delete((void *)v41);
  if ((SHIBYTE(v40) & 0x80000000) == 0)
  {
LABEL_43:
    if ((SHIBYTE(v38) & 0x80000000) == 0) {
      return;
    }
LABEL_50:
    operator delete(__dst[0]);
    return;
  }
LABEL_49:
  operator delete((void *)v39);
  if (SHIBYTE(v38) < 0) {
    goto LABEL_50;
  }
}

void sub_2157837D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  __cxa_guard_abort(&qword_26788BE38);
  while (1)
  {
    if (*((char *)v29 - 1) < 0) {
      operator delete(*(v29 - 3));
    }
    v29 -= 3;
    if (v29 == &a29) {
      _Unwind_Resume(a1);
    }
  }
}

void sub_2157838EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE18, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788BE18))
  {
    return;
  }
  sub_215783A60();
  int v0 = byte_26788BF9F;
  if (byte_26788BF9F >= 0) {
    size_t v1 = byte_26788BF9F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788BF88 + 1);
  }
  unint64_t v2 = v1 + 1;
  if (v1 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    size_t v3 = (uint64_t *)operator new(v4 + 1);
    qword_26788BF78 = v1 + 1;
    unk_26788BF80 = v5 | 0x8000000000000000;
    qword_26788BF70 = (uint64_t)v3;
    goto LABEL_14;
  }
  size_t v3 = &qword_26788BF70;
  qword_26788BF78 = 0;
  unk_26788BF80 = 0;
  qword_26788BF70 = 0;
  byte_26788BF87 = v1 + 1;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      long long v6 = &xmmword_26788BF88;
    }
    else {
      long long v6 = (long long *)xmmword_26788BF88;
    }
    memmove(v3, v6, v1);
  }
  *(_WORD *)((char *)v3 + v1) = 42;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788BF70, &dword_21572C000);

  __cxa_guard_release(&qword_26788BE18);
}

void sub_215783A48(_Unwind_Exception *a1)
{
}

void sub_215783A60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE20))
  {
    sub_215783B34();
    if (byte_26788BFCF < 0)
    {
      sub_215738B0C(&xmmword_26788BF88, (void *)xmmword_26788BFB8, *((unint64_t *)&xmmword_26788BFB8 + 1));
    }
    else
    {
      xmmword_26788BF88 = xmmword_26788BFB8;
      unk_26788BF98 = unk_26788BFC8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BF88, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE20);
  }
}

void sub_215783B1C(_Unwind_Exception *a1)
{
}

void sub_215783B34()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE28))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (void *, const void *)]", qword_26788BFA0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788BFA0, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE28);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788BE30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788BE30))
  {
    sub_215E19DF4((uint64_t)qword_26788BFA0, (uint64_t)&xmmword_26788BFB8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788BFB8, &dword_21572C000);
    __cxa_guard_release(&qword_26788BE30);
  }
}

void sub_215783C28(_Unwind_Exception *a1)
{
}

void sub_215783C40(_Unwind_Exception *a1)
{
}

uint64_t sub_215783C58(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215783CD4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_215783D44(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215783DD0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215783E5C(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215783ED8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_215783F48(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215783FD4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZLines2GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C020, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C020))
  {
    return qword_26788C018;
  }
  qword_26788C018 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C020);
  return qword_26788C018;
}

uint64_t VZLines3GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C030, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C030))
  {
    return qword_26788C028;
  }
  qword_26788C028 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C030);
  return qword_26788C028;
}

uint64_t VZDataCreateWithLines2(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (!sub_2157846E4((uint64_t)"VZDataCreateWithLines2", a1, a3))
  {
    sub_215744D68(a2, v8);
    long long v6 = &v7;
    uint64_t v7 = a3;
    sub_215748384(v9, (uint64_t)v8);
    sub_21594153C();
  }
  return 0;
}

void sub_2157844D8(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x2157844E0);
  }
  _Unwind_Resume(a1);
}

void sub_2157844F0(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215788400(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      uint64_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      long long v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        long long v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215788400(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215788400(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x2157843D8);
  }
  _Unwind_Resume(a1);
}

void sub_215784508(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215784514);
  }
  _Unwind_Resume(a1);
}

void sub_2157846CC(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157846D4);
  }
  sub_215731D80(a1);
}

BOOL sub_2157846E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C038, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C038))
  {
    sub_21578806C();
    int v7 = byte_26788C0C7;
    if (byte_26788C0C7 >= 0) {
      size_t v8 = byte_26788C0C7;
    }
    else {
      size_t v8 = qword_26788C0B8;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C098 + 1) = v8 + 1;
      unk_26788C0A8 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C098 = v10;
    }
    else
    {
      unk_26788C0A8 = 0;
      xmmword_26788C098 = 0uLL;
      char v10 = &xmmword_26788C098;
      byte_26788C0AF = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C098, &dword_21572C000);
        __cxa_guard_release(&qword_26788C038);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C0B0;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C0B0;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C0AF < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C098, *((unint64_t *)&xmmword_26788C098 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C098;
    uint64_t v15 = unk_26788C0A8;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215784A18(_Unwind_Exception *a1)
{
}

void sub_215784A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataCreateWithLines3(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (!sub_215785028((uint64_t)"VZDataCreateWithLines3", a1, a3))
  {
    sub_215744D68(a2, v8);
    long long v6 = &v7;
    uint64_t v7 = a3;
    sub_215748384(v9, (uint64_t)v8);
    sub_2159423C8();
  }
  return 0;
}

void sub_215784E1C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215784E24);
  }
  _Unwind_Resume(a1);
}

void sub_215784E34(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215788B38(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      uint64_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      long long v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        long long v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215788B38(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215788B38(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x215784D1CLL);
  }
  _Unwind_Resume(a1);
}

void sub_215784E4C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215784E58);
  }
  _Unwind_Resume(a1);
}

void sub_215785010(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215785018);
  }
  sub_215731D80(a1);
}

BOOL sub_215785028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C068, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C068))
  {
    sub_2157887A4();
    int v7 = byte_26788C157;
    if (byte_26788C157 >= 0) {
      size_t v8 = byte_26788C157;
    }
    else {
      size_t v8 = qword_26788C148;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C128 + 1) = v8 + 1;
      unk_26788C138 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C128 = v10;
    }
    else
    {
      unk_26788C138 = 0;
      xmmword_26788C128 = 0uLL;
      char v10 = &xmmword_26788C128;
      byte_26788C13F = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C128, &dword_21572C000);
        __cxa_guard_release(&qword_26788C068);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C140;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C140;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C13F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C128, *((unint64_t *)&xmmword_26788C128 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C128;
    uint64_t v15 = unk_26788C138;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21578535C(_Unwind_Exception *a1)
{
}

void sub_215785374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetLines2(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetLines2", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_2159433E4(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_215788EDC(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_215789098((uint64_t)&v20);
  long long v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)long long v6 = &unk_26C657C90;
    *((void *)v6 + 1) = &unk_26C657CE0;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_215788EDC(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_215785644(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_215788EDC((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_215788EDC((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215785620);
  }
  uint64_t v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    size_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_215788EDC((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZDataGetLines3(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetLines3", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_215944ADC(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_215789164(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_215789320((uint64_t)&v20);
  long long v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)long long v6 = &unk_26C657D88;
    *((void *)v6 + 1) = &unk_26C657DD8;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_215789164(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_215785E44(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_215789164((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_215789164((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215785E20);
  }
  uint64_t v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    size_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_215789164((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZLines2Create(void *a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  char v31 = &v32;
  uint64_t v32 = a4;
  sub_2159408F8(a1, a2, a3, (uint64_t)&v20);
  int v5 = v30;
  if (v30)
  {
    sub_215789098((uint64_t)&v20);
    long long v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      uint64_t v4 = v6;
      v6[1] = v20;
      long long v20 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)long long v6 = &unk_26C657C90;
      *((void *)v6 + 1) = &unk_26C657CE0;
      goto LABEL_25;
    }
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157893EC(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_24;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (v12 && v11 < 0)
    {
      operator delete(v10);
LABEL_24:
      uint64_t v4 = 0;
    }
  }
  else
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157893EC(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
  }
LABEL_25:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    return 0;
  }
  return v4;
}

void sub_215786610(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157893EC((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157893EC((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157865F0);
  }
  uint64_t v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    size_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157893EC((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZLines3Create(void *a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  char v31 = &v32;
  uint64_t v32 = a4;
  sub_215940FA8(a1, a2, a3, (uint64_t)&v20);
  int v5 = v30;
  if (v30)
  {
    sub_215789320((uint64_t)&v20);
    long long v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      uint64_t v4 = v6;
      v6[1] = v20;
      long long v20 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)long long v6 = &unk_26C657D88;
      *((void *)v6 + 1) = &unk_26C657DD8;
      goto LABEL_25;
    }
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157896D4(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_24;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (v12 && v11 < 0)
    {
      operator delete(v10);
LABEL_24:
      uint64_t v4 = 0;
    }
  }
  else
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157896D4(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
  }
LABEL_25:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    return 0;
  }
  return v4;
}

void sub_215786DDC(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157896D4((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157896D4((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215786DBCLL);
  }
  uint64_t v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  size_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    size_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157896D4((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZLines2GetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_2157846E4((uint64_t)"VZLines2GetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 48);
  }
  return result;
}

uint64_t VZLines3GetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_215785028((uint64_t)"VZLines3GetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 48);
  }
  return result;
}

uint64_t VZLines2GetCount(uint64_t a1)
{
  BOOL v2 = sub_2157846E4((uint64_t)"VZLines2GetCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 56) >> 2;
  }
  return result;
}

unint64_t VZLines3GetCount(uint64_t a1)
{
  BOOL v2 = sub_215785028((uint64_t)"VZLines3GetCount", a1, 0);
  unint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 56) / 6uLL;
  }
  return result;
}

uint64_t VZLines2GetByteCount(uint64_t a1)
{
  BOOL v2 = sub_2157846E4((uint64_t)"VZLines2GetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 40);
  }
  return result;
}

uint64_t VZLines3GetByteCount(uint64_t a1)
{
  BOOL v2 = sub_215785028((uint64_t)"VZLines3GetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 40);
  }
  return result;
}

uint64_t VZLines2GetValueType(uint64_t a1)
{
  if (sub_2157846E4((uint64_t)"VZLines2GetValueType", a1, 0)) {
    return 255;
  }
  else {
    return ***(unsigned __int8 ***)(a1 + 16);
  }
}

uint64_t VZLines3GetValueType(uint64_t a1)
{
  if (sub_215785028((uint64_t)"VZLines3GetValueType", a1, 0)) {
    return 255;
  }
  else {
    return ***(unsigned __int8 ***)(a1 + 16);
  }
}

uint64_t sub_2157875CC(uint64_t result)
{
  return result;
}

uint64_t sub_2157875DC(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215787618()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C020, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C020))
  {
    return qword_26788C018;
  }
  qword_26788C018 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C020);
  return qword_26788C018;
}

void *sub_21578767C(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657D28, 0);
  if (result)
  {
    char v17 = (unsigned __int8 **)result[2];
    char v18 = **(unsigned __int8 ***)(a1 + 16);
    int v19 = *v18;
    long long v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      unsigned char v21[2] = v20;
      return (void *)sub_215D17264(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_21578777C(uint64_t a1)
{
  sub_215788208();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215787A30(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_215733368((uint64_t)&v36);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_begin_catch(a1);
  sub_215788208();
  sub_215732BF4(v34, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C0C8, v34, 0);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215787B10(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

uint64_t sub_215787B1C(uint64_t result)
{
  return result;
}

uint64_t sub_215787B2C(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215787B68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C030, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C030))
  {
    return qword_26788C028;
  }
  qword_26788C028 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C030);
  return qword_26788C028;
}

void *sub_215787BCC(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657E20, 0);
  if (result)
  {
    char v17 = (unsigned __int8 **)result[2];
    char v18 = **(unsigned __int8 ***)(a1 + 16);
    int v19 = *v18;
    long long v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      unsigned char v21[2] = v20;
      return (void *)sub_215D17264(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_215787CCC(uint64_t a1)
{
  sub_215788940();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215787F80(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_215733368((uint64_t)&v36);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_begin_catch(a1);
  sub_215788940();
  sub_215732BF4(v34, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C158, v34, 0);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215788060(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_21578806C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C040, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C040))
  {
    return;
  }
  sub_215788208();
  int v0 = byte_26788C0DF;
  if (byte_26788C0DF >= 0) {
    size_t v1 = byte_26788C0DF;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C0C8 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    long long v6 = (char *)operator new(v4 + 1);
    qword_26788C0B8 = v1 + 6;
    unk_26788C0C0 = v5 | 0x8000000000000000;
    qword_26788C0B0 = (uint64_t)v6;
    *(_DWORD *)long long v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C0B8 = 0;
  unk_26788C0C0 = 0;
  qword_26788C0B0 = 0x2074736E6F63;
  byte_26788C0C7 = v1 + 6;
  size_t v3 = (char *)&qword_26788C0B0 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C0C8;
    }
    else {
      int v7 = (long long *)xmmword_26788C0C8;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C0B0, &dword_21572C000);

  __cxa_guard_release(&qword_26788C040);
}

void sub_2157881F0(_Unwind_Exception *a1)
{
}

void sub_215788208()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C048, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C048))
  {
    sub_2157882DC();
    if (byte_26788C10F < 0)
    {
      sub_215738B0C(&xmmword_26788C0C8, (void *)xmmword_26788C0F8, *((unint64_t *)&xmmword_26788C0F8 + 1));
    }
    else
    {
      xmmword_26788C0C8 = xmmword_26788C0F8;
      unk_26788C0D8 = unk_26788C108;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C0C8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C048);
  }
}

void sub_2157882C4(_Unwind_Exception *a1)
{
}

void sub_2157882DC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C050, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C050))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLines2]", qword_26788C0E0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C0E0, &dword_21572C000);
    __cxa_guard_release(&qword_26788C050);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C058, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C058))
  {
    sub_215E19DF4((uint64_t)qword_26788C0E0, (uint64_t)&xmmword_26788C0F8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C0F8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C058);
  }
}

void sub_2157883D0(_Unwind_Exception *a1)
{
}

void sub_2157883E8(_Unwind_Exception *a1)
{
}

void sub_215788400(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C060))
  {
    goto LABEL_2;
  }
  sub_21578806C();
  int v10 = byte_26788C0C7;
  if (byte_26788C0C7 >= 0) {
    size_t v11 = byte_26788C0C7;
  }
  else {
    size_t v11 = qword_26788C0B8;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C110 + 1) = v11 + 1;
    unk_26788C120 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C110 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788C110;
  unk_26788C120 = 0;
  xmmword_26788C110 = 0uLL;
  byte_26788C127 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C0B0;
    }
    else {
      char v16 = (uint64_t *)qword_26788C0B0;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C110, &dword_21572C000);
  __cxa_guard_release(&qword_26788C060);
LABEL_2:
  if (byte_26788C127 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C110, *((unint64_t *)&xmmword_26788C110 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C110;
    uint64_t v31 = unk_26788C120;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_21578872C(_Unwind_Exception *a1)
{
}

void sub_215788744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157887A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C070, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C070))
  {
    return;
  }
  sub_215788940();
  int v0 = byte_26788C16F;
  if (byte_26788C16F >= 0) {
    size_t v1 = byte_26788C16F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C158 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    long long v6 = (char *)operator new(v4 + 1);
    qword_26788C148 = v1 + 6;
    unk_26788C150 = v5 | 0x8000000000000000;
    qword_26788C140 = (uint64_t)v6;
    *(_DWORD *)long long v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C148 = 0;
  unk_26788C150 = 0;
  qword_26788C140 = 0x2074736E6F63;
  byte_26788C157 = v1 + 6;
  size_t v3 = (char *)&qword_26788C140 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C158;
    }
    else {
      int v7 = (long long *)xmmword_26788C158;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C140, &dword_21572C000);

  __cxa_guard_release(&qword_26788C070);
}

void sub_215788928(_Unwind_Exception *a1)
{
}

void sub_215788940()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C078, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C078))
  {
    sub_215788A14();
    if (byte_26788C19F < 0)
    {
      sub_215738B0C(&xmmword_26788C158, (void *)xmmword_26788C188, *((unint64_t *)&xmmword_26788C188 + 1));
    }
    else
    {
      xmmword_26788C158 = xmmword_26788C188;
      unk_26788C168 = unk_26788C198;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C158, &dword_21572C000);
    __cxa_guard_release(&qword_26788C078);
  }
}

void sub_2157889FC(_Unwind_Exception *a1)
{
}

void sub_215788A14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C080))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLines3]", qword_26788C170);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C170, &dword_21572C000);
    __cxa_guard_release(&qword_26788C080);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C088, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C088))
  {
    sub_215E19DF4((uint64_t)qword_26788C170, (uint64_t)&xmmword_26788C188);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C188, &dword_21572C000);
    __cxa_guard_release(&qword_26788C088);
  }
}

void sub_215788B08(_Unwind_Exception *a1)
{
}

void sub_215788B20(_Unwind_Exception *a1)
{
}

void sub_215788B38(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C090, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C090))
  {
    goto LABEL_2;
  }
  sub_2157887A4();
  int v10 = byte_26788C157;
  if (byte_26788C157 >= 0) {
    size_t v11 = byte_26788C157;
  }
  else {
    size_t v11 = qword_26788C148;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C1A0 + 1) = v11 + 1;
    unk_26788C1B0 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C1A0 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788C1A0;
  unk_26788C1B0 = 0;
  xmmword_26788C1A0 = 0uLL;
  byte_26788C1B7 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C140;
    }
    else {
      char v16 = (uint64_t *)qword_26788C140;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C1A0, &dword_21572C000);
  __cxa_guard_release(&qword_26788C090);
LABEL_2:
  if (byte_26788C1B7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C1A0, *((unint64_t *)&xmmword_26788C1A0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C1A0;
    uint64_t v31 = unk_26788C1B0;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_215788E64(_Unwind_Exception *a1)
{
}

void sub_215788E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215788EDC(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_215788208();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C0C8, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21578905C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215789098(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_215789120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215789134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215789150(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215789164(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_215788940();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C158, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_2157892E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215789320(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157893A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157893BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157893D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157893EC(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_215788208();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_21574ABA8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v29 = v6[2];
    long long v28 = v7;
  }
  size_t v8 = sub_215760BD8();
  if (*((char *)v8 + 23) < 0)
  {
    sub_215738B0C(&v30, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    uint64_t v31 = *((void *)v8 + 2);
    long long v30 = v9;
  }
  sub_21573A150(&v24, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v13, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C0C8, (uint64_t *)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22) {
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v17);
    if (!v16) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v16) {
    goto LABEL_18;
  }
LABEL_16:
  if (v15 < 0) {
    operator delete(__p);
  }
LABEL_18:
  int v10 = (void **)v24;
  if (v24)
  {
    char v11 = v25;
    char v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = v24;
    }
    uint64_t v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0) {
    goto LABEL_32;
  }
}

void sub_21578962C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

void sub_2157896D4(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_215788940();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_21574ABA8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v29 = v6[2];
    long long v28 = v7;
  }
  size_t v8 = sub_215760BD8();
  if (*((char *)v8 + 23) < 0)
  {
    sub_215738B0C(&v30, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    uint64_t v31 = *((void *)v8 + 2);
    long long v30 = v9;
  }
  sub_21573A150(&v24, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v13, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C158, (uint64_t *)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22) {
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v17);
    if (!v16) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v16) {
    goto LABEL_18;
  }
LABEL_16:
  if (v15 < 0) {
    operator delete(__p);
  }
LABEL_18:
  int v10 = (void **)v24;
  if (v24)
  {
    char v11 = v25;
    char v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = v24;
    }
    uint64_t v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0) {
    goto LABEL_32;
  }
}

void sub_215789914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

void *sub_2157899BC(void *a1)
{
  uint64_t v2 = a1[8];
  a1[8] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v3 = (atomic_uint *)a1[5];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[3];
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_215789AEC(void *a1)
{
  uint64_t v2 = a1[7];
  a1[7] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v3 = (atomic_uint *)a1[4];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_215789C14(void *a1)
{
  uint64_t v2 = a1[8];
  a1[8] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v3 = (atomic_uint *)a1[5];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[3];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215789D54(void *a1)
{
  uint64_t v2 = a1[7];
  a1[7] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v3 = (atomic_uint *)a1[4];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[2];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215789E94(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_21577997C((uint64_t *)(a1 + 16));
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_215789EDC(uint64_t a1)
{
  sub_21578D730(*(void **)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = (uint64_t *)(a1 + 8);
  if (v3)
  {
    sub_21577997C(v2);
    operator delete((void *)*v2);
  }
}

void sub_215789F1C(uint64_t a1)
{
  sub_21578D730(*(void **)(a1 + 56));
  if (*(void *)(a1 + 16))
  {
    sub_21577997C((uint64_t *)(a1 + 16));
    operator delete(*(void **)(a1 + 16));
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215789F84(uint64_t a1)
{
  sub_21578D730(*(void **)(a1 + 48));
  if (*(void *)(a1 + 8))
  {
    sub_21577997C((uint64_t *)(a1 + 8));
    operator delete(*(void **)(a1 + 8));
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZLogMessageGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1D8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C1D8))
  {
    return qword_26788C1D0;
  }
  qword_26788C1D0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C1D8);
  return qword_26788C1D0;
}

uint64_t VZLogMessageCreateFromContextIDString(char *a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = 0;
  if (!sub_2157569A8((uint64_t)"VZLogMessageCreateFromContextIDString", (uint64_t)a1, 0))
  {
    uint64_t v4 = 0;
    if (!sub_2157456B0((uint64_t)"VZLogMessageCreateFromContextIDString", a2, 0))
    {
      size_t v5 = strlen(a1);
      sub_21578A358(a1, v5, a2 + 32, (uint64_t)v15);
      sub_21577EA38((uint64_t)v15, &v30);
      uint64_t v4 = v30;
      *(void *)&long long v30 = 0;
      uint64_t v6 = v18;
      if (v18)
      {
        if (atomic_fetch_add(v18 + 2, 0xFFFFFFFF) == 1)
        {
          (*(void (**)(atomic_uint *))(*(void *)v6 + 16))(v6);
          if (atomic_fetch_add(v6 + 3, 0xFFFFFFFF) == 1) {
            (*(void (**)(atomic_uint *))(*(void *)v6 + 24))(v6);
          }
        }
      }
      long long v7 = v16;
      if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (v4) {
          return v4;
        }
      }
      else if (v4)
      {
        return v4;
      }
      size_t v8 = (uint64_t *)sub_21576C6A0();
      long long v30 = *(_OWORD *)"std::string_view";
      uint64_t v31 = 0x1000000000000000;
      long long v9 = sub_21574A5CC();
      if (*((char *)v9 + 23) < 0)
      {
        sub_215738B0C(&v32, (void *)*v9, v9[1]);
      }
      else
      {
        long long v10 = *(_OWORD *)v9;
        uint64_t v33 = v9[2];
        long long v32 = v10;
      }
      sub_21573A150(&v28, (uint64_t)&v30, 2uLL);
      v15[0] = 0;
      char v27 = 0;
      sub_21574086C(v8, (uint64_t *)&v28, (uint64_t)v15, 0);
      if (v27 && v26)
      {
        if (v25)
        {
          if (v24 < 0) {
            operator delete(__p);
          }
          if (v22 < 0) {
            operator delete(v21);
          }
        }
        if (v20 && v19 < 0) {
          operator delete(v17);
        }
      }
      uint64_t v11 = (uint64_t)v28;
      if (v28)
      {
        uint64_t v12 = v29;
        std::runtime_error v13 = v28;
        if ((void *)v29 != v28)
        {
          do
          {
            if (*(char *)(v12 - 1) < 0) {
              operator delete(*(void **)(v12 - 24));
            }
            v12 -= 24;
          }
          while (v12 != v11);
          std::runtime_error v13 = v28;
        }
        uint64_t v29 = v11;
        operator delete(v13);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
      return 0;
    }
  }
  return v4;
}

void sub_21578A330(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21578A358(char *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  sub_215AEDFF4(a1, a2, (uint64_t)v17);
  uint64_t v7 = *(void *)(a3 + 424);
  uint64_t v6 = *(std::__shared_weak_count **)(a3 + 432);
  v15[0] = &unk_26C678D20;
  v15[1] = v7;
  char v16 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_21582DF1C((uint64_t)v24, (uint64_t)v15);
  uint64_t v8 = v25;
  long long v9 = v26;
  long long v10 = operator new(0x40uLL);
  uint64_t v11 = v10;
  v10[1] = 0;
  v10[2] = 0;
  *long long v10 = &unk_26C658088;
  uint64_t v12 = v10 + 3;
  v22[0] = &unk_26C678D20;
  v22[1] = v8;
  char v23 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_21578D3B4(v10 + 3, (long long *)v17, (uint64_t)v22);
  std::runtime_error v13 = v23;
  if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  *(void *)a4 = v12;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 0;
  sub_215748B40((uint64_t)v24);
  char v14 = v16;
  if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  if (v21 && v20 < 0) {
    operator delete(__p);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
}

void sub_21578A554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va3, a2);
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v16 = va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v17 = va_arg(va3, void);
  uint64_t v19 = va_arg(va3, void);
  uint64_t v20 = va_arg(va3, void);
  sub_215AEFACC((uint64_t)va2);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_215748B40((uint64_t)va3);
  sub_215AEFACC((uint64_t)va);
  sub_21578D208((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_21578A594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_215AEFACC((uint64_t)va);
  sub_21578D208((uint64_t)va1);
  _Unwind_Resume(a1);
}

const char *VZLogMessageGetSubloggerName(uint64_t a1)
{
  if (sub_21578A610((uint64_t)"VZLogMessageGetSubloggerName", a1)) {
    return "";
  }
  uint64_t result = **(const char ***)(a1 + 16);
  if (result[23] < 0) {
    return *(const char **)result;
  }
  return result;
}

BOOL sub_21578A610(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C1E0))
  {
    sub_21578D8A0();
    int v5 = byte_26788C28F;
    if (byte_26788C28F >= 0) {
      size_t v6 = byte_26788C28F;
    }
    else {
      size_t v6 = qword_26788C280;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788C260 + 1) = v6 + 1;
      unk_26788C270 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788C260 = v8;
    }
    else
    {
      unk_26788C270 = 0;
      xmmword_26788C260 = 0uLL;
      uint64_t v8 = &xmmword_26788C260;
      byte_26788C277 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C260, &dword_21572C000);
        __cxa_guard_release(&qword_26788C1E0);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      uint64_t v11 = &qword_26788C278;
    }
    else {
      uint64_t v11 = (uint64_t *)qword_26788C278;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C277 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788C260, *((unint64_t *)&xmmword_26788C260 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = xmmword_26788C260;
    uint64_t v13 = unk_26788C270;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_21578A940(_Unwind_Exception *a1)
{
}

void sub_21578A958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

const char *VZLogMessageGetNamespace(uint64_t a1)
{
  if (sub_21578A610((uint64_t)"VZLogMessageGetNamespace", a1)) {
    return "";
  }
  uint64_t v3 = **(void **)(a1 + 16);
  if (!*(unsigned char *)(v3 + 48)) {
    return 0;
  }
  uint64_t result = (const char *)(v3 + 24);
  if (*(char *)(v3 + 47) < 0) {
    return *(const char **)result;
  }
  return result;
}

uint64_t **VZLogMessageGetContextIDString(uint64_t a1)
{
  if (sub_21578A610((uint64_t)"VZLogMessageGetContextIDString", a1)) {
    return (uint64_t **)"";
  }

  return sub_215946A68(a1 + 16);
}

uint64_t VZLogMessageGetData(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (sub_21578A610((uint64_t)"VZLogMessageGetData", a1)) {
    return 0;
  }
  uint64_t result = *(void *)(a1 + 64);
  if (!result)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v5 = *(void *)(v3 + 24);
    uint64_t v4 = *(std::__shared_weak_count **)(v3 + 32);
    if (v4)
    {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    if (!v5) {
      return 0;
    }
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(v6 + 24);
    unint64_t v7 = *(std::__shared_weak_count **)(v6 + 32);
    uint64_t v9 = operator new(0x240uLL, MEMORY[0x263F8C180]);
    if (v9)
    {
      uint64_t v10 = (uint64_t)v9;
      *uint64_t v9 = &unk_26C6565D0;
      uint64_t v11 = (uint64_t)(v9 + 4);
      v39[0] = &unk_26C678D20;
      v39[1] = v8;
      uint64_t v40 = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      sub_21582DF1C(v11, (uint64_t)v39);
      uint64_t v12 = v40;
      if (v40 && !atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
      *(_DWORD *)(v10 + 552) = 1;
      *(void *)uint64_t v10 = &unk_26C656FF0;
      *(void *)(v10 + 16) = &unk_26C657040;
      *(_OWORD *)(v10 + 560) = 0u;
      off_26C657000(v10);
      char v13 = 0;
      uint64_t v14 = *(void *)(a1 + 64);
      *(void *)(a1 + 64) = v10;
      if (!v14) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    long long v15 = (uint64_t *)sub_21574875C();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1B8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788C1B8))
    {
LABEL_21:
      if (byte_26788C22F < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788C218, *((unint64_t *)&xmmword_26788C218 + 1));
      }
      else
      {
        long long __dst = xmmword_26788C218;
        uint64_t v42 = unk_26788C228;
      }
      sub_21573A150(&v37, (uint64_t)&__dst, 1uLL);
      v26[0] = 0;
      char v36 = 0;
      sub_21574086C(v15, (uint64_t *)&v37, (uint64_t)v26, 0);
      if (v36 && v35)
      {
        if (v34)
        {
          if (v33 < 0) {
            operator delete(__p);
          }
          if (v31 < 0) {
            operator delete(v30);
          }
        }
        if (v29 && v28 < 0) {
          operator delete(v27);
        }
      }
      long long v16 = (void **)v37;
      if (v37)
      {
        uint64_t v17 = v38;
        char v18 = v37;
        if (v38 != v37)
        {
          do
          {
            if (*((char *)v17 - 1) < 0) {
              operator delete(*(v17 - 3));
            }
            v17 -= 3;
          }
          while (v17 != v16);
          char v18 = v37;
        }
        char v38 = v16;
        operator delete(v18);
      }
      if (SHIBYTE(v42) < 0) {
        operator delete((void *)__dst);
      }
      uint64_t v10 = 0;
      char v13 = 1;
      uint64_t v14 = *(void *)(a1 + 64);
      *(void *)(a1 + 64) = 0;
      if (!v14) {
        goto LABEL_16;
      }
LABEL_15:
      (*(void (**)(uint64_t))(*(void *)v14 + 24))(v14);
LABEL_16:
      if ((v13 & 1) == 0) {
        (*(void (**)(uint64_t))(*(void *)v10 + 24))(v10);
      }
      return *(void *)(a1 + 64);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1C0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788C1C0))
    {
      unk_26788C241 = 0;
      unk_26788C242 = 0;
      unk_26788C244 = 352321536;
      strcpy((char *)&qword_26788C230, "const viz::Share");
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C230, &dword_21572C000);
      __cxa_guard_release(&qword_26788C1C0);
    }
    int v19 = byte_26788C247;
    if (byte_26788C247 >= 0) {
      size_t v20 = byte_26788C247;
    }
    else {
      size_t v20 = qword_26788C238;
    }
    unint64_t v21 = v20 + 1;
    if (v20 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v21 >= 0x17)
    {
      uint64_t v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v21 | 7) != 0x17) {
        uint64_t v23 = v21 | 7;
      }
      uint64_t v24 = v23 + 1;
      char v22 = (long long *)operator new(v23 + 1);
      *((void *)&xmmword_26788C218 + 1) = v20 + 1;
      unk_26788C228 = v24 | 0x8000000000000000;
      *(void *)&xmmword_26788C218 = v22;
    }
    else
    {
      unk_26788C228 = 0;
      xmmword_26788C218 = 0uLL;
      char v22 = &xmmword_26788C218;
      byte_26788C22F = v20 + 1;
      if (!v20)
      {
LABEL_62:
        *(_WORD *)((char *)v22 + v20) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C218, &dword_21572C000);
        __cxa_guard_release(&qword_26788C1B8);
        goto LABEL_21;
      }
    }
    if (v19 >= 0) {
      char v25 = &qword_26788C230;
    }
    else {
      char v25 = (uint64_t *)qword_26788C230;
    }
    memmove(v22, v25, v20);
    goto LABEL_62;
  }
  return result;
}

void sub_21578B030(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788C1B8);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21578B048(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21578B054);
  }
  sub_215731D80(a1);
}

uint64_t VZLogMessageListGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1F8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C1F8))
  {
    return qword_26788C1F0;
  }
  qword_26788C1F0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C1F8);
  return qword_26788C1F0;
}

_OWORD *VZLogMessageListCreate()
{
  uint64_t result = operator new(0x48uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[1] = 0u;
    result[2] = 0u;
    *((_DWORD *)result + 10) = 1;
    *(void *)uint64_t result = &unk_26C657F78;
    *((void *)result + 1) = &unk_26C657FC8;
    *((void *)result + 8) = 0;
    *((void *)result + 7) = 0;
    *((void *)result + 6) = (char *)result + 56;
  }
  else
  {
    size_t v1 = (uint64_t *)sub_21577DA40();
    long long v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    v5[0] = 0;
    char v15 = 0;
    sub_21574086C(v1, (uint64_t *)&v16, (uint64_t)v5, 0);
    if (v15 && v14)
    {
      if (v13)
      {
        if (v12 < 0) {
          operator delete(__p);
        }
        if (v10 < 0) {
          operator delete(v9);
        }
      }
      if (v8 && v7 < 0) {
        operator delete(v6);
      }
    }
    uint64_t v2 = (uint64_t)v16;
    if (v16)
    {
      uint64_t v3 = v17;
      uint64_t v4 = v16;
      if ((void *)v17 != v16)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0) {
            operator delete(*(void **)(v3 - 24));
          }
          v3 -= 24;
        }
        while (v3 != v2);
        uint64_t v4 = v16;
      }
      uint64_t v17 = v2;
      operator delete(v4);
    }
    return 0;
  }
  return result;
}

void VZLogMessageListAddLogMessage(void *a1, uint64_t a2)
{
  if (a1)
  {
    if (sub_21578A610((uint64_t)"VZLogMessageListAddLogMessage", a2)) {
      return;
    }
    unint64_t v5 = a1[3];
    unint64_t v4 = a1[4];
    if (v5 < v4)
    {
      *(void *)unint64_t v5 = *(void *)(a2 + 16);
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(v5 + 8) = v6;
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      if (atomic_exchange_explicit((atomic_uchar *volatile)(a2 + 48), 1u, memory_order_acquire))
      {
        int v7 = 0;
        do
        {
          if (v7)
          {
            timespec __rqtp = (timespec)xmmword_215E98470;
            nanosleep(&__rqtp, 0);
          }
          --v7;
        }
        while (atomic_exchange_explicit((atomic_uchar *volatile)(a2 + 48), 1u, memory_order_acquire));
      }
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v17 = *(void *)(a2 + 40);
      if (v17) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v17 + 8), 1u, memory_order_relaxed);
      }
      atomic_store(0, (unsigned __int8 *)(a2 + 48));
      *(void *)(v5 + 16) = v18;
      *(void *)(v5 + 24) = v17;
      *(unsigned char *)(v5 + 32) = 0;
      uint64_t v19 = v5 + 40;
LABEL_90:
      a1[3] = v19;
      return;
    }
    uint64_t v8 = a1[2];
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - v8) >> 3);
    if (v9 + 1 > 0x666666666666666) {
      sub_215738AC0();
    }
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v4 - v8) >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= v9 + 1) {
      uint64_t v11 = v9 + 1;
    }
    if (v10 >= 0x333333333333333) {
      unint64_t v12 = 0x666666666666666;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12)
    {
      if (v12 > 0x666666666666666) {
        sub_215738AD8();
      }
      char v13 = (char *)operator new(40 * v12);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = (uint64_t)&v13[40 * v9];
      *(void *)uint64_t v15 = *(void *)(a2 + 16);
      *(void *)(v15 + 8) = v14;
      if (!v14) {
        goto LABEL_24;
      }
    }
    else
    {
      char v13 = 0;
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = 40 * v9;
      *(void *)uint64_t v15 = *(void *)(a2 + 16);
      *(void *)(v15 + 8) = v14;
      if (!v14) {
        goto LABEL_24;
      }
    }
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
LABEL_24:
    if (atomic_exchange_explicit((atomic_uchar *volatile)(a2 + 48), 1u, memory_order_acquire))
    {
      int v16 = 0;
      do
      {
        if (v16)
        {
          timespec __rqtp = (timespec)xmmword_215E98470;
          nanosleep(&__rqtp, 0);
        }
        --v16;
      }
      while (atomic_exchange_explicit((atomic_uchar *volatile)(a2 + 48), 1u, memory_order_acquire));
    }
    uint64_t v21 = *(void *)(a2 + 32);
    uint64_t v20 = *(void *)(a2 + 40);
    if (v20) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v20 + 8), 1u, memory_order_relaxed);
    }
    char v22 = &v13[40 * v12];
    uint64_t v23 = &v13[40 * v9];
    atomic_store(0, (unsigned __int8 *)(a2 + 48));
    *((void *)v23 + 2) = v21;
    *((void *)v23 + 3) = v20;
    unsigned char v23[32] = 0;
    uint64_t v19 = v15 + 40;
    char v25 = (atomic_uchar *)a1[2];
    uint64_t v24 = (atomic_uchar *)a1[3];
    if (v24 == v25)
    {
      a1[2] = v15;
      a1[3] = v19;
      a1[4] = v22;
    }
    else
    {
      uint64_t v46 = v22;
      long long v26 = (atomic_uchar *)a1[3];
      uint64_t v27 = v15;
      do
      {
        uint64_t v28 = *((void *)v26 - 5);
        v26 -= 40;
        *(void *)(v27 - 40) = v28;
        v27 -= 40;
        uint64_t v29 = *((void *)v26 + 1);
        *(void *)(v27 + 8) = v29;
        if (v29) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v29 + 8), 1uLL, memory_order_relaxed);
        }
        long long v30 = v24 - 8;
        if (atomic_exchange_explicit(v24 - 8, 1u, memory_order_acquire))
        {
          int v31 = 0;
          do
          {
            if (v31)
            {
              timespec __rqtp = (timespec)xmmword_215E98470;
              nanosleep(&__rqtp, 0);
            }
            --v31;
          }
          while (atomic_exchange_explicit(v30, 1u, memory_order_acquire));
        }
        uint64_t v32 = *((void *)v24 - 3);
        uint64_t v33 = *((void *)v24 - 2);
        if (v33) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v33 + 8), 1u, memory_order_relaxed);
        }
        atomic_store(0, (unsigned __int8 *)v30);
        *(void *)(v15 - 24) = v32;
        *(void *)(v15 - 16) = v33;
        *(unsigned char *)(v15 - 8) = 0;
        uint64_t v15 = v27;
        uint64_t v24 = v26;
      }
      while (v26 != v25);
      uint64_t v24 = (atomic_uchar *)a1[2];
      char v34 = (atomic_uchar *)a1[3];
      a1[2] = v27;
      a1[3] = v19;
      for (a1[4] = v46; v34 != v24; v34 -= 40)
      {
        char v35 = (atomic_uint *)*((void *)v34 - 2);
        if (v35)
        {
          if (atomic_fetch_add(v35 + 2, 0xFFFFFFFF) == 1)
          {
            (*(void (**)(atomic_uint *))(*(void *)v35 + 16))(v35);
            if (atomic_fetch_add(v35 + 3, 0xFFFFFFFF) == 1) {
              (*(void (**)(atomic_uint *))(*(void *)v35 + 24))(v35);
            }
          }
        }
        char v36 = (std::__shared_weak_count *)*((void *)v34 - 4);
        if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
    }
    if (v24) {
      operator delete(v24);
    }
    goto LABEL_90;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C200, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C200))
  {
    char v37 = sub_21577DA40();
    char v38 = (const void **)v37;
    int v39 = *((char *)v37 + 23);
    if (v39 >= 0) {
      size_t v40 = *((unsigned __int8 *)v37 + 23);
    }
    else {
      size_t v40 = *((void *)v37 + 1);
    }
    unint64_t v41 = v40 + 1;
    if (v40 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v41 >= 0x17)
    {
      uint64_t v43 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v41 | 7) != 0x17) {
        uint64_t v43 = v41 | 7;
      }
      uint64_t v44 = v43 + 1;
      uint64_t v42 = (long long *)operator new(v43 + 1);
      *((void *)&xmmword_26788C290 + 1) = v40 + 1;
      unk_26788C2A0 = v44 | 0x8000000000000000;
      *(void *)&xmmword_26788C290 = v42;
    }
    else
    {
      unk_26788C2A0 = 0;
      xmmword_26788C290 = 0uLL;
      uint64_t v42 = &xmmword_26788C290;
      byte_26788C2A7 = v40 + 1;
      if (!v40)
      {
LABEL_108:
        *(_WORD *)((char *)v42 + v40) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C290, &dword_21572C000);
        __cxa_guard_release(&qword_26788C200);
        goto LABEL_12;
      }
    }
    if (v39 >= 0) {
      long long v45 = v38;
    }
    else {
      long long v45 = *v38;
    }
    memmove(v42, v45, v40);
    goto LABEL_108;
  }
LABEL_12:
  if (byte_26788C2A7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788C290, *((unint64_t *)&xmmword_26788C290 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788C290;
    uint64_t v48 = unk_26788C2A0;
  }
  char v49 = 1;
  sub_21573FF94((uint64_t)"VZLogMessageListAddLogMessage", (uint64_t)__dst, (uint64_t)&v50);
  timespec __rqtp = v50;
  LOBYTE(v62) = 0;
  char v71 = 0;
  if (v60)
  {
    char v64 = 0;
    if (v53)
    {
      long long v62 = v51;
      uint64_t v63 = v52;
      uint64_t v52 = 0;
      long long v51 = 0uLL;
      char v64 = 1;
    }
    LOBYTE(v65) = 0;
    char v70 = 0;
    if (v59)
    {
      uint64_t v66 = v55;
      long long v65 = *(_OWORD *)v54;
      v54[0] = 0;
      v54[1] = 0;
      uint64_t v67 = v56;
      *(_OWORD *)long long __p = *(_OWORD *)v57;
      uint64_t v69 = v58;
      uint64_t v55 = 0;
      v57[0] = 0;
      v57[1] = 0;
      uint64_t v58 = 0;
      char v70 = 1;
    }
    char v71 = 1;
  }
  char v72 = 0;
  sub_21573E208((long long *)&__rqtp.tv_sec, 0);
  if (!v72 && v71)
  {
    if (v70)
    {
      if (SHIBYTE(v69) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v66) < 0) {
        operator delete((void *)v65);
      }
    }
    if (v64 && SHIBYTE(v63) < 0) {
      operator delete((void *)v62);
    }
  }
  if (v60)
  {
    if (v59)
    {
      if (SHIBYTE(v58) < 0) {
        operator delete(v57[0]);
      }
      if (SHIBYTE(v55) < 0) {
        operator delete(v54[0]);
      }
    }
    if (v53 && SHIBYTE(v52) < 0) {
      operator delete((void *)v51);
    }
  }
  if (v49 && SHIBYTE(v48) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_21578B908(_Unwind_Exception *a1)
{
}

void sub_21578B924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a19)
  {
    if (a18 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

unint64_t VZLogMessageListGetSize(uint64_t a1)
{
  if (sub_21578B9CC((uint64_t)"VZLogMessageListGetSize", a1)) {
    return 0;
  }
  else {
    return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 24) - *(void *)(a1 + 16)) >> 3);
  }
}

BOOL sub_21578B9CC(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C208, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C208))
  {
    sub_21578DA34();
    int v5 = byte_26788C2D7;
    if (byte_26788C2D7 >= 0) {
      size_t v6 = byte_26788C2D7;
    }
    else {
      size_t v6 = qword_26788C2C8;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788C2A8 + 1) = v6 + 1;
      unk_26788C2B8 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788C2A8 = v8;
    }
    else
    {
      unk_26788C2B8 = 0;
      xmmword_26788C2A8 = 0uLL;
      uint64_t v8 = &xmmword_26788C2A8;
      byte_26788C2BF = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C2A8, &dword_21572C000);
        __cxa_guard_release(&qword_26788C208);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      uint64_t v11 = &qword_26788C2C0;
    }
    else {
      uint64_t v11 = (uint64_t *)qword_26788C2C0;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C2BF < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788C2A8, *((unint64_t *)&xmmword_26788C2A8 + 1));
  }
  else
  {
    *(_OWORD *)unint64_t v12 = xmmword_26788C2A8;
    uint64_t v13 = unk_26788C2B8;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_21578BCFC(_Unwind_Exception *a1)
{
}

void sub_21578BD14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t *VZLogMessageListGetLogMessage(uint64_t a1, unint64_t a2)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  if (!sub_21578B9CC((uint64_t)"VZLogMessageListGetLogMessage", a1))
  {
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v5 = *(void *)(a1 + 24);
    unint64_t v71 = a2;
    unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - v6) >> 3);
    if (v7 <= a2)
    {
      unint64_t v61 = v7;
      sub_21576B544("index ", &v71, (std::string *)" out of range for list of size ", &v61);
      if (SHIBYTE(v85) < 0)
      {
        sub_215738B0C(&__dst, (void *)v84.tv_sec, v84.tv_nsec);
      }
      else
      {
        timespec __dst = v84;
        uint64_t v63 = v85;
      }
      char v64 = 1;
      LOBYTE(v65) = 0;
      char v69 = 0;
      char v70 = 1;
      sub_21573FCF8(0xAu, (long long *)&__dst.tv_sec, (uint64_t)&__rqtp);
      timespec v49 = __rqtp;
      LOBYTE(v50) = 0;
      char v59 = 0;
      if (v82)
      {
        char v52 = 0;
        if (v75)
        {
          long long v50 = v73;
          uint64_t v51 = v74;
          uint64_t v74 = 0;
          long long v73 = 0uLL;
          char v52 = 1;
        }
        LOBYTE(v53) = 0;
        char v58 = 0;
        if (v81)
        {
          uint64_t v54 = v77;
          long long v53 = v76;
          long long v76 = 0uLL;
          uint64_t v55 = v78;
          long long v56 = v79;
          uint64_t v57 = v80;
          uint64_t v77 = 0;
          long long v79 = 0uLL;
          uint64_t v80 = 0;
          char v58 = 1;
        }
        char v59 = 1;
        char v60 = 0;
        if (v75 && SHIBYTE(v74) < 0) {
          operator delete((void *)v73);
        }
      }
      else
      {
        char v60 = 0;
      }
      if (v70)
      {
        if (v69)
        {
          if (v68 < 0) {
            operator delete(__p);
          }
          if (v66 < 0) {
            operator delete(v65);
          }
        }
        if (v64 && SHIBYTE(v63) < 0) {
          operator delete((void *)__dst.tv_sec);
        }
      }
      if (SHIBYTE(v85) < 0) {
        operator delete((void *)v84.tv_sec);
      }
      sub_21573E208((long long *)&v49.tv_sec, 0);
      unint64_t v4 = 0;
      goto LABEL_107;
    }
    uint64_t v8 = (__darwin_time_t *)(v6 + 40 * a2);
    v49.__darwin_time_t tv_sec = *v8;
    uint64_t v9 = v8[1];
    v49.uint64_t tv_nsec = v9;
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v10 = v6 + 40 * a2;
    uint64_t v11 = (atomic_uchar *)(v10 + 32);
    if (atomic_exchange_explicit((atomic_uchar *volatile)(v10 + 32), 1u, memory_order_acquire))
    {
      int v12 = 0;
      do
      {
        if (v12)
        {
          timespec __rqtp = (timespec)xmmword_215E98470;
          nanosleep(&__rqtp, 0);
        }
        --v12;
      }
      while (atomic_exchange_explicit(v11, 1u, memory_order_acquire));
    }
    uint64_t v13 = *(void *)(v10 + 16);
    uint64_t v14 = *(void *)(v6 + 40 * a2 + 24);
    if (v14) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 + 8), 1u, memory_order_relaxed);
    }
    atomic_store(0, (unsigned __int8 *)v11);
    *(void *)&long long v50 = v13;
    *((void *)&v50 + 1) = v14;
    LOBYTE(v51) = 0;
    char v60 = 1;
    long long v16 = (uint64_t **)(a1 + 56);
    long long v15 = *(void **)(a1 + 56);
    if (v15)
    {
      uint64_t v17 = (uint64_t **)(a1 + 56);
      do
      {
        unint64_t v18 = v15[4];
        BOOL v19 = v18 >= v49.tv_sec;
        if (v18 >= v49.tv_sec) {
          uint64_t v20 = v15;
        }
        else {
          uint64_t v20 = v15 + 1;
        }
        if (v19) {
          uint64_t v17 = (uint64_t **)v15;
        }
        long long v15 = (void *)*v20;
      }
      while (*v20);
      if (v17 != v16 && v49.tv_sec >= (unint64_t)v17[4]) {
        goto LABEL_106;
      }
    }
    uint64_t v21 = operator new(0x48uLL, MEMORY[0x263F8C180]);
    if (v21)
    {
      char v22 = v21;
      void *v21 = &unk_26C6565D0;
      uint64_t tv_nsec = v49.tv_nsec;
      unsigned char v21[2] = v49.tv_sec;
      void v21[3] = tv_nsec;
      if (tv_nsec) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(tv_nsec + 8), 1uLL, memory_order_relaxed);
      }
      if (atomic_exchange_explicit((atomic_uchar *volatile)&v51, 1u, memory_order_acquire))
      {
        int v24 = 0;
        do
        {
          if (v24)
          {
            timespec __dst = (timespec)xmmword_215E98470;
            nanosleep(&__dst, 0);
          }
          --v24;
        }
        while (atomic_exchange_explicit((atomic_uchar *volatile)&v51, 1u, memory_order_acquire));
      }
      uint64_t v25 = *((void *)&v50 + 1);
      if (*((void *)&v50 + 1)) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v50 + 1) + 8), 1u, memory_order_relaxed);
      }
      atomic_store(0, (unsigned __int8 *)&v51);
      v22[4] = v50;
      v22[5] = v25;
      *((unsigned char *)v22 + 48) = 0;
      *((_DWORD *)v22 + 14) = 1;
      long long v26 = (void (**)(void))&unk_26C657E80;
      *char v22 = &unk_26C657E80;
      v22[1] = &unk_26C657ED0;
      v22[8] = 0;
      long long v27 = *v16;
      uint64_t v28 = (uint64_t **)(a1 + 56);
      if (*v16)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v28 = (uint64_t **)v27;
            unint64_t v29 = v27[4];
            if (v29 <= v49.tv_sec) {
              break;
            }
            long long v27 = *v28;
            long long v16 = v28;
            if (!*v28) {
              goto LABEL_65;
            }
          }
          if (v29 >= v49.tv_sec) {
            break;
          }
          long long v27 = v28[1];
          if (!v27)
          {
            long long v16 = v28 + 1;
            goto LABEL_65;
          }
        }
        uint64_t v17 = v28;
      }
      else
      {
LABEL_65:
        uint64_t v17 = (uint64_t **)operator new(0x50uLL);
        uint64_t v30 = v49.tv_nsec;
        v17[4] = (uint64_t *)v49.tv_sec;
        v17[5] = (uint64_t *)v30;
        if (v30) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v30 + 8), 1uLL, memory_order_relaxed);
        }
        if (atomic_exchange_explicit((atomic_uchar *volatile)&v51, 1u, memory_order_acquire))
        {
          int v31 = 0;
          do
          {
            if (v31)
            {
              timespec __rqtp = (timespec)xmmword_215E98470;
              nanosleep(&__rqtp, 0);
            }
            --v31;
          }
          while (atomic_exchange_explicit((atomic_uchar *volatile)&v51, 1u, memory_order_acquire));
        }
        uint64_t v32 = (uint64_t *)*((void *)&v50 + 1);
        if (*((void *)&v50 + 1)) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v50 + 1) + 8), 1u, memory_order_relaxed);
        }
        atomic_store(0, (unsigned __int8 *)&v51);
        v17[6] = (uint64_t *)v50;
        v17[7] = v32;
        *((unsigned char *)v17 + 64) = 0;
        v17[9] = v22;
        (*(void (**)(void *))(*v22 + 16))(v22);
        *uint64_t v17 = 0;
        v17[1] = 0;
        v17[2] = (uint64_t *)v28;
        *long long v16 = (uint64_t *)v17;
        uint64_t v33 = **(void **)(a1 + 48);
        uint64_t v34 = (uint64_t *)v17;
        if (v33)
        {
          *(void *)(a1 + 48) = v33;
          uint64_t v34 = *v16;
        }
        sub_21573B048(*(uint64_t **)(a1 + 56), v34);
        ++*(void *)(a1 + 64);
        long long v26 = (void (**)(void))*v22;
      }
      ((void (**)(void *))v26)[3](v22);
LABEL_106:
      unint64_t v4 = v17[9];
LABEL_107:
      sub_215779A98((uint64_t)&v49);
      return v4;
    }
    char v35 = (uint64_t *)sub_21576C6A0();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1C8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788C1C8))
    {
LABEL_78:
      if (byte_26788C25F < 0)
      {
        sub_215738B0C(&v84, (void *)xmmword_26788C248, *((unint64_t *)&xmmword_26788C248 + 1));
      }
      else
      {
        timespec v84 = (timespec)xmmword_26788C248;
        uint64_t v85 = unk_26788C258;
      }
      sub_21573A150(&__dst, (uint64_t)&v84, 1uLL);
      LOBYTE(__rqtp.tv_sec) = 0;
      char v83 = 0;
      sub_21574086C(v35, &__dst.tv_sec, (uint64_t)&__rqtp, 0);
      if (v83 && v82)
      {
        if (v81)
        {
          if (SHIBYTE(v80) < 0) {
            operator delete((void *)v79);
          }
          if (SHIBYTE(v77) < 0) {
            operator delete((void *)v76);
          }
        }
        if (v75 && SHIBYTE(v74) < 0) {
          operator delete((void *)v73);
        }
      }
      __darwin_time_t tv_sec = __dst.tv_sec;
      if (__dst.tv_sec)
      {
        uint64_t v37 = __dst.tv_nsec;
        char v38 = (void *)__dst.tv_sec;
        if (__dst.tv_nsec != __dst.tv_sec)
        {
          do
          {
            if (*(char *)(v37 - 1) < 0) {
              operator delete(*(void **)(v37 - 24));
            }
            v37 -= 24;
          }
          while (v37 != tv_sec);
          char v38 = (void *)__dst.tv_sec;
        }
        __dst.uint64_t tv_nsec = tv_sec;
        operator delete(v38);
      }
      if (SHIBYTE(v85) < 0) {
        operator delete((void *)v84.tv_sec);
      }
      unint64_t v4 = 0;
      goto LABEL_107;
    }
    size_t v40 = sub_21576CA40();
    unint64_t v41 = (const void **)v40;
    int v42 = *((char *)v40 + 23);
    if (v42 >= 0) {
      size_t v43 = *((unsigned __int8 *)v40 + 23);
    }
    else {
      size_t v43 = *((void *)v40 + 1);
    }
    unint64_t v44 = v43 + 1;
    if (v43 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v44 >= 0x17)
    {
      uint64_t v46 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v44 | 7) != 0x17) {
        uint64_t v46 = v44 | 7;
      }
      uint64_t v47 = v46 + 1;
      long long v45 = (long long *)operator new(v46 + 1);
      *((void *)&xmmword_26788C248 + 1) = v43 + 1;
      unk_26788C258 = v47 | 0x8000000000000000;
      *(void *)&xmmword_26788C248 = v45;
    }
    else
    {
      long long v45 = &xmmword_26788C248;
      unk_26788C258 = 0;
      xmmword_26788C248 = 0uLL;
      byte_26788C25F = v43 + 1;
      if (!v43)
      {
LABEL_124:
        *(_WORD *)((char *)v45 + v43) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C248, &dword_21572C000);
        __cxa_guard_release(&qword_26788C1C8);
        goto LABEL_78;
      }
    }
    if (v42 >= 0) {
      uint64_t v48 = v41;
    }
    else {
      uint64_t v48 = *v41;
    }
    memmove(v45, v48, v43);
    goto LABEL_124;
  }
  return 0;
}

void sub_21578C57C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,int a50,__int16 a51,char a52,char a53)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788C1C8);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21578C68C(uint64_t result)
{
  return result;
}

uint64_t sub_21578C69C(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 56), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21578C6D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1D8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C1D8))
  {
    return qword_26788C1D0;
  }
  qword_26788C1D0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C1D8);
  return qword_26788C1D0;
}

uint64_t sub_21578C73C(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C657F18, 0);
  if (result)
  {
    unint64_t v4 = *(unsigned __int8 ***)(a1 + 16);
    uint64_t v5 = *(void *)(result + 16);
    if (*v4 == *(unsigned __int8 **)v5) {
      return sub_215AEFC4C((uint64_t)(v4 + 2), (void *)(v5 + 16));
    }
    uint64_t result = sub_21598E8F8(*v4, *(unsigned __int8 **)v5);
    if (result) {
      return sub_215AEFC4C((uint64_t)(v4 + 2), (void *)(v5 + 16));
    }
  }
  return result;
}

uint64_t sub_21578C7DC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  BOOL v19 = sub_21576C6A0();
  sub_215732BF4(v21, "failed to compare equal");
  sub_2157402F0((std::string::size_type)v19, v21, 0);
  if (v22 < 0) {
    operator delete((void *)v21[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_21578C838(uint64_t a1)
{
  sub_21576C6A0();
  uint64_t v2 = a1;
  operator new();
}

void sub_21578CA84(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v23 = sub_21576C6A0();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21578CA68);
}

uint64_t sub_21578CB54(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 56));
}

uint64_t sub_21578CB60(uint64_t result)
{
  return result;
}

uint64_t sub_21578CB70(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21578CBAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1F8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C1F8))
  {
    return qword_26788C1F0;
  }
  qword_26788C1F0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C1F8);
  return qword_26788C1F0;
}

uint64_t sub_21578CC10(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658028, 0);
  if (result)
  {
    uint64_t v6 = a1 + 16;
    unint64_t v4 = *(unsigned __int8 ****)(a1 + 16);
    uint64_t v5 = *(unsigned __int8 ****)(v6 + 8);
    unint64_t v7 = *(unsigned __int8 ****)(result + 16);
    if ((char *)v5 - (char *)v4 == *(void *)(result + 24) - (void)v7)
    {
      if (v4 == v5)
      {
        return 1;
      }
      else
      {
        while (1)
        {
          uint64_t v8 = *v4;
          uint64_t v9 = *v7;
          uint64_t v10 = **v4;
          uint64_t v11 = **v7;
          if (v10 != v11)
          {
            uint64_t result = sub_21598E8F8(v10, v11);
            if (!result) {
              break;
            }
          }
          uint64_t result = sub_215AEFC4C((uint64_t)(v8 + 2), v9 + 2);
          if (!result) {
            break;
          }
          v4 += 5;
          v7 += 5;
          if (v4 == v5) {
            return 1;
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_21578CD0C(uint64_t a1)
{
  sub_21577DA40();
  uint64_t v2 = a1;
  operator new();
}

void sub_21578D0F8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  sub_215733368((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v38 = sub_21577DA40();
  sub_215732BF4(&a32, "failed to create description");
  sub_2157402F0((std::string::size_type)v38, (const void **)&a32, 0);
  if (a37 < 0) {
    operator delete(a32);
  }
  __cxa_end_catch();
  JUMPOUT(0x21578D0C4);
}

uint64_t sub_21578D1FC(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

uint64_t sub_21578D208(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) && *(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_21578D26C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C658088;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21578D28C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C658088;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21578D2E0(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void *sub_21578D3B4(void *a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = (std::__shared_weak_count *)operator new(0x50uLL);
  v6->__shared_owners_ = 0;
  p_shared_owners = &v6->__shared_owners_;
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6580D8;
  sub_21578D638(&v6[1], a2);
  uint64_t v8 = *(atomic_ullong **)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t v11 = (std::__shared_weak_count *)v8;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *a1 = v6 + 1;
  a1[1] = v6;
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  a1[2] = &unk_26C678D20;
  a1[3] = v10;
  a1[4] = v8;
  if (v8)
  {
    atomic_fetch_add_explicit(v8 + 1, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(v8 + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(atomic_ullong *))(*v8 + 16))(v8);
      std::__shared_weak_count::__release_weak(v11);
      if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
        return a1;
      }
      goto LABEL_4;
    }
  }
  if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
  {
LABEL_4:
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  return a1;
}

void sub_21578D540(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_21578D558(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6580D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21578D578(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6580D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21578D5CC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      return;
    }
  }
  else if ((*(char *)(a1 + 47) & 0x80000000) == 0)
  {
    return;
  }
  uint64_t v2 = *(void **)(a1 + 24);

  operator delete(v2);
}

unsigned char *sub_21578D638(unsigned char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    __dst[24] = 0;
    uint64_t v5 = __dst + 24;
    __dst[48] = 0;
    if (!*((unsigned char *)a2 + 48)) {
      return __dst;
    }
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)timespec __dst = v4;
    __dst[24] = 0;
    uint64_t v5 = __dst + 24;
    __dst[48] = 0;
    if (!*((unsigned char *)a2 + 48)) {
      return __dst;
    }
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_215738B0C(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v5 + 2) = *((void *)a2 + 5);
    *(_OWORD *)uint64_t v5 = v7;
  }
  __dst[48] = 1;
  return __dst;
}

void sub_21578D6FC(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 48) && *(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_21578D730(void *a1)
{
  if (a1)
  {
    sub_21578D730(*a1);
    sub_21578D730(a1[1]);
    uint64_t v2 = a1[9];
    a1[9] = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    }
    uint64_t v3 = (atomic_uint *)a1[7];
    if (v3)
    {
      if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
      {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
        if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
        }
      }
    }
    long long v4 = (std::__shared_weak_count *)a1[5];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      uint64_t v5 = a1;
    }
    else
    {
      uint64_t v5 = a1;
    }
    operator delete(v5);
  }
}

void sub_21578D8A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C1E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C1E8))
  {
    int v0 = sub_21576C6A0();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788C280 = v3 + 6;
      unk_26788C288 = v7 | 0x8000000000000000;
      qword_26788C278 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788C280 = 0;
      unk_26788C288 = 0;
      qword_26788C278 = 0x2074736E6F63;
      byte_26788C28F = v3 + 6;
      uint64_t v5 = (char *)&qword_26788C278 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C278, &dword_21572C000);
        __cxa_guard_release(&qword_26788C1E8);
        return;
      }
    }
    if (v2 >= 0) {
      uint64_t v9 = v1;
    }
    else {
      uint64_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_21578DA1C(_Unwind_Exception *a1)
{
}

void sub_21578DA34()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C210, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C210))
  {
    int v0 = sub_21577DA40();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788C2C8 = v3 + 6;
      unk_26788C2D0 = v7 | 0x8000000000000000;
      qword_26788C2C0 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788C2C8 = 0;
      unk_26788C2D0 = 0;
      qword_26788C2C0 = 0x2074736E6F63;
      byte_26788C2D7 = v3 + 6;
      uint64_t v5 = (char *)&qword_26788C2C0 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C2C0, &dword_21572C000);
        __cxa_guard_release(&qword_26788C210);
        return;
      }
    }
    if (v2 >= 0) {
      uint64_t v9 = v1;
    }
    else {
      uint64_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_21578DBB0(_Unwind_Exception *a1)
{
}

void sub_21578DBC8()
{
}

void sub_21578DDB4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_21578DDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21578DE1C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 112);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C658270[v2])(&v5, a1 + 88);
    }
    *(_DWORD *)(a1 + 112) = -1;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C658280[v3])(&v6, a1 + 24);
    }
    *(_DWORD *)(a1 + 56) = -1;
  }
  return a1;
}

uint64_t sub_21578DEB8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 112))
  {
    uint64_t v2 = *(unsigned int *)(result + 104);
    if (v2 != -1) {
      uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C658270[v2])(&v4, result + 80);
    }
    *(_DWORD *)(v1 + 104) = -1;
  }
  if (*(unsigned char *)(v1 + 56))
  {
    uint64_t v3 = *(unsigned int *)(v1 + 48);
    if (v3 != -1) {
      uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C658280[v3])(&v5, v1 + 16);
    }
    *(_DWORD *)(v1 + 48) = -1;
  }
  return result;
}

uint64_t sub_21578DF50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 112);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C658270[v2])(&v5, a1 + 88);
    }
    *(_DWORD *)(a1 + 112) = -1;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C658280[v3])(&v6, a1 + 24);
    }
    *(_DWORD *)(a1 + 56) = -1;
  }
  return MEMORY[0x2166C4D20](a1, 0x1093C40E93C9851);
}

uint64_t sub_21578E000(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 104);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C658270[v2])(&v5, a1 + 80);
    }
    *(_DWORD *)(a1 + 104) = -1;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v3 = *(unsigned int *)(a1 + 48);
    if (v3 != -1) {
      ((void (*)(char *, uint64_t))off_26C658280[v3])(&v6, a1 + 16);
    }
    *(_DWORD *)(a1 + 48) = -1;
  }
  return MEMORY[0x2166C4D20](a1 - 8, 0x1093C40E93C9851);
}

uint64_t VZLogMessageFilterGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C2E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C2E0))
  {
    return qword_26788C2D8;
  }
  qword_26788C2D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C2E0);
  return qword_26788C2D8;
}

void *VZLogMessageFilterCreate()
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  int v0 = operator new(0x88uLL, MEMORY[0x263F8C180]);
  if (v0)
  {
    uint64_t v1 = v0;
    *(_OWORD *)int v0 = 0u;
    v0[16] = 0;
    *((_OWORD *)v0 + 6) = 0u;
    *((_OWORD *)v0 + 7) = 0u;
    *((_OWORD *)v0 + 4) = 0u;
    *((_OWORD *)v0 + 5) = 0u;
    *((_OWORD *)v0 + 2) = 0u;
    *((_OWORD *)v0 + 3) = 0u;
    *((_OWORD *)v0 + 1) = 0u;
    uint64_t v2 = (uint64_t)(v0 + 2);
    *int v0 = &unk_26C6565D0;
    bzero(v11, 0x300uLL);
    v11[0] = off_26C678AE8;
    sub_2159477B8(v2, (uint64_t)v11);
    v11[0] = off_26C678AE8;
    sub_215948050((uint64_t)&v12);
    *((_DWORD *)v1 + 32) = 1;
    *uint64_t v1 = &unk_26C658188;
    v1[1] = &unk_26C6581D8;
  }
  else
  {
    char v4 = (uint64_t *)sub_215779F84();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    LOBYTE(v11[0]) = 0;
    char v21 = 0;
    sub_21574086C(v4, (uint64_t *)&v8, (uint64_t)v11, 0);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0) {
          operator delete(__p);
        }
        if (v16 < 0) {
          operator delete(v15);
        }
      }
      if (v14 && v13 < 0) {
        operator delete(v12);
      }
    }
    char v5 = (void **)v8;
    if (v8)
    {
      char v6 = v9;
      uint64_t v7 = v8;
      if (v9 != v8)
      {
        do
        {
          if (*((char *)v6 - 1) < 0) {
            operator delete(*(v6 - 3));
          }
          v6 -= 3;
        }
        while (v6 != v5);
        uint64_t v7 = v8;
      }
      uint64_t v9 = v5;
      operator delete(v7);
    }
    return 0;
  }
  return v1;
}

void sub_21578E368(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21578E374);
  }
  sub_215731D80(a1);
}

void VZLogMessageFilterRequirePackageIDWildcard(uint64_t a1, char *a2)
{
  if (!sub_21578E438((uint64_t)"VZLogMessageFilterRequirePackageIDWildcard", a1))
  {
    sub_21578E7B4((uint64_t)__p, a2);
    sub_215947B7C(a1 + 16, (uint64_t)__p);
    if (v7)
    {
      if (v6 < 0)
      {
        char v4 = __p[0];
        operator delete(v4);
      }
    }
  }
}

void sub_21578E414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_21578E438(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C2E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C2E8))
  {
    char v5 = sub_215779F84();
    char v6 = (const void **)v5;
    int v7 = *((char *)v5 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      size_t v8 = *((void *)v5 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C2F0 + 1) = v8 + 1;
      unk_26788C300 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C2F0 = v10;
    }
    else
    {
      unk_26788C300 = 0;
      xmmword_26788C2F0 = 0uLL;
      uint64_t v10 = &xmmword_26788C2F0;
      byte_26788C307 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C2F0, &dword_21572C000);
        __cxa_guard_release(&qword_26788C2E8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = v6;
    }
    else {
      char v13 = *v6;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C307 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C2F0, *((unint64_t *)&xmmword_26788C2F0 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C2F0;
    uint64_t v15 = unk_26788C300;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, 0);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21578E760(_Unwind_Exception *a1)
{
}

void sub_21578E778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

double sub_21578E7B4(uint64_t a1, char *__s)
{
  if (!__s)
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    return result;
  }
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (long long *)operator new(v7 + 1);
    *((void *)&__dst + 1) = v5;
    unint64_t v11 = v8 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v11) = v4;
    p_dst = &__dst;
    if (!v4) {
      goto LABEL_11;
    }
  }
  memcpy(p_dst, __s, v5);
LABEL_11:
  *((unsigned char *)p_dst + v5) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)a1 = __dst;
  *(void *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

void sub_21578E8AC(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = (uint64_t *)sub_21575C468();
  sub_215740F64((std::string::size_type)"char", v2, 0);
  *uint64_t v1 = 0;
  v1[24] = 0;
  __cxa_end_catch();
  JUMPOUT(0x21578E814);
}

BOOL VZLogMessageFilterRequireDataTypeIDExact(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_21578E438((uint64_t)"VZLogMessageFilterRequireDataTypeIDExact", a1);
  if (!result)
  {
    if (a2 == -1)
    {
      if (*(unsigned char *)(a1 + 80)) {
        *(unsigned char *)(a1 + 80) = 0;
      }
    }
    else
    {
      if (!*(unsigned char *)(a1 + 80)) {
        *(unsigned char *)(a1 + 80) = 1;
      }
      *(void *)(a1 + 72) = a2 | ((unint64_t)(a2 != -1) << 32);
    }
  }
  return result;
}

void VZLogMessageFilterRequireSubloggerWildcard(uint64_t a1, char *a2)
{
  if (!sub_21578E438((uint64_t)"VZLogMessageFilterRequireSubloggerWildcard", a1))
  {
    sub_21578E7B4((uint64_t)__p, a2);
    sub_215947DFC(a1 + 16, (uint64_t)__p);
    if (v7)
    {
      if (v6 < 0)
      {
        size_t v4 = __p[0];
        operator delete(v4);
      }
    }
  }
}

void sub_21578E9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21578EA18(uint64_t result)
{
  return result;
}

uint64_t sub_21578EA28(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 128), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21578EA64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C2E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C2E0))
  {
    return qword_26788C2D8;
  }
  qword_26788C2D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C2E0);
  return qword_26788C2D8;
}

uint64_t sub_21578EAC8(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658220, 0);
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  int v5 = *(unsigned __int8 *)(result + 64);
  if (*(unsigned char *)(a1 + 64)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if ((*(unsigned char *)(a1 + 64) != 0) != (v5 != 0)) {
      return 0;
    }
  }
  else if (!sub_215AE9F88(a1 + 16, result + 16))
  {
    return 0;
  }
  char v7 = (*(unsigned char *)(a1 + 80) != 0) ^ (*(unsigned char *)(v4 + 80) != 0);
  if (!*(unsigned char *)(a1 + 80)
    || !*(unsigned char *)(v4 + 80)
    || (char v7 = (*(unsigned char *)(a1 + 76) != 0) ^ (*(unsigned char *)(v4 + 76) != 0), !*(unsigned char *)(a1 + 76))
    || !*(unsigned char *)(v4 + 76))
  {
    if ((v7 & 1) == 0) {
      goto LABEL_19;
    }
    return 0;
  }
  if (*(_DWORD *)(a1 + 72) != *(_DWORD *)(v4 + 72)) {
    return 0;
  }
LABEL_19:
  uint64_t result = (*(unsigned char *)(a1 + 120) != 0) == (*(unsigned char *)(v4 + 120) != 0);
  if (*(unsigned char *)(a1 + 120))
  {
    if (*(unsigned char *)(v4 + 120)) {
      return sub_215AE539C((unsigned __int8 *)(a1 + 88), (unsigned __int8 *)(v4 + 88));
    }
  }
  return result;
}

void sub_21578EC1C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_begin_catch(a1);
  uint64_t v15 = sub_215779F84();
  sub_215732BF4(&__p, "failed to compare equal");
  sub_2157402F0((std::string::size_type)v15, (const void **)&__p, 0);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21578EBD0);
}

void sub_21578EC68(uint64_t a1)
{
  sub_215779F84();
  uint64_t v2 = a1;
  operator new();
}

void sub_21578EFF8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v23 = sub_215779F84();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x21578EFDCLL);
}

uint64_t sub_21578F0C8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 128));
}

void *sub_21578F0D4(void *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 4))
  {
    std::to_string(&v6, *(_DWORD *)a2);
    if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v3 = &v6;
    }
    else {
      uint64_t v3 = (std::string *)v6.__r_.__value_.__r.__words[0];
    }
    if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v6.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v6.__r_.__value_.__l.__size_;
    }
    sub_215731D94(a1, (uint64_t)v3, size);
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v6.__r_.__value_.__l.__data_);
    }
    return a1;
  }
  else
  {
    sub_215731D94(a1, (uint64_t)"nullopt", 7);
    return a1;
  }
}

void sub_21578F184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21578F1A0(uint64_t a1)
{
  sub_2157940C4(*(char **)(a1 + 120));
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_21578F22C(uint64_t a1)
{
  sub_2157940C4(*(char **)(a1 + 112));
  std::mutex::~mutex((std::mutex *)(a1 + 40));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

void sub_21578F2B0(uint64_t a1)
{
  sub_2157940C4(*(char **)(a1 + 120));
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21578F34C(uint64_t a1)
{
  sub_2157940C4(*(char **)(a1 + 112));
  std::mutex::~mutex((std::mutex *)(a1 + 40));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t *sub_21578F3E8(uint64_t a1, const char *a2)
{
  uint64_t v71 = *MEMORY[0x263EF8340];
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = "";
  }
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (long long *)operator new(v7 + 1);
    *((void *)&__dst + 1) = v5;
    int64_t v55 = v8 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v55) = v4;
    p_dst = &__dst;
    if (!v4) {
      goto LABEL_12;
    }
  }
  memcpy(p_dst, v3, v5);
LABEL_12:
  *((unsigned char *)p_dst + v5) = 0;
  unint64_t v9 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  uint64_t v10 = (uint64_t **)(a1 + 120);
  unint64_t v11 = *(uint64_t ***)(a1 + 120);
  if (!v11) {
    goto LABEL_51;
  }
  if (v55 >= 0) {
    uint64_t v12 = &__dst;
  }
  else {
    uint64_t v12 = (long long *)__dst;
  }
  if (v55 >= 0) {
    size_t v13 = HIBYTE(v55);
  }
  else {
    size_t v13 = *((void *)&__dst + 1);
  }
  char v14 = (uint64_t **)(a1 + 120);
  do
  {
    while (1)
    {
      int v15 = *((char *)v11 + 55);
      char v16 = v15 >= 0 ? (uint64_t *)(v11 + 4) : v11[4];
      size_t v17 = v15 >= 0 ? *((unsigned __int8 *)v11 + 55) : (size_t)v11[5];
      size_t v18 = v13 >= v17 ? v17 : v13;
      int v19 = memcmp(v16, v12, v18);
      if (v19) {
        break;
      }
      if (v17 >= v13) {
        goto LABEL_34;
      }
LABEL_20:
      unint64_t v11 = (uint64_t **)v11[1];
      if (!v11) {
        goto LABEL_35;
      }
    }
    if (v19 < 0) {
      goto LABEL_20;
    }
LABEL_34:
    char v14 = v11;
    unint64_t v11 = (uint64_t **)*v11;
  }
  while (v11);
LABEL_35:
  if (v14 != v10)
  {
    int v20 = *((char *)v14 + 55);
    if (v20 >= 0) {
      char v21 = (uint64_t *)(v14 + 4);
    }
    else {
      char v21 = v14[4];
    }
    if (v20 >= 0) {
      size_t v22 = *((unsigned __int8 *)v14 + 55);
    }
    else {
      size_t v22 = (size_t)v14[5];
    }
    if (v22 >= v13) {
      size_t v23 = v13;
    }
    else {
      size_t v23 = v22;
    }
    int v24 = memcmp(v12, v21, v23);
    if (v24)
    {
      if ((v24 & 0x80000000) == 0) {
        goto LABEL_47;
      }
    }
    else if (v13 >= v22)
    {
LABEL_47:
      uint64_t v25 = v14[7];
      std::mutex::unlock(v9);
      if (SHIBYTE(v55) < 0) {
        goto LABEL_48;
      }
      return v25;
    }
  }
LABEL_51:
  sub_21594A01C((uint64_t *)(a1 + 16), &v51);
  char v27 = operator new(0x38uLL, MEMORY[0x263F8C180]);
  if (!v27)
  {
    sub_215794170();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C330, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788C330))
    {
      sub_215794368();
      if (byte_26788C46F < 0)
      {
        sub_215738B0C(&xmmword_26788C428, (void *)xmmword_26788C458, *((unint64_t *)&xmmword_26788C458 + 1));
      }
      else
      {
        xmmword_26788C428 = xmmword_26788C458;
        unk_26788C438 = unk_26788C468;
      }
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C428, &dword_21572C000);
      __cxa_guard_release(&qword_26788C330);
    }
    if (byte_26788C43F < 0)
    {
      sub_215738B0C(&v69, (void *)xmmword_26788C428, *((unint64_t *)&xmmword_26788C428 + 1));
    }
    else
    {
      long long v69 = xmmword_26788C428;
      uint64_t v70 = unk_26788C438;
    }
    sub_21573A150(&v67, (uint64_t)&v69, 1uLL);
    v56[0] = 0;
    char v66 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788C3E0, (uint64_t *)&v67, (uint64_t)v56, 0);
    if (v66 && v65)
    {
      if (v64)
      {
        if (v63 < 0) {
          operator delete(__p);
        }
        if (v61 < 0) {
          operator delete(v60);
        }
      }
      if (v59 && v58 < 0) {
        operator delete(v57);
      }
    }
    uint64_t v47 = (uint64_t)v67;
    if (v67)
    {
      uint64_t v48 = v68;
      timespec v49 = v67;
      if ((void *)v68 != v67)
      {
        do
        {
          if (*(char *)(v48 - 1) < 0) {
            operator delete(*(void **)(v48 - 24));
          }
          v48 -= 24;
        }
        while (v48 != v47);
        timespec v49 = v67;
      }
      uint64_t v68 = v47;
      operator delete(v49);
    }
    if (SHIBYTE(v70) < 0)
    {
      operator delete((void *)v69);
      long long v50 = (std::__shared_weak_count *)*((void *)&v53 + 1);
      uint64_t v51 = &unk_26C6724C8;
      if (!*((void *)&v53 + 1)) {
        goto LABEL_115;
      }
    }
    else
    {
      long long v50 = (std::__shared_weak_count *)*((void *)&v53 + 1);
      uint64_t v51 = &unk_26C6724C8;
      if (!*((void *)&v53 + 1)) {
        goto LABEL_115;
      }
    }
    if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
      uint64_t v25 = 0;
      std::mutex::unlock(v9);
      if ((SHIBYTE(v55) & 0x80000000) == 0) {
        return v25;
      }
      goto LABEL_48;
    }
LABEL_115:
    uint64_t v25 = 0;
    std::mutex::unlock(v9);
    if ((SHIBYTE(v55) & 0x80000000) == 0) {
      return v25;
    }
    goto LABEL_48;
  }
  long long v28 = v27;
  long long v29 = v53;
  v27[1] = v52;
  v27[2] = v29;
  *((_DWORD *)v27 + 12) = 1;
  *(void *)char v27 = &unk_26C658398;
  *((void *)v27 + 1) = &unk_26C6583E8;
  uint64_t v30 = *v10;
  char v31 = (uint64_t **)(a1 + 120);
  if (!*v10)
  {
LABEL_79:
    size_t v43 = operator new(0x40uLL);
    unint64_t v44 = v43 + 4;
    if (SHIBYTE(v55) < 0)
    {
      sub_215738B0C(v44, (void *)__dst, *((unint64_t *)&__dst + 1));
    }
    else
    {
      *(_OWORD *)unint64_t v44 = __dst;
      v43[6] = v55;
    }
    v43[7] = v28;
    void *v43 = 0;
    v43[1] = 0;
    v43[2] = v31;
    *uint64_t v10 = v43;
    uint64_t v45 = **(void **)(a1 + 112);
    uint64_t v46 = v43;
    if (v45)
    {
      *(void *)(a1 + 112) = v45;
      uint64_t v46 = *v10;
    }
    sub_21573B048(*(uint64_t **)(a1 + 120), v46);
    ++*(void *)(a1 + 128);
    uint64_t v25 = (uint64_t *)v43[7];
    std::mutex::unlock(v9);
    if ((SHIBYTE(v55) & 0x80000000) == 0) {
      return v25;
    }
LABEL_48:
    operator delete((void *)__dst);
    return v25;
  }
  if (v55 >= 0) {
    long long v32 = &__dst;
  }
  else {
    long long v32 = (long long *)__dst;
  }
  if (v55 >= 0) {
    unint64_t v33 = HIBYTE(v55);
  }
  else {
    unint64_t v33 = *((void *)&__dst + 1);
  }
  while (1)
  {
    while (1)
    {
      char v31 = (uint64_t **)v30;
      uint64_t v36 = v30[4];
      uint64_t v34 = v30 + 4;
      char v35 = (uint64_t *)v36;
      int v37 = *((char *)v34 + 23);
      char v38 = v37 >= 0 ? v34 : v35;
      unint64_t v39 = v37 >= 0 ? *((unsigned __int8 *)v34 + 23) : v34[1];
      size_t v40 = v39 >= v33 ? v33 : v39;
      int v41 = memcmp(v32, v38, v40);
      if (v41) {
        break;
      }
      if (v33 >= v39) {
        goto LABEL_73;
      }
LABEL_59:
      uint64_t v30 = *v31;
      uint64_t v10 = v31;
      if (!*v31) {
        goto LABEL_79;
      }
    }
    if (v41 < 0) {
      goto LABEL_59;
    }
LABEL_73:
    int v42 = memcmp(v38, v32, v40);
    if (!v42) {
      break;
    }
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_89;
    }
LABEL_77:
    uint64_t v30 = v31[1];
    if (!v30)
    {
      uint64_t v10 = v31 + 1;
      goto LABEL_79;
    }
  }
  if (v39 < v33) {
    goto LABEL_77;
  }
LABEL_89:
  (*(void (**)(_OWORD *))(*(void *)v28 + 24))(v28);
  uint64_t v25 = v31[7];
  std::mutex::unlock(v9);
  if (SHIBYTE(v55) < 0) {
    goto LABEL_48;
  }
  return v25;
}

void sub_21578FA48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788C330);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21578FAEC(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)(result + 8) = &unk_26C6724C8;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 40);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21578FB88(void *a1)
{
  *a1 = &unk_26C6724C8;
  uint64_t v1 = (std::__shared_weak_count *)a1[4];
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21578FC14(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_26C6724C8;
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21578FCC0(void *a1)
{
  *a1 = &unk_26C6724C8;
  uint64_t v1 = (std::__shared_weak_count *)a1[4];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZLoggerGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C350, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C350))
  {
    return qword_26788C348;
  }
  qword_26788C348 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C350);
  return qword_26788C348;
}

char *VZLoggerCreateWithNamespace(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (char *)a1;
  if (sub_2157569A8((uint64_t)"VZLoggerCreateWithNamespace", a1, a2)) {
    return 0;
  }
  long long v32 = &v33;
  uint64_t v33 = a2;
  LOBYTE(v19) = 0;
  char v20 = 0;
  sub_215948A3C(v3, &v19, (uint64_t)&v21);
  if (v20)
  {
    *(void *)&long long v8 = &v19;
    sub_21576B254((void ***)&v8);
  }
  int v4 = v31;
  if (v31)
  {
    sub_215794948((uint64_t)&v21);
    size_t v5 = (char *)operator new(0x88uLL, MEMORY[0x263F8C180]);
    if (v5)
    {
      uint64_t v3 = v5;
      *((_OWORD *)v5 + 1) = v21;
      long long v21 = 0uLL;
      *((void *)v5 + 4) = v22;
      *((_DWORD *)v5 + 10) = 1;
      *(void *)size_t v5 = &unk_26C6582A0;
      *((void *)v5 + 1) = &unk_26C6582F0;
      *((void *)v5 + 6) = 850045863;
      *(_OWORD *)(v5 + 56) = 0u;
      *(_OWORD *)(v5 + 72) = 0u;
      *(_OWORD *)(v5 + 88) = 0u;
      *((void *)v5 + 16) = 0;
      *((void *)v5 + 15) = 0;
      *((void *)v5 + 13) = 0;
      *((void *)v5 + 14) = v5 + 120;
      goto LABEL_28;
    }
    LOBYTE(v8) = 0;
    char v18 = 0;
    sub_2157946FC(&v32, (uint64_t)&v8);
    if (!v18 || !v17) {
      goto LABEL_27;
    }
    if (v16)
    {
      if (v15 < 0) {
        operator delete(__p);
      }
      if (v13 < 0) {
        operator delete(v12);
      }
    }
    uint64_t v3 = 0;
    if (v11 && v10 < 0)
    {
      operator delete(v9);
LABEL_27:
      uint64_t v3 = 0;
    }
  }
  else
  {
    long long v8 = v21;
    sub_215741BFC(&v9, &v22);
    char v18 = 1;
    sub_2157946FC(&v32, (uint64_t)&v8);
    if (v18 && v17)
    {
      if (v16)
      {
        if (v15 < 0) {
          operator delete(__p);
        }
        if (v13 < 0) {
          operator delete(v12);
        }
      }
      if (v11 && v10 < 0) {
        operator delete(v9);
      }
    }
  }
LABEL_28:
  if (v31)
  {
    std::string v6 = (std::__shared_weak_count *)*((void *)&v21 + 1);
    if (*((void *)&v21 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v21 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (!v4) {
        return 0;
      }
      return v3;
    }
  }
  else if (v30)
  {
    if (v29)
    {
      if (v28 < 0) {
        operator delete(v27);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
    }
    if (v24 && v23 < 0) {
      operator delete((void *)v22);
    }
  }
  if (!v4) {
    return 0;
  }
  return v3;
}

void sub_2157900AC(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v71 - 72))
  {
    uint64_t v74 = *(std::__shared_weak_count **)(v71 - 184);
    if (v74 && !atomic_fetch_add(&v74->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
      std::__shared_weak_count::__release_weak(v74);
    }
  }
  else if (*(unsigned char *)(v71 - 80))
  {
    if (*(unsigned char *)(v71 - 88))
    {
      if (*(char *)(v71 - 89) < 0) {
        operator delete(*(void **)(v71 - 112));
      }
      if (*(char *)(v71 - 121) < 0) {
        operator delete(*(void **)(v71 - 144));
      }
    }
    if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
      operator delete(*(void **)(v71 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    long long v76 = std::logic_error::what(&a10);
    size_t v77 = strlen(v76);
    if (v77 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v78 = (const char *)v77;
      if (v77 >= 0x17)
      {
        uint64_t v87 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v77 | 7) != 0x17) {
          uint64_t v87 = v77 | 7;
        }
        uint64_t v88 = v87 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v87 + 1);
        __dst.__imp_.__imp_ = v78;
        *(void *)&a37 = v88 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v77;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v77)
        {
LABEL_53:
          v78[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a71 = a13;
          sub_215741BFC((unsigned char *)(v71 - 176), &a14);
          *(unsigned char *)(v71 - 72) = 1;
          sub_2157946FC((uint64_t **)(v71 - 64), v71 - 192);
          if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
          {
            if (*(unsigned char *)(v71 - 88))
            {
              if (*(char *)(v71 - 89) < 0) {
                operator delete(*(void **)(v71 - 112));
              }
              if (*(char *)(v71 - 121) < 0) {
                operator delete(*(void **)(v71 - 144));
              }
            }
            if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
              operator delete(*(void **)(v71 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v76, (size_t)v78);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v71 - 192) = 0;
    *(unsigned char *)(v71 - 72) = 0;
    sub_2157946FC((uint64_t **)(v71 - 64), v71 - 192);
    if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
    {
      if (*(unsigned char *)(v71 - 88))
      {
        if (*(char *)(v71 - 89) < 0) {
          operator delete(*(void **)(v71 - 112));
        }
        if (*(char *)(v71 - 121) < 0) {
          operator delete(*(void **)(v71 - 144));
        }
      }
      if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
        operator delete(*(void **)(v71 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x21579008CLL);
  }
  uint64_t v80 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v80);
  a37 = *((_OWORD *)v80 + 1);
  uint64_t v82 = *((void *)v80 + 4);
  uint64_t v81 = *((void *)v80 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v82;
  a39 = v81;
  if (v81) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v81 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  char v83 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    char v83 = *(const char **)v83;
  }
  size_t v84 = strlen(v83);
  if (v84 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v85 = (const char *)v84;
  if (v84 >= 0x17)
  {
    uint64_t v89 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v84 | 7) != 0x17) {
      uint64_t v89 = v84 | 7;
    }
    uint64_t v90 = v89 + 1;
    uint64_t v86 = (std::logic_error_vtbl *)operator new(v89 + 1);
    a10.__imp_.__imp_ = v85;
    a11 = v90 | 0x8000000000000000;
    a10.__vftable = v86;
  }
  else
  {
    HIBYTE(a11) = v84;
    uint64_t v86 = (std::logic_error_vtbl *)&a10;
    if (!v84)
    {
LABEL_80:
      v85[(void)v86] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a71 = a13;
      sub_215741BFC((unsigned char *)(v71 - 176), &a14);
      *(unsigned char *)(v71 - 72) = 1;
      sub_2157946FC((uint64_t **)(v71 - 64), v71 - 192);
      if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
      {
        if (*(unsigned char *)(v71 - 88))
        {
          if (*(char *)(v71 - 89) < 0) {
            operator delete(*(void **)(v71 - 112));
          }
          if (*(char *)(v71 - 121) < 0) {
            operator delete(*(void **)(v71 - 144));
          }
        }
        if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
          operator delete(*(void **)(v71 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v86, v83, (size_t)v85);
  goto LABEL_80;
}

uint64_t VZLoggerCreateWithDestinations(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  if (!sub_215769D3C((uint64_t)"VZLoggerCreateWithDestinations", a1, a2))
  {
    sub_215793FD0(&v10, (uint64_t *)(a1 + 16));
    int v4 = operator new(0x88uLL, MEMORY[0x263F8C180]);
    if (v4)
    {
      *int v4 = &unk_26C6565D0;
      long long v26 = v10;
      uint64_t v27 = v11;
      long long v10 = 0uLL;
      uint64_t v11 = 0;
      char v28 = 1;
      LOBYTE(v24) = 0;
      char v25 = 0;
      sub_215948318((uint64_t)(v4 + 2), (uint64_t)&v26, (uint64_t)&v24);
    }
    size_t v5 = (uint64_t *)sub_215753ECC();
    sub_215794A14();
    if (byte_26788C487 < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788C470, *((unint64_t *)&xmmword_26788C470 + 1));
    }
    else
    {
      long long __dst = xmmword_26788C470;
      uint64_t v30 = unk_26788C480;
    }
    sub_21573A150(&v22, (uint64_t)&__dst, 1uLL);
    LOBYTE(v12[0]) = 0;
    char v21 = 0;
    sub_21574086C(v5, (uint64_t *)&v22, (uint64_t)v12, a2);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0) {
          operator delete(__p);
        }
        if (v16 < 0) {
          operator delete(v15);
        }
      }
      if (v14 && v13 < 0) {
        operator delete(v12[2]);
      }
    }
    std::string v6 = (void **)v22;
    if (v22)
    {
      uint64_t v7 = v23;
      long long v8 = v22;
      if (v23 != v22)
      {
        do
        {
          if (*((char *)v7 - 1) < 0) {
            operator delete(*(v7 - 3));
          }
          v7 -= 3;
        }
        while (v7 != v6);
        long long v8 = v22;
      }
      char v23 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v30) < 0) {
      operator delete((void *)__dst);
    }
    v12[0] = (void **)&v10;
    sub_21576B254(v12);
  }
  return 0;
}

void sub_215790954(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x215790964);
  }
  sub_215731D80(a1);
}

char *VZLoggerCreateWithNamespaceAndDestinations(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v5 = (char *)a1;
  if (sub_2157569A8((uint64_t)"VZLoggerCreateWithNamespaceAndDestinations", a1, a3)
    || sub_215769D3C((uint64_t)"VZLoggerCreateWithNamespaceAndDestinations", a2, a3))
  {
    return 0;
  }
  uint64_t v34 = &v35;
  uint64_t v35 = a3;
  sub_215793FD0(&v21, (uint64_t *)(a2 + 16));
  char v22 = 1;
  sub_215948A3C(v5, &v21, (uint64_t)&v23);
  if (v22)
  {
    *(void *)&long long v10 = &v21;
    sub_21576B254((void ***)&v10);
  }
  int v6 = v33;
  if (v33)
  {
    sub_215794948((uint64_t)&v23);
    uint64_t v7 = (char *)operator new(0x88uLL, MEMORY[0x263F8C180]);
    if (v7)
    {
      size_t v5 = v7;
      *((_OWORD *)v7 + 1) = v23;
      long long v23 = 0uLL;
      *((void *)v7 + 4) = v24;
      *((_DWORD *)v7 + 10) = 1;
      *(void *)uint64_t v7 = &unk_26C6582A0;
      *((void *)v7 + 1) = &unk_26C6582F0;
      *((void *)v7 + 6) = 850045863;
      *(_OWORD *)(v7 + 56) = 0u;
      *(_OWORD *)(v7 + 72) = 0u;
      *(_OWORD *)(v7 + 88) = 0u;
      *((void *)v7 + 16) = 0;
      *((void *)v7 + 15) = 0;
      *((void *)v7 + 13) = 0;
      *((void *)v7 + 14) = v7 + 120;
      goto LABEL_29;
    }
    LOBYTE(v10) = 0;
    char v20 = 0;
    sub_215794C0C(&v34, (uint64_t)&v10);
    if (!v20 || !v19) {
      goto LABEL_28;
    }
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    size_t v5 = 0;
    if (v13 && v12 < 0)
    {
      operator delete(v11);
LABEL_28:
      size_t v5 = 0;
    }
  }
  else
  {
    long long v10 = v23;
    sub_215741BFC(&v11, &v24);
    char v20 = 1;
    sub_215794C0C(&v34, (uint64_t)&v10);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0) {
          operator delete(__p);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
      }
      if (v13 && v12 < 0) {
        operator delete(v11);
      }
    }
  }
LABEL_29:
  if (v33)
  {
    long long v8 = (std::__shared_weak_count *)*((void *)&v23 + 1);
    if (*((void *)&v23 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v23 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if (!v6) {
        return 0;
      }
      return v5;
    }
  }
  else if (v32)
  {
    if (v31)
    {
      if (v30 < 0) {
        operator delete(v29);
      }
      if (v28 < 0) {
        operator delete(v27);
      }
    }
    if (v26 && v25 < 0) {
      operator delete((void *)v24);
    }
  }
  if (!v6) {
    return 0;
  }
  return v5;
}

void sub_215790C74(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v71 - 72))
  {
    uint64_t v74 = *(std::__shared_weak_count **)(v71 - 184);
    if (v74 && !atomic_fetch_add(&v74->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
      std::__shared_weak_count::__release_weak(v74);
    }
  }
  else if (*(unsigned char *)(v71 - 80))
  {
    if (*(unsigned char *)(v71 - 88))
    {
      if (*(char *)(v71 - 89) < 0) {
        operator delete(*(void **)(v71 - 112));
      }
      if (*(char *)(v71 - 121) < 0) {
        operator delete(*(void **)(v71 - 144));
      }
    }
    if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
      operator delete(*(void **)(v71 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    long long v76 = std::logic_error::what(&a10);
    size_t v77 = strlen(v76);
    if (v77 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v78 = (const char *)v77;
      if (v77 >= 0x17)
      {
        uint64_t v87 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v77 | 7) != 0x17) {
          uint64_t v87 = v77 | 7;
        }
        uint64_t v88 = v87 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v87 + 1);
        __dst.__imp_.__imp_ = v78;
        *(void *)&a37 = v88 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v77;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v77)
        {
LABEL_53:
          v78[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a71 = a13;
          sub_215741BFC((unsigned char *)(v71 - 176), &a14);
          *(unsigned char *)(v71 - 72) = 1;
          sub_215794C0C((uint64_t **)(v71 - 64), v71 - 192);
          if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
          {
            if (*(unsigned char *)(v71 - 88))
            {
              if (*(char *)(v71 - 89) < 0) {
                operator delete(*(void **)(v71 - 112));
              }
              if (*(char *)(v71 - 121) < 0) {
                operator delete(*(void **)(v71 - 144));
              }
            }
            if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
              operator delete(*(void **)(v71 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v76, (size_t)v78);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v71 - 192) = 0;
    *(unsigned char *)(v71 - 72) = 0;
    sub_215794C0C((uint64_t **)(v71 - 64), v71 - 192);
    if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
    {
      if (*(unsigned char *)(v71 - 88))
      {
        if (*(char *)(v71 - 89) < 0) {
          operator delete(*(void **)(v71 - 112));
        }
        if (*(char *)(v71 - 121) < 0) {
          operator delete(*(void **)(v71 - 144));
        }
      }
      if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
        operator delete(*(void **)(v71 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215790C54);
  }
  uint64_t v80 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v80);
  a37 = *((_OWORD *)v80 + 1);
  uint64_t v82 = *((void *)v80 + 4);
  uint64_t v81 = *((void *)v80 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v82;
  a39 = v81;
  if (v81) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v81 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  char v83 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    char v83 = *(const char **)v83;
  }
  size_t v84 = strlen(v83);
  if (v84 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v85 = (const char *)v84;
  if (v84 >= 0x17)
  {
    uint64_t v89 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v84 | 7) != 0x17) {
      uint64_t v89 = v84 | 7;
    }
    uint64_t v90 = v89 + 1;
    uint64_t v86 = (std::logic_error_vtbl *)operator new(v89 + 1);
    a10.__imp_.__imp_ = v85;
    a11 = v90 | 0x8000000000000000;
    a10.__vftable = v86;
  }
  else
  {
    HIBYTE(a11) = v84;
    uint64_t v86 = (std::logic_error_vtbl *)&a10;
    if (!v84)
    {
LABEL_80:
      v85[(void)v86] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a71 = a13;
      sub_215741BFC((unsigned char *)(v71 - 176), &a14);
      *(unsigned char *)(v71 - 72) = 1;
      sub_215794C0C((uint64_t **)(v71 - 64), v71 - 192);
      if (*(unsigned char *)(v71 - 72) && *(unsigned char *)(v71 - 80))
      {
        if (*(unsigned char *)(v71 - 88))
        {
          if (*(char *)(v71 - 89) < 0) {
            operator delete(*(void **)(v71 - 112));
          }
          if (*(char *)(v71 - 121) < 0) {
            operator delete(*(void **)(v71 - 144));
          }
        }
        if (*(unsigned char *)(v71 - 152) && *(char *)(v71 - 153) < 0) {
          operator delete(*(void **)(v71 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v86, v83, (size_t)v85);
  goto LABEL_80;
}

uint64_t VZLoggerCreateWithFileExporter(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (!sub_2157569A8((uint64_t)"VZLoggerCreateWithFileExporter", (uint64_t)a1, a3))
  {
    __p[32] = &v11;
    uint64_t v11 = a3;
    if (a2) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = 0;
    }
    memset(__p, 0, 24);
    uint64_t v7 = a1 - 1;
    while (*++v7)
      ;
    sub_21577D738((unint64_t)__p, a1, v7);
    v12[0] = &unk_26C656CE8;
    v12[1] = sub_2157511D8;
    v12[3] = v12;
    char v13 = 1;
    sub_215948D60((uint64_t)__p, v6, a2 != 0, (uint64_t)v12, 0, 0);
  }
  return 0;
}

void sub_2157915F0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 120))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 232);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 128))
  {
    if (*(unsigned char *)(v67 - 136))
    {
      if (*(char *)(v67 - 137) < 0) {
        operator delete(*(void **)(v67 - 160));
      }
      if (*(char *)(v67 - 169) < 0) {
        operator delete(*(void **)(v67 - 192));
      }
    }
    if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
      operator delete(*(void **)(v67 - 224));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_54:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 224), &a14);
          *(unsigned char *)(v67 - 120) = 1;
          sub_215795238((uint64_t **)(v67 - 112), v67 - 240);
          if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
          {
            if (*(unsigned char *)(v67 - 136))
            {
              if (*(char *)(v67 - 137) < 0) {
                operator delete(*(void **)(v67 - 160));
              }
              if (*(char *)(v67 - 169) < 0) {
                operator delete(*(void **)(v67 - 192));
              }
            }
            if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
              operator delete(*(void **)(v67 - 224));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_106;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_54;
    }
LABEL_104:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 240) = 0;
    *(unsigned char *)(v67 - 120) = 0;
    sub_215795238((uint64_t **)(v67 - 112), v67 - 240);
    if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
    {
      if (*(unsigned char *)(v67 - 136))
      {
        if (*(char *)(v67 - 137) < 0) {
          operator delete(*(void **)(v67 - 160));
        }
        if (*(char *)(v67 - 169) < 0) {
          operator delete(*(void **)(v67 - 192));
        }
      }
      if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
        operator delete(*(void **)(v67 - 224));
      }
    }
    __cxa_end_catch();
LABEL_106:
    JUMPOUT(0x2157915B4);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  long long v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    long long v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_104;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_81:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 224), &a14);
      *(unsigned char *)(v67 - 120) = 1;
      sub_215795238((uint64_t **)(v67 - 112), v67 - 240);
      if (*(unsigned char *)(v67 - 120) && *(unsigned char *)(v67 - 128))
      {
        if (*(unsigned char *)(v67 - 136))
        {
          if (*(char *)(v67 - 137) < 0) {
            operator delete(*(void **)(v67 - 160));
          }
          if (*(char *)(v67 - 169) < 0) {
            operator delete(*(void **)(v67 - 192));
          }
        }
        if (*(unsigned char *)(v67 - 200) && *(char *)(v67 - 201) < 0) {
          operator delete(*(void **)(v67 - 224));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_106;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_81;
}

uint64_t VZLoggerGetNamespace(uint64_t a1)
{
  if (sub_215791C74((uint64_t)"VZLoggerGetNamespace", a1)) {
    return 0;
  }
  uint64_t v3 = sub_215B2C7A4(*(void *)(a1 + 16));
  if (*(char *)(v3 + 23) >= 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = *(void *)v3;
  }
  if (*(unsigned char *)(v3 + 24)) {
    return v4;
  }
  else {
    return 0;
  }
}

BOOL sub_215791C74(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C3A8))
  {
    sub_215795910();
    int v5 = byte_26788C58F;
    if (byte_26788C58F >= 0) {
      size_t v6 = byte_26788C58F;
    }
    else {
      size_t v6 = qword_26788C580;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      long long v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788C560 + 1) = v6 + 1;
      unk_26788C570 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788C560 = v8;
    }
    else
    {
      unk_26788C570 = 0;
      xmmword_26788C560 = 0uLL;
      long long v8 = &xmmword_26788C560;
      byte_26788C577 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C560, &dword_21572C000);
        __cxa_guard_release(&qword_26788C3A8);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      uint64_t v11 = &qword_26788C578;
    }
    else {
      uint64_t v11 = (uint64_t *)qword_26788C578;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C577 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788C560, *((unint64_t *)&xmmword_26788C560 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788C560;
    uint64_t v13 = unk_26788C570;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215791FA4(_Unwind_Exception *a1)
{
}

void sub_215791FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZLoggerAddDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157500C8((uint64_t)"VZLoggerAddDestination", a1, a3)
    && !sub_215769AB8((uint64_t)"VZLoggerAddDestination", a2, a3))
  {
    sub_215949730((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16), (uint64_t)&v6);
    if (!v16)
    {
      sub_21573E208(&v6, a3);
      if (!v16)
      {
        if (v15)
        {
          if (v14)
          {
            if (v13 < 0) {
              operator delete(__p);
            }
            if (v11 < 0) {
              operator delete(v10);
            }
          }
          if (v9)
          {
            if (v8 < 0) {
              operator delete(v7);
            }
          }
        }
      }
    }
  }
}

void sub_2157920E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZLoggerRemoveDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157500C8((uint64_t)"VZLoggerRemoveDestination", a1, a3)
    && !sub_215769AB8((uint64_t)"VZLoggerRemoveDestination", a2, a3))
  {
    sub_215949974((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16), (uint64_t)&v6);
    if (!v16)
    {
      sub_21573E208(&v6, a3);
      if (!v16)
      {
        if (v15)
        {
          if (v14)
          {
            if (v13 < 0) {
              operator delete(__p);
            }
            if (v11 < 0) {
              operator delete(v10);
            }
          }
          if (v9)
          {
            if (v8 < 0) {
              operator delete(v7);
            }
          }
        }
      }
    }
  }
}

void sub_2157921E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_OWORD *VZLoggerCopyDestinationReferences(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  if (sub_215791C74((uint64_t)"VZLoggerCopyDestinationReferences", a1)) {
    return 0;
  }
  sub_215949B3C((uint64_t *)(a1 + 16), &v9);
  uint64_t v3 = operator new(0x48uLL, MEMORY[0x263F8C180]);
  if (v3)
  {
    uint64_t v2 = v3;
    v3[1] = v9;
    *((void *)v3 + 4) = v10;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    *((_DWORD *)v3 + 10) = 1;
    *(void *)uint64_t v3 = &unk_26C6572F0;
    *((void *)v3 + 1) = &unk_26C657340;
    *((void *)v3 + 8) = 0;
    *((void *)v3 + 7) = 0;
    *((void *)v3 + 6) = (char *)v3 + 56;
  }
  else
  {
    uint64_t v4 = (uint64_t *)sub_21576DF54();
    sub_215794A14();
    if (byte_26788C487 < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788C470, *((unint64_t *)&xmmword_26788C470 + 1));
    }
    else
    {
      long long __dst = xmmword_26788C470;
      uint64_t v24 = unk_26788C480;
    }
    sub_21573A150(&v21, (uint64_t)&__dst, 1uLL);
    LOBYTE(v11[0]) = 0;
    char v20 = 0;
    sub_21574086C(v4, (uint64_t *)&v21, (uint64_t)v11, 0);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0) {
          operator delete(__p);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
      }
      if (v13 && v12 < 0) {
        operator delete(v11[2]);
      }
    }
    uint64_t v5 = (uint64_t)v21;
    if (v21)
    {
      uint64_t v6 = v22;
      unint64_t v7 = v21;
      if ((void *)v22 != v21)
      {
        do
        {
          if (*(char *)(v6 - 1) < 0) {
            operator delete(*(void **)(v6 - 24));
          }
          v6 -= 24;
        }
        while (v6 != v5);
        unint64_t v7 = v21;
      }
      uint64_t v22 = v5;
      operator delete(v7);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__dst);
    }
    uint64_t v2 = 0;
  }
  v11[0] = (void **)&v9;
  sub_21576B254(v11);
  return v2;
}

void sub_215792440(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t VZSubLoggerGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C3C0))
  {
    return qword_26788C3B8;
  }
  qword_26788C3B8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C3C0);
  return qword_26788C3B8;
}

uint64_t *VZLoggerGetSubLogger(uint64_t a1, const char *a2)
{
  if (sub_215791C74((uint64_t)"VZLoggerGetSubLogger", a1)) {
    return 0;
  }

  return sub_21578F3E8(a1, a2);
}

uint64_t *VZLoggerGetSubLoggerMutable(uint64_t a1, const char *a2)
{
  if (sub_2157500C8((uint64_t)"VZLoggerGetSubLoggerMutable", a1, 0)) {
    return 0;
  }

  return sub_21578F3E8(a1, a2);
}

uint64_t VZLoggerEnabled(uint64_t a1, const char *a2)
{
  if (sub_215791C74((uint64_t)"VZLoggerEnabled", a1)) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (a2)
  {
    size_t v6 = strlen(a2);
  }
  else
  {
    size_t v6 = 0;
    a2 = "";
  }
  unint64_t v7 = *(uint64_t (**)(void))(*(void *)(*(uint64_t (**)(uint64_t, const char *, size_t))(*(void *)v5 + 64))(v5, a2, v6)+ 24);

  return v7();
}

BOOL VZSubLoggerEnabled(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)atomic_load(*(unint64_t **)(a1 + 24));
  return *v1 == 1;
}

uint64_t VZLoggerGetEnableState(uint64_t a1, const char *a2)
{
  if (sub_215791C74((uint64_t)"VZLoggerGetEnableState", a1)) {
    return 2;
  }

  return sub_21594A1EC((uint64_t *)(a1 + 16), a2);
}

uint64_t VZSubLoggerGetEnableState(uint64_t a1)
{
  if (sub_21579272C((uint64_t)"VZSubLoggerGetEnableState", a1)) {
    return 2;
  }
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 32);

  return v3();
}

BOOL sub_21579272C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C3C8))
  {
    sub_215795AA4();
    int v5 = byte_26788C5BF;
    if (byte_26788C5BF >= 0) {
      size_t v6 = byte_26788C5BF;
    }
    else {
      size_t v6 = qword_26788C5B0;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      char v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788C590 + 1) = v6 + 1;
      unk_26788C5A0 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788C590 = v8;
    }
    else
    {
      unk_26788C5A0 = 0;
      xmmword_26788C590 = 0uLL;
      char v8 = &xmmword_26788C590;
      byte_26788C5A7 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C590, &dword_21572C000);
        __cxa_guard_release(&qword_26788C3C8);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &qword_26788C5A8;
    }
    else {
      char v11 = (uint64_t *)qword_26788C5A8;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C5A7 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788C590, *((unint64_t *)&xmmword_26788C590 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788C590;
    uint64_t v13 = unk_26788C5A0;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_215792A5C(_Unwind_Exception *a1)
{
}

void sub_215792A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZLoggerEnable(uint64_t a1, const char *a2)
{
  if (!sub_2157500C8((uint64_t)"VZLoggerEnable", a1, 0))
  {
    sub_21594A350((uint64_t *)(a1 + 16), a2);
  }
}

uint64_t VZSubLoggerEnable(uint64_t a1)
{
  uint64_t result = sub_215792B8C((uint64_t)"VZSubLoggerEnable", a1, 0);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 40);
    return v3();
  }
  return result;
}

BOOL sub_215792B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C3D8))
  {
    sub_215794170();
    int v7 = byte_26788C3F7;
    if (byte_26788C3F7 >= 0) {
      size_t v8 = byte_26788C3F7;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788C3E0 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C5C0 + 1) = v8 + 1;
      unk_26788C5D0 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C5C0 = v10;
    }
    else
    {
      unk_26788C5D0 = 0;
      xmmword_26788C5C0 = 0uLL;
      uint64_t v10 = &xmmword_26788C5C0;
      byte_26788C5D7 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C5C0, &dword_21572C000);
        __cxa_guard_release(&qword_26788C3D8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      uint64_t v13 = &xmmword_26788C3E0;
    }
    else {
      uint64_t v13 = (long long *)xmmword_26788C3E0;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C5D7 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C5C0, *((unint64_t *)&xmmword_26788C5C0 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C5C0;
    uint64_t v15 = unk_26788C5D0;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215792EC0(_Unwind_Exception *a1)
{
}

void sub_215792ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZLoggerDisable(uint64_t a1, const char *a2)
{
  if (!sub_2157500C8((uint64_t)"VZLoggerDisable", a1, 0))
  {
    sub_21594A4C8((uint64_t *)(a1 + 16), a2);
  }
}

uint64_t VZSubLoggerDisable(uint64_t a1)
{
  uint64_t result = sub_215792B8C((uint64_t)"VZSubLoggerDisable", a1, 0);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 40);
    return v3();
  }
  return result;
}

BOOL VZLoggerSetEnableState(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (sub_2157500C8((uint64_t)"VZLoggerSetEnableState", a1, a4)) {
    return 0;
  }
  sub_21594A640(a1 + 16, a3, a2, (uint64_t)&v10);
  BOOL v8 = v20 != 0;
  if (v20) {
    return v8;
  }
  sub_21573E208(&v10, a4);
  if (v20 || !v19) {
    return v8;
  }
  if (v18)
  {
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v15 < 0) {
      operator delete(v14);
    }
  }
  if (!v13 || (v12 & 0x80000000) == 0) {
    return v8;
  }
  operator delete(v11);
  return v8;
}

void sub_2157930E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZLoggerSetEnableStates(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2157500C8((uint64_t)"VZLoggerSetEnableStates", a1, 0);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_215773008((uint64_t)"VZLoggerSetEnableStates", a2, 0);
    if ((result & 1) == 0)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      return sub_215B2BF94(v5);
    }
  }
  return result;
}

BOOL VZSubLoggerSetEnableState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_215792B8C((uint64_t)"VZSubLoggerSetEnableState", a1, a3)) {
    return 0;
  }
  sub_21594B0D0(a1 + 8, a2, (uint64_t)&v8);
  BOOL v6 = v18 != 0;
  if (v18) {
    return v6;
  }
  sub_21573E208(&v8, a3);
  if (v18 || !v17) {
    return v6;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  if (!v11 || (v10 & 0x80000000) == 0) {
    return v6;
  }
  operator delete(v9);
  return v6;
}

void sub_215793258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZLoggerResetEnableStates(uint64_t a1)
{
  if (!sub_2157500C8((uint64_t)"VZLoggerResetEnableStates", a1, 0))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    sub_215B2BF0C(v2);
  }
}

uint64_t VZLoggerGet()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C310, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C310))
  {
    return qword_26788C308;
  }
  qword_26788C308 = VZLoggerCreate_0();
  __cxa_atexit((void (*)(void *))sub_2157933E4, &qword_26788C308, &dword_21572C000);
  __cxa_guard_release(&qword_26788C310);
  return qword_26788C308;
}

uint64_t VZLoggerGetMutable()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C310, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C310))
  {
    return qword_26788C308;
  }
  qword_26788C308 = VZLoggerCreate_0();
  __cxa_atexit((void (*)(void *))sub_2157933E4, &qword_26788C308, &dword_21572C000);
  __cxa_guard_release(&qword_26788C310);
  return qword_26788C308;
}

uint64_t *sub_2157933E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  return a1;
}

void VZLoggerLogData(uint64_t a1, const char *a2, uint64_t a3)
{
  if (!sub_215791C74((uint64_t)"VZLoggerLogData", a1) && !sub_2157456B0((uint64_t)"VZLoggerLogData", a3, 0))
  {
    sub_21594ABEC((uint64_t *)(a1 + 16), a2, a3 + 32);
  }
}

void VZSubLoggerLogData(uint64_t a1, uint64_t a2)
{
  if (!sub_21579272C((uint64_t)"VZSubLoggerLogData", a1) && !sub_2157456B0((uint64_t)"VZSubLoggerLogData", a2, 0))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a2 + 456);
    BOOL v6 = *(std::__shared_weak_count **)(a2 + 464);
    v9[0] = &unk_26C678D20;
    v9[1] = v7;
    char v10 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_21594B3F4(v4, v5, (uint64_t)v9);
    long long v8 = v10;
    if (v10)
    {
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
}

void sub_2157935B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12)
  {
    if (!atomic_fetch_add(&a12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZLoggerSync(uint64_t a1, uint64_t a2)
{
  if (sub_2157500C8((uint64_t)"VZLoggerSync", a1, a2)) {
    return 0;
  }
  sub_21594AD74((uint64_t *)(a1 + 16), (uint64_t)v6);
  uint64_t v4 = sub_21574D0E8((uint64_t)"VZLoggerSync", v6, 0, a2);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_2157936E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157936F8(uint64_t result)
{
  return result;
}

uint64_t sub_215793708(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215793744()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C350, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C350))
  {
    return qword_26788C348;
  }
  qword_26788C348 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C350);
  return qword_26788C348;
}

BOOL sub_2157937A8(void *a1, void *lpsrc)
{
  uint64_t v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658338, 0);
  return v3 && v3 == a1;
}

void sub_21579381C(uint64_t a1)
{
  sub_215753ECC();
  uint64_t v2 = a1;
  operator new();
}

void sub_215793A78(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25)
{
  sub_215733368((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  char v26 = sub_215753ECC();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v26, (const void **)&__p, 0);
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x215793A5CLL);
}

uint64_t sub_215793B48(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

uint64_t sub_215793B54(uint64_t result)
{
  return result;
}

uint64_t sub_215793B64(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 48), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215793BA0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C3C0))
  {
    return qword_26788C3B8;
  }
  qword_26788C3B8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C3C0);
  return qword_26788C3B8;
}

void *sub_215793C04(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658410, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]);
  }
  return result;
}

void sub_215793C80(uint64_t a1)
{
  sub_215794170();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215793EE4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_215733368((uint64_t)&v38);
  if (v37 < 0) {
    operator delete((void *)v36[0]);
  }
  __cxa_begin_catch(a1);
  sub_215794170();
  sub_215732BF4(v36, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C3E0, v36, 0);
  if (v37 < 0) {
    operator delete((void *)v36[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_215793FC4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 48));
}

void *sub_215793FD0(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = v4 - *a2;
  if (v4 != *a2)
  {
    if (v5 < 0) {
      sub_215738AC0();
    }
    BOOL v6 = (char *)operator new(v4 - v3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[32 * (v5 >> 5)];
    do
    {
      uint64_t v8 = v3 + v7;
      char v9 = &v6[v7];
      *(void *)char v9 = *(void *)(v3 + v7);
      uint64_t v10 = *(void *)(v3 + v7 + 8);
      *((void *)v9 + 1) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      *((void *)v9 + 2) = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      *((void *)v9 + 3) = v11;
      if (v11) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 32;
    }
    while (v8 + 32 != v4);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2157940B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_2157940C4(char *a1)
{
  if (a1)
  {
    sub_2157940C4(*(void *)a1);
    sub_2157940C4(*((void *)a1 + 1));
    uint64_t v2 = *((void *)a1 + 7);
    *((void *)a1 + 7) = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    }
    if (a1[55] < 0)
    {
      operator delete(*((void **)a1 + 4));
      uint64_t v3 = a1;
    }
    else
    {
      uint64_t v3 = a1;
    }
    operator delete(v3);
  }
}

void sub_215794170()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C318, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C318))
  {
    sub_215794244();
    if (byte_26788C427 < 0)
    {
      sub_215738B0C(&xmmword_26788C3E0, (void *)xmmword_26788C410, *((unint64_t *)&xmmword_26788C410 + 1));
    }
    else
    {
      xmmword_26788C3E0 = xmmword_26788C410;
      unk_26788C3F0 = unk_26788C420;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C3E0, &dword_21572C000);
    __cxa_guard_release(&qword_26788C318);
  }
}

void sub_21579422C(_Unwind_Exception *a1)
{
}

void sub_215794244()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C320, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C320))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZSubLogger]", qword_26788C3F8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C3F8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C320);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C328, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C328))
  {
    sub_215E19DF4((uint64_t)qword_26788C3F8, (uint64_t)&xmmword_26788C410);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C410, &dword_21572C000);
    __cxa_guard_release(&qword_26788C328);
  }
}

void sub_215794338(_Unwind_Exception *a1)
{
}

void sub_215794350(_Unwind_Exception *a1)
{
}

void sub_215794368()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C338, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C338))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::SubLogger]", qword_26788C440);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C440, &dword_21572C000);
    __cxa_guard_release(&qword_26788C338);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C340))
  {
    sub_215E19DF4((uint64_t)qword_26788C440, (uint64_t)&xmmword_26788C458);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C458, &dword_21572C000);
    __cxa_guard_release(&qword_26788C340);
  }
}

void sub_21579445C(_Unwind_Exception *a1)
{
}

void sub_215794474(_Unwind_Exception *a1)
{
}

uint64_t VZLoggerCreate_0()
{
  int v0 = operator new(0x88uLL, MEMORY[0x263F8C180]);
  if (v0)
  {
    *(_OWORD *)int v0 = 0u;
    v0[16] = 0;
    *((_OWORD *)v0 + 6) = 0u;
    *((_OWORD *)v0 + 7) = 0u;
    *((_OWORD *)v0 + 4) = 0u;
    *((_OWORD *)v0 + 5) = 0u;
    *((_OWORD *)v0 + 2) = 0u;
    *((_OWORD *)v0 + 3) = 0u;
    *((_OWORD *)v0 + 1) = 0u;
    *int v0 = &unk_26C6565D0;
    v22[0] = 0;
    v22[24] = 0;
    LOBYTE(v20) = 0;
    char v21 = 0;
    sub_215948318((uint64_t)(v0 + 2), (uint64_t)v22, (uint64_t)&v20);
  }
  uint64_t v1 = (uint64_t *)sub_215753ECC();
  char v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  v6[0] = 0;
  char v16 = 0;
  sub_21574086C(v1, (uint64_t *)&v17, (uint64_t)v6, 0);
  if (v16 && v15)
  {
    if (v14)
    {
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete(v7);
    }
  }
  uint64_t v2 = (uint64_t)v17;
  if (v17)
  {
    uint64_t v3 = v18;
    uint64_t v4 = v17;
    if ((void *)v18 != v17)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0) {
          operator delete(*(void **)(v3 - 24));
        }
        v3 -= 24;
      }
      while (v3 != v2);
      uint64_t v4 = v17;
    }
    uint64_t v18 = v2;
    operator delete(v4);
  }
  return 0;
}

void sub_2157946FC(uint64_t **a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_215753ECC();
  uint64_t v5 = sub_21575C17C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v26 = v5[2];
    long long __dst = v6;
  }
  uint64_t v7 = sub_21577C0F0();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v27, (void *)*v7, v7[1]);
  }
  else
  {
    long long v8 = *(_OWORD *)v7;
    uint64_t v28 = v7[2];
    long long v27 = v8;
  }
  sub_21573A150(&v23, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v12, a2);
  sub_21574086C(v4, (uint64_t *)&v23, (uint64_t)v12, **a1);
  if (!v22 || !v21) {
    goto LABEL_15;
  }
  if (!v20) {
    goto LABEL_12;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v16);
    if (!v15) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v18);
  if (v17 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v15) {
    goto LABEL_15;
  }
LABEL_13:
  if (v14 < 0) {
    operator delete(__p);
  }
LABEL_15:
  uint64_t v9 = (uint64_t)v23;
  if (v23)
  {
    uint64_t v10 = v24;
    char v11 = v23;
    if ((void *)v24 != v23)
    {
      do
      {
        if (*(char *)(v10 - 1) < 0) {
          operator delete(*(void **)(v10 - 24));
        }
        v10 -= 24;
      }
      while (v10 != v9);
      char v11 = v23;
    }
    uint64_t v24 = v9;
    operator delete(v11);
  }
  if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v27);
  if (SHIBYTE(v26) < 0) {
    goto LABEL_27;
  }
}

void sub_2157948E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 120));
  if (*(char *)(v2 - 49) < 0) {
    operator delete(*(void **)(v2 - 72));
  }
  if (*(char *)(v2 - 73) < 0)
  {
    operator delete(*(void **)(v2 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215794948(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157949D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157949E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_215794A00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_215794A14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C358, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C358))
  {
    sub_215794AE8();
    if (byte_26788C4B7 < 0)
    {
      sub_215738B0C(&xmmword_26788C470, (void *)xmmword_26788C4A0, *((unint64_t *)&xmmword_26788C4A0 + 1));
    }
    else
    {
      xmmword_26788C470 = xmmword_26788C4A0;
      unk_26788C480 = unk_26788C4B0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C470, &dword_21572C000);
    __cxa_guard_release(&qword_26788C358);
  }
}

void sub_215794AD0(_Unwind_Exception *a1)
{
}

void sub_215794AE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C360, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C360))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::DestinationList]", qword_26788C488);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C488, &dword_21572C000);
    __cxa_guard_release(&qword_26788C360);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C368, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C368))
  {
    sub_215E19DF4((uint64_t)qword_26788C488, (uint64_t)&xmmword_26788C4A0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C4A0, &dword_21572C000);
    __cxa_guard_release(&qword_26788C368);
  }
}

void sub_215794BDC(_Unwind_Exception *a1)
{
}

void sub_215794BF4(_Unwind_Exception *a1)
{
}

void sub_215794C0C(uint64_t **a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_215753ECC();
  uint64_t v5 = sub_21575C17C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v33 = v5[2];
    long long __dst = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C370, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C370))
  {
    goto LABEL_5;
  }
  uint64_t v10 = sub_21576E594();
  char v11 = (const void **)v10;
  int v12 = *((char *)v10 + 23);
  if (v12 >= 0) {
    size_t v13 = *((unsigned __int8 *)v10 + 23);
  }
  else {
    size_t v13 = v10[1];
  }
  unint64_t v14 = v13 + 1;
  if (v13 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    char v15 = (long long *)operator new(v16 + 1);
    *((void *)&xmmword_26788C4B8 + 1) = v13 + 1;
    unk_26788C4C8 = v17 | 0x8000000000000000;
    *(void *)&xmmword_26788C4B8 = v15;
    goto LABEL_43;
  }
  char v15 = &xmmword_26788C4B8;
  unk_26788C4C8 = 0;
  xmmword_26788C4B8 = 0uLL;
  byte_26788C4CF = v13 + 1;
  if (v13)
  {
LABEL_43:
    if (v12 >= 0) {
      uint64_t v18 = v11;
    }
    else {
      uint64_t v18 = *v11;
    }
    memmove(v15, v18, v13);
  }
  *(_WORD *)((char *)v15 + v13) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C4B8, &dword_21572C000);
  __cxa_guard_release(&qword_26788C370);
LABEL_5:
  if (byte_26788C4CF < 0)
  {
    sub_215738B0C(&v34, (void *)xmmword_26788C4B8, *((unint64_t *)&xmmword_26788C4B8 + 1));
  }
  else
  {
    long long v34 = xmmword_26788C4B8;
    uint64_t v35 = unk_26788C4C8;
  }
  sub_21573A150(&v30, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v19, a2);
  sub_21574086C(v4, (uint64_t *)&v30, (uint64_t)v19, **a1);
  if (!v29 || !v28) {
    goto LABEL_16;
  }
  if (!v27) {
    goto LABEL_13;
  }
  if ((v26 & 0x80000000) == 0)
  {
    if ((v24 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v23);
    if (!v22) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v25);
  if (v24 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v22) {
    goto LABEL_16;
  }
LABEL_14:
  if (v21 < 0) {
    operator delete(__p);
  }
LABEL_16:
  uint64_t v7 = (void **)v30;
  if (v30)
  {
    long long v8 = v31;
    uint64_t v9 = v30;
    if (v31 != v30)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v30;
    }
    char v31 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v33) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v34);
  if (SHIBYTE(v33) < 0) {
    goto LABEL_28;
  }
}

void sub_215794F24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788C370);
  if (*(char *)(v1 - 121) < 0)
  {
    operator delete(*(void **)(v1 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215794F98(void *a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C378, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C378))
  {
    goto LABEL_2;
  }
  uint64_t v7 = sub_21577BB78();
  long long v8 = (const void **)v7;
  int v9 = *((char *)v7 + 23);
  if (v9 >= 0) {
    size_t v10 = *((unsigned __int8 *)v7 + 23);
  }
  else {
    size_t v10 = *((void *)v7 + 1);
  }
  unint64_t v11 = v10 + 6;
  if (v10 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v11 >= 0x17)
  {
    uint64_t v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v13 = v11 | 7;
    }
    uint64_t v14 = v13 + 1;
    char v15 = (char *)operator new(v13 + 1);
    *((void *)&xmmword_26788C4D0 + 1) = v10 + 6;
    unk_26788C4E0 = v14 | 0x8000000000000000;
    *(void *)&xmmword_26788C4D0 = v15;
    *(_DWORD *)char v15 = 1936617315;
    *((_WORD *)v15 + 2) = 8308;
    int v12 = v15 + 6;
    goto LABEL_27;
  }
  unk_26788C4E0 = 0;
  xmmword_26788C4D0 = 0x2074736E6F63uLL;
  byte_26788C4E7 = v10 + 6;
  int v12 = (char *)&xmmword_26788C4D0 + 6;
  if (v10)
  {
LABEL_27:
    if (v9 >= 0) {
      uint64_t v16 = v8;
    }
    else {
      uint64_t v16 = *v8;
    }
    memmove(v12, v16, v10);
  }
  v12[v10] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C4D0, &dword_21572C000);
  __cxa_guard_release(&qword_26788C378);
LABEL_2:
  if (byte_26788C4E7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788C4D0, *((unint64_t *)&xmmword_26788C4D0 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788C4D0;
    uint64_t v20 = unk_26788C4E0;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788C500, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    uint64_t v5 = v18;
    long long v6 = __p;
    if (v18 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      long long v6 = __p;
    }
    uint64_t v18 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157951F0(_Unwind_Exception *a1)
{
}

void sub_21579520C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_215795238(uint64_t **a1, uint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_215753ECC();
  uint64_t v5 = sub_21575C17C();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(__dst, (void *)*v5, v5[1]);
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    uint64_t v28 = v5[2];
    *(_OWORD *)long long __dst = v6;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C380, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C380))
  {
    sub_215795628();
    if (byte_26788C517 < 0)
    {
      sub_215738B0C(&xmmword_26788C4E8, (void *)qword_26788C500, unk_26788C508);
    }
    else
    {
      xmmword_26788C4E8 = *(_OWORD *)&qword_26788C500;
      unk_26788C4F8 = unk_26788C510;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C4E8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C380);
  }
  if (byte_26788C4FF < 0)
  {
    sub_215738B0C(&v29, (void *)xmmword_26788C4E8, *((unint64_t *)&xmmword_26788C4E8 + 1));
  }
  else
  {
    long long v29 = xmmword_26788C4E8;
    uint64_t v30 = unk_26788C4F8;
  }
  uint64_t v7 = sub_215754F30();
  if (*((char *)v7 + 23) < 0)
  {
    sub_215738B0C(&v31, (void *)*v7, v7[1]);
  }
  else
  {
    long long v8 = *(_OWORD *)v7;
    uint64_t v32 = v7[2];
    long long v31 = v8;
  }
  int v9 = sub_21577C0F0();
  if (*((char *)v9 + 23) < 0)
  {
    sub_215738B0C(&v33, (void *)*v9, v9[1]);
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    uint64_t v34 = v9[2];
    long long v33 = v10;
  }
  sub_21573A150(&v25, (uint64_t)__dst, 4uLL);
  sub_215742C3C(v14, a2);
  sub_21574086C(v4, (uint64_t *)&v25, (uint64_t)v14, **a1);
  if (v24 && v23)
  {
    if (!v22) {
      goto LABEL_19;
    }
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_19:
        if (!v17) {
          goto LABEL_22;
        }
LABEL_20:
        if (v16 < 0) {
          operator delete(__p);
        }
        goto LABEL_22;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_19;
    }
    operator delete(v18);
    if (!v17) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
LABEL_22:
  unint64_t v11 = (void **)v25;
  if (v25)
  {
    int v12 = v26;
    uint64_t v13 = v25;
    if (v26 != v25)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      uint64_t v13 = v25;
    }
    char v26 = v11;
    operator delete(v13);
  }
  if (SHIBYTE(v34) < 0)
  {
    operator delete((void *)v33);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_32:
      if ((SHIBYTE(v30) & 0x80000000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_37;
    }
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_32;
  }
  operator delete((void *)v31);
  if ((SHIBYTE(v30) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v28) & 0x80000000) == 0) {
      return;
    }
LABEL_38:
    operator delete(__dst[0]);
    return;
  }
LABEL_37:
  operator delete((void *)v29);
  if (SHIBYTE(v28) < 0) {
    goto LABEL_38;
  }
}

void sub_215795554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  __cxa_guard_abort(&qword_26788C380);
  while (1)
  {
    if (*((char *)v52 - 1) < 0) {
      operator delete(*(v52 - 3));
    }
    v52 -= 3;
    if (v52 == &a29) {
      _Unwind_Resume(a1);
    }
  }
}

void sub_215795628()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C388, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C388))
  {
    sub_215795708(__p);
    sub_215794F98(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C500, &dword_21572C000);
    __cxa_guard_release(&qword_26788C388);
  }
}

void sub_2157956C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788C388);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788C388);
  _Unwind_Resume(a1);
}

void sub_215795708(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C390, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C390))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::OptionalRef<const cv3d::vl::visual_logger::FileExportOptions>]", qword_26788C518);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C518, &dword_21572C000);
    __cxa_guard_release(&qword_26788C390);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C398, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C398))
  {
    size_t v3 = sub_215747D98(qword_26788C518, "<", 0);
    sub_215747C90(qword_26788C518, 0, v3, qword_26788C530);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C530, &dword_21572C000);
    __cxa_guard_release(&qword_26788C398);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C3A0))
  {
    sub_215E19DF4((uint64_t)qword_26788C530, (uint64_t)&xmmword_26788C548);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C548, &dword_21572C000);
    __cxa_guard_release(&qword_26788C3A0);
  }
  if (byte_26788C55F < 0)
  {
    long long v2 = xmmword_26788C548;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788C548;
    __dst[2] = unk_26788C558;
  }
}

void sub_2157958C8(_Unwind_Exception *a1)
{
}

void sub_2157958E0(_Unwind_Exception *a1)
{
}

void sub_2157958F8(_Unwind_Exception *a1)
{
}

void sub_215795910()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C3B0))
  {
    int v0 = sub_215753ECC();
    char v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      long long v8 = (char *)operator new(v6 + 1);
      qword_26788C580 = v3 + 6;
      unk_26788C588 = v7 | 0x8000000000000000;
      qword_26788C578 = (uint64_t)v8;
      *(_DWORD *)long long v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788C580 = 0;
      unk_26788C588 = 0;
      qword_26788C578 = 0x2074736E6F63;
      byte_26788C58F = v3 + 6;
      uint64_t v5 = (char *)&qword_26788C578 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C578, &dword_21572C000);
        __cxa_guard_release(&qword_26788C3B0);
        return;
      }
    }
    if (v2 >= 0) {
      int v9 = v1;
    }
    else {
      int v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_215795A8C(_Unwind_Exception *a1)
{
}

void sub_215795AA4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C3D0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C3D0))
  {
    return;
  }
  sub_215794170();
  int v0 = byte_26788C3F7;
  if (byte_26788C3F7 >= 0) {
    size_t v1 = byte_26788C3F7;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C3E0 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788C5B0 = v1 + 6;
    unk_26788C5B8 = v5 | 0x8000000000000000;
    qword_26788C5A8 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C5B0 = 0;
  unk_26788C5B8 = 0;
  qword_26788C5A8 = 0x2074736E6F63;
  byte_26788C5BF = v1 + 6;
  size_t v3 = (char *)&qword_26788C5A8 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788C3E0;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788C3E0;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C5A8, &dword_21572C000);

  __cxa_guard_release(&qword_26788C3D0);
}

void sub_215795C28(_Unwind_Exception *a1)
{
}

uint64_t sub_215795C40(uint64_t a1)
{
  return a1;
}

void sub_215795C7C(uint64_t a1)
{
  sub_215798700(a1 + 224, *(void **)(a1 + 232));
  unint64_t v2 = *(void **)(a1 + 208);

  sub_215798700(a1 + 200, v2);
}

void sub_215795CC0(uint64_t a1)
{
  sub_215798700(a1 + 232, *(void **)(a1 + 240));
  sub_215798700(a1 + 208, *(void **)(a1 + 216));

  JUMPOUT(0x2166C4D20);
}

void sub_215795D1C(uint64_t a1)
{
  sub_215798700(a1 + 224, *(void **)(a1 + 232));
  sub_215798700(a1 + 200, *(void **)(a1 + 208));

  JUMPOUT(0x2166C4D20);
}

uint64_t VZMeshGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C5E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C5E0))
  {
    return qword_26788C5D8;
  }
  qword_26788C5D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C5E0);
  return qword_26788C5D8;
}

void *VZDataCreateWithMesh(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v5 = (void *)a1;
  uint64_t v58 = *MEMORY[0x263EF8340];
  if (sub_21579639C((uint64_t)"VZDataCreateWithMesh", a1, a3)) {
    return 0;
  }
  sub_215744D68(a2, v23);
  char v21 = &v22;
  uint64_t v22 = a3;
  sub_215748384(v35, (uint64_t)v23);
  sub_21595019C((uint64_t)(v5 + 2), v35, (uint64_t)&v47);
  if (v46)
  {
    if (v45)
    {
      if (v44 && v43 < 0) {
        operator delete(__p);
      }
      if (v41 && v40 < 0) {
        operator delete(v39);
      }
      if (v38 && v37 < 0) {
        operator delete(v36);
      }
    }
    sub_215746614((uint64_t)v35);
  }
  int v6 = v57;
  if (!v57)
  {
    long long v10 = v47;
    sub_215741BFC(&v11, &v48);
    char v20 = 1;
    sub_215798AE8(&v21, (uint64_t)&v10);
    if (!v20 || !v19) {
      goto LABEL_39;
    }
    if (v18)
    {
      if (v17 < 0) {
        operator delete(v16);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    if (!v13 || (v12 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  uint64_t v7 = (long long *)sub_2157480E0((uint64_t)&v47);
  long long v8 = operator new(0x240uLL, MEMORY[0x263F8C180]);
  if (!v8)
  {
    LOBYTE(v10) = 0;
    char v20 = 0;
    sub_215798AE8(&v21, (uint64_t)&v10);
    if (!v20 || !v19) {
      goto LABEL_38;
    }
    if (v18)
    {
      if (v17 < 0) {
        operator delete(v16);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    uint64_t v5 = 0;
    if (!v13 || (v12 & 0x80000000) == 0) {
      goto LABEL_39;
    }
LABEL_37:
    operator delete(v11);
LABEL_38:
    uint64_t v5 = 0;
    goto LABEL_39;
  }
  uint64_t v5 = v8;
  *long long v8 = &unk_26C6565D0;
  sub_215748978((uint64_t)(v8 + 2), v7);
  *uint64_t v5 = &unk_26C656FF0;
  _DWORD v5[2] = &unk_26C657040;
  *((_OWORD *)v5 + 35) = 0u;
LABEL_39:
  if (v57)
  {
    sub_215748B40((uint64_t)&v47);
  }
  else if (v56)
  {
    if (v55)
    {
      if (v54 < 0) {
        operator delete(v53);
      }
      if (v52 < 0) {
        operator delete(v51);
      }
    }
    if (v50 && v49 < 0) {
      operator delete((void *)v48);
    }
  }
  if (!v6) {
    uint64_t v5 = 0;
  }
  if (v34)
  {
    if (v33)
    {
      if (v32 && v31 < 0) {
        operator delete(v30);
      }
      if (v29 && v28 < 0) {
        operator delete(v27);
      }
      if (v26 && v25 < 0) {
        operator delete(v24);
      }
    }
    sub_215746614((uint64_t)v23);
  }
  return v5;
}

void sub_215796190(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215796198);
  }
  _Unwind_Resume(a1);
}

void sub_2157961A8(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215798AE8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      uint64_t v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      int v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        int v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_215798AE8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_215798AE8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x215796090);
  }
  _Unwind_Resume(a1);
}

void sub_2157961C0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x2157961CCLL);
  }
  _Unwind_Resume(a1);
}

void sub_215796384(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21579638CLL);
  }
  sub_215731D80(a1);
}

BOOL sub_21579639C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C5E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C5E8))
  {
    sub_215798754();
    int v7 = byte_26788C64F;
    if (byte_26788C64F >= 0) {
      size_t v8 = byte_26788C64F;
    }
    else {
      size_t v8 = qword_26788C640;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C620 + 1) = v8 + 1;
      unk_26788C630 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C620 = v10;
    }
    else
    {
      unk_26788C630 = 0;
      xmmword_26788C620 = 0uLL;
      char v10 = &xmmword_26788C620;
      byte_26788C637 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C620, &dword_21572C000);
        __cxa_guard_release(&qword_26788C5E8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C638;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C638;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C637 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C620, *((unint64_t *)&xmmword_26788C620 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C620;
    uint64_t v15 = unk_26788C630;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157966D0(_Unwind_Exception *a1)
{
}

void sub_2157966E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetMesh(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetMesh", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (!v4)
  {
    char v41 = &v42;
    uint64_t v42 = a2;
    sub_2159527F8((long long *)(a1 + 32), (uint64_t)&v32);
    if (v40)
    {
      uint64_t v5 = operator new(0x108uLL, MEMORY[0x263F8C180]);
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)uint64_t v5 = &unk_26C6565D0;
        long long v6 = v33[8];
        v5[9] = v33[7];
        v5[10] = v6;
        long long v7 = v33[10];
        v5[11] = v33[9];
        v5[12] = v7;
        long long v8 = v33[4];
        v5[5] = v33[3];
        void v5[6] = v8;
        long long v9 = v33[6];
        v5[7] = v33[5];
        v5[8] = v9;
        long long v10 = v33[0];
        v5[1] = v32;
        _DWORD v5[2] = v10;
        long long v11 = v33[2];
        v5[3] = v33[1];
        v5[4] = v11;
        uint64_t v12 = v34;
        uint64_t v13 = v35;
        *((void *)v5 + 27) = v35;
        char v14 = (char *)v5 + 216;
        *((void *)v5 + 26) = v12;
        uint64_t v15 = v36;
        *((void *)v5 + 28) = v36;
        if (v15)
        {
          *(void *)(v13 + 16) = v14;
          uint64_t v34 = &v35;
          uint64_t v35 = 0;
          uint64_t v36 = 0;
        }
        else
        {
          *((void *)v5 + 26) = v14;
        }
        char v16 = v37;
        uint64_t v17 = v38;
        *((void *)v5 + 30) = v38;
        long long v18 = (char *)(v5 + 15);
        *((void *)v5 + 29) = v16;
        uint64_t v19 = v39;
        *((void *)v5 + 31) = v39;
        if (v19)
        {
          *(void *)(v17 + 16) = v18;
          char v37 = &v38;
          uint64_t v38 = 0;
          uint64_t v39 = 0;
        }
        else
        {
          *((void *)v5 + 29) = v18;
        }
        *((_DWORD *)v5 + 64) = 1;
        *(void *)uint64_t v5 = &unk_26C658470;
        *((void *)v5 + 1) = &unk_26C6584C0;
      }
      else
      {
        LOBYTE(v21) = 0;
        char v31 = 0;
        sub_215798E8C(&v41, (uint64_t)&v21);
        if (v31 && v30)
        {
          if (v29)
          {
            if (v28 < 0) {
              operator delete(__p);
            }
            if (v26 < 0) {
              operator delete(v25);
            }
          }
          if (v24 && v23 < 0) {
            operator delete(v22);
          }
        }
      }
      sub_215799048((uint64_t)&v32);
    }
    else
    {
      long long v21 = v32;
      sub_215741BFC(&v22, v33);
      char v31 = 1;
      sub_215798E8C(&v41, (uint64_t)&v21);
      if (v31 && v30)
      {
        if (v29)
        {
          if (v28 < 0) {
            operator delete(__p);
          }
          if (v26 < 0) {
            operator delete(v25);
          }
        }
        if (v24 && v23 < 0) {
          operator delete(v22);
        }
      }
      sub_215799048((uint64_t)&v32);
      uint64_t v4 = 0;
    }
    *(void *)(a1 + 568) = v4;
  }
  return v4;
}

void sub_2157969D0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  sub_215799048((uint64_t)&a67);
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v83 = std::logic_error::what(&a10);
    size_t v84 = strlen(v83);
    if (v84 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v85 = (const char *)v84;
      if (v84 >= 0x17)
      {
        uint64_t v94 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v84 | 7) != 0x17) {
          uint64_t v94 = v84 | 7;
        }
        uint64_t v95 = v94 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v94 + 1);
        __dst.__imp_.__imp_ = v85;
        *(void *)&a37 = v95 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v84;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v84)
        {
LABEL_40:
          v85[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC(&a68, &a14);
          LOBYTE(a79) = 1;
          sub_215798E8C((uint64_t **)(v79 - 64), (uint64_t)&a67);
          if ((_BYTE)a79 && (_BYTE)a78)
          {
            if (a77)
            {
              if (a76 < 0) {
                operator delete(a75);
              }
              if (a74 < 0) {
                operator delete(a73);
              }
            }
            if (a72 && a71 < 0) {
              operator delete(a68);
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_91;
        }
      }
      memmove(p_dst, v83, (size_t)v85);
      goto LABEL_40;
    }
LABEL_90:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(a67) = 0;
    LOBYTE(a79) = 0;
    sub_215798E8C((uint64_t **)(v79 - 64), (uint64_t)&a67);
    if ((_BYTE)a79 && (_BYTE)a78)
    {
      if (a77)
      {
        if (a76 < 0) {
          operator delete(a75);
        }
        if (a74 < 0) {
          operator delete(a73);
        }
      }
      if (a72 && a71 < 0) {
        operator delete(a68);
      }
    }
    __cxa_end_catch();
LABEL_91:
    JUMPOUT(0x2157968B4);
  }
  uint64_t v87 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v87);
  a37 = *((_OWORD *)v87 + 1);
  uint64_t v89 = *((void *)v87 + 4);
  uint64_t v88 = *((void *)v87 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v89;
  a39 = v88;
  if (v88) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v88 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v90 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v90 = *(const char **)v90;
  }
  size_t v91 = strlen(v90);
  if (v91 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_90;
  }
  size_t v92 = (const char *)v91;
  if (v91 >= 0x17)
  {
    uint64_t v96 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17) {
      uint64_t v96 = v91 | 7;
    }
    uint64_t v97 = v96 + 1;
    char v93 = (std::logic_error_vtbl *)operator new(v96 + 1);
    a10.__imp_.__imp_ = v92;
    a11 = v97 | 0x8000000000000000;
    a10.__vftable = v93;
  }
  else
  {
    HIBYTE(a11) = v91;
    char v93 = (std::logic_error_vtbl *)&a10;
    if (!v91)
    {
LABEL_67:
      v92[(void)v93] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC(&a68, &a14);
      LOBYTE(a79) = 1;
      sub_215798E8C((uint64_t **)(v79 - 64), (uint64_t)&a67);
      if ((_BYTE)a79 && (_BYTE)a78)
      {
        if (a77)
        {
          if (a76 < 0) {
            operator delete(a75);
          }
          if (a74 < 0) {
            operator delete(a73);
          }
        }
        if (a72 && a71 < 0) {
          operator delete(a68);
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_91;
    }
  }
  memmove(v93, v90, (size_t)v92);
  goto LABEL_67;
}

char *VZMeshCreate()
{
  uint64_t result = (char *)operator new(0x108uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *((void *)result + 2) = 0;
    *(_OWORD *)(result + 24) = xmmword_215E99670;
    *((void *)result + 5) = 0;
    *((void *)result + 6) = 0;
    *(_OWORD *)(result + 56) = xmmword_215E99670;
    *((void *)result + 9) = 0;
    *((void *)result + 10) = 0;
    *(_OWORD *)(result + 88) = xmmword_215E99670;
    *((void *)result + 13) = 0;
    *((void *)result + 14) = 0;
    *(_OWORD *)(result + 120) = xmmword_215E99670;
    *((void *)result + 17) = 0;
    *((void *)result + 18) = 0;
    *(_OWORD *)(result + 152) = xmmword_215E99670;
    *((void *)result + 21) = 0;
    *((void *)result + 22) = 0;
    *(_OWORD *)(result + 184) = xmmword_215E99670;
    *((void *)result + 27) = 0;
    *((void *)result + 25) = 0;
    *((void *)result + 26) = result + 216;
    *((void *)result + 31) = 0;
    *((void *)result + 32) = 1;
    *((void *)result + 30) = 0;
    *((void *)result + 28) = 0;
    *((void *)result + 29) = result + 240;
    *(void *)uint64_t result = &unk_26C658470;
    *((void *)result + 1) = &unk_26C6584C0;
  }
  else
  {
    sub_2157988F0();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    v4[0] = 0;
    char v14 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788C650, (uint64_t *)&v15, (uint64_t)v4, 0);
    if (v14 && v13)
    {
      if (v12)
      {
        if (v11 < 0) {
          operator delete(__p);
        }
        if (v9 < 0) {
          operator delete(v8);
        }
      }
      if (v7 && v6 < 0) {
        operator delete(v5);
      }
    }
    uint64_t v1 = (uint64_t)v15;
    if (v15)
    {
      uint64_t v2 = v16;
      size_t v3 = v15;
      if ((void *)v16 != v15)
      {
        do
        {
          if (*(char *)(v2 - 1) < 0) {
            operator delete(*(void **)(v2 - 24));
          }
          v2 -= 24;
        }
        while (v2 != v1);
        size_t v3 = v15;
      }
      uint64_t v16 = v1;
      operator delete(v3);
    }
    return 0;
  }
  return result;
}

double VZMeshSetVertices(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetVertices", a1))
  {
    return sub_21594E304(a1 + 16, a2, a3);
  }
  return result;
}

BOOL sub_2157970C0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C618, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C618))
  {
    sub_2157988F0();
    int v5 = byte_26788C667;
    if (byte_26788C667 >= 0) {
      size_t v6 = byte_26788C667;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788C650 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      long long v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788C6B0 + 1) = v6 + 1;
      unk_26788C6C0 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788C6B0 = v8;
    }
    else
    {
      unk_26788C6C0 = 0;
      xmmword_26788C6B0 = 0uLL;
      long long v8 = &xmmword_26788C6B0;
      byte_26788C6C7 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C6B0, &dword_21572C000);
        __cxa_guard_release(&qword_26788C618);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788C650;
    }
    else {
      char v11 = (long long *)xmmword_26788C650;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C6C7 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788C6B0, *((unint64_t *)&xmmword_26788C6B0 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788C6B0;
    uint64_t v13 = unk_26788C6C0;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157973F0(_Unwind_Exception *a1)
{
}

void sub_215797408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

double VZMeshSetFaces(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetFaces", a1))
  {
    return sub_21594E418(a1 + 16, a2, a3);
  }
  return result;
}

double VZMeshSetVertexNormals(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetVertexNormals", a1))
  {
    return sub_21594E754(a1 + 16, a2, a3);
  }
  return result;
}

double VZMeshSetFaceNormals(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetFaceNormals", a1))
  {
    return sub_21594E868(a1 + 16, a2, a3);
  }
  return result;
}

double VZMeshSetVertexColors(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetVertexColors", a1))
  {
    return sub_21594E52C(a1 + 16, a2, a3);
  }
  return result;
}

double VZMeshSetFaceColors(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_2157970C0((uint64_t)"VZMeshSetFaceColors", a1))
  {
    return sub_21594E640(a1 + 16, a2, a3);
  }
  return result;
}

uint64_t VZMeshSetVertexLabels(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned __int8 a5)
{
  if (sub_2157970C0((uint64_t)"VZMeshSetVertexLabels", a1)) {
    return 0;
  }

  return sub_21594E97C((uint64_t ***)(a1 + 208), a2, a3, a4, a5);
}

uint64_t VZMeshSetFaceLabels(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned __int8 a5)
{
  if (sub_2157970C0((uint64_t)"VZMeshSetFaceLabels", a1)) {
    return 0;
  }

  return sub_21594E97C((uint64_t ***)(a1 + 232), a2, a3, a4, a5);
}

uint64_t VZMeshGetVertices(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertices", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 16);
  }
  return result;
}

uint64_t VZMeshGetVertexCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 28);
  }
  return result;
}

uint64_t VZMeshGetFaces(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaces", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 48);
  }
  return result;
}

uint64_t VZMeshGetFaceCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 60);
  }
  return result;
}

uint64_t VZMeshGetVertexNormals(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexNormals", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 144);
  }
  return result;
}

uint64_t VZMeshGetFaceNormals(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceNormals", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 176);
  }
  return result;
}

uint64_t VZMeshGetVertexNormalCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexNormalCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 156);
  }
  return result;
}

uint64_t VZMeshGetFaceNormalCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceNormalCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 188);
  }
  return result;
}

uint64_t VZMeshGetVertexColors(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexColors", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 80);
  }
  return result;
}

uint64_t VZMeshGetFaceColors(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceColors", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 112);
  }
  return result;
}

uint64_t VZMeshGetVertexColorCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexColorCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 92);
  }
  return result;
}

uint64_t VZMeshGetFaceColorCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceColorCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(unsigned int *)(a1 + 124);
  }
  return result;
}

uint64_t VZMeshGetVertexLabelListCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetVertexLabelListCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 224);
  }
  return result;
}

uint64_t VZMeshGetFaceLabelListCount(uint64_t a1)
{
  BOOL v2 = sub_21579639C((uint64_t)"VZMeshGetFaceLabelListCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(a1 + 248);
  }
  return result;
}

uint64_t VZMeshGetVertexLabelType(uint64_t a1, unint64_t a2)
{
  if (sub_21579639C((uint64_t)"VZMeshGetVertexLabelType", a1, 0)) {
    return 0;
  }
  sub_21594EC1C(a1 + 16, a2, (uint64_t)v6);
  uint64_t v4 = sub_215797C48((uint64_t)"VZMeshGetVertexLabelType", v6);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_215797C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_215797C48(uint64_t a1, char *a2)
{
  uint64_t v16 = a1;
  if (a2[120]) {
    return *(unsigned __int16 *)a2;
  }
  sub_21574F3D8("in function ", (const char *)&v16);
  sub_215E11614(a2, &v4, (uint64_t)&v6);
  sub_21573E208(&v6, 0);
  if (v15)
  {
    if (v14)
    {
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete(v7);
    }
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  return 0;
}

void sub_215797D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZMeshGetFaceLabelType(uint64_t a1, unint64_t a2)
{
  if (sub_21579639C((uint64_t)"VZMeshGetFaceLabelType", a1, 0)) {
    return 0;
  }
  sub_21594F0E4(a1 + 16, a2, (uint64_t)v6);
  uint64_t v4 = sub_215797C48((uint64_t)"VZMeshGetFaceLabelType", v6);
  if (v16 || !v15) {
    return v4;
  }
  if (v14)
  {
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
  }
  if (!v9 || (v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(v7);
  return v4;
}

void sub_215797E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZMeshGetVertexLabels(uint64_t a1, unsigned int a2)
{
  BOOL v4 = sub_21579639C((uint64_t)"VZMeshGetVertexLabels", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 216);
    uint64_t v7 = a1 + 216;
    uint64_t v6 = v8;
    if (!v8) {
      return 0;
    }
    uint64_t v9 = v7;
    do
    {
      unsigned int v10 = *(unsigned __int16 *)(v6 + 32);
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        char v12 = (uint64_t *)v6;
      }
      else {
        char v12 = (uint64_t *)(v6 + 8);
      }
      if (v11) {
        uint64_t v9 = v6;
      }
      uint64_t v6 = *v12;
    }
    while (*v12);
    if (v9 == v7)
    {
      return 0;
    }
    else if (*(unsigned __int16 *)(v9 + 32) <= a2)
    {
      return *(void *)(v9 + 56);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZMeshGetFaceLabels(uint64_t a1, unsigned int a2)
{
  BOOL v4 = sub_21579639C((uint64_t)"VZMeshGetFaceLabels", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 240);
    uint64_t v7 = a1 + 240;
    uint64_t v6 = v8;
    if (!v8) {
      return 0;
    }
    uint64_t v9 = v7;
    do
    {
      unsigned int v10 = *(unsigned __int16 *)(v6 + 32);
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        char v12 = (uint64_t *)v6;
      }
      else {
        char v12 = (uint64_t *)(v6 + 8);
      }
      if (v11) {
        uint64_t v9 = v6;
      }
      uint64_t v6 = *v12;
    }
    while (*v12);
    if (v9 == v7)
    {
      return 0;
    }
    else if (*(unsigned __int16 *)(v9 + 32) <= a2)
    {
      return *(void *)(v9 + 56);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZMeshGetVertexLabelCount(uint64_t a1, unsigned int a2)
{
  BOOL v4 = sub_21579639C((uint64_t)"VZMeshGetVertexLabelCount", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 216);
    uint64_t v7 = a1 + 216;
    uint64_t v6 = v8;
    if (!v8) {
      return 0;
    }
    uint64_t v9 = v7;
    do
    {
      unsigned int v10 = *(unsigned __int16 *)(v6 + 32);
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        char v12 = (uint64_t *)v6;
      }
      else {
        char v12 = (uint64_t *)(v6 + 8);
      }
      if (v11) {
        uint64_t v9 = v6;
      }
      uint64_t v6 = *v12;
    }
    while (*v12);
    if (v9 == v7)
    {
      return 0;
    }
    else if (*(unsigned __int16 *)(v9 + 32) <= a2)
    {
      uint64_t result = sub_21594BB58((unsigned __int8 *)(v9 + 40));
      if (!v13) {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZMeshGetFaceLabelCount(uint64_t a1, unsigned int a2)
{
  BOOL v4 = sub_21579639C((uint64_t)"VZMeshGetFaceLabelCount", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 240);
    uint64_t v7 = a1 + 240;
    uint64_t v6 = v8;
    if (!v8) {
      return 0;
    }
    uint64_t v9 = v7;
    do
    {
      unsigned int v10 = *(unsigned __int16 *)(v6 + 32);
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        char v12 = (uint64_t *)v6;
      }
      else {
        char v12 = (uint64_t *)(v6 + 8);
      }
      if (v11) {
        uint64_t v9 = v6;
      }
      uint64_t v6 = *v12;
    }
    while (*v12);
    if (v9 == v7)
    {
      return 0;
    }
    else if (*(unsigned __int16 *)(v9 + 32) <= a2)
    {
      uint64_t result = sub_21594BB58((unsigned __int8 *)(v9 + 40));
      if (!v13) {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZMeshGetVertexLabelValueType(uint64_t a1, unsigned int a2)
{
  if (sub_21579639C((uint64_t)"VZMeshGetVertexLabelValueType", a1, 0)) {
    return 255;
  }
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v5 = a1 + 216;
  uint64_t v4 = v6;
  if (!v6) {
    return 255;
  }
  uint64_t v7 = v5;
  do
  {
    unsigned int v8 = *(unsigned __int16 *)(v4 + 32);
    BOOL v9 = v8 >= a2;
    if (v8 >= a2) {
      unsigned int v10 = (uint64_t *)v4;
    }
    else {
      unsigned int v10 = (uint64_t *)(v4 + 8);
    }
    if (v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 == v5 || *(unsigned __int16 *)(v7 + 32) > a2) {
    return 255;
  }
  else {
    return *(unsigned __int8 *)(v7 + 40);
  }
}

uint64_t VZMeshGetFaceLabelValueType(uint64_t a1, unsigned int a2)
{
  if (sub_21579639C((uint64_t)"VZMeshGetFaceLabelValueType", a1, 0)) {
    return 255;
  }
  uint64_t v6 = *(void *)(a1 + 240);
  uint64_t v5 = a1 + 240;
  uint64_t v4 = v6;
  if (!v6) {
    return 255;
  }
  uint64_t v7 = v5;
  do
  {
    unsigned int v8 = *(unsigned __int16 *)(v4 + 32);
    BOOL v9 = v8 >= a2;
    if (v8 >= a2) {
      unsigned int v10 = (uint64_t *)v4;
    }
    else {
      unsigned int v10 = (uint64_t *)(v4 + 8);
    }
    if (v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 == v5 || *(unsigned __int16 *)(v7 + 32) > a2) {
    return 255;
  }
  else {
    return *(unsigned __int8 *)(v7 + 40);
  }
}

uint64_t sub_215798234(uint64_t result)
{
  return result;
}

uint64_t sub_215798244(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 256), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_215798280()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C5E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C5E0))
  {
    return qword_26788C5D8;
  }
  qword_26788C5D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C5E0);
  return qword_26788C5D8;
}

void *sub_2157982E4(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658508, 0);
  if (result) {
    return (void *)sub_21594F5AC(a1 + 16, (uint64_t)result + 16);
  }
  return result;
}

uint64_t sub_215798368(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  sub_2157988F0();
  sub_215732BF4(v20, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788C650, v20, 0);
  if (v21 < 0) {
    operator delete((void *)v20[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_2157983C0(uint64_t a1)
{
  sub_2157988F0();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_215798614(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157988F0();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C650, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157986F4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 256));
}

void sub_215798700(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_215798700(a1, *a2);
    sub_215798700(a1, a2[1]);
    operator delete(a2);
  }
}

void sub_215798754()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C5F0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C5F0))
  {
    return;
  }
  sub_2157988F0();
  int v0 = byte_26788C667;
  if (byte_26788C667 >= 0) {
    size_t v1 = byte_26788C667;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C650 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788C640 = v1 + 6;
    unk_26788C648 = v5 | 0x8000000000000000;
    qword_26788C638 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C640 = 0;
  unk_26788C648 = 0;
  qword_26788C638 = 0x2074736E6F63;
  byte_26788C64F = v1 + 6;
  size_t v3 = (char *)&qword_26788C638 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788C650;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788C650;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C638, &dword_21572C000);

  __cxa_guard_release(&qword_26788C5F0);
}

void sub_2157988D8(_Unwind_Exception *a1)
{
}

void sub_2157988F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C5F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C5F8))
  {
    sub_2157989C4();
    if (byte_26788C697 < 0)
    {
      sub_215738B0C(&xmmword_26788C650, (void *)xmmword_26788C680, *((unint64_t *)&xmmword_26788C680 + 1));
    }
    else
    {
      xmmword_26788C650 = xmmword_26788C680;
      unk_26788C660 = unk_26788C690;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C650, &dword_21572C000);
    __cxa_guard_release(&qword_26788C5F8);
  }
}

void sub_2157989AC(_Unwind_Exception *a1)
{
}

void sub_2157989C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C600, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C600))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZMesh]", qword_26788C668);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C668, &dword_21572C000);
    __cxa_guard_release(&qword_26788C600);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C608, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C608))
  {
    sub_215E19DF4((uint64_t)qword_26788C668, (uint64_t)&xmmword_26788C680);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C680, &dword_21572C000);
    __cxa_guard_release(&qword_26788C608);
  }
}

void sub_215798AB8(_Unwind_Exception *a1)
{
}

void sub_215798AD0(_Unwind_Exception *a1)
{
}

void sub_215798AE8(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C610, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C610))
  {
    goto LABEL_2;
  }
  sub_215798754();
  int v10 = byte_26788C64F;
  if (byte_26788C64F >= 0) {
    size_t v11 = byte_26788C64F;
  }
  else {
    size_t v11 = qword_26788C640;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    char v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C698 + 1) = v11 + 1;
    unk_26788C6A8 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C698 = v13;
    goto LABEL_43;
  }
  char v13 = &xmmword_26788C698;
  unk_26788C6A8 = 0;
  xmmword_26788C698 = 0uLL;
  byte_26788C6AF = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C638;
    }
    else {
      char v16 = (uint64_t *)qword_26788C638;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C698, &dword_21572C000);
  __cxa_guard_release(&qword_26788C610);
LABEL_2:
  if (byte_26788C6AF < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C698, *((unint64_t *)&xmmword_26788C698 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C698;
    uint64_t v31 = unk_26788C6A8;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  uint64_t v7 = (void **)v28;
  if (v28)
  {
    unsigned int v8 = v29;
    BOOL v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      BOOL v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_215798E14(_Unwind_Exception *a1)
{
}

void sub_215798E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215798E8C(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_2157988F0();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C650, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    unsigned int v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      unsigned int v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21579900C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215799048(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 240))
  {
    sub_215798700(a1 + 216, *(void **)(a1 + 224));
    sub_215798700(a1 + 192, *(void **)(a1 + 200));
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_2157990F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215799174(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2157991E4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215799270(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZNumberGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6D0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C6D0))
  {
    return qword_26788C6C8;
  }
  qword_26788C6C8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C6D0);
  return qword_26788C6C8;
}

uint64_t VZDataCreateWithNumber(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_21579991C((uint64_t)"VZDataCreateWithNumber", a1, a3))
  {
    sub_215744D68(a2, v9);
    uint64_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_21595AC20(a1 + 16, v10);
  }
  return 0;
}

void sub_215799710(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x215799718);
  }
  _Unwind_Resume(a1);
}

void sub_215799728(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21579B5E4(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      long long v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21579B5E4(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_21579B5E4(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x215799610);
  }
  _Unwind_Resume(a1);
}

void sub_215799740(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579974CLL);
  }
  _Unwind_Resume(a1);
}

void sub_215799904(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21579990CLL);
  }
  sub_215731D80(a1);
}

BOOL sub_21579991C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C6D8))
  {
    sub_21579B250();
    int v7 = byte_26788C737;
    if (byte_26788C737 >= 0) {
      size_t v8 = byte_26788C737;
    }
    else {
      size_t v8 = qword_26788C728;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C708 + 1) = v8 + 1;
      unk_26788C718 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C708 = v10;
    }
    else
    {
      unk_26788C718 = 0;
      xmmword_26788C708 = 0uLL;
      char v10 = &xmmword_26788C708;
      byte_26788C71F = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C708, &dword_21572C000);
        __cxa_guard_release(&qword_26788C6D8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C720;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C720;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C71F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C708, *((unint64_t *)&xmmword_26788C708 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C708;
    uint64_t v15 = unk_26788C718;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_215799C50(_Unwind_Exception *a1)
{
}

void sub_215799C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetNumber(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetNumber", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_21595B178(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_21579B988(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_21579BB44((uint64_t)&v20);
  uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)uint64_t v6 = &unk_26C658568;
    *((void *)v6 + 1) = &unk_26C6585B8;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_21579B988(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_215799F38(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21579B988((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21579B988((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x215799F14);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21579B988((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

char *VZNumberCreate(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  int v5 = (char *)a1;
  if (sub_21578091C((uint64_t)"VZNumberCreate", a1, a3)) {
    return 0;
  }
  uint64_t v32 = &v33;
  uint64_t v33 = a3;
  sub_21595A2A8(v5, a2, (uint64_t)&v21);
  int v6 = v31;
  if (v31)
  {
    sub_21579BB44((uint64_t)&v21);
    int v7 = (char *)operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v7)
    {
      int v5 = v7;
      *((_OWORD *)v7 + 1) = v21;
      long long v21 = 0uLL;
      *((_DWORD *)v7 + 8) = 1;
      *(void *)int v7 = &unk_26C658568;
      *((void *)v7 + 1) = &unk_26C6585B8;
      goto LABEL_26;
    }
    LOBYTE(v10) = 0;
    char v20 = 0;
    sub_21579BC10(&v32, (uint64_t)&v10);
    if (!v20 || !v19) {
      goto LABEL_25;
    }
    if (v18)
    {
      if (v17 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
    int v5 = 0;
    if (v13 && v12 < 0)
    {
      operator delete(v11);
LABEL_25:
      int v5 = 0;
    }
  }
  else
  {
    long long v10 = v21;
    sub_215741BFC(&v11, &v22);
    char v20 = 1;
    sub_21579BC10(&v32, (uint64_t)&v10);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0) {
          operator delete(__p);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
      }
      if (v13 && v12 < 0) {
        operator delete(v11);
      }
    }
  }
LABEL_26:
  if (v31)
  {
    size_t v8 = (std::__shared_weak_count *)*((void *)&v21 + 1);
    if (*((void *)&v21 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v21 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if (!v6) {
        return 0;
      }
      return v5;
    }
  }
  else if (v30)
  {
    if (v29)
    {
      if (v28 < 0) {
        operator delete(v27);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
    }
    if (v24 && v23 < 0) {
      operator delete((void *)v22);
    }
  }
  if (!v6) {
    return 0;
  }
  return v5;
}

void sub_21579A72C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21579BC10((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21579BC10((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x21579A70CLL);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21579BC10((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZNumberGetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_21579991C((uint64_t)"VZNumberGetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(*(void *)(a1 + 16) + 8);
  }
  return result;
}

uint64_t VZNumberGetByteCount(uint64_t a1)
{
  BOOL v2 = sub_21579991C((uint64_t)"VZNumberGetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(*(void *)(a1 + 16) + 16) - *(void *)(*(void *)(a1 + 16) + 8);
  }
  return result;
}

uint64_t VZNumberGetValueType(uint64_t a1)
{
  if (sub_21579991C((uint64_t)"VZNumberGetValueType", a1, 0)) {
    return 255;
  }
  else {
    return **(unsigned __int8 **)(a1 + 16);
  }
}

uint64_t sub_21579AD7C(uint64_t result)
{
  return result;
}

uint64_t sub_21579AD8C(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21579ADC8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6D0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C6D0))
  {
    return qword_26788C6C8;
  }
  qword_26788C6C8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C6D0);
  return qword_26788C6C8;
}

unsigned char **sub_21579AE2C(uint64_t a1, void *lpsrc)
{
  uint64_t result = (unsigned char **)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658600, 0);
  if (result) {
    return (unsigned char **)(sub_215E0AEDC(*(unsigned __int8 **)(a1 + 16), result[2]) == 0);
  }
  return result;
}

uint64_t sub_21579AEB8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  sub_21579B3EC();
  sub_215732BF4(v20, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788C738, v20, 0);
  if (v21 < 0) {
    operator delete((void *)v20[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_21579AF10(uint64_t a1)
{
  sub_21579B3EC();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_21579B164(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21579B3EC();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C738, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_21579B244(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_21579B250()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C6E0))
  {
    return;
  }
  sub_21579B3EC();
  int v0 = byte_26788C74F;
  if (byte_26788C74F >= 0) {
    size_t v1 = byte_26788C74F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C738 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    int v6 = (char *)operator new(v4 + 1);
    qword_26788C728 = v1 + 6;
    unk_26788C730 = v5 | 0x8000000000000000;
    qword_26788C720 = (uint64_t)v6;
    *(_DWORD *)int v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C728 = 0;
  unk_26788C730 = 0;
  qword_26788C720 = 0x2074736E6F63;
  byte_26788C737 = v1 + 6;
  size_t v3 = (char *)&qword_26788C720 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C738;
    }
    else {
      int v7 = (long long *)xmmword_26788C738;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C720, &dword_21572C000);

  __cxa_guard_release(&qword_26788C6E0);
}

void sub_21579B3D4(_Unwind_Exception *a1)
{
}

void sub_21579B3EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C6E8))
  {
    sub_21579B4C0();
    if (byte_26788C77F < 0)
    {
      sub_215738B0C(&xmmword_26788C738, (void *)xmmword_26788C768, *((unint64_t *)&xmmword_26788C768 + 1));
    }
    else
    {
      xmmword_26788C738 = xmmword_26788C768;
      unk_26788C748 = unk_26788C778;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C738, &dword_21572C000);
    __cxa_guard_release(&qword_26788C6E8);
  }
}

void sub_21579B4A8(_Unwind_Exception *a1)
{
}

void sub_21579B4C0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C6F0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZNumber]", qword_26788C750);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C750, &dword_21572C000);
    __cxa_guard_release(&qword_26788C6F0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C6F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C6F8))
  {
    sub_215E19DF4((uint64_t)qword_26788C750, (uint64_t)&xmmword_26788C768);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C768, &dword_21572C000);
    __cxa_guard_release(&qword_26788C6F8);
  }
}

void sub_21579B5B4(_Unwind_Exception *a1)
{
}

void sub_21579B5CC(_Unwind_Exception *a1)
{
}

void sub_21579B5E4(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C700, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C700))
  {
    goto LABEL_2;
  }
  sub_21579B250();
  int v10 = byte_26788C737;
  if (byte_26788C737 >= 0) {
    size_t v11 = byte_26788C737;
  }
  else {
    size_t v11 = qword_26788C728;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    char v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C780 + 1) = v11 + 1;
    unk_26788C790 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C780 = v13;
    goto LABEL_43;
  }
  char v13 = &xmmword_26788C780;
  unk_26788C790 = 0;
  xmmword_26788C780 = 0uLL;
  byte_26788C797 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C720;
    }
    else {
      char v16 = (uint64_t *)qword_26788C720;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C780, &dword_21572C000);
  __cxa_guard_release(&qword_26788C700);
LABEL_2:
  if (byte_26788C797 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C780, *((unint64_t *)&xmmword_26788C780 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C780;
    uint64_t v31 = unk_26788C790;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_21579B910(_Unwind_Exception *a1)
{
}

void sub_21579B928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21579B988(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_21579B3EC();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C738, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21579BB08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21579BB44(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_21579BBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21579BBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_21579BBFC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_21579BC10(uint64_t **a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  sub_21579B3EC();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v25 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_215760BD8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v26, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v27 = *((void *)v6 + 2);
    long long v26 = v7;
  }
  sub_21573A150(&v22, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v11, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C738, (uint64_t *)&v22, (uint64_t)v11, **a1);
  if (!v21 || !v20) {
    goto LABEL_15;
  }
  if (!v19) {
    goto LABEL_12;
  }
  if ((v18 & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    operator delete(v15);
    if (!v14) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  operator delete(v17);
  if (v16 < 0) {
    goto LABEL_29;
  }
LABEL_12:
  if (!v14) {
    goto LABEL_15;
  }
LABEL_13:
  if (v13 < 0) {
    operator delete(__p);
  }
LABEL_15:
  size_t v8 = (void **)v22;
  if (v22)
  {
    long long v9 = v23;
    int v10 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      int v10 = v22;
    }
    uint64_t v23 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v27) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v25) & 0x80000000) == 0) {
      return;
    }
LABEL_27:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v26);
  if (SHIBYTE(v25) < 0) {
    goto LABEL_27;
  }
}

void sub_21579BE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  if (*(char *)(v25 - 73) < 0) {
    operator delete(*(void **)(v25 - 96));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21579BE54(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21579BED0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21579BF40(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21579BFCC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZNumbersGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C7A0))
  {
    return qword_26788C798;
  }
  qword_26788C798 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C7A0);
  return qword_26788C798;
}

uint64_t VZDataCreateWithNumbers(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_21579C678((uint64_t)"VZDataCreateWithNumbers", a1, a3))
  {
    sub_215744D68(a2, v9);
    long long v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_21595BED8((unsigned __int8 ***)(a1 + 16), v10);
  }
  return 0;
}

void sub_21579C46C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579C474);
  }
  _Unwind_Resume(a1);
}

void sub_21579C484(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      long long v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21579E388(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      long long v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      long long v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_21579E388(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_21579E388(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21579C36CLL);
  }
  _Unwind_Resume(a1);
}

void sub_21579C49C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579C4A8);
  }
  _Unwind_Resume(a1);
}

void sub_21579C660(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21579C668);
  }
  sub_215731D80(a1);
}

BOOL sub_21579C678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C7A8))
  {
    sub_21579DFF4();
    int v7 = byte_26788C807;
    if (byte_26788C807 >= 0) {
      size_t v8 = byte_26788C807;
    }
    else {
      size_t v8 = qword_26788C7F8;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C7D8 + 1) = v8 + 1;
      unk_26788C7E8 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C7D8 = v10;
    }
    else
    {
      unk_26788C7E8 = 0;
      xmmword_26788C7D8 = 0uLL;
      char v10 = &xmmword_26788C7D8;
      byte_26788C7EF = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C7D8, &dword_21572C000);
        __cxa_guard_release(&qword_26788C7A8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C7F0;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C7F0;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C7EF < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C7D8, *((unint64_t *)&xmmword_26788C7D8 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C7D8;
    uint64_t v15 = unk_26788C7E8;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21579C9AC(_Unwind_Exception *a1)
{
}

void sub_21579C9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetNumbers(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetNumbers", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_21595C738(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_21579E72C(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_21579E8E8((uint64_t)&v20);
  uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)uint64_t v6 = &unk_26C658660;
    *((void *)v6 + 1) = &unk_26C6586B0;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_21579E72C(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_21579CC94(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21579E72C((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21579E72C((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x21579CC70);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21579E72C((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZNumbersCreate(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  char v31 = &v32;
  uint64_t v32 = a4;
  sub_21595B928(a1, a2, a3, (uint64_t)&v20);
  int v5 = v30;
  if (v30)
  {
    sub_21579E8E8((uint64_t)&v20);
    uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      uint64_t v4 = v6;
      v6[1] = v20;
      long long v20 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)uint64_t v6 = &unk_26C658660;
      *((void *)v6 + 1) = &unk_26C6586B0;
      goto LABEL_25;
    }
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_21579E9B4(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_24;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (v12 && v11 < 0)
    {
      operator delete(v10);
LABEL_24:
      uint64_t v4 = 0;
    }
  }
  else
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_21579E9B4(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
  }
LABEL_25:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    return 0;
  }
  return v4;
}

void sub_21579D460(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_21579E9B4((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_21579E9B4((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x21579D440);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_21579E9B4((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZNumbersGetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_21579C678((uint64_t)"VZNumbersGetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 48);
  }
  return result;
}

uint64_t VZNumbersGetCount(uint64_t a1)
{
  BOOL v2 = sub_21579C678((uint64_t)"VZNumbersGetCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 56);
  }
  return result;
}

uint64_t VZNumbersGetByteCount(uint64_t a1)
{
  BOOL v2 = sub_21579C678((uint64_t)"VZNumbersGetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 40);
  }
  return result;
}

uint64_t VZNumbersGetValueType(uint64_t a1)
{
  if (sub_21579C678((uint64_t)"VZNumbersGetValueType", a1, 0)) {
    return 255;
  }
  else {
    return ***(unsigned __int8 ***)(a1 + 16);
  }
}

uint64_t sub_21579DB04(uint64_t result)
{
  return result;
}

uint64_t sub_21579DB14(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_21579DB50()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C7A0))
  {
    return qword_26788C798;
  }
  qword_26788C798 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C7A0);
  return qword_26788C798;
}

void *sub_21579DBB4(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6586F8, 0);
  if (result)
  {
    char v17 = (unsigned __int8 **)result[2];
    char v18 = **(unsigned __int8 ***)(a1 + 16);
    int v19 = *v18;
    long long v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      unsigned char v21[2] = v20;
      return (void *)sub_215D17264(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_21579DCB4(uint64_t a1)
{
  sub_21579E190();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_21579DF08(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_21579E190();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C808, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_21579DFE8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_21579DFF4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7B0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C7B0))
  {
    return;
  }
  sub_21579E190();
  int v0 = byte_26788C81F;
  if (byte_26788C81F >= 0) {
    size_t v1 = byte_26788C81F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C808 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788C7F8 = v1 + 6;
    unk_26788C800 = v5 | 0x8000000000000000;
    qword_26788C7F0 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    long long v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C7F8 = 0;
  unk_26788C800 = 0;
  qword_26788C7F0 = 0x2074736E6F63;
  byte_26788C807 = v1 + 6;
  long long v3 = (char *)&qword_26788C7F0 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C808;
    }
    else {
      int v7 = (long long *)xmmword_26788C808;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C7F0, &dword_21572C000);

  __cxa_guard_release(&qword_26788C7B0);
}

void sub_21579E178(_Unwind_Exception *a1)
{
}

void sub_21579E190()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C7B8))
  {
    sub_21579E264();
    if (byte_26788C84F < 0)
    {
      sub_215738B0C(&xmmword_26788C808, (void *)xmmword_26788C838, *((unint64_t *)&xmmword_26788C838 + 1));
    }
    else
    {
      xmmword_26788C808 = xmmword_26788C838;
      unk_26788C818 = unk_26788C848;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C808, &dword_21572C000);
    __cxa_guard_release(&qword_26788C7B8);
  }
}

void sub_21579E24C(_Unwind_Exception *a1)
{
}

void sub_21579E264()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C7C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZNumbers]", qword_26788C820);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C820, &dword_21572C000);
    __cxa_guard_release(&qword_26788C7C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C7C8))
  {
    sub_215E19DF4((uint64_t)qword_26788C820, (uint64_t)&xmmword_26788C838);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C838, &dword_21572C000);
    __cxa_guard_release(&qword_26788C7C8);
  }
}

void sub_21579E358(_Unwind_Exception *a1)
{
}

void sub_21579E370(_Unwind_Exception *a1)
{
}

void sub_21579E388(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C7D0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C7D0))
  {
    goto LABEL_2;
  }
  sub_21579DFF4();
  int v10 = byte_26788C807;
  if (byte_26788C807 >= 0) {
    size_t v11 = byte_26788C807;
  }
  else {
    size_t v11 = qword_26788C7F8;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C850 + 1) = v11 + 1;
    unk_26788C860 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C850 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788C850;
  unk_26788C860 = 0;
  xmmword_26788C850 = 0uLL;
  byte_26788C867 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C7F0;
    }
    else {
      char v16 = (uint64_t *)qword_26788C7F0;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C850, &dword_21572C000);
  __cxa_guard_release(&qword_26788C7D0);
LABEL_2:
  if (byte_26788C867 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C850, *((unint64_t *)&xmmword_26788C850 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C850;
    uint64_t v31 = unk_26788C860;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_21579E6B4(_Unwind_Exception *a1)
{
}

void sub_21579E6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_21579E72C(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_21579E190();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C808, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_21579E8AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_21579E8E8(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_21579E970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21579E984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_21579E9A0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_21579E9B4(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_21579E190();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_21574ABA8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v29 = v6[2];
    long long v28 = v7;
  }
  size_t v8 = sub_215760BD8();
  if (*((char *)v8 + 23) < 0)
  {
    sub_215738B0C(&v30, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    uint64_t v31 = *((void *)v8 + 2);
    long long v30 = v9;
  }
  sub_21573A150(&v24, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v13, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C808, (uint64_t *)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22) {
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v17);
    if (!v16) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v16) {
    goto LABEL_18;
  }
LABEL_16:
  if (v15 < 0) {
    operator delete(__p);
  }
LABEL_18:
  int v10 = (void **)v24;
  if (v24)
  {
    char v11 = v25;
    char v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = v24;
    }
    uint64_t v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0) {
    goto LABEL_32;
  }
}

void sub_21579EBF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

uint64_t sub_21579EC9C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21579ED18(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21579ED88(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21579EE14(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21579EEA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21579EF1C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_21579EF8C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_21579F018(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZPoints2GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C870, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C870))
  {
    return qword_26788C868;
  }
  qword_26788C868 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C870);
  return qword_26788C868;
}

uint64_t VZPoints3GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C880, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C880))
  {
    return qword_26788C878;
  }
  qword_26788C878 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C880);
  return qword_26788C878;
}

uint64_t VZDataCreateWithPoints2(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (!sub_21579F728((uint64_t)"VZDataCreateWithPoints2", a1, a3))
  {
    sub_215744D68(a2, v8);
    uint64_t v6 = &v7;
    uint64_t v7 = a3;
    sub_215748384(v9, (uint64_t)v8);
    sub_21595E33C();
  }
  return 0;
}

void sub_21579F51C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579F524);
  }
  _Unwind_Resume(a1);
}

void sub_21579F534(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157A3444(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      long long v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157A3444(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_2157A3444(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21579F41CLL);
  }
  _Unwind_Resume(a1);
}

void sub_21579F54C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579F558);
  }
  _Unwind_Resume(a1);
}

void sub_21579F710(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x21579F718);
  }
  sub_215731D80(a1);
}

BOOL sub_21579F728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C888, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C888))
  {
    sub_2157A30B0();
    int v7 = byte_26788C917;
    if (byte_26788C917 >= 0) {
      size_t v8 = byte_26788C917;
    }
    else {
      size_t v8 = qword_26788C908;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C8E8 + 1) = v8 + 1;
      unk_26788C8F8 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C8E8 = v10;
    }
    else
    {
      unk_26788C8F8 = 0;
      xmmword_26788C8E8 = 0uLL;
      char v10 = &xmmword_26788C8E8;
      byte_26788C8FF = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C8E8, &dword_21572C000);
        __cxa_guard_release(&qword_26788C888);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C900;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C900;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C8FF < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C8E8, *((unint64_t *)&xmmword_26788C8E8 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C8E8;
    uint64_t v15 = unk_26788C8F8;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_21579FA5C(_Unwind_Exception *a1)
{
}

void sub_21579FA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataCreateWithPoints3(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (!sub_2157A006C((uint64_t)"VZDataCreateWithPoints3", a1, a3))
  {
    sub_215744D68(a2, v8);
    uint64_t v6 = &v7;
    uint64_t v7 = a3;
    sub_215748384(v9, (uint64_t)v8);
    sub_21595F1C8();
  }
  return 0;
}

void sub_21579FE60(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579FE68);
  }
  _Unwind_Resume(a1);
}

void sub_21579FE78(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157A3B7C(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      long long v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157A3B7C(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_2157A3B7C(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x21579FD60);
  }
  _Unwind_Resume(a1);
}

void sub_21579FE90(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x21579FE9CLL);
  }
  _Unwind_Resume(a1);
}

void sub_2157A0054(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157A005CLL);
  }
  sub_215731D80(a1);
}

BOOL sub_2157A006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8B8))
  {
    sub_2157A37E8();
    int v7 = byte_26788C9A7;
    if (byte_26788C9A7 >= 0) {
      size_t v8 = byte_26788C9A7;
    }
    else {
      size_t v8 = qword_26788C998;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788C978 + 1) = v8 + 1;
      unk_26788C988 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788C978 = v10;
    }
    else
    {
      unk_26788C988 = 0;
      xmmword_26788C978 = 0uLL;
      char v10 = &xmmword_26788C978;
      byte_26788C98F = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C978, &dword_21572C000);
        __cxa_guard_release(&qword_26788C8B8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788C990;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788C990;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788C98F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788C978, *((unint64_t *)&xmmword_26788C978 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788C978;
    uint64_t v15 = unk_26788C988;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157A03A0(_Unwind_Exception *a1)
{
}

void sub_2157A03B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetPoints2(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetPoints2", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_215960194(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157A3F20(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_2157A40DC((uint64_t)&v20);
  uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)uint64_t v6 = &unk_26C658758;
    *((void *)v6 + 1) = &unk_26C6587A8;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157A3F20(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_2157A0688(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157A3F20((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157A3F20((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157A0664);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157A3F20((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZDataGetPoints3(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetPoints3", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(_OWORD **)(a1 + 568);
  if (v4) {
    return v4;
  }
  char v31 = &v32;
  uint64_t v32 = a2;
  sub_21596188C(a1 + 32, (uint64_t)&v20);
  int v5 = v30;
  if (!v30)
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157A41A8(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    goto LABEL_28;
  }
  sub_2157A4364((uint64_t)&v20);
  uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
  if (v6)
  {
    uint64_t v4 = v6;
    v6[1] = v20;
    long long v20 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(void *)uint64_t v6 = &unk_26C658850;
    *((void *)v6 + 1) = &unk_26C6588A0;
  }
  else
  {
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157A41A8(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      uint64_t v4 = 0;
      if (!v12 || (v11 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      operator delete(v10);
    }
    uint64_t v4 = 0;
  }
LABEL_28:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + 568) = v4;
  return v4;
}

void sub_2157A0E88(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157A41A8((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157A41A8((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157A0E64);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157A41A8((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZPoints2Create(void *a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  char v31 = &v32;
  uint64_t v32 = a4;
  sub_21595D854(a1, a2, a3, (uint64_t)&v20);
  int v5 = v30;
  if (v30)
  {
    sub_2157A40DC((uint64_t)&v20);
    uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      uint64_t v4 = v6;
      v6[1] = v20;
      long long v20 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)uint64_t v6 = &unk_26C658758;
      *((void *)v6 + 1) = &unk_26C6587A8;
      goto LABEL_25;
    }
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157A4430(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_24;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (v12 && v11 < 0)
    {
      operator delete(v10);
LABEL_24:
      uint64_t v4 = 0;
    }
  }
  else
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157A4430(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
  }
LABEL_25:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    return 0;
  }
  return v4;
}

void sub_2157A1654(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157A4430((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157A4430((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157A1634);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157A4430((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

_OWORD *VZPoints3Create(void *a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  char v31 = &v32;
  uint64_t v32 = a4;
  sub_21595DDC8(a1, a2, a3, (uint64_t)&v20);
  int v5 = v30;
  if (v30)
  {
    sub_2157A4364((uint64_t)&v20);
    uint64_t v6 = operator new(0x28uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      uint64_t v4 = v6;
      v6[1] = v20;
      long long v20 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(void *)uint64_t v6 = &unk_26C658850;
      *((void *)v6 + 1) = &unk_26C6588A0;
      goto LABEL_25;
    }
    LOBYTE(v9) = 0;
    char v19 = 0;
    sub_2157A4718(&v31, (uint64_t)&v9);
    if (!v19 || !v18) {
      goto LABEL_24;
    }
    if (v17)
    {
      if (v16 < 0) {
        operator delete(__p);
      }
      if (v14 < 0) {
        operator delete(v13);
      }
    }
    uint64_t v4 = 0;
    if (v12 && v11 < 0)
    {
      operator delete(v10);
LABEL_24:
      uint64_t v4 = 0;
    }
  }
  else
  {
    long long v9 = v20;
    sub_215741BFC(&v10, &v21);
    char v19 = 1;
    sub_2157A4718(&v31, (uint64_t)&v9);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
  }
LABEL_25:
  if (v30)
  {
    int v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
    if (*((void *)&v20 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
    }
    if (v23 && v22 < 0) {
      operator delete((void *)v21);
    }
  }
  if (!v5) {
    return 0;
  }
  return v4;
}

void sub_2157A1E20(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if (*(unsigned char *)(v67 - 72))
  {
    uint64_t v70 = *(std::__shared_weak_count **)(v67 - 184);
    if (v70 && !atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  else if (*(unsigned char *)(v67 - 80))
  {
    if (*(unsigned char *)(v67 - 88))
    {
      if (*(char *)(v67 - 89) < 0) {
        operator delete(*(void **)(v67 - 112));
      }
      if (*(char *)(v67 - 121) < 0) {
        operator delete(*(void **)(v67 - 144));
      }
    }
    if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
      operator delete(*(void **)(v67 - 176));
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    char v72 = std::logic_error::what(&a10);
    size_t v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      uint64_t v74 = (const char *)v73;
      if (v73 >= 0x17)
      {
        uint64_t v83 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17) {
          uint64_t v83 = v73 | 7;
        }
        uint64_t v84 = v83 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v83 + 1);
        __dst.__imp_.__imp_ = v74;
        *(void *)&a37 = v84 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v73;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v73)
        {
LABEL_53:
          v74[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157A4718((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v72, (size_t)v74);
      goto LABEL_53;
    }
LABEL_103:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157A4718((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157A1E00);
  }
  long long v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v76);
  a37 = *((_OWORD *)v76 + 1);
  uint64_t v78 = *((void *)v76 + 4);
  uint64_t v77 = *((void *)v76 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v78;
  a39 = v77;
  if (v77) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v79 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v79 = *(const char **)v79;
  }
  size_t v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_103;
  }
  uint64_t v81 = (const char *)v80;
  if (v80 >= 0x17)
  {
    uint64_t v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17) {
      uint64_t v85 = v80 | 7;
    }
    uint64_t v86 = v85 + 1;
    uint64_t v82 = (std::logic_error_vtbl *)operator new(v85 + 1);
    a10.__imp_.__imp_ = v81;
    a11 = v86 | 0x8000000000000000;
    a10.__vftable = v82;
  }
  else
  {
    HIBYTE(a11) = v80;
    uint64_t v82 = (std::logic_error_vtbl *)&a10;
    if (!v80)
    {
LABEL_80:
      v81[(void)v82] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157A4718((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v82, v79, (size_t)v81);
  goto LABEL_80;
}

uint64_t VZPoints2GetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_21579F728((uint64_t)"VZPoints2GetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 48);
  }
  return result;
}

uint64_t VZPoints3GetBytePtr(uint64_t a1)
{
  BOOL v2 = sub_2157A006C((uint64_t)"VZPoints3GetBytePtr", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 48);
  }
  return result;
}

uint64_t VZPoints2GetCount(uint64_t a1)
{
  BOOL v2 = sub_21579F728((uint64_t)"VZPoints2GetCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 56) >> 1;
  }
  return result;
}

unint64_t VZPoints3GetCount(uint64_t a1)
{
  BOOL v2 = sub_2157A006C((uint64_t)"VZPoints3GetCount", a1, 0);
  unint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 56) / 3uLL;
  }
  return result;
}

uint64_t VZPoints2GetByteCount(uint64_t a1)
{
  BOOL v2 = sub_21579F728((uint64_t)"VZPoints2GetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 40);
  }
  return result;
}

uint64_t VZPoints3GetByteCount(uint64_t a1)
{
  BOOL v2 = sub_2157A006C((uint64_t)"VZPoints3GetByteCount", a1, 0);
  uint64_t result = 0;
  if (!v2) {
    return *(void *)(**(void **)(a1 + 16) + 40);
  }
  return result;
}

uint64_t VZPoints2GetValueType(uint64_t a1)
{
  if (sub_21579F728((uint64_t)"VZPoints2GetValueType", a1, 0)) {
    return 255;
  }
  else {
    return ***(unsigned __int8 ***)(a1 + 16);
  }
}

uint64_t VZPoints3GetValueType(uint64_t a1)
{
  if (sub_2157A006C((uint64_t)"VZPoints3GetValueType", a1, 0)) {
    return 255;
  }
  else {
    return ***(unsigned __int8 ***)(a1 + 16);
  }
}

uint64_t sub_2157A2610(uint64_t result)
{
  return result;
}

uint64_t sub_2157A2620(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157A265C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C870, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C870))
  {
    return qword_26788C868;
  }
  qword_26788C868 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C870);
  return qword_26788C868;
}

void *sub_2157A26C0(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6587F0, 0);
  if (result)
  {
    char v17 = (unsigned __int8 **)result[2];
    char v18 = **(unsigned __int8 ***)(a1 + 16);
    int v19 = *v18;
    long long v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      unsigned char v21[2] = v20;
      return (void *)sub_215D17264(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_2157A27C0(uint64_t a1)
{
  sub_2157A324C();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157A2A74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_215733368((uint64_t)&v36);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157A324C();
  sub_215732BF4(v34, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C918, v34, 0);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157A2B54(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

uint64_t sub_2157A2B60(uint64_t result)
{
  return result;
}

uint64_t sub_2157A2B70(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 32), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157A2BAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C880, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C880))
  {
    return qword_26788C878;
  }
  qword_26788C878 = sub_21573DD88();
  __cxa_guard_release(&qword_26788C880);
  return qword_26788C878;
}

void *sub_2157A2C10(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6588E8, 0);
  if (result)
  {
    char v17 = (unsigned __int8 **)result[2];
    char v18 = **(unsigned __int8 ***)(a1 + 16);
    int v19 = *v18;
    long long v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      unsigned char v21[2] = v20;
      return (void *)sub_215D17264(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_2157A2D10(uint64_t a1)
{
  sub_2157A3984();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157A2FC4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_215733368((uint64_t)&v36);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157A3984();
  sub_215732BF4(v34, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788C9A8, v34, 0);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157A30A4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_2157A30B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C890, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C890))
  {
    return;
  }
  sub_2157A324C();
  int v0 = byte_26788C92F;
  if (byte_26788C92F >= 0) {
    size_t v1 = byte_26788C92F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C918 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788C908 = v1 + 6;
    unk_26788C910 = v5 | 0x8000000000000000;
    qword_26788C900 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    long long v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C908 = 0;
  unk_26788C910 = 0;
  qword_26788C900 = 0x2074736E6F63;
  byte_26788C917 = v1 + 6;
  long long v3 = (char *)&qword_26788C900 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C918;
    }
    else {
      int v7 = (long long *)xmmword_26788C918;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C900, &dword_21572C000);

  __cxa_guard_release(&qword_26788C890);
}

void sub_2157A3234(_Unwind_Exception *a1)
{
}

void sub_2157A324C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C898, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C898))
  {
    sub_2157A3320();
    if (byte_26788C95F < 0)
    {
      sub_215738B0C(&xmmword_26788C918, (void *)xmmword_26788C948, *((unint64_t *)&xmmword_26788C948 + 1));
    }
    else
    {
      xmmword_26788C918 = xmmword_26788C948;
      unk_26788C928 = unk_26788C958;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C918, &dword_21572C000);
    __cxa_guard_release(&qword_26788C898);
  }
}

void sub_2157A3308(_Unwind_Exception *a1)
{
}

void sub_2157A3320()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPoints2]", qword_26788C930);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C930, &dword_21572C000);
    __cxa_guard_release(&qword_26788C8A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8A8))
  {
    sub_215E19DF4((uint64_t)qword_26788C930, (uint64_t)&xmmword_26788C948);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C948, &dword_21572C000);
    __cxa_guard_release(&qword_26788C8A8);
  }
}

void sub_2157A3414(_Unwind_Exception *a1)
{
}

void sub_2157A342C(_Unwind_Exception *a1)
{
}

void sub_2157A3444(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8B0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C8B0))
  {
    goto LABEL_2;
  }
  sub_2157A30B0();
  int v10 = byte_26788C917;
  if (byte_26788C917 >= 0) {
    size_t v11 = byte_26788C917;
  }
  else {
    size_t v11 = qword_26788C908;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C960 + 1) = v11 + 1;
    unk_26788C970 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C960 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788C960;
  unk_26788C970 = 0;
  xmmword_26788C960 = 0uLL;
  byte_26788C977 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C900;
    }
    else {
      char v16 = (uint64_t *)qword_26788C900;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C960, &dword_21572C000);
  __cxa_guard_release(&qword_26788C8B0);
LABEL_2:
  if (byte_26788C977 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C960, *((unint64_t *)&xmmword_26788C960 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C960;
    uint64_t v31 = unk_26788C970;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_2157A3770(_Unwind_Exception *a1)
{
}

void sub_2157A3788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157A37E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C8C0))
  {
    return;
  }
  sub_2157A3984();
  int v0 = byte_26788C9BF;
  if (byte_26788C9BF >= 0) {
    size_t v1 = byte_26788C9BF;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788C9A8 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    long long v6 = (char *)operator new(v4 + 1);
    qword_26788C998 = v1 + 6;
    unk_26788C9A0 = v5 | 0x8000000000000000;
    qword_26788C990 = (uint64_t)v6;
    *(_DWORD *)long long v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    long long v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788C998 = 0;
  unk_26788C9A0 = 0;
  qword_26788C990 = 0x2074736E6F63;
  byte_26788C9A7 = v1 + 6;
  long long v3 = (char *)&qword_26788C990 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788C9A8;
    }
    else {
      int v7 = (long long *)xmmword_26788C9A8;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788C990, &dword_21572C000);

  __cxa_guard_release(&qword_26788C8C0);
}

void sub_2157A396C(_Unwind_Exception *a1)
{
}

void sub_2157A3984()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8C8))
  {
    sub_2157A3A58();
    if (byte_26788C9EF < 0)
    {
      sub_215738B0C(&xmmword_26788C9A8, (void *)xmmword_26788C9D8, *((unint64_t *)&xmmword_26788C9D8 + 1));
    }
    else
    {
      xmmword_26788C9A8 = xmmword_26788C9D8;
      unk_26788C9B8 = unk_26788C9E8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C9A8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C8C8);
  }
}

void sub_2157A3A40(_Unwind_Exception *a1)
{
}

void sub_2157A3A58()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8D0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPoints3]", qword_26788C9C0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788C9C0, &dword_21572C000);
    __cxa_guard_release(&qword_26788C8D0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788C8D8))
  {
    sub_215E19DF4((uint64_t)qword_26788C9C0, (uint64_t)&xmmword_26788C9D8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C9D8, &dword_21572C000);
    __cxa_guard_release(&qword_26788C8D8);
  }
}

void sub_2157A3B4C(_Unwind_Exception *a1)
{
}

void sub_2157A3B64(_Unwind_Exception *a1)
{
}

void sub_2157A3B7C(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788C8E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788C8E0))
  {
    goto LABEL_2;
  }
  sub_2157A37E8();
  int v10 = byte_26788C9A7;
  if (byte_26788C9A7 >= 0) {
    size_t v11 = byte_26788C9A7;
  }
  else {
    size_t v11 = qword_26788C998;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788C9F0 + 1) = v11 + 1;
    unk_26788CA00 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788C9F0 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788C9F0;
  unk_26788CA00 = 0;
  xmmword_26788C9F0 = 0uLL;
  byte_26788CA07 = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788C990;
    }
    else {
      char v16 = (uint64_t *)qword_26788C990;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788C9F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788C8E0);
LABEL_2:
  if (byte_26788CA07 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788C9F0, *((unint64_t *)&xmmword_26788C9F0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788C9F0;
    uint64_t v31 = unk_26788CA00;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  int v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_2157A3EA8(_Unwind_Exception *a1)
{
}

void sub_2157A3EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157A3F20(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_2157A324C();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C918, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_2157A40A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157A40DC(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157A4164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157A4178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157A4194(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157A41A8(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_2157A3984();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C9A8, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_2157A4328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157A4364(uint64_t result)
{
  size_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157A43EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157A4400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157A441C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157A4430(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_2157A324C();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_21574ABA8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v29 = v6[2];
    long long v28 = v7;
  }
  size_t v8 = sub_215760BD8();
  if (*((char *)v8 + 23) < 0)
  {
    sub_215738B0C(&v30, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    uint64_t v31 = *((void *)v8 + 2);
    long long v30 = v9;
  }
  sub_21573A150(&v24, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v13, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C918, (uint64_t *)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22) {
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v17);
    if (!v16) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v16) {
    goto LABEL_18;
  }
LABEL_16:
  if (v15 < 0) {
    operator delete(__p);
  }
LABEL_18:
  int v10 = (void **)v24;
  if (v24)
  {
    char v11 = v25;
    char v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = v24;
    }
    uint64_t v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0) {
    goto LABEL_32;
  }
}

void sub_2157A4670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

void sub_2157A4718(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_2157A3984();
  uint64_t v4 = sub_21574AA58();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long __dst = v5;
  }
  uint64_t v6 = sub_21574ABA8();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v29 = v6[2];
    long long v28 = v7;
  }
  size_t v8 = sub_215760BD8();
  if (*((char *)v8 + 23) < 0)
  {
    sub_215738B0C(&v30, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    uint64_t v31 = *((void *)v8 + 2);
    long long v30 = v9;
  }
  sub_21573A150(&v24, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v13, a2);
  sub_21574086C((uint64_t *)&xmmword_26788C9A8, (uint64_t *)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22) {
    goto LABEL_18;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_15;
    }
LABEL_34:
    operator delete(v17);
    if (!v16) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0) {
    goto LABEL_34;
  }
LABEL_15:
  if (!v16) {
    goto LABEL_18;
  }
LABEL_16:
  if (v15 < 0) {
    operator delete(__p);
  }
LABEL_18:
  int v10 = (void **)v24;
  if (v24)
  {
    char v11 = v25;
    char v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = v24;
    }
    uint64_t v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0) {
        return;
      }
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0) {
    goto LABEL_32;
  }
}

void sub_2157A4958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

uint64_t *sub_2157A4A00(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  return a1;
}

void sub_2157A4A5C()
{
}

void sub_2157A4A70()
{
}

uint64_t VZProtocolVersionGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788CA20))
  {
    return qword_26788CA18;
  }
  qword_26788CA18 = sub_21573DD88();
  __cxa_guard_release(&qword_26788CA20);
  return qword_26788CA18;
}

uint64_t VZProtocolVersionGetCurrent()
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v0 = &xmmword_26788C000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA10))
  {
    uint64_t v2 = operator new(0x20uLL, MEMORY[0x263F8C180]);
    if (v2)
    {
      *((void *)v2 + 2) = 0x500000001;
      *((void *)v2 + 3) = 0x100000000;
      *(void *)uint64_t v2 = &unk_26C658948;
      *((void *)v2 + 1) = &unk_26C658998;
      qword_26788CA08 = (uint64_t)v2;
      atomic_fetch_add((atomic_uint *volatile)v2 + 7, 1u);
      (*(void (**)(void *))(*(void *)v2 + 24))(v2);
    }
    else
    {
      long long v3 = (uint64_t *)sub_2157A5630();
      uint64_t v4 = sub_2157A584C();
      if (*((char *)v4 + 23) < 0)
      {
        sub_215738B0C(&__dst, *(void **)v4, *((void *)v4 + 1));
      }
      else
      {
        long long v5 = *v4;
        uint64_t v23 = *((void *)v4 + 2);
        long long __dst = v5;
      }
      sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
      v9[0] = 0;
      char v19 = 0;
      sub_21574086C(v3, (uint64_t *)&v20, (uint64_t)v9, 0);
      if (v19 && v18)
      {
        if (v17)
        {
          if (v16 < 0) {
            operator delete(__p);
          }
          if (v14 < 0) {
            operator delete(v13);
          }
        }
        if (v12 && v11 < 0) {
          operator delete(v10);
        }
      }
      uint64_t v6 = (uint64_t)v20;
      if (v20)
      {
        uint64_t v7 = v21;
        size_t v8 = v20;
        if ((void *)v21 != v20)
        {
          do
          {
            if (*(char *)(v7 - 1) < 0) {
              operator delete(*(void **)(v7 - 24));
            }
            v7 -= 24;
          }
          while (v7 != v6);
          size_t v8 = v20;
        }
        uint64_t v21 = v6;
        operator delete(v8);
      }
      if (SHIBYTE(v23) < 0) {
        operator delete((void *)__dst);
      }
      qword_26788CA08 = 0;
    }
    __cxa_atexit((void (*)(void *))sub_2157A4A00, &qword_26788CA08, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA10);
    int v0 = &xmmword_26788C000;
  }
  return *((void *)v0 + 321);
}

void sub_2157A4D58(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

uint64_t VZProtocolVersionGetMajor(uint64_t a1)
{
  if (sub_2157A4DAC((uint64_t)"VZProtocolVersionGetMajor", a1)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 16);
  }
}

BOOL sub_2157A4DAC(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA28))
  {
    sub_2157A5A68();
    int v5 = byte_26788CA67;
    if (byte_26788CA67 >= 0) {
      size_t v6 = byte_26788CA67;
    }
    else {
      size_t v6 = qword_26788CA58;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      size_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788CA38 + 1) = v6 + 1;
      unk_26788CA48 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788CA38 = v8;
    }
    else
    {
      unk_26788CA48 = 0;
      xmmword_26788CA38 = 0uLL;
      size_t v8 = &xmmword_26788CA38;
      byte_26788CA4F = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CA38, &dword_21572C000);
        __cxa_guard_release(&qword_26788CA28);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &qword_26788CA50;
    }
    else {
      char v11 = (uint64_t *)qword_26788CA50;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788CA4F < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788CA38, *((unint64_t *)&xmmword_26788CA38 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788CA38;
    uint64_t v13 = unk_26788CA48;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157A50DC(_Unwind_Exception *a1)
{
}

void sub_2157A50F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZProtocolVersionGetMinor(uint64_t a1)
{
  if (sub_2157A4DAC((uint64_t)"VZProtocolVersionGetMinor", a1)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 20);
  }
}

uint64_t VZProtocolVersionGetRevision(uint64_t a1)
{
  if (sub_2157A4DAC((uint64_t)"VZProtocolVersionGetRevision", a1)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 24);
  }
}

uint64_t sub_2157A51C0(uint64_t result)
{
  return result;
}

uint64_t sub_2157A51D0(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 28), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157A520C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788CA20))
  {
    return qword_26788CA18;
  }
  qword_26788CA18 = sub_21573DD88();
  __cxa_guard_release(&qword_26788CA20);
  return qword_26788CA18;
}

void *sub_2157A5270(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6589E0, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]
  }
                   && *(_DWORD *)(a1 + 24) == (unint64_t)*((unsigned int *)result + 6));
  return result;
}

void sub_2157A5308(uint64_t a1)
{
  sub_2157A5630();
  uint64_t v2 = a1;
  operator new();
}

void sub_2157A5554(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v23 = sub_2157A5630();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x2157A5538);
}

uint64_t sub_2157A5624(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 28));
}

long long *sub_2157A5630()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884660, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884660))
  {
    return &xmmword_267884648;
  }
  size_t v1 = (char *)sub_2157A5718();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884648, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884658 = *((void *)v1 + 2);
    xmmword_267884648 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884648, &dword_21572C000);
  __cxa_guard_release(&qword_267884660);
  return &xmmword_267884648;
}

void sub_2157A5700(_Unwind_Exception *a1)
{
}

void *sub_2157A5718()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884680, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884680))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZProtocolVersion]", qword_267884668);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884668, &dword_21572C000);
    __cxa_guard_release(&qword_267884680);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678846A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678846A0))
  {
    return &unk_267884688;
  }
  sub_215E19DF4((uint64_t)qword_267884668, (uint64_t)&unk_267884688);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884688, &dword_21572C000);
  __cxa_guard_release(&qword_2678846A0);
  return &unk_267884688;
}

void sub_2157A581C(_Unwind_Exception *a1)
{
}

void sub_2157A5834(_Unwind_Exception *a1)
{
}

long long *sub_2157A584C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678846C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678846C0))
  {
    return &xmmword_2678846A8;
  }
  size_t v1 = (char *)sub_2157A5934();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678846A8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678846B8 = *((void *)v1 + 2);
    xmmword_2678846A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678846A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678846C0);
  return &xmmword_2678846A8;
}

void sub_2157A591C(_Unwind_Exception *a1)
{
}

void *sub_2157A5934()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678846E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678846E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::kio::Version]", qword_2678846C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678846C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678846E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884700, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884700))
  {
    return &unk_2678846E8;
  }
  sub_215E19DF4((uint64_t)qword_2678846C8, (uint64_t)&unk_2678846E8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678846E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884700);
  return &unk_2678846E8;
}

void sub_2157A5A38(_Unwind_Exception *a1)
{
}

void sub_2157A5A50(_Unwind_Exception *a1)
{
}

void sub_2157A5A68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA30))
  {
    int v0 = sub_2157A5630();
    size_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      size_t v8 = (char *)operator new(v6 + 1);
      qword_26788CA58 = v3 + 6;
      unk_26788CA60 = v7 | 0x8000000000000000;
      qword_26788CA50 = (uint64_t)v8;
      *(_DWORD *)size_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      int v5 = v8 + 6;
    }
    else
    {
      qword_26788CA58 = 0;
      unk_26788CA60 = 0;
      qword_26788CA50 = 0x2074736E6F63;
      byte_26788CA67 = v3 + 6;
      int v5 = (char *)&qword_26788CA50 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788CA50, &dword_21572C000);
        __cxa_guard_release(&qword_26788CA30);
        return;
      }
    }
    if (v2 >= 0) {
      uint64_t v9 = v1;
    }
    else {
      uint64_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157A5BE4(_Unwind_Exception *a1)
{
}

uint64_t sub_2157A5BFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }
  return a1;
}

uint64_t sub_2157A5C40(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (result) {
    return MEMORY[0x2166C4D20](result, 0x1000C4072FAA15ELL);
  }
  return result;
}

void sub_2157A5C78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157A5CDC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v2) {
    MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZSE3GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA70, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788CA70))
  {
    return qword_26788CA68;
  }
  qword_26788CA68 = sub_21573DD88();
  __cxa_guard_release(&qword_26788CA70);
  return qword_26788CA68;
}

uint64_t VZSE3CreateWithAlgebraF(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_2157A60D8((uint64_t)"VZSE3CreateWithAlgebraF", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    BOOL v6 = sub_2157A60D8((uint64_t)"VZSE3CreateWithAlgebraF", a2, 0);
    uint64_t result = 0;
    if (!v6)
    {
      if ((a1
         || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))&& (a2|| !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8)))
      {
        sub_21596544C();
      }
      abort();
    }
  }
  return result;
}

void sub_2157A60CC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

BOOL sub_2157A60D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA78))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA80, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788CA80))
    {
      *((void *)&xmmword_26788CB90 + 1) = 0x3233746100;
      unk_26788CBA0 = 0xD00000000000000;
      LODWORD(xmmword_26788CB90) = 1936617315;
      WORD2(xmmword_26788CB90) = 8308;
      *(_DWORD *)((char *)&xmmword_26788CB90 + 6) = 1634692198;
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CB90, &dword_21572C000);
      __cxa_guard_release(&qword_26788CA80);
    }
    int v7 = byte_26788CBA7;
    if (byte_26788CBA7 >= 0) {
      size_t v8 = byte_26788CBA7;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788CB90 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788CB78 + 1) = v8 + 1;
      unk_26788CB88 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788CB78 = v10;
    }
    else
    {
      unk_26788CB88 = 0;
      xmmword_26788CB78 = 0uLL;
      uint64_t v10 = &xmmword_26788CB78;
      byte_26788CB8F = v8 + 1;
      if (!v8)
      {
LABEL_51:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CB78, &dword_21572C000);
        __cxa_guard_release(&qword_26788CA78);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      uint64_t v13 = &xmmword_26788CB90;
    }
    else {
      uint64_t v13 = (long long *)xmmword_26788CB90;
    }
    memmove(v10, v13, v8);
    goto LABEL_51;
  }
LABEL_3:
  if (byte_26788CB8F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788CB78, *((unint64_t *)&xmmword_26788CB78 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788CB78;
    uint64_t v15 = unk_26788CB88;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157A6490(_Unwind_Exception *a1)
{
}

void sub_2157A64A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZSE3CreateWithAlgebraD(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  BOOL v4 = sub_2157A6818((uint64_t)"VZSE3CreateWithAlgebraD", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    BOOL v6 = sub_2157A6818((uint64_t)"VZSE3CreateWithAlgebraD", a2, 0);
    uint64_t result = 0;
    if (!v6)
    {
      if ((a1
         || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))&& (a2|| !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8)))
      {
        sub_2159654E4();
      }
      abort();
    }
  }
  return result;
}

void sub_2157A680C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

BOOL sub_2157A6818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAB8))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAC0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788CAC0))
    {
      *((void *)&xmmword_26788CC50 + 1) = 0x3436746100;
      unk_26788CC60 = 0xD00000000000000;
      LODWORD(xmmword_26788CC50) = 1936617315;
      WORD2(xmmword_26788CC50) = 8308;
      *(_DWORD *)((char *)&xmmword_26788CC50 + 6) = 1634692198;
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC50, &dword_21572C000);
      __cxa_guard_release(&qword_26788CAC0);
    }
    int v7 = byte_26788CC67;
    if (byte_26788CC67 >= 0) {
      size_t v8 = byte_26788CC67;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788CC50 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788CC38 + 1) = v8 + 1;
      unk_26788CC48 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788CC38 = v10;
    }
    else
    {
      unk_26788CC48 = 0;
      xmmword_26788CC38 = 0uLL;
      uint64_t v10 = &xmmword_26788CC38;
      byte_26788CC4F = v8 + 1;
      if (!v8)
      {
LABEL_51:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC38, &dword_21572C000);
        __cxa_guard_release(&qword_26788CAB8);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      uint64_t v13 = &xmmword_26788CC50;
    }
    else {
      uint64_t v13 = (long long *)xmmword_26788CC50;
    }
    memmove(v10, v13, v8);
    goto LABEL_51;
  }
LABEL_3:
  if (byte_26788CC4F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788CC38, *((unint64_t *)&xmmword_26788CC38 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788CC38;
    uint64_t v15 = unk_26788CC48;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157A6BD0(_Unwind_Exception *a1)
{
}

void sub_2157A6BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

_DWORD *VZSE3CreateWithAffine3x4F(int a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  if (sub_2157A60D8((uint64_t)"VZSE3CreateWithAffine3x4F", (uint64_t)a2, a4)) {
    return 0;
  }
  if (!a2
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  char v37 = &v38;
  uint64_t v38 = a4;
  sub_215965584(a1, a2, a3, (uint64_t)&v26, v8, v9);
  int v10 = v36;
  if (!v36)
  {
    long long v15 = v26;
    sub_215741BFC(&v16, &v27);
    char v25 = 1;
    sub_2157A9524(&v37, (uint64_t)&v15);
    if (!v25 || !v24) {
      goto LABEL_29;
    }
    if (v23)
    {
      if (v22 < 0) {
        operator delete(__p);
      }
      if (v20 < 0) {
        operator delete(v19);
      }
    }
    if (!v18 || (v17 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  sub_2157A98D8((uint64_t)&v26);
  uint64_t v11 = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (!v11)
  {
    LOBYTE(v15) = 0;
    char v25 = 0;
    sub_2157A9524(&v37, (uint64_t)&v15);
    if (!v25 || !v24) {
      goto LABEL_28;
    }
    if (v23)
    {
      if (v22 < 0) {
        operator delete(__p);
      }
      if (v20 < 0) {
        operator delete(v19);
      }
    }
    a3 = 0;
    if (!v18 || (v17 & 0x80000000) == 0) {
      goto LABEL_29;
    }
LABEL_27:
    operator delete(v16);
LABEL_28:
    a3 = 0;
    goto LABEL_29;
  }
  a3 = v11;
  uint64_t v12 = v26;
  *(void *)&long long v26 = 0;
  v11[6] = 1;
  *(void *)uint64_t v11 = &unk_26C658A40;
  *((void *)v11 + 1) = &unk_26C658A90;
  *((void *)v11 + 2) = v12;
LABEL_29:
  if (v36)
  {
    uint64_t v13 = v26;
    *(void *)&long long v26 = 0;
    if (v13)
    {
      MEMORY[0x2166C4D20](v13, 0x1000C4072FAA15ELL);
      if (v10) {
        return a3;
      }
      return 0;
    }
  }
  else if (v35)
  {
    if (v34)
    {
      if (v33 < 0) {
        operator delete(v32);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
    }
    if (v29 && v28 < 0) {
      operator delete((void *)v27);
    }
  }
  if (v10) {
    return a3;
  }
  return 0;
}

void sub_2157A6ED0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, long long a16, long long a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::runtime_error __p,int a30,__int16 a31,char a32,char a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  sub_215740ECC((uint64_t)&a37);
  sub_2157A99A4((uint64_t *)(v37 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    a9 = std::logic_error::what(&a10);
    sub_2157482C8(&__p, &a9);
    sub_2159644BC((long long *)&__p, (uint64_t)&a16);
    *(_OWORD *)(v37 - 192) = a16;
    sub_215741BFC((unsigned char *)(v37 - 176), &a17);
    *(unsigned char *)(v37 - 72) = 1;
    sub_2157A9524((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    sub_21573FF04((uint64_t)&a16);
    if (a34)
    {
      if (a33 < 0) {
        operator delete(__p.__vftable);
      }
    }
    MEMORY[0x2166C4250](&a10);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    char v41 = __cxa_get_exception_ptr(a1);
    sub_21574824C(&__p, (uint64_t)v41);
    __cxa_begin_catch(a1);
    uint64_t v42 = (const char *)(a35 + 48);
    if (*(char *)(a35 + 71) < 0) {
      uint64_t v42 = *(const char **)v42;
    }
    a9 = v42;
    sub_2157482C8(&a10, &a9);
    sub_215964DE4((long long *)&a10, (uint64_t)&a16);
    *(_OWORD *)(v37 - 192) = a16;
    sub_215741BFC((unsigned char *)(v37 - 176), &a17);
    *(unsigned char *)(v37 - 72) = 1;
    sub_2157A9524((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    sub_21573FF04((uint64_t)&a16);
    if (a15 && a14 < 0) {
      operator delete(a10.__vftable);
    }
    MEMORY[0x2166C4910](&__p);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v37 - 192) = 0;
    *(unsigned char *)(v37 - 72) = 0;
    sub_2157A9524((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    __cxa_end_catch();
  }
  JUMPOUT(0x2157A6C64);
}

_DWORD *VZSE3CreateWithAffine3x4D(int a1, int64x2_t *a2, _DWORD *a3, uint64_t a4)
{
  if (sub_2157A6818((uint64_t)"VZSE3CreateWithAffine3x4D", (uint64_t)a2, a4)) {
    return 0;
  }
  if (!a2
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  uint64_t v38 = &v39;
  uint64_t v39 = a4;
  sub_215965BA4(a1, a2, a3, (uint64_t)&v27, v8, v9, v10);
  int v11 = v37;
  if (!v37)
  {
    long long v16 = v27;
    sub_215741BFC(&v17, &v28);
    char v26 = 1;
    sub_2157AA474(&v38, (uint64_t)&v16);
    if (!v26 || !v25) {
      goto LABEL_29;
    }
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    if (!v19 || (v18 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  sub_2157A98D8((uint64_t)&v27);
  uint64_t v12 = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (!v12)
  {
    LOBYTE(v16) = 0;
    char v26 = 0;
    sub_2157AA474(&v38, (uint64_t)&v16);
    if (!v26 || !v25) {
      goto LABEL_28;
    }
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    a3 = 0;
    if (!v19 || (v18 & 0x80000000) == 0) {
      goto LABEL_29;
    }
LABEL_27:
    operator delete(v17);
LABEL_28:
    a3 = 0;
    goto LABEL_29;
  }
  a3 = v12;
  uint64_t v13 = v27;
  *(void *)&long long v27 = 0;
  long long v12[6] = 1;
  *(void *)uint64_t v12 = &unk_26C658A40;
  *((void *)v12 + 1) = &unk_26C658A90;
  *((void *)v12 + 2) = v13;
LABEL_29:
  if (v37)
  {
    uint64_t v14 = v27;
    *(void *)&long long v27 = 0;
    if (v14)
    {
      MEMORY[0x2166C4D20](v14, 0x1000C4072FAA15ELL);
      if (v11) {
        return a3;
      }
      return 0;
    }
  }
  else if (v36)
  {
    if (v35)
    {
      if (v34 < 0) {
        operator delete(v33);
      }
      if (v32 < 0) {
        operator delete(v31);
      }
    }
    if (v30 && v29 < 0) {
      operator delete((void *)v28);
    }
  }
  if (v11) {
    return a3;
  }
  return 0;
}

void sub_2157A7364(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, long long a16, long long a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::runtime_error __p,int a30,__int16 a31,char a32,char a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  sub_215740ECC((uint64_t)&a37);
  sub_2157A99A4((uint64_t *)(v37 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    a9 = std::logic_error::what(&a10);
    sub_2157482C8(&__p, &a9);
    sub_2159644BC((long long *)&__p, (uint64_t)&a16);
    *(_OWORD *)(v37 - 192) = a16;
    sub_215741BFC((unsigned char *)(v37 - 176), &a17);
    *(unsigned char *)(v37 - 72) = 1;
    sub_2157AA474((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    sub_21573FF04((uint64_t)&a16);
    if (a34)
    {
      if (a33 < 0) {
        operator delete(__p.__vftable);
      }
    }
    MEMORY[0x2166C4250](&a10);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    char v41 = __cxa_get_exception_ptr(a1);
    sub_21574824C(&__p, (uint64_t)v41);
    __cxa_begin_catch(a1);
    uint64_t v42 = (const char *)(a35 + 48);
    if (*(char *)(a35 + 71) < 0) {
      uint64_t v42 = *(const char **)v42;
    }
    a9 = v42;
    sub_2157482C8(&a10, &a9);
    sub_215964DE4((long long *)&a10, (uint64_t)&a16);
    *(_OWORD *)(v37 - 192) = a16;
    sub_215741BFC((unsigned char *)(v37 - 176), &a17);
    *(unsigned char *)(v37 - 72) = 1;
    sub_2157AA474((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    sub_21573FF04((uint64_t)&a16);
    if (a15 && a14 < 0) {
      operator delete(a10.__vftable);
    }
    MEMORY[0x2166C4910](&__p);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v37 - 192) = 0;
    *(unsigned char *)(v37 - 72) = 0;
    sub_2157AA474((uint64_t **)(v37 - 64), v37 - 192);
    sub_215740ECC(v37 - 192);
    __cxa_end_catch();
  }
  JUMPOUT(0x2157A70F8);
}

uint64_t VZSE3GetValueType(uint64_t a1)
{
  if (sub_2157A75AC((uint64_t)"VZSE3GetValueType", a1, 0)) {
    return 255;
  }
  int v3 = *(unsigned __int8 *)(*(void *)(a1 + 16) + 136);
  if (v3 == 2 || v3 == 5) {
    return 12;
  }
  else {
    return 11;
  }
}

BOOL sub_2157A75AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    BOOL v6 = sub_2157AAD60();
    if (*((char *)v6 + 23) < 0)
    {
      sub_215738B0C(v9, (void *)*v6, v6[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      uint64_t v10 = v6[2];
      *(_OWORD *)__n128 v9 = v7;
    }
    char v11 = 1;
    sub_21573FF94(a1, (uint64_t)v9, (uint64_t)&v12);
    long long v23 = v12;
    LOBYTE(v24) = 0;
    char v33 = 0;
    if (v22)
    {
      char v26 = 0;
      if (v15)
      {
        long long v24 = v13;
        uint64_t v25 = v14;
        uint64_t v14 = 0;
        long long v13 = 0uLL;
        char v26 = 1;
      }
      LOBYTE(v27) = 0;
      char v32 = 0;
      if (v21)
      {
        uint64_t v28 = v17;
        long long v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        uint64_t v29 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)v19;
        uint64_t v31 = v20;
        uint64_t v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        uint64_t v20 = 0;
        char v32 = 1;
      }
      char v33 = 1;
    }
    char v34 = 0;
    sub_21573E208(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v28) < 0) {
          operator delete((void *)v27);
        }
      }
      if (v26 && SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v17) < 0) {
          operator delete(v16[0]);
        }
      }
      if (v15 && SHIBYTE(v14) < 0) {
        operator delete((void *)v13);
      }
    }
    if (v11 && SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
  return a2 == 0;
}

void sub_2157A77A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZSE3GetSEType(uint64_t a1)
{
  if (sub_2157A75AC((uint64_t)"VZSE3GetSEType", a1, 0)) {
    return 255;
  }
  else {
    return (*(unsigned char *)(*(void *)(a1 + 16) + 136) & 0xFE) == 4;
  }
}

uint64_t VZSE3GetAlgebraRotationF(uint64_t a1, uint64_t a2)
{
  BOOL v4 = sub_2157A75AC((uint64_t)"VZSE3GetAlgebraRotationF", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    long long v7 = (uint64_t *)(a1 + 16);
    uint64_t result = v8;
    unsigned int v9 = *(unsigned __int8 *)(v8 + 136);
    BOOL v10 = v9 > 5;
    int v11 = (1 << v9) & 0x34;
    if (!v10 && v11 != 0)
    {
      if (!a2) {
        return 0;
      }
      sub_215B259D0(v7, (uint64_t)&v14, v5);
      uint64_t result = 0;
      long long v13 = v14;
LABEL_8:
      *(_DWORD *)(a2 + 8) = DWORD2(v13);
      *(void *)a2 = v13;
      return result;
    }
    if (*(_DWORD *)(result + 128) != 2) {
      sub_215742D4C();
    }
    if (a2)
    {
      if (result == a2) {
        return a2;
      }
      *(void *)&long long v13 = *(void *)result;
      DWORD2(v13) = *(_DWORD *)(result + 8);
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t *VZSE3GetAlgebraRotationD(uint64_t a1, int8x16_t *a2)
{
  BOOL v4 = sub_2157A75AC((uint64_t)"VZSE3GetAlgebraRotationD", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    long long v7 = *(int8x16_t **)(a1 + 16);
    BOOL v6 = (uint64_t *)(a1 + 16);
    uint64_t result = v7;
    int v8 = v7[8].u8[8];
    BOOL v9 = v8 == 2 || v8 == 5;
    int v10 = v8 & 0xFE;
    if (!v9 || v10 == 4)
    {
      if (!a2) {
        return 0;
      }
      sub_215B25D04(v6, (float64x2_t *)&v14);
      uint64_t result = 0;
      uint64_t v12 = v15;
      int8x16_t v13 = v14;
LABEL_16:
      a2[1].i64[0] = v12;
      v13.i64[1] = vextq_s8(v13, v13, 8uLL).u64[0];
      *a2 = v13;
      return result;
    }
    if (result[8].i32[0] != 3) {
      sub_215742D4C();
    }
    if (a2)
    {
      if (result == a2) {
        return a2;
      }
      uint64_t v12 = result[1].i64[0];
      int8x16_t v13 = *result;
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t *VZSE3GetAlgebraTranslationF(uint64_t a1, uint64_t a2)
{
  BOOL v4 = sub_2157A75AC((uint64_t)"VZSE3GetAlgebraTranslationF", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    int v8 = (uint64_t *)(a1 + 16);
    uint64_t v7 = v9;
    unsigned int v10 = *(unsigned __int8 *)(v9 + 136);
    BOOL v11 = v10 > 5;
    int v12 = (1 << v10) & 0x34;
    if (v11 || v12 == 0)
    {
      if (*(_DWORD *)(v7 + 128) != 2) {
        sub_215742D4C();
      }
      uint64_t result = (uint64_t *)(v7 + 12);
      if (a2)
      {
        uint64_t v14 = *result;
        uint64_t v15 = (int *)(v7 + 20);
        goto LABEL_13;
      }
    }
    else
    {
      if (a2)
      {
        sub_215B259D0(v8, (uint64_t)v16, v5);
        uint64_t result = 0;
        uint64_t v14 = v17;
        uint64_t v15 = &v18;
LABEL_13:
        *(_DWORD *)(a2 + 8) = *v15;
        *(void *)a2 = v14;
        return result;
      }
      return 0;
    }
  }
  return result;
}

int8x16_t *VZSE3GetAlgebraTranslationD(uint64_t a1, int8x16_t *a2)
{
  BOOL v4 = sub_2157A75AC((uint64_t)"VZSE3GetAlgebraTranslationD", a1, 0);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = (uint64_t *)(a1 + 16);
    uint64_t v6 = v8;
    int v9 = *(unsigned __int8 *)(v8 + 136);
    BOOL v10 = v9 == 2 || v9 == 5;
    int v11 = v9 & 0xFE;
    if (!v10 || v11 == 4)
    {
      if (!a2) {
        return 0;
      }
      sub_215B25D04(v7, (float64x2_t *)v15);
      uint64_t result = 0;
      uint64_t v13 = v15[5];
      int8x16_t v14 = *(int8x16_t *)&v15[3];
      goto LABEL_15;
    }
    if (*(_DWORD *)(v6 + 128) != 3) {
      sub_215742D4C();
    }
    uint64_t result = (int8x16_t *)(v6 + 24);
    if (a2)
    {
      uint64_t v13 = *(void *)(v6 + 40);
      int8x16_t v14 = *result;
LABEL_15:
      a2[1].i64[0] = v13;
      v14.i64[1] = vextq_s8(v14, v14, 8uLL).u64[0];
      *a2 = v14;
    }
  }
  return result;
}

uint64_t VZSE3GetMatrix4x4F(uint64_t a1, int a2, int32x4_t *a3)
{
  BOOL v6 = sub_2157A75AC((uint64_t)"VZSE3GetMatrix4x4F", a1, 0);
  uint64_t result = 0;
  if (v6) {
    return result;
  }
  sub_2159661DC((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v9, v7);
  uint64_t v31 = "VZSE3GetMatrix4x4F";
  if (v18) {
    return v9[0];
  }
  sub_21574F3D8("in function ", (const char *)&v31);
  sub_215E11614((char *)v9, &v19, (uint64_t)&v21);
  sub_21573E208(&v21, 0);
  if (v30)
  {
    if (v29)
    {
      if (v28 < 0) {
        operator delete(__p);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
    }
    if (v24 && v23 < 0) {
      operator delete(v22);
    }
  }
  if (v20 < 0)
  {
    operator delete(v19);
    if (!v18) {
      goto LABEL_18;
    }
    return 0;
  }
  if (v18) {
    return 0;
  }
LABEL_18:
  if (!v17) {
    return 0;
  }
  if (v16)
  {
    if (v15 < 0) {
      operator delete(v14);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
  }
  uint64_t result = 0;
  if (v11 && v10 < 0)
  {
    operator delete((void *)v9[2]);
    return 0;
  }
  return result;
}

void sub_2157A7D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t VZSE3GetMatrix4x4D(uint64_t a1, int a2, uint64_t a3)
{
  BOOL v6 = sub_2157A75AC((uint64_t)"VZSE3GetMatrix4x4D", a1, 0);
  uint64_t result = 0;
  if (v6) {
    return result;
  }
  sub_21596642C((uint64_t *)(a1 + 16), a2, a3, &v10, v7, v8);
  char v33 = "VZSE3GetMatrix4x4D";
  if (v20) {
    return v10.i64[0];
  }
  sub_21574F3D8("in function ", (const char *)&v33);
  sub_215E11614(v10.i8, &v21, (uint64_t)&v23);
  sub_21573E208(&v23, 0);
  if (v32)
  {
    if (v31)
    {
      if (v30 < 0) {
        operator delete(__p);
      }
      if (v28 < 0) {
        operator delete(v27);
      }
    }
    if (v26 && v25 < 0) {
      operator delete(v24);
    }
  }
  if (v22 < 0)
  {
    operator delete(v21);
    if (!v20) {
      goto LABEL_18;
    }
    return 0;
  }
  if (v20) {
    return 0;
  }
LABEL_18:
  if (!v19) {
    return 0;
  }
  if (v18)
  {
    if (v17 < 0) {
      operator delete(v16);
    }
    if (v15 < 0) {
      operator delete(v14);
    }
  }
  uint64_t result = 0;
  if (v13 && v12 < 0)
  {
    operator delete(v11);
    return 0;
  }
  return result;
}

void sub_2157A7F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void VZSE3GetAffine3x4F(uint64_t a1, int a2, uint64_t a3)
{
  if (!sub_2157A75AC((uint64_t)"VZSE3GetAffine3x4F", a1, 0))
  {
    sub_2159666A4((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v7, v6);
    sub_21575059C((uint64_t)"VZSE3GetAffine3x4F", v7, 0);
    if (!v17)
    {
      if (v16)
      {
        if (v15)
        {
          if (v14 < 0) {
            operator delete(__p);
          }
          if (v12 < 0) {
            operator delete(v11);
          }
        }
        if (v10)
        {
          if (v9 < 0) {
            operator delete(v8);
          }
        }
      }
    }
  }
}

void sub_2157A8044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZSE3GetAffine3x4D(uint64_t a1, int a2, uint64_t a3)
{
  if (!sub_2157A75AC((uint64_t)"VZSE3GetAffine3x4D", a1, 0))
  {
    sub_215966900((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v8, v6, v7);
    sub_21575059C((uint64_t)"VZSE3GetAffine3x4D", v8, 0);
    if (!v18)
    {
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0) {
            operator delete(__p);
          }
          if (v13 < 0) {
            operator delete(v12);
          }
        }
        if (v11)
        {
          if (v10 < 0) {
            operator delete(v9);
          }
        }
      }
    }
  }
}

void sub_2157A8134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157A8148(uint64_t result)
{
  return result;
}

uint64_t sub_2157A8158(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 24), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157A8194()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA70, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788CA70))
  {
    return qword_26788CA68;
  }
  qword_26788CA68 = sub_21573DD88();
  __cxa_guard_release(&qword_26788CA70);
  return qword_26788CA68;
}

uint64_t *sub_2157A81F8(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658AF0, 0);
  if (result) {
    return (uint64_t *)sub_215B2690C((uint64_t *)(a1 + 16), result + 2);
  }
  return result;
}

uint64_t sub_2157A827C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  char v19 = sub_2157A8600();
  sub_215732BF4(v21, "failed to compare equal");
  sub_2157402F0((std::string::size_type)v19, v21, 0);
  if (v22 < 0) {
    operator delete((void *)v21[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_2157A82D8(uint64_t a1)
{
  sub_2157A8600();
  uint64_t v2 = a1;
  operator new();
}

void sub_2157A8524(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  long long v23 = sub_2157A8600();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x2157A8508);
}

uint64_t sub_2157A85F4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 24));
}

long long *sub_2157A8600()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884720, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884720))
  {
    return &xmmword_267884708;
  }
  size_t v1 = (char *)sub_2157A86E8();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884708, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884718 = *((void *)v1 + 2);
    xmmword_267884708 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884708, &dword_21572C000);
  __cxa_guard_release(&qword_267884720);
  return &xmmword_267884708;
}

void sub_2157A86D0(_Unwind_Exception *a1)
{
}

void *sub_2157A86E8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884740, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884740))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZSE3]", qword_267884728);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884728, &dword_21572C000);
    __cxa_guard_release(&qword_267884740);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884760, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884760))
  {
    return &unk_267884748;
  }
  sub_215E19DF4((uint64_t)qword_267884728, (uint64_t)&unk_267884748);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884748, &dword_21572C000);
  __cxa_guard_release(&qword_267884760);
  return &unk_267884748;
}

void sub_2157A87EC(_Unwind_Exception *a1)
{
}

void sub_2157A8804(_Unwind_Exception *a1)
{
}

void sub_2157A881C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA88))
  {
    sub_2157A88F0();
    if (byte_26788CBD7 < 0)
    {
      sub_215738B0C(&xmmword_26788CBA8, (void *)qword_26788CBC0, unk_26788CBC8);
    }
    else
    {
      xmmword_26788CBA8 = *(_OWORD *)&qword_26788CBC0;
      unk_26788CBB8 = unk_26788CBD0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CBA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA88);
  }
}

void sub_2157A88D8(_Unwind_Exception *a1)
{
}

void sub_2157A88F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA90))
  {
    sub_2157A8C20(__p);
    sub_2157A89D0(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788CBC0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA90);
  }
}

void sub_2157A8990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CA90);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CA90);
  _Unwind_Resume(a1);
}

void sub_2157A89D0(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA80))
  {
    *((void *)&xmmword_26788CB90 + 1) = 0x3233746100;
    unk_26788CBA0 = 0xD00000000000000;
    LODWORD(xmmword_26788CB90) = 1936617315;
    WORD2(xmmword_26788CB90) = 8308;
    *(_DWORD *)((char *)&xmmword_26788CB90 + 6) = 1634692198;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CB90, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA80);
  }
  if (byte_26788CBA7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788CB90, *((unint64_t *)&xmmword_26788CB90 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CB90;
    uint64_t v10 = unk_26788CBA0;
  }
  sub_2157A8E28();
  if (byte_26788CBEF < 0)
  {
    sub_215738B0C(&v11, (void *)xmmword_26788CBD8, *((unint64_t *)&xmmword_26788CBD8 + 1));
  }
  else
  {
    long long v11 = xmmword_26788CBD8;
    uint64_t v12 = unk_26788CBE8;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788CBC0, v2, v3);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    __n128 v5 = v8;
    float64x2_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      float64x2_t v6 = __p;
    }
    float64x2_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10) & 0x80000000) == 0) {
      return;
    }
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v11);
  if (SHIBYTE(v10) < 0) {
    goto LABEL_20;
  }
}

void sub_2157A8BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

void sub_2157A8C20(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const float, 3>]", qword_26788CBF0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CBF0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAA8))
  {
    size_t v3 = sub_215747D98(qword_26788CBF0, "<", 0);
    sub_215747C90(qword_26788CBF0, 0, v3, qword_26788CC08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CC08, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAA8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAB0))
  {
    sub_215E19DF4((uint64_t)qword_26788CC08, (uint64_t)&xmmword_26788CC20);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC20, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAB0);
  }
  if (byte_26788CC37 < 0)
  {
    long long v2 = xmmword_26788CC20;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CC20;
    __dst[2] = unk_26788CC30;
  }
}

void sub_2157A8DE0(_Unwind_Exception *a1)
{
}

void sub_2157A8DF8(_Unwind_Exception *a1)
{
}

void sub_2157A8E10(_Unwind_Exception *a1)
{
}

void sub_2157A8E28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA98))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 3UL]", __p);
    sub_215E1A038((uint64_t)__p, (std::string *)&xmmword_26788CBD8);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CBD8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA98);
  }
}

void sub_2157A8ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CA98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CA98);
  _Unwind_Resume(a1);
}

void sub_2157A8F18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAC8))
  {
    sub_2157A8FEC();
    if (byte_26788CC97 < 0)
    {
      sub_215738B0C(&xmmword_26788CC68, (void *)qword_26788CC80, unk_26788CC88);
    }
    else
    {
      xmmword_26788CC68 = *(_OWORD *)&qword_26788CC80;
      unk_26788CC78 = unk_26788CC90;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC68, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAC8);
  }
}

void sub_2157A8FD4(_Unwind_Exception *a1)
{
}

void sub_2157A8FEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAD0))
  {
    sub_2157A931C(__p);
    sub_2157A90CC(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788CC80, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAD0);
  }
}

void sub_2157A908C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CAD0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CAD0);
  _Unwind_Resume(a1);
}

void sub_2157A90CC(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAC0))
  {
    *((void *)&xmmword_26788CC50 + 1) = 0x3436746100;
    unk_26788CC60 = 0xD00000000000000;
    LODWORD(xmmword_26788CC50) = 1936617315;
    WORD2(xmmword_26788CC50) = 8308;
    *(_DWORD *)((char *)&xmmword_26788CC50 + 6) = 1634692198;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC50, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAC0);
  }
  if (byte_26788CC67 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788CC50, *((unint64_t *)&xmmword_26788CC50 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CC50;
    uint64_t v10 = unk_26788CC60;
  }
  sub_2157A8E28();
  if (byte_26788CBEF < 0)
  {
    sub_215738B0C(&v11, (void *)xmmword_26788CBD8, *((unint64_t *)&xmmword_26788CBD8 + 1));
  }
  else
  {
    long long v11 = xmmword_26788CBD8;
    uint64_t v12 = unk_26788CBE8;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788CC80, v2, v3);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    __n128 v5 = v8;
    float64x2_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      float64x2_t v6 = __p;
    }
    float64x2_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10) & 0x80000000) == 0) {
      return;
    }
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v11);
  if (SHIBYTE(v10) < 0) {
    goto LABEL_20;
  }
}

void sub_2157A92D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

void sub_2157A931C(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAD8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const double, 3>]", qword_26788CC98);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CC98, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAD8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAE0))
  {
    size_t v3 = sub_215747D98(qword_26788CC98, "<", 0);
    sub_215747C90(qword_26788CC98, 0, v3, qword_26788CCB0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CCB0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAE8))
  {
    sub_215E19DF4((uint64_t)qword_26788CCB0, (uint64_t)&xmmword_26788CCC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CCC8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAE8);
  }
  if (byte_26788CCDF < 0)
  {
    long long v2 = xmmword_26788CCC8;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CCC8;
    __dst[2] = unk_26788CCD8;
  }
}

void sub_2157A94DC(_Unwind_Exception *a1)
{
}

void sub_2157A94F4(_Unwind_Exception *a1)
{
}

void sub_2157A950C(_Unwind_Exception *a1)
{
}

void sub_2157A9524(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_2157A8600();
  sub_2157A9A5C();
  if (byte_26788CCF7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788CCE0, *((unint64_t *)&xmmword_26788CCE0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788CCE0;
    uint64_t v22 = unk_26788CCF0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB08))
  {
    sub_2157A9C54();
    if (byte_26788CD57 < 0)
    {
      sub_215738B0C(&xmmword_26788CD28, (void *)qword_26788CD40, unk_26788CD48);
    }
    else
    {
      xmmword_26788CD28 = *(_OWORD *)&qword_26788CD40;
      unk_26788CD38 = unk_26788CD50;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CD28, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB08);
  }
  if (byte_26788CD3F < 0)
  {
    sub_215738B0C(&v23, (void *)xmmword_26788CD28, *((unint64_t *)&xmmword_26788CD28 + 1));
  }
  else
  {
    long long v23 = xmmword_26788CD28;
    uint64_t v24 = unk_26788CD38;
  }
  sub_2157AA27C();
  if (byte_26788CDCF < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788CDB8, *((unint64_t *)&xmmword_26788CDB8 + 1));
  }
  else
  {
    long long v25 = xmmword_26788CDB8;
    uint64_t v26 = unk_26788CDC8;
  }
  sub_21573A150(&v19, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v8, a2);
  sub_21574086C(v4, (uint64_t *)&v19, (uint64_t)v8, **a1);
  if (v18 && v17)
  {
    if (!v16) {
      goto LABEL_16;
    }
    if (v15 < 0)
    {
      operator delete(v14);
      if ((v13 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v11) {
          goto LABEL_19;
        }
LABEL_17:
        if (v10 < 0) {
          operator delete(__p);
        }
        goto LABEL_19;
      }
    }
    else if ((v13 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v12);
    if (!v11) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
LABEL_19:
  __n128 v5 = (void **)v19;
  if (v19)
  {
    float64x2_t v6 = v20;
    float64x2_t v7 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      float64x2_t v7 = v19;
    }
    char v20 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete((void *)v25);
    if ((SHIBYTE(v24) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v22) & 0x80000000) == 0) {
        return;
      }
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v23);
  if (SHIBYTE(v22) < 0) {
    goto LABEL_33;
  }
}

void sub_2157A981C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788CB08);
  while (1)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
    if (v1 == v2 - 144) {
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_2157A98D8(uint64_t result)
{
  uint64_t v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157A9960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157A9974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157A9990(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_2157A99A4(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 120))
  {
    uint64_t v2 = *a1;
    *a1 = 0;
    if (v2) {
      MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
    }
    return a1;
  }
  if (!*((unsigned char *)a1 + 112)) {
    return a1;
  }
  if (!*((unsigned char *)a1 + 104)) {
    goto LABEL_9;
  }
  if (*((char *)a1 + 103) < 0)
  {
    operator delete((void *)a1[10]);
    if (*((char *)a1 + 71) < 0) {
      goto LABEL_13;
    }
LABEL_9:
    if (*((unsigned char *)a1 + 40)) {
      goto LABEL_10;
    }
    return a1;
  }
  if ((*((char *)a1 + 71) & 0x80000000) == 0) {
    goto LABEL_9;
  }
LABEL_13:
  operator delete((void *)a1[6]);
  if (!*((unsigned char *)a1 + 40)) {
    return a1;
  }
LABEL_10:
  if ((*((char *)a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete((void *)a1[2]);
  return a1;
}

void sub_2157A9A5C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAF0))
  {
    sub_2157A9B30();
    if (byte_26788CD27 < 0)
    {
      sub_215738B0C(&xmmword_26788CCE0, (void *)xmmword_26788CD10, *((unint64_t *)&xmmword_26788CD10 + 1));
    }
    else
    {
      xmmword_26788CCE0 = xmmword_26788CD10;
      unk_26788CCF0 = unk_26788CD20;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CCE0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAF0);
  }
}

void sub_2157A9B18(_Unwind_Exception *a1)
{
}

void sub_2157A9B30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAF8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::MatrixLayout]", qword_26788CCF8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CCF8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAF8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB00))
  {
    sub_215E19DF4((uint64_t)qword_26788CCF8, (uint64_t)&xmmword_26788CD10);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CD10, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB00);
  }
}

void sub_2157A9C24(_Unwind_Exception *a1)
{
}

void sub_2157A9C3C(_Unwind_Exception *a1)
{
}

void sub_2157A9C54()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB10))
  {
    sub_2157A9F84(__p);
    sub_2157A9D34(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788CD40, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB10);
  }
}

void sub_2157A9CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CB10);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CB10);
  _Unwind_Resume(a1);
}

void sub_2157A9D34(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CA80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CA80))
  {
    *((void *)&xmmword_26788CB90 + 1) = 0x3233746100;
    unk_26788CBA0 = 0xD00000000000000;
    LODWORD(xmmword_26788CB90) = 1936617315;
    WORD2(xmmword_26788CB90) = 8308;
    *(_DWORD *)((char *)&xmmword_26788CB90 + 6) = 1634692198;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CB90, &dword_21572C000);
    __cxa_guard_release(&qword_26788CA80);
  }
  if (byte_26788CBA7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788CB90, *((unint64_t *)&xmmword_26788CB90 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CB90;
    uint64_t v10 = unk_26788CBA0;
  }
  sub_2157AA18C();
  if (byte_26788CD6F < 0)
  {
    sub_215738B0C(&v11, (void *)xmmword_26788CD58, *((unint64_t *)&xmmword_26788CD58 + 1));
  }
  else
  {
    long long v11 = xmmword_26788CD58;
    uint64_t v12 = unk_26788CD68;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788CD40, v2, v3);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    __n128 v5 = v8;
    float64x2_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      float64x2_t v6 = __p;
    }
    float64x2_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10) & 0x80000000) == 0) {
      return;
    }
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v11);
  if (SHIBYTE(v10) < 0) {
    goto LABEL_20;
  }
}

void sub_2157A9F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

void sub_2157A9F84(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB20))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const float, 12>]", qword_26788CD70);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CD70, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB28))
  {
    size_t v3 = sub_215747D98(qword_26788CD70, "<", 0);
    sub_215747C90(qword_26788CD70, 0, v3, qword_26788CD88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CD88, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB28);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB30))
  {
    sub_215E19DF4((uint64_t)qword_26788CD88, (uint64_t)&xmmword_26788CDA0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CDA0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB30);
  }
  if (byte_26788CDB7 < 0)
  {
    long long v2 = xmmword_26788CDA0;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CDA0;
    __dst[2] = unk_26788CDB0;
  }
}

void sub_2157AA144(_Unwind_Exception *a1)
{
}

void sub_2157AA15C(_Unwind_Exception *a1)
{
}

void sub_2157AA174(_Unwind_Exception *a1)
{
}

void sub_2157AA18C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB18))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 12UL]", __p);
    sub_215E1A038((uint64_t)__p, (std::string *)&xmmword_26788CD58);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CD58, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB18);
  }
}

void sub_2157AA23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CB18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CB18);
  _Unwind_Resume(a1);
}

void sub_2157AA27C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB38))
  {
    sub_2157AA350();
    if (byte_26788CDFF < 0)
    {
      sub_215738B0C(&xmmword_26788CDB8, (void *)xmmword_26788CDE8, *((unint64_t *)&xmmword_26788CDE8 + 1));
    }
    else
    {
      xmmword_26788CDB8 = xmmword_26788CDE8;
      unk_26788CDC8 = unk_26788CDF8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CDB8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB38);
  }
}

void sub_2157AA338(_Unwind_Exception *a1)
{
}

void sub_2157AA350()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ArgOptions]", qword_26788CDD0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CDD0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB48))
  {
    sub_215E19DF4((uint64_t)qword_26788CDD0, (uint64_t)&xmmword_26788CDE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CDE8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB48);
  }
}

void sub_2157AA444(_Unwind_Exception *a1)
{
}

void sub_2157AA45C(_Unwind_Exception *a1)
{
}

void sub_2157AA474(uint64_t **a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  BOOL v4 = (uint64_t *)sub_2157A8600();
  sub_2157A9A5C();
  if (byte_26788CCF7 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788CCE0, *((unint64_t *)&xmmword_26788CCE0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788CCE0;
    uint64_t v22 = unk_26788CCF0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB50))
  {
    sub_2157AA828();
    if (byte_26788CE2F < 0)
    {
      sub_215738B0C(&xmmword_26788CE00, (void *)qword_26788CE18, unk_26788CE20);
    }
    else
    {
      xmmword_26788CE00 = *(_OWORD *)&qword_26788CE18;
      unk_26788CE10 = unk_26788CE28;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CE00, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB50);
  }
  if (byte_26788CE17 < 0)
  {
    sub_215738B0C(&v23, (void *)xmmword_26788CE00, *((unint64_t *)&xmmword_26788CE00 + 1));
  }
  else
  {
    long long v23 = xmmword_26788CE00;
    uint64_t v24 = unk_26788CE10;
  }
  sub_2157AA27C();
  if (byte_26788CDCF < 0)
  {
    sub_215738B0C(&v25, (void *)xmmword_26788CDB8, *((unint64_t *)&xmmword_26788CDB8 + 1));
  }
  else
  {
    long long v25 = xmmword_26788CDB8;
    uint64_t v26 = unk_26788CDC8;
  }
  sub_21573A150(&v19, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v8, a2);
  sub_21574086C(v4, (uint64_t *)&v19, (uint64_t)v8, **a1);
  if (v18 && v17)
  {
    if (!v16) {
      goto LABEL_16;
    }
    if (v15 < 0)
    {
      operator delete(v14);
      if ((v13 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v11) {
          goto LABEL_19;
        }
LABEL_17:
        if (v10 < 0) {
          operator delete(__p);
        }
        goto LABEL_19;
      }
    }
    else if ((v13 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v12);
    if (!v11) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
LABEL_19:
  __n128 v5 = (void **)v19;
  if (v19)
  {
    float64x2_t v6 = v20;
    float64x2_t v7 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      float64x2_t v7 = v19;
    }
    char v20 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v26) < 0)
  {
    operator delete((void *)v25);
    if ((SHIBYTE(v24) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v22) & 0x80000000) == 0) {
        return;
      }
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v23);
  if (SHIBYTE(v22) < 0) {
    goto LABEL_33;
  }
}

void sub_2157AA76C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788CB50);
  while (1)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
    if (v1 == v2 - 144) {
      _Unwind_Resume(a1);
    }
  }
}

void sub_2157AA828()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB58))
  {
    sub_2157AAB58(__p);
    sub_2157AA908(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788CE18, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB58);
  }
}

void sub_2157AA8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788CB58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788CB58);
  _Unwind_Resume(a1);
}

void sub_2157AA908(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CAC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CAC0))
  {
    *((void *)&xmmword_26788CC50 + 1) = 0x3436746100;
    unk_26788CC60 = 0xD00000000000000;
    LODWORD(xmmword_26788CC50) = 1936617315;
    WORD2(xmmword_26788CC50) = 8308;
    *(_DWORD *)((char *)&xmmword_26788CC50 + 6) = 1634692198;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CC50, &dword_21572C000);
    __cxa_guard_release(&qword_26788CAC0);
  }
  if (byte_26788CC67 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788CC50, *((unint64_t *)&xmmword_26788CC50 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CC50;
    uint64_t v10 = unk_26788CC60;
  }
  sub_2157AA18C();
  if (byte_26788CD6F < 0)
  {
    sub_215738B0C(&v11, (void *)xmmword_26788CD58, *((unint64_t *)&xmmword_26788CD58 + 1));
  }
  else
  {
    long long v11 = xmmword_26788CD58;
    uint64_t v12 = unk_26788CD68;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788CE18, v2, v3);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    __n128 v5 = v8;
    float64x2_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      float64x2_t v6 = __p;
    }
    float64x2_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10) & 0x80000000) == 0) {
      return;
    }
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v11);
  if (SHIBYTE(v10) < 0) {
    goto LABEL_20;
  }
}

void sub_2157AAB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

void sub_2157AAB58(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB60))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const double, 12>]", qword_26788CE30);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CE30, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB68))
  {
    size_t v3 = sub_215747D98(qword_26788CE30, "<", 0);
    sub_215747C90(qword_26788CE30, 0, v3, qword_26788CE48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788CE48, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB68);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CB70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CB70))
  {
    sub_215E19DF4((uint64_t)qword_26788CE48, (uint64_t)&xmmword_26788CE60);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788CE60, &dword_21572C000);
    __cxa_guard_release(&qword_26788CB70);
  }
  if (byte_26788CE77 < 0)
  {
    long long v2 = xmmword_26788CE60;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788CE60;
    __dst[2] = unk_26788CE70;
  }
}

void sub_2157AAD18(_Unwind_Exception *a1)
{
}

void sub_2157AAD30(_Unwind_Exception *a1)
{
}

void sub_2157AAD48(_Unwind_Exception *a1)
{
}

uint64_t *sub_2157AAD60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884780))
  {
    char v1 = sub_2157AAEB0();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = v1[1];
    }
    unint64_t v5 = v4 + 1;
    if (v4 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    float64x2_t v6 = &qword_267884768;
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (uint64_t *)operator new(v7 + 1);
      qword_267884770 = v4 + 1;
      unk_267884778 = v8 | 0x8000000000000000;
      qword_267884768 = (uint64_t)v9;
      float64x2_t v6 = v9;
    }
    else
    {
      qword_267884770 = 0;
      unk_267884778 = 0;
      qword_267884768 = 0;
      byte_26788477F = v4 + 1;
      if (!v4)
      {
LABEL_18:
        *(_WORD *)((char *)v6 + v4) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884768, &dword_21572C000);
        __cxa_guard_release(&qword_267884780);
        return &qword_267884768;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884768;
}

void sub_2157AAE98(_Unwind_Exception *a1)
{
}

uint64_t *sub_2157AAEB0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678847A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678847A0))
  {
    char v1 = sub_2157A8600();
    long long v2 = (const void **)v1;
    int v3 = *((char *)v1 + 23);
    if (v3 >= 0) {
      size_t v4 = *((unsigned __int8 *)v1 + 23);
    }
    else {
      size_t v4 = *((void *)v1 + 1);
    }
    unint64_t v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v5 >= 0x17)
    {
      uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17) {
        uint64_t v7 = v5 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v9 = (char *)operator new(v7 + 1);
      qword_267884790 = v4 + 6;
      unk_267884798 = v8 | 0x8000000000000000;
      qword_267884788 = (uint64_t)v9;
      *(_DWORD *)char v9 = 1936617315;
      float64x2_t v6 = v9 + 6;
      *((_WORD *)v9 + 2) = 8308;
    }
    else
    {
      qword_267884790 = 0;
      unk_267884798 = 0;
      qword_267884788 = 0x2074736E6F63;
      byte_26788479F = v4 + 6;
      float64x2_t v6 = (char *)&qword_267884788 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267884788, &dword_21572C000);
        __cxa_guard_release(&qword_2678847A0);
        return &qword_267884788;
      }
    }
    if (v3 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = *v2;
    }
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
  return &qword_267884788;
}

void sub_2157AB01C(_Unwind_Exception *a1)
{
}

uint64_t sub_2157AB034(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 384);
  *(void *)(a1 + 384) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  int v3 = *(std::__shared_weak_count **)(a1 + 376);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    size_t v4 = *(std::__shared_weak_count **)(a1 + 360);
    if (!v4) {
      goto LABEL_9;
    }
  }
  else
  {
    size_t v4 = *(std::__shared_weak_count **)(a1 + 360);
    if (!v4) {
      goto LABEL_9;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
LABEL_9:
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 344);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    float64x2_t v6 = *(std::__shared_weak_count **)(a1 + 328);
    if (!v6) {
      goto LABEL_15;
    }
  }
  else
  {
    float64x2_t v6 = *(std::__shared_weak_count **)(a1 + 328);
    if (!v6) {
      goto LABEL_15;
    }
  }
  if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_15:
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 312);
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    uint64_t v8 = *(std::__shared_weak_count **)(a1 + 296);
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v8 = *(std::__shared_weak_count **)(a1 + 296);
    if (!v8) {
      goto LABEL_21;
    }
  }
  if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
LABEL_21:
  char v9 = *(std::__shared_weak_count **)(a1 + 280);
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    uint64_t v10 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v10) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v10 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v10) {
      goto LABEL_27;
    }
  }
  if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
LABEL_27:
  sub_2157B69B0(a1 + 72);
  if (!*(unsigned char *)(a1 + 64) || (*(char *)(a1 + 63) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 40));
  return a1;
}

uint64_t sub_2157AB32C(uint64_t a1)
{
  return sub_2157AB034(a1 - 8);
}

void sub_2157AB334(uint64_t a1)
{
  sub_2157AB034(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157AB36C(uint64_t a1)
{
  sub_2157AB034(a1 - 8);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157AB3A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_2157B69B0(a1 + 80);
  if (!*(unsigned char *)(a1 + 72) || (*(char *)(a1 + 71) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 48));
  return a1;
}

void sub_2157AB42C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_2157B69B0(a1 + 72);
  if (*(unsigned char *)(a1 + 64))
  {
    if (*(char *)(a1 + 63) < 0) {
      operator delete(*(void **)(a1 + 40));
    }
  }
}

void sub_2157AB4A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_2157B69B0(a1 + 80);
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157AB53C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_2157B69B0(a1 + 72);
  if (*(unsigned char *)(a1 + 64) && *(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157AB5D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_21573AE84(a1 + 16, *(char **)(a1 + 24));
  return a1;
}

void sub_2157AB630(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  int v3 = *(char **)(a1 + 16);

  sub_21573AE84(a1 + 8, v3);
}

void sub_2157AB698(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_21573AE84(a1 + 16, *(char **)(a1 + 24));

  JUMPOUT(0x2166C4D20);
}

void sub_2157AB718(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  sub_21573AE84(a1 + 8, *(char **)(a1 + 16));

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157AB79C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2157AB7C8(uint64_t a1)
{
  return sub_2157B6A74(a1 + 8);
}

void sub_2157AB7D0(uint64_t a1)
{
  sub_2157B6A74(a1 + 16);

  JUMPOUT(0x2166C4D20);
}

void sub_2157AB81C(uint64_t a1)
{
  sub_2157B6A74(a1 + 8);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157AB868(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 64))
  {
    int v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  size_t v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_2157AB964(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 56))
  {
    int v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  size_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_2157ABA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 64))
  {
    int v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  size_t v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157ABB64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 56))
  {
    int v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  size_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157ABC70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2157ABCEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_2157ABD5C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157ABDE8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZPeerInfoGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D028, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D028))
  {
    return qword_26788D020;
  }
  qword_26788D020 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D028);
  return qword_26788D020;
}

uint64_t VZConnectionInfoGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D038, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D038))
  {
    return qword_26788D030;
  }
  qword_26788D030 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D038);
  return qword_26788D030;
}

uint64_t VZConnectionInfoGetConnectionType(uint64_t a1)
{
  if (sub_2157ABF84((uint64_t)"VZConnectionInfoGetConnectionType", a1)) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(a1 + 16);
  }
}

BOOL sub_2157ABF84(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D040, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D040))
  {
    sub_2157BA50C();
    int v5 = byte_26788D727;
    if (byte_26788D727 >= 0) {
      size_t v6 = byte_26788D727;
    }
    else {
      size_t v6 = qword_26788D718;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788D6F8 + 1) = v6 + 1;
      unk_26788D708 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788D6F8 = v8;
    }
    else
    {
      unk_26788D708 = 0;
      xmmword_26788D6F8 = 0uLL;
      uint64_t v8 = &xmmword_26788D6F8;
      byte_26788D70F = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D6F8, &dword_21572C000);
        __cxa_guard_release(&qword_26788D040);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      long long v11 = &qword_26788D710;
    }
    else {
      long long v11 = (uint64_t *)qword_26788D710;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788D70F < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788D6F8, *((unint64_t *)&xmmword_26788D6F8 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = xmmword_26788D6F8;
    uint64_t v13 = unk_26788D708;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157AC2B4(_Unwind_Exception *a1)
{
}

void sub_2157AC2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZConnectionInfoGetClientInfo(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (sub_2157ABF84((uint64_t)"VZConnectionInfoGetClientInfo", a1)) {
    return 0;
  }
  uint64_t result = *(void *)(a1 + 264);
  if (!result)
  {
    int v3 = operator new(0x188uLL, MEMORY[0x263F8C180]);
    if (v3)
    {
      size_t v4 = v3;
      *(void *)int v3 = &unk_26C6565D0;
      v3[1] = *(_OWORD *)(a1 + 24);
      *((_DWORD *)v3 + 8) = *(_DWORD *)(a1 + 40);
      *((unsigned char *)v3 + 40) = 0;
      *((unsigned char *)v3 + 64) = 0;
      if (*(unsigned char *)(a1 + 72))
      {
        if (*(char *)(a1 + 71) < 0)
        {
          sub_215738B0C((unsigned char *)v3 + 40, *(void **)(a1 + 48), *(void *)(a1 + 56));
        }
        else
        {
          *(_OWORD *)((char *)v3 + 40) = *(_OWORD *)(a1 + 48);
          *((void *)v3 + 7) = *(void *)(a1 + 64);
        }
        *((unsigned char *)v4 + 64) = 1;
      }
      *((unsigned char *)v4 + 72) = 0;
      *((unsigned char *)v4 + 216) = 0;
      if (*(unsigned char *)(a1 + 224))
      {
        sub_2157B6F84((char *)v4 + 72, (long long *)(a1 + 80));
        *((unsigned char *)v4 + 216) = 1;
      }
      char v5 = 0;
      v4[14] = *(_OWORD *)(a1 + 232);
      uint64_t v6 = *(void *)(a1 + 248);
      *((_DWORD *)v4 + 62) = 1;
      *((void *)v4 + 30) = v6;
      *(void *)size_t v4 = &unk_26C658B50;
      *((void *)v4 + 1) = &unk_26C658BA0;
      char v4[16] = 0u;
      v4[17] = 0u;
      v4[18] = 0u;
      v4[19] = 0u;
      v4[20] = 0u;
      v4[21] = 0u;
      v4[22] = 0u;
      v4[23] = 0u;
      *((void *)v4 + 48) = 0;
      atomic_fetch_add((atomic_uint *volatile)v4 + 62, 1u);
      uint64_t v7 = *(void *)(a1 + 264);
      *(void *)(a1 + 264) = v4;
      if (!v7) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    sub_2157B71B0();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEA0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEA0))
    {
LABEL_19:
      if (byte_26788D28F < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788D278, *((unint64_t *)&xmmword_26788D278 + 1));
      }
      else
      {
        long long __dst = xmmword_26788D278;
        uint64_t v42 = unk_26788D288;
      }
      sub_21573A150(&v39, (uint64_t)&__dst, 1uLL);
      v28[0] = 0;
      char v38 = 0;
      sub_21574086C((uint64_t *)&xmmword_26788D230, (uint64_t *)&v39, (uint64_t)v28, 0);
      if (v38 && v37)
      {
        if (v36)
        {
          if (v35 < 0) {
            operator delete(__p);
          }
          if (v33 < 0) {
            operator delete(v32);
          }
        }
        if (v31 && v30 < 0) {
          operator delete(v29);
        }
      }
      uint64_t v8 = (void **)v39;
      if (v39)
      {
        uint64_t v9 = v40;
        uint64_t v10 = v39;
        if (v40 != v39)
        {
          do
          {
            if (*((char *)v9 - 1) < 0) {
              operator delete(*(v9 - 3));
            }
            v9 -= 3;
          }
          while (v9 != v8);
          uint64_t v10 = v39;
        }
        char v40 = v8;
        operator delete(v10);
      }
      if (SHIBYTE(v42) < 0) {
        operator delete((void *)__dst);
      }
      size_t v4 = 0;
      char v5 = 1;
      uint64_t v7 = *(void *)(a1 + 264);
      *(void *)(a1 + 264) = 0;
      if (!v7) {
        goto LABEL_14;
      }
LABEL_13:
      (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
LABEL_14:
      if ((v5 & 1) == 0) {
        (*(void (**)(_OWORD *))(*(void *)v4 + 24))(v4);
      }
      return *(void *)(a1 + 264);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEA8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEA8))
    {
LABEL_46:
      int v11 = byte_26788D2A7;
      if (byte_26788D2A7 >= 0) {
        size_t v12 = byte_26788D2A7;
      }
      else {
        size_t v12 = qword_26788D298;
      }
      unint64_t v13 = v12 + 1;
      if (v12 + 1 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v13 >= 0x17)
      {
        uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v13 | 7) != 0x17) {
          uint64_t v15 = v13 | 7;
        }
        uint64_t v16 = v15 + 1;
        char v14 = (long long *)operator new(v15 + 1);
        *((void *)&xmmword_26788D278 + 1) = v12 + 1;
        unk_26788D288 = v16 | 0x8000000000000000;
        *(void *)&xmmword_26788D278 = v14;
      }
      else
      {
        unk_26788D288 = 0;
        xmmword_26788D278 = 0uLL;
        char v14 = &xmmword_26788D278;
        byte_26788D28F = v12 + 1;
        if (!v12)
        {
LABEL_60:
          *(_WORD *)((char *)v14 + v12) = 38;
          __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D278, &dword_21572C000);
          __cxa_guard_release(&qword_26788CEA0);
          goto LABEL_19;
        }
      }
      if (v11 >= 0) {
        uint64_t v17 = &qword_26788D290;
      }
      else {
        uint64_t v17 = (uint64_t *)qword_26788D290;
      }
      memmove(v14, v17, v12);
      goto LABEL_60;
    }
    char v18 = sub_2157B73A8();
    char v19 = (const void **)v18;
    int v20 = *((char *)v18 + 23);
    if (v20 >= 0) {
      size_t v21 = *((unsigned __int8 *)v18 + 23);
    }
    else {
      size_t v21 = *((void *)v18 + 1);
    }
    unint64_t v22 = v21 + 6;
    if (v21 + 6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v22 >= 0x17)
    {
      uint64_t v24 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v22 | 7) != 0x17) {
        uint64_t v24 = v22 | 7;
      }
      uint64_t v25 = v24 + 1;
      long long v26 = (char *)operator new(v24 + 1);
      qword_26788D298 = v21 + 6;
      unk_26788D2A0 = v25 | 0x8000000000000000;
      qword_26788D290 = (uint64_t)v26;
      *(_DWORD *)long long v26 = 1936617315;
      *((_WORD *)v26 + 2) = 8308;
      uint64_t v23 = v26 + 6;
    }
    else
    {
      qword_26788D298 = 0;
      unk_26788D2A0 = 0;
      qword_26788D290 = 0x2074736E6F63;
      byte_26788D2A7 = v21 + 6;
      uint64_t v23 = (char *)&qword_26788D290 + 6;
      if (!v21)
      {
LABEL_77:
        v23[v21] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D290, &dword_21572C000);
        __cxa_guard_release(&qword_26788CEA8);
        goto LABEL_46;
      }
    }
    if (v20 >= 0) {
      long long v27 = v19;
    }
    else {
      long long v27 = *v19;
    }
    memmove(v23, v27, v21);
    goto LABEL_77;
  }
  return result;
}

void sub_2157AC8E4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788CEA8);
    __cxa_guard_abort(&qword_26788CEA0);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157AC914(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157AC920);
  }
  sub_215731D80(a1);
}

uint64_t VZPeerInfoGetUUID(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetUUID", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 256);
  int v3 = *(std::__shared_weak_count **)(a1 + 264);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 256);
      }
LABEL_8:
      CFAllocatorRef Default = CFAllocatorGetDefault();
      CFUUIDRef v6 = CFUUIDCreateFromUUIDBytes(Default, *(CFUUIDBytes *)(a1 + 16));
      sub_215DDA524((int)&v7, v6, 0);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 256);
}

BOOL sub_2157ACA6C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D050, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D050))
  {
    sub_2157BA6A8();
    int v5 = byte_26788D757;
    if (byte_26788D757 >= 0) {
      size_t v6 = byte_26788D757;
    }
    else {
      size_t v6 = qword_26788D748;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788D728 + 1) = v6 + 1;
      unk_26788D738 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788D728 = v8;
    }
    else
    {
      unk_26788D738 = 0;
      xmmword_26788D728 = 0uLL;
      uint64_t v8 = &xmmword_26788D728;
      byte_26788D73F = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D728, &dword_21572C000);
        __cxa_guard_release(&qword_26788D050);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      int v11 = &qword_26788D740;
    }
    else {
      int v11 = (uint64_t *)qword_26788D740;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788D73F < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788D728, *((unint64_t *)&xmmword_26788D728 + 1));
  }
  else
  {
    *(_OWORD *)size_t v12 = xmmword_26788D728;
    uint64_t v13 = unk_26788D738;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157ACD9C(_Unwind_Exception *a1)
{
}

void sub_2157ACDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZPeerInfoGetDeviceUserGivenName(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceUserGivenName", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 272);
  int v3 = *(std::__shared_weak_count **)(a1 + 280);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 272);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 72);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 272);
}

uint64_t VZPeerInfoGetDeviceProductName(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceProductName", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 288);
  int v3 = *(std::__shared_weak_count **)(a1 + 296);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 288);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 96);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 288);
}

uint64_t VZPeerInfoGetDeviceType(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceType", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 304);
  int v3 = *(std::__shared_weak_count **)(a1 + 312);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 304);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 120);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 304);
}

uint64_t VZPeerInfoGetDeviceSerialNumber(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceSerialNumber", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 320);
  int v3 = *(std::__shared_weak_count **)(a1 + 328);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 320);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 144);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 320);
}

uint64_t VZPeerInfoGetDeviceOSBuildVersion(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceOSBuildVersion", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 336);
  int v3 = *(std::__shared_weak_count **)(a1 + 344);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 336);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 168);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 336);
}

uint64_t VZPeerInfoGetDeviceOSProductVersion(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetDeviceOSProductVersion", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 352);
  int v3 = *(std::__shared_weak_count **)(a1 + 360);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 352);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 216)) {
        int v5 = (void *)(a1 + 192);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 352);
}

uint64_t VZPeerInfoGetProcessId(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetProcessId", a1)) {
    return 0;
  }
  else {
    return *(unsigned int *)(a1 + 32);
  }
}

uint64_t VZPeerInfoGetProcessName(uint64_t a1)
{
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetProcessName", a1)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 368);
  int v3 = *(std::__shared_weak_count **)(a1 + 376);
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4) {
        return *(void *)(a1 + 368);
      }
LABEL_8:
      if (*(unsigned char *)(a1 + 64)) {
        int v5 = (void *)(a1 + 40);
      }
      else {
        int v5 = &unk_215ED5AE0;
      }
      sub_215DD0B64((uint64_t)v5);
    }
  }
  if (!v4) {
    goto LABEL_8;
  }
  return *(void *)(a1 + 368);
}

uint64_t VZPeerInfoGetCurrentProtocolVersion(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (sub_2157ACA6C((uint64_t)"VZPeerInfoGetCurrentProtocolVersion", a1)) {
    return 0;
  }
  uint64_t result = *(void *)(a1 + 384);
  if (!result)
  {
    int v3 = operator new(0x20uLL, MEMORY[0x263F8C180]);
    uint64_t v4 = v3;
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 224);
      v3[6] = *(_DWORD *)(a1 + 232);
      v3[7] = 1;
      *(void *)int v3 = &unk_26C658948;
      *((void *)v3 + 1) = &unk_26C658998;
      *((void *)v3 + 2) = v5;
      off_26C658958((uint64_t)v3);
      size_t v6 = v4;
      uint64_t v7 = *(void *)(a1 + 384);
      *(void *)(a1 + 384) = v4;
      if (!v7)
      {
LABEL_7:
        if (v4) {
          (*(void (**)(_DWORD *))(*(void *)v6 + 24))(v6);
        }
        return *(void *)(a1 + 384);
      }
LABEL_6:
      (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
      goto LABEL_7;
    }
    uint64_t v8 = (uint64_t *)sub_2157A5630();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CE78, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CE78))
    {
LABEL_12:
      if (byte_26788D217 < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788D200, *((unint64_t *)&xmmword_26788D200 + 1));
      }
      else
      {
        long long __dst = xmmword_26788D200;
        uint64_t v42 = unk_26788D210;
      }
      sub_21573A150(&v39, (uint64_t)&__dst, 1uLL);
      v28[0] = 0;
      char v38 = 0;
      sub_21574086C(v8, (uint64_t *)&v39, (uint64_t)v28, 0);
      if (v38 && v37)
      {
        if (v36)
        {
          if (v35 < 0) {
            operator delete(__p);
          }
          if (v33 < 0) {
            operator delete(v32);
          }
        }
        if (v31 && v30 < 0) {
          operator delete(v29);
        }
      }
      uint64_t v9 = (void **)v39;
      if (v39)
      {
        uint64_t v10 = v40;
        int v11 = v39;
        if (v40 != v39)
        {
          do
          {
            if (*((char *)v10 - 1) < 0) {
              operator delete(*(v10 - 3));
            }
            v10 -= 3;
          }
          while (v10 != v9);
          int v11 = v39;
        }
        char v40 = v9;
        operator delete(v11);
      }
      if (SHIBYTE(v42) < 0) {
        operator delete((void *)__dst);
      }
      size_t v6 = 0;
      uint64_t v7 = *(void *)(a1 + 384);
      *(void *)(a1 + 384) = 0;
      if (!v7) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CE80, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CE80))
    {
LABEL_39:
      int v12 = byte_26788D22F;
      if (byte_26788D22F >= 0) {
        size_t v13 = byte_26788D22F;
      }
      else {
        size_t v13 = qword_26788D220;
      }
      unint64_t v14 = v13 + 1;
      if (v13 + 1 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v14 >= 0x17)
      {
        uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v14 | 7) != 0x17) {
          uint64_t v16 = v14 | 7;
        }
        uint64_t v17 = v16 + 1;
        long long v15 = (long long *)operator new(v16 + 1);
        *((void *)&xmmword_26788D200 + 1) = v13 + 1;
        unk_26788D210 = v17 | 0x8000000000000000;
        *(void *)&xmmword_26788D200 = v15;
      }
      else
      {
        unk_26788D210 = 0;
        xmmword_26788D200 = 0uLL;
        long long v15 = &xmmword_26788D200;
        byte_26788D217 = v13 + 1;
        if (!v13)
        {
LABEL_53:
          *(_WORD *)((char *)v15 + v13) = 38;
          __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D200, &dword_21572C000);
          __cxa_guard_release(&qword_26788CE78);
          goto LABEL_12;
        }
      }
      if (v12 >= 0) {
        char v18 = &qword_26788D218;
      }
      else {
        char v18 = (uint64_t *)qword_26788D218;
      }
      memmove(v15, v18, v13);
      goto LABEL_53;
    }
    char v19 = sub_2157A584C();
    int v27 = *((char *)v19 + 23);
    if (v27 >= 0) {
      size_t v20 = *((unsigned __int8 *)v19 + 23);
    }
    else {
      size_t v20 = *((void *)v19 + 1);
    }
    unint64_t v21 = v20 + 6;
    if (v20 + 6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v21 >= 0x17)
    {
      uint64_t v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v21 | 7) != 0x17) {
        uint64_t v23 = v21 | 7;
      }
      uint64_t v24 = v23 + 1;
      char v25 = (char *)operator new(v23 + 1);
      qword_26788D220 = v20 + 6;
      unk_26788D228 = v24 | 0x8000000000000000;
      qword_26788D218 = (uint64_t)v25;
      *(_DWORD *)char v25 = 1936617315;
      *((_WORD *)v25 + 2) = 8308;
      unint64_t v22 = v25 + 6;
    }
    else
    {
      qword_26788D220 = 0;
      unk_26788D228 = 0;
      qword_26788D218 = 0x2074736E6F63;
      byte_26788D22F = v20 + 6;
      unint64_t v22 = (char *)&qword_26788D218 + 6;
      if (!v20)
      {
LABEL_70:
        v22[v20] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D218, &dword_21572C000);
        __cxa_guard_release(&qword_26788CE80);
        goto LABEL_39;
      }
    }
    if (v27 >= 0) {
      long long v26 = v19;
    }
    else {
      long long v26 = *(long long **)v19;
    }
    memmove(v22, v26, v20);
    goto LABEL_70;
  }
  return result;
}

void sub_2157ADDFC(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788CE80);
    __cxa_guard_abort(&qword_26788CE78);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZLoggerUpdateGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D068, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D068))
  {
    return qword_26788D060;
  }
  qword_26788D060 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D068);
  return qword_26788D060;
}

uint64_t VZLoggerUpdateGetEnableStateChanges(void *a1)
{
  uint64_t v152 = *MEMORY[0x263EF8340];
  if (a1)
  {
    uint64_t result = a1[6];
    if (result) {
      return result;
    }
    int v3 = operator new(0x30uLL, MEMORY[0x263F8C180]);
    if (v3)
    {
      uint64_t v4 = (uint64_t)v3;
      *int v3 = &unk_26C6565D0;
      uint64_t v124 = 0;
      uint64_t v125 = 0;
      v123 = &v124;
      uint64_t v5 = (const void **)a1[2];
      if (v5 == a1 + 3)
      {
        uint64_t v6 = 0;
        v3[3] = 0;
        v3[4] = 0;
        uint64_t v7 = v3 + 3;
      }
      else
      {
        do
        {
          sub_2157B75C4(&v123, &v124, v5 + 4, (uint64_t)(v5 + 4));
          uint64_t v8 = (const void **)v5[1];
          if (v8)
          {
            do
            {
              uint64_t v9 = (const void ***)v8;
              uint64_t v8 = (const void **)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              uint64_t v9 = (const void ***)v5[2];
              BOOL v10 = *v9 == v5;
              uint64_t v5 = (const void **)v9;
            }
            while (!v10);
          }
          uint64_t v5 = (const void **)v9;
        }
        while (v9 != a1 + 3);
        int v11 = v123;
        uint64_t v6 = v124;
        uint64_t v12 = v125;
        *(void *)(v4 + 24) = v124;
        uint64_t v7 = (void *)(v4 + 24);
        *(void *)(v4 + 16) = v11;
        *(void *)(v4 + 32) = v12;
        if (v12)
        {
          *(void *)(v6 + 16) = v7;
          v123 = &v124;
          uint64_t v124 = 0;
          uint64_t v125 = 0;
          uint64_t v6 = 0;
          goto LABEL_50;
        }
      }
      *(void *)(v4 + 16) = v7;
LABEL_50:
      sub_21573AE84((uint64_t)&v123, (char *)v6);
      *(_DWORD *)(v4 + 40) = 1;
      *(void *)uint64_t v4 = &unk_26C6576E8;
      *(void *)(v4 + 8) = &unk_26C657738;
      off_26C6576F8(v4);
      char v13 = 0;
      uint64_t v14 = a1[6];
      a1[6] = v4;
      if (!v14)
      {
LABEL_52:
        if ((v13 & 1) == 0) {
          (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
        }
        return a1[6];
      }
LABEL_51:
      (*(void (**)(uint64_t))(*(void *)v14 + 24))(v14);
      goto LABEL_52;
    }
    char v30 = (uint64_t *)sub_2157741C4();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEB0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEB0))
    {
LABEL_91:
      if (byte_26788D2A8[23] < 0) {
        sub_215738B0C(&__dst, *(void **)byte_26788D2A8, *(unint64_t *)&byte_26788D2A8[8]);
      }
      else {
        std::string __dst = *(std::string *)byte_26788D2A8;
      }
      sub_21573A150(v138, (uint64_t)&__dst, 1uLL);
      LOBYTE(v111) = 0;
      char v122 = 0;
      sub_21574086C(v30, (uint64_t *)v138, (uint64_t)&v111, 0);
      if (v122 && v121)
      {
        if (v120)
        {
          if (SHIBYTE(v119) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v116) < 0) {
            operator delete((void *)v115);
          }
        }
        if (v114 && SHIBYTE(v113) < 0) {
          operator delete((void *)v112);
        }
      }
      char v31 = (void **)v138[0];
      if (v138[0])
      {
        uint64_t v32 = (void **)v138[1];
        char v33 = v138[0];
        if (v138[1] != v138[0])
        {
          do
          {
            if (*((char *)v32 - 1) < 0) {
              operator delete(*(v32 - 3));
            }
            v32 -= 3;
          }
          while (v32 != v31);
          char v33 = v138[0];
        }
        v138[1] = v31;
        operator delete(v33);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__r_.__value_.__l.__data_);
        uint64_t v4 = 0;
        char v13 = 1;
        uint64_t v14 = a1[6];
        a1[6] = 0;
        if (!v14) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v4 = 0;
        char v13 = 1;
        uint64_t v14 = a1[6];
        a1[6] = 0;
        if (!v14) {
          goto LABEL_52;
        }
      }
      goto LABEL_51;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEB8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEB8))
    {
LABEL_119:
      int v34 = byte_26788D2D7;
      if (byte_26788D2D7 >= 0) {
        size_t v35 = byte_26788D2D7;
      }
      else {
        size_t v35 = qword_26788D2C8;
      }
      unint64_t v36 = v35 + 1;
      if (v35 + 1 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v36 >= 0x17)
      {
        uint64_t v38 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v36 | 7) != 0x17) {
          uint64_t v38 = v36 | 7;
        }
        uint64_t v39 = v38 + 1;
        char v37 = (char *)operator new(v38 + 1);
        *(void *)&byte_26788D2A8[8] = v35 + 1;
        *(void *)&byte_26788D2A8[16] = v39 | 0x8000000000000000;
        *(void *)byte_26788D2A8 = v37;
      }
      else
      {
        *(void *)&byte_26788D2A8[16] = 0;
        *(_OWORD *)byte_26788D2A8 = 0uLL;
        char v37 = byte_26788D2A8;
        byte_26788D2A8[23] = v35 + 1;
        if (!v35)
        {
LABEL_133:
          *(_WORD *)&v37[v35] = 38;
          __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D2A8, &dword_21572C000);
          __cxa_guard_release(&qword_26788CEB0);
          goto LABEL_91;
        }
      }
      if (v34 >= 0) {
        char v40 = &qword_26788D2C0;
      }
      else {
        char v40 = (uint64_t *)qword_26788D2C0;
      }
      memmove(v37, v40, v35);
      goto LABEL_133;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEC0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEC0))
    {
LABEL_136:
      int v41 = byte_26788D2EF;
      if (byte_26788D2EF >= 0) {
        size_t v42 = byte_26788D2EF;
      }
      else {
        size_t v42 = *((void *)&xmmword_26788D2D8 + 1);
      }
      unint64_t v43 = v42 + 6;
      if (v42 + 6 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v43 >= 0x17)
      {
        uint64_t v45 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v43 | 7) != 0x17) {
          uint64_t v45 = v43 | 7;
        }
        uint64_t v46 = v45 + 1;
        long long v47 = (char *)operator new(v45 + 1);
        qword_26788D2C8 = v42 + 6;
        unk_26788D2D0 = v46 | 0x8000000000000000;
        qword_26788D2C0 = (uint64_t)v47;
        *(_DWORD *)long long v47 = 1936617315;
        *((_WORD *)v47 + 2) = 8308;
        char v44 = v47 + 6;
      }
      else
      {
        qword_26788D2C8 = 0;
        unk_26788D2D0 = 0;
        qword_26788D2C0 = 0x2074736E6F63;
        byte_26788D2D7 = v42 + 6;
        char v44 = (char *)&qword_26788D2C0 + 6;
        if (!v42)
        {
LABEL_151:
          v44[v42] = 0;
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D2C0, &dword_21572C000);
          __cxa_guard_release(&qword_26788CEB8);
          goto LABEL_119;
        }
      }
      if (v41 >= 0) {
        long long v48 = &xmmword_26788D2D8;
      }
      else {
        long long v48 = (long long *)xmmword_26788D2D8;
      }
      memmove(v44, v48, v42);
      goto LABEL_151;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEC8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CEC8))
    {
LABEL_419:
      if (byte_26788D307 < 0)
      {
        sub_215738B0C(&xmmword_26788D2D8, (void *)qword_26788D2F0, unk_26788D2F8);
      }
      else
      {
        xmmword_26788D2D8 = *(_OWORD *)&qword_26788D2F0;
        unk_26788D2E8 = unk_26788D300;
      }
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D2D8, &dword_21572C000);
      __cxa_guard_release(&qword_26788CEC0);
      goto LABEL_136;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF68, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788CF68))
    {
      sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::map<std::string, cv3d::kit::viz::EnableState>]", &qword_26788D4D0);
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D4D0, &dword_21572C000);
      __cxa_guard_release(&qword_26788CF68);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF70, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788CF70))
    {
LABEL_188:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF78, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788CF78))
      {
        if (byte_26788D4FF < 0)
        {
          sub_215738B0C(v138, (void *)xmmword_26788D4E8, *((unint64_t *)&xmmword_26788D4E8 + 1));
        }
        else
        {
          *(_OWORD *)uint64_t v138 = xmmword_26788D4E8;
          v139[0] = (void *)unk_26788D4F8;
        }
        sub_215E13B5C((std::string *)v138, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_26788D500);
        if (SHIBYTE(v139[0]) < 0) {
          operator delete(v138[0]);
        }
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D500, &dword_21572C000);
        __cxa_guard_release(&qword_26788CF78);
      }
      if (byte_26788D517 < 0)
      {
        sub_215738B0C(v126, (void *)xmmword_26788D500, *((unint64_t *)&xmmword_26788D500 + 1));
      }
      else
      {
        *(_OWORD *)uint64_t v126 = xmmword_26788D500;
        uint64_t v127 = unk_26788D510;
      }
      *(_OWORD *)uint64_t v138 = *(_OWORD *)"std::string";
      v139[0] = (void *)0xB00000000000000;
      sub_2157B7A70();
      if (byte_26788D31F < 0)
      {
        sub_215738B0C(&v139[1], (void *)xmmword_26788D308, *((unint64_t *)&xmmword_26788D308 + 1));
      }
      else
      {
        *(_OWORD *)&v139[1] = xmmword_26788D308;
        uint64_t v140 = unk_26788D318;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEE8, memory_order_acquire) & 1) != 0
        || !__cxa_guard_acquire(&qword_26788CEE8))
      {
LABEL_255:
        if (SHIBYTE(qword_26788D360) < 0)
        {
          sub_215738B0C(v141, (void *)xmmword_26788D350, *((unint64_t *)&xmmword_26788D350 + 1));
        }
        else
        {
          *(_OWORD *)uint64_t v141 = xmmword_26788D350;
          uint64_t v142 = qword_26788D360;
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF10, memory_order_acquire) & 1) != 0
          || !__cxa_guard_acquire(&qword_26788CF10))
        {
LABEL_397:
          if (SHIBYTE(qword_26788D3D8) < 0)
          {
            sub_215738B0C(v143, (void *)xmmword_26788D3C8, *((unint64_t *)&xmmword_26788D3C8 + 1));
          }
          else
          {
            *(_OWORD *)uint64_t v143 = xmmword_26788D3C8;
            *(void *)&v143[16] = qword_26788D3D8;
          }
          sub_21573A150(&v128, (uint64_t)v138, 4uLL);
          sub_215E19EAC(v126, (uint64_t *)&v128, (std::string *)&qword_26788D2F0, v103, v104);
          unint64_t v105 = (void **)v128;
          if (v128)
          {
            char v106 = v129;
            uint64_t v107 = v128;
            if (v129 != v128)
            {
              do
              {
                if (*((char *)v106 - 1) < 0) {
                  operator delete(*(v106 - 3));
                }
                v106 -= 3;
              }
              while (v106 != v105);
              uint64_t v107 = v128;
            }
            unint64_t v129 = v105;
            operator delete(v107);
          }
          if ((v143[23] & 0x80000000) != 0)
          {
            operator delete(*(void **)v143);
            if (SHIBYTE(v142) < 0)
            {
LABEL_409:
              operator delete(v141[0]);
              if ((SHIBYTE(v140) & 0x80000000) == 0) {
                goto LABEL_410;
              }
              goto LABEL_415;
            }
          }
          else if (SHIBYTE(v142) < 0)
          {
            goto LABEL_409;
          }
          if ((SHIBYTE(v140) & 0x80000000) == 0)
          {
LABEL_410:
            if (SHIBYTE(v139[0]) < 0) {
              goto LABEL_411;
            }
            goto LABEL_416;
          }
LABEL_415:
          operator delete(v139[1]);
          if (SHIBYTE(v139[0]) < 0)
          {
LABEL_411:
            operator delete(v138[0]);
            if (SHIBYTE(v127) < 0) {
              goto LABEL_417;
            }
            goto LABEL_418;
          }
LABEL_416:
          if (SHIBYTE(v127) < 0) {
LABEL_417:
          }
            operator delete(v126[0]);
LABEL_418:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D2F0, &dword_21572C000);
          __cxa_guard_release(&qword_26788CEC8);
          goto LABEL_419;
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF18, memory_order_acquire) & 1) != 0
          || !__cxa_guard_acquire(&qword_26788CF18))
        {
LABEL_393:
          if (byte_26788D3F7 < 0)
          {
            sub_215738B0C(&xmmword_26788D3C8, (void *)qword_26788D3E0, unk_26788D3E8);
          }
          else
          {
            xmmword_26788D3C8 = *(_OWORD *)&qword_26788D3E0;
            qword_26788D3D8 = unk_26788D3F0;
          }
          __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D3C8, &dword_21572C000);
          __cxa_guard_release(&qword_26788CF10);
          goto LABEL_397;
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF50, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_26788CF50))
        {
          sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::allocator<std::pair<const std::string, cv3d::kit::viz::EnableState>>]", &qword_26788D488);
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D488, &dword_21572C000);
          __cxa_guard_release(&qword_26788CF50);
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF58, memory_order_acquire) & 1) != 0
          || !__cxa_guard_acquire(&qword_26788CF58))
        {
LABEL_293:
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF60, memory_order_acquire) & 1) == 0
            && __cxa_guard_acquire(&qword_26788CF60))
          {
            if (byte_26788D4A0[23] < 0) {
              sub_215738B0C(&__dst, *(void **)byte_26788D4A0, *(unint64_t *)&byte_26788D4A0[8]);
            }
            else {
              std::string __dst = *(std::string *)byte_26788D4A0;
            }
            sub_215E13B5C(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_26788D4B8);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D4B8, &dword_21572C000);
            __cxa_guard_release(&qword_26788CF60);
          }
          if (byte_26788D4CF < 0)
          {
            sub_215738B0C(v130, (void *)xmmword_26788D4B8, *((unint64_t *)&xmmword_26788D4B8 + 1));
          }
          else
          {
            *(_OWORD *)unint64_t v130 = xmmword_26788D4B8;
            uint64_t v131 = unk_26788D4C8;
          }
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF20, memory_order_acquire) & 1) != 0
            || !__cxa_guard_acquire(&qword_26788CF20))
          {
            goto LABEL_378;
          }
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF28, memory_order_acquire) & 1) != 0
            || !__cxa_guard_acquire(&qword_26788CF28))
          {
LABEL_374:
            if (byte_26788D427 < 0)
            {
              sub_215738B0C(&xmmword_26788D3F8, (void *)qword_26788D410, unk_26788D418);
            }
            else
            {
              xmmword_26788D3F8 = *(_OWORD *)&qword_26788D410;
              qword_26788D408 = unk_26788D420;
            }
            __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D3F8, &dword_21572C000);
            __cxa_guard_release(&qword_26788CF20);
LABEL_378:
            if (SHIBYTE(qword_26788D408) < 0)
            {
              sub_215738B0C(&v147, (void *)xmmword_26788D3F8, *((unint64_t *)&xmmword_26788D3F8 + 1));
            }
            else
            {
              long long v147 = xmmword_26788D3F8;
              uint64_t v148 = qword_26788D408;
            }
            sub_21573A150(&v132, (uint64_t)&v147, 1uLL);
            sub_215E19EAC(v130, (uint64_t *)&v132, (std::string *)&qword_26788D3E0, v98, v99);
            char v100 = (void **)v132;
            if (v132)
            {
              char v101 = v133;
              char v102 = v132;
              if (v133 != v132)
              {
                do
                {
                  if (*((char *)v101 - 1) < 0) {
                    operator delete(*(v101 - 3));
                  }
                  v101 -= 3;
                }
                while (v101 != v100);
                char v102 = v132;
              }
              v133 = v100;
              operator delete(v102);
            }
            if (SHIBYTE(v148) < 0) {
              operator delete((void *)v147);
            }
            if (SHIBYTE(v131) < 0) {
              operator delete(v130[0]);
            }
            __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D3E0, &dword_21572C000);
            __cxa_guard_release(&qword_26788CF18);
            goto LABEL_393;
          }
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF38, memory_order_acquire) & 1) == 0
            && __cxa_guard_acquire(&qword_26788CF38))
          {
            sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::pair<const std::string, cv3d::kit::viz::EnableState>]", &qword_26788D440);
            __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D440, &dword_21572C000);
            __cxa_guard_release(&qword_26788CF38);
          }
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF40, memory_order_acquire) & 1) != 0
            || !__cxa_guard_acquire(&qword_26788CF40))
          {
LABEL_339:
            if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF48, memory_order_acquire) & 1) == 0
              && __cxa_guard_acquire(&qword_26788CF48))
            {
              if (byte_26788D458[23] < 0) {
                sub_215738B0C(&__dst, *(void **)byte_26788D458, *(unint64_t *)&byte_26788D458[8]);
              }
              else {
                std::string __dst = *(std::string *)byte_26788D458;
              }
              sub_215E13B5C(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_26788D470);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
              __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D470, &dword_21572C000);
              __cxa_guard_release(&qword_26788CF48);
            }
            if (byte_26788D487 < 0)
            {
              sub_215738B0C(v134, (void *)xmmword_26788D470, *((unint64_t *)&xmmword_26788D470 + 1));
            }
            else
            {
              *(_OWORD *)int64_t v134 = xmmword_26788D470;
              uint64_t v135 = unk_26788D480;
            }
            if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF30, memory_order_acquire) & 1) == 0
              && __cxa_guard_acquire(&qword_26788CF30))
            {
              byte_26788D428[17] = 0;
              *(_WORD *)&byte_26788D428[18] = 0;
              *(_DWORD *)&byte_26788D428[20] = 285212672;
              strcpy(byte_26788D428, "const std::strin");
              __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D428, &dword_21572C000);
              __cxa_guard_release(&qword_26788CF30);
            }
            if (byte_26788D428[23] < 0) {
              sub_215738B0C(&__dst, *(void **)byte_26788D428, *(unint64_t *)&byte_26788D428[8]);
            }
            else {
              std::string __dst = *(std::string *)byte_26788D428;
            }
            sub_2157B7A70();
            if (byte_26788D31F < 0)
            {
              sub_215738B0C(&v150, (void *)xmmword_26788D308, *((unint64_t *)&xmmword_26788D308 + 1));
            }
            else
            {
              long long v150 = xmmword_26788D308;
              uint64_t v151 = unk_26788D318;
            }
            sub_21573A150(v136, (uint64_t)&__dst, 2uLL);
            sub_215E19EAC(v134, (uint64_t *)v136, (std::string *)&qword_26788D410, v93, v94);
            uint64_t v95 = (void **)v136[0];
            if (v136[0])
            {
              uint64_t v96 = (void **)v136[1];
              uint64_t v97 = v136[0];
              if (v136[1] != v136[0])
              {
                do
                {
                  if (*((char *)v96 - 1) < 0) {
                    operator delete(*(v96 - 3));
                  }
                  v96 -= 3;
                }
                while (v96 != v95);
                uint64_t v97 = v136[0];
              }
              v136[1] = v95;
              operator delete(v97);
            }
            if (SHIBYTE(v151) < 0)
            {
              operator delete((void *)v150);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              {
LABEL_368:
                operator delete(__dst.__r_.__value_.__l.__data_);
                if (SHIBYTE(v135) < 0) {
                  goto LABEL_372;
                }
                goto LABEL_373;
              }
            }
            else if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            {
              goto LABEL_368;
            }
            if (SHIBYTE(v135) < 0) {
LABEL_372:
            }
              operator delete(v134[0]);
LABEL_373:
            __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D410, &dword_21572C000);
            __cxa_guard_release(&qword_26788CF28);
            goto LABEL_374;
          }
          uint64_t v82 = &qword_26788D440;
          if (byte_26788D457 >= 0) {
            uint64_t v83 = byte_26788D457;
          }
          else {
            uint64_t v83 = unk_26788D448;
          }
          if (byte_26788D457 < 0) {
            uint64_t v82 = (uint64_t *)qword_26788D440;
          }
          __sb = v82;
          uint64_t v84 = (char *)v82 + v83;
          if (v83 >= 1)
          {
            size_t v85 = v83;
            uint64_t v86 = v82;
            do
            {
              uint64_t v87 = memchr(v86, 60, v85);
              if (!v87) {
                break;
              }
              if (*v87 == 60) {
                goto LABEL_324;
              }
              uint64_t v86 = (uint64_t *)(v87 + 1);
              size_t v85 = v84 - (unsigned char *)v86;
            }
            while (v84 - (unsigned char *)v86 > 0);
          }
          uint64_t v87 = v84;
LABEL_324:
          unint64_t v88 = v87 - (unsigned char *)__sb;
          if (v87 == v84) {
            unint64_t v88 = -1;
          }
          if (v83 >= v88) {
            size_t v89 = v88;
          }
          else {
            size_t v89 = v83;
          }
          if (v89 > 0x7FFFFFFFFFFFFFF7) {
            sub_215731CD8();
          }
          if (v89 >= 0x17)
          {
            uint64_t v91 = (v89 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v89 | 7) != 0x17) {
              uint64_t v91 = v89 | 7;
            }
            uint64_t v92 = v91 + 1;
            uint64_t v90 = (char *)operator new(v91 + 1);
            *(void *)&byte_26788D458[8] = v89;
            *(void *)&byte_26788D458[16] = v92 | 0x8000000000000000;
            *(void *)byte_26788D458 = v90;
          }
          else
          {
            uint64_t v90 = byte_26788D458;
            byte_26788D458[23] = v89;
            if (!v89) {
              goto LABEL_338;
            }
          }
          memmove(v90, __sb, v89);
LABEL_338:
          v90[v89] = 0;
          __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D458, &dword_21572C000);
          __cxa_guard_release(&qword_26788CF40);
          goto LABEL_339;
        }
        uint64_t v71 = &qword_26788D488;
        if (byte_26788D49F >= 0) {
          uint64_t v72 = byte_26788D49F;
        }
        else {
          uint64_t v72 = unk_26788D490;
        }
        if (byte_26788D49F < 0) {
          uint64_t v71 = (uint64_t *)qword_26788D488;
        }
        __sa = v71;
        size_t v73 = (char *)v71 + v72;
        if (v72 >= 1)
        {
          size_t v74 = v72;
          char v75 = v71;
          do
          {
            long long v76 = memchr(v75, 60, v74);
            if (!v76) {
              break;
            }
            if (*v76 == 60) {
              goto LABEL_278;
            }
            char v75 = (uint64_t *)(v76 + 1);
            size_t v74 = v73 - (unsigned char *)v75;
          }
          while (v73 - (unsigned char *)v75 > 0);
        }
        long long v76 = v73;
LABEL_278:
        unint64_t v77 = v76 - (unsigned char *)__sa;
        if (v76 == v73) {
          unint64_t v77 = -1;
        }
        if (v72 >= v77) {
          size_t v78 = v77;
        }
        else {
          size_t v78 = v72;
        }
        if (v78 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        if (v78 >= 0x17)
        {
          uint64_t v80 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v78 | 7) != 0x17) {
            uint64_t v80 = v78 | 7;
          }
          uint64_t v81 = v80 + 1;
          uint64_t v79 = (char *)operator new(v80 + 1);
          *(void *)&byte_26788D4A0[8] = v78;
          *(void *)&byte_26788D4A0[16] = v81 | 0x8000000000000000;
          *(void *)byte_26788D4A0 = v79;
        }
        else
        {
          uint64_t v79 = byte_26788D4A0;
          byte_26788D4A0[23] = v78;
          if (!v78) {
            goto LABEL_292;
          }
        }
        memmove(v79, __sa, v78);
LABEL_292:
        v79[v78] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D4A0, &dword_21572C000);
        __cxa_guard_release(&qword_26788CF58);
        goto LABEL_293;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEF0, memory_order_acquire) & 1) != 0
        || !__cxa_guard_acquire(&qword_26788CEF0))
      {
LABEL_251:
        if (byte_26788D37F < 0)
        {
          sub_215738B0C(&xmmword_26788D350, (void *)qword_26788D368, unk_26788D370);
        }
        else
        {
          xmmword_26788D350 = *(_OWORD *)&qword_26788D368;
          qword_26788D360 = unk_26788D378;
        }
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D350, &dword_21572C000);
        __cxa_guard_release(&qword_26788CEE8);
        goto LABEL_255;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEF8, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788CEF8))
      {
        sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::less<std::string>]", &qword_26788D380);
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D380, &dword_21572C000);
        __cxa_guard_release(&qword_26788CEF8);
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF00, memory_order_acquire) & 1) != 0
        || !__cxa_guard_acquire(&qword_26788CF00))
      {
LABEL_237:
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF08, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_26788CF08))
        {
          if (byte_26788D398[23] < 0) {
            sub_215738B0C(&__dst, *(void **)byte_26788D398, *(unint64_t *)&byte_26788D398[8]);
          }
          else {
            std::string __dst = *(std::string *)byte_26788D398;
          }
          sub_215E13B5C(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_26788D3B0);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D3B0, &dword_21572C000);
          __cxa_guard_release(&qword_26788CF08);
        }
        if (byte_26788D3C7 < 0)
        {
          sub_215738B0C(v136, (void *)xmmword_26788D3B0, *((unint64_t *)&xmmword_26788D3B0 + 1));
        }
        else
        {
          *(_OWORD *)v136 = xmmword_26788D3B0;
          uint64_t v137 = unk_26788D3C0;
        }
        sub_21575C64C(v136, (std::string *)&qword_26788D368);
        if (SHIBYTE(v137) < 0) {
          operator delete(v136[0]);
        }
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D368, &dword_21572C000);
        __cxa_guard_release(&qword_26788CEF0);
        goto LABEL_251;
      }
      char v60 = &qword_26788D380;
      if (byte_26788D397 >= 0) {
        uint64_t v61 = byte_26788D397;
      }
      else {
        uint64_t v61 = unk_26788D388;
      }
      if (byte_26788D397 < 0) {
        char v60 = (uint64_t *)qword_26788D380;
      }
      std::string __s = v60;
      long long v62 = (char *)v60 + v61;
      if (v61 >= 1)
      {
        size_t v63 = v61;
        char v64 = v60;
        do
        {
          char v65 = memchr(v64, 60, v63);
          if (!v65) {
            break;
          }
          if (*v65 == 60) {
            goto LABEL_222;
          }
          char v64 = (uint64_t *)(v65 + 1);
          size_t v63 = v62 - (unsigned char *)v64;
        }
        while (v62 - (unsigned char *)v64 > 0);
      }
      char v65 = v62;
LABEL_222:
      unint64_t v66 = v65 - (unsigned char *)__s;
      if (v65 == v62) {
        unint64_t v66 = -1;
      }
      if (v61 >= v66) {
        size_t v67 = v66;
      }
      else {
        size_t v67 = v61;
      }
      if (v67 > 0x7FFFFFFFFFFFFFF7) {
        sub_215731CD8();
      }
      if (v67 >= 0x17)
      {
        uint64_t v69 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v67 | 7) != 0x17) {
          uint64_t v69 = v67 | 7;
        }
        uint64_t v70 = v69 + 1;
        uint64_t v68 = (char *)operator new(v69 + 1);
        *(void *)&byte_26788D398[8] = v67;
        *(void *)&byte_26788D398[16] = v70 | 0x8000000000000000;
        *(void *)byte_26788D398 = v68;
      }
      else
      {
        uint64_t v68 = byte_26788D398;
        byte_26788D398[23] = v67;
        if (!v67) {
          goto LABEL_236;
        }
      }
      memmove(v68, __s, v67);
LABEL_236:
      v68[v67] = 0;
      __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D398, &dword_21572C000);
      __cxa_guard_release(&qword_26788CF00);
      goto LABEL_237;
    }
    if (byte_26788D4E7 >= 0) {
      uint64_t v49 = byte_26788D4E7;
    }
    else {
      uint64_t v49 = unk_26788D4D8;
    }
    if (byte_26788D4E7 >= 0) {
      char v50 = &qword_26788D4D0;
    }
    else {
      char v50 = (uint64_t *)qword_26788D4D0;
    }
    uint64_t v51 = (char *)v50 + v49;
    if (v49 >= 1)
    {
      size_t v52 = v49;
      long long v53 = v50;
      do
      {
        char v54 = memchr(v53, 60, v52);
        if (!v54) {
          break;
        }
        if (*v54 == 60) {
          goto LABEL_172;
        }
        long long v53 = (uint64_t *)(v54 + 1);
        size_t v52 = v51 - (unsigned char *)v53;
      }
      while (v51 - (unsigned char *)v53 > 0);
    }
    char v54 = (char *)v50 + v49;
LABEL_172:
    unint64_t v55 = v54 - (unsigned char *)v50;
    if (v54 == v51) {
      unint64_t v55 = -1;
    }
    if (v49 >= v55) {
      size_t v56 = v55;
    }
    else {
      size_t v56 = v49;
    }
    if (v56 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v56 >= 0x17)
    {
      uint64_t v58 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v56 | 7) != 0x17) {
        uint64_t v58 = v56 | 7;
      }
      uint64_t v59 = v58 + 1;
      unsigned __int8 v57 = (long long *)operator new(v58 + 1);
      *((void *)&xmmword_26788D4E8 + 1) = v56;
      unk_26788D4F8 = v59 | 0x8000000000000000;
      *(void *)&xmmword_26788D4E8 = v57;
    }
    else
    {
      unsigned __int8 v57 = &xmmword_26788D4E8;
      byte_26788D4FF = v56;
      if (!v56) {
        goto LABEL_187;
      }
    }
    memmove(v57, v50, v56);
LABEL_187:
    *((unsigned char *)v57 + v56) = 0;
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D4E8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CF70);
    goto LABEL_188;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D070, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D070))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D078, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788D078))
    {
      goto LABEL_57;
    }
    sub_2157B9F64();
    int v22 = byte_26788D697;
    if (byte_26788D697 >= 0) {
      size_t v23 = byte_26788D697;
    }
    else {
      size_t v23 = *((void *)&xmmword_26788D680 + 1);
    }
    unint64_t v24 = v23 + 6;
    if (v23 + 6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v24 >= 0x17)
    {
      uint64_t v26 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v24 | 7) != 0x17) {
        uint64_t v26 = v24 | 7;
      }
      uint64_t v27 = v26 + 1;
      uint64_t v28 = (char *)operator new(v26 + 1);
      qword_26788D778 = v23 + 6;
      unk_26788D780 = v27 | 0x8000000000000000;
      qword_26788D770 = (uint64_t)v28;
      *(_DWORD *)uint64_t v28 = 1936617315;
      *((_WORD *)v28 + 2) = 8308;
      char v25 = v28 + 6;
    }
    else
    {
      qword_26788D778 = 0;
      unk_26788D780 = 0;
      qword_26788D770 = 0x2074736E6F63;
      byte_26788D787 = v23 + 6;
      char v25 = (char *)&qword_26788D770 + 6;
      if (!v23)
      {
LABEL_88:
        v25[v23] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D770, &dword_21572C000);
        __cxa_guard_release(&qword_26788D078);
LABEL_57:
        int v15 = byte_26788D787;
        if (byte_26788D787 >= 0) {
          size_t v16 = byte_26788D787;
        }
        else {
          size_t v16 = qword_26788D778;
        }
        unint64_t v17 = v16 + 1;
        if (v16 + 1 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        if (v17 >= 0x17)
        {
          uint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v17 | 7) != 0x17) {
            uint64_t v19 = v17 | 7;
          }
          uint64_t v20 = v19 + 1;
          char v18 = (char *)operator new(v19 + 1);
          *(void *)&byte_26788D758[8] = v16 + 1;
          *(void *)&byte_26788D758[16] = v20 | 0x8000000000000000;
          *(void *)byte_26788D758 = v18;
        }
        else
        {
          char v18 = byte_26788D758;
          *(void *)&byte_26788D758[16] = 0;
          *(_OWORD *)byte_26788D758 = 0uLL;
          byte_26788D758[23] = v16 + 1;
          if (!v16)
          {
LABEL_71:
            *(_WORD *)&v18[v16] = 42;
            __cxa_atexit(MEMORY[0x263F8C0B8], byte_26788D758, &dword_21572C000);
            __cxa_guard_release(&qword_26788D070);
            goto LABEL_14;
          }
        }
        if (v15 >= 0) {
          unint64_t v21 = &qword_26788D770;
        }
        else {
          unint64_t v21 = (uint64_t *)qword_26788D770;
        }
        memmove(v18, v21, v16);
        goto LABEL_71;
      }
    }
    if (v22 >= 0) {
      char v29 = &xmmword_26788D680;
    }
    else {
      char v29 = (long long *)xmmword_26788D680;
    }
    memmove(v25, v29, v23);
    goto LABEL_88;
  }
LABEL_14:
  if (byte_26788D758[23] < 0) {
    sub_215738B0C(&__dst, *(void **)byte_26788D758, *(unint64_t *)&byte_26788D758[8]);
  }
  else {
    std::string __dst = *(std::string *)byte_26788D758;
  }
  LOBYTE(v150) = 1;
  sub_21573FF94((uint64_t)"VZLoggerUpdateGetEnableStateChanges", (uint64_t)&__dst, (uint64_t)v138);
  long long v111 = *(_OWORD *)v138;
  LOBYTE(v112) = 0;
  char v121 = 0;
  if (v146)
  {
    char v114 = 0;
    if ((_BYTE)v140)
    {
      long long v112 = *(_OWORD *)v139;
      long long v113 = v139[2];
      memset(v139, 0, sizeof(v139));
      char v114 = 1;
    }
    LOBYTE(v115) = 0;
    char v120 = 0;
    if (v145)
    {
      uint64_t v116 = v142;
      long long v115 = *(_OWORD *)v141;
      v141[0] = 0;
      v141[1] = 0;
      uint64_t v117 = *(void *)v143;
      *(_OWORD *)long long __p = *(_OWORD *)&v143[8];
      uint64_t v119 = v144;
      uint64_t v142 = 0;
      *(void *)&v143[8] = 0;
      *(void *)&v143[16] = 0;
      uint64_t v144 = 0;
      char v120 = 1;
    }
    char v121 = 1;
  }
  char v122 = 0;
  sub_21573E208(&v111, 0);
  if (!v122 && v121)
  {
    if (v120)
    {
      if (SHIBYTE(v119) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v116) < 0) {
        operator delete((void *)v115);
      }
    }
    if (v114 && SHIBYTE(v113) < 0) {
      operator delete((void *)v112);
    }
  }
  if (v146)
  {
    if (v145)
    {
      if (SHIBYTE(v144) < 0) {
        operator delete(*(void **)&v143[8]);
      }
      if (SHIBYTE(v142) < 0) {
        operator delete(v141[0]);
      }
    }
    if ((_BYTE)v140 && SHIBYTE(v139[2]) < 0) {
      operator delete(v139[0]);
    }
  }
  if ((_BYTE)v150 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_2157AFC0C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788CEC0);
    __cxa_guard_abort(&qword_26788CEB8);
    __cxa_guard_abort(&qword_26788CEB0);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157B00AC(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788CEB0);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157B00C8(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157B00D4);
  }
  sub_215731D80(a1);
}

uint64_t VZServerOptionsGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D088, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D088))
  {
    return qword_26788D080;
  }
  qword_26788D080 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D088);
  return qword_26788D080;
}

_OWORD *VZServerOptionsCreate()
{
  int v0 = operator new(0xA0uLL, MEMORY[0x263F8C180]);
  if (v0)
  {
    uint64_t v1 = v0;
    *int v0 = 0u;
    v0[8] = 0u;
    v0[9] = 0u;
    v0[6] = 0u;
    v0[7] = 0u;
    v0[4] = 0u;
    v0[5] = 0u;
    v0[2] = 0u;
    v0[3] = 0u;
    v0[1] = 0u;
    *(void *)int v0 = &unk_26C6565D0;
    sub_215966B54((uint64_t)(v0 + 1));
    *((_DWORD *)v1 + 38) = 1;
    *(void *)uint64_t v1 = &unk_26C658E38;
    *((void *)v1 + 1) = &unk_26C658E88;
    return v1;
  }
  else
  {
    sub_2157BA844();
    unint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    v6[0] = 0;
    char v16 = 0;
    sub_21574086C((uint64_t *)&xmmword_26788D788, (uint64_t *)&v17, (uint64_t)v6, 0);
    if (v16 && v15)
    {
      if (v14)
      {
        if (v13 < 0) {
          operator delete(__p);
        }
        if (v11 < 0) {
          operator delete(v10);
        }
      }
      if (v9 && v8 < 0) {
        operator delete(v7);
      }
    }
    uint64_t v3 = (uint64_t)v17;
    if (v17)
    {
      uint64_t v4 = v18;
      uint64_t v5 = v17;
      if ((void *)v18 != v17)
      {
        do
        {
          if (*(char *)(v4 - 1) < 0) {
            operator delete(*(void **)(v4 - 24));
          }
          v4 -= 24;
        }
        while (v4 != v3);
        uint64_t v5 = v17;
      }
      uint64_t v18 = v3;
      operator delete(v5);
    }
    return 0;
  }
}

BOOL VZServerOptionsSetTcpIpPort(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_2157B0374((uint64_t)"VZServerOptionsSetTcpIpPort", a1);
  if (!result)
  {
    if (a2)
    {
      if (!*(unsigned char *)(a1 + 24)) {
        *(unsigned char *)(a1 + 24) = 1;
      }
      *(void *)(a1 + 16) = a2;
    }
    else if (*(unsigned char *)(a1 + 24))
    {
      *(unsigned char *)(a1 + 24) = 0;
    }
  }
  return result;
}

BOOL sub_2157B0374(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0A8))
  {
    sub_2157BA844();
    int v5 = byte_26788D79F;
    if (byte_26788D79F >= 0) {
      size_t v6 = byte_26788D79F;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788D788 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      char v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788D7D0 + 1) = v6 + 1;
      unk_26788D7E0 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788D7D0 = v8;
    }
    else
    {
      unk_26788D7E0 = 0;
      xmmword_26788D7D0 = 0uLL;
      char v8 = &xmmword_26788D7D0;
      byte_26788D7E7 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D7D0, &dword_21572C000);
        __cxa_guard_release(&qword_26788D0A8);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788D788;
    }
    else {
      char v11 = (long long *)xmmword_26788D788;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788D7E7 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788D7D0, *((unint64_t *)&xmmword_26788D7D0 + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = xmmword_26788D7D0;
    uint64_t v13 = unk_26788D7E0;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157B06A4(_Unwind_Exception *a1)
{
}

void sub_2157B06BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZServerOptionsSetSyncType(uint64_t a1, unsigned int a2)
{
  if (!sub_2157B0374((uint64_t)"VZServerOptionsSetSyncType", a1))
  {
    sub_215966E08(a1 + 16, a2, (uint64_t)v4);
    sub_21575059C((uint64_t)"VZServerOptionsSetSyncType", v4, 0);
    if (!v14)
    {
      if (v13)
      {
        if (v12)
        {
          if (v11 < 0) {
            operator delete(__p);
          }
          if (v9 < 0) {
            operator delete(v8);
          }
        }
        if (v7)
        {
          if (v6 < 0) {
            operator delete(v5);
          }
        }
      }
    }
  }
}

void sub_2157B07BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t VZServerOptionsSetConnectionStatusChangedBlock(uint64_t a1, const void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t result = sub_2157B0374((uint64_t)"VZServerOptionsSetConnectionStatusChangedBlock", a1);
  if ((result & 1) == 0)
  {
    if (a2)
    {
      int v5 = operator new(0x20uLL);
      v5[1] = 0;
      _DWORD v5[2] = 0;
      *int v5 = &unk_26C659170;
      v5[3] = _Block_copy(a2);
      char v6 = v5 + 3;
    }
    else
    {
      char v6 = 0;
      int v5 = 0;
    }
    v7[0] = &unk_26C6592A0;
    v7[1] = v6;
    void v7[2] = v5;
    char v8 = v7;
    sub_215967030((void *)(a1 + 72), v7);
    uint64_t result = (uint64_t)v8;
    if (v8 == v7)
    {
      return (*(uint64_t (**)(void *))(v7[0] + 32))(v7);
    }
    else if (v8)
    {
      return (*(uint64_t (**)(void))(*v8 + 40))();
    }
  }
  return result;
}

void sub_2157B0924(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_2157B093C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157B0950((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_2157B0950(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t VZServerOptionsSetConnectionStatusChangedFunction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t result = sub_2157B0374((uint64_t)"VZServerOptionsSetConnectionStatusChangedFunction", a1);
  if ((result & 1) == 0)
  {
    v7[0] = &unk_26C6593A0;
    v7[1] = a3;
    void v7[2] = a2;
    char v8 = v7;
    sub_215967030((void *)(a1 + 72), v7);
    uint64_t result = (uint64_t)v8;
    if (v8 == v7)
    {
      return (*(uint64_t (**)(void *))(v7[0] + 32))(v7);
    }
    else if (v8)
    {
      return (*(uint64_t (**)(void))(*v8 + 40))();
    }
  }
  return result;
}

void sub_2157B0AEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157B0950((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t VZServerOptionsSetLoggerUpdatedBlock(uint64_t a1, const void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t result = sub_2157B0374((uint64_t)"VZServerOptionsSetLoggerUpdatedBlock", a1);
  if ((result & 1) == 0)
  {
    if (a2)
    {
      int v5 = operator new(0x20uLL);
      v5[1] = 0;
      _DWORD v5[2] = 0;
      *int v5 = &unk_26C6591C0;
      v5[3] = _Block_copy(a2);
      char v6 = v5 + 3;
    }
    else
    {
      char v6 = 0;
      int v5 = 0;
    }
    v7[0] = &unk_26C659320;
    v7[1] = v6;
    void v7[2] = v5;
    char v8 = v7;
    sub_215967474((void *)(a1 + 112), v7);
    uint64_t result = (uint64_t)v8;
    if (v8 == v7)
    {
      return (*(uint64_t (**)(void *))(v7[0] + 32))(v7);
    }
    else if (v8)
    {
      return (*(uint64_t (**)(void))(*v8 + 40))();
    }
  }
  return result;
}

void sub_2157B0C54(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_2157B0C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157B0C80((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_2157B0C80(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t VZServerOptionsSetLoggerUpdatedFunction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t result = sub_2157B0374((uint64_t)"VZServerOptionsSetLoggerUpdatedFunction", a1);
  if ((result & 1) == 0)
  {
    v7[0] = &unk_26C659420;
    v7[1] = a3;
    void v7[2] = a2;
    char v8 = v7;
    sub_215967474((void *)(a1 + 112), v7);
    uint64_t result = (uint64_t)v8;
    if (v8 == v7)
    {
      return (*(uint64_t (**)(void *))(v7[0] + 32))(v7);
    }
    else if (v8)
    {
      return (*(uint64_t (**)(void))(*v8 + 40))();
    }
  }
  return result;
}

void sub_2157B0E1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2157B0C80((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t VZServerGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0B8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D0B8))
  {
    return qword_26788D0B0;
  }
  qword_26788D0B0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D0B8);
  return qword_26788D0B0;
}

uint64_t VZServerCreate(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = *MEMORY[0x263EF8340];
  if (a1)
  {
    char v6 = operator new(0x20uLL);
    v6[1] = 0;
    v6[2] = 0;
    *char v6 = &unk_26C659120;
    v6[3] = _Block_copy(a1);
    char v7 = v6 + 3;
  }
  else
  {
    char v7 = 0;
    char v6 = 0;
  }
  v51[0] = &unk_26C659210;
  v51[1] = v7;
  v51[2] = v6;
  size_t v52 = v51;
  if (a2)
  {
    sub_2157BAE6C((uint64_t)v39, (uint64_t *)(a2 + 16));
    char v50 = 1;
  }
  else
  {
    v39[0] = 0;
    char v50 = 0;
  }
  char v37 = &v38;
  uint64_t v38 = a3;
  if (v52)
  {
    if (v52 == v51)
    {
      uint64_t v69 = v68;
      (*(void (**)(void *, void *))(v51[0] + 24))(v51, v68);
    }
    else
    {
      uint64_t v69 = v52;
      size_t v52 = 0;
    }
  }
  else
  {
    uint64_t v69 = 0;
  }
  uint64_t v8 = 1;
  char v70 = 1;
  v56[0] = 0;
  char v67 = 0;
  if (v50)
  {
    *(void *)size_t v56 = *(void *)v39;
    *(void *)&v56[5] = *(void *)&v39[5];
    LOBYTE(v57) = 0;
    char v59 = 0;
    if (v42)
    {
      long long v57 = v40;
      uint64_t v58 = v41;
      uint64_t v41 = 0;
      long long v40 = 0uLL;
      char v59 = 1;
    }
    int v60 = v43;
    char v61 = 0;
    char v63 = 0;
    if (v46)
    {
      if (v45)
      {
        if (v45 == &v44)
        {
          long long v62 = &v61;
          (*(void (**)(void))(v44 + 24))();
        }
        else
        {
          long long v62 = (char *)v45;
          uint64_t v45 = 0;
        }
      }
      else
      {
        long long v62 = 0;
      }
      char v63 = 1;
    }
    char v64 = 0;
    char v66 = 0;
    if (v49)
    {
      if (v48)
      {
        if (v48 == &v47)
        {
          char v65 = &v64;
          (*(void (**)(void))(v47 + 24))();
        }
        else
        {
          char v65 = (char *)v48;
          long long v48 = 0;
        }
      }
      else
      {
        char v65 = 0;
      }
      char v66 = 1;
    }
    char v67 = 1;
  }
  v53[0] = &unk_26C656CE8;
  v53[1] = sub_2157511D8;
  char v54 = v53;
  char v55 = 1;
  sub_215968554((uint64_t)v68, (uint64_t)v56, (uint64_t)v53, (uint64_t)&v27);
  if (!v55)
  {
LABEL_34:
    if (!v67) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v54 != v53)
  {
    if (v54) {
      (*(void (**)(void))(*v54 + 40))();
    }
    goto LABEL_34;
  }
  (*(void (**)(void *))(v53[0] + 32))(v53);
  if (v67) {
LABEL_35:
  }
    sub_2157B6A74((uint64_t)v56);
LABEL_36:
  if (v70)
  {
    if (v69 == v68)
    {
      (*(void (**)(void *))(v68[0] + 32))(v68);
      int v9 = v36;
      if (v36) {
        goto LABEL_41;
      }
LABEL_48:
      long long v16 = v27;
      sub_215741BFC(&v17, (long long *)v28);
      char v26 = 1;
      sub_2157BBA3C(&v37, (uint64_t)&v16);
      if (v26 && v25)
      {
        if (v24)
        {
          if (v23 < 0) {
            operator delete(__p);
          }
          if (v21 < 0) {
            operator delete(v20);
          }
        }
        if (v19 && v18 < 0) {
          operator delete(v17);
        }
      }
      goto LABEL_69;
    }
    if (v69) {
      (*(void (**)(void *))(*v69 + 40))(v69);
    }
  }
  int v9 = v36;
  if (!v36) {
    goto LABEL_48;
  }
LABEL_41:
  sub_2157BBDCC((uint64_t)&v27);
  uint64_t v10 = operator new(0x58uLL, MEMORY[0x263F8C180]);
  if (v10)
  {
    uint64_t v8 = (uint64_t)v10;
    v10[1] = v27;
    long long v27 = 0uLL;
    *((unsigned char *)v10 + 32) = 0;
    *((unsigned char *)v10 + 64) = 0;
    if ((_BYTE)v30)
    {
      long long v11 = *(_OWORD *)v28;
      long long v12 = v29;
      v28[0] = 0;
      v28[1] = 0;
      v10[2] = v11;
      v10[3] = v12;
      *((unsigned char *)v10 + 64) = 1;
    }
    *((_DWORD *)v10 + 18) = 1;
    *(void *)uint64_t v10 = &unk_26C658F30;
    *((void *)v10 + 1) = &unk_26C658F80;
    *((void *)v10 + 10) = 0;
    goto LABEL_69;
  }
  LOBYTE(v16) = 0;
  char v26 = 0;
  sub_2157BBA3C(&v37, (uint64_t)&v16);
  if (!v26 || !v25)
  {
LABEL_68:
    uint64_t v8 = 0;
    goto LABEL_69;
  }
  if (v24)
  {
    if (v23 < 0) {
      operator delete(__p);
    }
    if (v21 < 0) {
      operator delete(v20);
    }
  }
  uint64_t v8 = 0;
  if (v19 && v18 < 0)
  {
    operator delete(v17);
    goto LABEL_68;
  }
LABEL_69:
  if (v36)
  {
    if ((_BYTE)v30)
    {
      char v13 = (std::__shared_weak_count *)v28[1];
      if (v28[1])
      {
        if (!atomic_fetch_add((atomic_ullong *volatile)v28[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
    }
    char v14 = (std::__shared_weak_count *)*((void *)&v27 + 1);
    if (*((void *)&v27 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v27 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  else if (v35)
  {
    if (v34)
    {
      if (v33 < 0) {
        operator delete(v32);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
    }
    if (BYTE8(v29) && SBYTE7(v29) < 0) {
      operator delete(v28[0]);
    }
  }
  if (!v9) {
    uint64_t v8 = 0;
  }
  if (v50) {
    sub_2157B6A74((uint64_t)v39);
  }
  if (v52 == v51)
  {
    (*(void (**)(void *))(v51[0] + 32))(v51);
  }
  else if (v52)
  {
    (*(void (**)(void))(*v52 + 40))();
  }
  return v8;
}

void sub_2157B15B4(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157B1664(uint64_t a1, int a2)
{
  if (a2)
  {
    sub_215754968((uint64_t)&STACK[0x298]);
    if (*(unsigned char *)(v2 - 104)) {
      sub_2157B6A74(v2 - 240);
    }
    sub_2157BB9A4(v2 - 96);
    JUMPOUT(0x2157B1690);
  }
  JUMPOUT(0x2157B165CLL);
}

uint64_t VZServerCreateWithFunction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  if (a3)
  {
    sub_2157BAE6C((uint64_t)v39, (uint64_t *)(a3 + 16));
    int v7 = 1;
    char v50 = 1;
  }
  else
  {
    int v7 = 0;
    v39[0] = 0;
    char v50 = 0;
  }
  char v37 = &v38;
  uint64_t v38 = a4;
  v66[0] = &unk_26C6594A0;
  v66[1] = a2;
  v66[2] = a1;
  char v67 = v66;
  uint64_t v8 = 1;
  char v68 = 1;
  v54[0] = 0;
  char v65 = 0;
  if (v7)
  {
    *(void *)char v54 = *(void *)v39;
    *(void *)&v54[5] = *(void *)&v39[5];
    LOBYTE(v55) = 0;
    char v57 = 0;
    if (v42)
    {
      long long v55 = v40;
      uint64_t v56 = v41;
      uint64_t v41 = 0;
      long long v40 = 0uLL;
      char v57 = 1;
    }
    int v58 = v43;
    char v59 = 0;
    char v61 = 0;
    if (v46)
    {
      if (v45)
      {
        if (v45 == &v44)
        {
          int v60 = &v59;
          (*(void (**)(void))(v44 + 24))();
        }
        else
        {
          int v60 = (char *)v45;
          uint64_t v45 = 0;
        }
      }
      else
      {
        int v60 = 0;
      }
      char v61 = 1;
    }
    char v62 = 0;
    char v64 = 0;
    if (v49)
    {
      if (v48)
      {
        if (v48 == &v47)
        {
          char v63 = &v62;
          (*(void (**)(void))(v47 + 24))();
        }
        else
        {
          char v63 = (char *)v48;
          long long v48 = 0;
        }
      }
      else
      {
        char v63 = 0;
      }
      char v64 = 1;
    }
    char v65 = 1;
  }
  v51[0] = &unk_26C656CE8;
  v51[1] = sub_2157511D8;
  size_t v52 = v51;
  char v53 = 1;
  sub_215968554((uint64_t)v66, (uint64_t)v54, (uint64_t)v51, (uint64_t)&v27);
  if (!v53)
  {
LABEL_26:
    if (!v65) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v52 != v51)
  {
    if (v52) {
      (*(void (**)(void))(*v52 + 40))();
    }
    goto LABEL_26;
  }
  (*(void (**)(void *))(v51[0] + 32))(v51);
  if (v65) {
LABEL_27:
  }
    sub_2157B6A74((uint64_t)v54);
LABEL_28:
  if (v68)
  {
    if (v67 == v66)
    {
      (*(void (**)(void *))(v66[0] + 32))(v66);
      int v9 = v36;
      if (v36) {
        goto LABEL_33;
      }
LABEL_40:
      long long v16 = v27;
      sub_215741BFC(&v17, &v28);
      char v26 = 1;
      sub_2157BC7BC(&v37, (uint64_t)&v16);
      if (v26 && v25)
      {
        if (v24)
        {
          if (v23 < 0) {
            operator delete(__p);
          }
          if (v21 < 0) {
            operator delete(v20);
          }
        }
        if (v19 && v18 < 0) {
          operator delete(v17);
        }
      }
      goto LABEL_61;
    }
    if (v67) {
      (*(void (**)(void *))(*v67 + 40))(v67);
    }
  }
  int v9 = v36;
  if (!v36) {
    goto LABEL_40;
  }
LABEL_33:
  sub_2157BBDCC((uint64_t)&v27);
  uint64_t v10 = operator new(0x58uLL, MEMORY[0x263F8C180]);
  if (v10)
  {
    uint64_t v8 = (uint64_t)v10;
    v10[1] = v27;
    long long v27 = 0uLL;
    *((unsigned char *)v10 + 32) = 0;
    *((unsigned char *)v10 + 64) = 0;
    if ((_BYTE)v30)
    {
      long long v11 = v28;
      long long v12 = v29;
      long long v28 = 0uLL;
      v10[2] = v11;
      v10[3] = v12;
      *((unsigned char *)v10 + 64) = 1;
    }
    *((_DWORD *)v10 + 18) = 1;
    *(void *)uint64_t v10 = &unk_26C658F30;
    *((void *)v10 + 1) = &unk_26C658F80;
    *((void *)v10 + 10) = 0;
    goto LABEL_61;
  }
  LOBYTE(v16) = 0;
  char v26 = 0;
  sub_2157BC7BC(&v37, (uint64_t)&v16);
  if (!v26 || !v25)
  {
LABEL_60:
    uint64_t v8 = 0;
    goto LABEL_61;
  }
  if (v24)
  {
    if (v23 < 0) {
      operator delete(__p);
    }
    if (v21 < 0) {
      operator delete(v20);
    }
  }
  uint64_t v8 = 0;
  if (v19 && v18 < 0)
  {
    operator delete(v17);
    goto LABEL_60;
  }
LABEL_61:
  if (v36)
  {
    if ((_BYTE)v30)
    {
      char v13 = (std::__shared_weak_count *)*((void *)&v28 + 1);
      if (*((void *)&v28 + 1))
      {
        if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v28 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
    }
    char v14 = (std::__shared_weak_count *)*((void *)&v27 + 1);
    if (*((void *)&v27 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v27 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  else if (v35)
  {
    if (v34)
    {
      if (v33 < 0) {
        operator delete(v32);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
    }
    if (BYTE8(v29) && SBYTE7(v29) < 0) {
      operator delete((void *)v28);
    }
  }
  if (!v9) {
    uint64_t v8 = 0;
  }
  if (v50) {
    sub_2157B6A74((uint64_t)v39);
  }
  return v8;
}

void sub_2157B1E50(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

void sub_2157B1E6C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if (!a2) {
    JUMPOUT(0x2157B1E5CLL);
  }
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  if ((_BYTE)a79)
  {
    sub_215968B30((uint64_t)&a67);
  }
  else if ((_BYTE)a78)
  {
    if (a77)
    {
      if (a76 < 0) {
        operator delete(a75);
      }
      if (a74 < 0) {
        operator delete(a73);
      }
    }
    if (a72 && a71 < 0) {
      operator delete(a68);
    }
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v83 = std::logic_error::what(&a10);
    size_t v84 = strlen(v83);
    if (v84 <= 0x7FFFFFFFFFFFFFF7)
    {
      size_t v85 = (const char *)v84;
      if (v84 >= 0x17)
      {
        uint64_t v94 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v84 | 7) != 0x17) {
          uint64_t v94 = v84 | 7;
        }
        uint64_t v95 = v94 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v94 + 1);
        __dst.__imp_.__imp_ = v85;
        *(void *)&a37 = v95 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v84;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v84)
        {
LABEL_52:
          v85[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC(&a68, &a14);
          LOBYTE(a79) = 1;
          sub_2157BC7BC(&a80, (uint64_t)&a67);
          if ((_BYTE)a79 && (_BYTE)a78)
          {
            if (a77)
            {
              if (a76 < 0) {
                operator delete(a75);
              }
              if (a74 < 0) {
                operator delete(a73);
              }
            }
            if (a72 && a71 < 0) {
              operator delete(a68);
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_104;
        }
      }
      memmove(p_dst, v83, (size_t)v85);
      goto LABEL_52;
    }
LABEL_102:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(a67) = 0;
    LOBYTE(a79) = 0;
    sub_2157BC7BC(&a80, (uint64_t)&a67);
    if ((_BYTE)a79 && (_BYTE)a78)
    {
      if (a77)
      {
        if (a76 < 0) {
          operator delete(a75);
        }
        if (a74 < 0) {
          operator delete(a73);
        }
      }
      if (a72 && a71 < 0) {
        operator delete(a68);
      }
    }
    __cxa_end_catch();
LABEL_104:
    JUMPOUT(0x2157B1E04);
  }
  uint64_t v87 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v87);
  a37 = *((_OWORD *)v87 + 1);
  uint64_t v89 = *((void *)v87 + 4);
  uint64_t v88 = *((void *)v87 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v89;
  a39 = v88;
  if (v88) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v88 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  uint64_t v90 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    uint64_t v90 = *(const char **)v90;
  }
  size_t v91 = strlen(v90);
  if (v91 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_102;
  }
  uint64_t v92 = (const char *)v91;
  if (v91 >= 0x17)
  {
    uint64_t v96 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17) {
      uint64_t v96 = v91 | 7;
    }
    uint64_t v97 = v96 + 1;
    int64x2_t v93 = (std::logic_error_vtbl *)operator new(v96 + 1);
    a10.__imp_.__imp_ = v92;
    a11 = v97 | 0x8000000000000000;
    a10.__vftable = v93;
  }
  else
  {
    HIBYTE(a11) = v91;
    int64x2_t v93 = (std::logic_error_vtbl *)&a10;
    if (!v91)
    {
LABEL_79:
      v92[(void)v93] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC(&a68, &a14);
      LOBYTE(a79) = 1;
      sub_2157BC7BC(&a80, (uint64_t)&a67);
      if ((_BYTE)a79 && (_BYTE)a78)
      {
        if (a77)
        {
          if (a76 < 0) {
            operator delete(a75);
          }
          if (a74 < 0) {
            operator delete(a73);
          }
        }
        if (a72 && a71 < 0) {
          operator delete(a68);
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_104;
    }
  }
  memmove(v93, v90, (size_t)v92);
  goto LABEL_79;
}

BOOL VZServerIsClientLoggerEnabled(uint64_t a1, const void *a2, char *a3, uint64_t a4)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if (sub_2157B272C((uint64_t)"VZServerIsClientLoggerEnabled", a1, a4)
    || sub_2157B2AB4((uint64_t)"VZServerIsClientLoggerEnabled", (uint64_t)a2, a4))
  {
    return 0;
  }
  if (!a2 || (CFTypeID v9 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v9))
  {
    LOBYTE(v35[0]) = 0;
    char v36 = 0;
    sub_2157B6F38();
  }
  CFUUIDBytes v24 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v35[0] = sub_215DDA4C0((__n128 *)&v24);
  v35[1] = v10;
  char v36 = 1;
  sub_215968BFC(a3, (uint64_t *)(a1 + 16), (uint64_t)v35, v11);
  char v34 = "VZServerIsClientLoggerEnabled";
  if (v21) {
    return v11[0] != 0;
  }
  sub_21574F3D8("in function ", (const char *)&v34);
  sub_215E11614(v11, &v22, (uint64_t)&v24);
  sub_21573E208((long long *)&v24, a4);
  if (v33)
  {
    if (v32)
    {
      if (v31 < 0) {
        operator delete(__p);
      }
      if (v29 < 0) {
        operator delete(v28);
      }
    }
    if (v27 && v26 < 0) {
      operator delete(v25);
    }
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 || !v20) {
    return 0;
  }
  if (v19)
  {
    if (v18 < 0) {
      operator delete(v17);
    }
    if (v16 < 0) {
      operator delete(v15);
    }
  }
  BOOL result = 0;
  if (v14 && v13 < 0)
  {
    operator delete(v12);
    return 0;
  }
  return result;
}

void sub_2157B26E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_2157407D4((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_2157407D4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL sub_2157B272C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D178, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D178))
  {
    sub_2157BCFE8();
    int v7 = byte_26788DA3F;
    if (byte_26788DA3F >= 0) {
      size_t v8 = byte_26788DA3F;
    }
    else {
      size_t v8 = qword_26788DA30;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788DA10 + 1) = v8 + 1;
      unk_26788DA20 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788DA10 = v10;
    }
    else
    {
      unk_26788DA20 = 0;
      xmmword_26788DA10 = 0uLL;
      uint64_t v10 = &xmmword_26788DA10;
      byte_26788DA27 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DA10, &dword_21572C000);
        __cxa_guard_release(&qword_26788D178);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = &qword_26788DA28;
    }
    else {
      char v13 = (uint64_t *)qword_26788DA28;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DA27 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788DA10, *((unint64_t *)&xmmword_26788DA10 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788DA10;
    uint64_t v15 = unk_26788DA20;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157B2A60(_Unwind_Exception *a1)
{
}

void sub_2157B2A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL sub_2157B2AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D188, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D188))
  {
    sub_2157BD184();
    int v7 = byte_26788DA6F;
    if (byte_26788DA6F >= 0) {
      size_t v8 = byte_26788DA6F;
    }
    else {
      size_t v8 = qword_26788DA60;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      uint64_t v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788DA40 + 1) = v8 + 1;
      unk_26788DA50 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788DA40 = v10;
    }
    else
    {
      unk_26788DA50 = 0;
      xmmword_26788DA40 = 0uLL;
      uint64_t v10 = &xmmword_26788DA40;
      byte_26788DA57 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DA40, &dword_21572C000);
        __cxa_guard_release(&qword_26788D188);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      char v13 = &qword_26788DA58;
    }
    else {
      char v13 = (uint64_t *)qword_26788DA58;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DA57 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788DA40, *((unint64_t *)&xmmword_26788DA40 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788DA40;
    uint64_t v15 = unk_26788DA50;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157B2DE8(_Unwind_Exception *a1)
{
}

void sub_2157B2E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZServerGetClientLoggerEnableState(uint64_t a1, const void *a2, char *a3, uint64_t a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (sub_2157B272C((uint64_t)"VZServerGetClientLoggerEnableState", a1, a4)
    || sub_2157B2AB4((uint64_t)"VZServerGetClientLoggerEnableState", (uint64_t)a2, a4))
  {
    return 255;
  }
  if (!a2 || (CFTypeID v10 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v10)) {
    sub_2157B6F38();
  }
  CFUUIDBytes v23 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v24[0] = sub_215DDA4C0((__n128 *)&v23);
  v24[1] = v11;
  char v25 = 1;
  sub_215968E18(a3, (uint64_t *)(a1 + 16), (uint64_t)v24, v12);
  uint64_t v8 = sub_2157733DC((uint64_t)"VZServerGetClientLoggerEnableState", v12, 255, a4);
  if (!v22 && v21)
  {
    if (v20)
    {
      if (v19 < 0) {
        operator delete(__p);
      }
      if (v17 < 0) {
        operator delete(v16);
      }
    }
    if (v15 && v14 < 0) {
      operator delete(v13);
    }
  }
  return v8;
}

void sub_2157B2FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *VZServerCopyClientLoggerEnableStates(uint64_t a1, const void *a2, uint64_t a3)
{
  int v5 = (void *)a1;
  uint64_t v40 = *MEMORY[0x263EF8340];
  if (sub_2157B272C((uint64_t)"VZServerCopyClientLoggerEnableStates", a1, a3)
    || sub_2157B2AB4((uint64_t)"VZServerCopyClientLoggerEnableStates", (uint64_t)a2, a3))
  {
    return 0;
  }
  if (!a2 || (CFTypeID v7 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v7))
  {
    LOBYTE(v38[0]) = 0;
    char v39 = 0;
    sub_2157B6F38();
  }
  CFUUIDBytes v25 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v38[0] = sub_215DDA4C0((__n128 *)&v25);
  v38[1] = v8;
  char v39 = 1;
  uint64_t v36 = &v37;
  uint64_t v37 = a3;
  sub_215969034((uint64_t)(v5 + 2), (uint64_t)v38, (uint64_t)&v25);
  int v9 = v35;
  if (!v35)
  {
    __n128 v14 = (__n128)v25;
    sub_215741BFC(&v15, &v26);
    char v24 = 1;
    sub_2157BD518(&v36, (uint64_t)&v14);
    if (v24 && v23)
    {
      if (v22)
      {
        if (v21 < 0) {
          operator delete(__p);
        }
        if (v19 < 0) {
          operator delete(v18);
        }
      }
      if (v17 && v16 < 0)
      {
        operator delete(v15);
        if (v35) {
          goto LABEL_36;
        }
        goto LABEL_39;
      }
    }
    goto LABEL_35;
  }
  CFTypeID v10 = operator new(0x30uLL, MEMORY[0x263F8C180]);
  if (v10)
  {
    int v5 = v10;
    __n128 v11 = (__n128)v25;
    v10[3] = *(void *)&v25.byte8;
    uint64_t v12 = (char *)(v10 + 3);
    v10[2] = v11.n128_u64[0];
    uint64_t v13 = v26;
    v10[4] = v26;
    if (v13)
    {
      *(void *)(v11.n128_u64[1] + 16) = v12;
      *(void *)&v25.byte0 = &v25.byte8;
      *(void *)&v25.byte8 = 0;
      *(void *)&long long v26 = 0;
    }
    else
    {
      v10[2] = v12;
    }
    *((_DWORD *)v10 + 10) = 1;
    *CFTypeID v10 = &unk_26C6576E8;
    v10[1] = &unk_26C657738;
LABEL_35:
    if (v35) {
      goto LABEL_36;
    }
    goto LABEL_39;
  }
  v14.n128_u8[0] = 0;
  char v24 = 0;
  sub_2157BD518(&v36, (uint64_t)&v14);
  if (v24 && v23)
  {
    if (v22)
    {
      if (v21 < 0) {
        operator delete(__p);
      }
      if (v19 < 0) {
        operator delete(v18);
      }
    }
    int v5 = 0;
    if (v17 && v16 < 0)
    {
      operator delete(v15);
      int v5 = 0;
      if (v35) {
        goto LABEL_36;
      }
      goto LABEL_39;
    }
    goto LABEL_35;
  }
  int v5 = 0;
  if (v35)
  {
LABEL_36:
    sub_21573AE84((uint64_t)&v25, *(char **)&v25.byte8);
    if (v9) {
      return v5;
    }
    return 0;
  }
LABEL_39:
  if (v34)
  {
    if (v33)
    {
      if (v32 < 0) {
        operator delete(v31);
      }
      if (v30 < 0) {
        operator delete(v29);
      }
    }
    if (v28 && v27 < 0) {
      operator delete((void *)v26);
    }
  }
  if (!v9) {
    return 0;
  }
  return v5;
}

void sub_2157B32D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, long long a16, long long a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::runtime_error __p,int a30,__int16 a31,char a32,char a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a2)
  {
    sub_215740ECC((uint64_t)&a37);
    sub_2157BD964(v37 - 224);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(exception_object);
      std::logic_error::logic_error(&a10, exception_ptr);
      a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(exception_object);
      a9 = std::logic_error::what(&a10);
      sub_2157482C8(&__p, &a9);
      sub_2159644BC((long long *)&__p, (uint64_t)&a16);
      *(_OWORD *)(v37 - 224) = a16;
      sub_215741BFC((unsigned char *)(v37 - 208), &a17);
      *(unsigned char *)(v37 - 104) = 1;
      sub_2157BD518((uint64_t **)(v37 - 96), v37 - 224);
      sub_215740ECC(v37 - 224);
      sub_21573FF04((uint64_t)&a16);
      if (a34)
      {
        if (a33 < 0) {
          operator delete(__p.__vftable);
        }
      }
      MEMORY[0x2166C4250](&a10);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      uint64_t v41 = __cxa_get_exception_ptr(exception_object);
      sub_21574824C(&__p, (uint64_t)v41);
      __cxa_begin_catch(exception_object);
      char v42 = (const char *)(a35 + 48);
      if (*(char *)(a35 + 71) < 0) {
        char v42 = *(const char **)v42;
      }
      a9 = v42;
      sub_2157482C8(&a10, &a9);
      sub_215964DE4((long long *)&a10, (uint64_t)&a16);
      *(_OWORD *)(v37 - 224) = a16;
      sub_215741BFC((unsigned char *)(v37 - 208), &a17);
      *(unsigned char *)(v37 - 104) = 1;
      sub_2157BD518((uint64_t **)(v37 - 96), v37 - 224);
      sub_215740ECC(v37 - 224);
      sub_21573FF04((uint64_t)&a16);
      if (a15 && a14 < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__p);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(exception_object);
      *(unsigned char *)(v37 - 224) = 0;
      *(unsigned char *)(v37 - 104) = 0;
      sub_2157BD518((uint64_t **)(v37 - 96), v37 - 224);
      sub_215740ECC(v37 - 224);
      __cxa_end_catch();
    }
    JUMPOUT(0x2157B3024);
  }
  _Unwind_Resume(exception_object);
}

BOOL VZServerEnableClientLogger(uint64_t a1, const __CFUUID *a2, char *a3, uint64_t a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  BOOL result = sub_2157B3650((uint64_t)"VZServerEnableClientLogger", a1, a4);
  if (!result)
  {
    if (a2 && (CFTypeID v8 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v8))
    {
      CFUUIDBytes v10 = CFUUIDGetUUIDBytes(a2);
      v11[0] = sub_215DDA4C0((__n128 *)&v10);
      v11[1] = v9;
      char v12 = 1;
    }
    else
    {
      LOBYTE(v11[0]) = 0;
      char v12 = 0;
    }
    sub_215969278((uint64_t *)(a1 + 16), (uint64_t)v11, a3);
  }
  return result;
}

void sub_2157B3638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_2157B3650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1D0))
  {
    sub_2157BBFD8();
    int v7 = byte_26788D8BF;
    if (byte_26788D8BF >= 0) {
      size_t v8 = byte_26788D8BF;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788D8A8 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      CFUUIDBytes v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788DB18 + 1) = v8 + 1;
      unk_26788DB28 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788DB18 = v10;
    }
    else
    {
      unk_26788DB28 = 0;
      xmmword_26788DB18 = 0uLL;
      CFUUIDBytes v10 = &xmmword_26788DB18;
      byte_26788DB2F = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DB18, &dword_21572C000);
        __cxa_guard_release(&qword_26788D1D0);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      uint64_t v13 = &xmmword_26788D8A8;
    }
    else {
      uint64_t v13 = (long long *)xmmword_26788D8A8;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DB2F < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788DB18, *((unint64_t *)&xmmword_26788DB18 + 1));
  }
  else
  {
    *(_OWORD *)__n128 v14 = xmmword_26788DB18;
    uint64_t v15 = unk_26788DB28;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)long long __p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157B3984(_Unwind_Exception *a1)
{
}

void sub_2157B399C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

BOOL VZServerDisableClientLogger(uint64_t a1, const __CFUUID *a2, char *a3, uint64_t a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  BOOL result = sub_2157B3650((uint64_t)"VZServerDisableClientLogger", a1, a4);
  if (!result)
  {
    if (a2 && (CFTypeID v8 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v8))
    {
      CFUUIDBytes v10 = CFUUIDGetUUIDBytes(a2);
      v11[0] = sub_215DDA4C0((__n128 *)&v10);
      v11[1] = v9;
      char v12 = 1;
    }
    else
    {
      LOBYTE(v11[0]) = 0;
      char v12 = 0;
    }
    sub_215969580((uint64_t *)(a1 + 16), (uint64_t)v11, a3);
  }
  return result;
}

void sub_2157B3B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZServerSetClientLoggerEnableState(uint64_t a1, const __CFUUID *a2, char *a3, unsigned int a4, uint64_t a5)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (!sub_2157B3650((uint64_t)"VZServerSetClientLoggerEnableState", a1, a5))
  {
    if (a2 && (CFTypeID v10 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v10))
    {
      CFUUIDBytes v23 = CFUUIDGetUUIDBytes(a2);
      v24[0] = sub_215DDA4C0((__n128 *)&v23);
      v24[1] = v11;
      char v25 = 1;
    }
    else
    {
      LOBYTE(v24[0]) = 0;
      char v25 = 0;
    }
    sub_215969888(a3, (uint64_t *)(a1 + 16), (uint64_t)v24, a4, (uint64_t)v12);
    sub_21575059C((uint64_t)"VZServerSetClientLoggerEnableState", v12, a5);
    if (!v22)
    {
      if (v21)
      {
        if (v20)
        {
          if (v19 < 0) {
            operator delete(__p);
          }
          if (v17 < 0) {
            operator delete(v16);
          }
        }
        if (v15)
        {
          if (v14 < 0) {
            operator delete(v13);
          }
        }
      }
    }
  }
}

void sub_2157B3C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL VZServerSetClientLoggerEnableStates(uint64_t a1, const __CFUUID *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  BOOL result = sub_2157B3650((uint64_t)"VZServerSetClientLoggerEnableStates", a1, a4);
  if (!result)
  {
    BOOL result = sub_215773008((uint64_t)"VZServerSetClientLoggerEnableStates", a3, a4);
    if (!result)
    {
      if (a2 && (CFTypeID v9 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v9))
      {
        CFUUIDBytes v11 = CFUUIDGetUUIDBytes(a2);
        v12[0] = sub_215DDA4C0((__n128 *)&v11);
        v12[1] = v10;
        char v13 = 1;
      }
      else
      {
        LOBYTE(v12[0]) = 0;
        char v13 = 0;
      }
      sub_215969C60((uint64_t *)(a1 + 16), (uint64_t)v12, (const void ***)(a3 + 16));
    }
  }
  return result;
}

void sub_2157B3E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

const char *VZSyncControlStateIdProceeding()
{
  return "proceeding";
}

const char *VZSyncControlStateIdWaiting()
{
  return "waiting";
}

const char *VZSyncControlStateIdLockstep()
{
  return "lockstep";
}

uint64_t VZSyncControlGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D1E0))
  {
    return qword_26788D1D8;
  }
  qword_26788D1D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D1E0);
  return qword_26788D1D8;
}

void *VZServerGetSyncControl(uint64_t a1)
{
  BOOL v2 = sub_2157B272C((uint64_t)"VZServerGetSyncControl", a1, 0);
  BOOL result = 0;
  if (!v2)
  {
    BOOL result = *(void **)(a1 + 80);
    if (!result)
    {
      if (*(unsigned char *)(a1 + 64))
      {
        BOOL result = sub_2157B7C68(a1 + 32);
        uint64_t v4 = *(void *)(a1 + 80);
        *(void *)(a1 + 80) = result;
        if (v4)
        {
          (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
          return *(void **)(a1 + 80);
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void *VZServerGetSyncControlMutable(uint64_t a1)
{
  BOOL v2 = sub_2157B3650((uint64_t)"VZServerGetSyncControlMutable", a1, 0);
  BOOL result = 0;
  if (!v2)
  {
    BOOL result = *(void **)(a1 + 80);
    if (!result)
    {
      if (*(unsigned char *)(a1 + 64))
      {
        BOOL result = sub_2157B7C68(a1 + 32);
        uint64_t v4 = *(void *)(a1 + 80);
        *(void *)(a1 + 80) = result;
        if (v4)
        {
          (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
          return *(void **)(a1 + 80);
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t VZSyncControlGetStateId(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(uint64_t (**)(void))(**(void **)(a1 + 32) + 56);
    return v1();
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1E8))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1F0, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788D1F0))
    {
      goto LABEL_40;
    }
    sub_2157B7FE0();
    int v10 = byte_26788D52F;
    if (byte_26788D52F >= 0) {
      size_t v11 = byte_26788D52F;
    }
    else {
      size_t v11 = *((void *)&xmmword_26788D518 + 1);
    }
    unint64_t v12 = v11 + 6;
    if (v11 + 6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    if (v12 >= 0x17)
    {
      uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v14 = v12 | 7;
      }
      uint64_t v15 = v14 + 1;
      char v16 = (char *)operator new(v14 + 1);
      qword_26788DB50 = v11 + 6;
      unk_26788DB58 = v15 | 0x8000000000000000;
      qword_26788DB48 = (uint64_t)v16;
      *(_DWORD *)char v16 = 1936617315;
      *((_WORD *)v16 + 2) = 8308;
      char v13 = v16 + 6;
    }
    else
    {
      qword_26788DB50 = 0;
      unk_26788DB58 = 0;
      qword_26788DB48 = 0x2074736E6F63;
      byte_26788DB5F = v11 + 6;
      char v13 = (char *)&qword_26788DB48 + 6;
      if (!v11)
      {
LABEL_71:
        v13[v11] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DB48, &dword_21572C000);
        __cxa_guard_release(&qword_26788D1F0);
LABEL_40:
        int v3 = byte_26788DB5F;
        if (byte_26788DB5F >= 0) {
          size_t v4 = byte_26788DB5F;
        }
        else {
          size_t v4 = qword_26788DB50;
        }
        unint64_t v5 = v4 + 1;
        if (v4 + 1 > 0x7FFFFFFFFFFFFFF7) {
          sub_215731CD8();
        }
        if (v5 >= 0x17)
        {
          uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v5 | 7) != 0x17) {
            uint64_t v7 = v5 | 7;
          }
          uint64_t v8 = v7 + 1;
          char v6 = (long long *)operator new(v7 + 1);
          *((void *)&xmmword_26788DB30 + 1) = v4 + 1;
          unk_26788DB40 = v8 | 0x8000000000000000;
          *(void *)&xmmword_26788DB30 = v6;
        }
        else
        {
          unk_26788DB40 = 0;
          xmmword_26788DB30 = 0uLL;
          char v6 = &xmmword_26788DB30;
          byte_26788DB47 = v4 + 1;
          if (!v4)
          {
LABEL_54:
            *(_WORD *)((char *)v6 + v4) = 42;
            __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DB30, &dword_21572C000);
            __cxa_guard_release(&qword_26788D1E8);
            goto LABEL_6;
          }
        }
        if (v3 >= 0) {
          CFTypeID v9 = &qword_26788DB48;
        }
        else {
          CFTypeID v9 = (uint64_t *)qword_26788DB48;
        }
        memmove(v6, v9, v4);
        goto LABEL_54;
      }
    }
    if (v10 >= 0) {
      char v17 = &xmmword_26788D518;
    }
    else {
      char v17 = (long long *)xmmword_26788D518;
    }
    memmove(v13, v17, v11);
    goto LABEL_71;
  }
LABEL_6:
  if (byte_26788DB47 < 0)
  {
    sub_215738B0C(v18, (void *)xmmword_26788DB30, *((unint64_t *)&xmmword_26788DB30 + 1));
  }
  else
  {
    *(_OWORD *)long long v18 = xmmword_26788DB30;
    uint64_t v19 = unk_26788DB40;
  }
  char v20 = 1;
  sub_21573FF94((uint64_t)"VZSyncControlGetStateId", (uint64_t)v18, (uint64_t)&v21);
  long long v32 = v21;
  LOBYTE(v33) = 0;
  char v42 = 0;
  if (v31)
  {
    char v35 = 0;
    if (v24)
    {
      long long v33 = v22;
      uint64_t v34 = v23;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      char v35 = 1;
    }
    LOBYTE(v36) = 0;
    char v41 = 0;
    if (v30)
    {
      uint64_t v37 = v26;
      long long v36 = *(_OWORD *)v25;
      v25[0] = 0;
      v25[1] = 0;
      uint64_t v38 = v27;
      *(_OWORD *)long long __p = *(_OWORD *)v28;
      uint64_t v40 = v29;
      uint64_t v26 = 0;
      v28[0] = 0;
      v28[1] = 0;
      uint64_t v29 = 0;
      char v41 = 1;
    }
    char v42 = 1;
  }
  char v43 = 0;
  sub_21573E208(&v32, 0);
  if (!v43 && v42)
  {
    if (v41)
    {
      if (SHIBYTE(v40) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v37) < 0) {
        operator delete((void *)v36);
      }
    }
    if (v35 && SHIBYTE(v34) < 0) {
      operator delete((void *)v33);
    }
  }
  if (v31)
  {
    if (v30)
    {
      if (SHIBYTE(v29) < 0) {
        operator delete(v28[0]);
      }
      if (SHIBYTE(v26) < 0) {
        operator delete(v25[0]);
      }
    }
    if (v24 && SHIBYTE(v23) < 0) {
      operator delete((void *)v22);
    }
  }
  if (v20 && SHIBYTE(v19) < 0) {
    operator delete(v18[0]);
  }
  return 0;
}

void sub_2157B44AC(_Unwind_Exception *a1)
{
}

void sub_2157B44D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,int a40,char a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (!a68 && a66)
  {
    if (a64)
    {
      if (a63 < 0) {
        operator delete(__p);
      }
      if (a56 < 0) {
        operator delete(a51);
      }
    }
    if (a50 && a49 < 0) {
      operator delete(a44);
    }
  }
  if (a41)
  {
    if (a39)
    {
      if (a38 < 0) {
        operator delete(a33);
      }
      if (a31 < 0) {
        operator delete(a26);
      }
    }
    if (a25 && a24 < 0) {
      operator delete(a19);
    }
  }
  if (a15)
  {
    if (a14 < 0) {
      operator delete(a9);
    }
  }
  _Unwind_Resume(a1);
}

void VZSyncControlWaitIndefinitely(uint64_t a1)
{
  if (!sub_2157B466C((uint64_t)"VZSyncControlWaitIndefinitely", a1))
  {
    sub_2159679D0(a1 + 16, (uint64_t)v2);
    sub_21575059C((uint64_t)"VZSyncControlWaitIndefinitely", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0) {
            operator delete(__p);
          }
          if (v7 < 0) {
            operator delete(v6);
          }
        }
        if (v5)
        {
          if (v4 < 0) {
            operator delete(v3);
          }
        }
      }
    }
  }
}

void sub_2157B4658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_2157B466C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1F8))
  {
    sub_2157B7FE0();
    int v5 = byte_26788D52F;
    if (byte_26788D52F >= 0) {
      size_t v6 = byte_26788D52F;
    }
    else {
      size_t v6 = *((void *)&xmmword_26788D518 + 1);
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788DB60 + 1) = v6 + 1;
      unk_26788DB70 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788DB60 = v8;
    }
    else
    {
      unk_26788DB70 = 0;
      xmmword_26788DB60 = 0uLL;
      uint64_t v8 = &xmmword_26788DB60;
      byte_26788DB77 = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DB60, &dword_21572C000);
        __cxa_guard_release(&qword_26788D1F8);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &xmmword_26788D518;
    }
    else {
      char v11 = (long long *)xmmword_26788D518;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DB77 < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788DB60, *((unint64_t *)&xmmword_26788DB60 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788DB60;
    uint64_t v13 = unk_26788DB70;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)long long __p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157B499C(_Unwind_Exception *a1)
{
}

void sub_2157B49B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void VZSyncControlProceedIndefinitely(uint64_t a1)
{
  if (!sub_2157B466C((uint64_t)"VZSyncControlProceedIndefinitely", a1))
  {
    sub_215967C0C(a1 + 16, (uint64_t)v2);
    sub_21575059C((uint64_t)"VZSyncControlProceedIndefinitely", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0) {
            operator delete(__p);
          }
          if (v7 < 0) {
            operator delete(v6);
          }
        }
        if (v5)
        {
          if (v4 < 0) {
            operator delete(v3);
          }
        }
      }
    }
  }
}

void sub_2157B4AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void VZSyncControlContinue(uint64_t a1)
{
  if (!sub_2157B466C((uint64_t)"VZSyncControlContinue", a1))
  {
    (*(void (**)(void))(**(void **)(a1 + 32) + 40))(*(void *)(a1 + 32));
    char v12 = 1;
    sub_21575059C((uint64_t)"VZSyncControlContinue", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0) {
            operator delete(__p);
          }
          if (v7 < 0) {
            operator delete(v6);
          }
        }
        if (v5)
        {
          if (v4 < 0) {
            operator delete(v3);
          }
        }
      }
    }
  }
}

void sub_2157B4BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL VZSyncControlEngageLockstepPattern(uint64_t a1)
{
  BOOL result = sub_2157B466C((uint64_t)"VZSyncControlEngageLockstepPattern", a1);
  if (!result) {
    sub_215967E48();
  }
  return result;
}

void sub_2157B4C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157B4C84(uint64_t result)
{
  return result;
}

uint64_t sub_2157B4C94(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 248), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B4CD0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D028, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D028))
  {
    return qword_26788D020;
  }
  qword_26788D020 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D028);
  return qword_26788D020;
}

void *sub_2157B4D34(uint64_t a1, void *lpsrc)
{
  BOOL result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658BE8, 0);
  if (result)
  {
    v5[0] = a1 + 16;
    v5[1] = a1 + 32;
    _DWORD v5[2] = a1 + 72;
    v5[3] = a1 + 224;
    v4[0] = (uint64_t)result + 16;
    v4[1] = (uint64_t)result + 32;
    v4[2] = (uint64_t)result + 72;
    v4[3] = (uint64_t)result + 224;
    return (void *)sub_215AED0B0((uint64_t)&v6, v5, v4);
  }
  return result;
}

uint64_t sub_2157B4DE8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  __cxa_begin_catch(a1);
  sub_2157B71B0();
  sub_215732BF4(v28, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788D230, v28, 0);
  if (v29 < 0) {
    operator delete((void *)v28[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_2157B4E40(uint64_t a1)
{
  sub_2157B71B0();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B5094(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157B71B0();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D230, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B5174(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 248));
}

uint64_t sub_2157B5180(uint64_t result)
{
  return result;
}

uint64_t sub_2157B5190(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 256), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B51CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D038, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D038))
  {
    return qword_26788D030;
  }
  qword_26788D030 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D038);
  return qword_26788D030;
}

unsigned __int8 *sub_2157B5230(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  BOOL result = (unsigned __int8 *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658CE0, 0);
  if (result)
  {
    if (*(unsigned __int8 *)(a1 + 16) == result[16])
    {
      v17[0] = a1 + 24;
      v17[1] = a1 + 40;
      v17[2] = a1 + 80;
      v17[3] = a1 + 232;
      v16[0] = (uint64_t)(result + 24);
      v16[1] = (uint64_t)(result + 40);
      v16[2] = (uint64_t)(result + 80);
      v16[3] = (uint64_t)(result + 232);
      return (unsigned __int8 *)sub_215AED0B0((uint64_t)&v18, v17, v16);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_2157B534C(uint64_t a1)
{
  sub_2157B8CD8();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B55A0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157B8CD8();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D5C0, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B5680(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 256));
}

uint64_t sub_2157B568C(uint64_t result)
{
  return result;
}

uint64_t sub_2157B569C(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 40), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B56D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D068, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D068))
  {
    return qword_26788D060;
  }
  qword_26788D060 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D068);
  return qword_26788D060;
}

char *sub_2157B573C(uint64_t a1, void *lpsrc)
{
  BOOL result = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658DD8, 0);
  if (result)
  {
    uint64_t v5 = a1 + 16;
    char v4 = result + 16;
    return (char *)sub_2157BDB2C((uint64_t)&v5, &v4);
  }
  return result;
}

uint64_t sub_2157B57D4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  __cxa_begin_catch(a1);
  sub_2157B9F64();
  sub_215732BF4(v22, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788D680, v22, 0);
  if (v23 < 0) {
    operator delete((void *)v22[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_2157B582C(uint64_t a1)
{
  sub_2157B9F64();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B5AAC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_215733368((uint64_t)&v36);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157B9F64();
  sub_215732BF4(v34, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D680, v34, 0);
  if (v35 < 0) {
    operator delete((void *)v34[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B5B8C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

uint64_t sub_2157B5B98(uint64_t result)
{
  return result;
}

uint64_t sub_2157B5BA8(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 152), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B5BE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D088, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D088))
  {
    return qword_26788D080;
  }
  qword_26788D080 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D088);
  return qword_26788D080;
}

_DWORD *sub_2157B5C48(uint64_t a1, void *lpsrc)
{
  BOOL result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658ED0, 0);
  if (result)
  {
    int v4 = *((unsigned __int8 *)result + 24);
    if (*(unsigned char *)(a1 + 24)) {
      BOOL v5 = v4 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
      if (*(unsigned __int16 *)(a1 + 16) != *((unsigned __int16 *)result + 8) || *(_DWORD *)(a1 + 20) != result[5]) {
        return 0;
      }
LABEL_15:
      if (*(unsigned __int8 *)(a1 + 28) == *((unsigned __int8 *)result + 28))
      {
        if (*(unsigned char *)(a1 + 56) && *((unsigned char *)result + 56))
        {
          uint64_t v8 = *(char **)(a1 + 32);
          char v7 = *(char **)(a1 + 40);
          char v9 = (void *)*((void *)result + 4);
          if (v7 - v8 == *((void *)result + 5) - (void)v9)
          {
            if (v8 != v7)
            {
              while (*(void *)v8 == *v9)
              {
                v8 += 16;
                v9 += 2;
                if (v8 == v7) {
                  return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
                }
              }
              return 0;
            }
            return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
          }
        }
        else if ((*(unsigned char *)(a1 + 56) != 0) == (*((unsigned char *)result + 56) != 0))
        {
          return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
        }
      }
      return 0;
    }
    if (!(v4 | *(unsigned __int8 *)(a1 + 24))) {
      goto LABEL_15;
    }
    return 0;
  }
  return result;
}

void sub_2157B5D98(uint64_t a1)
{
  sub_2157BA844();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B5FEC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157BA844();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D788, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B60CC(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 152));
}

uint64_t sub_2157B60D8(uint64_t result)
{
  return result;
}

uint64_t sub_2157B60E8(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 72), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B6124()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0B8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D0B8))
  {
    return qword_26788D0B0;
  }
  qword_26788D0B0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D0B8);
  return qword_26788D0B0;
}

void *sub_2157B6188(uint64_t a1, void *lpsrc)
{
  BOOL result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C658FC8, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]);
  }
  return result;
}

void sub_2157B6204(uint64_t a1)
{
  sub_2157BBFD8();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B6458(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157BBFD8();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D8A8, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B6538(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 72));
}

uint64_t sub_2157B6544(uint64_t result)
{
  return result;
}

uint64_t sub_2157B6554(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 48), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157B6590()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D1E0))
  {
    return qword_26788D1D8;
  }
  qword_26788D1D8 = sub_21573DD88();
  __cxa_guard_release(&qword_26788D1E0);
  return qword_26788D1D8;
}

void *sub_2157B65F4(uint64_t a1, void *lpsrc)
{
  BOOL result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6590C0, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]);
  }
  return result;
}

void sub_2157B6670(uint64_t a1)
{
  sub_2157B7FE0();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157B68C4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157B7FE0();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788D518, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157B69A4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 48));
}

uint64_t sub_2157B69B0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 144)) {
    return a1;
  }
  if (*(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
LABEL_4:
      if ((*(char *)(a1 + 95) & 0x80000000) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 72));
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_14;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
LABEL_14:
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_2157B6A74(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 128)) {
    goto LABEL_5;
  }
  uint64_t v2 = a1 + 96;
  uint64_t v3 = *(void *)(a1 + 120);
  if (v3 != a1 + 96)
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
LABEL_5:
    if (!*(unsigned char *)(a1 + 88)) {
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 96);
  if (!*(unsigned char *)(a1 + 88)) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 80);
  if (v4 == a1 + 56)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 56) + 32))(a1 + 56);
  }
  else if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
LABEL_12:
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 24);
      char v7 = *(void **)(a1 + 16);
      if (v6 != v5)
      {
        do
        {
          uint64_t v8 = *(std::__shared_weak_count **)(v6 - 8);
          if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
          v6 -= 16;
        }
        while (v6 != v5);
        char v7 = *(void **)(a1 + 16);
      }
      *(void *)(a1 + 24) = v5;
      operator delete(v7);
    }
  }
  return a1;
}

uint64_t sub_2157B6C10(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

uint64_t sub_2157B6CA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 24);
      uint64_t v4 = *(void **)(a1 + 16);
      if (v3 != v2)
      {
        do
        {
          uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        uint64_t v4 = *(void **)(a1 + 16);
      }
      *(void *)(a1 + 24) = v2;
      operator delete(v4);
    }
  }
  return a1;
}

void sub_2157B6D64(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659120;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157B6D84(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659120;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157B6DD8(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    _Block_release(v1);
  }
}

void sub_2157B6E00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659170;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157B6E20(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659170;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157B6E74(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    _Block_release(v1);
  }
}

void sub_2157B6E9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6591C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157B6EBC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C6591C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157B6F10(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 24);
  if (v1) {
    _Block_release(v1);
  }
}

void sub_2157B6F38()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x263F8C3B0] + 16;
  __cxa_throw(exception, MEMORY[0x263F8C200], MEMORY[0x263F8C088]);
}